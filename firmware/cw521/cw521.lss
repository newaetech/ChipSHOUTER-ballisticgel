
cw521.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a7a4  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008a7a4  0008a7a4  0001a7a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000d58  20000000  0008a7ac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000029bc  20000d58  0008b504  00020d58  2**2
                  ALLOC
  4 .stack        00003000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020d58  2**0
                  CONTENTS, READONLY
  6 .comment      00000049  00000000  00000000  00020d81  2**0
                  CONTENTS, READONLY
  7 .debug_info   000161e9  00000000  00000000  00020dca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00004552  00000000  00000000  00036fb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_loc    0000a42e  00000000  00000000  0003b505  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_aranges 00000e70  00000000  00000000  00045933  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_ranges 00002cd0  00000000  00000000  000467a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_macro  0001b0de  00000000  00000000  00049473  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   0001ce69  00000000  00000000  00064551  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    0005cddc  00000000  00000000  000813ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_frame  00003904  00000000  00000000  000de198  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 30 08 20 4d 1b 08 00 49 15 08 00 49 15 08 00     .0. M...I...I...
   80010:	49 15 08 00 49 15 08 00 49 15 08 00 00 00 00 00     I...I...I.......
   80020:	00 00 00 00 00 00 00 00 00 00 00 00 49 15 08 00     ............I...
   80030:	49 15 08 00 00 00 00 00 49 15 08 00 49 15 08 00     I.......I...I...
   80040:	49 15 08 00 49 15 08 00 49 15 08 00 49 15 08 00     I...I...I...I...
   80050:	49 15 08 00 49 15 08 00 49 15 08 00 49 15 08 00     I...I...I...I...
   80060:	49 15 08 00 49 15 08 00 ed 16 08 00 fd 16 08 00     I...I...........
   80070:	0d 17 08 00 49 15 08 00 49 15 08 00 49 15 08 00     ....I...I...I...
   80080:	49 15 08 00 49 15 08 00 49 15 08 00 49 15 08 00     I...I...I...I...
   80090:	49 15 08 00 49 15 08 00 49 15 08 00 49 15 08 00     I...I...I...I...
   800a0:	49 15 08 00 49 15 08 00 49 15 08 00 49 15 08 00     I...I...I...I...
   800b0:	49 15 08 00 8d 22 08 00 49 15 08 00                 I...."..I...

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000d58 	.word	0x20000d58
   800d8:	00000000 	.word	0x00000000
   800dc:	0008a7ac 	.word	0x0008a7ac

000800e0 <frame_dummy>:
   800e0:	b508      	push	{r3, lr}
   800e2:	4b03      	ldr	r3, [pc, #12]	; (800f0 <frame_dummy+0x10>)
   800e4:	b11b      	cbz	r3, 800ee <frame_dummy+0xe>
   800e6:	4903      	ldr	r1, [pc, #12]	; (800f4 <frame_dummy+0x14>)
   800e8:	4803      	ldr	r0, [pc, #12]	; (800f8 <frame_dummy+0x18>)
   800ea:	f3af 8000 	nop.w
   800ee:	bd08      	pop	{r3, pc}
   800f0:	00000000 	.word	0x00000000
   800f4:	20000d5c 	.word	0x20000d5c
   800f8:	0008a7ac 	.word	0x0008a7ac

000800fc <usart_serial_getchar>:
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   800fc:	2200      	movs	r2, #0
{
   800fe:	b5f0      	push	{r4, r5, r6, r7, lr}

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80100:	4b1e      	ldr	r3, [pc, #120]	; (8017c <usart_serial_getchar+0x80>)
{
   80102:	b083      	sub	sp, #12
	if (UART == (Uart*)p_usart) {
   80104:	4298      	cmp	r0, r3
{
   80106:	4604      	mov	r4, r0
   80108:	460f      	mov	r7, r1
	uint32_t val = 0;
   8010a:	9201      	str	r2, [sp, #4]
	if (UART == (Uart*)p_usart) {
   8010c:	d023      	beq.n	80156 <usart_serial_getchar+0x5a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8010e:	4b1c      	ldr	r3, [pc, #112]	; (80180 <usart_serial_getchar+0x84>)
   80110:	4298      	cmp	r0, r3
   80112:	d00d      	beq.n	80130 <usart_serial_getchar+0x34>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80114:	4b1b      	ldr	r3, [pc, #108]	; (80184 <usart_serial_getchar+0x88>)
   80116:	4298      	cmp	r0, r3
   80118:	d112      	bne.n	80140 <usart_serial_getchar+0x44>
   8011a:	4e1b      	ldr	r6, [pc, #108]	; (80188 <usart_serial_getchar+0x8c>)
   8011c:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   8011e:	4629      	mov	r1, r5
   80120:	4620      	mov	r0, r4
   80122:	47b0      	blx	r6
   80124:	2800      	cmp	r0, #0
   80126:	d1fa      	bne.n	8011e <usart_serial_getchar+0x22>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
   80128:	9b01      	ldr	r3, [sp, #4]
   8012a:	703b      	strb	r3, [r7, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8012c:	b003      	add	sp, #12
   8012e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80130:	4e15      	ldr	r6, [pc, #84]	; (80188 <usart_serial_getchar+0x8c>)
   80132:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   80134:	4629      	mov	r1, r5
   80136:	4620      	mov	r0, r4
   80138:	47b0      	blx	r6
   8013a:	2800      	cmp	r0, #0
   8013c:	d1fa      	bne.n	80134 <usart_serial_getchar+0x38>
   8013e:	e7f3      	b.n	80128 <usart_serial_getchar+0x2c>
	if (USART2 == p_usart) {
   80140:	4b12      	ldr	r3, [pc, #72]	; (8018c <usart_serial_getchar+0x90>)
   80142:	4298      	cmp	r0, r3
   80144:	d10f      	bne.n	80166 <usart_serial_getchar+0x6a>
   80146:	4e10      	ldr	r6, [pc, #64]	; (80188 <usart_serial_getchar+0x8c>)
   80148:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   8014a:	4629      	mov	r1, r5
   8014c:	4620      	mov	r0, r4
   8014e:	47b0      	blx	r6
   80150:	2800      	cmp	r0, #0
   80152:	d1fa      	bne.n	8014a <usart_serial_getchar+0x4e>
   80154:	e7e8      	b.n	80128 <usart_serial_getchar+0x2c>
   80156:	4d0e      	ldr	r5, [pc, #56]	; (80190 <usart_serial_getchar+0x94>)
		while (uart_read((Uart*)p_usart, data));
   80158:	4639      	mov	r1, r7
   8015a:	4620      	mov	r0, r4
   8015c:	47a8      	blx	r5
   8015e:	2800      	cmp	r0, #0
   80160:	d1fa      	bne.n	80158 <usart_serial_getchar+0x5c>
}
   80162:	b003      	add	sp, #12
   80164:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (USART3 == p_usart) {
   80166:	4b0b      	ldr	r3, [pc, #44]	; (80194 <usart_serial_getchar+0x98>)
   80168:	4298      	cmp	r0, r3
   8016a:	d1df      	bne.n	8012c <usart_serial_getchar+0x30>
   8016c:	4e06      	ldr	r6, [pc, #24]	; (80188 <usart_serial_getchar+0x8c>)
   8016e:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   80170:	4629      	mov	r1, r5
   80172:	4620      	mov	r0, r4
   80174:	47b0      	blx	r6
   80176:	2800      	cmp	r0, #0
   80178:	d1fa      	bne.n	80170 <usart_serial_getchar+0x74>
   8017a:	e7d5      	b.n	80128 <usart_serial_getchar+0x2c>
   8017c:	400e0600 	.word	0x400e0600
   80180:	40090000 	.word	0x40090000
   80184:	40094000 	.word	0x40094000
   80188:	00083309 	.word	0x00083309
   8018c:	40098000 	.word	0x40098000
   80190:	00081e35 	.word	0x00081e35
   80194:	4009c000 	.word	0x4009c000

00080198 <usart_serial_putchar>:
	if (UART == (Uart*)p_usart) {
   80198:	4b1d      	ldr	r3, [pc, #116]	; (80210 <usart_serial_putchar+0x78>)
{
   8019a:	b570      	push	{r4, r5, r6, lr}
	if (UART == (Uart*)p_usart) {
   8019c:	4298      	cmp	r0, r3
{
   8019e:	4604      	mov	r4, r0
   801a0:	460e      	mov	r6, r1
	if (UART == (Uart*)p_usart) {
   801a2:	d015      	beq.n	801d0 <usart_serial_putchar+0x38>
	if (USART0 == p_usart) {
   801a4:	4b1b      	ldr	r3, [pc, #108]	; (80214 <usart_serial_putchar+0x7c>)
   801a6:	4298      	cmp	r0, r3
   801a8:	d01a      	beq.n	801e0 <usart_serial_putchar+0x48>
	if (USART1 == p_usart) {
   801aa:	4b1b      	ldr	r3, [pc, #108]	; (80218 <usart_serial_putchar+0x80>)
   801ac:	4298      	cmp	r0, r3
   801ae:	d01f      	beq.n	801f0 <usart_serial_putchar+0x58>
	if (USART2 == p_usart) {
   801b0:	4b1a      	ldr	r3, [pc, #104]	; (8021c <usart_serial_putchar+0x84>)
   801b2:	4298      	cmp	r0, r3
   801b4:	d004      	beq.n	801c0 <usart_serial_putchar+0x28>
	if (USART3 == p_usart) {
   801b6:	4b1a      	ldr	r3, [pc, #104]	; (80220 <usart_serial_putchar+0x88>)
   801b8:	4298      	cmp	r0, r3
   801ba:	d021      	beq.n	80200 <usart_serial_putchar+0x68>
	return 0;
   801bc:	2000      	movs	r0, #0
}
   801be:	bd70      	pop	{r4, r5, r6, pc}
   801c0:	4d18      	ldr	r5, [pc, #96]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801c2:	4631      	mov	r1, r6
   801c4:	4620      	mov	r0, r4
   801c6:	47a8      	blx	r5
   801c8:	2800      	cmp	r0, #0
   801ca:	d1fa      	bne.n	801c2 <usart_serial_putchar+0x2a>
		return 1;
   801cc:	2001      	movs	r0, #1
}
   801ce:	bd70      	pop	{r4, r5, r6, pc}
   801d0:	4d15      	ldr	r5, [pc, #84]	; (80228 <usart_serial_putchar+0x90>)
		while (uart_write((Uart*)p_usart, c)!=0);
   801d2:	4631      	mov	r1, r6
   801d4:	4620      	mov	r0, r4
   801d6:	47a8      	blx	r5
   801d8:	2800      	cmp	r0, #0
   801da:	d1fa      	bne.n	801d2 <usart_serial_putchar+0x3a>
		return 1;
   801dc:	2001      	movs	r0, #1
   801de:	e7f6      	b.n	801ce <usart_serial_putchar+0x36>
   801e0:	4d10      	ldr	r5, [pc, #64]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801e2:	4631      	mov	r1, r6
   801e4:	4620      	mov	r0, r4
   801e6:	47a8      	blx	r5
   801e8:	2800      	cmp	r0, #0
   801ea:	d1fa      	bne.n	801e2 <usart_serial_putchar+0x4a>
		return 1;
   801ec:	2001      	movs	r0, #1
   801ee:	e7ee      	b.n	801ce <usart_serial_putchar+0x36>
   801f0:	4d0c      	ldr	r5, [pc, #48]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801f2:	4631      	mov	r1, r6
   801f4:	4620      	mov	r0, r4
   801f6:	47a8      	blx	r5
   801f8:	2800      	cmp	r0, #0
   801fa:	d1fa      	bne.n	801f2 <usart_serial_putchar+0x5a>
		return 1;
   801fc:	2001      	movs	r0, #1
   801fe:	e7e6      	b.n	801ce <usart_serial_putchar+0x36>
   80200:	4d08      	ldr	r5, [pc, #32]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   80202:	4631      	mov	r1, r6
   80204:	4620      	mov	r0, r4
   80206:	47a8      	blx	r5
   80208:	2800      	cmp	r0, #0
   8020a:	d1fa      	bne.n	80202 <usart_serial_putchar+0x6a>
   8020c:	e7de      	b.n	801cc <usart_serial_putchar+0x34>
   8020e:	bf00      	nop
   80210:	400e0600 	.word	0x400e0600
   80214:	40090000 	.word	0x40090000
   80218:	40094000 	.word	0x40094000
   8021c:	40098000 	.word	0x40098000
   80220:	4009c000 	.word	0x4009c000
   80224:	000832f5 	.word	0x000832f5
   80228:	00081e25 	.word	0x00081e25

0008022c <main>:
int main(void)
{
  uint32_t serial_number[4];

  // Read Device-ID from SAM3U. Do this before enabling interrupts etc.
  flash_read_unique_id(serial_number, sizeof(serial_number));
   8022c:	2110      	movs	r1, #16
{
   8022e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   80232:	b088      	sub	sp, #32
  flash_read_unique_id(serial_number, sizeof(serial_number));
   80234:	eb0d 0001 	add.w	r0, sp, r1
   80238:	4b76      	ldr	r3, [pc, #472]	; (80414 <main+0x1e8>)
   8023a:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8023c:	4f76      	ldr	r7, [pc, #472]	; (80418 <main+0x1ec>)
   8023e:	2008      	movs	r0, #8
   80240:	47b8      	blx	r7
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80242:	4c76      	ldr	r4, [pc, #472]	; (8041c <main+0x1f0>)
   80244:	4a76      	ldr	r2, [pc, #472]	; (80420 <main+0x1f4>)
	uart_settings.ul_mode = opt->paritytype;
   80246:	f44f 6100 	mov.w	r1, #2048	; 0x800
   8024a:	6014      	str	r4, [r2, #0]
	uart_settings.ul_baudrate = opt->baudrate;
   8024c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80250:	4b74      	ldr	r3, [pc, #464]	; (80424 <main+0x1f8>)
   80252:	e9cd 2102 	strd	r2, r1, [sp, #8]
   80256:	4a74      	ldr	r2, [pc, #464]	; (80428 <main+0x1fc>)
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80258:	4d74      	ldr	r5, [pc, #464]	; (8042c <main+0x200>)
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   8025a:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8025c:	4a74      	ldr	r2, [pc, #464]	; (80430 <main+0x204>)
   8025e:	4b75      	ldr	r3, [pc, #468]	; (80434 <main+0x208>)
   80260:	2008      	movs	r0, #8
   80262:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80264:	4b74      	ldr	r3, [pc, #464]	; (80438 <main+0x20c>)
   80266:	9301      	str	r3, [sp, #4]
   80268:	47b8      	blx	r7
		uart_init((Uart*)p_usart, &uart_settings);
   8026a:	a901      	add	r1, sp, #4
   8026c:	4620      	mov	r0, r4
   8026e:	4b73      	ldr	r3, [pc, #460]	; (8043c <main+0x210>)
   80270:	4798      	blx	r3
	setbuf(stdout, NULL);
   80272:	682b      	ldr	r3, [r5, #0]
   80274:	4c72      	ldr	r4, [pc, #456]	; (80440 <main+0x214>)
   80276:	6898      	ldr	r0, [r3, #8]
   80278:	2100      	movs	r1, #0
   8027a:	47a0      	blx	r4
	setbuf(stdin, NULL);
   8027c:	682b      	ldr	r3, [r5, #0]
   8027e:	2100      	movs	r1, #0
   80280:	6858      	ldr	r0, [r3, #4]
   80282:	47a0      	blx	r4

  configure_console();

  irq_initialize_vectors();
  cpu_irq_enable();
   80284:	2101      	movs	r1, #1
   80286:	4b6f      	ldr	r3, [pc, #444]	; (80444 <main+0x218>)
   80288:	7019      	strb	r1, [r3, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8028a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   8028e:	b662      	cpsie	i
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	uint8_t i;

	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
		sleepmgr_locks[i] = 0;
   80290:	2200      	movs	r2, #0
   80292:	4b6d      	ldr	r3, [pc, #436]	; (80448 <main+0x21c>)
   80294:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 8044c <main+0x220>
	}
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
   80298:	7159      	strb	r1, [r3, #5]
		sleepmgr_locks[i] = 0;
   8029a:	701a      	strb	r2, [r3, #0]
   8029c:	705a      	strb	r2, [r3, #1]
   8029e:	709a      	strb	r2, [r3, #2]
   802a0:	70da      	strb	r2, [r3, #3]
   802a2:	711a      	strb	r2, [r3, #4]

  // Initialize the sleep manager
  sleepmgr_init();
#if !SAMD21 && !SAMR21
  sysclk_init();
   802a4:	496a      	ldr	r1, [pc, #424]	; (80450 <main+0x224>)
   802a6:	4788      	blx	r1
  board_init();
   802a8:	4b6a      	ldr	r3, [pc, #424]	; (80454 <main+0x228>)
   802aa:	4645      	mov	r5, r8
   802ac:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 80458 <main+0x22c>
  system_init();
#endif

  //Convert serial number to ASCII for USB Serial number
  for(unsigned int i = 0; i < 4; i++){
    sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);
   802b0:	4e6a      	ldr	r6, [pc, #424]	; (8045c <main+0x230>)
   802b2:	ac04      	add	r4, sp, #16
   802b4:	f10d 0a20 	add.w	sl, sp, #32
  board_init();
   802b8:	4798      	blx	r3
    sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);
   802ba:	f854 2b04 	ldr.w	r2, [r4], #4
   802be:	4628      	mov	r0, r5
   802c0:	4631      	mov	r1, r6
   802c2:	47c8      	blx	r9
  for(unsigned int i = 0; i < 4; i++){
   802c4:	45a2      	cmp	sl, r4
   802c6:	f105 0508 	add.w	r5, r5, #8
   802ca:	d1f6      	bne.n	802ba <main+0x8e>
  }
  usb_serial_number[32] = 0;
   802cc:	2500      	movs	r5, #0
  printf("ChipSHOUTER C521 Ballistic Gel Online. Firmware build: %s/%s\n", __TIME__, __DATE__);
  printf("Serial number: %s\n", usb_serial_number);


  /* Enable SMC */
  pmc_enable_periph_clk(ID_SMC);
   802ce:	2009      	movs	r0, #9
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   802d0:	4c63      	ldr	r4, [pc, #396]	; (80460 <main+0x234>)
  usb_serial_number[32] = 0;
   802d2:	f888 5020 	strb.w	r5, [r8, #32]
  pmc_enable_periph_clk(ID_SMC);
   802d6:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   802d8:	4962      	ldr	r1, [pc, #392]	; (80464 <main+0x238>)
   802da:	2029      	movs	r0, #41	; 0x29
   802dc:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAG1);
   802de:	4961      	ldr	r1, [pc, #388]	; (80464 <main+0x238>)
   802e0:	202a      	movs	r0, #42	; 0x2a
   802e2:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAG1);
   802e4:	495f      	ldr	r1, [pc, #380]	; (80464 <main+0x238>)
   802e6:	202b      	movs	r0, #43	; 0x2b
   802e8:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAG1);
   802ea:	495e      	ldr	r1, [pc, #376]	; (80464 <main+0x238>)
   802ec:	202c      	movs	r0, #44	; 0x2c
   802ee:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAG1);
   802f0:	495c      	ldr	r1, [pc, #368]	; (80464 <main+0x238>)
   802f2:	202d      	movs	r0, #45	; 0x2d
   802f4:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAG1);
   802f6:	495b      	ldr	r1, [pc, #364]	; (80464 <main+0x238>)
   802f8:	202e      	movs	r0, #46	; 0x2e
   802fa:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAG1);
   802fc:	4959      	ldr	r1, [pc, #356]	; (80464 <main+0x238>)
   802fe:	202f      	movs	r0, #47	; 0x2f
   80300:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAG1);
   80302:	4958      	ldr	r1, [pc, #352]	; (80464 <main+0x238>)
   80304:	2030      	movs	r0, #48	; 0x30
   80306:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D8, PIN_EBI_DATA_BUS_FLAG1);
   80308:	4956      	ldr	r1, [pc, #344]	; (80464 <main+0x238>)
   8030a:	2039      	movs	r0, #57	; 0x39
   8030c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D9, PIN_EBI_DATA_BUS_FLAG1);
   8030e:	4955      	ldr	r1, [pc, #340]	; (80464 <main+0x238>)
   80310:	203a      	movs	r0, #58	; 0x3a
   80312:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D10, PIN_EBI_DATA_BUS_FLAG1);
   80314:	4953      	ldr	r1, [pc, #332]	; (80464 <main+0x238>)
   80316:	203b      	movs	r0, #59	; 0x3b
   80318:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D11, PIN_EBI_DATA_BUS_FLAG1);
   8031a:	4952      	ldr	r1, [pc, #328]	; (80464 <main+0x238>)
   8031c:	203c      	movs	r0, #60	; 0x3c
   8031e:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D12, PIN_EBI_DATA_BUS_FLAG1);
   80320:	4950      	ldr	r1, [pc, #320]	; (80464 <main+0x238>)
   80322:	203d      	movs	r0, #61	; 0x3d
   80324:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D13, PIN_EBI_DATA_BUS_FLAG1);
   80326:	494f      	ldr	r1, [pc, #316]	; (80464 <main+0x238>)
   80328:	203e      	movs	r0, #62	; 0x3e
   8032a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D14, PIN_EBI_DATA_BUS_FLAG1);
   8032c:	494d      	ldr	r1, [pc, #308]	; (80464 <main+0x238>)
   8032e:	203f      	movs	r0, #63	; 0x3f
   80330:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D15, PIN_EBI_DATA_BUS_FLAG2);
   80332:	494d      	ldr	r1, [pc, #308]	; (80468 <main+0x23c>)
   80334:	2026      	movs	r0, #38	; 0x26
   80336:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
   80338:	494a      	ldr	r1, [pc, #296]	; (80464 <main+0x238>)
   8033a:	2033      	movs	r0, #51	; 0x33
   8033c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
   8033e:	4949      	ldr	r1, [pc, #292]	; (80464 <main+0x238>)
   80340:	2037      	movs	r0, #55	; 0x37
   80342:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
   80344:	4947      	ldr	r1, [pc, #284]	; (80464 <main+0x238>)
   80346:	2034      	movs	r0, #52	; 0x34
   80348:	47a0      	blx	r4

  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS0, PIN_EBI_ADDR_BUS_FLAG1);
   8034a:	4947      	ldr	r1, [pc, #284]	; (80468 <main+0x23c>)
   8034c:	2027      	movs	r0, #39	; 0x27
   8034e:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS1, PIN_EBI_ADDR_BUS_FLAG2);
   80350:	4944      	ldr	r1, [pc, #272]	; (80464 <main+0x238>)
   80352:	204f      	movs	r0, #79	; 0x4f
   80354:	47a0      	blx	r4

  gpio_configure_pin(PIN_EBI_ADDR_BUS_A1, PIN_EBI_ADDR_BUS_FLAG1);
   80356:	4944      	ldr	r1, [pc, #272]	; (80468 <main+0x23c>)
   80358:	2028      	movs	r0, #40	; 0x28
   8035a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A2, PIN_EBI_ADDR_BUS_FLAG2);
   8035c:	4941      	ldr	r1, [pc, #260]	; (80464 <main+0x238>)
   8035e:	2040      	movs	r0, #64	; 0x40
   80360:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A3, PIN_EBI_ADDR_BUS_FLAG2);
   80362:	4940      	ldr	r1, [pc, #256]	; (80464 <main+0x238>)
   80364:	2041      	movs	r0, #65	; 0x41
   80366:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A4, PIN_EBI_ADDR_BUS_FLAG2);
   80368:	493e      	ldr	r1, [pc, #248]	; (80464 <main+0x238>)
   8036a:	2042      	movs	r0, #66	; 0x42
   8036c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A5, PIN_EBI_ADDR_BUS_FLAG2);
   8036e:	493d      	ldr	r1, [pc, #244]	; (80464 <main+0x238>)
   80370:	2043      	movs	r0, #67	; 0x43
   80372:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A6, PIN_EBI_ADDR_BUS_FLAG2);
   80374:	493b      	ldr	r1, [pc, #236]	; (80464 <main+0x238>)
   80376:	2044      	movs	r0, #68	; 0x44
   80378:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A7, PIN_EBI_ADDR_BUS_FLAG2);
   8037a:	493a      	ldr	r1, [pc, #232]	; (80464 <main+0x238>)
   8037c:	2045      	movs	r0, #69	; 0x45
   8037e:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A8, PIN_EBI_ADDR_BUS_FLAG2);
   80380:	4938      	ldr	r1, [pc, #224]	; (80464 <main+0x238>)
   80382:	2046      	movs	r0, #70	; 0x46
   80384:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A9, PIN_EBI_ADDR_BUS_FLAG2);
   80386:	4937      	ldr	r1, [pc, #220]	; (80464 <main+0x238>)
   80388:	2047      	movs	r0, #71	; 0x47
   8038a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A10, PIN_EBI_ADDR_BUS_FLAG2);
   8038c:	4935      	ldr	r1, [pc, #212]	; (80464 <main+0x238>)
   8038e:	2048      	movs	r0, #72	; 0x48
   80390:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A11, PIN_EBI_ADDR_BUS_FLAG2);
   80392:	4934      	ldr	r1, [pc, #208]	; (80464 <main+0x238>)
   80394:	2049      	movs	r0, #73	; 0x49
   80396:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A12, PIN_EBI_ADDR_BUS_FLAG2);
   80398:	4932      	ldr	r1, [pc, #200]	; (80464 <main+0x238>)
   8039a:	204a      	movs	r0, #74	; 0x4a
   8039c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A13, PIN_EBI_ADDR_BUS_FLAG2);
   8039e:	4931      	ldr	r1, [pc, #196]	; (80464 <main+0x238>)
   803a0:	204b      	movs	r0, #75	; 0x4b
   803a2:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A14, PIN_EBI_ADDR_BUS_FLAG2);
   803a4:	492f      	ldr	r1, [pc, #188]	; (80464 <main+0x238>)
   803a6:	2054      	movs	r0, #84	; 0x54
   803a8:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A15, PIN_EBI_ADDR_BUS_FLAG2);
   803aa:	492e      	ldr	r1, [pc, #184]	; (80464 <main+0x238>)
   803ac:	2055      	movs	r0, #85	; 0x55
   803ae:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A16, PIN_EBI_ADDR_BUS_FLAG2);
   803b0:	492c      	ldr	r1, [pc, #176]	; (80464 <main+0x238>)
   803b2:	2056      	movs	r0, #86	; 0x56
   803b4:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A17, PIN_EBI_ADDR_BUS_FLAG2);
   803b6:	492b      	ldr	r1, [pc, #172]	; (80464 <main+0x238>)
   803b8:	2057      	movs	r0, #87	; 0x57
   803ba:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A18, PIN_EBI_ADDR_BUS_FLAG2);
   803bc:	4929      	ldr	r1, [pc, #164]	; (80464 <main+0x238>)
   803be:	2058      	movs	r0, #88	; 0x58
   803c0:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A19, PIN_EBI_ADDR_BUS_FLAG2);
   803c2:	4928      	ldr	r1, [pc, #160]	; (80464 <main+0x238>)
   803c4:	2059      	movs	r0, #89	; 0x59
   803c6:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A20, PIN_EBI_ADDR_BUS_FLAG2);
   803c8:	4926      	ldr	r1, [pc, #152]	; (80464 <main+0x238>)
   803ca:	205a      	movs	r0, #90	; 0x5a
   803cc:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A21, PIN_EBI_ADDR_BUS_FLAG2);
   803ce:	4925      	ldr	r1, [pc, #148]	; (80464 <main+0x238>)
   803d0:	2035      	movs	r0, #53	; 0x35
   803d2:	47a0      	blx	r4
  | SMC_CYCLE_NRD_CYCLE(8));
  smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
  | SMC_MODE_DBW_BIT_16);
  */

    smc_set_setup_timing(SMC, 0, SMC_SETUP_NWE_SETUP(0)
   803d4:	4629      	mov	r1, r5
   803d6:	4a25      	ldr	r2, [pc, #148]	; (8046c <main+0x240>)
   803d8:	4825      	ldr	r0, [pc, #148]	; (80470 <main+0x244>)
   803da:	4b26      	ldr	r3, [pc, #152]	; (80474 <main+0x248>)
   803dc:	4798      	blx	r3
    | SMC_SETUP_NCS_WR_SETUP(4)
    | SMC_SETUP_NRD_SETUP(4)
    | SMC_SETUP_NCS_RD_SETUP(4));
    smc_set_pulse_timing(SMC, 0, SMC_PULSE_NWE_PULSE(12)
   803de:	f04f 320c 	mov.w	r2, #202116108	; 0xc0c0c0c
   803e2:	4629      	mov	r1, r5
   803e4:	4822      	ldr	r0, [pc, #136]	; (80470 <main+0x244>)
   803e6:	4b24      	ldr	r3, [pc, #144]	; (80478 <main+0x24c>)
   803e8:	4798      	blx	r3
    | SMC_PULSE_NCS_WR_PULSE(12)
    | SMC_PULSE_NRD_PULSE(12)
    | SMC_PULSE_NCS_RD_PULSE(12));
    smc_set_cycle_timing(SMC, 0, SMC_CYCLE_NWE_CYCLE(16)
   803ea:	f04f 1210 	mov.w	r2, #1048592	; 0x100010
   803ee:	4629      	mov	r1, r5
   803f0:	481f      	ldr	r0, [pc, #124]	; (80470 <main+0x244>)
   803f2:	4b22      	ldr	r3, [pc, #136]	; (8047c <main+0x250>)
   803f4:	4798      	blx	r3
    | SMC_CYCLE_NRD_CYCLE(16));
    smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
   803f6:	f241 0203 	movw	r2, #4099	; 0x1003
   803fa:	4629      	mov	r1, r5
   803fc:	481c      	ldr	r0, [pc, #112]	; (80470 <main+0x244>)
   803fe:	4b20      	ldr	r3, [pc, #128]	; (80480 <main+0x254>)
   80400:	4798      	blx	r3
  /*
  osc_enable(OSC_MAINCK_XTAL);
      osc_wait_ready(OSC_MAINCK_XTAL);
      pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
  */
  ui_init();
   80402:	4b20      	ldr	r3, [pc, #128]	; (80484 <main+0x258>)
   80404:	4798      	blx	r3

  // Start USB stack to authorize VBus monitoring
  udc_start();
   80406:	4b20      	ldr	r3, [pc, #128]	; (80488 <main+0x25c>)
   80408:	4798      	blx	r3

  printf("Event Loop Entered, waiting...\n");

  // The main loop manages only the power mode
  // because the USB management is done by interrupt
	naeusb_register_handlers();
   8040a:	4b20      	ldr	r3, [pc, #128]	; (8048c <main+0x260>)
   8040c:	4798      	blx	r3
  ballistic_register_handlers();
   8040e:	4b20      	ldr	r3, [pc, #128]	; (80490 <main+0x264>)
   80410:	4798      	blx	r3
  while (true) {
   80412:	e7fe      	b.n	80412 <main+0x1e6>
   80414:	0008154d 	.word	0x0008154d
   80418:	00081a6d 	.word	0x00081a6d
   8041c:	400e0600 	.word	0x400e0600
   80420:	200036c8 	.word	0x200036c8
   80424:	200036c4 	.word	0x200036c4
   80428:	00080199 	.word	0x00080199
   8042c:	200003ac 	.word	0x200003ac
   80430:	000800fd 	.word	0x000800fd
   80434:	2000365c 	.word	0x2000365c
   80438:	05b8d800 	.word	0x05b8d800
   8043c:	00081ded 	.word	0x00081ded
   80440:	0008356d 	.word	0x0008356d
   80444:	20000304 	.word	0x20000304
   80448:	20003664 	.word	0x20003664
   8044c:	2000019c 	.word	0x2000019c
   80450:	00081c89 	.word	0x00081c89
   80454:	000814d1 	.word	0x000814d1
   80458:	0008372d 	.word	0x0008372d
   8045c:	0008a2f8 	.word	0x0008a2f8
   80460:	0008175d 	.word	0x0008175d
   80464:	08000001 	.word	0x08000001
   80468:	10000001 	.word	0x10000001
   8046c:	04040400 	.word	0x04040400
   80470:	400e0000 	.word	0x400e0000
   80474:	00081b19 	.word	0x00081b19
   80478:	00081b25 	.word	0x00081b25
   8047c:	00081b31 	.word	0x00081b31
   80480:	00081b3d 	.word	0x00081b3d
   80484:	000813e1 	.word	0x000813e1
   80488:	00080cf5 	.word	0x00080cf5
   8048c:	00080b4d 	.word	0x00080b4d
   80490:	000808a9 	.word	0x000808a9

00080494 <ctrl_readmem_ctrl>:
		main_vendor_bulk_in_received
	);
	return;
}

void ctrl_readmem_ctrl(void){
   80494:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80496:	4b08      	ldr	r3, [pc, #32]	; (804b8 <ctrl_readmem_ctrl+0x24>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);

     FPGA_setlock(fpga_ctrlmem);
   80498:	4a08      	ldr	r2, [pc, #32]	; (804bc <ctrl_readmem_ctrl+0x28>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8049a:	685c      	ldr	r4, [r3, #4]
     FPGA_setlock(fpga_ctrlmem);
   8049c:	2005      	movs	r0, #5
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8049e:	681d      	ldr	r5, [r3, #0]
     FPGA_setlock(fpga_ctrlmem);
   804a0:	4790      	blx	r2

     /* Do memory read */
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;

     /* Set size to read */
     ctrlmemread_size = buflen;
   804a2:	4b07      	ldr	r3, [pc, #28]	; (804c0 <ctrl_readmem_ctrl+0x2c>)
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   804a4:	4a07      	ldr	r2, [pc, #28]	; (804c4 <ctrl_readmem_ctrl+0x30>)
   804a6:	f104 44c0 	add.w	r4, r4, #1610612736	; 0x60000000
     ctrlmemread_size = buflen;
   804aa:	601d      	str	r5, [r3, #0]
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   804ac:	6014      	str	r4, [r2, #0]

     /* Start Transaction */
     LED_On(LED2_GPIO);
   804ae:	204c      	movs	r0, #76	; 0x4c
}
   804b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     LED_On(LED2_GPIO);
   804b4:	4b04      	ldr	r3, [pc, #16]	; (804c8 <ctrl_readmem_ctrl+0x34>)
   804b6:	4718      	bx	r3
   804b8:	200030cc 	.word	0x200030cc
   804bc:	00081399 	.word	0x00081399
   804c0:	200030a4 	.word	0x200030a4
   804c4:	200030a0 	.word	0x200030a0
   804c8:	0008164d 	.word	0x0008164d

000804cc <ctrl_writemem_ctrl>:
          }
     }
     seeded = 1;
}

void ctrl_writemem_ctrl(void){
   804cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   804d0:	4f0e      	ldr	r7, [pc, #56]	; (8050c <ctrl_writemem_ctrl+0x40>)

     uint8_t * ctrlbuf_payload = (uint8_t *)(CTRLBUFFER_WORDPTR + 2);

     //printf("Writing to %x, %d\n", address, buflen);

     FPGA_setlock(fpga_generic);
   804d2:	2001      	movs	r0, #1
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   804d4:	683c      	ldr	r4, [r7, #0]
     FPGA_setlock(fpga_generic);
   804d6:	4e0e      	ldr	r6, [pc, #56]	; (80510 <ctrl_writemem_ctrl+0x44>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   804d8:	687d      	ldr	r5, [r7, #4]
     FPGA_setlock(fpga_generic);
   804da:	47b0      	blx	r6

     /* Start Transaction */
     LED_On(LED1_GPIO);
   804dc:	2010      	movs	r0, #16
   804de:	4b0d      	ldr	r3, [pc, #52]	; (80514 <ctrl_writemem_ctrl+0x48>)
   804e0:	4798      	blx	r3

     /* Do memory write */
     for(unsigned int i = 0; i < buflen; i++){
   804e2:	b174      	cbz	r4, 80502 <ctrl_writemem_ctrl+0x36>
   804e4:	eb07 0c04 	add.w	ip, r7, r4
   804e8:	1fec      	subs	r4, r5, #7
   804ea:	4d0b      	ldr	r5, [pc, #44]	; (80518 <ctrl_writemem_ctrl+0x4c>)
   804ec:	1dfb      	adds	r3, r7, #7
          xram[i+address] = ctrlbuf_payload[i];
   804ee:	1be4      	subs	r4, r4, r7
   804f0:	f10c 0c07 	add.w	ip, ip, #7
   804f4:	18e2      	adds	r2, r4, r3
   804f6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
   804fa:	6829      	ldr	r1, [r5, #0]
     for(unsigned int i = 0; i < buflen; i++){
   804fc:	4563      	cmp	r3, ip
          xram[i+address] = ctrlbuf_payload[i];
   804fe:	5488      	strb	r0, [r1, r2]
     for(unsigned int i = 0; i < buflen; i++){
   80500:	d1f8      	bne.n	804f4 <ctrl_writemem_ctrl+0x28>
     }

     FPGA_setlock(fpga_unlocked);
   80502:	4633      	mov	r3, r6
}
   80504:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
     FPGA_setlock(fpga_unlocked);
   80508:	2000      	movs	r0, #0
   8050a:	4718      	bx	r3
   8050c:	200030cc 	.word	0x200030cc
   80510:	00081399 	.word	0x00081399
   80514:	0008164d 	.word	0x0008164d
   80518:	20000300 	.word	0x20000300

0008051c <ctrl_writemem_bulk>:

static uint32_t bulkread_address = 0;
static uint32_t bulkread_len = 0;

void ctrl_writemem_bulk(void){
   8051c:	b510      	push	{r4, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8051e:	4a06      	ldr	r2, [pc, #24]	; (80538 <ctrl_writemem_bulk+0x1c>)

     FPGA_setlock(fpga_blockout);
   80520:	4b06      	ldr	r3, [pc, #24]	; (8053c <ctrl_writemem_bulk+0x20>)
   80522:	2004      	movs	r0, #4
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80524:	6854      	ldr	r4, [r2, #4]
     FPGA_setlock(fpga_blockout);
   80526:	4798      	blx	r3

     /* Set address */
     bulkread_address = address;
   80528:	4a05      	ldr	r2, [pc, #20]	; (80540 <ctrl_writemem_bulk+0x24>)
     bulkread_len = buflen;
     //FPGA_setaddr(address);

     /* Transaction done in generic callback */
     LED_On(LED1_GPIO);
   8052a:	2010      	movs	r0, #16
     bulkread_address = address;
   8052c:	6014      	str	r4, [r2, #0]
     LED_On(LED1_GPIO);
   8052e:	4b05      	ldr	r3, [pc, #20]	; (80544 <ctrl_writemem_bulk+0x28>)
}
   80530:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     LED_On(LED1_GPIO);
   80534:	4718      	bx	r3
   80536:	bf00      	nop
   80538:	200030cc 	.word	0x200030cc
   8053c:	00081399 	.word	0x00081399
   80540:	2000309c 	.word	0x2000309c
   80544:	0008164d 	.word	0x0008164d

00080548 <ctrl_readmem_bulk>:
{
   80548:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8054a:	4b08      	ldr	r3, [pc, #32]	; (8056c <ctrl_readmem_bulk+0x24>)
     FPGA_setlock(fpga_blockin);
   8054c:	2002      	movs	r0, #2
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8054e:	e9d3 5400 	ldrd	r5, r4, [r3]
     FPGA_setlock(fpga_blockin);
   80552:	4b07      	ldr	r3, [pc, #28]	; (80570 <ctrl_readmem_bulk+0x28>)
   80554:	4798      	blx	r3
     LED_On(LED2_GPIO);
   80556:	204c      	movs	r0, #76	; 0x4c
   80558:	4b06      	ldr	r3, [pc, #24]	; (80574 <ctrl_readmem_bulk+0x2c>)
   8055a:	4798      	blx	r3
     udi_vendor_bulk_in_run(
   8055c:	4629      	mov	r1, r5
   8055e:	f104 40c0 	add.w	r0, r4, #1610612736	; 0x60000000
   80562:	4a05      	ldr	r2, [pc, #20]	; (80578 <ctrl_readmem_bulk+0x30>)
   80564:	4b05      	ldr	r3, [pc, #20]	; (8057c <ctrl_readmem_bulk+0x34>)
}
   80566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     udi_vendor_bulk_in_run(
   8056a:	4718      	bx	r3
   8056c:	200030cc 	.word	0x200030cc
   80570:	00081399 	.word	0x00081399
   80574:	0008164d 	.word	0x0008164d
   80578:	00080665 	.word	0x00080665
   8057c:	00081ebd 	.word	0x00081ebd

00080580 <ctrl_readmem_rng_bulk>:
	if (buflen >= sizeof(buffer))
   80580:	f242 3327 	movw	r3, #8999	; 0x2327
void ctrl_readmem_rng_bulk(void){
   80584:	b510      	push	{r4, lr}
	uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80586:	4a07      	ldr	r2, [pc, #28]	; (805a4 <ctrl_readmem_rng_bulk+0x24>)
   80588:	6814      	ldr	r4, [r2, #0]
	if (buflen >= sizeof(buffer))
   8058a:	429c      	cmp	r4, r3
   8058c:	d900      	bls.n	80590 <ctrl_readmem_rng_bulk+0x10>
}
   8058e:	bd10      	pop	{r4, pc}
	LED_On(LED2_GPIO);
   80590:	204c      	movs	r0, #76	; 0x4c
   80592:	4b05      	ldr	r3, [pc, #20]	; (805a8 <ctrl_readmem_rng_bulk+0x28>)
   80594:	4798      	blx	r3
	udi_vendor_bulk_in_run(
   80596:	4621      	mov	r1, r4
}
   80598:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	udi_vendor_bulk_in_run(
   8059c:	4a03      	ldr	r2, [pc, #12]	; (805ac <ctrl_readmem_rng_bulk+0x2c>)
   8059e:	4804      	ldr	r0, [pc, #16]	; (805b0 <ctrl_readmem_rng_bulk+0x30>)
   805a0:	4b04      	ldr	r3, [pc, #16]	; (805b4 <ctrl_readmem_rng_bulk+0x34>)
   805a2:	4718      	bx	r3
   805a4:	200030cc 	.word	0x200030cc
   805a8:	0008164d 	.word	0x0008164d
   805ac:	00080665 	.word	0x00080665
   805b0:	20000d74 	.word	0x20000d74
   805b4:	00081ebd 	.word	0x00081ebd

000805b8 <main_vendor_bulk_out_received>:
     }
}

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep)
{
   805b8:	b570      	push	{r4, r5, r6, lr}
     UNUSED(ep);
     if (UDD_EP_TRANSFER_OK != status) {
   805ba:	b990      	cbnz	r0, 805e2 <main_vendor_bulk_out_received+0x2a>
          return;
     }

     if (blockendpoint_usage == bep_emem){

          for(uint32_t i = 0; i < nb_transfered; i++){
   805bc:	b169      	cbz	r1, 805da <main_vendor_bulk_out_received+0x22>
   805be:	4d0f      	ldr	r5, [pc, #60]	; (805fc <main_vendor_bulk_out_received+0x44>)
   805c0:	4a0f      	ldr	r2, [pc, #60]	; (80600 <main_vendor_bulk_out_received+0x48>)
   805c2:	682b      	ldr	r3, [r5, #0]
   805c4:	4c0f      	ldr	r4, [pc, #60]	; (80604 <main_vendor_bulk_out_received+0x4c>)
   805c6:	4419      	add	r1, r3
               xram[bulkread_address++] = main_buf_loopback[i];
   805c8:	6820      	ldr	r0, [r4, #0]
   805ca:	f812 cb01 	ldrb.w	ip, [r2], #1
   805ce:	f800 c003 	strb.w	ip, [r0, r3]
          for(uint32_t i = 0; i < nb_transfered; i++){
   805d2:	3301      	adds	r3, #1
   805d4:	4299      	cmp	r1, r3
   805d6:	d1f7      	bne.n	805c8 <main_vendor_bulk_out_received+0x10>
   805d8:	6029      	str	r1, [r5, #0]
          }

          if (FPGA_lockstatus() == fpga_blockout){
   805da:	4b0b      	ldr	r3, [pc, #44]	; (80608 <main_vendor_bulk_out_received+0x50>)
   805dc:	4798      	blx	r3
   805de:	2804      	cmp	r0, #4
   805e0:	d007      	beq.n	805f2 <main_vendor_bulk_out_received+0x3a>

     udi_vendor_bulk_out_run(
          main_buf_loopback,
          sizeof(main_buf_loopback),
          main_vendor_bulk_out_received);
}
   805e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          udi_vendor_bulk_out_run(
   805e6:	f44f 6180 	mov.w	r1, #1024	; 0x400
   805ea:	4a08      	ldr	r2, [pc, #32]	; (8060c <main_vendor_bulk_out_received+0x54>)
   805ec:	4804      	ldr	r0, [pc, #16]	; (80600 <main_vendor_bulk_out_received+0x48>)
   805ee:	4b08      	ldr	r3, [pc, #32]	; (80610 <main_vendor_bulk_out_received+0x58>)
   805f0:	4718      	bx	r3
               FPGA_setlock(fpga_unlocked);
   805f2:	4b08      	ldr	r3, [pc, #32]	; (80614 <main_vendor_bulk_out_received+0x5c>)
   805f4:	2000      	movs	r0, #0
   805f6:	4798      	blx	r3
   805f8:	e7f3      	b.n	805e2 <main_vendor_bulk_out_received+0x2a>
   805fa:	bf00      	nop
   805fc:	2000309c 	.word	0x2000309c
   80600:	2000310c 	.word	0x2000310c
   80604:	20000300 	.word	0x20000300
   80608:	000813d5 	.word	0x000813d5
   8060c:	000805b9 	.word	0x000805b9
   80610:	00081edd 	.word	0x00081edd
   80614:	00081399 	.word	0x00081399

00080618 <ballistic_setup_in_received>:
     switch (udd_g_ctrlreq.req.bRequest) {
   80618:	4a0d      	ldr	r2, [pc, #52]	; (80650 <ballistic_setup_in_received+0x38>)
   8061a:	7853      	ldrb	r3, [r2, #1]
   8061c:	2b12      	cmp	r3, #18
   8061e:	d003      	beq.n	80628 <ballistic_setup_in_received+0x10>
   80620:	2b15      	cmp	r3, #21
   80622:	d001      	beq.n	80628 <ballistic_setup_in_received+0x10>
   80624:	2000      	movs	r0, #0
}
   80626:	4770      	bx	lr
{
   80628:	b510      	push	{r4, lr}
               ctrlmemread_size = 0;
   8062a:	2400      	movs	r4, #0
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   8062c:	4b09      	ldr	r3, [pc, #36]	; (80654 <ballistic_setup_in_received+0x3c>)
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   8062e:	480a      	ldr	r0, [pc, #40]	; (80658 <ballistic_setup_in_received+0x40>)
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80630:	6819      	ldr	r1, [r3, #0]
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   80632:	6800      	ldr	r0, [r0, #0]
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80634:	8191      	strh	r1, [r2, #12]
               if (FPGA_lockstatus() == fpga_ctrlmem) {
   80636:	4909      	ldr	r1, [pc, #36]	; (8065c <ballistic_setup_in_received+0x44>)
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   80638:	6090      	str	r0, [r2, #8]
               ctrlmemread_size = 0;
   8063a:	601c      	str	r4, [r3, #0]
               if (FPGA_lockstatus() == fpga_ctrlmem) {
   8063c:	4788      	blx	r1
   8063e:	2805      	cmp	r0, #5
   80640:	d001      	beq.n	80646 <ballistic_setup_in_received+0x2e>
   80642:	2001      	movs	r0, #1
}
   80644:	bd10      	pop	{r4, pc}
                    FPGA_setlock(fpga_unlocked);
   80646:	4620      	mov	r0, r4
   80648:	4b05      	ldr	r3, [pc, #20]	; (80660 <ballistic_setup_in_received+0x48>)
   8064a:	4798      	blx	r3
   8064c:	2001      	movs	r0, #1
}
   8064e:	bd10      	pop	{r4, pc}
   80650:	200036ac 	.word	0x200036ac
   80654:	200030a4 	.word	0x200030a4
   80658:	200030a0 	.word	0x200030a0
   8065c:	000813d5 	.word	0x000813d5
   80660:	00081399 	.word	0x00081399

00080664 <main_vendor_bulk_in_received>:
     if (UDD_EP_TRANSFER_OK != status) {
   80664:	b100      	cbz	r0, 80668 <main_vendor_bulk_in_received+0x4>
   80666:	4770      	bx	lr
{
   80668:	b510      	push	{r4, lr}
     if (FPGA_lockstatus() == fpga_blockin){
   8066a:	4b05      	ldr	r3, [pc, #20]	; (80680 <main_vendor_bulk_in_received+0x1c>)
   8066c:	4604      	mov	r4, r0
   8066e:	4798      	blx	r3
   80670:	2802      	cmp	r0, #2
   80672:	d000      	beq.n	80676 <main_vendor_bulk_in_received+0x12>
}
   80674:	bd10      	pop	{r4, pc}
          FPGA_setlock(fpga_unlocked);
   80676:	4620      	mov	r0, r4
}
   80678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          FPGA_setlock(fpga_unlocked);
   8067c:	4b01      	ldr	r3, [pc, #4]	; (80684 <main_vendor_bulk_in_received+0x20>)
   8067e:	4718      	bx	r3
   80680:	000813d5 	.word	0x000813d5
   80684:	00081399 	.word	0x00081399

00080688 <ctrl_testmem>:
{
   80688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8068c:	4a36      	ldr	r2, [pc, #216]	; (80768 <ctrl_testmem+0xe0>)
     if (address > (sram_size - buflen) )
   8068e:	4b37      	ldr	r3, [pc, #220]	; (8076c <ctrl_testmem+0xe4>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80690:	6814      	ldr	r4, [r2, #0]
     if (address > (sram_size - buflen) )
   80692:	681b      	ldr	r3, [r3, #0]
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80694:	6856      	ldr	r6, [r2, #4]
     if (address > (sram_size - buflen) )
   80696:	1b1b      	subs	r3, r3, r4
   80698:	42b3      	cmp	r3, r6
{
   8069a:	b083      	sub	sp, #12
     if (address > (sram_size - buflen) )
   8069c:	d303      	bcc.n	806a6 <ctrl_testmem+0x1e>
     if (buflen >= sizeof(buffer))
   8069e:	f242 3327 	movw	r3, #8999	; 0x2327
   806a2:	429c      	cmp	r4, r3
   806a4:	d902      	bls.n	806ac <ctrl_testmem+0x24>
}
   806a6:	b003      	add	sp, #12
   806a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     LED_On(LED2_GPIO);
   806ac:	204c      	movs	r0, #76	; 0x4c
   806ae:	4b30      	ldr	r3, [pc, #192]	; (80770 <ctrl_testmem+0xe8>)
   806b0:	4798      	blx	r3
     if (!address) {
   806b2:	2e00      	cmp	r6, #0
   806b4:	d03e      	beq.n	80734 <ctrl_testmem+0xac>
     found_err[1]++;
   806b6:	4f2f      	ldr	r7, [pc, #188]	; (80774 <ctrl_testmem+0xec>)
   806b8:	887b      	ldrh	r3, [r7, #2]
   806ba:	3301      	adds	r3, #1
   806bc:	b29b      	uxth	r3, r3
     found_err[0] = 0;
   806be:	2500      	movs	r5, #0
     for (i = 0; i < buflen / 4; i++) {
   806c0:	08a4      	lsrs	r4, r4, #2
     found_err[1]++;
   806c2:	807b      	strh	r3, [r7, #2]
     found_err[0] = 0;
   806c4:	803d      	strh	r5, [r7, #0]
     for (i = 0; i < buflen / 4; i++) {
   806c6:	d047      	beq.n	80758 <ctrl_testmem+0xd0>
                    found_err[0] = 1;
   806c8:	f04f 0901 	mov.w	r9, #1
   806cc:	00a3      	lsls	r3, r4, #2
   806ce:	9300      	str	r3, [sp, #0]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   806d0:	4b29      	ldr	r3, [pc, #164]	; (80778 <ctrl_testmem+0xf0>)
   806d2:	4a2a      	ldr	r2, [pc, #168]	; (8077c <ctrl_testmem+0xf4>)
   806d4:	681b      	ldr	r3, [r3, #0]
   806d6:	e9d2 4b00 	ldrd	r4, fp, [r2]
   806da:	4433      	add	r3, r6
   806dc:	4e28      	ldr	r6, [pc, #160]	; (80780 <ctrl_testmem+0xf8>)
   806de:	9301      	str	r3, [sp, #4]
   806e0:	e9d2 8302 	ldrd	r8, r3, [r2, #8]
     t ^= s >> 19;
   806e4:	46b4      	mov	ip, r6
   806e6:	2200      	movs	r2, #0
     t ^= t << 11;
   806e8:	ea83 23c3 	eor.w	r3, r3, r3, lsl #11
     t ^= s >> 19;
   806ec:	ea83 41d4 	eor.w	r1, r3, r4, lsr #19
   806f0:	4061      	eors	r1, r4
   806f2:	46a2      	mov	sl, r4
   806f4:	ea81 2413 	eor.w	r4, r1, r3, lsr #8
          for (j = 0; j < 4; j++) {
   806f8:	9b01      	ldr	r3, [sp, #4]
   806fa:	1959      	adds	r1, r3, r5
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   806fc:	7808      	ldrb	r0, [r1, #0]
   806fe:	fa24 f302 	lsr.w	r3, r4, r2
   80702:	b2db      	uxtb	r3, r3
               if (buffer[i * 4 + j]) {
   80704:	4298      	cmp	r0, r3
          for (j = 0; j < 4; j++) {
   80706:	f102 0208 	add.w	r2, r2, #8
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   8070a:	ea80 0e03 	eor.w	lr, r0, r3
                    found_err[0] = 1;
   8070e:	bf18      	it	ne
   80710:	f8a7 9000 	strhne.w	r9, [r7]
          for (j = 0; j < 4; j++) {
   80714:	2a20      	cmp	r2, #32
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80716:	f80c eb01 	strb.w	lr, [ip], #1
          for (j = 0; j < 4; j++) {
   8071a:	f101 0101 	add.w	r1, r1, #1
   8071e:	d1ed      	bne.n	806fc <ctrl_testmem+0x74>
     for (i = 0; i < buflen / 4; i++) {
   80720:	9a00      	ldr	r2, [sp, #0]
   80722:	3504      	adds	r5, #4
   80724:	42aa      	cmp	r2, r5
   80726:	4643      	mov	r3, r8
   80728:	f106 0604 	add.w	r6, r6, #4
   8072c:	d00f      	beq.n	8074e <ctrl_testmem+0xc6>
   8072e:	46d8      	mov	r8, fp
   80730:	46d3      	mov	fp, sl
   80732:	e7d7      	b.n	806e4 <ctrl_testmem+0x5c>
               state[i] = seed[i];
   80734:	4913      	ldr	r1, [pc, #76]	; (80784 <ctrl_testmem+0xfc>)
   80736:	4a11      	ldr	r2, [pc, #68]	; (8077c <ctrl_testmem+0xf4>)
   80738:	6808      	ldr	r0, [r1, #0]
   8073a:	2301      	movs	r3, #1
   8073c:	6010      	str	r0, [r2, #0]
   8073e:	6848      	ldr	r0, [r1, #4]
   80740:	4f0c      	ldr	r7, [pc, #48]	; (80774 <ctrl_testmem+0xec>)
   80742:	6050      	str	r0, [r2, #4]
   80744:	6888      	ldr	r0, [r1, #8]
   80746:	68c9      	ldr	r1, [r1, #12]
   80748:	6090      	str	r0, [r2, #8]
   8074a:	60d1      	str	r1, [r2, #12]
          done = 0;
   8074c:	e7b7      	b.n	806be <ctrl_testmem+0x36>
   8074e:	4b0b      	ldr	r3, [pc, #44]	; (8077c <ctrl_testmem+0xf4>)
   80750:	e9c3 b802 	strd	fp, r8, [r3, #8]
   80754:	e9c3 4a00 	strd	r4, sl, [r3]
     ctrlmemread_size = 4;
   80758:	2204      	movs	r2, #4
     ctrlmemread_buf = (uint8_t *) found_err;
   8075a:	490b      	ldr	r1, [pc, #44]	; (80788 <ctrl_testmem+0x100>)
     ctrlmemread_size = 4;
   8075c:	4b0b      	ldr	r3, [pc, #44]	; (8078c <ctrl_testmem+0x104>)
     ctrlmemread_buf = (uint8_t *) found_err;
   8075e:	600f      	str	r7, [r1, #0]
     ctrlmemread_size = 4;
   80760:	601a      	str	r2, [r3, #0]
}
   80762:	b003      	add	sp, #12
   80764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80768:	200030cc 	.word	0x200030cc
   8076c:	200001c0 	.word	0x200001c0
   80770:	0008164d 	.word	0x0008164d
   80774:	200030a8 	.word	0x200030a8
   80778:	20000300 	.word	0x20000300
   8077c:	200030bc 	.word	0x200030bc
   80780:	20000d74 	.word	0x20000d74
   80784:	200030ac 	.word	0x200030ac
   80788:	200030a0 	.word	0x200030a0
   8078c:	200030a4 	.word	0x200030a4

00080790 <ctrl_writemem_rng>:
{
   80790:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80794:	4c21      	ldr	r4, [pc, #132]	; (8081c <ctrl_writemem_rng+0x8c>)
     LED_On(LED1_GPIO);
   80796:	2010      	movs	r0, #16
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80798:	6865      	ldr	r5, [r4, #4]
     LED_On(LED1_GPIO);
   8079a:	4b21      	ldr	r3, [pc, #132]	; (80820 <ctrl_writemem_rng+0x90>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8079c:	6826      	ldr	r6, [r4, #0]
     LED_On(LED1_GPIO);
   8079e:	4798      	blx	r3
     if (!address) {
   807a0:	b94d      	cbnz	r5, 807b6 <ctrl_writemem_rng+0x26>
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   807a2:	f8df c080 	ldr.w	ip, [pc, #128]	; 80824 <ctrl_writemem_rng+0x94>
               seed[i] = state[i];
   807a6:	4f20      	ldr	r7, [pc, #128]	; (80828 <ctrl_writemem_rng+0x98>)
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   807a8:	3408      	adds	r4, #8
   807aa:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
   807ae:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
               seed[i] = state[i];
   807b2:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
     for (i = 0; i < num_rng; i++) {
   807b6:	08b6      	lsrs	r6, r6, #2
   807b8:	d02e      	beq.n	80818 <ctrl_writemem_rng+0x88>
   807ba:	f04f 0c00 	mov.w	ip, #0
   807be:	f8df 9064 	ldr.w	r9, [pc, #100]	; 80824 <ctrl_writemem_rng+0x94>
   807c2:	4c1a      	ldr	r4, [pc, #104]	; (8082c <ctrl_writemem_rng+0x9c>)
   807c4:	ea4f 0886 	mov.w	r8, r6, lsl #2
   807c8:	e9d9 0e00 	ldrd	r0, lr, [r9]
   807cc:	e9d9 6202 	ldrd	r6, r2, [r9, #8]
     t ^= s >> 19;
   807d0:	2300      	movs	r3, #0
     t ^= t << 11;
   807d2:	ea82 22c2 	eor.w	r2, r2, r2, lsl #11
     t ^= s >> 19;
   807d6:	ea82 4ad0 	eor.w	sl, r2, r0, lsr #19
   807da:	ea8a 0a00 	eor.w	sl, sl, r0
   807de:	4607      	mov	r7, r0
   807e0:	eb0c 0105 	add.w	r1, ip, r5
   807e4:	ea8a 2012 	eor.w	r0, sl, r2, lsr #8
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   807e8:	fa20 f203 	lsr.w	r2, r0, r3
   807ec:	f8d4 a000 	ldr.w	sl, [r4]
          for (j = 0; j < 4; j++) {
   807f0:	3308      	adds	r3, #8
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   807f2:	b2d2      	uxtb	r2, r2
          for (j = 0; j < 4; j++) {
   807f4:	2b20      	cmp	r3, #32
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   807f6:	f80a 2001 	strb.w	r2, [sl, r1]
          for (j = 0; j < 4; j++) {
   807fa:	f101 0101 	add.w	r1, r1, #1
   807fe:	d1f3      	bne.n	807e8 <ctrl_writemem_rng+0x58>
     for (i = 0; i < num_rng; i++) {
   80800:	f10c 0c04 	add.w	ip, ip, #4
   80804:	45c4      	cmp	ip, r8
   80806:	4632      	mov	r2, r6
   80808:	d002      	beq.n	80810 <ctrl_writemem_rng+0x80>
   8080a:	4676      	mov	r6, lr
   8080c:	46be      	mov	lr, r7
   8080e:	e7df      	b.n	807d0 <ctrl_writemem_rng+0x40>
   80810:	e9c9 e602 	strd	lr, r6, [r9, #8]
   80814:	e9c9 0700 	strd	r0, r7, [r9]
}
   80818:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8081c:	200030cc 	.word	0x200030cc
   80820:	0008164d 	.word	0x0008164d
   80824:	200030bc 	.word	0x200030bc
   80828:	200030ac 	.word	0x200030ac
   8082c:	20000300 	.word	0x20000300

00080830 <ballistic_setup_out_received>:
{
   80830:	b508      	push	{r3, lr}
     switch (udd_g_ctrlreq.req.bRequest) {
   80832:	4a15      	ldr	r2, [pc, #84]	; (80888 <ballistic_setup_out_received+0x58>)
   80834:	7853      	ldrb	r3, [r2, #1]
   80836:	3b10      	subs	r3, #16
   80838:	2b08      	cmp	r3, #8
   8083a:	d80a      	bhi.n	80852 <ballistic_setup_out_received+0x22>
   8083c:	e8df f003 	tbb	[pc, r3]
   80840:	17130f0b 	.word	0x17130f0b
   80844:	09091f1b 	.word	0x09091f1b
   80848:	05          	.byte	0x05
   80849:	00          	.byte	0x00
          udd_g_ctrlreq.callback = ctrl_readmem_rng_bulk;
   8084a:	4b10      	ldr	r3, [pc, #64]	; (8088c <ballistic_setup_out_received+0x5c>)
          return true;
   8084c:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_rng_bulk;
   8084e:	6113      	str	r3, [r2, #16]
}
   80850:	bd08      	pop	{r3, pc}
     switch (udd_g_ctrlreq.req.bRequest) {
   80852:	2000      	movs	r0, #0
}
   80854:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   80856:	4b0e      	ldr	r3, [pc, #56]	; (80890 <ballistic_setup_out_received+0x60>)
          return true;
   80858:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   8085a:	6113      	str	r3, [r2, #16]
}
   8085c:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   8085e:	4b0d      	ldr	r3, [pc, #52]	; (80894 <ballistic_setup_out_received+0x64>)
          return true;
   80860:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   80862:	6113      	str	r3, [r2, #16]
}
   80864:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   80866:	4b0c      	ldr	r3, [pc, #48]	; (80898 <ballistic_setup_out_received+0x68>)
          return true;
   80868:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   8086a:	6113      	str	r3, [r2, #16]
}
   8086c:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   8086e:	4b0b      	ldr	r3, [pc, #44]	; (8089c <ballistic_setup_out_received+0x6c>)
          return true;
   80870:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   80872:	6113      	str	r3, [r2, #16]
}
   80874:	bd08      	pop	{r3, pc}
          ctrl_writemem_rng();
   80876:	4b0a      	ldr	r3, [pc, #40]	; (808a0 <ballistic_setup_out_received+0x70>)
   80878:	4798      	blx	r3
          return true;
   8087a:	2001      	movs	r0, #1
}
   8087c:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_testmem;
   8087e:	4b09      	ldr	r3, [pc, #36]	; (808a4 <ballistic_setup_out_received+0x74>)
          return true;
   80880:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_testmem;
   80882:	6113      	str	r3, [r2, #16]
}
   80884:	bd08      	pop	{r3, pc}
   80886:	bf00      	nop
   80888:	200036ac 	.word	0x200036ac
   8088c:	00080581 	.word	0x00080581
   80890:	00080549 	.word	0x00080549
   80894:	0008051d 	.word	0x0008051d
   80898:	00080495 	.word	0x00080495
   8089c:	000804cd 	.word	0x000804cd
   808a0:	00080791 	.word	0x00080791
   808a4:	00080689 	.word	0x00080689

000808a8 <ballistic_register_handlers>:

void ballistic_register_handlers(void)
{
   808a8:	b510      	push	{r4, lr}
     naeusb_add_in_handler(ballistic_setup_in_received);
   808aa:	4b04      	ldr	r3, [pc, #16]	; (808bc <ballistic_register_handlers+0x14>)
   808ac:	4804      	ldr	r0, [pc, #16]	; (808c0 <ballistic_register_handlers+0x18>)
   808ae:	4798      	blx	r3
     naeusb_add_out_handler(ballistic_setup_out_received);
   808b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     naeusb_add_out_handler(ballistic_setup_out_received);
   808b4:	4803      	ldr	r0, [pc, #12]	; (808c4 <ballistic_register_handlers+0x1c>)
   808b6:	4b04      	ldr	r3, [pc, #16]	; (808c8 <ballistic_register_handlers+0x20>)
   808b8:	4718      	bx	r3
   808ba:	bf00      	nop
   808bc:	000808cd 	.word	0x000808cd
   808c0:	00080619 	.word	0x00080619
   808c4:	00080831 	.word	0x00080831
   808c8:	000808f5 	.word	0x000808f5

000808cc <naeusb_add_in_handler>:
    return main_b_vendor_enable;
}

bool naeusb_add_in_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_in_handlers < 16) {
   808cc:	4907      	ldr	r1, [pc, #28]	; (808ec <naeusb_add_in_handler+0x20>)
   808ce:	780a      	ldrb	r2, [r1, #0]
   808d0:	2a0f      	cmp	r2, #15
   808d2:	d901      	bls.n	808d8 <naeusb_add_in_handler+0xc>
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
        return true;
    }
    return false;
   808d4:	2000      	movs	r0, #0
    
}
   808d6:	4770      	bx	lr
   808d8:	4603      	mov	r3, r0
{
   808da:	b410      	push	{r4}
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
   808dc:	1c50      	adds	r0, r2, #1
   808de:	4c04      	ldr	r4, [pc, #16]	; (808f0 <naeusb_add_in_handler+0x24>)
   808e0:	7008      	strb	r0, [r1, #0]
   808e2:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   808e6:	2001      	movs	r0, #1
}
   808e8:	bc10      	pop	{r4}
   808ea:	4770      	bx	lr
   808ec:	2000354c 	.word	0x2000354c
   808f0:	2000350c 	.word	0x2000350c

000808f4 <naeusb_add_out_handler>:

bool naeusb_add_out_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_out_handlers < 16) {
   808f4:	4907      	ldr	r1, [pc, #28]	; (80914 <naeusb_add_out_handler+0x20>)
   808f6:	780a      	ldrb	r2, [r1, #0]
   808f8:	2a0f      	cmp	r2, #15
   808fa:	d901      	bls.n	80900 <naeusb_add_out_handler+0xc>
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
        return true;
    }
    return false;
   808fc:	2000      	movs	r0, #0
    
}
   808fe:	4770      	bx	lr
   80900:	4603      	mov	r3, r0
{
   80902:	b410      	push	{r4}
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
   80904:	1c50      	adds	r0, r2, #1
   80906:	4c04      	ldr	r4, [pc, #16]	; (80918 <naeusb_add_out_handler+0x24>)
   80908:	7008      	strb	r0, [r1, #0]
   8090a:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   8090e:	2001      	movs	r0, #1
}
   80910:	bc10      	pop	{r4}
   80912:	4770      	bx	lr
   80914:	2000354d 	.word	0x2000354d
   80918:	20003550 	.word	0x20003550

0008091c <main_suspend_action>:

//this stuff just turns leds on and off
void main_suspend_action(void)
{
	active = false;
	ui_powerdown();
   8091c:	4b00      	ldr	r3, [pc, #0]	; (80920 <main_suspend_action+0x4>)
   8091e:	4718      	bx	r3
   80920:	000813fd 	.word	0x000813fd

00080924 <main_resume_action>:
}

void main_resume_action(void)
{
    ui_wakeup();
   80924:	4b00      	ldr	r3, [pc, #0]	; (80928 <main_resume_action+0x4>)
   80926:	4718      	bx	r3
   80928:	00081421 	.word	0x00081421

0008092c <main_sof_action>:
}

void main_sof_action(void)
{
    if (!main_b_vendor_enable)
   8092c:	4b05      	ldr	r3, [pc, #20]	; (80944 <main_sof_action+0x18>)
   8092e:	781b      	ldrb	r3, [r3, #0]
   80930:	b903      	cbnz	r3, 80934 <main_sof_action+0x8>
   80932:	4770      	bx	lr
{
   80934:	b510      	push	{r4, lr}
        return;
    ui_process(udd_get_frame_number());
   80936:	4b04      	ldr	r3, [pc, #16]	; (80948 <main_sof_action+0x1c>)
   80938:	4798      	blx	r3
}
   8093a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ui_process(udd_get_frame_number());
   8093e:	4b03      	ldr	r3, [pc, #12]	; (8094c <main_sof_action+0x20>)
   80940:	4718      	bx	r3
   80942:	bf00      	nop
   80944:	200001c4 	.word	0x200001c4
   80948:	00082c71 	.word	0x00082c71
   8094c:	0008143d 	.word	0x0008143d

00080950 <main_vendor_enable>:

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep);

bool main_vendor_enable(void)
{
   80950:	b538      	push	{r3, r4, r5, lr}
    active = true;
    main_b_vendor_enable = true;
   80952:	2401      	movs	r4, #1
   80954:	4d04      	ldr	r5, [pc, #16]	; (80968 <main_vendor_enable+0x18>)
    // Start data reception on OUT endpoints
// #if UDI_VENDOR_EPS_SIZE_BULK_FS
//     //main_vendor_bulk_in_received(UDD_EP_TRANSFER_OK, 0, 0);
    udi_vendor_bulk_out_run(
   80956:	f44f 6180 	mov.w	r1, #1024	; 0x400
   8095a:	4a04      	ldr	r2, [pc, #16]	; (8096c <main_vendor_enable+0x1c>)
   8095c:	4b04      	ldr	r3, [pc, #16]	; (80970 <main_vendor_enable+0x20>)
   8095e:	4805      	ldr	r0, [pc, #20]	; (80974 <main_vendor_enable+0x24>)
    main_b_vendor_enable = true;
   80960:	702c      	strb	r4, [r5, #0]
    udi_vendor_bulk_out_run(
   80962:	4798      	blx	r3
        main_buf_loopback,
        sizeof(main_buf_loopback),
        main_vendor_bulk_out_received);
// #endif
    return true;
}
   80964:	4620      	mov	r0, r4
   80966:	bd38      	pop	{r3, r4, r5, pc}
   80968:	200001c4 	.word	0x200001c4
   8096c:	000805b9 	.word	0x000805b9
   80970:	00081edd 	.word	0x00081edd
   80974:	2000310c 	.word	0x2000310c

00080978 <main_vendor_disable>:

void main_vendor_disable(void)
{
    main_b_vendor_enable = false;
   80978:	2200      	movs	r2, #0
   8097a:	4b01      	ldr	r3, [pc, #4]	; (80980 <main_vendor_disable+0x8>)
   8097c:	701a      	strb	r2, [r3, #0]
}
   8097e:	4770      	bx	lr
   80980:	200001c4 	.word	0x200001c4

00080984 <main_setup_out_received>:

bool main_setup_out_received(void)
{
   80984:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;
    udd_g_ctrlreq.payload = ctrlbuffer;
   80986:	4b0f      	ldr	r3, [pc, #60]	; (809c4 <main_setup_out_received+0x40>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));

    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   80988:	4a0f      	ldr	r2, [pc, #60]	; (809c8 <main_setup_out_received+0x44>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   8098a:	88d9      	ldrh	r1, [r3, #6]
    udd_g_ctrlreq.payload = ctrlbuffer;
   8098c:	480f      	ldr	r0, [pc, #60]	; (809cc <main_setup_out_received+0x48>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   8098e:	2940      	cmp	r1, #64	; 0x40
   80990:	bf28      	it	cs
   80992:	2140      	movcs	r1, #64	; 0x40
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   80994:	7812      	ldrb	r2, [r2, #0]
    udd_g_ctrlreq.payload = ctrlbuffer;
   80996:	6098      	str	r0, [r3, #8]
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   80998:	8199      	strh	r1, [r3, #12]
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   8099a:	b18a      	cbz	r2, 809c0 <main_setup_out_received+0x3c>
   8099c:	4c0c      	ldr	r4, [pc, #48]	; (809d0 <main_setup_out_received+0x4c>)
   8099e:	1e55      	subs	r5, r2, #1
   809a0:	b2ed      	uxtb	r5, r5
   809a2:	1b53      	subs	r3, r2, r5
   809a4:	1f25      	subs	r5, r4, #4
   809a6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   809aa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   809ae:	e001      	b.n	809b4 <main_setup_out_received+0x30>
   809b0:	42ac      	cmp	r4, r5
   809b2:	d005      	beq.n	809c0 <main_setup_out_received+0x3c>
        handler_status = naeusb_out_request_handlers[i-1]();
   809b4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   809b8:	4798      	blx	r3
        if (handler_status == true) {
   809ba:	2800      	cmp	r0, #0
   809bc:	d0f8      	beq.n	809b0 <main_setup_out_received+0x2c>
        }
    }

    return false;

}
   809be:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   809c0:	2000      	movs	r0, #0
}
   809c2:	bd38      	pop	{r3, r4, r5, pc}
   809c4:	200036ac 	.word	0x200036ac
   809c8:	2000354d 	.word	0x2000354d
   809cc:	200030cc 	.word	0x200030cc
   809d0:	20003550 	.word	0x20003550

000809d4 <main_setup_in_received>:

bool main_setup_in_received(void)
{
   809d4:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;

    for (uint8_t i = naeusb_num_in_handlers; i > 0; i--) {
   809d6:	4b0b      	ldr	r3, [pc, #44]	; (80a04 <main_setup_in_received+0x30>)
   809d8:	781a      	ldrb	r2, [r3, #0]
   809da:	b18a      	cbz	r2, 80a00 <main_setup_in_received+0x2c>
   809dc:	4c0a      	ldr	r4, [pc, #40]	; (80a08 <main_setup_in_received+0x34>)
   809de:	1e55      	subs	r5, r2, #1
   809e0:	b2ed      	uxtb	r5, r5
   809e2:	1b53      	subs	r3, r2, r5
   809e4:	1f25      	subs	r5, r4, #4
   809e6:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   809ea:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   809ee:	e001      	b.n	809f4 <main_setup_in_received+0x20>
   809f0:	42ac      	cmp	r4, r5
   809f2:	d005      	beq.n	80a00 <main_setup_in_received+0x2c>
        handler_status = naeusb_in_request_handlers[i-1]();
   809f4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   809f8:	4798      	blx	r3
        if (handler_status == true) {
   809fa:	2800      	cmp	r0, #0
   809fc:	d0f8      	beq.n	809f0 <main_setup_in_received+0x1c>
        }
    }

    return false;

   809fe:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   80a00:	2000      	movs	r0, #0
   80a02:	bd38      	pop	{r3, r4, r5, pc}
   80a04:	2000354c 	.word	0x2000354c
   80a08:	2000350c 	.word	0x2000350c

00080a0c <naeusb_setup_out_received>:
}


bool naeusb_setup_out_received(void)
{
    switch (udd_g_ctrlreq.req.bRequest) {
   80a0c:	4b04      	ldr	r3, [pc, #16]	; (80a20 <naeusb_setup_out_received+0x14>)
   80a0e:	785a      	ldrb	r2, [r3, #1]
   80a10:	2a22      	cmp	r2, #34	; 0x22
        case REQ_SAM_CFG:
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   80a12:	bf03      	ittte	eq
   80a14:	4a03      	ldreq	r2, [pc, #12]	; (80a24 <naeusb_setup_out_received+0x18>)
            return true;
   80a16:	2001      	moveq	r0, #1
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   80a18:	611a      	streq	r2, [r3, #16]
            break;
    }
    return false;
   80a1a:	2000      	movne	r0, #0
}
   80a1c:	4770      	bx	lr
   80a1e:	bf00      	nop
   80a20:	200036ac 	.word	0x200036ac
   80a24:	00080a29 	.word	0x00080a29

00080a28 <naeusb_sam_cfg_out>:
{
   80a28:	b510      	push	{r4, lr}
    switch(udd_g_ctrlreq.req.wValue & 0xFF)
   80a2a:	4b22      	ldr	r3, [pc, #136]	; (80ab4 <naeusb_sam_cfg_out+0x8c>)
   80a2c:	789b      	ldrb	r3, [r3, #2]
   80a2e:	3b01      	subs	r3, #1
   80a30:	2b10      	cmp	r3, #16
   80a32:	d80a      	bhi.n	80a4a <naeusb_sam_cfg_out+0x22>
   80a34:	e8df f003 	tbb	[pc, r3]
   80a38:	091b160a 	.word	0x091b160a
   80a3c:	09090909 	.word	0x09090909
   80a40:	09090909 	.word	0x09090909
   80a44:	2d090909 	.word	0x2d090909
   80a48:	3a          	.byte	0x3a
   80a49:	00          	.byte	0x00
}
   80a4a:	bd10      	pop	{r4, pc}
		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   80a4c:	203e      	movs	r0, #62	; 0x3e
   80a4e:	4b1a      	ldr	r3, [pc, #104]	; (80ab8 <naeusb_sam_cfg_out+0x90>)
   80a50:	4798      	blx	r3
				BOARD_OSC_STARTUP_US, OSC_SLCK_32K_RC_HZ));
		break;
   80a52:	4c1a      	ldr	r4, [pc, #104]	; (80abc <naeusb_sam_cfg_out+0x94>)
	case OSC_MAINCK_12M_RC:
		return pmc_osc_is_ready_fastrc();

	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_main_xtal();
   80a54:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80a56:	2800      	cmp	r0, #0
   80a58:	d0fc      	beq.n	80a54 <naeusb_sam_cfg_out+0x2c>
   80a5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
   80a5e:	2010      	movs	r0, #16
   80a60:	4b17      	ldr	r3, [pc, #92]	; (80ac0 <naeusb_sam_cfg_out+0x98>)
   80a62:	4718      	bx	r3
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80a64:	2010      	movs	r0, #16
}
   80a66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80a6a:	4b16      	ldr	r3, [pc, #88]	; (80ac4 <naeusb_sam_cfg_out+0x9c>)
   80a6c:	4718      	bx	r3
        efc_perform_command(EFC0, EFC_FCMD_CGPB, 1);
   80a6e:	2201      	movs	r2, #1
   80a70:	210c      	movs	r1, #12
   80a72:	4b15      	ldr	r3, [pc, #84]	; (80ac8 <naeusb_sam_cfg_out+0xa0>)
   80a74:	4815      	ldr	r0, [pc, #84]	; (80acc <naeusb_sam_cfg_out+0xa4>)
   80a76:	4798      	blx	r3
 *
 * The driver must remove pull-up on USB line D- or D+.
 */
static inline void udc_detach(void)
{
	udd_detach();
   80a78:	4b15      	ldr	r3, [pc, #84]	; (80ad0 <naeusb_sam_cfg_out+0xa8>)
   80a7a:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   80a7c:	4a15      	ldr	r2, [pc, #84]	; (80ad4 <naeusb_sam_cfg_out+0xac>)
   80a7e:	6853      	ldr	r3, [r2, #4]
   80a80:	0399      	lsls	r1, r3, #14
   80a82:	d4fc      	bmi.n	80a7e <naeusb_sam_cfg_out+0x56>
		RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80a84:	6813      	ldr	r3, [r2, #0]
   80a86:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80a8a:	f043 0305 	orr.w	r3, r3, #5
   80a8e:	6013      	str	r3, [r2, #0]
        while(1);
   80a90:	e7fe      	b.n	80a90 <naeusb_sam_cfg_out+0x68>
   80a92:	4b0f      	ldr	r3, [pc, #60]	; (80ad0 <naeusb_sam_cfg_out+0xa8>)
   80a94:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   80a96:	4a0f      	ldr	r2, [pc, #60]	; (80ad4 <naeusb_sam_cfg_out+0xac>)
   80a98:	6853      	ldr	r3, [r2, #4]
   80a9a:	039b      	lsls	r3, r3, #14
   80a9c:	d4fc      	bmi.n	80a98 <naeusb_sam_cfg_out+0x70>
        RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80a9e:	6813      	ldr	r3, [r2, #0]
   80aa0:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80aa4:	f043 0305 	orr.w	r3, r3, #5
   80aa8:	6013      	str	r3, [r2, #0]
        while(1);
   80aaa:	e7fe      	b.n	80aaa <naeusb_sam_cfg_out+0x82>
        FPGA_releaselock();
   80aac:	4b0a      	ldr	r3, [pc, #40]	; (80ad8 <naeusb_sam_cfg_out+0xb0>)
}
   80aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FPGA_releaselock();
   80ab2:	4718      	bx	r3
   80ab4:	200036ac 	.word	0x200036ac
   80ab8:	000819d1 	.word	0x000819d1
   80abc:	000819f5 	.word	0x000819f5
   80ac0:	00081919 	.word	0x00081919
   80ac4:	00081975 	.word	0x00081975
   80ac8:	000814fd 	.word	0x000814fd
   80acc:	400e0800 	.word	0x400e0800
   80ad0:	00082bb5 	.word	0x00082bb5
   80ad4:	400e1200 	.word	0x400e1200
   80ad8:	000813c9 	.word	0x000813c9

00080adc <naeusb_setup_in_received>:

bool naeusb_setup_in_received(void)
{
   80adc:	b538      	push	{r3, r4, r5, lr}
    switch (udd_g_ctrlreq.req.bRequest) {
   80ade:	4c15      	ldr	r4, [pc, #84]	; (80b34 <naeusb_setup_in_received+0x58>)
   80ae0:	7863      	ldrb	r3, [r4, #1]
   80ae2:	2b17      	cmp	r3, #23
   80ae4:	d01b      	beq.n	80b1e <naeusb_setup_in_received+0x42>
   80ae6:	2b40      	cmp	r3, #64	; 0x40
   80ae8:	d117      	bne.n	80b1a <naeusb_setup_in_received+0x3e>
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   80aea:	f04f 0c20 	mov.w	ip, #32
    strncpy(respbuf, BUILD_TIME, 64);
   80aee:	4d12      	ldr	r5, [pc, #72]	; (80b38 <naeusb_setup_in_received+0x5c>)
   80af0:	4b12      	ldr	r3, [pc, #72]	; (80b3c <naeusb_setup_in_received+0x60>)
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   80af2:	2237      	movs	r2, #55	; 0x37
    strncpy(respbuf, BUILD_TIME, 64);
   80af4:	e893 0003 	ldmia.w	r3, {r0, r1}
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   80af8:	f885 c008 	strb.w	ip, [r5, #8]
    strncpy(respbuf, BUILD_TIME, 64);
   80afc:	e885 0003 	stmia.w	r5, {r0, r1}
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   80b00:	4b0f      	ldr	r3, [pc, #60]	; (80b40 <naeusb_setup_in_received+0x64>)
   80b02:	4910      	ldr	r1, [pc, #64]	; (80b44 <naeusb_setup_in_received+0x68>)
   80b04:	f105 0009 	add.w	r0, r5, #9
   80b08:	4798      	blx	r3
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b0a:	4628      	mov	r0, r5
   80b0c:	4b0e      	ldr	r3, [pc, #56]	; (80b48 <naeusb_setup_in_received+0x6c>)
    udd_g_ctrlreq.payload = respbuf;
   80b0e:	60a5      	str	r5, [r4, #8]
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b10:	4798      	blx	r3
   80b12:	4603      	mov	r3, r0
        case REQ_FW_VERSION:
            return naeusb_fw_version_in();
            break;
        case REQ_BUILD_DATE:
            return naeusb_build_date_in();
   80b14:	2001      	movs	r0, #1
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b16:	81a3      	strh	r3, [r4, #12]
            break;
    }
    return false;
}
   80b18:	bd38      	pop	{r3, r4, r5, pc}
    switch (udd_g_ctrlreq.req.bRequest) {
   80b1a:	2000      	movs	r0, #0
}
   80b1c:	bd38      	pop	{r3, r4, r5, pc}
    respbuf[0] = FW_VER_MAJOR;
   80b1e:	f240 1501 	movw	r5, #257	; 0x101
    respbuf[2] = FW_VER_DEBUG;
   80b22:	2100      	movs	r1, #0
    udd_g_ctrlreq.payload_size = 3;
   80b24:	2203      	movs	r2, #3
    respbuf[0] = FW_VER_MAJOR;
   80b26:	4b04      	ldr	r3, [pc, #16]	; (80b38 <naeusb_setup_in_received+0x5c>)
    udd_g_ctrlreq.payload_size = 3;
   80b28:	2001      	movs	r0, #1
    respbuf[0] = FW_VER_MAJOR;
   80b2a:	801d      	strh	r5, [r3, #0]
    respbuf[2] = FW_VER_DEBUG;
   80b2c:	7099      	strb	r1, [r3, #2]
    udd_g_ctrlreq.payload = respbuf;
   80b2e:	60a3      	str	r3, [r4, #8]
    udd_g_ctrlreq.payload_size = 3;
   80b30:	81a2      	strh	r2, [r4, #12]
}
   80b32:	bd38      	pop	{r3, r4, r5, pc}
   80b34:	200036ac 	.word	0x200036ac
   80b38:	20003590 	.word	0x20003590
   80b3c:	0008a30c 	.word	0x0008a30c
   80b40:	000837cd 	.word	0x000837cd
   80b44:	0008a300 	.word	0x0008a300
   80b48:	00083771 	.word	0x00083771

00080b4c <naeusb_register_handlers>:

void naeusb_register_handlers(void)
{
   80b4c:	b510      	push	{r4, lr}
    naeusb_add_in_handler(naeusb_setup_in_received);
   80b4e:	4b04      	ldr	r3, [pc, #16]	; (80b60 <naeusb_register_handlers+0x14>)
   80b50:	4804      	ldr	r0, [pc, #16]	; (80b64 <naeusb_register_handlers+0x18>)
   80b52:	4798      	blx	r3
    naeusb_add_out_handler(naeusb_setup_out_received);
   80b54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naeusb_add_out_handler(naeusb_setup_out_received);
   80b58:	4803      	ldr	r0, [pc, #12]	; (80b68 <naeusb_register_handlers+0x1c>)
   80b5a:	4b04      	ldr	r3, [pc, #16]	; (80b6c <naeusb_register_handlers+0x20>)
   80b5c:	4718      	bx	r3
   80b5e:	bf00      	nop
   80b60:	000808cd 	.word	0x000808cd
   80b64:	00080add 	.word	0x00080add
   80b68:	00080a0d 	.word	0x00080a0d
   80b6c:	000808f5 	.word	0x000808f5

00080b70 <udc_valid_address>:
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   80b70:	4a02      	ldr	r2, [pc, #8]	; (80b7c <udc_valid_address+0xc>)
   80b72:	4b03      	ldr	r3, [pc, #12]	; (80b80 <udc_valid_address+0x10>)
   80b74:	8850      	ldrh	r0, [r2, #2]
   80b76:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   80b7a:	4718      	bx	r3
   80b7c:	200036ac 	.word	0x200036ac
   80b80:	00082c39 	.word	0x00082c39

00080b84 <udc_update_iface_desc.part.0>:
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80b84:	4b15      	ldr	r3, [pc, #84]	; (80bdc <udc_update_iface_desc.part.0+0x58>)
   80b86:	681b      	ldr	r3, [r3, #0]
   80b88:	681b      	ldr	r3, [r3, #0]
   80b8a:	791a      	ldrb	r2, [r3, #4]
   80b8c:	4282      	cmp	r2, r0
   80b8e:	d922      	bls.n	80bd6 <udc_update_iface_desc.part.0+0x52>
static bool udc_update_iface_desc(uint8_t iface_num, uint8_t setting_num)
   80b90:	b430      	push	{r4, r5}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80b92:	4c13      	ldr	r4, [pc, #76]	; (80be0 <udc_update_iface_desc.part.0+0x5c>)
   80b94:	6023      	str	r3, [r4, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80b96:	f8b3 c002 	ldrh.w	ip, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80b9a:	449c      	add	ip, r3
	while (ptr_end_desc >
   80b9c:	4563      	cmp	r3, ip
   80b9e:	d217      	bcs.n	80bd0 <udc_update_iface_desc.part.0+0x4c>
   80ba0:	2500      	movs	r5, #0
   80ba2:	e004      	b.n	80bae <udc_update_iface_desc.part.0+0x2a>
				udc_ptr_iface->bLength);
   80ba4:	781a      	ldrb	r2, [r3, #0]
   80ba6:	2501      	movs	r5, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80ba8:	4413      	add	r3, r2
	while (ptr_end_desc >
   80baa:	459c      	cmp	ip, r3
   80bac:	d90c      	bls.n	80bc8 <udc_update_iface_desc.part.0+0x44>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80bae:	785a      	ldrb	r2, [r3, #1]
   80bb0:	2a04      	cmp	r2, #4
   80bb2:	d1f7      	bne.n	80ba4 <udc_update_iface_desc.part.0+0x20>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80bb4:	789a      	ldrb	r2, [r3, #2]
   80bb6:	4282      	cmp	r2, r0
   80bb8:	d1f4      	bne.n	80ba4 <udc_update_iface_desc.part.0+0x20>
   80bba:	78da      	ldrb	r2, [r3, #3]
   80bbc:	428a      	cmp	r2, r1
   80bbe:	d1f1      	bne.n	80ba4 <udc_update_iface_desc.part.0+0x20>
   80bc0:	b105      	cbz	r5, 80bc4 <udc_update_iface_desc.part.0+0x40>
   80bc2:	6023      	str	r3, [r4, #0]
				return true; // Interface found
   80bc4:	2001      	movs	r0, #1
   80bc6:	e001      	b.n	80bcc <udc_update_iface_desc.part.0+0x48>
	return false; // Interface not found
   80bc8:	2000      	movs	r0, #0
   80bca:	6023      	str	r3, [r4, #0]
}
   80bcc:	bc30      	pop	{r4, r5}
   80bce:	4770      	bx	lr
		return false;
   80bd0:	2000      	movs	r0, #0
}
   80bd2:	bc30      	pop	{r4, r5}
   80bd4:	4770      	bx	lr
		return false;
   80bd6:	2000      	movs	r0, #0
}
   80bd8:	4770      	bx	lr
   80bda:	bf00      	nop
   80bdc:	200035d8 	.word	0x200035d8
   80be0:	200035dc 	.word	0x200035dc

00080be4 <udc_iface_disable>:
{
   80be4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (0 == udc_num_configuration) {
   80be8:	4c1c      	ldr	r4, [pc, #112]	; (80c5c <udc_iface_disable+0x78>)
   80bea:	7823      	ldrb	r3, [r4, #0]
   80bec:	b37b      	cbz	r3, 80c4e <udc_iface_disable+0x6a>
   80bee:	2100      	movs	r1, #0
   80bf0:	4e1b      	ldr	r6, [pc, #108]	; (80c60 <udc_iface_disable+0x7c>)
   80bf2:	4605      	mov	r5, r0
   80bf4:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, 0)) {
   80bf6:	b350      	cbz	r0, 80c4e <udc_iface_disable+0x6a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80bf8:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80c64 <udc_iface_disable+0x80>
   80bfc:	f8d8 3000 	ldr.w	r3, [r8]
   80c00:	685b      	ldr	r3, [r3, #4]
   80c02:	f853 7025 	ldr.w	r7, [r3, r5, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80c06:	68fb      	ldr	r3, [r7, #12]
   80c08:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80c0a:	7823      	ldrb	r3, [r4, #0]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80c0c:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   80c0e:	b1f3      	cbz	r3, 80c4e <udc_iface_disable+0x6a>
   80c10:	4628      	mov	r0, r5
   80c12:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80c14:	4605      	mov	r5, r0
   80c16:	b1d0      	cbz	r0, 80c4e <udc_iface_disable+0x6a>
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80c18:	4b13      	ldr	r3, [pc, #76]	; (80c68 <udc_iface_disable+0x84>)
			udd_ep_free(ep_desc->bEndpointAddress);
   80c1a:	4e14      	ldr	r6, [pc, #80]	; (80c6c <udc_iface_disable+0x88>)
		ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80c1c:	681c      	ldr	r4, [r3, #0]
			udc_ptr_conf->desc +
   80c1e:	f8d8 2000 	ldr.w	r2, [r8]
			desc->bLength);
   80c22:	7823      	ldrb	r3, [r4, #0]
			udc_ptr_conf->desc +
   80c24:	6812      	ldr	r2, [r2, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80c26:	441c      	add	r4, r3
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80c28:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80c2a:	441a      	add	r2, r3
	while (ptr_eof_desc > desc) {
   80c2c:	42a2      	cmp	r2, r4
   80c2e:	d806      	bhi.n	80c3e <udc_iface_disable+0x5a>
   80c30:	e008      	b.n	80c44 <udc_iface_disable+0x60>
		if (desc_id == desc->bDescriptorType) {
   80c32:	2b05      	cmp	r3, #5
   80c34:	d00f      	beq.n	80c56 <udc_iface_disable+0x72>
				desc->bLength);
   80c36:	7823      	ldrb	r3, [r4, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80c38:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80c3a:	42a2      	cmp	r2, r4
   80c3c:	d902      	bls.n	80c44 <udc_iface_disable+0x60>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80c3e:	7863      	ldrb	r3, [r4, #1]
   80c40:	2b04      	cmp	r3, #4
   80c42:	d1f6      	bne.n	80c32 <udc_iface_disable+0x4e>
	udi_api->disable();
   80c44:	687b      	ldr	r3, [r7, #4]
   80c46:	4798      	blx	r3
}
   80c48:	4628      	mov	r0, r5
   80c4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   80c4e:	2500      	movs	r5, #0
}
   80c50:	4628      	mov	r0, r5
   80c52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			udd_ep_free(ep_desc->bEndpointAddress);
   80c56:	78a0      	ldrb	r0, [r4, #2]
   80c58:	47b0      	blx	r6
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80c5a:	e7e0      	b.n	80c1e <udc_iface_disable+0x3a>
   80c5c:	200035d5 	.word	0x200035d5
   80c60:	00080b85 	.word	0x00080b85
   80c64:	200035d8 	.word	0x200035d8
   80c68:	200035dc 	.word	0x200035dc
   80c6c:	00082c8d 	.word	0x00082c8d

00080c70 <udc_iface_enable>:
	if (0 == udc_num_configuration) {
   80c70:	4b18      	ldr	r3, [pc, #96]	; (80cd4 <udc_iface_enable+0x64>)
   80c72:	781b      	ldrb	r3, [r3, #0]
   80c74:	b35b      	cbz	r3, 80cce <udc_iface_enable+0x5e>
{
   80c76:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c7a:	4b17      	ldr	r3, [pc, #92]	; (80cd8 <udc_iface_enable+0x68>)
   80c7c:	4605      	mov	r5, r0
   80c7e:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   80c80:	b310      	cbz	r0, 80cc8 <udc_iface_enable+0x58>
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80c82:	4b16      	ldr	r3, [pc, #88]	; (80cdc <udc_iface_enable+0x6c>)
   80c84:	4e16      	ldr	r6, [pc, #88]	; (80ce0 <udc_iface_enable+0x70>)
   80c86:	681c      	ldr	r4, [r3, #0]
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80c88:	4f16      	ldr	r7, [pc, #88]	; (80ce4 <udc_iface_enable+0x74>)
			udc_ptr_conf->desc +
   80c8a:	6831      	ldr	r1, [r6, #0]
			desc->bLength);
   80c8c:	7823      	ldrb	r3, [r4, #0]
			udc_ptr_conf->desc +
   80c8e:	680a      	ldr	r2, [r1, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80c90:	441c      	add	r4, r3
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80c92:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80c94:	441a      	add	r2, r3
	while (ptr_eof_desc > desc) {
   80c96:	42a2      	cmp	r2, r4
   80c98:	d806      	bhi.n	80ca8 <udc_iface_enable+0x38>
   80c9a:	e008      	b.n	80cae <udc_iface_enable+0x3e>
		if (desc_id == desc->bDescriptorType) {
   80c9c:	2b05      	cmp	r3, #5
   80c9e:	d00d      	beq.n	80cbc <udc_iface_enable+0x4c>
				desc->bLength);
   80ca0:	7823      	ldrb	r3, [r4, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80ca2:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80ca4:	42a2      	cmp	r2, r4
   80ca6:	d902      	bls.n	80cae <udc_iface_enable+0x3e>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80ca8:	7863      	ldrb	r3, [r4, #1]
   80caa:	2b04      	cmp	r3, #4
   80cac:	d1f6      	bne.n	80c9c <udc_iface_enable+0x2c>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80cae:	684b      	ldr	r3, [r1, #4]
   80cb0:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
}
   80cb4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80cb8:	681b      	ldr	r3, [r3, #0]
   80cba:	4718      	bx	r3
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80cbc:	88a2      	ldrh	r2, [r4, #4]
   80cbe:	78e1      	ldrb	r1, [r4, #3]
   80cc0:	78a0      	ldrb	r0, [r4, #2]
   80cc2:	47b8      	blx	r7
   80cc4:	2800      	cmp	r0, #0
   80cc6:	d1e0      	bne.n	80c8a <udc_iface_enable+0x1a>
}
   80cc8:	2000      	movs	r0, #0
   80cca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80cce:	2000      	movs	r0, #0
   80cd0:	4770      	bx	lr
   80cd2:	bf00      	nop
   80cd4:	200035d5 	.word	0x200035d5
   80cd8:	00080b85 	.word	0x00080b85
   80cdc:	200035dc 	.word	0x200035dc
   80ce0:	200035d8 	.word	0x200035d8
   80ce4:	00082f5d 	.word	0x00082f5d

00080ce8 <udc_get_interface_desc>:
	return udc_ptr_iface;
   80ce8:	4b01      	ldr	r3, [pc, #4]	; (80cf0 <udc_get_interface_desc+0x8>)
}
   80cea:	6818      	ldr	r0, [r3, #0]
   80cec:	4770      	bx	lr
   80cee:	bf00      	nop
   80cf0:	200035dc 	.word	0x200035dc

00080cf4 <udc_start>:
	udd_enable();
   80cf4:	4b00      	ldr	r3, [pc, #0]	; (80cf8 <udc_start+0x4>)
   80cf6:	4718      	bx	r3
   80cf8:	00082af5 	.word	0x00082af5

00080cfc <udc_reset>:
{
   80cfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (udc_num_configuration) {
   80cfe:	4f0c      	ldr	r7, [pc, #48]	; (80d30 <udc_reset+0x34>)
   80d00:	783b      	ldrb	r3, [r7, #0]
   80d02:	b17b      	cbz	r3, 80d24 <udc_reset+0x28>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d04:	4d0b      	ldr	r5, [pc, #44]	; (80d34 <udc_reset+0x38>)
   80d06:	682b      	ldr	r3, [r5, #0]
   80d08:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80d0a:	791b      	ldrb	r3, [r3, #4]
   80d0c:	b153      	cbz	r3, 80d24 <udc_reset+0x28>
   80d0e:	2400      	movs	r4, #0
   80d10:	4620      	mov	r0, r4
   80d12:	4e09      	ldr	r6, [pc, #36]	; (80d38 <udc_reset+0x3c>)
			udc_iface_disable(iface_num);
   80d14:	47b0      	blx	r6
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d16:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
   80d18:	3401      	adds	r4, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d1a:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   80d1c:	b2e0      	uxtb	r0, r4
   80d1e:	791b      	ldrb	r3, [r3, #4]
   80d20:	4283      	cmp	r3, r0
   80d22:	d8f7      	bhi.n	80d14 <udc_reset+0x18>
	udc_num_configuration = 0;
   80d24:	2300      	movs	r3, #0
	udc_device_status =
   80d26:	4a05      	ldr	r2, [pc, #20]	; (80d3c <udc_reset+0x40>)
	udc_num_configuration = 0;
   80d28:	703b      	strb	r3, [r7, #0]
	udc_device_status =
   80d2a:	8013      	strh	r3, [r2, #0]
}
   80d2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80d2e:	bf00      	nop
   80d30:	200035d5 	.word	0x200035d5
   80d34:	200035d8 	.word	0x200035d8
   80d38:	00080be5 	.word	0x00080be5
   80d3c:	200035d0 	.word	0x200035d0

00080d40 <udc_sof_notify>:
{
   80d40:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80d42:	4b0c      	ldr	r3, [pc, #48]	; (80d74 <udc_sof_notify+0x34>)
   80d44:	781b      	ldrb	r3, [r3, #0]
   80d46:	b19b      	cbz	r3, 80d70 <udc_sof_notify+0x30>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d48:	4d0b      	ldr	r5, [pc, #44]	; (80d78 <udc_sof_notify+0x38>)
   80d4a:	682b      	ldr	r3, [r5, #0]
   80d4c:	681a      	ldr	r2, [r3, #0]
		for (iface_num = 0;
   80d4e:	7912      	ldrb	r2, [r2, #4]
   80d50:	b172      	cbz	r2, 80d70 <udc_sof_notify+0x30>
   80d52:	2400      	movs	r4, #0
   80d54:	4622      	mov	r2, r4
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80d56:	685b      	ldr	r3, [r3, #4]
		for (iface_num = 0;
   80d58:	3401      	adds	r4, #1
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80d5a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   80d5e:	691b      	ldr	r3, [r3, #16]
   80d60:	b103      	cbz	r3, 80d64 <udc_sof_notify+0x24>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80d62:	4798      	blx	r3
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d64:	682b      	ldr	r3, [r5, #0]
		for (iface_num = 0;
   80d66:	b2e2      	uxtb	r2, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d68:	6819      	ldr	r1, [r3, #0]
		for (iface_num = 0;
   80d6a:	7909      	ldrb	r1, [r1, #4]
   80d6c:	4291      	cmp	r1, r2
   80d6e:	d8f2      	bhi.n	80d56 <udc_sof_notify+0x16>
}
   80d70:	bd38      	pop	{r3, r4, r5, pc}
   80d72:	bf00      	nop
   80d74:	200035d5 	.word	0x200035d5
   80d78:	200035d8 	.word	0x200035d8

00080d7c <udc_process_setup>:
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80d7c:	2300      	movs	r3, #0
{
   80d7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	udd_g_ctrlreq.payload_size = 0;
   80d82:	4c8b      	ldr	r4, [pc, #556]	; (80fb0 <udc_process_setup+0x234>)
	udd_g_ctrlreq.callback = NULL;
	udd_g_ctrlreq.over_under_run = NULL;

	// MS requests this using request type 0xC0 and our user defined bRequest (0x01 in our case)
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80d84:	8822      	ldrh	r2, [r4, #0]
	udd_g_ctrlreq.over_under_run = NULL;
   80d86:	e9c4 3304 	strd	r3, r3, [r4, #16]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80d8a:	f5b2 7fe0 	cmp.w	r2, #448	; 0x1c0
	udd_g_ctrlreq.payload_size = 0;
   80d8e:	81a3      	strh	r3, [r4, #12]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80d90:	f000 80d0 	beq.w	80f34 <udc_process_setup+0x1b8>
#endif
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
		return true;
	}

	if (Udd_setup_is_in()) {
   80d94:	f994 2000 	ldrsb.w	r2, [r4]
   80d98:	7823      	ldrb	r3, [r4, #0]
   80d9a:	2a00      	cmp	r2, #0
   80d9c:	db0e      	blt.n	80dbc <udc_process_setup+0x40>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80d9e:	f013 0f60 	tst.w	r3, #96	; 0x60
   80da2:	d079      	beq.n	80e98 <udc_process_setup+0x11c>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80da4:	f013 0f1e 	tst.w	r3, #30
   80da8:	d040      	beq.n	80e2c <udc_process_setup+0xb0>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80daa:	f003 031f 	and.w	r3, r3, #31
   80dae:	2b02      	cmp	r3, #2
   80db0:	f000 80b6 	beq.w	80f20 <udc_process_setup+0x1a4>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   80db4:	2500      	movs	r5, #0
#endif
}
   80db6:	4628      	mov	r0, r5
   80db8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   80dbc:	88e5      	ldrh	r5, [r4, #6]
   80dbe:	2d00      	cmp	r5, #0
   80dc0:	d0f8      	beq.n	80db4 <udc_process_setup+0x38>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80dc2:	f013 0f60 	tst.w	r3, #96	; 0x60
   80dc6:	d1ed      	bne.n	80da4 <udc_process_setup+0x28>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80dc8:	f013 021f 	ands.w	r2, r3, #31
   80dcc:	f000 8165 	beq.w	8109a <udc_process_setup+0x31e>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80dd0:	2a01      	cmp	r2, #1
   80dd2:	f040 80b9 	bne.w	80f48 <udc_process_setup+0x1cc>
			switch (udd_g_ctrlreq.req.bRequest) {
   80dd6:	7862      	ldrb	r2, [r4, #1]
   80dd8:	2a0a      	cmp	r2, #10
   80dda:	d124      	bne.n	80e26 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80ddc:	2d01      	cmp	r5, #1
   80dde:	d122      	bne.n	80e26 <udc_process_setup+0xaa>
	if (!udc_num_configuration) {
   80de0:	4a74      	ldr	r2, [pc, #464]	; (80fb4 <udc_process_setup+0x238>)
   80de2:	7812      	ldrb	r2, [r2, #0]
   80de4:	b1fa      	cbz	r2, 80e26 <udc_process_setup+0xaa>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80de6:	4a74      	ldr	r2, [pc, #464]	; (80fb8 <udc_process_setup+0x23c>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80de8:	7926      	ldrb	r6, [r4, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80dea:	6817      	ldr	r7, [r2, #0]
   80dec:	683a      	ldr	r2, [r7, #0]
   80dee:	7912      	ldrb	r2, [r2, #4]
   80df0:	42b2      	cmp	r2, r6
   80df2:	d918      	bls.n	80e26 <udc_process_setup+0xaa>
	if (0 == udc_num_configuration) {
   80df4:	2100      	movs	r1, #0
   80df6:	4630      	mov	r0, r6
   80df8:	4b70      	ldr	r3, [pc, #448]	; (80fbc <udc_process_setup+0x240>)
   80dfa:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, 0)) {
   80dfc:	4605      	mov	r5, r0
   80dfe:	2800      	cmp	r0, #0
   80e00:	f000 80c5 	beq.w	80f8e <udc_process_setup+0x212>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80e04:	687b      	ldr	r3, [r7, #4]
	udc_iface_setting = udi_api->getsetting();
   80e06:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
   80e0a:	68db      	ldr	r3, [r3, #12]
   80e0c:	4798      	blx	r3
   80e0e:	4602      	mov	r2, r0
   80e10:	486b      	ldr	r0, [pc, #428]	; (80fc0 <udc_process_setup+0x244>)
	udd_set_setup_payload(&udc_iface_setting,1);
   80e12:	2101      	movs	r1, #1
   80e14:	4b6b      	ldr	r3, [pc, #428]	; (80fc4 <udc_process_setup+0x248>)
	udc_iface_setting = udi_api->getsetting();
   80e16:	7002      	strb	r2, [r0, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   80e18:	4798      	blx	r3
	return true;
   80e1a:	e7cc      	b.n	80db6 <udc_process_setup+0x3a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80e1c:	2a01      	cmp	r2, #1
   80e1e:	f000 814d 	beq.w	810bc <udc_process_setup+0x340>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80e22:	2a02      	cmp	r2, #2
   80e24:	d06c      	beq.n	80f00 <udc_process_setup+0x184>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80e26:	f013 0f1e 	tst.w	r3, #30
   80e2a:	d1c3      	bne.n	80db4 <udc_process_setup+0x38>
		if (udd_g_ctrlreq.req.wIndex == 2) {
   80e2c:	88a3      	ldrh	r3, [r4, #4]
	if (0 == udc_num_configuration) {
   80e2e:	4e61      	ldr	r6, [pc, #388]	; (80fb4 <udc_process_setup+0x238>)
		if (udd_g_ctrlreq.req.wIndex == 2) {
   80e30:	2b02      	cmp	r3, #2
			udd_g_ctrlreq.req.wIndex = 1;
   80e32:	bf04      	itt	eq
   80e34:	2301      	moveq	r3, #1
   80e36:	80a3      	strheq	r3, [r4, #4]
	if (0 == udc_num_configuration) {
   80e38:	7833      	ldrb	r3, [r6, #0]
   80e3a:	2b00      	cmp	r3, #0
   80e3c:	d0ba      	beq.n	80db4 <udc_process_setup+0x38>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80e3e:	4f5e      	ldr	r7, [pc, #376]	; (80fb8 <udc_process_setup+0x23c>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80e40:	f894 8004 	ldrb.w	r8, [r4, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80e44:	683d      	ldr	r5, [r7, #0]
   80e46:	682b      	ldr	r3, [r5, #0]
   80e48:	791b      	ldrb	r3, [r3, #4]
   80e4a:	4598      	cmp	r8, r3
   80e4c:	d340      	bcc.n	80ed0 <udc_process_setup+0x154>
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80e4e:	7822      	ldrb	r2, [r4, #0]
   80e50:	f002 021f 	and.w	r2, r2, #31
   80e54:	2a02      	cmp	r2, #2
   80e56:	d1ad      	bne.n	80db4 <udc_process_setup+0x38>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e58:	2b00      	cmp	r3, #0
   80e5a:	d0ab      	beq.n	80db4 <udc_process_setup+0x38>
   80e5c:	2400      	movs	r4, #0
   80e5e:	46a0      	mov	r8, r4
   80e60:	f8df 9158 	ldr.w	r9, [pc, #344]	; 80fbc <udc_process_setup+0x240>
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80e64:	686b      	ldr	r3, [r5, #4]
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e66:	3401      	adds	r4, #1
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80e68:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e6c:	68eb      	ldr	r3, [r5, #12]
   80e6e:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80e70:	7833      	ldrb	r3, [r6, #0]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e72:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   80e74:	2b00      	cmp	r3, #0
   80e76:	d09d      	beq.n	80db4 <udc_process_setup+0x38>
   80e78:	4640      	mov	r0, r8
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e7a:	fa5f f884 	uxtb.w	r8, r4
   80e7e:	47c8      	blx	r9
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80e80:	2800      	cmp	r0, #0
   80e82:	d097      	beq.n	80db4 <udc_process_setup+0x38>
		if (udi_api->setup()) {
   80e84:	68ab      	ldr	r3, [r5, #8]
   80e86:	4798      	blx	r3
   80e88:	2800      	cmp	r0, #0
   80e8a:	d137      	bne.n	80efc <udc_process_setup+0x180>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e8c:	683d      	ldr	r5, [r7, #0]
   80e8e:	682b      	ldr	r3, [r5, #0]
   80e90:	791b      	ldrb	r3, [r3, #4]
   80e92:	4543      	cmp	r3, r8
   80e94:	d8e6      	bhi.n	80e64 <udc_process_setup+0xe8>
   80e96:	e78d      	b.n	80db4 <udc_process_setup+0x38>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80e98:	f013 021f 	ands.w	r2, r3, #31
   80e9c:	d1be      	bne.n	80e1c <udc_process_setup+0xa0>
			switch (udd_g_ctrlreq.req.bRequest) {
   80e9e:	7862      	ldrb	r2, [r4, #1]
   80ea0:	3a01      	subs	r2, #1
   80ea2:	2a08      	cmp	r2, #8
   80ea4:	d8bf      	bhi.n	80e26 <udc_process_setup+0xaa>
   80ea6:	a101      	add	r1, pc, #4	; (adr r1, 80eac <udc_process_setup+0x130>)
   80ea8:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
   80eac:	00080f93 	.word	0x00080f93
   80eb0:	00080e27 	.word	0x00080e27
   80eb4:	00080f6f 	.word	0x00080f6f
   80eb8:	00080e27 	.word	0x00080e27
   80ebc:	0008108b 	.word	0x0008108b
   80ec0:	00080e27 	.word	0x00080e27
   80ec4:	00080e27 	.word	0x00080e27
   80ec8:	00080e27 	.word	0x00080e27
   80ecc:	00080fdd 	.word	0x00080fdd
	if (0 == udc_num_configuration) {
   80ed0:	2100      	movs	r1, #0
   80ed2:	4640      	mov	r0, r8
   80ed4:	4f39      	ldr	r7, [pc, #228]	; (80fbc <udc_process_setup+0x240>)
   80ed6:	47b8      	blx	r7
	if (!udc_update_iface_desc(iface_num, 0)) {
   80ed8:	2800      	cmp	r0, #0
   80eda:	d033      	beq.n	80f44 <udc_process_setup+0x1c8>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80edc:	686b      	ldr	r3, [r5, #4]
   80ede:	f853 5028 	ldr.w	r5, [r3, r8, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80ee2:	68eb      	ldr	r3, [r5, #12]
   80ee4:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80ee6:	7833      	ldrb	r3, [r6, #0]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80ee8:	4601      	mov	r1, r0
	if (0 == udc_num_configuration) {
   80eea:	2b00      	cmp	r3, #0
   80eec:	f43f af62 	beq.w	80db4 <udc_process_setup+0x38>
   80ef0:	4640      	mov	r0, r8
   80ef2:	47b8      	blx	r7
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80ef4:	b330      	cbz	r0, 80f44 <udc_process_setup+0x1c8>
	return udi_api->setup();
   80ef6:	68ab      	ldr	r3, [r5, #8]
   80ef8:	4798      	blx	r3
		if (udc_req_iface()) {
   80efa:	b318      	cbz	r0, 80f44 <udc_process_setup+0x1c8>
			return true;
   80efc:	2501      	movs	r5, #1
   80efe:	e75a      	b.n	80db6 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   80f00:	7862      	ldrb	r2, [r4, #1]
   80f02:	2a01      	cmp	r2, #1
   80f04:	f000 80f7 	beq.w	810f6 <udc_process_setup+0x37a>
   80f08:	2a03      	cmp	r2, #3
   80f0a:	d106      	bne.n	80f1a <udc_process_setup+0x19e>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   80f0c:	88e2      	ldrh	r2, [r4, #6]
   80f0e:	8861      	ldrh	r1, [r4, #2]
   80f10:	430a      	orrs	r2, r1
   80f12:	b292      	uxth	r2, r2
   80f14:	2a00      	cmp	r2, #0
   80f16:	f000 81c1 	beq.w	8129c <udc_process_setup+0x520>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80f1a:	f013 0f1e 	tst.w	r3, #30
   80f1e:	d085      	beq.n	80e2c <udc_process_setup+0xb0>
	if (0 == udc_num_configuration) {
   80f20:	4e24      	ldr	r6, [pc, #144]	; (80fb4 <udc_process_setup+0x238>)
   80f22:	7833      	ldrb	r3, [r6, #0]
   80f24:	2b00      	cmp	r3, #0
   80f26:	f43f af45 	beq.w	80db4 <udc_process_setup+0x38>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f2a:	4f23      	ldr	r7, [pc, #140]	; (80fb8 <udc_process_setup+0x23c>)
   80f2c:	683d      	ldr	r5, [r7, #0]
   80f2e:	682b      	ldr	r3, [r5, #0]
   80f30:	791b      	ldrb	r3, [r3, #4]
   80f32:	e791      	b.n	80e58 <udc_process_setup+0xdc>
		return true;
   80f34:	2501      	movs	r5, #1
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
   80f36:	219e      	movs	r1, #158	; 0x9e
   80f38:	4823      	ldr	r0, [pc, #140]	; (80fc8 <udc_process_setup+0x24c>)
   80f3a:	4b22      	ldr	r3, [pc, #136]	; (80fc4 <udc_process_setup+0x248>)
   80f3c:	4798      	blx	r3
}
   80f3e:	4628      	mov	r0, r5
   80f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80f44:	7823      	ldrb	r3, [r4, #0]
   80f46:	e730      	b.n	80daa <udc_process_setup+0x2e>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80f48:	2a02      	cmp	r2, #2
   80f4a:	f47f af6c 	bne.w	80e26 <udc_process_setup+0xaa>
			switch (udd_g_ctrlreq.req.bRequest) {
   80f4e:	7862      	ldrb	r2, [r4, #1]
   80f50:	2a00      	cmp	r2, #0
   80f52:	d1e2      	bne.n	80f1a <udc_process_setup+0x19e>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   80f54:	2d02      	cmp	r5, #2
   80f56:	d1e0      	bne.n	80f1a <udc_process_setup+0x19e>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   80f58:	7920      	ldrb	r0, [r4, #4]
   80f5a:	4b1c      	ldr	r3, [pc, #112]	; (80fcc <udc_process_setup+0x250>)
   80f5c:	4798      	blx	r3
   80f5e:	4602      	mov	r2, r0
   80f60:	481b      	ldr	r0, [pc, #108]	; (80fd0 <udc_process_setup+0x254>)
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   80f62:	4629      	mov	r1, r5
   80f64:	4b17      	ldr	r3, [pc, #92]	; (80fc4 <udc_process_setup+0x248>)
			return true;
   80f66:	2501      	movs	r5, #1
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   80f68:	8002      	strh	r2, [r0, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   80f6a:	4798      	blx	r3
	return true;
   80f6c:	e723      	b.n	80db6 <udc_process_setup+0x3a>
	if (udd_g_ctrlreq.req.wLength) {
   80f6e:	88e2      	ldrh	r2, [r4, #6]
   80f70:	2a00      	cmp	r2, #0
   80f72:	f47f af58 	bne.w	80e26 <udc_process_setup+0xaa>
	switch (udd_g_ctrlreq.req.wValue) {
   80f76:	8862      	ldrh	r2, [r4, #2]
   80f78:	2a02      	cmp	r2, #2
   80f7a:	f47f af54 	bne.w	80e26 <udc_process_setup+0xaa>
		if (!udd_is_high_speed()) {
   80f7e:	4b15      	ldr	r3, [pc, #84]	; (80fd4 <udc_process_setup+0x258>)
   80f80:	4798      	blx	r3
   80f82:	4605      	mov	r5, r0
   80f84:	b118      	cbz	r0, 80f8e <udc_process_setup+0x212>
		if (udd_g_ctrlreq.req.wIndex & 0xff) {
   80f86:	7923      	ldrb	r3, [r4, #4]
   80f88:	2b00      	cmp	r3, #0
   80f8a:	f000 81bc 	beq.w	81306 <udc_process_setup+0x58a>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80f8e:	7823      	ldrb	r3, [r4, #0]
   80f90:	e708      	b.n	80da4 <udc_process_setup+0x28>
	if (udd_g_ctrlreq.req.wLength) {
   80f92:	88e2      	ldrh	r2, [r4, #6]
   80f94:	2a00      	cmp	r2, #0
   80f96:	f47f af46 	bne.w	80e26 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   80f9a:	8865      	ldrh	r5, [r4, #2]
   80f9c:	2d01      	cmp	r5, #1
   80f9e:	f47f af42 	bne.w	80e26 <udc_process_setup+0xaa>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   80fa2:	4a0d      	ldr	r2, [pc, #52]	; (80fd8 <udc_process_setup+0x25c>)
   80fa4:	8813      	ldrh	r3, [r2, #0]
   80fa6:	f023 0302 	bic.w	r3, r3, #2
   80faa:	8013      	strh	r3, [r2, #0]
		return true;
   80fac:	e703      	b.n	80db6 <udc_process_setup+0x3a>
   80fae:	bf00      	nop
   80fb0:	200036ac 	.word	0x200036ac
   80fb4:	200035d5 	.word	0x200035d5
   80fb8:	200035d8 	.word	0x200035d8
   80fbc:	00080b85 	.word	0x00080b85
   80fc0:	200035d4 	.word	0x200035d4
   80fc4:	00082c81 	.word	0x00082c81
   80fc8:	200001ec 	.word	0x200001ec
   80fcc:	00082cdd 	.word	0x00082cdd
   80fd0:	200035d2 	.word	0x200035d2
   80fd4:	00082c29 	.word	0x00082c29
   80fd8:	200035d0 	.word	0x200035d0
	if (udd_g_ctrlreq.req.wLength) {
   80fdc:	88e2      	ldrh	r2, [r4, #6]
   80fde:	2a00      	cmp	r2, #0
   80fe0:	f47f af21 	bne.w	80e26 <udc_process_setup+0xaa>
	if (!udd_getaddress()) {
   80fe4:	4b9c      	ldr	r3, [pc, #624]	; (81258 <udc_process_setup+0x4dc>)
   80fe6:	4798      	blx	r3
   80fe8:	2800      	cmp	r0, #0
   80fea:	d0d0      	beq.n	80f8e <udc_process_setup+0x212>
	if (udd_is_high_speed()) {
   80fec:	f8df 926c 	ldr.w	r9, [pc, #620]	; 8125c <udc_process_setup+0x4e0>
   80ff0:	47c8      	blx	r9
				udc_config.confdev_hs->bNumConfigurations) {
   80ff2:	f8df a26c 	ldr.w	sl, [pc, #620]	; 81260 <udc_process_setup+0x4e4>
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   80ff6:	78a3      	ldrb	r3, [r4, #2]
	if (udd_is_high_speed()) {
   80ff8:	2800      	cmp	r0, #0
   80ffa:	f000 8125 	beq.w	81248 <udc_process_setup+0x4cc>
				udc_config.confdev_hs->bNumConfigurations) {
   80ffe:	f8da 2008 	ldr.w	r2, [sl, #8]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81002:	7c52      	ldrb	r2, [r2, #17]
   81004:	429a      	cmp	r2, r3
   81006:	d3c2      	bcc.n	80f8e <udc_process_setup+0x212>
	if (udc_num_configuration) {
   81008:	4e96      	ldr	r6, [pc, #600]	; (81264 <udc_process_setup+0x4e8>)
   8100a:	7833      	ldrb	r3, [r6, #0]
   8100c:	b183      	cbz	r3, 81030 <udc_process_setup+0x2b4>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8100e:	4f96      	ldr	r7, [pc, #600]	; (81268 <udc_process_setup+0x4ec>)
   81010:	683b      	ldr	r3, [r7, #0]
   81012:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81014:	791b      	ldrb	r3, [r3, #4]
   81016:	b15b      	cbz	r3, 81030 <udc_process_setup+0x2b4>
   81018:	2500      	movs	r5, #0
   8101a:	4628      	mov	r0, r5
   8101c:	f8df 824c 	ldr.w	r8, [pc, #588]	; 8126c <udc_process_setup+0x4f0>
			udc_iface_disable(iface_num);
   81020:	47c0      	blx	r8
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81022:	683b      	ldr	r3, [r7, #0]
		for (iface_num = 0;
   81024:	3501      	adds	r5, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81026:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81028:	b2e8      	uxtb	r0, r5
   8102a:	791b      	ldrb	r3, [r3, #4]
   8102c:	4283      	cmp	r3, r0
   8102e:	d8f7      	bhi.n	81020 <udc_process_setup+0x2a4>
	udc_device_status =
   81030:	2200      	movs	r2, #0
   81032:	4b8f      	ldr	r3, [pc, #572]	; (81270 <udc_process_setup+0x4f4>)
   81034:	801a      	strh	r2, [r3, #0]
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   81036:	78a3      	ldrb	r3, [r4, #2]
   81038:	7033      	strb	r3, [r6, #0]
	if (udc_num_configuration == 0) {
   8103a:	2b00      	cmp	r3, #0
   8103c:	f43f af5e 	beq.w	80efc <udc_process_setup+0x180>
	if (udd_is_high_speed()) {
   81040:	47c8      	blx	r9
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   81042:	7832      	ldrb	r2, [r6, #0]
	if (udd_is_high_speed()) {
   81044:	2800      	cmp	r0, #0
   81046:	f000 8133 	beq.w	812b0 <udc_process_setup+0x534>
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   8104a:	f8da 3010 	ldr.w	r3, [sl, #16]
   8104e:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   81052:	3a01      	subs	r2, #1
   81054:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81058:	681a      	ldr	r2, [r3, #0]
   8105a:	4f83      	ldr	r7, [pc, #524]	; (81268 <udc_process_setup+0x4ec>)
   8105c:	7912      	ldrb	r2, [r2, #4]
   8105e:	603b      	str	r3, [r7, #0]
   81060:	2a00      	cmp	r2, #0
   81062:	f43f af4b 	beq.w	80efc <udc_process_setup+0x180>
   81066:	2500      	movs	r5, #0
   81068:	4e82      	ldr	r6, [pc, #520]	; (81274 <udc_process_setup+0x4f8>)
   8106a:	462b      	mov	r3, r5
   8106c:	e005      	b.n	8107a <udc_process_setup+0x2fe>
   8106e:	683a      	ldr	r2, [r7, #0]
   81070:	6812      	ldr	r2, [r2, #0]
   81072:	7912      	ldrb	r2, [r2, #4]
   81074:	429a      	cmp	r2, r3
   81076:	f67f af41 	bls.w	80efc <udc_process_setup+0x180>
		if (!udc_iface_enable(iface_num, 0)) {
   8107a:	4618      	mov	r0, r3
   8107c:	2100      	movs	r1, #0
   8107e:	47b0      	blx	r6
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81080:	3501      	adds	r5, #1
   81082:	b2eb      	uxtb	r3, r5
		if (!udc_iface_enable(iface_num, 0)) {
   81084:	2800      	cmp	r0, #0
   81086:	d1f2      	bne.n	8106e <udc_process_setup+0x2f2>
   81088:	e781      	b.n	80f8e <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wLength) {
   8108a:	88e2      	ldrh	r2, [r4, #6]
   8108c:	2a00      	cmp	r2, #0
   8108e:	f47f aeca 	bne.w	80e26 <udc_process_setup+0xaa>
	udd_g_ctrlreq.callback = udc_valid_address;
   81092:	4b79      	ldr	r3, [pc, #484]	; (81278 <udc_process_setup+0x4fc>)
			return true;
   81094:	2501      	movs	r5, #1
	udd_g_ctrlreq.callback = udc_valid_address;
   81096:	6123      	str	r3, [r4, #16]
	return true;
   81098:	e68d      	b.n	80db6 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   8109a:	7862      	ldrb	r2, [r4, #1]
   8109c:	2a06      	cmp	r2, #6
   8109e:	d040      	beq.n	81122 <udc_process_setup+0x3a6>
   810a0:	2a08      	cmp	r2, #8
   810a2:	d036      	beq.n	81112 <udc_process_setup+0x396>
   810a4:	2a00      	cmp	r2, #0
   810a6:	f47f aebe 	bne.w	80e26 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   810aa:	2d02      	cmp	r5, #2
   810ac:	f47f aebb 	bne.w	80e26 <udc_process_setup+0xaa>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   810b0:	4629      	mov	r1, r5
   810b2:	486f      	ldr	r0, [pc, #444]	; (81270 <udc_process_setup+0x4f4>)
   810b4:	4b71      	ldr	r3, [pc, #452]	; (8127c <udc_process_setup+0x500>)
   810b6:	4798      	blx	r3
			return true;
   810b8:	2501      	movs	r5, #1
   810ba:	e67c      	b.n	80db6 <udc_process_setup+0x3a>
			switch (udd_g_ctrlreq.req.bRequest) {
   810bc:	7862      	ldrb	r2, [r4, #1]
   810be:	2a0b      	cmp	r2, #11
   810c0:	f47f aeb1 	bne.w	80e26 <udc_process_setup+0xaa>
	if (udd_g_ctrlreq.req.wLength) {
   810c4:	88e2      	ldrh	r2, [r4, #6]
   810c6:	2a00      	cmp	r2, #0
   810c8:	f47f aead 	bne.w	80e26 <udc_process_setup+0xaa>
	if (!udc_num_configuration) {
   810cc:	4a65      	ldr	r2, [pc, #404]	; (81264 <udc_process_setup+0x4e8>)
   810ce:	7812      	ldrb	r2, [r2, #0]
   810d0:	2a00      	cmp	r2, #0
   810d2:	f43f aea8 	beq.w	80e26 <udc_process_setup+0xaa>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   810d6:	7925      	ldrb	r5, [r4, #4]
	if (!udc_iface_disable(iface_num)) {
   810d8:	4b64      	ldr	r3, [pc, #400]	; (8126c <udc_process_setup+0x4f0>)
   810da:	4628      	mov	r0, r5
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   810dc:	8866      	ldrh	r6, [r4, #2]
	if (!udc_iface_disable(iface_num)) {
   810de:	4798      	blx	r3
   810e0:	2800      	cmp	r0, #0
   810e2:	f43f af54 	beq.w	80f8e <udc_process_setup+0x212>
	return udc_iface_enable(iface_num, setting_num);
   810e6:	4628      	mov	r0, r5
   810e8:	4b62      	ldr	r3, [pc, #392]	; (81274 <udc_process_setup+0x4f8>)
   810ea:	b2f1      	uxtb	r1, r6
   810ec:	4798      	blx	r3
		if (udc_reqstd()) {
   810ee:	2800      	cmp	r0, #0
   810f0:	f47f af04 	bne.w	80efc <udc_process_setup+0x180>
   810f4:	e74b      	b.n	80f8e <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   810f6:	88e2      	ldrh	r2, [r4, #6]
   810f8:	8861      	ldrh	r1, [r4, #2]
   810fa:	430a      	orrs	r2, r1
   810fc:	b292      	uxth	r2, r2
   810fe:	2a00      	cmp	r2, #0
   81100:	f47f af0b 	bne.w	80f1a <udc_process_setup+0x19e>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   81104:	7920      	ldrb	r0, [r4, #4]
   81106:	4b5e      	ldr	r3, [pc, #376]	; (81280 <udc_process_setup+0x504>)
   81108:	4798      	blx	r3
		if (udc_reqstd()) {
   8110a:	2800      	cmp	r0, #0
   8110c:	f47f aef6 	bne.w	80efc <udc_process_setup+0x180>
   81110:	e73d      	b.n	80f8e <udc_process_setup+0x212>
	if (udd_g_ctrlreq.req.wLength != 1) {
   81112:	2d01      	cmp	r5, #1
   81114:	f47f ae87 	bne.w	80e26 <udc_process_setup+0xaa>
	udd_set_setup_payload(&udc_num_configuration,1);
   81118:	4629      	mov	r1, r5
   8111a:	4852      	ldr	r0, [pc, #328]	; (81264 <udc_process_setup+0x4e8>)
   8111c:	4b57      	ldr	r3, [pc, #348]	; (8127c <udc_process_setup+0x500>)
   8111e:	4798      	blx	r3
	return true;
   81120:	e649      	b.n	80db6 <udc_process_setup+0x3a>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   81122:	8861      	ldrh	r1, [r4, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   81124:	0a0a      	lsrs	r2, r1, #8
   81126:	3a01      	subs	r2, #1
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   81128:	b2cd      	uxtb	r5, r1
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   8112a:	2a0e      	cmp	r2, #14
   8112c:	f63f ae3a 	bhi.w	80da4 <udc_process_setup+0x28>
   81130:	a101      	add	r1, pc, #4	; (adr r1, 81138 <udc_process_setup+0x3bc>)
   81132:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
   81136:	bf00      	nop
   81138:	000811ed 	.word	0x000811ed
   8113c:	000811c3 	.word	0x000811c3
   81140:	00081201 	.word	0x00081201
   81144:	00080da5 	.word	0x00080da5
   81148:	00080da5 	.word	0x00080da5
   8114c:	000811b7 	.word	0x000811b7
   81150:	0008118d 	.word	0x0008118d
   81154:	00080da5 	.word	0x00080da5
   81158:	00080da5 	.word	0x00080da5
   8115c:	00080da5 	.word	0x00080da5
   81160:	00080da5 	.word	0x00080da5
   81164:	00080da5 	.word	0x00080da5
   81168:	00080da5 	.word	0x00080da5
   8116c:	00080da5 	.word	0x00080da5
   81170:	00081175 	.word	0x00081175
		udd_set_setup_payload( (uint8_t *) &MS_BOS_PACKET,
   81174:	2121      	movs	r1, #33	; 0x21
   81176:	4843      	ldr	r0, [pc, #268]	; (81284 <udc_process_setup+0x508>)
   81178:	4b40      	ldr	r3, [pc, #256]	; (8127c <udc_process_setup+0x500>)
   8117a:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   8117c:	88e3      	ldrh	r3, [r4, #6]
   8117e:	89a2      	ldrh	r2, [r4, #12]
   81180:	429a      	cmp	r2, r3
   81182:	f67f aebb 	bls.w	80efc <udc_process_setup+0x180>
			return true;
   81186:	2501      	movs	r5, #1
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   81188:	81a3      	strh	r3, [r4, #12]
   8118a:	e614      	b.n	80db6 <udc_process_setup+0x3a>
		if (!udd_is_high_speed()) {
   8118c:	4b33      	ldr	r3, [pc, #204]	; (8125c <udc_process_setup+0x4e0>)
   8118e:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   81190:	4b33      	ldr	r3, [pc, #204]	; (81260 <udc_process_setup+0x4e4>)
		if (!udd_is_high_speed()) {
   81192:	2800      	cmp	r0, #0
   81194:	f040 8094 	bne.w	812c0 <udc_process_setup+0x544>
			if (conf_num >= udc_config.confdev_hs->
   81198:	689a      	ldr	r2, [r3, #8]
   8119a:	7c52      	ldrb	r2, [r2, #17]
   8119c:	42aa      	cmp	r2, r5
   8119e:	f67f aef6 	bls.w	80f8e <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   811a2:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   811a4:	4b35      	ldr	r3, [pc, #212]	; (8127c <udc_process_setup+0x500>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   811a6:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   811aa:	8841      	ldrh	r1, [r0, #2]
   811ac:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   811ae:	2207      	movs	r2, #7
   811b0:	68a3      	ldr	r3, [r4, #8]
   811b2:	705a      	strb	r2, [r3, #1]
		break;
   811b4:	e7e2      	b.n	8117c <udc_process_setup+0x400>
		udd_set_setup_payload( (uint8_t *) udc_config.qualifier,
   811b6:	4a2a      	ldr	r2, [pc, #168]	; (81260 <udc_process_setup+0x4e4>)
   811b8:	4b30      	ldr	r3, [pc, #192]	; (8127c <udc_process_setup+0x500>)
   811ba:	68d0      	ldr	r0, [r2, #12]
   811bc:	7801      	ldrb	r1, [r0, #0]
   811be:	4798      	blx	r3
		break;
   811c0:	e7dc      	b.n	8117c <udc_process_setup+0x400>
		if (udd_is_high_speed()) {
   811c2:	4b26      	ldr	r3, [pc, #152]	; (8125c <udc_process_setup+0x4e0>)
   811c4:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   811c6:	4b26      	ldr	r3, [pc, #152]	; (81260 <udc_process_setup+0x4e4>)
		if (udd_is_high_speed()) {
   811c8:	2800      	cmp	r0, #0
   811ca:	f000 8090 	beq.w	812ee <udc_process_setup+0x572>
			if (conf_num >= udc_config.confdev_hs->
   811ce:	689a      	ldr	r2, [r3, #8]
   811d0:	7c52      	ldrb	r2, [r2, #17]
   811d2:	42aa      	cmp	r2, r5
   811d4:	f67f aedb 	bls.w	80f8e <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   811d8:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   811da:	4b28      	ldr	r3, [pc, #160]	; (8127c <udc_process_setup+0x500>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   811dc:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   811e0:	8841      	ldrh	r1, [r0, #2]
   811e2:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   811e4:	2202      	movs	r2, #2
   811e6:	68a3      	ldr	r3, [r4, #8]
   811e8:	705a      	strb	r2, [r3, #1]
		break;
   811ea:	e7c7      	b.n	8117c <udc_process_setup+0x400>
		if (!udd_is_high_speed()) {
   811ec:	4b1b      	ldr	r3, [pc, #108]	; (8125c <udc_process_setup+0x4e0>)
   811ee:	4798      	blx	r3
   811f0:	2800      	cmp	r0, #0
   811f2:	d171      	bne.n	812d8 <udc_process_setup+0x55c>
				(uint8_t *) udc_config.confdev_hs,
   811f4:	4a1a      	ldr	r2, [pc, #104]	; (81260 <udc_process_setup+0x4e4>)
			udd_set_setup_payload(
   811f6:	4b21      	ldr	r3, [pc, #132]	; (8127c <udc_process_setup+0x500>)
				(uint8_t *) udc_config.confdev_hs,
   811f8:	6890      	ldr	r0, [r2, #8]
			udd_set_setup_payload(
   811fa:	7801      	ldrb	r1, [r0, #0]
   811fc:	4798      	blx	r3
   811fe:	e7bd      	b.n	8117c <udc_process_setup+0x400>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   81200:	2d03      	cmp	r5, #3
   81202:	f63f adcf 	bhi.w	80da4 <udc_process_setup+0x28>
   81206:	e8df f005 	tbb	[pc, r5]
   8120a:	171a      	.short	0x171a
   8120c:	0214      	.short	0x0214
   8120e:	2120      	movs	r1, #32
   81210:	4b1d      	ldr	r3, [pc, #116]	; (81288 <udc_process_setup+0x50c>)
		for(i = 0; i < str_length; i++) {
   81212:	4e1e      	ldr	r6, [pc, #120]	; (8128c <udc_process_setup+0x510>)
   81214:	185d      	adds	r5, r3, r1
   81216:	4632      	mov	r2, r6
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   81218:	f813 0b01 	ldrb.w	r0, [r3], #1
		for(i = 0; i < str_length; i++) {
   8121c:	42ab      	cmp	r3, r5
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   8121e:	f822 0f02 	strh.w	r0, [r2, #2]!
		for(i = 0; i < str_length; i++) {
   81222:	d1f9      	bne.n	81218 <udc_process_setup+0x49c>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   81224:	0049      	lsls	r1, r1, #1
   81226:	3102      	adds	r1, #2
		udd_set_setup_payload(
   81228:	4818      	ldr	r0, [pc, #96]	; (8128c <udc_process_setup+0x510>)
   8122a:	4b14      	ldr	r3, [pc, #80]	; (8127c <udc_process_setup+0x500>)
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   8122c:	7031      	strb	r1, [r6, #0]
		udd_set_setup_payload(
   8122e:	4798      	blx	r3
   81230:	e7a4      	b.n	8117c <udc_process_setup+0x400>
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
   81232:	2113      	movs	r1, #19
		str = udc_string_product_name;
   81234:	4b16      	ldr	r3, [pc, #88]	; (81290 <udc_process_setup+0x514>)
   81236:	e7ec      	b.n	81212 <udc_process_setup+0x496>
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
   81238:	2115      	movs	r1, #21
		str = udc_string_manufacturer_name;
   8123a:	4b16      	ldr	r3, [pc, #88]	; (81294 <udc_process_setup+0x518>)
   8123c:	e7e9      	b.n	81212 <udc_process_setup+0x496>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   8123e:	2104      	movs	r1, #4
   81240:	4815      	ldr	r0, [pc, #84]	; (81298 <udc_process_setup+0x51c>)
   81242:	4b0e      	ldr	r3, [pc, #56]	; (8127c <udc_process_setup+0x500>)
   81244:	4798      	blx	r3
	if (str_length) {
   81246:	e799      	b.n	8117c <udc_process_setup+0x400>
				udc_config.confdev_lsfs->bNumConfigurations) {
   81248:	f8da 2000 	ldr.w	r2, [sl]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   8124c:	7c52      	ldrb	r2, [r2, #17]
   8124e:	429a      	cmp	r2, r3
   81250:	f4bf aeda 	bcs.w	81008 <udc_process_setup+0x28c>
   81254:	e69b      	b.n	80f8e <udc_process_setup+0x212>
   81256:	bf00      	nop
   81258:	00082c61 	.word	0x00082c61
   8125c:	00082c29 	.word	0x00082c29
   81260:	20000320 	.word	0x20000320
   81264:	200035d5 	.word	0x200035d5
   81268:	200035d8 	.word	0x200035d8
   8126c:	00080be5 	.word	0x00080be5
   81270:	200035d0 	.word	0x200035d0
   81274:	00080c71 	.word	0x00080c71
   81278:	00080b71 	.word	0x00080b71
   8127c:	00082c81 	.word	0x00082c81
   81280:	00082db9 	.word	0x00082db9
   81284:	200001c8 	.word	0x200001c8
   81288:	2000019c 	.word	0x2000019c
   8128c:	2000028c 	.word	0x2000028c
   81290:	200002ec 	.word	0x200002ec
   81294:	200002d4 	.word	0x200002d4
   81298:	200002d0 	.word	0x200002d0
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   8129c:	7920      	ldrb	r0, [r4, #4]
   8129e:	4b32      	ldr	r3, [pc, #200]	; (81368 <udc_process_setup+0x5ec>)
   812a0:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   812a2:	7920      	ldrb	r0, [r4, #4]
   812a4:	4b31      	ldr	r3, [pc, #196]	; (8136c <udc_process_setup+0x5f0>)
   812a6:	4798      	blx	r3
		if (udc_reqstd()) {
   812a8:	2800      	cmp	r0, #0
   812aa:	f47f ae27 	bne.w	80efc <udc_process_setup+0x180>
   812ae:	e66e      	b.n	80f8e <udc_process_setup+0x212>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   812b0:	f8da 3004 	ldr.w	r3, [sl, #4]
   812b4:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   812b8:	3a01      	subs	r2, #1
   812ba:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   812be:	e6cb      	b.n	81058 <udc_process_setup+0x2dc>
			if (conf_num >= udc_config.confdev_lsfs->
   812c0:	681a      	ldr	r2, [r3, #0]
   812c2:	7c52      	ldrb	r2, [r2, #17]
   812c4:	42aa      	cmp	r2, r5
   812c6:	f67f ae62 	bls.w	80f8e <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   812ca:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   812cc:	4b28      	ldr	r3, [pc, #160]	; (81370 <udc_process_setup+0x5f4>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   812ce:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   812d2:	8841      	ldrh	r1, [r0, #2]
   812d4:	4798      	blx	r3
   812d6:	e76a      	b.n	811ae <udc_process_setup+0x432>
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   812d8:	2010      	movs	r0, #16
   812da:	2102      	movs	r1, #2
   812dc:	4b25      	ldr	r3, [pc, #148]	; (81374 <udc_process_setup+0x5f8>)
			udd_set_setup_payload(
   812de:	4d24      	ldr	r5, [pc, #144]	; (81370 <udc_process_setup+0x5f4>)
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   812e0:	681a      	ldr	r2, [r3, #0]
   812e2:	7090      	strb	r0, [r2, #2]
   812e4:	70d1      	strb	r1, [r2, #3]
				(uint8_t *) udc_config.confdev_lsfs,
   812e6:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   812e8:	7801      	ldrb	r1, [r0, #0]
   812ea:	47a8      	blx	r5
   812ec:	e746      	b.n	8117c <udc_process_setup+0x400>
			if (conf_num >= udc_config.confdev_lsfs->
   812ee:	681a      	ldr	r2, [r3, #0]
   812f0:	7c52      	ldrb	r2, [r2, #17]
   812f2:	42aa      	cmp	r2, r5
   812f4:	f67f ae4b 	bls.w	80f8e <udc_process_setup+0x212>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   812f8:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   812fa:	4b1d      	ldr	r3, [pc, #116]	; (81370 <udc_process_setup+0x5f4>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   812fc:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   81300:	8841      	ldrh	r1, [r0, #2]
   81302:	4798      	blx	r3
   81304:	e76e      	b.n	811e4 <udc_process_setup+0x468>
	if (udc_num_configuration) {
   81306:	4e1c      	ldr	r6, [pc, #112]	; (81378 <udc_process_setup+0x5fc>)
   81308:	7832      	ldrb	r2, [r6, #0]
   8130a:	b192      	cbz	r2, 81332 <udc_process_setup+0x5b6>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8130c:	4f1b      	ldr	r7, [pc, #108]	; (8137c <udc_process_setup+0x600>)
   8130e:	683a      	ldr	r2, [r7, #0]
   81310:	6812      	ldr	r2, [r2, #0]
		for (iface_num = 0;
   81312:	7912      	ldrb	r2, [r2, #4]
   81314:	b16a      	cbz	r2, 81332 <udc_process_setup+0x5b6>
   81316:	4699      	mov	r9, r3
   81318:	4618      	mov	r0, r3
   8131a:	f8df 8064 	ldr.w	r8, [pc, #100]	; 81380 <udc_process_setup+0x604>
			udc_iface_disable(iface_num);
   8131e:	47c0      	blx	r8
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81320:	683b      	ldr	r3, [r7, #0]
		for (iface_num = 0;
   81322:	f109 0901 	add.w	r9, r9, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   81326:	681b      	ldr	r3, [r3, #0]
		for (iface_num = 0;
   81328:	fa5f f089 	uxtb.w	r0, r9
   8132c:	791b      	ldrb	r3, [r3, #4]
   8132e:	4283      	cmp	r3, r0
   81330:	d8f5      	bhi.n	8131e <udc_process_setup+0x5a2>
	udc_num_configuration = 0;
   81332:	2200      	movs	r2, #0
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   81334:	88a3      	ldrh	r3, [r4, #4]
	udc_device_status =
   81336:	4913      	ldr	r1, [pc, #76]	; (81384 <udc_process_setup+0x608>)
   81338:	0a1b      	lsrs	r3, r3, #8
   8133a:	3b01      	subs	r3, #1
   8133c:	800a      	strh	r2, [r1, #0]
	udc_num_configuration = 0;
   8133e:	7032      	strb	r2, [r6, #0]
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   81340:	2b03      	cmp	r3, #3
   81342:	f63f ae24 	bhi.w	80f8e <udc_process_setup+0x212>
   81346:	e8df f003 	tbb	[pc, r3]
   8134a:	080b      	.short	0x080b
   8134c:	0205      	.short	0x0205
			udd_g_ctrlreq.callback = udd_test_mode_packet;
   8134e:	4b0e      	ldr	r3, [pc, #56]	; (81388 <udc_process_setup+0x60c>)
   81350:	6123      	str	r3, [r4, #16]
			return true;
   81352:	e530      	b.n	80db6 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_se0_nak;
   81354:	4b0d      	ldr	r3, [pc, #52]	; (8138c <udc_process_setup+0x610>)
   81356:	6123      	str	r3, [r4, #16]
			return true;
   81358:	e52d      	b.n	80db6 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_k;
   8135a:	4b0d      	ldr	r3, [pc, #52]	; (81390 <udc_process_setup+0x614>)
   8135c:	6123      	str	r3, [r4, #16]
			return true;
   8135e:	e52a      	b.n	80db6 <udc_process_setup+0x3a>
			udd_g_ctrlreq.callback = udd_test_mode_j;
   81360:	4b0c      	ldr	r3, [pc, #48]	; (81394 <udc_process_setup+0x618>)
   81362:	6123      	str	r3, [r4, #16]
			return true;
   81364:	e527      	b.n	80db6 <udc_process_setup+0x3a>
   81366:	bf00      	nop
   81368:	00083189 	.word	0x00083189
   8136c:	00082d11 	.word	0x00082d11
   81370:	00082c81 	.word	0x00082c81
   81374:	20000320 	.word	0x20000320
   81378:	200035d5 	.word	0x200035d5
   8137c:	200035d8 	.word	0x200035d8
   81380:	00080be5 	.word	0x00080be5
   81384:	200035d0 	.word	0x200035d0
   81388:	00083255 	.word	0x00083255
   8138c:	0008323d 	.word	0x0008323d
   81390:	00083219 	.word	0x00083219
   81394:	000831f5 	.word	0x000831f5

00081398 <FPGA_setlock>:
uint8_t volatile *xram = (uint8_t *) PSRAM_BASE_ADDRESS;

static volatile fpga_lockstatus_t _fpga_locked = fpga_unlocked;

int FPGA_setlock(fpga_lockstatus_t lockstatus)
{
   81398:	b538      	push	{r3, r4, r5, lr}
  int ret = 0;
  cpu_irq_enter_critical();
   8139a:	4b08      	ldr	r3, [pc, #32]	; (813bc <FPGA_setlock+0x24>)
{
   8139c:	4604      	mov	r4, r0
  cpu_irq_enter_critical();
   8139e:	4798      	blx	r3
  if (_fpga_locked == fpga_unlocked)
   813a0:	4b07      	ldr	r3, [pc, #28]	; (813c0 <FPGA_setlock+0x28>)
   813a2:	781a      	ldrb	r2, [r3, #0]
   813a4:	b92a      	cbnz	r2, 813b2 <FPGA_setlock+0x1a>
  {
    ret = 1;
   813a6:	2501      	movs	r5, #1
    _fpga_locked = lockstatus;
   813a8:	701c      	strb	r4, [r3, #0]
  }
  cpu_irq_leave_critical();
   813aa:	4b06      	ldr	r3, [pc, #24]	; (813c4 <FPGA_setlock+0x2c>)
   813ac:	4798      	blx	r3
  return ret;
}
   813ae:	4628      	mov	r0, r5
   813b0:	bd38      	pop	{r3, r4, r5, pc}
  int ret = 0;
   813b2:	2500      	movs	r5, #0
  cpu_irq_leave_critical();
   813b4:	4b03      	ldr	r3, [pc, #12]	; (813c4 <FPGA_setlock+0x2c>)
   813b6:	4798      	blx	r3
}
   813b8:	4628      	mov	r0, r5
   813ba:	bd38      	pop	{r3, r4, r5, pc}
   813bc:	00081599 	.word	0x00081599
   813c0:	200035e0 	.word	0x200035e0
   813c4:	000815d9 	.word	0x000815d9

000813c8 <FPGA_releaselock>:

void FPGA_releaselock(void)
{
  _fpga_locked = fpga_unlocked;
   813c8:	2200      	movs	r2, #0
   813ca:	4b01      	ldr	r3, [pc, #4]	; (813d0 <FPGA_releaselock+0x8>)
   813cc:	701a      	strb	r2, [r3, #0]
}
   813ce:	4770      	bx	lr
   813d0:	200035e0 	.word	0x200035e0

000813d4 <FPGA_lockstatus>:

fpga_lockstatus_t FPGA_lockstatus(void)
{
  return _fpga_locked;
   813d4:	4b01      	ldr	r3, [pc, #4]	; (813dc <FPGA_lockstatus+0x8>)
   813d6:	7818      	ldrb	r0, [r3, #0]
}
   813d8:	4770      	bx	lr
   813da:	bf00      	nop
   813dc:	200035e0 	.word	0x200035e0

000813e0 <ui_init>:
#include <asf.h>
#include "ui.h"
#include "tasks.h"

void ui_init(void)
{
   813e0:	b510      	push	{r4, lr}
	// Initialize LEDs
	LED_Off(LED0_GPIO);
   813e2:	2011      	movs	r0, #17
   813e4:	4c04      	ldr	r4, [pc, #16]	; (813f8 <ui_init+0x18>)
   813e6:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   813e8:	2010      	movs	r0, #16
   813ea:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   813ec:	4623      	mov	r3, r4
}
   813ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	LED_Off(LED2_GPIO);
   813f2:	204c      	movs	r0, #76	; 0x4c
   813f4:	4718      	bx	r3
   813f6:	bf00      	nop
   813f8:	00081605 	.word	0x00081605

000813fc <ui_powerdown>:

void ui_powerdown(void)
{
   813fc:	b510      	push	{r4, lr}
	LED_Off(LED0_GPIO);
   813fe:	2011      	movs	r0, #17
   81400:	4c05      	ldr	r4, [pc, #20]	; (81418 <ui_powerdown+0x1c>)
   81402:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   81404:	2010      	movs	r0, #16
   81406:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   81408:	204c      	movs	r0, #76	; 0x4c
   8140a:	47a0      	blx	r4
	
	// Power off FPGA
	board_sram_pwroff();
		
}
   8140c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwroff();
   81410:	2053      	movs	r0, #83	; 0x53
   81412:	4b02      	ldr	r3, [pc, #8]	; (8141c <ui_powerdown+0x20>)
   81414:	4718      	bx	r3
   81416:	bf00      	nop
   81418:	00081605 	.word	0x00081605
   8141c:	00081725 	.word	0x00081725

00081420 <ui_wakeup>:

void ui_wakeup(void)
{
   81420:	b510      	push	{r4, lr}
	LED_On(LED0_GPIO);
   81422:	2011      	movs	r0, #17
   81424:	4b03      	ldr	r3, [pc, #12]	; (81434 <ui_wakeup+0x14>)
   81426:	4798      	blx	r3
	board_sram_pwron();
}
   81428:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwron();
   8142c:	2053      	movs	r0, #83	; 0x53
   8142e:	4b02      	ldr	r3, [pc, #8]	; (81438 <ui_wakeup+0x18>)
   81430:	4718      	bx	r3
   81432:	bf00      	nop
   81434:	0008164d 	.word	0x0008164d
   81438:	00081741 	.word	0x00081741

0008143c <ui_process>:

void ui_process(uint16_t framenumber)
{
	if ((framenumber % 1024) == 0) {
   8143c:	f3c0 0309 	ubfx	r3, r0, #0, #10
{
   81440:	b510      	push	{r4, lr}
   81442:	4604      	mov	r4, r0
	if ((framenumber % 1024) == 0) {
   81444:	b1ab      	cbz	r3, 81472 <ui_process+0x36>
		LED_On(LED0_GPIO);
	}
	if ((framenumber % 1024) == 512) {
   81446:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8144a:	d003      	beq.n	81454 <ui_process+0x18>
		LED_Off(LED0_GPIO);
	}
	
	if ((framenumber % 512) == 0) {
   8144c:	f3c4 0408 	ubfx	r4, r4, #0, #9
   81450:	b13c      	cbz	r4, 81462 <ui_process+0x26>
		LED_Off(LED1_GPIO);
		LED_Off(LED2_GPIO);
	}
}
   81452:	bd10      	pop	{r4, pc}
		LED_Off(LED0_GPIO);
   81454:	2011      	movs	r0, #17
   81456:	4b09      	ldr	r3, [pc, #36]	; (8147c <ui_process+0x40>)
	if ((framenumber % 512) == 0) {
   81458:	f3c4 0408 	ubfx	r4, r4, #0, #9
		LED_Off(LED0_GPIO);
   8145c:	4798      	blx	r3
	if ((framenumber % 512) == 0) {
   8145e:	2c00      	cmp	r4, #0
   81460:	d1f7      	bne.n	81452 <ui_process+0x16>
		LED_Off(LED1_GPIO);
   81462:	4c06      	ldr	r4, [pc, #24]	; (8147c <ui_process+0x40>)
   81464:	2010      	movs	r0, #16
   81466:	47a0      	blx	r4
		LED_Off(LED2_GPIO);
   81468:	4623      	mov	r3, r4
}
   8146a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		LED_Off(LED2_GPIO);
   8146e:	204c      	movs	r0, #76	; 0x4c
   81470:	4718      	bx	r3
		LED_On(LED0_GPIO);
   81472:	2011      	movs	r0, #17
   81474:	4b02      	ldr	r3, [pc, #8]	; (81480 <ui_process+0x44>)
   81476:	4798      	blx	r3
	if ((framenumber % 1024) == 512) {
   81478:	e7e8      	b.n	8144c <ui_process+0x10>
   8147a:	bf00      	nop
   8147c:	00081605 	.word	0x00081605
   81480:	0008164d 	.word	0x0008164d

00081484 <iopins_normal>:
	
	/* */
}

void iopins_normal(void)
{
   81484:	b510      	push	{r4, lr}
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   81486:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8148a:	4c0d      	ldr	r4, [pc, #52]	; (814c0 <iopins_normal+0x3c>)
   8148c:	2011      	movs	r0, #17
   8148e:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   81490:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   81494:	2010      	movs	r0, #16
   81496:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   81498:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8149c:	204c      	movs	r0, #76	; 0x4c
   8149e:	47a0      	blx	r4
	
	/* Configure MOSFET for turning on-off system */
	gpio_configure_pin(PIN_PWRON_GPIO, PIN_PWRON_FLAGS);
   814a0:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   814a4:	2053      	movs	r0, #83	; 0x53
   814a6:	47a0      	blx	r4
	board_sram_pwron();
   814a8:	2053      	movs	r0, #83	; 0x53
   814aa:	4b06      	ldr	r3, [pc, #24]	; (814c4 <iopins_normal+0x40>)
   814ac:	4798      	blx	r3
#if defined(CONF_BOARD_USB_PORT)
#  if defined(CONF_BOARD_USB_VBUS_DETECT)
	gpio_configure_pin(USB_VBUS_PIN, USB_VBUS_FLAGS);
#  endif
#endif	
}
   814ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   814b2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   814b6:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
   814ba:	4803      	ldr	r0, [pc, #12]	; (814c8 <iopins_normal+0x44>)
   814bc:	4b03      	ldr	r3, [pc, #12]	; (814cc <iopins_normal+0x48>)
   814be:	4718      	bx	r3
   814c0:	0008175d 	.word	0x0008175d
   814c4:	00081741 	.word	0x00081741
   814c8:	400e0c00 	.word	0x400e0c00
   814cc:	00081855 	.word	0x00081855

000814d0 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   814d0:	f44f 4200 	mov.w	r2, #32768	; 0x8000
{
   814d4:	b510      	push	{r4, lr}
	WDT->WDT_MR = WDT_MR_WDDIS;
   814d6:	4b06      	ldr	r3, [pc, #24]	; (814f0 <board_init+0x20>)
   814d8:	4c06      	ldr	r4, [pc, #24]	; (814f4 <board_init+0x24>)
   814da:	655a      	str	r2, [r3, #84]	; 0x54
   814dc:	200a      	movs	r0, #10
   814de:	47a0      	blx	r4
   814e0:	200b      	movs	r0, #11
   814e2:	47a0      	blx	r4
   814e4:	200c      	movs	r0, #12
   814e6:	47a0      	blx	r4
	 */
	ioport_init();

	iopins_normal();

}
   814e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	iopins_normal();
   814ec:	4b02      	ldr	r3, [pc, #8]	; (814f8 <board_init+0x28>)
   814ee:	4718      	bx	r3
   814f0:	400e1200 	.word	0x400e1200
   814f4:	00081a6d 	.word	0x00081a6d
   814f8:	00081485 	.word	0x00081485

000814fc <efc_perform_command>:
 *
 * \return 0 if successful, otherwise returns an error code.
 */
uint32_t efc_perform_command(Efc *p_efc, uint32_t ul_command,
		uint32_t ul_argument)
{
   814fc:	b538      	push	{r3, r4, r5, lr}
	uint32_t result;
	irqflags_t flags;

	/* Unique ID commands are not supported. */
	if (ul_command == EFC_FCMD_STUI || ul_command == EFC_FCMD_SPUI) {
   814fe:	f1a1 030e 	sub.w	r3, r1, #14
   81502:	2b01      	cmp	r3, #1
   81504:	d917      	bls.n	81536 <efc_perform_command+0x3a>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81506:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   8150a:	b672      	cpsid	i
   8150c:	f3bf 8f5f 	dmb	sy
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
   81510:	2300      	movs	r3, #0
   81512:	4c0a      	ldr	r4, [pc, #40]	; (8153c <efc_perform_command+0x40>)

	flags = cpu_irq_save();
	/* Use RAM Function. */
	result = efc_perform_fcr(p_efc,
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
			EEFC_FCR_FCMD(ul_command));
   81514:	b2c9      	uxtb	r1, r1
   81516:	7023      	strb	r3, [r4, #0]
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
   81518:	4b09      	ldr	r3, [pc, #36]	; (81540 <efc_perform_command+0x44>)
   8151a:	ea03 2202 	and.w	r2, r3, r2, lsl #8
   8151e:	4311      	orrs	r1, r2
	result = efc_perform_fcr(p_efc,
   81520:	4b08      	ldr	r3, [pc, #32]	; (81544 <efc_perform_command+0x48>)
   81522:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
   81526:	4798      	blx	r3
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   81528:	b925      	cbnz	r5, 81534 <efc_perform_command+0x38>
		cpu_irq_enable();
   8152a:	2301      	movs	r3, #1
   8152c:	7023      	strb	r3, [r4, #0]
   8152e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81532:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return result;
}
   81534:	bd38      	pop	{r3, r4, r5, pc}
		return EFC_RC_NOT_SUPPORT;
   81536:	f04f 30ff 	mov.w	r0, #4294967295
}
   8153a:	bd38      	pop	{r3, r4, r5, pc}
   8153c:	20000304 	.word	0x20000304
   81540:	00ffff00 	.word	0x00ffff00
   81544:	2000008d 	.word	0x2000008d

00081548 <Dummy_Handler>:
/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
   81548:	e7fe      	b.n	81548 <Dummy_Handler>
   8154a:	bf00      	nop

0008154c <flash_read_unique_id>:
 * \param ul_size Data buffer size in DWORD.
 *
 * \return 0 if successful; otherwise returns an error code.
 */
uint32_t flash_read_unique_id(uint32_t *pul_data, uint32_t ul_size)
{
   8154c:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t uid_buf[4];
	uint32_t ul_idx;

	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   8154e:	2604      	movs	r6, #4
{
   81550:	b087      	sub	sp, #28
   81552:	4604      	mov	r4, r0
   81554:	460d      	mov	r5, r1
	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   81556:	220f      	movs	r2, #15
   81558:	210e      	movs	r1, #14
   8155a:	480c      	ldr	r0, [pc, #48]	; (8158c <flash_read_unique_id+0x40>)
   8155c:	4f0c      	ldr	r7, [pc, #48]	; (81590 <flash_read_unique_id+0x44>)
   8155e:	ab02      	add	r3, sp, #8
   81560:	9600      	str	r6, [sp, #0]
   81562:	47b8      	blx	r7
   81564:	b970      	cbnz	r0, 81584 <flash_read_unique_id+0x38>
			EFC_FCMD_SPUI, uid_buf, 4)) {
		return FLASH_RC_ERROR;
	}

	if (ul_size > 4) {
   81566:	2d04      	cmp	r5, #4
   81568:	4626      	mov	r6, r4
   8156a:	462a      	mov	r2, r5
   8156c:	4604      	mov	r4, r0
   8156e:	bf28      	it	cs
   81570:	2204      	movcs	r2, #4
		/* Only 4 dword to store unique ID */
		ul_size = 4;
	}

	for (ul_idx = 0; ul_idx < ul_size; ul_idx++) {
   81572:	b125      	cbz	r5, 8157e <flash_read_unique_id+0x32>
		pul_data[ul_idx] = uid_buf[ul_idx];
   81574:	4630      	mov	r0, r6
   81576:	4b07      	ldr	r3, [pc, #28]	; (81594 <flash_read_unique_id+0x48>)
   81578:	a902      	add	r1, sp, #8
   8157a:	0092      	lsls	r2, r2, #2
   8157c:	4798      	blx	r3
	}

	return FLASH_RC_OK;
}
   8157e:	4620      	mov	r0, r4
   81580:	b007      	add	sp, #28
   81582:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return FLASH_RC_ERROR;
   81584:	2410      	movs	r4, #16
}
   81586:	4620      	mov	r0, r4
   81588:	b007      	add	sp, #28
   8158a:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8158c:	400e0800 	.word	0x400e0800
   81590:	20000001 	.word	0x20000001
   81594:	000833dd 	.word	0x000833dd

00081598 <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   81598:	4b0c      	ldr	r3, [pc, #48]	; (815cc <cpu_irq_enter_critical+0x34>)
   8159a:	681a      	ldr	r2, [r3, #0]
   8159c:	b922      	cbnz	r2, 815a8 <cpu_irq_enter_critical+0x10>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8159e:	f3ef 8110 	mrs	r1, PRIMASK
		if (cpu_irq_is_enabled()) {
   815a2:	b129      	cbz	r1, 815b0 <cpu_irq_enter_critical+0x18>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   815a4:	490a      	ldr	r1, [pc, #40]	; (815d0 <cpu_irq_enter_critical+0x38>)
   815a6:	700a      	strb	r2, [r1, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   815a8:	681a      	ldr	r2, [r3, #0]
   815aa:	3201      	adds	r2, #1
   815ac:	601a      	str	r2, [r3, #0]
   815ae:	4770      	bx	lr
{
   815b0:	b410      	push	{r4}
  __ASM volatile ("cpsid i");
   815b2:	b672      	cpsid	i
   815b4:	f3bf 8f5f 	dmb	sy
			cpu_irq_prev_interrupt_state = true;
   815b8:	2001      	movs	r0, #1
			cpu_irq_disable();
   815ba:	4c06      	ldr	r4, [pc, #24]	; (815d4 <cpu_irq_enter_critical+0x3c>)
			cpu_irq_prev_interrupt_state = true;
   815bc:	4a04      	ldr	r2, [pc, #16]	; (815d0 <cpu_irq_enter_critical+0x38>)
			cpu_irq_disable();
   815be:	7021      	strb	r1, [r4, #0]
			cpu_irq_prev_interrupt_state = true;
   815c0:	7010      	strb	r0, [r2, #0]
	cpu_irq_critical_section_counter++;
   815c2:	681a      	ldr	r2, [r3, #0]
   815c4:	3201      	adds	r2, #1
   815c6:	601a      	str	r2, [r3, #0]
}
   815c8:	bc10      	pop	{r4}
   815ca:	4770      	bx	lr
   815cc:	200035e4 	.word	0x200035e4
   815d0:	200035e8 	.word	0x200035e8
   815d4:	20000304 	.word	0x20000304

000815d8 <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   815d8:	4b07      	ldr	r3, [pc, #28]	; (815f8 <cpu_irq_leave_critical+0x20>)
   815da:	681a      	ldr	r2, [r3, #0]
   815dc:	3a01      	subs	r2, #1
   815de:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   815e0:	681b      	ldr	r3, [r3, #0]
   815e2:	b943      	cbnz	r3, 815f6 <cpu_irq_leave_critical+0x1e>
   815e4:	4b05      	ldr	r3, [pc, #20]	; (815fc <cpu_irq_leave_critical+0x24>)
   815e6:	781b      	ldrb	r3, [r3, #0]
   815e8:	b12b      	cbz	r3, 815f6 <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   815ea:	2201      	movs	r2, #1
   815ec:	4b04      	ldr	r3, [pc, #16]	; (81600 <cpu_irq_leave_critical+0x28>)
   815ee:	701a      	strb	r2, [r3, #0]
   815f0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   815f4:	b662      	cpsie	i
	}
}
   815f6:	4770      	bx	lr
   815f8:	200035e4 	.word	0x200035e4
   815fc:	200035e8 	.word	0x200035e8
   81600:	20000304 	.word	0x20000304

00081604 <LED_Off>:
 * \param led_gpio LED to turn off (LEDx_GPIO).
 *
 * \note The pins of the specified LEDs are set to GPIO output mode.
 */
void LED_Off(uint32_t led_gpio)
{
   81604:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81608:	2311      	movs	r3, #17
   8160a:	4605      	mov	r5, r0
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   8160c:	4c0c      	ldr	r4, [pc, #48]	; (81640 <LED_Off+0x3c>)
   8160e:	42ab      	cmp	r3, r5
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
				gpio_set_pin_low(led_gpio);
			} else {
				gpio_set_pin_high(led_gpio);
   81610:	4f0c      	ldr	r7, [pc, #48]	; (81644 <LED_Off+0x40>)
				gpio_set_pin_low(led_gpio);
   81612:	f8df 8034 	ldr.w	r8, [pc, #52]	; 81648 <LED_Off+0x44>
   81616:	f104 0610 	add.w	r6, r4, #16
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   8161a:	d005      	beq.n	81628 <LED_Off+0x24>
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
   8161c:	42b4      	cmp	r4, r6
   8161e:	d00a      	beq.n	81636 <LED_Off+0x32>
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   81620:	f854 3f08 	ldr.w	r3, [r4, #8]!
   81624:	42ab      	cmp	r3, r5
   81626:	d1f9      	bne.n	8161c <LED_Off+0x18>
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
   81628:	6863      	ldr	r3, [r4, #4]
				gpio_set_pin_low(led_gpio);
   8162a:	4628      	mov	r0, r5
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
   8162c:	2b01      	cmp	r3, #1
   8162e:	d004      	beq.n	8163a <LED_Off+0x36>
				gpio_set_pin_high(led_gpio);
   81630:	47b8      	blx	r7
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
   81632:	42b4      	cmp	r4, r6
   81634:	d1f4      	bne.n	81620 <LED_Off+0x1c>
			}
		}
	}
}
   81636:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				gpio_set_pin_low(led_gpio);
   8163a:	47c0      	blx	r8
   8163c:	e7ee      	b.n	8161c <LED_Off+0x18>
   8163e:	bf00      	nop
   81640:	0008a318 	.word	0x0008a318
   81644:	00081725 	.word	0x00081725
   81648:	00081741 	.word	0x00081741

0008164c <LED_On>:
 * \param led_gpio LED to turn on (LEDx_GPIO).
 *
 * \note The pins of the specified LEDs are set to GPIO output mode.
 */
void LED_On(uint32_t led_gpio)
{
   8164c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   81650:	2311      	movs	r3, #17
   81652:	4605      	mov	r5, r0
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   81654:	4c0c      	ldr	r4, [pc, #48]	; (81688 <LED_On+0x3c>)
   81656:	42ab      	cmp	r3, r5
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
				gpio_set_pin_high(led_gpio);
			} else {
				gpio_set_pin_low(led_gpio);
   81658:	4f0c      	ldr	r7, [pc, #48]	; (8168c <LED_On+0x40>)
				gpio_set_pin_high(led_gpio);
   8165a:	f8df 8034 	ldr.w	r8, [pc, #52]	; 81690 <LED_On+0x44>
   8165e:	f104 0610 	add.w	r6, r4, #16
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   81662:	d005      	beq.n	81670 <LED_On+0x24>
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
   81664:	42b4      	cmp	r4, r6
   81666:	d00a      	beq.n	8167e <LED_On+0x32>
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   81668:	f854 3f08 	ldr.w	r3, [r4, #8]!
   8166c:	42ab      	cmp	r3, r5
   8166e:	d1f9      	bne.n	81664 <LED_On+0x18>
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
   81670:	6863      	ldr	r3, [r4, #4]
				gpio_set_pin_high(led_gpio);
   81672:	4628      	mov	r0, r5
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
   81674:	2b01      	cmp	r3, #1
   81676:	d004      	beq.n	81682 <LED_On+0x36>
				gpio_set_pin_low(led_gpio);
   81678:	47b8      	blx	r7
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
   8167a:	42b4      	cmp	r4, r6
   8167c:	d1f4      	bne.n	81668 <LED_On+0x1c>
			}
		}
	}
}
   8167e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				gpio_set_pin_high(led_gpio);
   81682:	47c0      	blx	r8
   81684:	e7ee      	b.n	81664 <LED_On+0x18>
   81686:	bf00      	nop
   81688:	0008a318 	.word	0x0008a318
   8168c:	00081741 	.word	0x00081741
   81690:	00081725 	.word	0x00081725

00081694 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   81694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   81696:	4b12      	ldr	r3, [pc, #72]	; (816e0 <pio_handler_process+0x4c>)
{
   81698:	4604      	mov	r4, r0
   8169a:	460e      	mov	r6, r1
	status = pio_get_interrupt_status(p_pio);
   8169c:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   8169e:	4b11      	ldr	r3, [pc, #68]	; (816e4 <pio_handler_process+0x50>)
	status = pio_get_interrupt_status(p_pio);
   816a0:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   816a2:	4620      	mov	r0, r4
   816a4:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   816a6:	4005      	ands	r5, r0
   816a8:	d019      	beq.n	816de <pio_handler_process+0x4a>
   816aa:	4c0f      	ldr	r4, [pc, #60]	; (816e8 <pio_handler_process+0x54>)
   816ac:	f104 0760 	add.w	r7, r4, #96	; 0x60
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   816b0:	6823      	ldr	r3, [r4, #0]
   816b2:	42b3      	cmp	r3, r6
   816b4:	d005      	beq.n	816c2 <pio_handler_process+0x2e>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   816b6:	42bc      	cmp	r4, r7
   816b8:	d011      	beq.n	816de <pio_handler_process+0x4a>
			if (gs_interrupt_sources[i].id == ul_id) {
   816ba:	6923      	ldr	r3, [r4, #16]
		while (status != 0) {
   816bc:	3410      	adds	r4, #16
			if (gs_interrupt_sources[i].id == ul_id) {
   816be:	42b3      	cmp	r3, r6
   816c0:	d1f9      	bne.n	816b6 <pio_handler_process+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   816c2:	6861      	ldr	r1, [r4, #4]
   816c4:	4229      	tst	r1, r5
   816c6:	d0f6      	beq.n	816b6 <pio_handler_process+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   816c8:	68e3      	ldr	r3, [r4, #12]
   816ca:	4630      	mov	r0, r6
   816cc:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   816ce:	6863      	ldr	r3, [r4, #4]
			if (i >= MAX_INTERRUPT_SOURCES) {
   816d0:	42bc      	cmp	r4, r7
					status &= ~(gs_interrupt_sources[i].mask);
   816d2:	ea25 0503 	bic.w	r5, r5, r3
			if (i >= MAX_INTERRUPT_SOURCES) {
   816d6:	d002      	beq.n	816de <pio_handler_process+0x4a>
		while (status != 0) {
   816d8:	3410      	adds	r4, #16
   816da:	2d00      	cmp	r5, #0
   816dc:	d1e8      	bne.n	816b0 <pio_handler_process+0x1c>
		if (pio_capture_handler) {
			pio_capture_handler(p_pio);
		}
	}
#endif
}
   816de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   816e0:	0008171d 	.word	0x0008171d
   816e4:	00081721 	.word	0x00081721
   816e8:	200035ec 	.word	0x200035ec

000816ec <PIOA_Handler>:
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
	pio_handler_process(PIOA, ID_PIOA);
   816ec:	210a      	movs	r1, #10
   816ee:	4801      	ldr	r0, [pc, #4]	; (816f4 <PIOA_Handler+0x8>)
   816f0:	4b01      	ldr	r3, [pc, #4]	; (816f8 <PIOA_Handler+0xc>)
   816f2:	4718      	bx	r3
   816f4:	400e0c00 	.word	0x400e0c00
   816f8:	00081695 	.word	0x00081695

000816fc <PIOB_Handler>:
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
    pio_handler_process(PIOB, ID_PIOB);
   816fc:	210b      	movs	r1, #11
   816fe:	4801      	ldr	r0, [pc, #4]	; (81704 <PIOB_Handler+0x8>)
   81700:	4b01      	ldr	r3, [pc, #4]	; (81708 <PIOB_Handler+0xc>)
   81702:	4718      	bx	r3
   81704:	400e0e00 	.word	0x400e0e00
   81708:	00081695 	.word	0x00081695

0008170c <PIOC_Handler>:
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
	pio_handler_process(PIOC, ID_PIOC);
   8170c:	210c      	movs	r1, #12
   8170e:	4801      	ldr	r0, [pc, #4]	; (81714 <PIOC_Handler+0x8>)
   81710:	4b01      	ldr	r3, [pc, #4]	; (81718 <PIOC_Handler+0xc>)
   81712:	4718      	bx	r3
   81714:	400e1000 	.word	0x400e1000
   81718:	00081695 	.word	0x00081695

0008171c <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8171c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8171e:	4770      	bx	lr

00081720 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   81720:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   81722:	4770      	bx	lr

00081724 <pio_set_pin_high>:
void pio_set_pin_high(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 1. */
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81724:	2201      	movs	r2, #1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81726:	0943      	lsrs	r3, r0, #5
   81728:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8172c:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81730:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81734:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   81736:	fa02 f000 	lsl.w	r0, r2, r0
   8173a:	6318      	str	r0, [r3, #48]	; 0x30
}
   8173c:	4770      	bx	lr
   8173e:	bf00      	nop

00081740 <pio_set_pin_low>:
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81740:	2201      	movs	r2, #1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81742:	0943      	lsrs	r3, r0, #5
   81744:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81748:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   8174c:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81750:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   81752:	fa02 f000 	lsl.w	r0, r2, r0
   81756:	6358      	str	r0, [r3, #52]	; 0x34
}
   81758:	4770      	bx	lr
   8175a:	bf00      	nop

0008175c <pio_configure_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8175c:	0943      	lsrs	r3, r0, #5
   8175e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
	switch (ul_flags & PIO_TYPE_Msk) {
   81762:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   81766:	f203 7306 	addw	r3, r3, #1798	; 0x706
	switch (ul_flags & PIO_TYPE_Msk) {
   8176a:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8176e:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
   81772:	d035      	beq.n	817e0 <pio_configure_pin+0x84>
{
   81774:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   81776:	d816      	bhi.n	817a6 <pio_configure_pin+0x4a>
   81778:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
   8177c:	d01b      	beq.n	817b6 <pio_configure_pin+0x5a>
   8177e:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
   81782:	d115      	bne.n	817b0 <pio_configure_pin+0x54>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   81784:	f04f 0c01 	mov.w	ip, #1
   81788:	f000 001f 	and.w	r0, r0, #31
   8178c:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   81790:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   81792:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   81794:	4310      	orrs	r0, r2
   81796:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   81798:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   8179c:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   8179e:	d01b      	beq.n	817d8 <pio_configure_pin+0x7c>
		p_pio->PIO_PUER = ul_mask;
   817a0:	665a      	str	r2, [r3, #100]	; 0x64
}
   817a2:	bc10      	pop	{r4}
   817a4:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   817a6:	f001 42e0 	and.w	r2, r1, #1879048192	; 0x70000000
   817aa:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
   817ae:	d02f      	beq.n	81810 <pio_configure_pin+0xb4>
   817b0:	2000      	movs	r0, #0
}
   817b2:	bc10      	pop	{r4}
   817b4:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   817b6:	f04f 0c01 	mov.w	ip, #1
   817ba:	f000 001f 	and.w	r0, r0, #31
   817be:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   817c2:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   817c4:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   817c6:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   817c8:	4020      	ands	r0, r4
   817ca:	ea20 0002 	bic.w	r0, r0, r2
   817ce:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   817d0:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   817d4:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   817d6:	d1e3      	bne.n	817a0 <pio_configure_pin+0x44>
		p_pio->PIO_PUDR = ul_mask;
   817d8:	661a      	str	r2, [r3, #96]	; 0x60
	return 1;
   817da:	4660      	mov	r0, ip
}
   817dc:	bc10      	pop	{r4}
   817de:	4770      	bx	lr
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   817e0:	2201      	movs	r2, #1
   817e2:	f000 001f 	and.w	r0, r0, #31
   817e6:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
   817e8:	07c8      	lsls	r0, r1, #31
	p_pio->PIO_IDR = ul_mask;
   817ea:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   817ec:	bf4c      	ite	mi
   817ee:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   817f0:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   817f2:	f011 0f0a 	tst.w	r1, #10
		p_pio->PIO_IFER = ul_mask;
   817f6:	bf14      	ite	ne
   817f8:	621a      	strne	r2, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   817fa:	625a      	streq	r2, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   817fc:	0788      	lsls	r0, r1, #30
   817fe:	d422      	bmi.n	81846 <pio_configure_pin+0xea>
		if (ul_attribute & PIO_DEBOUNCE) {
   81800:	0708      	lsls	r0, r1, #28
			p_pio->PIO_DIFSR = ul_mask;
   81802:	bf48      	it	mi
   81804:	f8c3 2084 	strmi.w	r2, [r3, #132]	; 0x84
	return 1;
   81808:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   8180a:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   8180c:	601a      	str	r2, [r3, #0]
}
   8180e:	4770      	bx	lr
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   81810:	2201      	movs	r2, #1
   81812:	f000 001f 	and.w	r0, r0, #31
   81816:	4082      	lsls	r2, r0
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   81818:	f001 5c60 	and.w	ip, r1, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   8181c:	f3c1 0480 	ubfx	r4, r1, #2, #1
	if (ul_pull_up_enable) {
   81820:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
   81822:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   81824:	bf4c      	ite	mi
   81826:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   81828:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   8182a:	b954      	cbnz	r4, 81842 <pio_configure_pin+0xe6>
		p_pio->PIO_MDDR = ul_mask;
   8182c:	655a      	str	r2, [r3, #84]	; 0x54
	if (ul_default_level) {
   8182e:	f1bc 5f60 	cmp.w	ip, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   81832:	bf0c      	ite	eq
   81834:	631a      	streq	r2, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   81836:	635a      	strne	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   81838:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   8183a:	601a      	str	r2, [r3, #0]
	return 1;
   8183c:	2001      	movs	r0, #1
}
   8183e:	bc10      	pop	{r4}
   81840:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   81842:	651a      	str	r2, [r3, #80]	; 0x50
   81844:	e7f3      	b.n	8182e <pio_configure_pin+0xd2>
		p_pio->PIO_SCIFSR = ul_mask;
   81846:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	return 1;
   8184a:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   8184c:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   8184e:	601a      	str	r2, [r3, #0]
}
   81850:	4770      	bx	lr
   81852:	bf00      	nop

00081854 <pio_configure_pin_group>:
{
   81854:	4603      	mov	r3, r0
	switch (ul_flags & PIO_TYPE_Msk) {
   81856:	f002 40f0 	and.w	r0, r2, #2013265920	; 0x78000000
   8185a:	f1b0 5f20 	cmp.w	r0, #671088640	; 0x28000000
   8185e:	d029      	beq.n	818b4 <pio_configure_pin_group+0x60>
{
   81860:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   81862:	d810      	bhi.n	81886 <pio_configure_pin_group+0x32>
   81864:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
   81868:	d015      	beq.n	81896 <pio_configure_pin_group+0x42>
   8186a:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
   8186e:	d10f      	bne.n	81890 <pio_configure_pin_group+0x3c>
	p_pio->PIO_IDR = ul_mask;
   81870:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   81872:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   81874:	4308      	orrs	r0, r1
   81876:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   81878:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   8187c:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   8187e:	d015      	beq.n	818ac <pio_configure_pin_group+0x58>
		p_pio->PIO_PUER = ul_mask;
   81880:	6659      	str	r1, [r3, #100]	; 0x64
}
   81882:	bc10      	pop	{r4}
   81884:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   81886:	f002 40e0 	and.w	r0, r2, #1879048192	; 0x70000000
   8188a:	f1b0 5f40 	cmp.w	r0, #805306368	; 0x30000000
   8188e:	d025      	beq.n	818dc <pio_configure_pin_group+0x88>
   81890:	2000      	movs	r0, #0
}
   81892:	bc10      	pop	{r4}
   81894:	4770      	bx	lr
	p_pio->PIO_IDR = ul_mask;
   81896:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   81898:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   8189a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8189c:	4020      	ands	r0, r4
   8189e:	ea20 0001 	bic.w	r0, r0, r1
   818a2:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   818a4:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   818a8:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   818aa:	d1e9      	bne.n	81880 <pio_configure_pin_group+0x2c>
		p_pio->PIO_PUDR = ul_mask;
   818ac:	6619      	str	r1, [r3, #96]	; 0x60
	return 1;
   818ae:	2001      	movs	r0, #1
}
   818b0:	bc10      	pop	{r4}
   818b2:	4770      	bx	lr
	if (ul_pull_up_enable) {
   818b4:	07d0      	lsls	r0, r2, #31
	p_pio->PIO_IDR = ul_mask;
   818b6:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   818b8:	bf4c      	ite	mi
   818ba:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   818bc:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   818be:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   818c2:	bf14      	ite	ne
   818c4:	6219      	strne	r1, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   818c6:	6259      	streq	r1, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   818c8:	0790      	lsls	r0, r2, #30
   818ca:	d41e      	bmi.n	8190a <pio_configure_pin_group+0xb6>
		if (ul_attribute & PIO_DEBOUNCE) {
   818cc:	0710      	lsls	r0, r2, #28
			p_pio->PIO_DIFSR = ul_mask;
   818ce:	bf48      	it	mi
   818d0:	f8c3 1084 	strmi.w	r1, [r3, #132]	; 0x84
	return 1;
   818d4:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   818d6:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   818d8:	6019      	str	r1, [r3, #0]
}
   818da:	4770      	bx	lr
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   818dc:	f002 5060 	and.w	r0, r2, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   818e0:	f3c2 0480 	ubfx	r4, r2, #2, #1
	if (ul_pull_up_enable) {
   818e4:	07d2      	lsls	r2, r2, #31
	p_pio->PIO_IDR = ul_mask;
   818e6:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   818e8:	bf4c      	ite	mi
   818ea:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   818ec:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   818ee:	b954      	cbnz	r4, 81906 <pio_configure_pin_group+0xb2>
		p_pio->PIO_MDDR = ul_mask;
   818f0:	6559      	str	r1, [r3, #84]	; 0x54
	if (ul_default_level) {
   818f2:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   818f6:	bf0c      	ite	eq
   818f8:	6319      	streq	r1, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   818fa:	6359      	strne	r1, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   818fc:	6119      	str	r1, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   818fe:	6019      	str	r1, [r3, #0]
	return 1;
   81900:	2001      	movs	r0, #1
}
   81902:	bc10      	pop	{r4}
   81904:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   81906:	6519      	str	r1, [r3, #80]	; 0x50
   81908:	e7f3      	b.n	818f2 <pio_configure_pin_group+0x9e>
		p_pio->PIO_SCIFSR = ul_mask;
   8190a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	return 1;
   8190e:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   81910:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   81912:	6019      	str	r1, [r3, #0]
}
   81914:	4770      	bx	lr
   81916:	bf00      	nop

00081918 <pmc_switch_mck_to_mainck>:
 */
uint32_t pmc_switch_mck_to_mainck(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   81918:	4915      	ldr	r1, [pc, #84]	; (81970 <pmc_switch_mck_to_mainck+0x58>)
   8191a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8191c:	f023 0303 	bic.w	r3, r3, #3
   81920:	f043 0301 	orr.w	r3, r3, #1
   81924:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_MAIN_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81926:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   81928:	071b      	lsls	r3, r3, #28
   8192a:	bf58      	it	pl
   8192c:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   81930:	d502      	bpl.n	81938 <pmc_switch_mck_to_mainck+0x20>
   81932:	e004      	b.n	8193e <pmc_switch_mck_to_mainck+0x26>
			--ul_timeout) {
		if (ul_timeout == 0) {
   81934:	3b01      	subs	r3, #1
   81936:	d016      	beq.n	81966 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81938:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8193a:	0712      	lsls	r2, r2, #28
   8193c:	d5fa      	bpl.n	81934 <pmc_switch_mck_to_mainck+0x1c>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8193e:	490c      	ldr	r1, [pc, #48]	; (81970 <pmc_switch_mck_to_mainck+0x58>)
   81940:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   81942:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   81946:	4303      	orrs	r3, r0
   81948:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8194a:	6e88      	ldr	r0, [r1, #104]	; 0x68
   8194c:	f010 0008 	ands.w	r0, r0, #8
   81950:	bf08      	it	eq
   81952:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   81956:	d002      	beq.n	8195e <pmc_switch_mck_to_mainck+0x46>
   81958:	e007      	b.n	8196a <pmc_switch_mck_to_mainck+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8195a:	3b01      	subs	r3, #1
   8195c:	d003      	beq.n	81966 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8195e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81960:	0712      	lsls	r2, r2, #28
   81962:	d5fa      	bpl.n	8195a <pmc_switch_mck_to_mainck+0x42>
			return 1;
		}
	}

	return 0;
}
   81964:	4770      	bx	lr
			return 1;
   81966:	2001      	movs	r0, #1
   81968:	4770      	bx	lr
	return 0;
   8196a:	2000      	movs	r0, #0
   8196c:	4770      	bx	lr
   8196e:	bf00      	nop
   81970:	400e0400 	.word	0x400e0400

00081974 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   81974:	4915      	ldr	r1, [pc, #84]	; (819cc <pmc_switch_mck_to_pllack+0x58>)
   81976:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   81978:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   8197c:	4303      	orrs	r3, r0
   8197e:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81980:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   81982:	071b      	lsls	r3, r3, #28
   81984:	bf58      	it	pl
   81986:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   8198a:	d502      	bpl.n	81992 <pmc_switch_mck_to_pllack+0x1e>
   8198c:	e004      	b.n	81998 <pmc_switch_mck_to_pllack+0x24>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8198e:	3b01      	subs	r3, #1
   81990:	d017      	beq.n	819c2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   81992:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   81994:	0710      	lsls	r0, r2, #28
   81996:	d5fa      	bpl.n	8198e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   81998:	490c      	ldr	r1, [pc, #48]	; (819cc <pmc_switch_mck_to_pllack+0x58>)
   8199a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8199c:	f023 0303 	bic.w	r3, r3, #3
   819a0:	f043 0302 	orr.w	r3, r3, #2
   819a4:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   819a6:	6e88      	ldr	r0, [r1, #104]	; 0x68
   819a8:	f010 0008 	ands.w	r0, r0, #8
   819ac:	bf08      	it	eq
   819ae:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   819b2:	d002      	beq.n	819ba <pmc_switch_mck_to_pllack+0x46>
   819b4:	e007      	b.n	819c6 <pmc_switch_mck_to_pllack+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   819b6:	3b01      	subs	r3, #1
   819b8:	d003      	beq.n	819c2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   819ba:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   819bc:	0712      	lsls	r2, r2, #28
   819be:	d5fa      	bpl.n	819b6 <pmc_switch_mck_to_pllack+0x42>
			return 1;
		}
	}

	return 0;
}
   819c0:	4770      	bx	lr
			return 1;
   819c2:	2001      	movs	r0, #1
   819c4:	4770      	bx	lr
	return 0;
   819c6:	2000      	movs	r0, #0
   819c8:	4770      	bx	lr
   819ca:	bf00      	nop
   819cc:	400e0400 	.word	0x400e0400

000819d0 <pmc_osc_enable_main_xtal>:
 *
 * \param ul_xtal_startup_time Xtal start-up time, in number of slow clocks.
 */
void pmc_osc_enable_main_xtal(uint32_t ul_xtal_startup_time)
{
	uint32_t mor = PMC->CKGR_MOR;
   819d0:	4a07      	ldr	r2, [pc, #28]	; (819f0 <pmc_osc_enable_main_xtal+0x20>)
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   819d2:	0203      	lsls	r3, r0, #8
	uint32_t mor = PMC->CKGR_MOR;
   819d4:	6a11      	ldr	r1, [r2, #32]
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   819d6:	b29b      	uxth	r3, r3
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
   819d8:	f021 0103 	bic.w	r1, r1, #3
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   819dc:	430b      	orrs	r3, r1
   819de:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   819e2:	f043 0301 	orr.w	r3, r3, #1
	PMC->CKGR_MOR = mor;
   819e6:	6213      	str	r3, [r2, #32]
	/* Wait the main Xtal to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   819e8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   819ea:	07db      	lsls	r3, r3, #31
   819ec:	d5fc      	bpl.n	819e8 <pmc_osc_enable_main_xtal+0x18>
}
   819ee:	4770      	bx	lr
   819f0:	400e0400 	.word	0x400e0400

000819f4 <pmc_osc_is_ready_main_xtal>:
 *
 * \retval 0 main crystal is not ready, otherwise ready.
 */
uint32_t pmc_osc_is_ready_main_xtal(void)
{
	return (PMC->PMC_SR & PMC_SR_MOSCXTS);
   819f4:	4b02      	ldr	r3, [pc, #8]	; (81a00 <pmc_osc_is_ready_main_xtal+0xc>)
   819f6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   819f8:	f000 0001 	and.w	r0, r0, #1
   819fc:	4770      	bx	lr
   819fe:	bf00      	nop
   81a00:	400e0400 	.word	0x400e0400

00081a04 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   81a04:	4b02      	ldr	r3, [pc, #8]	; (81a10 <pmc_osc_is_ready_mainck+0xc>)
   81a06:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81a08:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   81a0c:	4770      	bx	lr
   81a0e:	bf00      	nop
   81a10:	400e0400 	.word	0x400e0400

00081a14 <pmc_mainck_osc_select>:
 *
 * \param ul_xtal_rc 0 internal RC is selected, otherwise Main Crystal.
 */
void pmc_mainck_osc_select(uint32_t ul_xtal_rc)
{
	uint32_t mor = PMC->CKGR_MOR;
   81a14:	4b08      	ldr	r3, [pc, #32]	; (81a38 <pmc_mainck_osc_select+0x24>)
   81a16:	6a1b      	ldr	r3, [r3, #32]
	if (ul_xtal_rc) {
   81a18:	b130      	cbz	r0, 81a28 <pmc_mainck_osc_select+0x14>
		mor |=  CKGR_MOR_MOSCSEL;
	} else {
		mor &= ~CKGR_MOR_MOSCSEL;
	}
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   81a1a:	4a07      	ldr	r2, [pc, #28]	; (81a38 <pmc_mainck_osc_select+0x24>)
		mor |=  CKGR_MOR_MOSCSEL;
   81a1c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   81a20:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81a24:	6213      	str	r3, [r2, #32]
}
   81a26:	4770      	bx	lr
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   81a28:	4a03      	ldr	r2, [pc, #12]	; (81a38 <pmc_mainck_osc_select+0x24>)
		mor &= ~CKGR_MOR_MOSCSEL;
   81a2a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   81a2e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   81a32:	6213      	str	r3, [r2, #32]
}
   81a34:	4770      	bx	lr
   81a36:	bf00      	nop
   81a38:	400e0400 	.word	0x400e0400

00081a3c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   81a3c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   81a40:	4b01      	ldr	r3, [pc, #4]	; (81a48 <pmc_disable_pllack+0xc>)
   81a42:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
   81a44:	4770      	bx	lr
   81a46:	bf00      	nop
   81a48:	400e0400 	.word	0x400e0400

00081a4c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   81a4c:	4b02      	ldr	r3, [pc, #8]	; (81a58 <pmc_is_locked_pllack+0xc>)
   81a4e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81a50:	f000 0002 	and.w	r0, r0, #2
   81a54:	4770      	bx	lr
   81a56:	bf00      	nop
   81a58:	400e0400 	.word	0x400e0400

00081a5c <pmc_is_locked_upll>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   81a5c:	4b02      	ldr	r3, [pc, #8]	; (81a68 <pmc_is_locked_upll+0xc>)
   81a5e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   81a60:	f000 0040 	and.w	r0, r0, #64	; 0x40
   81a64:	4770      	bx	lr
   81a66:	bf00      	nop
   81a68:	400e0400 	.word	0x400e0400

00081a6c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   81a6c:	281d      	cmp	r0, #29
   81a6e:	d80a      	bhi.n	81a86 <pmc_enable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81a70:	2301      	movs	r3, #1
   81a72:	4a06      	ldr	r2, [pc, #24]	; (81a8c <pmc_enable_periph_clk+0x20>)
   81a74:	4083      	lsls	r3, r0
   81a76:	6991      	ldr	r1, [r2, #24]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   81a78:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   81a7a:	ea33 0101 	bics.w	r1, r3, r1
   81a7e:	d001      	beq.n	81a84 <pmc_enable_periph_clk+0x18>
			PMC->PMC_PCER0 = 1 << ul_id;
   81a80:	6113      	str	r3, [r2, #16]
   81a82:	4770      	bx	lr
}
   81a84:	4770      	bx	lr
		return 1;
   81a86:	2001      	movs	r0, #1
   81a88:	4770      	bx	lr
   81a8a:	bf00      	nop
   81a8c:	400e0400 	.word	0x400e0400

00081a90 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   81a90:	281d      	cmp	r0, #29
   81a92:	d80a      	bhi.n	81aaa <pmc_disable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   81a94:	2301      	movs	r3, #1
   81a96:	4a06      	ldr	r2, [pc, #24]	; (81ab0 <pmc_disable_periph_clk+0x20>)
   81a98:	4083      	lsls	r3, r0
   81a9a:	6991      	ldr	r1, [r2, #24]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
   81a9c:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   81a9e:	ea33 0101 	bics.w	r1, r3, r1
   81aa2:	d000      	beq.n	81aa6 <pmc_disable_periph_clk+0x16>
}
   81aa4:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
   81aa6:	6153      	str	r3, [r2, #20]
   81aa8:	4770      	bx	lr
		return 1;
   81aaa:	2001      	movs	r0, #1
   81aac:	4770      	bx	lr
   81aae:	bf00      	nop
   81ab0:	400e0400 	.word	0x400e0400

00081ab4 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   81ab4:	4b03      	ldr	r3, [pc, #12]	; (81ac4 <pmc_set_fast_startup_input+0x10>)
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   81ab6:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   81aba:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   81abc:	4310      	orrs	r0, r2
   81abe:	6718      	str	r0, [r3, #112]	; 0x70
}
   81ac0:	4770      	bx	lr
   81ac2:	bf00      	nop
   81ac4:	400e0400 	.word	0x400e0400

00081ac8 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   81ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   81acc:	b9a0      	cbnz	r0, 81af8 <_read+0x30>
		return -1;
	}

	for (; len > 0; --len) {
   81ace:	2a00      	cmp	r2, #0
   81ad0:	4690      	mov	r8, r2
   81ad2:	dd0d      	ble.n	81af0 <_read+0x28>
   81ad4:	460c      	mov	r4, r1
   81ad6:	4f0a      	ldr	r7, [pc, #40]	; (81b00 <_read+0x38>)
   81ad8:	4e0a      	ldr	r6, [pc, #40]	; (81b04 <_read+0x3c>)
   81ada:	188d      	adds	r5, r1, r2
		ptr_get(stdio_base, ptr);
   81adc:	4621      	mov	r1, r4
   81ade:	6838      	ldr	r0, [r7, #0]
   81ae0:	6833      	ldr	r3, [r6, #0]
		ptr++;
   81ae2:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
   81ae4:	4798      	blx	r3
	for (; len > 0; --len) {
   81ae6:	42ac      	cmp	r4, r5
   81ae8:	d1f8      	bne.n	81adc <_read+0x14>
		nChars++;
	}
	return nChars;
}
   81aea:	4640      	mov	r0, r8
   81aec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	int nChars = 0;
   81af0:	4680      	mov	r8, r0
}
   81af2:	4640      	mov	r0, r8
   81af4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   81af8:	f04f 38ff 	mov.w	r8, #4294967295
   81afc:	e7f5      	b.n	81aea <_read+0x22>
   81afe:	bf00      	nop
   81b00:	200036c8 	.word	0x200036c8
   81b04:	2000365c 	.word	0x2000365c

00081b08 <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   81b08:	4b02      	ldr	r3, [pc, #8]	; (81b14 <pmc_is_wakeup_clocks_restored+0xc>)
   81b0a:	7818      	ldrb	r0, [r3, #0]
}
   81b0c:	f080 0001 	eor.w	r0, r0, #1
   81b10:	4770      	bx	lr
   81b12:	bf00      	nop
   81b14:	20003660 	.word	0x20003660

00081b18 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
   81b18:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81b1c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81b20:	670a      	str	r2, [r1, #112]	; 0x70
}
   81b22:	4770      	bx	lr

00081b24 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
   81b24:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81b28:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81b2c:	674a      	str	r2, [r1, #116]	; 0x74
}
   81b2e:	4770      	bx	lr

00081b30 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
   81b30:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81b34:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81b38:	678a      	str	r2, [r1, #120]	; 0x78
}
   81b3a:	4770      	bx	lr

00081b3c <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
   81b3c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   81b40:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   81b44:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
}
   81b48:	4770      	bx	lr
   81b4a:	bf00      	nop

00081b4c <Reset_Handler>:

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   81b4c:	4917      	ldr	r1, [pc, #92]	; (81bac <Reset_Handler+0x60>)
   81b4e:	4818      	ldr	r0, [pc, #96]	; (81bb0 <Reset_Handler+0x64>)
{
   81b50:	b508      	push	{r3, lr}
	if (pSrc != pDest) {
   81b52:	4281      	cmp	r1, r0
   81b54:	d009      	beq.n	81b6a <Reset_Handler+0x1e>
		for (; pDest < &_erelocate;) {
   81b56:	4a17      	ldr	r2, [pc, #92]	; (81bb4 <Reset_Handler+0x68>)
   81b58:	4290      	cmp	r0, r2
   81b5a:	d206      	bcs.n	81b6a <Reset_Handler+0x1e>
			*pDest++ = *pSrc++;
   81b5c:	3a01      	subs	r2, #1
   81b5e:	1a12      	subs	r2, r2, r0
   81b60:	f022 0203 	bic.w	r2, r2, #3
   81b64:	4b14      	ldr	r3, [pc, #80]	; (81bb8 <Reset_Handler+0x6c>)
   81b66:	3204      	adds	r2, #4
   81b68:	4798      	blx	r3
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   81b6a:	4814      	ldr	r0, [pc, #80]	; (81bbc <Reset_Handler+0x70>)
   81b6c:	4a14      	ldr	r2, [pc, #80]	; (81bc0 <Reset_Handler+0x74>)
   81b6e:	4290      	cmp	r0, r2
   81b70:	d207      	bcs.n	81b82 <Reset_Handler+0x36>
		*pDest++ = 0;
   81b72:	3a01      	subs	r2, #1
   81b74:	1a12      	subs	r2, r2, r0
   81b76:	f022 0203 	bic.w	r2, r2, #3
   81b7a:	2100      	movs	r1, #0
   81b7c:	4b11      	ldr	r3, [pc, #68]	; (81bc4 <Reset_Handler+0x78>)
   81b7e:	3204      	adds	r2, #4
   81b80:	4798      	blx	r3
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81b82:	4b11      	ldr	r3, [pc, #68]	; (81bc8 <Reset_Handler+0x7c>)
   81b84:	4911      	ldr	r1, [pc, #68]	; (81bcc <Reset_Handler+0x80>)
   81b86:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   81b8a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81b8e:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   81b92:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   81b96:	608a      	str	r2, [r1, #8]
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   81b98:	d203      	bcs.n	81ba2 <Reset_Handler+0x56>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   81b9a:	688b      	ldr	r3, [r1, #8]
   81b9c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   81ba0:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   81ba2:	4b0b      	ldr	r3, [pc, #44]	; (81bd0 <Reset_Handler+0x84>)
   81ba4:	4798      	blx	r3

	/* Branch to main function */
	main();
   81ba6:	4b0b      	ldr	r3, [pc, #44]	; (81bd4 <Reset_Handler+0x88>)
   81ba8:	4798      	blx	r3

	/* Infinite loop */
	while (1);
   81baa:	e7fe      	b.n	81baa <Reset_Handler+0x5e>
   81bac:	0008a7ac 	.word	0x0008a7ac
   81bb0:	20000000 	.word	0x20000000
   81bb4:	20000d58 	.word	0x20000d58
   81bb8:	000833dd 	.word	0x000833dd
   81bbc:	20000d58 	.word	0x20000d58
   81bc0:	20003714 	.word	0x20003714
   81bc4:	000834c9 	.word	0x000834c9
   81bc8:	00080000 	.word	0x00080000
   81bcc:	e000ed00 	.word	0xe000ed00
   81bd0:	0008336d 	.word	0x0008336d
   81bd4:	0008022d 	.word	0x0008022d

00081bd8 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   81bd8:	4a0c      	ldr	r2, [pc, #48]	; (81c0c <_sbrk+0x34>)
{
   81bda:	4603      	mov	r3, r0
	if (heap == NULL) {
   81bdc:	6810      	ldr	r0, [r2, #0]
	int ramend = (int)&__ram_end__;
   81bde:	490c      	ldr	r1, [pc, #48]	; (81c10 <_sbrk+0x38>)
	if (heap == NULL) {
   81be0:	b130      	cbz	r0, 81bf0 <_sbrk+0x18>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
   81be2:	4403      	add	r3, r0
   81be4:	428b      	cmp	r3, r1
		return (caddr_t) -1;	
   81be6:	bfcc      	ite	gt
   81be8:	f04f 30ff 	movgt.w	r0, #4294967295
	}

	heap += incr;
   81bec:	6013      	strle	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
   81bee:	4770      	bx	lr
{
   81bf0:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
   81bf2:	4c08      	ldr	r4, [pc, #32]	; (81c14 <_sbrk+0x3c>)
	if (((int)prev_heap + incr) > ramend) {
   81bf4:	4423      	add	r3, r4
   81bf6:	428b      	cmp	r3, r1
		heap = (unsigned char *)&_end;
   81bf8:	6014      	str	r4, [r2, #0]
	heap += incr;
   81bfa:	bfd8      	it	le
   81bfc:	6013      	strle	r3, [r2, #0]
		heap = (unsigned char *)&_end;
   81bfe:	4620      	mov	r0, r4
		return (caddr_t) -1;	
   81c00:	bfc8      	it	gt
   81c02:	f04f 30ff 	movgt.w	r0, #4294967295
}
   81c06:	bc10      	pop	{r4}
   81c08:	4770      	bx	lr
   81c0a:	bf00      	nop
   81c0c:	2000366c 	.word	0x2000366c
   81c10:	20083ffc 	.word	0x20083ffc
   81c14:	20083000 	.word	0x20083000

00081c18 <_close>:
}

extern int _close(int file)
{
	return -1;
}
   81c18:	f04f 30ff 	mov.w	r0, #4294967295
   81c1c:	4770      	bx	lr
   81c1e:	bf00      	nop

00081c20 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   81c20:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
   81c24:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
   81c26:	604b      	str	r3, [r1, #4]
}
   81c28:	4770      	bx	lr
   81c2a:	bf00      	nop

00081c2c <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   81c2c:	2001      	movs	r0, #1
   81c2e:	4770      	bx	lr

00081c30 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   81c30:	2000      	movs	r0, #0
   81c32:	4770      	bx	lr

00081c34 <_exit>:

extern void _exit(int status)
{
   81c34:	4601      	mov	r1, r0
   81c36:	b508      	push	{r3, lr}
	printf("Exiting with status %d.\n", status);
   81c38:	4801      	ldr	r0, [pc, #4]	; (81c40 <_exit+0xc>)
   81c3a:	4b02      	ldr	r3, [pc, #8]	; (81c44 <_exit+0x10>)
   81c3c:	4798      	blx	r3

	for (;;);
   81c3e:	e7fe      	b.n	81c3e <_exit+0xa>
   81c40:	0008a330 	.word	0x0008a330
   81c44:	000833b5 	.word	0x000833b5

00081c48 <_kill>:
}

extern void _kill(int pid, int sig)
{
	return;
}
   81c48:	4770      	bx	lr
   81c4a:	bf00      	nop

00081c4c <_getpid>:

extern int _getpid(void)
{
	return -1;
}
   81c4c:	f04f 30ff 	mov.w	r0, #4294967295
   81c50:	4770      	bx	lr
   81c52:	bf00      	nop

00081c54 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   81c54:	b510      	push	{r4, lr}
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   81c56:	203e      	movs	r0, #62	; 0x3e
   81c58:	4b07      	ldr	r3, [pc, #28]	; (81c78 <sysclk_enable_usb+0x24>)
   81c5a:	4798      	blx	r3
		break;
   81c5c:	4c07      	ldr	r4, [pc, #28]	; (81c7c <sysclk_enable_usb+0x28>)
		return pmc_osc_is_ready_main_xtal();
   81c5e:	47a0      	blx	r4
   81c60:	2800      	cmp	r0, #0
   81c62:	d0fc      	beq.n	81c5e <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   81c64:	f44f 0271 	mov.w	r2, #15794176	; 0xf10000
   81c68:	4b05      	ldr	r3, [pc, #20]	; (81c80 <sysclk_enable_usb+0x2c>)
   81c6a:	4c06      	ldr	r4, [pc, #24]	; (81c84 <sysclk_enable_usb+0x30>)
   81c6c:	61da      	str	r2, [r3, #28]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_upll();
   81c6e:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   81c70:	2800      	cmp	r0, #0
   81c72:	d0fc      	beq.n	81c6e <sysclk_enable_usb+0x1a>

	pll_enable_source(CONFIG_PLL1_SOURCE);
	pll_config_defaults(&pllcfg, 1);
	pll_enable(&pllcfg, 1);
	pll_wait_for_lock(1);
}
   81c74:	bd10      	pop	{r4, pc}
   81c76:	bf00      	nop
   81c78:	000819d1 	.word	0x000819d1
   81c7c:	000819f5 	.word	0x000819f5
   81c80:	400e0400 	.word	0x400e0400
   81c84:	00081a5d 	.word	0x00081a5d

00081c88 <sysclk_init>:
		pll_disable(1);
	}
}

void sysclk_init(void)
{
   81c88:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   81c8a:	4812      	ldr	r0, [pc, #72]	; (81cd4 <sysclk_init+0x4c>)
   81c8c:	4d12      	ldr	r5, [pc, #72]	; (81cd8 <sysclk_init+0x50>)
   81c8e:	47a8      	blx	r5
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   81c90:	203e      	movs	r0, #62	; 0x3e
   81c92:	4b12      	ldr	r3, [pc, #72]	; (81cdc <sysclk_init+0x54>)
   81c94:	4798      	blx	r3
		break;
   81c96:	4c12      	ldr	r4, [pc, #72]	; (81ce0 <sysclk_init+0x58>)
		return pmc_osc_is_ready_main_xtal();
   81c98:	47a0      	blx	r4
   81c9a:	2800      	cmp	r0, #0
   81c9c:	d0fc      	beq.n	81c98 <sysclk_init+0x10>
#  ifndef CONFIG_PLL1_SOURCE
			pmc_osc_disable_main_xtal();
#  endif
		} else if (CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_XTAL ||
				CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_BYPASS) {
			pmc_mainck_osc_select(CKGR_MOR_MOSCSEL);
   81c9e:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   81ca2:	4b10      	ldr	r3, [pc, #64]	; (81ce4 <sysclk_init+0x5c>)
   81ca4:	4798      	blx	r3
			while(!pmc_osc_is_ready_mainck());
   81ca6:	4c10      	ldr	r4, [pc, #64]	; (81ce8 <sysclk_init+0x60>)
   81ca8:	47a0      	blx	r4
   81caa:	2800      	cmp	r0, #0
   81cac:	d0fc      	beq.n	81ca8 <sysclk_init+0x20>
		pmc_disable_pllack(); // Always stop PLL first!
   81cae:	4b0f      	ldr	r3, [pc, #60]	; (81cec <sysclk_init+0x64>)
   81cb0:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   81cb2:	4b0f      	ldr	r3, [pc, #60]	; (81cf0 <sysclk_init+0x68>)
   81cb4:	4a0f      	ldr	r2, [pc, #60]	; (81cf4 <sysclk_init+0x6c>)
   81cb6:	4c10      	ldr	r4, [pc, #64]	; (81cf8 <sysclk_init+0x70>)
   81cb8:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
   81cba:	47a0      	blx	r4
   81cbc:	2800      	cmp	r0, #0
   81cbe:	d0fc      	beq.n	81cba <sysclk_init+0x32>
		}
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   81cc0:	4b0e      	ldr	r3, [pc, #56]	; (81cfc <sysclk_init+0x74>)
   81cc2:	2010      	movs	r0, #16
   81cc4:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   81cc6:	4b0e      	ldr	r3, [pc, #56]	; (81d00 <sysclk_init+0x78>)
   81cc8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   81cca:	462b      	mov	r3, r5

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   81ccc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
   81cd0:	4800      	ldr	r0, [pc, #0]	; (81cd4 <sysclk_init+0x4c>)
   81cd2:	4718      	bx	r3
   81cd4:	05b8d800 	.word	0x05b8d800
   81cd8:	20000131 	.word	0x20000131
   81cdc:	000819d1 	.word	0x000819d1
   81ce0:	000819f5 	.word	0x000819f5
   81ce4:	00081a15 	.word	0x00081a15
   81ce8:	00081a05 	.word	0x00081a05
   81cec:	00081a3d 	.word	0x00081a3d
   81cf0:	400e0400 	.word	0x400e0400
   81cf4:	200f3f01 	.word	0x200f3f01
   81cf8:	00081a4d 	.word	0x00081a4d
   81cfc:	00081975 	.word	0x00081975
   81d00:	00081d05 	.word	0x00081d05

00081d04 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   81d04:	4a31      	ldr	r2, [pc, #196]	; (81dcc <SystemCoreClockUpdate+0xc8>)
   81d06:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81d08:	f003 0303 	and.w	r3, r3, #3
   81d0c:	2b01      	cmp	r3, #1
   81d0e:	d02c      	beq.n	81d6a <SystemCoreClockUpdate+0x66>
   81d10:	3b02      	subs	r3, #2
   81d12:	2b01      	cmp	r3, #1
   81d14:	d81e      	bhi.n	81d54 <SystemCoreClockUpdate+0x50>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81d16:	6a13      	ldr	r3, [r2, #32]
   81d18:	01d9      	lsls	r1, r3, #7
   81d1a:	d538      	bpl.n	81d8e <SystemCoreClockUpdate+0x8a>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   81d1c:	482c      	ldr	r0, [pc, #176]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81d1e:	4b2d      	ldr	r3, [pc, #180]	; (81dd4 <SystemCoreClockUpdate+0xd0>)
   81d20:	6003      	str	r3, [r0, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   81d22:	4a2a      	ldr	r2, [pc, #168]	; (81dcc <SystemCoreClockUpdate+0xc8>)
   81d24:	6b13      	ldr	r3, [r2, #48]	; 0x30
   81d26:	f003 0303 	and.w	r3, r3, #3
   81d2a:	2b02      	cmp	r3, #2
   81d2c:	d03c      	beq.n	81da8 <SystemCoreClockUpdate+0xa4>
   81d2e:	4b2a      	ldr	r3, [pc, #168]	; (81dd8 <SystemCoreClockUpdate+0xd4>)
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   81d30:	4926      	ldr	r1, [pc, #152]	; (81dcc <SystemCoreClockUpdate+0xc8>)
   81d32:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   81d34:	f002 0270 	and.w	r2, r2, #112	; 0x70
   81d38:	2a70      	cmp	r2, #112	; 0x70
   81d3a:	d005      	beq.n	81d48 <SystemCoreClockUpdate+0x44>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   81d3c:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   81d3e:	f3c2 1202 	ubfx	r2, r2, #4, #3
   81d42:	40d3      	lsrs	r3, r2
   81d44:	6003      	str	r3, [r0, #0]
			                           PMC_MCKR_PRES_Pos);
	}
}
   81d46:	4770      	bx	lr
		SystemCoreClock /= 3U;
   81d48:	4a24      	ldr	r2, [pc, #144]	; (81ddc <SystemCoreClockUpdate+0xd8>)
   81d4a:	fba2 2303 	umull	r2, r3, r2, r3
   81d4e:	085b      	lsrs	r3, r3, #1
   81d50:	6003      	str	r3, [r0, #0]
}
   81d52:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   81d54:	4b22      	ldr	r3, [pc, #136]	; (81de0 <SystemCoreClockUpdate+0xdc>)
   81d56:	481e      	ldr	r0, [pc, #120]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81d58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   81d5a:	f013 0f80 	tst.w	r3, #128	; 0x80
   81d5e:	bf14      	ite	ne
   81d60:	f44f 4300 	movne.w	r3, #32768	; 0x8000
   81d64:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
   81d68:	e7e2      	b.n	81d30 <SystemCoreClockUpdate+0x2c>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   81d6a:	6a13      	ldr	r3, [r2, #32]
   81d6c:	01db      	lsls	r3, r3, #7
   81d6e:	d40b      	bmi.n	81d88 <SystemCoreClockUpdate+0x84>
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81d70:	6a12      	ldr	r2, [r2, #32]
   81d72:	f002 0270 	and.w	r2, r2, #112	; 0x70
   81d76:	2a10      	cmp	r2, #16
   81d78:	d021      	beq.n	81dbe <SystemCoreClockUpdate+0xba>
   81d7a:	4b16      	ldr	r3, [pc, #88]	; (81dd4 <SystemCoreClockUpdate+0xd0>)
   81d7c:	4919      	ldr	r1, [pc, #100]	; (81de4 <SystemCoreClockUpdate+0xe0>)
   81d7e:	4814      	ldr	r0, [pc, #80]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81d80:	2a20      	cmp	r2, #32
   81d82:	bf18      	it	ne
   81d84:	460b      	movne	r3, r1
   81d86:	e7d3      	b.n	81d30 <SystemCoreClockUpdate+0x2c>
   81d88:	4b12      	ldr	r3, [pc, #72]	; (81dd4 <SystemCoreClockUpdate+0xd0>)
   81d8a:	4811      	ldr	r0, [pc, #68]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81d8c:	e7d0      	b.n	81d30 <SystemCoreClockUpdate+0x2c>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   81d8e:	4b15      	ldr	r3, [pc, #84]	; (81de4 <SystemCoreClockUpdate+0xe0>)
   81d90:	480f      	ldr	r0, [pc, #60]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81d92:	6003      	str	r3, [r0, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   81d94:	6a13      	ldr	r3, [r2, #32]
   81d96:	f003 0370 	and.w	r3, r3, #112	; 0x70
   81d9a:	2b10      	cmp	r3, #16
   81d9c:	d012      	beq.n	81dc4 <SystemCoreClockUpdate+0xc0>
   81d9e:	2b20      	cmp	r3, #32
   81da0:	d1bf      	bne.n	81d22 <SystemCoreClockUpdate+0x1e>
				SystemCoreClock *= 3U;
   81da2:	4b0c      	ldr	r3, [pc, #48]	; (81dd4 <SystemCoreClockUpdate+0xd0>)
   81da4:	6003      	str	r3, [r0, #0]
				break;
   81da6:	e7bc      	b.n	81d22 <SystemCoreClockUpdate+0x1e>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   81da8:	6a91      	ldr	r1, [r2, #40]	; 0x28
   81daa:	6803      	ldr	r3, [r0, #0]
   81dac:	f3c1 410a 	ubfx	r1, r1, #16, #11
   81db0:	fb01 3303 	mla	r3, r1, r3, r3
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   81db4:	6a92      	ldr	r2, [r2, #40]	; 0x28
   81db6:	b2d2      	uxtb	r2, r2
   81db8:	fbb3 f3f2 	udiv	r3, r3, r2
   81dbc:	e7b8      	b.n	81d30 <SystemCoreClockUpdate+0x2c>
   81dbe:	4b0a      	ldr	r3, [pc, #40]	; (81de8 <SystemCoreClockUpdate+0xe4>)
   81dc0:	4803      	ldr	r0, [pc, #12]	; (81dd0 <SystemCoreClockUpdate+0xcc>)
   81dc2:	e7b5      	b.n	81d30 <SystemCoreClockUpdate+0x2c>
				SystemCoreClock *= 2U;
   81dc4:	4b08      	ldr	r3, [pc, #32]	; (81de8 <SystemCoreClockUpdate+0xe4>)
   81dc6:	6003      	str	r3, [r0, #0]
				break;
   81dc8:	e7ab      	b.n	81d22 <SystemCoreClockUpdate+0x1e>
   81dca:	bf00      	nop
   81dcc:	400e0400 	.word	0x400e0400
   81dd0:	20000308 	.word	0x20000308
   81dd4:	00b71b00 	.word	0x00b71b00
   81dd8:	0e4e1c00 	.word	0x0e4e1c00
   81ddc:	aaaaaaab 	.word	0xaaaaaaab
   81de0:	400e1200 	.word	0x400e1200
   81de4:	003d0900 	.word	0x003d0900
   81de8:	007a1200 	.word	0x007a1200

00081dec <uart_init>:
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   81dec:	23ac      	movs	r3, #172	; 0xac
   81dee:	6003      	str	r3, [r0, #0]
{
   81df0:	4602      	mov	r2, r0
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   81df2:	e9d1 3000 	ldrd	r3, r0, [r1]
   81df6:	fbb3 f3f0 	udiv	r3, r3, r0
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   81dfa:	f64f 7cfe 	movw	ip, #65534	; 0xfffe
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   81dfe:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   81e00:	1e58      	subs	r0, r3, #1
   81e02:	4560      	cmp	r0, ip
   81e04:	d80c      	bhi.n	81e20 <uart_init+0x34>
{
   81e06:	b430      	push	{r4, r5}
	p_uart->UART_BRGR = cd;
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   81e08:	f240 2502 	movw	r5, #514	; 0x202

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   81e0c:	2450      	movs	r4, #80	; 0x50
	p_uart->UART_BRGR = cd;
   81e0e:	6213      	str	r3, [r2, #32]
	p_uart->UART_MR = p_uart_opt->ul_mode;
   81e10:	688b      	ldr	r3, [r1, #8]

	return 0;
   81e12:	2000      	movs	r0, #0
	p_uart->UART_MR = p_uart_opt->ul_mode;
   81e14:	6053      	str	r3, [r2, #4]
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   81e16:	f8c2 5120 	str.w	r5, [r2, #288]	; 0x120
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   81e1a:	6014      	str	r4, [r2, #0]
}
   81e1c:	bc30      	pop	{r4, r5}
   81e1e:	4770      	bx	lr
		return 1;
   81e20:	2001      	movs	r0, #1
}
   81e22:	4770      	bx	lr

00081e24 <uart_write>:
 *
 * \retval 0 Success.
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
   81e24:	4603      	mov	r3, r0
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   81e26:	6942      	ldr	r2, [r0, #20]
   81e28:	0792      	lsls	r2, r2, #30
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
   81e2a:	bf46      	itte	mi
   81e2c:	2000      	movmi	r0, #0
	p_uart->UART_THR = uc_data;
   81e2e:	61d9      	strmi	r1, [r3, #28]
		return 1;
   81e30:	2001      	movpl	r0, #1
}
   81e32:	4770      	bx	lr

00081e34 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   81e34:	6943      	ldr	r3, [r0, #20]
   81e36:	07db      	lsls	r3, r3, #31
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   81e38:	bf43      	ittte	mi
   81e3a:	6983      	ldrmi	r3, [r0, #24]
	return 0;
   81e3c:	2000      	movmi	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
   81e3e:	700b      	strbmi	r3, [r1, #0]
		return 1;
   81e40:	2001      	movpl	r0, #1
}
   81e42:	4770      	bx	lr

00081e44 <udi_vendor_getsetting>:
	return false; // Not supported request
}

uint8_t udi_vendor_getsetting(void)
{
	return udi_vendor_alternate_setting;
   81e44:	4b01      	ldr	r3, [pc, #4]	; (81e4c <udi_vendor_getsetting+0x8>)
}
   81e46:	7818      	ldrb	r0, [r3, #0]
   81e48:	4770      	bx	lr
   81e4a:	bf00      	nop
   81e4c:	20003670 	.word	0x20003670

00081e50 <udi_vendor_disable>:
	if (0 == udi_vendor_alternate_setting) {
   81e50:	4b02      	ldr	r3, [pc, #8]	; (81e5c <udi_vendor_disable+0xc>)
   81e52:	781b      	ldrb	r3, [r3, #0]
   81e54:	b103      	cbz	r3, 81e58 <udi_vendor_disable+0x8>
}
   81e56:	4770      	bx	lr
		UDI_VENDOR_DISABLE_EXT();
   81e58:	4b01      	ldr	r3, [pc, #4]	; (81e60 <udi_vendor_disable+0x10>)
   81e5a:	4718      	bx	r3
   81e5c:	20003670 	.word	0x20003670
   81e60:	00080979 	.word	0x00080979

00081e64 <udi_vendor_setup>:
	if (Udd_setup_is_in()) {
   81e64:	4b08      	ldr	r3, [pc, #32]	; (81e88 <udi_vendor_setup+0x24>)
   81e66:	f993 2000 	ldrsb.w	r2, [r3]
   81e6a:	781b      	ldrb	r3, [r3, #0]
   81e6c:	2a00      	cmp	r2, #0
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   81e6e:	f003 0360 	and.w	r3, r3, #96	; 0x60
	if (Udd_setup_is_in()) {
   81e72:	db03      	blt.n	81e7c <udi_vendor_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   81e74:	2b40      	cmp	r3, #64	; 0x40
   81e76:	d005      	beq.n	81e84 <udi_vendor_setup+0x20>
}
   81e78:	2000      	movs	r0, #0
   81e7a:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   81e7c:	2b40      	cmp	r3, #64	; 0x40
   81e7e:	d1fb      	bne.n	81e78 <udi_vendor_setup+0x14>
			return UDI_VENDOR_SETUP_IN_RECEIVED();
   81e80:	4b02      	ldr	r3, [pc, #8]	; (81e8c <udi_vendor_setup+0x28>)
   81e82:	4718      	bx	r3
			return UDI_VENDOR_SETUP_OUT_RECEIVED();
   81e84:	4b02      	ldr	r3, [pc, #8]	; (81e90 <udi_vendor_setup+0x2c>)
   81e86:	4718      	bx	r3
   81e88:	200036ac 	.word	0x200036ac
   81e8c:	000809d5 	.word	0x000809d5
   81e90:	00080985 	.word	0x00080985

00081e94 <udi_vendor_enable>:
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   81e94:	4b06      	ldr	r3, [pc, #24]	; (81eb0 <udi_vendor_enable+0x1c>)
{
   81e96:	b510      	push	{r4, lr}
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   81e98:	4798      	blx	r3
   81e9a:	4a06      	ldr	r2, [pc, #24]	; (81eb4 <udi_vendor_enable+0x20>)
   81e9c:	78c3      	ldrb	r3, [r0, #3]
   81e9e:	7013      	strb	r3, [r2, #0]
	if (0 == udi_vendor_alternate_setting) {
   81ea0:	b10b      	cbz	r3, 81ea6 <udi_vendor_enable+0x12>
}
   81ea2:	2001      	movs	r0, #1
   81ea4:	bd10      	pop	{r4, pc}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   81ea6:	4b04      	ldr	r3, [pc, #16]	; (81eb8 <udi_vendor_enable+0x24>)
}
   81ea8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   81eac:	4718      	bx	r3
   81eae:	bf00      	nop
   81eb0:	00080ce9 	.word	0x00080ce9
   81eb4:	20003670 	.word	0x20003670
   81eb8:	00080951 	.word	0x00080951

00081ebc <udi_vendor_bulk_in_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_in_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   81ebc:	b530      	push	{r4, r5, lr}
   81ebe:	4684      	mov	ip, r0
   81ec0:	4615      	mov	r5, r2
   81ec2:	b083      	sub	sp, #12
   81ec4:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_IN,
   81ec6:	4662      	mov	r2, ip
   81ec8:	2100      	movs	r1, #0
   81eca:	4c03      	ldr	r4, [pc, #12]	; (81ed8 <udi_vendor_bulk_in_run+0x1c>)
   81ecc:	9500      	str	r5, [sp, #0]
   81ece:	2081      	movs	r0, #129	; 0x81
   81ed0:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   81ed2:	b003      	add	sp, #12
   81ed4:	bd30      	pop	{r4, r5, pc}
   81ed6:	bf00      	nop
   81ed8:	00082e85 	.word	0x00082e85

00081edc <udi_vendor_bulk_out_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_out_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   81edc:	b530      	push	{r4, r5, lr}
   81ede:	4684      	mov	ip, r0
   81ee0:	4615      	mov	r5, r2
   81ee2:	b083      	sub	sp, #12
   81ee4:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_OUT,
   81ee6:	4662      	mov	r2, ip
   81ee8:	2100      	movs	r1, #0
   81eea:	4c03      	ldr	r4, [pc, #12]	; (81ef8 <udi_vendor_bulk_out_run+0x1c>)
   81eec:	9500      	str	r5, [sp, #0]
   81eee:	2002      	movs	r0, #2
   81ef0:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   81ef2:	b003      	add	sp, #12
   81ef4:	bd30      	pop	{r4, r5, pc}
   81ef6:	bf00      	nop
   81ef8:	00082e85 	.word	0x00082e85

00081efc <udd_ep_finish_job>:
}


static void udd_ep_finish_job(udd_ep_job_t * ptr_job, bool b_abort, uint8_t ep_num)
{
	if (ptr_job->busy == false) {
   81efc:	f890 c014 	ldrb.w	ip, [r0, #20]
{
   81f00:	4603      	mov	r3, r0
	if (ptr_job->busy == false) {
   81f02:	f01c 0f01 	tst.w	ip, #1
   81f06:	d016      	beq.n	81f36 <udd_ep_finish_job+0x3a>
{
   81f08:	b430      	push	{r4, r5}
		return; // No on-going job
	}
	ptr_job->busy = false;
	dbg_print("JobE%d ", b_abort);
	if (NULL == ptr_job->call_trans) {
   81f0a:	6804      	ldr	r4, [r0, #0]
	ptr_job->busy = false;
   81f0c:	f36f 0c00 	bfc	ip, #0, #1
   81f10:	f880 c014 	strb.w	ip, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   81f14:	b16c      	cbz	r4, 81f32 <udd_ep_finish_job+0x36>
		return; // No callback linked to job
	}
	if (Is_udd_endpoint_in(ep_num)) {
   81f16:	4d08      	ldr	r5, [pc, #32]	; (81f38 <udd_ep_finish_job+0x3c>)
   81f18:	4608      	mov	r0, r1
   81f1a:	f102 0108 	add.w	r1, r2, #8
   81f1e:	0149      	lsls	r1, r1, #5
   81f20:	5869      	ldr	r1, [r5, r1]
   81f22:	0709      	lsls	r1, r1, #28
		ep_num |= USB_EP_DIR_IN;
   81f24:	bf48      	it	mi
   81f26:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f2a:	6899      	ldr	r1, [r3, #8]
   81f2c:	4623      	mov	r3, r4
			UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}
   81f2e:	bc30      	pop	{r4, r5}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81f30:	4718      	bx	r3
}
   81f32:	bc30      	pop	{r4, r5}
   81f34:	4770      	bx	lr
   81f36:	4770      	bx	lr
   81f38:	400a4000 	.word	0x400a4000

00081f3c <udd_ep_trans_done>:

static void udd_ep_trans_done(udd_ep_id_t ep)
{
   81f3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   81f40:	1e43      	subs	r3, r0, #1

	if (!ptr_job->busy) {
   81f42:	4c66      	ldr	r4, [pc, #408]	; (820dc <udd_ep_trans_done+0x1a0>)
   81f44:	eb03 0143 	add.w	r1, r3, r3, lsl #1
   81f48:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   81f4c:	f891 c014 	ldrb.w	ip, [r1, #20]
   81f50:	f01c 0f01 	tst.w	ip, #1
   81f54:	d039      	beq.n	81fca <udd_ep_trans_done+0x8e>
   81f56:	4602      	mov	r2, r0
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   81f58:	e9d1 5002 	ldrd	r5, r0, [r1, #8]
   81f5c:	42a8      	cmp	r0, r5
   81f5e:	ea4f 0643 	mov.w	r6, r3, lsl #1
   81f62:	d034      	beq.n	81fce <udd_ep_trans_done+0x92>
		// Need to send or receive other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   81f64:	1a2d      	subs	r5, r5, r0

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   81f66:	f5b5 3f80 	cmp.w	r5, #65536	; 0x10000
   81f6a:	ea4f 1c42 	mov.w	ip, r2, lsl #5
   81f6e:	d847      	bhi.n	82000 <udd_ep_trans_done+0xc4>
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to transfer the maximum
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   81f70:	f10c 2e40 	add.w	lr, ip, #1073758208	; 0x40004000
   81f74:	f50e 2e20 	add.w	lr, lr, #655360	; 0xa0000
		}
		if (Is_udd_endpoint_in(ep)) {
   81f78:	f8de 8100 	ldr.w	r8, [lr, #256]	; 0x100
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   81f7c:	042f      	lsls	r7, r5, #16
		if (Is_udd_endpoint_in(ep)) {
   81f7e:	f018 0f08 	tst.w	r8, #8
   81f82:	d072      	beq.n	8206a <udd_ep_trans_done+0x12e>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   81f84:	f8de 8100 	ldr.w	r8, [lr, #256]	; 0x100
   81f88:	f04f 0e08 	mov.w	lr, #8
   81f8c:	f008 0807 	and.w	r8, r8, #7
   81f90:	fa0e fe08 	lsl.w	lr, lr, r8
   81f94:	f10e 3eff 	add.w	lr, lr, #4294967295
   81f98:	ea1e 0f05 	tst.w	lr, r5
   81f9c:	f000 809a 	beq.w	820d4 <udd_ep_trans_done+0x198>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_B_EN;
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   81fa0:	f891 e014 	ldrb.w	lr, [r1, #20]
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   81fa4:	f047 0729 	orr.w	r7, r7, #41	; 0x29
				ptr_job->b_shortpacket = false;
   81fa8:	f36f 0e41 	bfc	lr, #1, #1
   81fac:	f881 e014 	strb.w	lr, [r1, #20]
   81fb0:	e033      	b.n	8201a <udd_ep_trans_done+0xde>
	if (Is_udd_endpoint_in(ep)) {
		if (ptr_job->b_shortpacket) {
			dbg_print("zlp ");
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_enable_tx_pkt_ready_interrupt(ep);
   81fb2:	f44f 6400 	mov.w	r4, #2048	; 0x800
			udd_enable_endpoint_interrupt(ep);
   81fb6:	f44f 7380 	mov.w	r3, #256	; 0x100
   81fba:	4849      	ldr	r0, [pc, #292]	; (820e0 <udd_ep_trans_done+0x1a4>)
			udd_enable_tx_pkt_ready_interrupt(ep);
   81fbc:	f8c1 4104 	str.w	r4, [r1, #260]	; 0x104
			udd_enable_endpoint_interrupt(ep);
   81fc0:	fa03 f202 	lsl.w	r2, r3, r2
   81fc4:	6903      	ldr	r3, [r0, #16]
   81fc6:	431a      	orrs	r2, r3
   81fc8:	6102      	str	r2, [r0, #16]
			return;
		}
	}
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
}
   81fca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   81fce:	ea4f 1c42 	mov.w	ip, r2, lsl #5
	if (Is_udd_endpoint_in(ep)) {
   81fd2:	f10c 2140 	add.w	r1, ip, #1073758208	; 0x40004000
   81fd6:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   81fda:	f8d1 0100 	ldr.w	r0, [r1, #256]	; 0x100
   81fde:	0700      	lsls	r0, r0, #28
   81fe0:	d505      	bpl.n	81fee <udd_ep_trans_done+0xb2>
		if (ptr_job->b_shortpacket) {
   81fe2:	18f0      	adds	r0, r6, r3
   81fe4:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81fe8:	7d00      	ldrb	r0, [r0, #20]
   81fea:	0787      	lsls	r7, r0, #30
   81fec:	d4e1      	bmi.n	81fb2 <udd_ep_trans_done+0x76>
	udd_ep_finish_job(ptr_job, false, ep);
   81fee:	4d3d      	ldr	r5, [pc, #244]	; (820e4 <udd_ep_trans_done+0x1a8>)
	ptr_job = &udd_ep_job[ep - 1];
   81ff0:	18f0      	adds	r0, r6, r3
	udd_ep_finish_job(ptr_job, false, ep);
   81ff2:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
   81ff6:	462b      	mov	r3, r5
}
   81ff8:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
	udd_ep_finish_job(ptr_job, false, ep);
   81ffc:	2100      	movs	r1, #0
   81ffe:	4718      	bx	r3
		if (Is_udd_endpoint_in(ep)) {
   82000:	f10c 2140 	add.w	r1, ip, #1073758208	; 0x40004000
   82004:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82008:	f8d1 5100 	ldr.w	r5, [r1, #256]	; 0x100
   8200c:	072d      	lsls	r5, r5, #28
   8200e:	d535      	bpl.n	8207c <udd_ep_trans_done+0x140>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   82010:	2721      	movs	r7, #33	; 0x21
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   82012:	f44f 3580 	mov.w	r5, #65536	; 0x10000
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   82016:	f8d1 1100 	ldr.w	r1, [r1, #256]	; 0x100
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   8201a:	eb06 0e03 	add.w	lr, r6, r3
   8201e:	eb04 0ece 	add.w	lr, r4, lr, lsl #3
   82022:	f8de 1004 	ldr.w	r1, [lr, #4]
   82026:	4408      	add	r0, r1
   82028:	492f      	ldr	r1, [pc, #188]	; (820e8 <udd_ep_trans_done+0x1ac>)
   8202a:	eb01 1102 	add.w	r1, r1, r2, lsl #4
   8202e:	6048      	str	r0, [r1, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82030:	f3ef 8810 	mrs	r8, PRIMASK
  __ASM volatile ("cpsid i");
   82034:	b672      	cpsid	i
   82036:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8203a:	f04f 0900 	mov.w	r9, #0
   8203e:	482b      	ldr	r0, [pc, #172]	; (820ec <udd_ep_trans_done+0x1b0>)
   82040:	f880 9000 	strb.w	r9, [r0]
		if (!(udd_endpoint_dma_get_status(ep)
   82044:	f8d1 900c 	ldr.w	r9, [r1, #12]
   82048:	f019 0f10 	tst.w	r9, #16
   8204c:	d020      	beq.n	82090 <udd_ep_trans_done+0x154>
	if (cpu_irq_is_enabled_flags(flags))
   8204e:	f1b8 0f00 	cmp.w	r8, #0
   82052:	d104      	bne.n	8205e <udd_ep_trans_done+0x122>
		cpu_irq_enable();
   82054:	2101      	movs	r1, #1
   82056:	7001      	strb	r1, [r0, #0]
   82058:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8205c:	b662      	cpsie	i
		ptr_job->buf_size = ptr_job->buf_cnt;
   8205e:	18f1      	adds	r1, r6, r3
   82060:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   82064:	68c8      	ldr	r0, [r1, #12]
   82066:	6088      	str	r0, [r1, #8]
   82068:	e7b3      	b.n	81fd2 <udd_ep_trans_done+0x96>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   8206a:	f8de 1100 	ldr.w	r1, [lr, #256]	; 0x100
   8206e:	f3c1 1101 	ubfx	r1, r1, #4, #2
   82072:	2901      	cmp	r1, #1
   82074:	d025      	beq.n	820c2 <udd_ep_trans_done+0x186>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   82076:	f047 0735 	orr.w	r7, r7, #53	; 0x35
   8207a:	e7ce      	b.n	8201a <udd_ep_trans_done+0xde>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   8207c:	f8d1 5100 	ldr.w	r5, [r1, #256]	; 0x100
   82080:	f3c5 1501 	ubfx	r5, r5, #4, #2
   82084:	2d01      	cmp	r5, #1
   82086:	d0c3      	beq.n	82010 <udd_ep_trans_done+0xd4>
   82088:	2735      	movs	r7, #53	; 0x35
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   8208a:	f44f 3580 	mov.w	r5, #65536	; 0x10000
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_TR_IT
   8208e:	e7c4      	b.n	8201a <udd_ep_trans_done+0xde>
			udd_enable_endpoint_dma_interrupt(ep);
   82090:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   82094:	608f      	str	r7, [r1, #8]
			udd_enable_endpoint_dma_interrupt(ep);
   82096:	fa02 f303 	lsl.w	r3, r2, r3
			ptr_job->buf_cnt += next_trans;
   8209a:	f8de 200c 	ldr.w	r2, [lr, #12]
			ptr_job->buf_load = next_trans;
   8209e:	f8ce 5010 	str.w	r5, [lr, #16]
			ptr_job->buf_cnt += next_trans;
   820a2:	4415      	add	r5, r2
			udd_enable_endpoint_dma_interrupt(ep);
   820a4:	4a0e      	ldr	r2, [pc, #56]	; (820e0 <udd_ep_trans_done+0x1a4>)
			ptr_job->buf_cnt += next_trans;
   820a6:	f8ce 500c 	str.w	r5, [lr, #12]
			udd_enable_endpoint_dma_interrupt(ep);
   820aa:	6911      	ldr	r1, [r2, #16]
   820ac:	430b      	orrs	r3, r1
   820ae:	6113      	str	r3, [r2, #16]
	if (cpu_irq_is_enabled_flags(flags))
   820b0:	f1b8 0f00 	cmp.w	r8, #0
   820b4:	d189      	bne.n	81fca <udd_ep_trans_done+0x8e>
		cpu_irq_enable();
   820b6:	2301      	movs	r3, #1
   820b8:	7003      	strb	r3, [r0, #0]
   820ba:	f3bf 8f5f 	dmb	sy
   820be:	b662      	cpsie	i
}
   820c0:	e783      	b.n	81fca <udd_ep_trans_done+0x8e>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   820c2:	f8de 1100 	ldr.w	r1, [lr, #256]	; 0x100
   820c6:	f001 0e07 	and.w	lr, r1, #7
   820ca:	2108      	movs	r1, #8
   820cc:	fa01 f10e 	lsl.w	r1, r1, lr
   820d0:	42a9      	cmp	r1, r5
   820d2:	d2d0      	bcs.n	82076 <udd_ep_trans_done+0x13a>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   820d4:	f047 0721 	orr.w	r7, r7, #33	; 0x21
   820d8:	e79f      	b.n	8201a <udd_ep_trans_done+0xde>
   820da:	bf00      	nop
   820dc:	2000367c 	.word	0x2000367c
   820e0:	400a4000 	.word	0x400a4000
   820e4:	00081efd 	.word	0x00081efd
   820e8:	400a4300 	.word	0x400a4300
   820ec:	20000304 	.word	0x20000304

000820f0 <udd_ctrl_in_sent>:
{
   820f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   820f4:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   820f8:	b672      	cpsid	i
   820fa:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   820fe:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   82100:	f44f 6180 	mov.w	r1, #1024	; 0x400
   82104:	4d59      	ldr	r5, [pc, #356]	; (8226c <udd_ctrl_in_sent+0x17c>)
   82106:	4a5a      	ldr	r2, [pc, #360]	; (82270 <udd_ctrl_in_sent+0x180>)
   82108:	7028      	strb	r0, [r5, #0]
   8210a:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   8210e:	b923      	cbnz	r3, 8211a <udd_ctrl_in_sent+0x2a>
		cpu_irq_enable();
   82110:	2301      	movs	r3, #1
   82112:	702b      	strb	r3, [r5, #0]
   82114:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82118:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   8211a:	f8df 8158 	ldr.w	r8, [pc, #344]	; 82274 <udd_ctrl_in_sent+0x184>
   8211e:	f898 3000 	ldrb.w	r3, [r8]
   82122:	2b03      	cmp	r3, #3
   82124:	d063      	beq.n	821ee <udd_ctrl_in_sent+0xfe>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   82126:	4f54      	ldr	r7, [pc, #336]	; (82278 <udd_ctrl_in_sent+0x188>)
   82128:	4e54      	ldr	r6, [pc, #336]	; (8227c <udd_ctrl_in_sent+0x18c>)
   8212a:	883a      	ldrh	r2, [r7, #0]
   8212c:	89b4      	ldrh	r4, [r6, #12]
   8212e:	1aa4      	subs	r4, r4, r2
   82130:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   82132:	2c00      	cmp	r4, #0
   82134:	d038      	beq.n	821a8 <udd_ctrl_in_sent+0xb8>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   82136:	4613      	mov	r3, r2
   82138:	f8df 9144 	ldr.w	r9, [pc, #324]	; 82280 <udd_ctrl_in_sent+0x190>
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   8213c:	2c3f      	cmp	r4, #63	; 0x3f
		b_shortpacket = false;
   8213e:	bf86      	itte	hi
   82140:	2200      	movhi	r2, #0
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   82142:	2440      	movhi	r4, #64	; 0x40
		b_shortpacket = true;
   82144:	2201      	movls	r2, #1
   82146:	f889 2000 	strb.w	r2, [r9]
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   8214a:	68b2      	ldr	r2, [r6, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8214c:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   82150:	b672      	cpsid	i
   82152:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82156:	2100      	movs	r1, #0
   82158:	7029      	strb	r1, [r5, #0]
	if (Is_udd_out_received(0)) {
   8215a:	4945      	ldr	r1, [pc, #276]	; (82270 <udd_ctrl_in_sent+0x180>)
   8215c:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   82160:	0589      	lsls	r1, r1, #22
   82162:	d439      	bmi.n	821d8 <udd_ctrl_in_sent+0xe8>
	for (i = 0; i < nb_remain; i++) {
   82164:	b154      	cbz	r4, 8217c <udd_ctrl_in_sent+0x8c>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   82166:	441a      	add	r2, r3
	ptr_dest = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   82168:	4b46      	ldr	r3, [pc, #280]	; (82284 <udd_ctrl_in_sent+0x194>)
		*ptr_dest++ = *ptr_src++;
   8216a:	4618      	mov	r0, r3
   8216c:	3301      	adds	r3, #1
   8216e:	f812 cb01 	ldrb.w	ip, [r2], #1
	for (i = 0; i < nb_remain; i++) {
   82172:	b2d9      	uxtb	r1, r3
   82174:	42a1      	cmp	r1, r4
		*ptr_dest++ = *ptr_src++;
   82176:	f880 c000 	strb.w	ip, [r0]
	for (i = 0; i < nb_remain; i++) {
   8217a:	d3f6      	bcc.n	8216a <udd_ctrl_in_sent+0x7a>
	udd_ack_in_send(0);
   8217c:	f44f 6280 	mov.w	r2, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   82180:	f44f 6100 	mov.w	r1, #2048	; 0x800
	udd_ctrl_payload_buf_cnt += nb_remain;
   82184:	883b      	ldrh	r3, [r7, #0]
   82186:	441c      	add	r4, r3
	udd_ack_in_send(0);
   82188:	4b39      	ldr	r3, [pc, #228]	; (82270 <udd_ctrl_in_sent+0x180>)
	udd_ctrl_payload_buf_cnt += nb_remain;
   8218a:	803c      	strh	r4, [r7, #0]
	udd_ack_in_send(0);
   8218c:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82190:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   82194:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82198:	b926      	cbnz	r6, 821a4 <udd_ctrl_in_sent+0xb4>
		cpu_irq_enable();
   8219a:	2301      	movs	r3, #1
   8219c:	702b      	strb	r3, [r5, #0]
   8219e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   821a2:	b662      	cpsie	i
}
   821a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   821a8:	4937      	ldr	r1, [pc, #220]	; (82288 <udd_ctrl_in_sent+0x198>)
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   821aa:	88f0      	ldrh	r0, [r6, #6]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   821ac:	880b      	ldrh	r3, [r1, #0]
   821ae:	4413      	add	r3, r2
   821b0:	b29b      	uxth	r3, r3
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   821b2:	4298      	cmp	r0, r3
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   821b4:	800b      	strh	r3, [r1, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   821b6:	d040      	beq.n	8223a <udd_ctrl_in_sent+0x14a>
				|| b_shortpacket) {
   821b8:	f8df 90c4 	ldr.w	r9, [pc, #196]	; 82280 <udd_ctrl_in_sent+0x190>
   821bc:	f899 a000 	ldrb.w	sl, [r9]
   821c0:	f1ba 0f00 	cmp.w	sl, #0
   821c4:	d139      	bne.n	8223a <udd_ctrl_in_sent+0x14a>
		if ((!udd_g_ctrlreq.over_under_run)
   821c6:	6973      	ldr	r3, [r6, #20]
   821c8:	2b00      	cmp	r3, #0
   821ca:	d033      	beq.n	82234 <udd_ctrl_in_sent+0x144>
				|| (!udd_g_ctrlreq.over_under_run())) {
   821cc:	4798      	blx	r3
   821ce:	2800      	cmp	r0, #0
   821d0:	d147      	bne.n	82262 <udd_ctrl_in_sent+0x172>
		b_shortpacket = true;
   821d2:	2201      	movs	r2, #1
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   821d4:	883b      	ldrh	r3, [r7, #0]
   821d6:	e7b6      	b.n	82146 <udd_ctrl_in_sent+0x56>
	if (cpu_irq_is_enabled_flags(flags))
   821d8:	b926      	cbnz	r6, 821e4 <udd_ctrl_in_sent+0xf4>
		cpu_irq_enable();
   821da:	2301      	movs	r3, #1
   821dc:	702b      	strb	r3, [r5, #0]
   821de:	f3bf 8f5f 	dmb	sy
   821e2:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   821e4:	2304      	movs	r3, #4
   821e6:	f888 3000 	strb.w	r3, [r8]
}
   821ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	if (udd_g_ctrlreq.callback) {
   821ee:	4e23      	ldr	r6, [pc, #140]	; (8227c <udd_ctrl_in_sent+0x18c>)
   821f0:	6933      	ldr	r3, [r6, #16]
   821f2:	b103      	cbz	r3, 821f6 <udd_ctrl_in_sent+0x106>
		udd_g_ctrlreq.callback();
   821f4:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   821f6:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   821fa:	b672      	cpsid	i
   821fc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82200:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   82202:	f44f 6180 	mov.w	r1, #1024	; 0x400
   82206:	4a1a      	ldr	r2, [pc, #104]	; (82270 <udd_ctrl_in_sent+0x180>)
   82208:	7028      	strb	r0, [r5, #0]
   8220a:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   8220e:	b923      	cbnz	r3, 8221a <udd_ctrl_in_sent+0x12a>
		cpu_irq_enable();
   82210:	2301      	movs	r3, #1
   82212:	702b      	strb	r3, [r5, #0]
   82214:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82218:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   8221a:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   8221c:	f44f 7100 	mov.w	r1, #512	; 0x200
   82220:	4a13      	ldr	r2, [pc, #76]	; (82270 <udd_ctrl_in_sent+0x180>)
   82222:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   82226:	e9c6 3304 	strd	r3, r3, [r6, #16]
	udd_g_ctrlreq.payload_size = 0;
   8222a:	81b3      	strh	r3, [r6, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8222c:	f888 3000 	strb.w	r3, [r8]
}
   82230:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   82234:	4613      	mov	r3, r2
		b_shortpacket = true;
   82236:	2201      	movs	r2, #1
   82238:	e785      	b.n	82146 <udd_ctrl_in_sent+0x56>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   8223a:	2304      	movs	r3, #4
   8223c:	f888 3000 	strb.w	r3, [r8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82240:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   82244:	b672      	cpsid	i
   82246:	f3bf 8f5f 	dmb	sy
	udd_ack_nak_in(0);
   8224a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	cpu_irq_disable();
   8224e:	2000      	movs	r0, #0
   82250:	4b07      	ldr	r3, [pc, #28]	; (82270 <udd_ctrl_in_sent+0x180>)
   82252:	7028      	strb	r0, [r5, #0]
   82254:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_in_interrupt(0);
   82258:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   8225c:	2900      	cmp	r1, #0
   8225e:	d1a1      	bne.n	821a4 <udd_ctrl_in_sent+0xb4>
   82260:	e79b      	b.n	8219a <udd_ctrl_in_sent+0xaa>
			udd_ctrl_payload_buf_cnt = 0;
   82262:	803c      	strh	r4, [r7, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   82264:	4653      	mov	r3, sl
   82266:	89b4      	ldrh	r4, [r6, #12]
   82268:	e768      	b.n	8213c <udd_ctrl_in_sent+0x4c>
   8226a:	bf00      	nop
   8226c:	20000304 	.word	0x20000304
   82270:	400a4000 	.word	0x400a4000
   82274:	20003678 	.word	0x20003678
   82278:	20003674 	.word	0x20003674
   8227c:	200036ac 	.word	0x200036ac
   82280:	20003671 	.word	0x20003671
   82284:	20180000 	.word	0x20180000
   82288:	20003676 	.word	0x20003676

0008228c <UDPHS_Handler>:
{
   8228c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_enable_periph_ck();
   82290:	4b9b      	ldr	r3, [pc, #620]	; (82500 <UDPHS_Handler+0x274>)
   82292:	201d      	movs	r0, #29
   82294:	4798      	blx	r3
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   82296:	4b9b      	ldr	r3, [pc, #620]	; (82504 <UDPHS_Handler+0x278>)
   82298:	4798      	blx	r3
   8229a:	b928      	cbnz	r0, 822a8 <UDPHS_Handler+0x1c>
   8229c:	4b9a      	ldr	r3, [pc, #616]	; (82508 <UDPHS_Handler+0x27c>)
   8229e:	695b      	ldr	r3, [r3, #20]
   822a0:	f013 0302 	ands.w	r3, r3, #2
   822a4:	f000 8096 	beq.w	823d4 <UDPHS_Handler+0x148>
	if (Is_udd_sof()) {
   822a8:	4b97      	ldr	r3, [pc, #604]	; (82508 <UDPHS_Handler+0x27c>)
   822aa:	695a      	ldr	r2, [r3, #20]
   822ac:	0712      	lsls	r2, r2, #28
   822ae:	f100 8082 	bmi.w	823b6 <UDPHS_Handler+0x12a>
	if (Is_udd_msof()) {
   822b2:	695a      	ldr	r2, [r3, #20]
   822b4:	0756      	lsls	r6, r2, #29
   822b6:	f100 8087 	bmi.w	823c8 <UDPHS_Handler+0x13c>
	uint32_t status = udd_get_endpoint_status(0);
   822ba:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
	if (!Is_udd_endpoint_interrupt(0)) {
   822be:	6959      	ldr	r1, [r3, #20]
   822c0:	05cd      	lsls	r5, r1, #23
   822c2:	d521      	bpl.n	82308 <UDPHS_Handler+0x7c>
	udd_disable_nak_in_interrupt(0);
   822c4:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	udd_disable_nak_out_interrupt(0);
   822c8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
	if (Is_udd_endpoint_status_setup_received(status)) {
   822cc:	04d4      	lsls	r4, r2, #19
	udd_disable_nak_in_interrupt(0);
   822ce:	f8c3 0108 	str.w	r0, [r3, #264]	; 0x108
	udd_disable_nak_out_interrupt(0);
   822d2:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
	if (Is_udd_endpoint_status_setup_received(status)) {
   822d6:	f100 80ac 	bmi.w	82432 <UDPHS_Handler+0x1a6>
	if (Is_udd_endpoint_status_in_sent(status)
   822da:	0550      	lsls	r0, r2, #21
   822dc:	d504      	bpl.n	822e8 <UDPHS_Handler+0x5c>
			&& Is_udd_in_send_interrupt_enabled(0)) {
   822de:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   822e2:	0559      	lsls	r1, r3, #21
   822e4:	f100 824d 	bmi.w	82782 <UDPHS_Handler+0x4f6>
	if (Is_udd_endpoint_status_out_received(status)) {
   822e8:	0593      	lsls	r3, r2, #22
   822ea:	f100 8147 	bmi.w	8257c <UDPHS_Handler+0x2f0>
	if (Is_udd_endpoint_status_stall(status)) {
   822ee:	0497      	lsls	r7, r2, #18
   822f0:	d504      	bpl.n	822fc <UDPHS_Handler+0x70>
		udd_ack_stall(0);
   822f2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   822f6:	4b84      	ldr	r3, [pc, #528]	; (82508 <UDPHS_Handler+0x27c>)
   822f8:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Is_udd_endpoint_status_nak_out(status)) {
   822fc:	0416      	lsls	r6, r2, #16
   822fe:	f100 816d 	bmi.w	825dc <UDPHS_Handler+0x350>
	if (Is_udd_endpoint_status_nak_in(status)) {
   82302:	0454      	lsls	r4, r2, #17
   82304:	f100 80cb 	bmi.w	8249e <UDPHS_Handler+0x212>
	uint8_t *ptr_src = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   82308:	2301      	movs	r3, #1
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   8230a:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
			}
			udd_ep_trans_done(ep);
			return true;
		}
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   8230e:	f44f 7680 	mov.w	r6, #256	; 0x100
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   82312:	4a7d      	ldr	r2, [pc, #500]	; (82508 <UDPHS_Handler+0x27c>)
   82314:	6910      	ldr	r0, [r2, #16]
   82316:	f103 3eff 	add.w	lr, r3, #4294967295
   8231a:	fa05 f10e 	lsl.w	r1, r5, lr
   8231e:	4208      	tst	r0, r1
   82320:	b2df      	uxtb	r7, r3
   82322:	d003      	beq.n	8232c <UDPHS_Handler+0xa0>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   82324:	6950      	ldr	r0, [r2, #20]
   82326:	4201      	tst	r1, r0
   82328:	f040 80ce 	bne.w	824c8 <UDPHS_Handler+0x23c>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   8232c:	6911      	ldr	r1, [r2, #16]
   8232e:	fa06 f003 	lsl.w	r0, r6, r3
   82332:	4201      	tst	r1, r0
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   82334:	eb02 1443 	add.w	r4, r2, r3, lsl #5
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   82338:	d017      	beq.n	8236a <UDPHS_Handler+0xde>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   8233a:	f8d4 110c 	ldr.w	r1, [r4, #268]	; 0x10c
				// One bank is free then send a ZLP
				udd_raise_tx_pkt_ready(ep);
				udd_ep_finish_job(ptr_job, false, ep);
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   8233e:	46a4      	mov	ip, r4
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   82340:	f411 6f00 	tst.w	r1, #2048	; 0x800
   82344:	d005      	beq.n	82352 <UDPHS_Handler+0xc6>
					&& !Is_udd_tx_pkt_ready(ep)) {
   82346:	f8d4 111c 	ldr.w	r1, [r4, #284]	; 0x11c
   8234a:	f411 6100 	ands.w	r1, r1, #2048	; 0x800
   8234e:	f000 8335 	beq.w	829bc <UDPHS_Handler+0x730>
			if (Is_udd_bank_interrupt_enabled(ep)
   82352:	f8dc 110c 	ldr.w	r1, [ip, #268]	; 0x10c
   82356:	034f      	lsls	r7, r1, #13
   82358:	d507      	bpl.n	8236a <UDPHS_Handler+0xde>
					&& (0 == udd_nb_busy_bank(ep))) {
   8235a:	f8dc 111c 	ldr.w	r1, [ip, #284]	; 0x11c
   8235e:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   82362:	f3c1 4481 	ubfx	r4, r1, #18, #2
   82366:	f000 80e9 	beq.w	8253c <UDPHS_Handler+0x2b0>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   8236a:	2b02      	cmp	r3, #2
   8236c:	d139      	bne.n	823e2 <UDPHS_Handler+0x156>
	if (Is_udd_reset()) {
   8236e:	4966      	ldr	r1, [pc, #408]	; (82508 <UDPHS_Handler+0x27c>)
   82370:	694c      	ldr	r4, [r1, #20]
   82372:	f014 0410 	ands.w	r4, r4, #16
   82376:	f040 817e 	bne.w	82676 <UDPHS_Handler+0x3ea>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   8237a:	690a      	ldr	r2, [r1, #16]
   8237c:	0790      	lsls	r0, r2, #30
   8237e:	d535      	bpl.n	823ec <UDPHS_Handler+0x160>
   82380:	694a      	ldr	r2, [r1, #20]
   82382:	0792      	lsls	r2, r2, #30
   82384:	d532      	bpl.n	823ec <UDPHS_Handler+0x160>
		udd_ack_wake_up();
   82386:	2220      	movs	r2, #32
   82388:	618a      	str	r2, [r1, #24]
		udd_disable_suspend_interrupt();
   8238a:	690a      	ldr	r2, [r1, #16]
		udd_disable_periph_ck();
   8238c:	201d      	movs	r0, #29
		udd_disable_suspend_interrupt();
   8238e:	f022 0202 	bic.w	r2, r2, #2
   82392:	610a      	str	r2, [r1, #16]
		udd_enable_wake_up_interrupt();
   82394:	690a      	ldr	r2, [r1, #16]
		udd_disable_periph_ck();
   82396:	4d5d      	ldr	r5, [pc, #372]	; (8250c <UDPHS_Handler+0x280>)
		udd_enable_wake_up_interrupt();
   82398:	f042 0220 	orr.w	r2, r2, #32
   8239c:	610a      	str	r2, [r1, #16]
		udd_ack_suspend();
   8239e:	618b      	str	r3, [r1, #24]
		udd_disable_periph_ck();
   823a0:	47a8      	blx	r5
		UDC_SUSPEND_EVENT();
   823a2:	4b5b      	ldr	r3, [pc, #364]	; (82510 <UDPHS_Handler+0x284>)
   823a4:	4798      	blx	r3
	if (!b_idle && udd_b_idle) {
   823a6:	4a5b      	ldr	r2, [pc, #364]	; (82514 <UDPHS_Handler+0x288>)
   823a8:	7813      	ldrb	r3, [r2, #0]
   823aa:	2b00      	cmp	r3, #0
   823ac:	f040 82bf 	bne.w	8292e <UDPHS_Handler+0x6a2>
	udd_b_idle = b_idle;
   823b0:	2300      	movs	r3, #0
   823b2:	7013      	strb	r3, [r2, #0]
		goto udd_interrupt_end;
   823b4:	e013      	b.n	823de <UDPHS_Handler+0x152>
		udd_ack_sof();
   823b6:	2208      	movs	r2, #8
   823b8:	619a      	str	r2, [r3, #24]
		if (Is_udd_full_speed_mode()) {
   823ba:	695b      	ldr	r3, [r3, #20]
   823bc:	07df      	lsls	r7, r3, #31
   823be:	d512      	bpl.n	823e6 <UDPHS_Handler+0x15a>
}
   823c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_SOF_EVENT();
   823c4:	4b54      	ldr	r3, [pc, #336]	; (82518 <UDPHS_Handler+0x28c>)
   823c6:	4718      	bx	r3
		udd_ack_msof();
   823c8:	2104      	movs	r1, #4
   823ca:	6199      	str	r1, [r3, #24]
		udc_sof_notify();
   823cc:	4a53      	ldr	r2, [pc, #332]	; (8251c <UDPHS_Handler+0x290>)
}
   823ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udc_sof_notify();
   823d2:	4710      	bx	r2
   823d4:	b672      	cpsid	i
   823d6:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   823da:	4a51      	ldr	r2, [pc, #324]	; (82520 <UDPHS_Handler+0x294>)
   823dc:	7013      	strb	r3, [r2, #0]
}
   823de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   823e2:	2302      	movs	r3, #2
   823e4:	e796      	b.n	82314 <UDPHS_Handler+0x88>
			udc_sof_notify();
   823e6:	4b4d      	ldr	r3, [pc, #308]	; (8251c <UDPHS_Handler+0x290>)
   823e8:	4798      	blx	r3
   823ea:	e7e9      	b.n	823c0 <UDPHS_Handler+0x134>
	if (Is_udd_wake_up()) {
   823ec:	4b46      	ldr	r3, [pc, #280]	; (82508 <UDPHS_Handler+0x27c>)
   823ee:	695b      	ldr	r3, [r3, #20]
   823f0:	069b      	lsls	r3, r3, #26
   823f2:	d5f4      	bpl.n	823de <UDPHS_Handler+0x152>
	if (b_idle && !udd_b_idle) {
   823f4:	4a47      	ldr	r2, [pc, #284]	; (82514 <UDPHS_Handler+0x288>)
   823f6:	7813      	ldrb	r3, [r2, #0]
   823f8:	2b00      	cmp	r3, #0
   823fa:	f000 8279 	beq.w	828f0 <UDPHS_Handler+0x664>
		udd_ack_suspend();
   823fe:	2402      	movs	r4, #2
	udd_b_idle = b_idle;
   82400:	2501      	movs	r5, #1
		udd_ack_wake_up();
   82402:	2020      	movs	r0, #32
		udd_ack_suspend();
   82404:	4b40      	ldr	r3, [pc, #256]	; (82508 <UDPHS_Handler+0x27c>)
	udd_b_idle = b_idle;
   82406:	7015      	strb	r5, [r2, #0]
		udd_ack_suspend();
   82408:	619c      	str	r4, [r3, #24]
		udd_ack_wake_up();
   8240a:	6198      	str	r0, [r3, #24]
		udd_disable_wake_up_interrupt();
   8240c:	691a      	ldr	r2, [r3, #16]
		UDC_RESUME_EVENT();
   8240e:	4945      	ldr	r1, [pc, #276]	; (82524 <UDPHS_Handler+0x298>)
		udd_disable_wake_up_interrupt();
   82410:	f022 0220 	bic.w	r2, r2, #32
   82414:	611a      	str	r2, [r3, #16]
		udd_enable_suspend_interrupt();
   82416:	691a      	ldr	r2, [r3, #16]
   82418:	4322      	orrs	r2, r4
   8241a:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
   8241c:	691a      	ldr	r2, [r3, #16]
   8241e:	f042 0208 	orr.w	r2, r2, #8
   82422:	611a      	str	r2, [r3, #16]
		udd_enable_msof_interrupt();
   82424:	691a      	ldr	r2, [r3, #16]
   82426:	f042 0204 	orr.w	r2, r2, #4
   8242a:	611a      	str	r2, [r3, #16]
}
   8242c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_RESUME_EVENT();
   82430:	4708      	bx	r1
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   82432:	4d3d      	ldr	r5, [pc, #244]	; (82528 <UDPHS_Handler+0x29c>)
   82434:	782b      	ldrb	r3, [r5, #0]
   82436:	b303      	cbz	r3, 8247a <UDPHS_Handler+0x1ee>
	if (udd_g_ctrlreq.callback) {
   82438:	4c3c      	ldr	r4, [pc, #240]	; (8252c <UDPHS_Handler+0x2a0>)
   8243a:	6923      	ldr	r3, [r4, #16]
   8243c:	b103      	cbz	r3, 82440 <UDPHS_Handler+0x1b4>
		udd_g_ctrlreq.callback();
   8243e:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82440:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   82444:	b672      	cpsid	i
   82446:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8244a:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   8244c:	f44f 6080 	mov.w	r0, #1024	; 0x400
   82450:	4b33      	ldr	r3, [pc, #204]	; (82520 <UDPHS_Handler+0x294>)
   82452:	7019      	strb	r1, [r3, #0]
   82454:	492c      	ldr	r1, [pc, #176]	; (82508 <UDPHS_Handler+0x27c>)
   82456:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   8245a:	b922      	cbnz	r2, 82466 <UDPHS_Handler+0x1da>
		cpu_irq_enable();
   8245c:	2201      	movs	r2, #1
   8245e:	701a      	strb	r2, [r3, #0]
   82460:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82464:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   82466:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   82468:	f44f 7100 	mov.w	r1, #512	; 0x200
   8246c:	4a26      	ldr	r2, [pc, #152]	; (82508 <UDPHS_Handler+0x27c>)
   8246e:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   82472:	e9c4 3304 	strd	r3, r3, [r4, #16]
	udd_g_ctrlreq.payload_size = 0;
   82476:	81a3      	strh	r3, [r4, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   82478:	702b      	strb	r3, [r5, #0]
	if (8 != udd_byte_count(0)) {
   8247a:	4a23      	ldr	r2, [pc, #140]	; (82508 <UDPHS_Handler+0x27c>)
   8247c:	f8d2 311c 	ldr.w	r3, [r2, #284]	; 0x11c
   82480:	f3c3 530a 	ubfx	r3, r3, #20, #11
   82484:	2b08      	cmp	r3, #8
   82486:	f000 80bc 	beq.w	82602 <UDPHS_Handler+0x376>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   8248a:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   8248c:	2120      	movs	r1, #32
		udd_ack_setup_received(0);
   8248e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   82492:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   82494:	f8c2 1114 	str.w	r1, [r2, #276]	; 0x114
		udd_ack_setup_received(0);
   82498:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
		return; // Error data number doesn't correspond to SETUP packet
   8249c:	e79f      	b.n	823de <UDPHS_Handler+0x152>
		udd_ack_nak_in(0);
   8249e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   824a2:	4a19      	ldr	r2, [pc, #100]	; (82508 <UDPHS_Handler+0x27c>)
   824a4:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	if (Is_udd_out_received(0))
   824a8:	f8d2 311c 	ldr.w	r3, [r2, #284]	; 0x11c
   824ac:	f413 7300 	ands.w	r3, r3, #512	; 0x200
   824b0:	d195      	bne.n	823de <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   824b2:	481d      	ldr	r0, [pc, #116]	; (82528 <UDPHS_Handler+0x29c>)
   824b4:	7801      	ldrb	r1, [r0, #0]
   824b6:	2901      	cmp	r1, #1
   824b8:	f000 824d 	beq.w	82956 <UDPHS_Handler+0x6ca>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   824bc:	2904      	cmp	r1, #4
   824be:	d18e      	bne.n	823de <UDPHS_Handler+0x152>
		udd_enable_stall_handshake(0);
   824c0:	2320      	movs	r3, #32
   824c2:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
   824c6:	e78a      	b.n	823de <UDPHS_Handler+0x152>
			if (udd_endpoint_dma_get_status(ep)
   824c8:	4819      	ldr	r0, [pc, #100]	; (82530 <UDPHS_Handler+0x2a4>)
   824ca:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   824ce:	68d8      	ldr	r0, [r3, #12]
   824d0:	07c0      	lsls	r0, r0, #31
   824d2:	d484      	bmi.n	823de <UDPHS_Handler+0x152>
			udd_disable_endpoint_dma_interrupt(ep);
   824d4:	6910      	ldr	r0, [r2, #16]
   824d6:	ea20 0101 	bic.w	r1, r0, r1
   824da:	6111      	str	r1, [r2, #16]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   824dc:	68db      	ldr	r3, [r3, #12]
			if (nb_remaining) {
   824de:	0c1b      	lsrs	r3, r3, #16
   824e0:	d008      	beq.n	824f4 <UDPHS_Handler+0x268>
				ptr_job->buf_cnt -= nb_remaining;
   824e2:	4a14      	ldr	r2, [pc, #80]	; (82534 <UDPHS_Handler+0x2a8>)
   824e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
   824e8:	eb02 02ce 	add.w	r2, r2, lr, lsl #3
   824ec:	68d1      	ldr	r1, [r2, #12]
   824ee:	1acb      	subs	r3, r1, r3
				ptr_job->buf_size = ptr_job->buf_cnt;
   824f0:	e9c2 3302 	strd	r3, r3, [r2, #8]
			udd_ep_trans_done(ep);
   824f4:	4638      	mov	r0, r7
}
   824f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			udd_ep_trans_done(ep);
   824fa:	4b0f      	ldr	r3, [pc, #60]	; (82538 <UDPHS_Handler+0x2ac>)
   824fc:	4718      	bx	r3
   824fe:	bf00      	nop
   82500:	00081a6d 	.word	0x00081a6d
   82504:	00081b09 	.word	0x00081b09
   82508:	400a4000 	.word	0x400a4000
   8250c:	00081a91 	.word	0x00081a91
   82510:	0008091d 	.word	0x0008091d
   82514:	20003672 	.word	0x20003672
   82518:	0008092d 	.word	0x0008092d
   8251c:	00080d41 	.word	0x00080d41
   82520:	20000304 	.word	0x20000304
   82524:	00080925 	.word	0x00080925
   82528:	20003678 	.word	0x20003678
   8252c:	200036ac 	.word	0x200036ac
   82530:	400a4300 	.word	0x400a4300
   82534:	2000367c 	.word	0x2000367c
   82538:	00081f3d 	.word	0x00081f3d
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   8253c:	f44f 2380 	mov.w	r3, #262144	; 0x40000

				Assert(ptr_job->stall_requested);
				// A stall has been requested during background transfer
				ptr_job->stall_requested = false;
				udd_disable_endpoint_bank_autoswitch(ep);
				udd_enable_stall_handshake(ep);
   82540:	2520      	movs	r5, #32
				udd_reset_data_toggle(ep);
   82542:	2140      	movs	r1, #64	; 0x40
				udd_disable_bank_interrupt(ep);
   82544:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
				udd_disable_endpoint_interrupt(ep);
   82548:	6913      	ldr	r3, [r2, #16]
				ptr_job->stall_requested = false;
   8254a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
				udd_disable_endpoint_interrupt(ep);
   8254e:	ea23 0000 	bic.w	r0, r3, r0
				ptr_job->stall_requested = false;
   82552:	4bb3      	ldr	r3, [pc, #716]	; (82820 <UDPHS_Handler+0x594>)
				udd_disable_endpoint_interrupt(ep);
   82554:	6110      	str	r0, [r2, #16]
				ptr_job->stall_requested = false;
   82556:	eb03 0ece 	add.w	lr, r3, lr, lsl #3
   8255a:	f89e 3014 	ldrb.w	r3, [lr, #20]
   8255e:	f364 0382 	bfi	r3, r4, #2, #1
   82562:	f88e 3014 	strb.w	r3, [lr, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   82566:	f8dc 3108 	ldr.w	r3, [ip, #264]	; 0x108
   8256a:	f023 0302 	bic.w	r3, r3, #2
   8256e:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
				udd_enable_stall_handshake(ep);
   82572:	f8cc 5114 	str.w	r5, [ip, #276]	; 0x114
				udd_reset_data_toggle(ep);
   82576:	f8cc 1118 	str.w	r1, [ip, #280]	; 0x118
				//dbg_print("exHalt%x ", ep);
				return true;
   8257a:	e730      	b.n	823de <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   8257c:	4da9      	ldr	r5, [pc, #676]	; (82824 <UDPHS_Handler+0x598>)
   8257e:	782b      	ldrb	r3, [r5, #0]
   82580:	2b01      	cmp	r3, #1
   82582:	f000 8102 	beq.w	8278a <UDPHS_Handler+0x4fe>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   82586:	2b02      	cmp	r3, #2
   82588:	f000 8137 	beq.w	827fa <UDPHS_Handler+0x56e>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   8258c:	2b04      	cmp	r3, #4
   8258e:	f000 8134 	beq.w	827fa <UDPHS_Handler+0x56e>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   82592:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   82594:	2220      	movs	r2, #32
   82596:	4ba4      	ldr	r3, [pc, #656]	; (82828 <UDPHS_Handler+0x59c>)
   82598:	4ca4      	ldr	r4, [pc, #656]	; (8282c <UDPHS_Handler+0x5a0>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   8259a:	7029      	strb	r1, [r5, #0]
	udd_enable_stall_handshake(0);
   8259c:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   825a0:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   825a4:	b672      	cpsid	i
   825a6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   825aa:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   825ac:	f44f 6080 	mov.w	r0, #1024	; 0x400
   825b0:	4b9f      	ldr	r3, [pc, #636]	; (82830 <UDPHS_Handler+0x5a4>)
   825b2:	7019      	strb	r1, [r3, #0]
   825b4:	499c      	ldr	r1, [pc, #624]	; (82828 <UDPHS_Handler+0x59c>)
   825b6:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   825ba:	b922      	cbnz	r2, 825c6 <UDPHS_Handler+0x33a>
		cpu_irq_enable();
   825bc:	2201      	movs	r2, #1
   825be:	701a      	strb	r2, [r3, #0]
   825c0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   825c4:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   825c6:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   825c8:	f44f 7100 	mov.w	r1, #512	; 0x200
   825cc:	4a96      	ldr	r2, [pc, #600]	; (82828 <UDPHS_Handler+0x59c>)
   825ce:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.over_under_run = NULL;
   825d2:	e9c4 3304 	strd	r3, r3, [r4, #16]
	udd_g_ctrlreq.payload_size = 0;
   825d6:	81a3      	strh	r3, [r4, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   825d8:	702b      	strb	r3, [r5, #0]
   825da:	e700      	b.n	823de <UDPHS_Handler+0x152>
		udd_ack_nak_out(0);
   825dc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   825e0:	4b91      	ldr	r3, [pc, #580]	; (82828 <UDPHS_Handler+0x59c>)
   825e2:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	if (Is_udd_in_send(0))
   825e6:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
   825ea:	0555      	lsls	r5, r2, #21
   825ec:	f53f aef7 	bmi.w	823de <UDPHS_Handler+0x152>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   825f0:	4a8c      	ldr	r2, [pc, #560]	; (82824 <UDPHS_Handler+0x598>)
   825f2:	7812      	ldrb	r2, [r2, #0]
   825f4:	2a03      	cmp	r2, #3
   825f6:	f47f aef2 	bne.w	823de <UDPHS_Handler+0x152>
		udd_enable_stall_handshake(0);
   825fa:	2220      	movs	r2, #32
   825fc:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
   82600:	e6ed      	b.n	823de <UDPHS_Handler+0x152>
   82602:	4a8c      	ldr	r2, [pc, #560]	; (82834 <UDPHS_Handler+0x5a8>)
	uint8_t *ptr = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   82604:	4b8c      	ldr	r3, [pc, #560]	; (82838 <UDPHS_Handler+0x5ac>)
	for (i = 0; i < 8; i++) {
   82606:	488d      	ldr	r0, [pc, #564]	; (8283c <UDPHS_Handler+0x5b0>)
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   82608:	4619      	mov	r1, r3
   8260a:	3301      	adds	r3, #1
   8260c:	7809      	ldrb	r1, [r1, #0]
	for (i = 0; i < 8; i++) {
   8260e:	4283      	cmp	r3, r0
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   82610:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < 8; i++) {
   82614:	d1f8      	bne.n	82608 <UDPHS_Handler+0x37c>
	if (udc_process_setup() == false) {
   82616:	4b8a      	ldr	r3, [pc, #552]	; (82840 <UDPHS_Handler+0x5b4>)
   82618:	4798      	blx	r3
   8261a:	2800      	cmp	r0, #0
   8261c:	f000 80f4 	beq.w	82808 <UDPHS_Handler+0x57c>
	udd_ack_setup_received(0);
   82620:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   82624:	4b80      	ldr	r3, [pc, #512]	; (82828 <UDPHS_Handler+0x59c>)
	if (Udd_setup_is_in()) {
   82626:	4a81      	ldr	r2, [pc, #516]	; (8282c <UDPHS_Handler+0x5a0>)
	udd_ack_setup_received(0);
   82628:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Udd_setup_is_in()) {
   8262c:	f992 1000 	ldrsb.w	r1, [r2]
   82630:	2900      	cmp	r1, #0
   82632:	f2c0 8171 	blt.w	82918 <UDPHS_Handler+0x68c>
		if (0 == udd_g_ctrlreq.req.wLength) {
   82636:	88d2      	ldrh	r2, [r2, #6]
   82638:	2a00      	cmp	r2, #0
   8263a:	f000 81ad 	beq.w	82998 <UDPHS_Handler+0x70c>
		udd_ctrl_prev_payload_buf_cnt = 0;
   8263e:	2200      	movs	r2, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   82640:	2401      	movs	r4, #1
		udd_ack_nak_in(0);
   82642:	f44f 4180 	mov.w	r1, #16384	; 0x4000
		udd_ctrl_prev_payload_buf_cnt = 0;
   82646:	487f      	ldr	r0, [pc, #508]	; (82844 <UDPHS_Handler+0x5b8>)
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   82648:	702c      	strb	r4, [r5, #0]
		udd_ctrl_prev_payload_buf_cnt = 0;
   8264a:	8002      	strh	r2, [r0, #0]
		udd_ctrl_payload_buf_cnt = 0;
   8264c:	487e      	ldr	r0, [pc, #504]	; (82848 <UDPHS_Handler+0x5bc>)
   8264e:	8002      	strh	r2, [r0, #0]
		udd_ack_nak_in(0);
   82650:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82654:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   82658:	b672      	cpsid	i
   8265a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8265e:	4874      	ldr	r0, [pc, #464]	; (82830 <UDPHS_Handler+0x5a4>)
   82660:	7002      	strb	r2, [r0, #0]
		udd_enable_nak_in_interrupt(0);
   82662:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82666:	2d00      	cmp	r5, #0
   82668:	f47f aeb9 	bne.w	823de <UDPHS_Handler+0x152>
		cpu_irq_enable();
   8266c:	7004      	strb	r4, [r0, #0]
   8266e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82672:	b662      	cpsie	i
   82674:	e6b3      	b.n	823de <UDPHS_Handler+0x152>
		udd_ack_reset();
   82676:	2210      	movs	r2, #16
	if (ptr_job->busy == false) {
   82678:	4c69      	ldr	r4, [pc, #420]	; (82820 <UDPHS_Handler+0x594>)
   8267a:	7d23      	ldrb	r3, [r4, #20]
		udd_ack_reset();
   8267c:	618a      	str	r2, [r1, #24]
	if (ptr_job->busy == false) {
   8267e:	f013 0201 	ands.w	r2, r3, #1
   82682:	d00d      	beq.n	826a0 <UDPHS_Handler+0x414>
	if (NULL == ptr_job->call_trans) {
   82684:	6825      	ldr	r5, [r4, #0]
	ptr_job->busy = false;
   82686:	f36f 0300 	bfc	r3, #0, #1
   8268a:	7523      	strb	r3, [r4, #20]
	if (NULL == ptr_job->call_trans) {
   8268c:	b145      	cbz	r5, 826a0 <UDPHS_Handler+0x414>
	if (Is_udd_endpoint_in(ep_num)) {
   8268e:	f8d1 3120 	ldr.w	r3, [r1, #288]	; 0x120
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82692:	2001      	movs	r0, #1
		ep_num |= USB_EP_DIR_IN;
   82694:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82698:	bf18      	it	ne
   8269a:	2281      	movne	r2, #129	; 0x81
   8269c:	68a1      	ldr	r1, [r4, #8]
   8269e:	47a8      	blx	r5
	if (ptr_job->busy == false) {
   826a0:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
   826a4:	07dd      	lsls	r5, r3, #31
   826a6:	d510      	bpl.n	826ca <UDPHS_Handler+0x43e>
	if (NULL == ptr_job->call_trans) {
   826a8:	69a5      	ldr	r5, [r4, #24]
	ptr_job->busy = false;
   826aa:	f36f 0300 	bfc	r3, #0, #1
   826ae:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
	if (NULL == ptr_job->call_trans) {
   826b2:	b155      	cbz	r5, 826ca <UDPHS_Handler+0x43e>
	if (Is_udd_endpoint_in(ep_num)) {
   826b4:	4b5c      	ldr	r3, [pc, #368]	; (82828 <UDPHS_Handler+0x59c>)
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826b6:	2001      	movs	r0, #1
	if (Is_udd_endpoint_in(ep_num)) {
   826b8:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826bc:	6a21      	ldr	r1, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   826be:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826c2:	bf14      	ite	ne
   826c4:	2282      	movne	r2, #130	; 0x82
   826c6:	2202      	moveq	r2, #2
   826c8:	47a8      	blx	r5
		udc_reset();
   826ca:	4b60      	ldr	r3, [pc, #384]	; (8284c <UDPHS_Handler+0x5c0>)
   826cc:	4798      	blx	r3
	udd_enable_endpoint(0);
   826ce:	2001      	movs	r0, #1
	udd_configure_address(0);
   826d0:	4b55      	ldr	r3, [pc, #340]	; (82828 <UDPHS_Handler+0x59c>)
   826d2:	681a      	ldr	r2, [r3, #0]
   826d4:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   826d8:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   826da:	681a      	ldr	r2, [r3, #0]
   826dc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   826e0:	601a      	str	r2, [r3, #0]
	udd_configure_endpoint(0,
   826e2:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   826e6:	f422 727f 	bic.w	r2, r2, #1020	; 0x3fc
   826ea:	f022 0203 	bic.w	r2, r2, #3
   826ee:	f042 0243 	orr.w	r2, r2, #67	; 0x43
   826f2:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	udd_enable_endpoint(0);
   826f6:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   826fa:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   826fe:	b672      	cpsid	i
   82700:	f3bf 8f5f 	dmb	sy
	udd_enable_setup_received_interrupt(0);
   82704:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	cpu_irq_disable();
   82708:	2500      	movs	r5, #0
   8270a:	4949      	ldr	r1, [pc, #292]	; (82830 <UDPHS_Handler+0x5a4>)
   8270c:	700d      	strb	r5, [r1, #0]
   8270e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_out_received_interrupt(0);
   82712:	f44f 7200 	mov.w	r2, #512	; 0x200
   82716:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_endpoint_interrupt(0);
   8271a:	691a      	ldr	r2, [r3, #16]
   8271c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   82720:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
   82722:	b91c      	cbnz	r4, 8272c <UDPHS_Handler+0x4a0>
		cpu_irq_enable();
   82724:	7008      	strb	r0, [r1, #0]
   82726:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8272a:	b662      	cpsie	i
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8272c:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   82730:	b672      	cpsid	i
   82732:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82736:	2400      	movs	r4, #0
	udd_disable_in_send_interrupt(0);
   82738:	f44f 6080 	mov.w	r0, #1024	; 0x400
   8273c:	4a3a      	ldr	r2, [pc, #232]	; (82828 <UDPHS_Handler+0x59c>)
   8273e:	700c      	strb	r4, [r1, #0]
   82740:	f8c2 0108 	str.w	r0, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   82744:	b923      	cbnz	r3, 82750 <UDPHS_Handler+0x4c4>
		cpu_irq_enable();
   82746:	2301      	movs	r3, #1
   82748:	700b      	strb	r3, [r1, #0]
   8274a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8274e:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   82750:	2200      	movs	r2, #0
	udd_ack_out_received(0);
   82752:	f44f 7400 	mov.w	r4, #512	; 0x200
   82756:	4b34      	ldr	r3, [pc, #208]	; (82828 <UDPHS_Handler+0x59c>)
	udd_g_ctrlreq.callback = NULL;
   82758:	4834      	ldr	r0, [pc, #208]	; (8282c <UDPHS_Handler+0x5a0>)
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8275a:	4932      	ldr	r1, [pc, #200]	; (82824 <UDPHS_Handler+0x598>)
	udd_g_ctrlreq.callback = NULL;
   8275c:	6102      	str	r2, [r0, #16]
	udd_ack_out_received(0);
   8275e:	f8c3 4118 	str.w	r4, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   82762:	700a      	strb	r2, [r1, #0]
		udd_enable_sof_interrupt();
   82764:	6919      	ldr	r1, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   82766:	6142      	str	r2, [r0, #20]
		udd_enable_sof_interrupt();
   82768:	f041 0108 	orr.w	r1, r1, #8
   8276c:	6119      	str	r1, [r3, #16]
		udd_enable_msof_interrupt();
   8276e:	6919      	ldr	r1, [r3, #16]
	udd_g_ctrlreq.payload_size = 0;
   82770:	8182      	strh	r2, [r0, #12]
		udd_enable_msof_interrupt();
   82772:	f041 0104 	orr.w	r1, r1, #4
   82776:	6119      	str	r1, [r3, #16]
		udd_enable_suspend_interrupt();
   82778:	691a      	ldr	r2, [r3, #16]
   8277a:	f042 0202 	orr.w	r2, r2, #2
   8277e:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
   82780:	e62d      	b.n	823de <UDPHS_Handler+0x152>
		udd_ctrl_in_sent();
   82782:	4b33      	ldr	r3, [pc, #204]	; (82850 <UDPHS_Handler+0x5c4>)
}
   82784:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent();
   82788:	4718      	bx	r3
	nb_data = udd_byte_count(0);
   8278a:	4b27      	ldr	r3, [pc, #156]	; (82828 <UDPHS_Handler+0x59c>)
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8278c:	4f2e      	ldr	r7, [pc, #184]	; (82848 <UDPHS_Handler+0x5bc>)
	nb_data = udd_byte_count(0);
   8278e:	f8d3 611c 	ldr.w	r6, [r3, #284]	; 0x11c
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   82792:	4c26      	ldr	r4, [pc, #152]	; (8282c <UDPHS_Handler+0x5a0>)
   82794:	883b      	ldrh	r3, [r7, #0]
   82796:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
	nb_data = udd_byte_count(0);
   8279a:	f3c6 560a 	ubfx	r6, r6, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8279e:	199a      	adds	r2, r3, r6
   827a0:	4594      	cmp	ip, r2
	udd_ctrl_payload_buf_cnt += nb_data;
   827a2:	bfac      	ite	ge
   827a4:	fa1f fc82 	uxthge.w	ip, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   827a8:	ebac 0603 	sublt.w	r6, ip, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   827ac:	68a2      	ldr	r2, [r4, #8]
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   827ae:	bfb8      	it	lt
   827b0:	b2b6      	uxthlt	r6, r6
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   827b2:	441a      	add	r2, r3
	for (i = 0; i < nb_data; i++) {
   827b4:	2e00      	cmp	r6, #0
   827b6:	f000 8112 	beq.w	829de <UDPHS_Handler+0x752>
	uint8_t *ptr_src = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   827ba:	4b1f      	ldr	r3, [pc, #124]	; (82838 <UDPHS_Handler+0x5ac>)
		*ptr_dest++ = *ptr_src++;
   827bc:	4618      	mov	r0, r3
   827be:	3301      	adds	r3, #1
   827c0:	7800      	ldrb	r0, [r0, #0]
	for (i = 0; i < nb_data; i++) {
   827c2:	b2d9      	uxtb	r1, r3
   827c4:	42b1      	cmp	r1, r6
		*ptr_dest++ = *ptr_src++;
   827c6:	f802 0b01 	strb.w	r0, [r2], #1
	for (i = 0; i < nb_data; i++) {
   827ca:	d3f7      	bcc.n	827bc <UDPHS_Handler+0x530>
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   827cc:	2e40      	cmp	r6, #64	; 0x40
	udd_ctrl_payload_buf_cnt += nb_data;
   827ce:	f8a7 c000 	strh.w	ip, [r7]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   827d2:	d067      	beq.n	828a4 <UDPHS_Handler+0x618>
		if (NULL != udd_g_ctrlreq.over_under_run) {
   827d4:	6963      	ldr	r3, [r4, #20]
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   827d6:	f8a4 c00c 	strh.w	ip, [r4, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   827da:	2b00      	cmp	r3, #0
   827dc:	d03a      	beq.n	82854 <UDPHS_Handler+0x5c8>
			if (!udd_g_ctrlreq.over_under_run()) {
   827de:	4798      	blx	r3
   827e0:	2800      	cmp	r0, #0
   827e2:	d137      	bne.n	82854 <UDPHS_Handler+0x5c8>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   827e4:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   827e6:	2120      	movs	r1, #32
			udd_ack_out_received(0);
   827e8:	f44f 7200 	mov.w	r2, #512	; 0x200
	udd_enable_stall_handshake(0);
   827ec:	4b0e      	ldr	r3, [pc, #56]	; (82828 <UDPHS_Handler+0x59c>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   827ee:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   827f0:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
			udd_ack_out_received(0);
   827f4:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			return;
   827f8:	e5f1      	b.n	823de <UDPHS_Handler+0x152>
	if (udd_g_ctrlreq.callback) {
   827fa:	4c0c      	ldr	r4, [pc, #48]	; (8282c <UDPHS_Handler+0x5a0>)
   827fc:	6923      	ldr	r3, [r4, #16]
   827fe:	2b00      	cmp	r3, #0
   82800:	f43f aece 	beq.w	825a0 <UDPHS_Handler+0x314>
		udd_g_ctrlreq.callback();
   82804:	4798      	blx	r3
   82806:	e6cb      	b.n	825a0 <UDPHS_Handler+0x314>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   82808:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   8280a:	2120      	movs	r1, #32
		udd_ack_setup_received(0);
   8280c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	udd_enable_stall_handshake(0);
   82810:	4b05      	ldr	r3, [pc, #20]	; (82828 <UDPHS_Handler+0x59c>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   82812:	7028      	strb	r0, [r5, #0]
	udd_enable_stall_handshake(0);
   82814:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
		udd_ack_setup_received(0);
   82818:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
		return;
   8281c:	e5df      	b.n	823de <UDPHS_Handler+0x152>
   8281e:	bf00      	nop
   82820:	2000367c 	.word	0x2000367c
   82824:	20003678 	.word	0x20003678
   82828:	400a4000 	.word	0x400a4000
   8282c:	200036ac 	.word	0x200036ac
   82830:	20000304 	.word	0x20000304
   82834:	200036ab 	.word	0x200036ab
   82838:	20180000 	.word	0x20180000
   8283c:	20180008 	.word	0x20180008
   82840:	00080d7d 	.word	0x00080d7d
   82844:	20003676 	.word	0x20003676
   82848:	20003674 	.word	0x20003674
   8284c:	00080cfd 	.word	0x00080cfd
   82850:	000820f1 	.word	0x000820f1
		udd_ack_out_received(0);
   82854:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82858:	2203      	movs	r2, #3
		udd_ack_out_received(0);
   8285a:	4b6a      	ldr	r3, [pc, #424]	; (82a04 <UDPHS_Handler+0x778>)
   8285c:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82860:	702a      	strb	r2, [r5, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82862:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82866:	b672      	cpsid	i
   82868:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8286c:	2500      	movs	r5, #0
   8286e:	4866      	ldr	r0, [pc, #408]	; (82a08 <UDPHS_Handler+0x77c>)
	udd_ack_in_send(0);
   82870:	f44f 6180 	mov.w	r1, #1024	; 0x400
   82874:	7005      	strb	r5, [r0, #0]
	udd_ack_nak_out(0);
   82876:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	udd_raise_tx_pkt_ready(0);
   8287a:	f44f 6500 	mov.w	r5, #2048	; 0x800
	udd_ack_in_send(0);
   8287e:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82882:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   82886:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	udd_ack_nak_out(0);
   8288a:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   8288e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82892:	2c00      	cmp	r4, #0
   82894:	f47f ada3 	bne.w	823de <UDPHS_Handler+0x152>
		cpu_irq_enable();
   82898:	2301      	movs	r3, #1
   8289a:	7003      	strb	r3, [r0, #0]
   8289c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   828a0:	b662      	cpsie	i
   828a2:	e59c      	b.n	823de <UDPHS_Handler+0x152>
			(udd_ctrl_prev_payload_buf_cnt +
   828a4:	4e59      	ldr	r6, [pc, #356]	; (82a0c <UDPHS_Handler+0x780>)
			|| (udd_g_ctrlreq.req.wLength <=
   828a6:	88e2      	ldrh	r2, [r4, #6]
			(udd_ctrl_prev_payload_buf_cnt +
   828a8:	8833      	ldrh	r3, [r6, #0]
   828aa:	4463      	add	r3, ip
			|| (udd_g_ctrlreq.req.wLength <=
   828ac:	429a      	cmp	r2, r3
   828ae:	dd91      	ble.n	827d4 <UDPHS_Handler+0x548>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   828b0:	89a3      	ldrh	r3, [r4, #12]
   828b2:	4563      	cmp	r3, ip
   828b4:	f000 8096 	beq.w	829e4 <UDPHS_Handler+0x758>
	udd_ack_out_received(0);
   828b8:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ack_nak_in(0);
   828bc:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	udd_ack_out_received(0);
   828c0:	4b50      	ldr	r3, [pc, #320]	; (82a04 <UDPHS_Handler+0x778>)
   828c2:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ack_nak_in(0);
   828c6:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   828ca:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   828ce:	b672      	cpsid	i
   828d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   828d4:	2400      	movs	r4, #0
   828d6:	494c      	ldr	r1, [pc, #304]	; (82a08 <UDPHS_Handler+0x77c>)
   828d8:	700c      	strb	r4, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   828da:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   828de:	2800      	cmp	r0, #0
   828e0:	f47f ad7d 	bne.w	823de <UDPHS_Handler+0x152>
		cpu_irq_enable();
   828e4:	2301      	movs	r3, #1
   828e6:	700b      	strb	r3, [r1, #0]
   828e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   828ec:	b662      	cpsie	i
   828ee:	e576      	b.n	823de <UDPHS_Handler+0x152>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   828f0:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   828f4:	b672      	cpsid	i
   828f6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   828fa:	4843      	ldr	r0, [pc, #268]	; (82a08 <UDPHS_Handler+0x77c>)
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
   828fc:	4944      	ldr	r1, [pc, #272]	; (82a10 <UDPHS_Handler+0x784>)
   828fe:	7003      	strb	r3, [r0, #0]
   82900:	788b      	ldrb	r3, [r1, #2]
   82902:	3301      	adds	r3, #1
   82904:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   82906:	2c00      	cmp	r4, #0
   82908:	f47f ad79 	bne.w	823fe <UDPHS_Handler+0x172>
		cpu_irq_enable();
   8290c:	2301      	movs	r3, #1
   8290e:	7003      	strb	r3, [r0, #0]
   82910:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82914:	b662      	cpsie	i
}
   82916:	e572      	b.n	823fe <UDPHS_Handler+0x172>
		udd_ctrl_prev_payload_buf_cnt = 0;
   82918:	2300      	movs	r3, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   8291a:	2102      	movs	r1, #2
		udd_ctrl_prev_payload_buf_cnt = 0;
   8291c:	4c3b      	ldr	r4, [pc, #236]	; (82a0c <UDPHS_Handler+0x780>)
		udd_ctrl_payload_buf_cnt = 0;
   8291e:	483d      	ldr	r0, [pc, #244]	; (82a14 <UDPHS_Handler+0x788>)
		udd_ctrl_prev_payload_buf_cnt = 0;
   82920:	8023      	strh	r3, [r4, #0]
		udd_ctrl_payload_buf_cnt = 0;
   82922:	8003      	strh	r3, [r0, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   82924:	7029      	strb	r1, [r5, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   82926:	4a3c      	ldr	r2, [pc, #240]	; (82a18 <UDPHS_Handler+0x78c>)
}
   82928:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent(); // Send first data transfer
   8292c:	4710      	bx	r2
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8292e:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   82932:	b672      	cpsid	i
   82934:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82938:	4833      	ldr	r0, [pc, #204]	; (82a08 <UDPHS_Handler+0x77c>)
	Assert(sleepmgr_locks[mode]);

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
   8293a:	4935      	ldr	r1, [pc, #212]	; (82a10 <UDPHS_Handler+0x784>)
   8293c:	7004      	strb	r4, [r0, #0]
   8293e:	788b      	ldrb	r3, [r1, #2]
   82940:	3b01      	subs	r3, #1
   82942:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   82944:	2d00      	cmp	r5, #0
   82946:	f47f ad33 	bne.w	823b0 <UDPHS_Handler+0x124>
		cpu_irq_enable();
   8294a:	2301      	movs	r3, #1
   8294c:	7003      	strb	r3, [r0, #0]
   8294e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82952:	b662      	cpsie	i
}
   82954:	e52c      	b.n	823b0 <UDPHS_Handler+0x124>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82956:	2403      	movs	r4, #3
   82958:	7004      	strb	r4, [r0, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8295a:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   8295e:	b672      	cpsid	i
   82960:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82964:	4c28      	ldr	r4, [pc, #160]	; (82a08 <UDPHS_Handler+0x77c>)
	udd_ack_in_send(0);
   82966:	f44f 6080 	mov.w	r0, #1024	; 0x400
   8296a:	7023      	strb	r3, [r4, #0]
	udd_raise_tx_pkt_ready(0);
   8296c:	f44f 6600 	mov.w	r6, #2048	; 0x800
	udd_ack_nak_out(0);
   82970:	f44f 4300 	mov.w	r3, #32768	; 0x8000
	udd_ack_in_send(0);
   82974:	f8c2 0118 	str.w	r0, [r2, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82978:	f8c2 6114 	str.w	r6, [r2, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   8297c:	f8c2 0104 	str.w	r0, [r2, #260]	; 0x104
	udd_ack_nak_out(0);
   82980:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   82984:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82988:	2d00      	cmp	r5, #0
   8298a:	f47f ad28 	bne.w	823de <UDPHS_Handler+0x152>
		cpu_irq_enable();
   8298e:	7021      	strb	r1, [r4, #0]
   82990:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82994:	b662      	cpsie	i
   82996:	e522      	b.n	823de <UDPHS_Handler+0x152>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82998:	2103      	movs	r1, #3
   8299a:	7029      	strb	r1, [r5, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8299c:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   829a0:	b672      	cpsid	i
   829a2:	f3bf 8f5f 	dmb	sy
	udd_ack_in_send(0);
   829a6:	f44f 6180 	mov.w	r1, #1024	; 0x400
	cpu_irq_disable();
   829aa:	4817      	ldr	r0, [pc, #92]	; (82a08 <UDPHS_Handler+0x77c>)
	udd_raise_tx_pkt_ready(0);
   829ac:	f44f 6500 	mov.w	r5, #2048	; 0x800
   829b0:	7002      	strb	r2, [r0, #0]
	udd_ack_nak_out(0);
   829b2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	udd_ack_in_send(0);
   829b6:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   829ba:	e762      	b.n	82882 <UDPHS_Handler+0x5f6>
				udd_disable_tx_pkt_ready_interrupt(ep);
   829bc:	f44f 6300 	mov.w	r3, #2048	; 0x800
				udd_ep_finish_job(ptr_job, false, ep);
   829c0:	4d16      	ldr	r5, [pc, #88]	; (82a1c <UDPHS_Handler+0x790>)
		ptr_job = &udd_ep_job[ep - 1];
   829c2:	4817      	ldr	r0, [pc, #92]	; (82a20 <UDPHS_Handler+0x794>)
				udd_disable_tx_pkt_ready_interrupt(ep);
   829c4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
		ptr_job = &udd_ep_job[ep - 1];
   829c8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
				udd_raise_tx_pkt_ready(ep);
   829cc:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
				udd_ep_finish_job(ptr_job, false, ep);
   829d0:	463a      	mov	r2, r7
   829d2:	462b      	mov	r3, r5
   829d4:	eb00 00ce 	add.w	r0, r0, lr, lsl #3
}
   829d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
				udd_ep_finish_job(ptr_job, false, ep);
   829dc:	4718      	bx	r3
	udd_ctrl_payload_buf_cnt += nb_data;
   829de:	f8a7 c000 	strh.w	ip, [r7]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   829e2:	e6f7      	b.n	827d4 <UDPHS_Handler+0x548>
		if (!udd_g_ctrlreq.over_under_run) {
   829e4:	6963      	ldr	r3, [r4, #20]
   829e6:	2b00      	cmp	r3, #0
   829e8:	f43f aefc 	beq.w	827e4 <UDPHS_Handler+0x558>
		if (!udd_g_ctrlreq.over_under_run()) {
   829ec:	4798      	blx	r3
   829ee:	2800      	cmp	r0, #0
   829f0:	f43f aef8 	beq.w	827e4 <UDPHS_Handler+0x558>
		udd_ctrl_payload_buf_cnt = 0;
   829f4:	2200      	movs	r2, #0
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   829f6:	8833      	ldrh	r3, [r6, #0]
   829f8:	8839      	ldrh	r1, [r7, #0]
		udd_ctrl_payload_buf_cnt = 0;
   829fa:	803a      	strh	r2, [r7, #0]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   829fc:	440b      	add	r3, r1
   829fe:	8033      	strh	r3, [r6, #0]
		udd_ctrl_payload_buf_cnt = 0;
   82a00:	e75a      	b.n	828b8 <UDPHS_Handler+0x62c>
   82a02:	bf00      	nop
   82a04:	400a4000 	.word	0x400a4000
   82a08:	20000304 	.word	0x20000304
   82a0c:	20003676 	.word	0x20003676
   82a10:	20003664 	.word	0x20003664
   82a14:	20003674 	.word	0x20003674
   82a18:	000820f1 	.word	0x000820f1
   82a1c:	00081efd 	.word	0x00081efd
   82a20:	2000367c 	.word	0x2000367c

00082a24 <udd_attach>:
{
   82a24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82a28:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   82a2c:	b672      	cpsid	i
   82a2e:	f3bf 8f5f 	dmb	sy
   82a32:	2100      	movs	r1, #0
	if (b_idle && !udd_b_idle) {
   82a34:	4b29      	ldr	r3, [pc, #164]	; (82adc <udd_attach+0xb8>)
   82a36:	4c2a      	ldr	r4, [pc, #168]	; (82ae0 <udd_attach+0xbc>)
   82a38:	781a      	ldrb	r2, [r3, #0]
   82a3a:	7021      	strb	r1, [r4, #0]
   82a3c:	2a00      	cmp	r2, #0
   82a3e:	d03b      	beq.n	82ab8 <udd_attach+0x94>
	udd_b_idle = b_idle;
   82a40:	2501      	movs	r5, #1
	udd_enable_periph_ck();
   82a42:	4a28      	ldr	r2, [pc, #160]	; (82ae4 <udd_attach+0xc0>)
   82a44:	201d      	movs	r0, #29
	udd_b_idle = b_idle;
   82a46:	701d      	strb	r5, [r3, #0]
	udd_ack_sof();
   82a48:	f04f 0808 	mov.w	r8, #8
	udd_enable_periph_ck();
   82a4c:	4790      	blx	r2
	udd_ack_suspend();
   82a4e:	2702      	movs	r7, #2
	udd_ack_msof();
   82a50:	f04f 0e04 	mov.w	lr, #4
	udd_ack_reset();
   82a54:	f04f 0c10 	mov.w	ip, #16
	udd_ack_wake_up();
   82a58:	2120      	movs	r1, #32
	udd_attach_device();
   82a5a:	4b23      	ldr	r3, [pc, #140]	; (82ae8 <udd_attach+0xc4>)
	udd_disable_periph_ck();
   82a5c:	201d      	movs	r0, #29
	udd_attach_device();
   82a5e:	681a      	ldr	r2, [r3, #0]
   82a60:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   82a64:	601a      	str	r2, [r3, #0]
   82a66:	681a      	ldr	r2, [r3, #0]
   82a68:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   82a6c:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   82a6e:	691a      	ldr	r2, [r3, #16]
   82a70:	f042 0210 	orr.w	r2, r2, #16
   82a74:	611a      	str	r2, [r3, #16]
	udd_enable_suspend_interrupt();
   82a76:	691a      	ldr	r2, [r3, #16]
   82a78:	f042 0202 	orr.w	r2, r2, #2
   82a7c:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
   82a7e:	691a      	ldr	r2, [r3, #16]
   82a80:	f042 0220 	orr.w	r2, r2, #32
   82a84:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
   82a86:	691a      	ldr	r2, [r3, #16]
   82a88:	f042 0208 	orr.w	r2, r2, #8
   82a8c:	611a      	str	r2, [r3, #16]
	udd_enable_msof_interrupt();
   82a8e:	691a      	ldr	r2, [r3, #16]
   82a90:	f042 0204 	orr.w	r2, r2, #4
   82a94:	611a      	str	r2, [r3, #16]
	udd_ack_sof();
   82a96:	f8c3 8018 	str.w	r8, [r3, #24]
	udd_disable_periph_ck();
   82a9a:	4a14      	ldr	r2, [pc, #80]	; (82aec <udd_attach+0xc8>)
	udd_ack_msof();
   82a9c:	f8c3 e018 	str.w	lr, [r3, #24]
	udd_ack_reset();
   82aa0:	f8c3 c018 	str.w	ip, [r3, #24]
	udd_ack_suspend();
   82aa4:	619f      	str	r7, [r3, #24]
	udd_ack_wake_up();
   82aa6:	6199      	str	r1, [r3, #24]
	udd_disable_periph_ck();
   82aa8:	4790      	blx	r2
	if (cpu_irq_is_enabled_flags(flags))
   82aaa:	b91e      	cbnz	r6, 82ab4 <udd_attach+0x90>
		cpu_irq_enable();
   82aac:	7025      	strb	r5, [r4, #0]
   82aae:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82ab2:	b662      	cpsie	i
}
   82ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82ab8:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   82abc:	b672      	cpsid	i
   82abe:	f3bf 8f5f 	dmb	sy
	++sleepmgr_locks[mode];
   82ac2:	490b      	ldr	r1, [pc, #44]	; (82af0 <udd_attach+0xcc>)
	cpu_irq_disable();
   82ac4:	7022      	strb	r2, [r4, #0]
   82ac6:	788a      	ldrb	r2, [r1, #2]
   82ac8:	3201      	adds	r2, #1
   82aca:	708a      	strb	r2, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   82acc:	2800      	cmp	r0, #0
   82ace:	d1b7      	bne.n	82a40 <udd_attach+0x1c>
		cpu_irq_enable();
   82ad0:	2201      	movs	r2, #1
   82ad2:	7022      	strb	r2, [r4, #0]
   82ad4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82ad8:	b662      	cpsie	i
}
   82ada:	e7b1      	b.n	82a40 <udd_attach+0x1c>
   82adc:	20003672 	.word	0x20003672
   82ae0:	20000304 	.word	0x20000304
   82ae4:	00081a6d 	.word	0x00081a6d
   82ae8:	400a4000 	.word	0x400a4000
   82aec:	00081a91 	.word	0x00081a91
   82af0:	20003664 	.word	0x20003664

00082af4 <udd_enable>:
{
   82af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	sysclk_enable_usb();
   82af6:	4b25      	ldr	r3, [pc, #148]	; (82b8c <udd_enable+0x98>)
   82af8:	4798      	blx	r3
	udd_enable_periph_ck();
   82afa:	4b25      	ldr	r3, [pc, #148]	; (82b90 <udd_enable+0x9c>)
   82afc:	201d      	movs	r0, #29
   82afe:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82b00:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   82b04:	b672      	cpsid	i
   82b06:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82b0a:	2400      	movs	r4, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   82b0c:	f04f 0e50 	mov.w	lr, #80	; 0x50
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   82b10:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
		udd_ep_job[i].busy = false;
   82b14:	4a1f      	ldr	r2, [pc, #124]	; (82b94 <udd_enable+0xa0>)
   82b16:	4d20      	ldr	r5, [pc, #128]	; (82b98 <udd_enable+0xa4>)
   82b18:	7d11      	ldrb	r1, [r2, #20]
	udd_enable_periph();
   82b1a:	4b20      	ldr	r3, [pc, #128]	; (82b9c <udd_enable+0xa8>)
		udd_ep_job[i].busy = false;
   82b1c:	f021 0105 	bic.w	r1, r1, #5
   82b20:	7511      	strb	r1, [r2, #20]
   82b22:	f892 102c 	ldrb.w	r1, [r2, #44]	; 0x2c
   82b26:	702c      	strb	r4, [r5, #0]
   82b28:	f021 0105 	bic.w	r1, r1, #5
   82b2c:	f882 102c 	strb.w	r1, [r2, #44]	; 0x2c
	udd_enable_periph();
   82b30:	681a      	ldr	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   82b32:	4f1b      	ldr	r7, [pc, #108]	; (82ba0 <udd_enable+0xac>)
   82b34:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   82b38:	601a      	str	r2, [r3, #0]
   82b3a:	f887 e31d 	strb.w	lr, [r7, #797]	; 0x31d
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   82b3e:	f8c7 c000 	str.w	ip, [r7]
	udd_high_speed_enable();
   82b42:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   82b46:	f44f 2080 	mov.w	r0, #262144	; 0x40000
	udd_high_speed_enable();
   82b4a:	f022 0203 	bic.w	r2, r2, #3
   82b4e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   82b52:	4b14      	ldr	r3, [pc, #80]	; (82ba4 <udd_enable+0xb0>)
   82b54:	4798      	blx	r3
	udd_b_idle = false;
   82b56:	4b14      	ldr	r3, [pc, #80]	; (82ba8 <udd_enable+0xb4>)
   82b58:	701c      	strb	r4, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82b5a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   82b5e:	b672      	cpsid	i
   82b60:	f3bf 8f5f 	dmb	sy
   82b64:	4a11      	ldr	r2, [pc, #68]	; (82bac <udd_enable+0xb8>)
   82b66:	702c      	strb	r4, [r5, #0]
   82b68:	78d3      	ldrb	r3, [r2, #3]
   82b6a:	3301      	adds	r3, #1
   82b6c:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   82b6e:	b921      	cbnz	r1, 82b7a <udd_enable+0x86>
		cpu_irq_enable();
   82b70:	2301      	movs	r3, #1
   82b72:	702b      	strb	r3, [r5, #0]
   82b74:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82b78:	b662      	cpsie	i
	udd_attach();
   82b7a:	4b0d      	ldr	r3, [pc, #52]	; (82bb0 <udd_enable+0xbc>)
   82b7c:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   82b7e:	b926      	cbnz	r6, 82b8a <udd_enable+0x96>
		cpu_irq_enable();
   82b80:	2301      	movs	r3, #1
   82b82:	702b      	strb	r3, [r5, #0]
   82b84:	f3bf 8f5f 	dmb	sy
   82b88:	b662      	cpsie	i
}
   82b8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82b8c:	00081c55 	.word	0x00081c55
   82b90:	00081a6d 	.word	0x00081a6d
   82b94:	2000367c 	.word	0x2000367c
   82b98:	20000304 	.word	0x20000304
   82b9c:	400a4000 	.word	0x400a4000
   82ba0:	e000e100 	.word	0xe000e100
   82ba4:	00081ab5 	.word	0x00081ab5
   82ba8:	20003672 	.word	0x20003672
   82bac:	20003664 	.word	0x20003664
   82bb0:	00082a25 	.word	0x00082a25

00082bb4 <udd_detach>:
{
   82bb4:	b510      	push	{r4, lr}
	udd_enable_periph_ck();
   82bb6:	4b16      	ldr	r3, [pc, #88]	; (82c10 <udd_detach+0x5c>)
   82bb8:	201d      	movs	r0, #29
   82bba:	4798      	blx	r3
	udd_detach_device();
   82bbc:	4b15      	ldr	r3, [pc, #84]	; (82c14 <udd_detach+0x60>)
	udd_disable_periph_ck();
   82bbe:	201d      	movs	r0, #29
	udd_detach_device();
   82bc0:	681a      	ldr	r2, [r3, #0]
	udd_disable_periph_ck();
   82bc2:	4915      	ldr	r1, [pc, #84]	; (82c18 <udd_detach+0x64>)
	udd_detach_device();
   82bc4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   82bc8:	601a      	str	r2, [r3, #0]
   82bca:	681a      	ldr	r2, [r3, #0]
   82bcc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   82bd0:	601a      	str	r2, [r3, #0]
	udd_disable_periph_ck();
   82bd2:	4788      	blx	r1
	if (!b_idle && udd_b_idle) {
   82bd4:	4b11      	ldr	r3, [pc, #68]	; (82c1c <udd_detach+0x68>)
   82bd6:	781a      	ldrb	r2, [r3, #0]
   82bd8:	b912      	cbnz	r2, 82be0 <udd_detach+0x2c>
	udd_b_idle = b_idle;
   82bda:	2200      	movs	r2, #0
   82bdc:	701a      	strb	r2, [r3, #0]
}
   82bde:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82be0:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82be4:	b672      	cpsid	i
   82be6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82bea:	f04f 0c00 	mov.w	ip, #0
	--sleepmgr_locks[mode];
   82bee:	490c      	ldr	r1, [pc, #48]	; (82c20 <udd_detach+0x6c>)
   82bf0:	480c      	ldr	r0, [pc, #48]	; (82c24 <udd_detach+0x70>)
   82bf2:	788a      	ldrb	r2, [r1, #2]
   82bf4:	3a01      	subs	r2, #1
   82bf6:	708a      	strb	r2, [r1, #2]
   82bf8:	f880 c000 	strb.w	ip, [r0]
	if (cpu_irq_is_enabled_flags(flags))
   82bfc:	2c00      	cmp	r4, #0
   82bfe:	d1ec      	bne.n	82bda <udd_detach+0x26>
		cpu_irq_enable();
   82c00:	2201      	movs	r2, #1
   82c02:	7002      	strb	r2, [r0, #0]
   82c04:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82c08:	b662      	cpsie	i
	udd_b_idle = b_idle;
   82c0a:	2200      	movs	r2, #0
   82c0c:	701a      	strb	r2, [r3, #0]
}
   82c0e:	bd10      	pop	{r4, pc}
   82c10:	00081a6d 	.word	0x00081a6d
   82c14:	400a4000 	.word	0x400a4000
   82c18:	00081a91 	.word	0x00081a91
   82c1c:	20003672 	.word	0x20003672
   82c20:	20003664 	.word	0x20003664
   82c24:	20000304 	.word	0x20000304

00082c28 <udd_is_high_speed>:
	return !Is_udd_full_speed_mode();
   82c28:	4b02      	ldr	r3, [pc, #8]	; (82c34 <udd_is_high_speed+0xc>)
   82c2a:	6958      	ldr	r0, [r3, #20]
}
   82c2c:	f000 0001 	and.w	r0, r0, #1
   82c30:	4770      	bx	lr
   82c32:	bf00      	nop
   82c34:	400a4000 	.word	0x400a4000

00082c38 <udd_set_address>:
	udd_disable_address();
   82c38:	4b08      	ldr	r3, [pc, #32]	; (82c5c <udd_set_address+0x24>)
	udd_configure_address(address);
   82c3a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
	udd_disable_address();
   82c3e:	681a      	ldr	r2, [r3, #0]
   82c40:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   82c44:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   82c46:	681a      	ldr	r2, [r3, #0]
   82c48:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   82c4c:	4302      	orrs	r2, r0
   82c4e:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   82c50:	681a      	ldr	r2, [r3, #0]
   82c52:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   82c56:	601a      	str	r2, [r3, #0]
}
   82c58:	4770      	bx	lr
   82c5a:	bf00      	nop
   82c5c:	400a4000 	.word	0x400a4000

00082c60 <udd_getaddress>:
	return udd_get_configured_address();
   82c60:	4b02      	ldr	r3, [pc, #8]	; (82c6c <udd_getaddress+0xc>)
   82c62:	6818      	ldr	r0, [r3, #0]
}
   82c64:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82c68:	4770      	bx	lr
   82c6a:	bf00      	nop
   82c6c:	400a4000 	.word	0x400a4000

00082c70 <udd_get_frame_number>:
	return udd_frame_number();
   82c70:	4b02      	ldr	r3, [pc, #8]	; (82c7c <udd_get_frame_number+0xc>)
   82c72:	6858      	ldr	r0, [r3, #4]
}
   82c74:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   82c78:	4770      	bx	lr
   82c7a:	bf00      	nop
   82c7c:	400a4000 	.word	0x400a4000

00082c80 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   82c80:	4b01      	ldr	r3, [pc, #4]	; (82c88 <udd_set_setup_payload+0x8>)
   82c82:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   82c84:	8199      	strh	r1, [r3, #12]
}
   82c86:	4770      	bx	lr
   82c88:	200036ac 	.word	0x200036ac

00082c8c <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82c8c:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   82c90:	2a02      	cmp	r2, #2
   82c92:	d900      	bls.n	82c96 <udd_ep_free+0xa>
   82c94:	4770      	bx	lr
	udd_disable_endpoint(ep_index);
   82c96:	2101      	movs	r1, #1
{
   82c98:	b538      	push	{r3, r4, r5, lr}
	udd_disable_endpoint(ep_index);
   82c9a:	0153      	lsls	r3, r2, #5
   82c9c:	f103 2540 	add.w	r5, r3, #1073758208	; 0x40004000
   82ca0:	f505 2520 	add.w	r5, r5, #655360	; 0xa0000
   82ca4:	462b      	mov	r3, r5
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82ca6:	1e54      	subs	r4, r2, #1
	udd_disable_endpoint(ep_index);
   82ca8:	f8c5 1108 	str.w	r1, [r5, #264]	; 0x108
	udd_configure_endpoint_bank(ep_index, 0);
   82cac:	f8d5 5100 	ldr.w	r5, [r5, #256]	; 0x100
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82cb0:	eb04 0044 	add.w	r0, r4, r4, lsl #1
   82cb4:	4c07      	ldr	r4, [pc, #28]	; (82cd4 <udd_ep_free+0x48>)
	udd_configure_endpoint_bank(ep_index, 0);
   82cb6:	f025 05c0 	bic.w	r5, r5, #192	; 0xc0
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82cba:	eb04 04c0 	add.w	r4, r4, r0, lsl #3
	udd_configure_endpoint_bank(ep_index, 0);
   82cbe:	f8c3 5100 	str.w	r5, [r3, #256]	; 0x100
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82cc2:	4620      	mov	r0, r4
   82cc4:	4b04      	ldr	r3, [pc, #16]	; (82cd8 <udd_ep_free+0x4c>)
   82cc6:	4798      	blx	r3
	udd_ep_job[ep_index - 1].stall_requested = false;
   82cc8:	7d23      	ldrb	r3, [r4, #20]
   82cca:	f36f 0382 	bfc	r3, #2, #1
   82cce:	7523      	strb	r3, [r4, #20]
}
   82cd0:	bd38      	pop	{r3, r4, r5, pc}
   82cd2:	bf00      	nop
   82cd4:	2000367c 	.word	0x2000367c
   82cd8:	00081efd 	.word	0x00081efd

00082cdc <udd_ep_is_halted>:
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   82cdc:	f000 000f 	and.w	r0, r0, #15
	return (Is_udd_endpoint_stall_requested(ep_index)
   82ce0:	0143      	lsls	r3, r0, #5
   82ce2:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   82ce6:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82cea:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
			|| ptr_job->stall_requested);
   82cee:	069b      	lsls	r3, r3, #26
   82cf0:	d409      	bmi.n	82d06 <udd_ep_is_halted+0x2a>
   82cf2:	4b06      	ldr	r3, [pc, #24]	; (82d0c <udd_ep_is_halted+0x30>)
   82cf4:	3801      	subs	r0, #1
   82cf6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   82cfa:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
   82cfe:	7d00      	ldrb	r0, [r0, #20]
   82d00:	f3c0 0080 	ubfx	r0, r0, #2, #1
   82d04:	4770      	bx	lr
   82d06:	2001      	movs	r0, #1
}
   82d08:	4770      	bx	lr
   82d0a:	bf00      	nop
   82d0c:	2000367c 	.word	0x2000367c

00082d10 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82d10:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   82d14:	2b02      	cmp	r3, #2
   82d16:	d82c      	bhi.n	82d72 <udd_ep_set_halt+0x62>
{
   82d18:	b530      	push	{r4, r5, lr}
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   82d1a:	4d25      	ldr	r5, [pc, #148]	; (82db0 <udd_ep_set_halt+0xa0>)
   82d1c:	0159      	lsls	r1, r3, #5
   82d1e:	eb05 1e43 	add.w	lr, r5, r3, lsl #5
   82d22:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   82d26:	0692      	lsls	r2, r2, #26
   82d28:	d421      	bmi.n	82d6e <udd_ep_set_halt+0x5e>
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   82d2a:	4c22      	ldr	r4, [pc, #136]	; (82db4 <udd_ep_set_halt+0xa4>)
	ptr_job = &udd_ep_job[ep_index - 1];
   82d2c:	1e5a      	subs	r2, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   82d2e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   82d32:	eb04 0cc2 	add.w	ip, r4, r2, lsl #3
   82d36:	f89c 4014 	ldrb.w	r4, [ip, #20]
   82d3a:	f014 0204 	ands.w	r2, r4, #4
   82d3e:	d116      	bne.n	82d6e <udd_ep_set_halt+0x5e>
	if (ptr_job->busy == true) {
   82d40:	07e4      	lsls	r4, r4, #31
   82d42:	d418      	bmi.n	82d76 <udd_ep_set_halt+0x66>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82d44:	0602      	lsls	r2, r0, #24
   82d46:	d418      	bmi.n	82d7a <udd_ep_set_halt+0x6a>
	udd_ack_stall(ep_index);
   82d48:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	udd_enable_stall_handshake(ep_index);
   82d4c:	2420      	movs	r4, #32
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82d4e:	f101 2340 	add.w	r3, r1, #1073758208	; 0x40004000
   82d52:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82d56:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
	return true;
   82d5a:	2001      	movs	r0, #1
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82d5c:	f022 0202 	bic.w	r2, r2, #2
   82d60:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
	udd_ack_stall(ep_index);
   82d64:	f8c3 5118 	str.w	r5, [r3, #280]	; 0x118
	udd_enable_stall_handshake(ep_index);
   82d68:	f8c3 4114 	str.w	r4, [r3, #276]	; 0x114
}
   82d6c:	bd30      	pop	{r4, r5, pc}
		return true; // Already STALL
   82d6e:	2001      	movs	r0, #1
}
   82d70:	bd30      	pop	{r4, r5, pc}
		return false;
   82d72:	2000      	movs	r0, #0
}
   82d74:	4770      	bx	lr
		return false;
   82d76:	4610      	mov	r0, r2
}
   82d78:	bd30      	pop	{r4, r5, pc}
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82d7a:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   82d7e:	f412 2f40 	tst.w	r2, #786432	; 0xc0000
   82d82:	d0e1      	beq.n	82d48 <udd_ep_set_halt+0x38>
			udd_enable_bank_interrupt(ep_index);
   82d84:	f44f 2480 	mov.w	r4, #262144	; 0x40000
			udd_enable_endpoint_interrupt(ep_index);
   82d88:	f44f 7280 	mov.w	r2, #256	; 0x100
			ptr_job->stall_requested = true;
   82d8c:	f89c 1014 	ldrb.w	r1, [ip, #20]
			return true;
   82d90:	2001      	movs	r0, #1
			ptr_job->stall_requested = true;
   82d92:	f041 0104 	orr.w	r1, r1, #4
   82d96:	f88c 1014 	strb.w	r1, [ip, #20]
			udd_enable_bank_interrupt(ep_index);
   82d9a:	f103 0108 	add.w	r1, r3, #8
   82d9e:	eb05 1141 	add.w	r1, r5, r1, lsl #5
   82da2:	604c      	str	r4, [r1, #4]
			udd_enable_endpoint_interrupt(ep_index);
   82da4:	6929      	ldr	r1, [r5, #16]
   82da6:	fa02 f303 	lsl.w	r3, r2, r3
   82daa:	430b      	orrs	r3, r1
   82dac:	612b      	str	r3, [r5, #16]
}
   82dae:	bd30      	pop	{r4, r5, pc}
   82db0:	400a4000 	.word	0x400a4000
   82db4:	2000367c 	.word	0x2000367c

00082db8 <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
   82db8:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
   82dbc:	2802      	cmp	r0, #2
   82dbe:	d85a      	bhi.n	82e76 <udd_ep_clear_halt+0xbe>
{
   82dc0:	b570      	push	{r4, r5, r6, lr}
	ptr_job = &udd_ep_job[ep - 1];
   82dc2:	f100 3cff 	add.w	ip, r0, #4294967295
	if (ptr_job->stall_requested) {
   82dc6:	4c2d      	ldr	r4, [pc, #180]	; (82e7c <udd_ep_clear_halt+0xc4>)
   82dc8:	eb0c 014c 	add.w	r1, ip, ip, lsl #1
   82dcc:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   82dd0:	7d0b      	ldrb	r3, [r1, #20]
   82dd2:	ea4f 024c 	mov.w	r2, ip, lsl #1
   82dd6:	075d      	lsls	r5, r3, #29
   82dd8:	d526      	bpl.n	82e28 <udd_ep_clear_halt+0x70>
		udd_disable_bank_interrupt(ep);
   82dda:	f44f 2680 	mov.w	r6, #262144	; 0x40000
		udd_disable_endpoint_interrupt(ep);
   82dde:	f44f 7e80 	mov.w	lr, #256	; 0x100
		ptr_job->stall_requested = false;
   82de2:	7d0b      	ldrb	r3, [r1, #20]
		udd_disable_endpoint_interrupt(ep);
   82de4:	fa0e fe00 	lsl.w	lr, lr, r0
		ptr_job->stall_requested = false;
   82de8:	f36f 0382 	bfc	r3, #2, #1
   82dec:	750b      	strb	r3, [r1, #20]
		udd_disable_bank_interrupt(ep);
   82dee:	4924      	ldr	r1, [pc, #144]	; (82e80 <udd_ep_clear_halt+0xc8>)
   82df0:	0143      	lsls	r3, r0, #5
   82df2:	eb01 1540 	add.w	r5, r1, r0, lsl #5
   82df6:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
		udd_disable_endpoint_interrupt(ep);
   82dfa:	6908      	ldr	r0, [r1, #16]
   82dfc:	ea20 000e 	bic.w	r0, r0, lr
   82e00:	6108      	str	r0, [r1, #16]
	if (Is_udd_endpoint_stall_requested(ep)) {
   82e02:	f8d5 111c 	ldr.w	r1, [r5, #284]	; 0x11c
   82e06:	068d      	lsls	r5, r1, #26
   82e08:	d417      	bmi.n	82e3a <udd_ep_clear_halt+0x82>
		if (ptr_job->busy == true) {
   82e0a:	eb02 030c 	add.w	r3, r2, ip
   82e0e:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
   82e12:	7d11      	ldrb	r1, [r2, #20]
   82e14:	00db      	lsls	r3, r3, #3
   82e16:	07c8      	lsls	r0, r1, #31
   82e18:	d504      	bpl.n	82e24 <udd_ep_clear_halt+0x6c>
			ptr_job->busy = false;
   82e1a:	f36f 0100 	bfc	r1, #0, #1
			ptr_job->call_nohalt();
   82e1e:	58e3      	ldr	r3, [r4, r3]
			ptr_job->busy = false;
   82e20:	7511      	strb	r1, [r2, #20]
			ptr_job->call_nohalt();
   82e22:	4798      	blx	r3
	return true;
   82e24:	2001      	movs	r0, #1
}
   82e26:	bd70      	pop	{r4, r5, r6, pc}
	if (Is_udd_endpoint_stall_requested(ep)) {
   82e28:	0143      	lsls	r3, r0, #5
   82e2a:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82e2e:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82e32:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   82e36:	0689      	lsls	r1, r1, #26
   82e38:	d5f4      	bpl.n	82e24 <udd_ep_clear_halt+0x6c>
		if (Is_udd_stall(ep)) {
   82e3a:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82e3e:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82e42:	f8d1 011c 	ldr.w	r0, [r1, #284]	; 0x11c
   82e46:	0486      	lsls	r6, r0, #18
   82e48:	d506      	bpl.n	82e58 <udd_ep_clear_halt+0xa0>
			udd_ack_stall(ep);
   82e4a:	f44f 5000 	mov.w	r0, #8192	; 0x2000
   82e4e:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
			udd_reset_data_toggle(ep);
   82e52:	2040      	movs	r0, #64	; 0x40
   82e54:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_disable_stall_handshake(ep);
   82e58:	2020      	movs	r0, #32
   82e5a:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82e5e:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82e62:	460b      	mov	r3, r1
   82e64:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_enable_endpoint_bank_autoswitch(ep);
   82e68:	f8d1 1104 	ldr.w	r1, [r1, #260]	; 0x104
   82e6c:	f041 0102 	orr.w	r1, r1, #2
   82e70:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (b_stall_cleared) {
   82e74:	e7c9      	b.n	82e0a <udd_ep_clear_halt+0x52>
		return false;
   82e76:	2000      	movs	r0, #0
}
   82e78:	4770      	bx	lr
   82e7a:	bf00      	nop
   82e7c:	2000367c 	.word	0x2000367c
   82e80:	400a4000 	.word	0x400a4000

00082e84 <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   82e84:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   82e88:	2802      	cmp	r0, #2
   82e8a:	d857      	bhi.n	82f3c <udd_ep_run+0xb8>
{
   82e8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if ((!Is_udd_endpoint_enabled(ep))
   82e90:	ea4f 1c40 	mov.w	ip, r0, lsl #5
   82e94:	f10c 2c40 	add.w	ip, ip, #1073758208	; 0x40004000
   82e98:	f50c 2c20 	add.w	ip, ip, #655360	; 0xa0000
   82e9c:	f8dc 410c 	ldr.w	r4, [ip, #268]	; 0x10c
   82ea0:	07e5      	lsls	r5, r4, #31
   82ea2:	d548      	bpl.n	82f36 <udd_ep_run+0xb2>
			|| Is_udd_endpoint_stall_requested(ep)
   82ea4:	f8dc 411c 	ldr.w	r4, [ip, #284]	; 0x11c
   82ea8:	06a4      	lsls	r4, r4, #26
   82eaa:	d444      	bmi.n	82f36 <udd_ep_run+0xb2>
	ptr_job = &udd_ep_job[ep - 1];
   82eac:	1e45      	subs	r5, r0, #1
			|| ptr_job->stall_requested) {
   82eae:	4e28      	ldr	r6, [pc, #160]	; (82f50 <udd_ep_run+0xcc>)
   82eb0:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
   82eb4:	eb06 0ccc 	add.w	ip, r6, ip, lsl #3
   82eb8:	f89c 4014 	ldrb.w	r4, [ip, #20]
   82ebc:	006f      	lsls	r7, r5, #1
   82ebe:	f014 0e04 	ands.w	lr, r4, #4
   82ec2:	d138      	bne.n	82f36 <udd_ep_run+0xb2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82ec4:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   82ec8:	b672      	cpsid	i
   82eca:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82ece:	f8df 8084 	ldr.w	r8, [pc, #132]	; 82f54 <udd_ep_run+0xd0>
   82ed2:	f888 e000 	strb.w	lr, [r8]
	if (ptr_job->busy == true) {
   82ed6:	f89c e014 	ldrb.w	lr, [ip, #20]
   82eda:	f01e 0f01 	tst.w	lr, #1
   82ede:	d129      	bne.n	82f34 <udd_ep_run+0xb0>
	ptr_job->busy = true;
   82ee0:	f89c e014 	ldrb.w	lr, [ip, #20]
   82ee4:	f04e 0e01 	orr.w	lr, lr, #1
   82ee8:	f88c e014 	strb.w	lr, [ip, #20]
	if (cpu_irq_is_enabled_flags(flags))
   82eec:	b92c      	cbnz	r4, 82efa <udd_ep_run+0x76>
		cpu_irq_enable();
   82eee:	2401      	movs	r4, #1
   82ef0:	f888 4000 	strb.w	r4, [r8]
   82ef4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82ef8:	b662      	cpsie	i
	ptr_job->buf_cnt = 0;
   82efa:	f04f 0c00 	mov.w	ip, #0
	ptr_job->call_trans = callback;
   82efe:	f8dd e018 	ldr.w	lr, [sp, #24]
	ptr_job->buf = buf;
   82f02:	197c      	adds	r4, r7, r5
	ptr_job->call_trans = callback;
   82f04:	f846 e034 	str.w	lr, [r6, r4, lsl #3]
	ptr_job->buf = buf;
   82f08:	eb06 04c4 	add.w	r4, r6, r4, lsl #3
	ptr_job->buf_size = buf_size;
   82f0c:	e9c4 2301 	strd	r2, r3, [r4, #4]
	ptr_job->buf_load = 0;
   82f10:	e9c4 cc03 	strd	ip, ip, [r4, #12]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   82f14:	b911      	cbnz	r1, 82f1c <udd_ep_run+0x98>
   82f16:	fab3 f183 	clz	r1, r3
   82f1a:	0949      	lsrs	r1, r1, #5
   82f1c:	197b      	adds	r3, r7, r5
   82f1e:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
   82f22:	7d1a      	ldrb	r2, [r3, #20]
   82f24:	f361 0241 	bfi	r2, r1, #1, #1
   82f28:	751a      	strb	r2, [r3, #20]
	udd_ep_trans_done(ep);
   82f2a:	490b      	ldr	r1, [pc, #44]	; (82f58 <udd_ep_run+0xd4>)
   82f2c:	4788      	blx	r1
	return true;
   82f2e:	2001      	movs	r0, #1
}
   82f30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (cpu_irq_is_enabled_flags(flags))
   82f34:	b124      	cbz	r4, 82f40 <udd_ep_run+0xbc>
		return false;
   82f36:	2000      	movs	r0, #0
}
   82f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   82f3c:	2000      	movs	r0, #0
}
   82f3e:	4770      	bx	lr
		cpu_irq_enable();
   82f40:	2301      	movs	r3, #1
   82f42:	f888 3000 	strb.w	r3, [r8]
   82f46:	f3bf 8f5f 	dmb	sy
   82f4a:	b662      	cpsie	i
		return false; // Job already on going
   82f4c:	4620      	mov	r0, r4
}
   82f4e:	e7f3      	b.n	82f38 <udd_ep_run+0xb4>
   82f50:	2000367c 	.word	0x2000367c
   82f54:	20000304 	.word	0x20000304
   82f58:	00081f3d 	.word	0x00081f3d

00082f5c <udd_ep_alloc>:
{
   82f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ep = ep & USB_EP_ADDR_MASK;
   82f60:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   82f64:	2c02      	cmp	r4, #2
{
   82f66:	b085      	sub	sp, #20
	if (ep > USB_DEVICE_MAX_EP) {
   82f68:	f200 80d4 	bhi.w	83114 <udd_ep_alloc+0x1b8>
	if (Is_udd_endpoint_enabled(ep)) {
   82f6c:	0165      	lsls	r5, r4, #5
   82f6e:	f105 2640 	add.w	r6, r5, #1073758208	; 0x40004000
   82f72:	f506 2620 	add.w	r6, r6, #655360	; 0xa0000
   82f76:	f8d6 710c 	ldr.w	r7, [r6, #268]	; 0x10c
   82f7a:	f017 0701 	ands.w	r7, r7, #1
   82f7e:	f040 80c9 	bne.w	83114 <udd_ep_alloc+0x1b8>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   82f82:	f001 0c03 	and.w	ip, r1, #3
   82f86:	f1bc 0f01 	cmp.w	ip, #1
   82f8a:	f000 80c7 	beq.w	8311c <udd_ep_alloc+0x1c0>
   82f8e:	f1ac 0c02 	sub.w	ip, ip, #2
   82f92:	f1bc 0f01 	cmp.w	ip, #1
   82f96:	f200 80bd 	bhi.w	83114 <udd_ep_alloc+0x1b8>
	} else if (MaxEndpointSize & (0x3u << 11)) {
   82f9a:	f412 5ec0 	ands.w	lr, r2, #6144	; 0x1800
   82f9e:	f040 80b9 	bne.w	83114 <udd_ep_alloc+0x1b8>
	uint8_t nb_bank, bank, nb_tran = 0, i;
   82fa2:	46f4      	mov	ip, lr
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   82fa4:	f105 2640 	add.w	r6, r5, #1073758208	; 0x40004000
   82fa8:	f506 2620 	add.w	r6, r6, #655360	; 0xa0000
   82fac:	f8d6 3100 	ldr.w	r3, [r6, #256]	; 0x100
   82fb0:	f010 0f80 	tst.w	r0, #128	; 0x80
   82fb4:	bf18      	it	ne
   82fb6:	2708      	movne	r7, #8
   82fb8:	0109      	lsls	r1, r1, #4
   82fba:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   82fbe:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
   82fc2:	f001 0030 	and.w	r0, r1, #48	; 0x30
   82fc6:	f023 0303 	bic.w	r3, r3, #3
   82fca:	f080 80ba 	bcs.w	83142 <udd_ep_alloc+0x1e6>
   82fce:	2a08      	cmp	r2, #8
   82fd0:	bf38      	it	cc
   82fd2:	2208      	movcc	r2, #8
   82fd4:	0052      	lsls	r2, r2, #1
   82fd6:	3a01      	subs	r2, #1
   82fd8:	fab2 f282 	clz	r2, r2
   82fdc:	f1c2 021c 	rsb	r2, r2, #28
   82fe0:	f1be 0f00 	cmp.w	lr, #0
   82fe4:	d001      	beq.n	82fea <udd_ep_alloc+0x8e>
   82fe6:	ea40 200c 	orr.w	r0, r0, ip, lsl #8
   82fea:	4303      	orrs	r3, r0
   82fec:	433b      	orrs	r3, r7
   82fee:	4313      	orrs	r3, r2
   82ff0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   82ff4:	f8c6 3100 	str.w	r3, [r6, #256]	; 0x100
	if (!Is_udd_endpoint_mapped(ep)) {
   82ff8:	f8d6 3100 	ldr.w	r3, [r6, #256]	; 0x100
   82ffc:	2b00      	cmp	r3, #0
   82ffe:	f280 8089 	bge.w	83114 <udd_ep_alloc+0x1b8>
	udd_enable_endpoint(ep);
   83002:	f04f 0c01 	mov.w	ip, #1
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   83006:	2302      	movs	r3, #2
	ep_allocated = 0;
   83008:	2500      	movs	r5, #0
		if (Is_udd_endpoint_enabled(i)) {
   8300a:	4f5c      	ldr	r7, [pc, #368]	; (8317c <udd_ep_alloc+0x220>)
	udd_enable_endpoint(ep);
   8300c:	f8c6 c104 	str.w	ip, [r6, #260]	; 0x104
		if (Is_udd_endpoint_enabled(i)) {
   83010:	eb07 1043 	add.w	r0, r7, r3, lsl #5
   83014:	f8d0 110c 	ldr.w	r1, [r0, #268]	; 0x10c
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   83018:	1e5e      	subs	r6, r3, #1
		if (Is_udd_endpoint_enabled(i)) {
   8301a:	07c9      	lsls	r1, r1, #31
   8301c:	ea4f 1243 	mov.w	r2, r3, lsl #5
   83020:	d514      	bpl.n	8304c <udd_ep_alloc+0xf0>
   83022:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
   83026:	f502 2220 	add.w	r2, r2, #655360	; 0xa0000
			bank = udd_get_endpoint_bank(i);
   8302a:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   8302e:	005b      	lsls	r3, r3, #1
			udd_disable_endpoint(i);
   83030:	f8c0 c108 	str.w	ip, [r0, #264]	; 0x108
			ep_allocated |=  bank << (i * 2);
   83034:	f3c1 1181 	ubfx	r1, r1, #6, #2
   83038:	fa01 f303 	lsl.w	r3, r1, r3
			udd_configure_endpoint_bank(i, 0);
   8303c:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   83040:	432b      	orrs	r3, r5
			udd_configure_endpoint_bank(i, 0);
   83042:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
			ep_allocated |=  bank << (i * 2);
   83046:	b29d      	uxth	r5, r3
			udd_configure_endpoint_bank(i, 0);
   83048:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   8304c:	b2f3      	uxtb	r3, r6
   8304e:	429c      	cmp	r4, r3
   83050:	d9de      	bls.n	83010 <udd_ep_alloc+0xb4>
   83052:	4f4b      	ldr	r7, [pc, #300]	; (83180 <udd_ep_alloc+0x224>)
   83054:	eb04 0644 	add.w	r6, r4, r4, lsl #1
   83058:	b2e0      	uxtb	r0, r4
   8305a:	4686      	mov	lr, r0
   8305c:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
   83060:	e007      	b.n	83072 <udd_ep_alloc+0x116>
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   83062:	3401      	adds	r4, #1
   83064:	fa5f fe84 	uxtb.w	lr, r4
   83068:	f1be 0f02 	cmp.w	lr, #2
   8306c:	f106 0618 	add.w	r6, r6, #24
   83070:	d869      	bhi.n	83146 <udd_ep_alloc+0x1ea>
		udd_enable_endpoint_bank_autoswitch(i);
   83072:	f104 38ff 	add.w	r8, r4, #4294967295
		bank = (ep_allocated >> (i * 2)) & 0x03;
   83076:	0062      	lsls	r2, r4, #1
		bool b_restart = ptr_job->busy;
   83078:	eb08 0c48 	add.w	ip, r8, r8, lsl #1
		bank = (ep_allocated >> (i * 2)) & 0x03;
   8307c:	fa45 f202 	asr.w	r2, r5, r2
		bool b_restart = ptr_job->busy;
   83080:	eb07 0ccc 	add.w	ip, r7, ip, lsl #3
   83084:	ea4f 0348 	mov.w	r3, r8, lsl #1
		if (bank == 0) {
   83088:	f012 0203 	ands.w	r2, r2, #3
   8308c:	46f3      	mov	fp, lr
		bool b_restart = ptr_job->busy;
   8308e:	f10c 0910 	add.w	r9, ip, #16
   83092:	9303      	str	r3, [sp, #12]
		if (bank == 0) {
   83094:	d0e5      	beq.n	83062 <udd_ep_alloc+0x106>
   83096:	0163      	lsls	r3, r4, #5
   83098:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   8309c:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
		udd_configure_endpoint_bank(i, bank);
   830a0:	f8d3 1100 	ldr.w	r1, [r3, #256]	; 0x100
		bool b_restart = ptr_job->busy;
   830a4:	f89c 0014 	ldrb.w	r0, [ip, #20]
		udd_configure_endpoint_bank(i, bank);
   830a8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
   830ac:	ea41 1282 	orr.w	r2, r1, r2, lsl #6
   830b0:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
		udd_enable_endpoint(i);
   830b4:	2201      	movs	r2, #1
		ptr_job->busy = false;
   830b6:	4682      	mov	sl, r0
		udd_enable_endpoint(i);
   830b8:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   830bc:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
		ptr_job->busy = false;
   830c0:	f36f 0a00 	bfc	sl, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   830c4:	2a00      	cmp	r2, #0
		bool b_restart = ptr_job->busy;
   830c6:	f000 0001 	and.w	r0, r0, #1
		ptr_job->busy = false;
   830ca:	f889 a004 	strb.w	sl, [r9, #4]
		if (!Is_udd_endpoint_mapped(i)) {
   830ce:	da3f      	bge.n	83150 <udd_ep_alloc+0x1f4>
		udd_enable_endpoint_bank_autoswitch(i);
   830d0:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   830d4:	f042 0202 	orr.w	r2, r2, #2
   830d8:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		if (b_restart) {
   830dc:	2800      	cmp	r0, #0
   830de:	d0c0      	beq.n	83062 <udd_ep_alloc+0x106>
			ptr_job->buf_cnt -= ptr_job->buf_load;
   830e0:	e956 3203 	ldrd	r3, r2, [r6, #-12]
			b_restart = udd_ep_run(i,
   830e4:	f856 1c10 	ldr.w	r1, [r6, #-16]
   830e8:	f856 cc14 	ldr.w	ip, [r6, #-20]
   830ec:	4411      	add	r1, r2
			ptr_job->buf_cnt -= ptr_job->buf_load;
   830ee:	1a9a      	subs	r2, r3, r2
   830f0:	f846 2c0c 	str.w	r2, [r6, #-12]
			b_restart = udd_ep_run(i,
   830f4:	1acb      	subs	r3, r1, r3
   830f6:	4462      	add	r2, ip
					ptr_job->b_shortpacket,
   830f8:	f899 1004 	ldrb.w	r1, [r9, #4]
			b_restart = udd_ep_run(i,
   830fc:	f856 cc18 	ldr.w	ip, [r6, #-24]
   83100:	4670      	mov	r0, lr
   83102:	f8cd c000 	str.w	ip, [sp]
   83106:	f3c1 0140 	ubfx	r1, r1, #1, #1
   8310a:	f8df c078 	ldr.w	ip, [pc, #120]	; 83184 <udd_ep_alloc+0x228>
   8310e:	47e0      	blx	ip
			if (!b_restart) {
   83110:	2800      	cmp	r0, #0
   83112:	d1a6      	bne.n	83062 <udd_ep_alloc+0x106>
			return false;
   83114:	2000      	movs	r0, #0
}
   83116:	b005      	add	sp, #20
   83118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		b_iso_hbw = Is_udd_endpoint_high_bw_supported(ep);
   8311c:	2c00      	cmp	r4, #0
   8311e:	f43f af3c 	beq.w	82f9a <udd_ep_alloc+0x3e>
		switch(MaxEndpointSize & (0x3u << 11)) {
   83122:	f402 53c0 	and.w	r3, r2, #6144	; 0x1800
   83126:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   8312a:	d00e      	beq.n	8314a <udd_ep_alloc+0x1ee>
			nb_tran = 3;
   8312c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   83130:	bf08      	it	eq
   83132:	f04f 0c03 	moveq.w	ip, #3
		MaxEndpointSize &= ~(0x3u << 11);
   83136:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
   8313a:	f04f 0e01 	mov.w	lr, #1
   8313e:	b292      	uxth	r2, r2
   83140:	e730      	b.n	82fa4 <udd_ep_alloc+0x48>
   83142:	2207      	movs	r2, #7
   83144:	e74c      	b.n	82fe0 <udd_ep_alloc+0x84>
	return true;
   83146:	2001      	movs	r0, #1
   83148:	e7e5      	b.n	83116 <udd_ep_alloc+0x1ba>
		switch(MaxEndpointSize & (0x3u << 11)) {
   8314a:	f04f 0c02 	mov.w	ip, #2
   8314e:	e7f2      	b.n	83136 <udd_ep_alloc+0x1da>
			if (NULL == ptr_job->call_trans) {
   83150:	f8dc 3000 	ldr.w	r3, [ip]
   83154:	2b00      	cmp	r3, #0
   83156:	d0dd      	beq.n	83114 <udd_ep_alloc+0x1b8>
			if (Is_udd_endpoint_in(i)) {
   83158:	4a08      	ldr	r2, [pc, #32]	; (8317c <udd_ep_alloc+0x220>)
   8315a:	3408      	adds	r4, #8
   8315c:	0164      	lsls	r4, r4, #5
   8315e:	5912      	ldr	r2, [r2, r4]
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   83160:	2001      	movs	r0, #1
			if (Is_udd_endpoint_in(i)) {
   83162:	0712      	lsls	r2, r2, #28
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   83164:	9a03      	ldr	r2, [sp, #12]
				i |= USB_EP_DIR_IN;
   83166:	bf48      	it	mi
   83168:	f04e 0b80 	orrmi.w	fp, lr, #128	; 0x80
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   8316c:	4442      	add	r2, r8
   8316e:	eb07 07c2 	add.w	r7, r7, r2, lsl #3
   83172:	68f9      	ldr	r1, [r7, #12]
   83174:	465a      	mov	r2, fp
   83176:	4798      	blx	r3
   83178:	e7cc      	b.n	83114 <udd_ep_alloc+0x1b8>
   8317a:	bf00      	nop
   8317c:	400a4000 	.word	0x400a4000
   83180:	2000367c 	.word	0x2000367c
   83184:	00082e85 	.word	0x00082e85

00083188 <udd_ep_abort>:
	udd_endpoint_dma_set_control(ep_index, 0);
   83188:	2100      	movs	r1, #0
   8318a:	4b17      	ldr	r3, [pc, #92]	; (831e8 <udd_ep_abort+0x60>)
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   8318c:	f000 020f 	and.w	r2, r0, #15
	udd_endpoint_dma_set_control(ep_index, 0);
   83190:	eb03 1302 	add.w	r3, r3, r2, lsl #4
	if (ep & USB_EP_DIR_IN) {
   83194:	0600      	lsls	r0, r0, #24
{
   83196:	b410      	push	{r4}
	udd_endpoint_dma_set_control(ep_index, 0);
   83198:	6099      	str	r1, [r3, #8]
	if (ep & USB_EP_DIR_IN) {
   8319a:	d40a      	bmi.n	831b2 <udd_ep_abort+0x2a>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   8319c:	4c13      	ldr	r4, [pc, #76]	; (831ec <udd_ep_abort+0x64>)
   8319e:	4814      	ldr	r0, [pc, #80]	; (831f0 <udd_ep_abort+0x68>)
   831a0:	1e53      	subs	r3, r2, #1
   831a2:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   831a6:	eb00 00c3 	add.w	r0, r0, r3, lsl #3
   831aa:	2101      	movs	r1, #1
   831ac:	4623      	mov	r3, r4
}
   831ae:	bc10      	pop	{r4}
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   831b0:	4718      	bx	r3
		for(;udd_nb_busy_bank(ep_index);) {
   831b2:	0153      	lsls	r3, r2, #5
   831b4:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   831b8:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   831bc:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   831c0:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   831c4:	d0ea      	beq.n	8319c <udd_ep_abort+0x14>
			udd_kill_last_in_bank(ep_index);
   831c6:	f44f 7400 	mov.w	r4, #512	; 0x200
   831ca:	f503 7c8a 	add.w	ip, r3, #276	; 0x114
   831ce:	f8cc 4000 	str.w	r4, [ip]
			while(Is_udd_kill_last(ep_index));
   831d2:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   831d6:	0589      	lsls	r1, r1, #22
   831d8:	d4fb      	bmi.n	831d2 <udd_ep_abort+0x4a>
		for(;udd_nb_busy_bank(ep_index);) {
   831da:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   831de:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   831e2:	d1f4      	bne.n	831ce <udd_ep_abort+0x46>
   831e4:	e7da      	b.n	8319c <udd_ep_abort+0x14>
   831e6:	bf00      	nop
   831e8:	400a4300 	.word	0x400a4300
   831ec:	00081efd 	.word	0x00081efd
   831f0:	2000367c 	.word	0x2000367c

000831f4 <udd_test_mode_j>:
	udd_enable_hs_test_mode();
   831f4:	4a07      	ldr	r2, [pc, #28]	; (83214 <udd_test_mode_j+0x20>)
   831f6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   831fa:	f023 0303 	bic.w	r3, r3, #3
   831fe:	f043 0302 	orr.w	r3, r3, #2
   83202:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_j();
   83206:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   8320a:	f043 0304 	orr.w	r3, r3, #4
   8320e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   83212:	4770      	bx	lr
   83214:	400a4000 	.word	0x400a4000

00083218 <udd_test_mode_k>:
	udd_enable_hs_test_mode();
   83218:	4a07      	ldr	r2, [pc, #28]	; (83238 <udd_test_mode_k+0x20>)
   8321a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   8321e:	f023 0303 	bic.w	r3, r3, #3
   83222:	f043 0302 	orr.w	r3, r3, #2
   83226:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_k();
   8322a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   8322e:	f043 0308 	orr.w	r3, r3, #8
   83232:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   83236:	4770      	bx	lr
   83238:	400a4000 	.word	0x400a4000

0008323c <udd_test_mode_se0_nak>:
	udd_enable_hs_test_mode();
   8323c:	4a04      	ldr	r2, [pc, #16]	; (83250 <udd_test_mode_se0_nak+0x14>)
   8323e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   83242:	f023 0303 	bic.w	r3, r3, #3
   83246:	f043 0302 	orr.w	r3, r3, #2
   8324a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   8324e:	4770      	bx	lr
   83250:	400a4000 	.word	0x400a4000

00083254 <udd_test_mode_packet>:
{
   83254:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83258:	b08f      	sub	sp, #60	; 0x3c
	const uint8_t test_packet[] = {
   8325a:	466e      	mov	r6, sp
	udd_disable_endpoint(0);
   8325c:	f04f 0901 	mov.w	r9, #1
	udd_enable_hs_test_mode_packet();
   83260:	46ec      	mov	ip, sp
	const uint8_t test_packet[] = {
   83262:	4f22      	ldr	r7, [pc, #136]	; (832ec <udd_test_mode_packet+0x98>)
	udd_disable_endpoint(0);
   83264:	f8df 8088 	ldr.w	r8, [pc, #136]	; 832f0 <udd_test_mode_packet+0x9c>
	const uint8_t test_packet[] = {
   83268:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   8326a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   8326c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   8326e:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   83270:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
   83272:	c60f      	stmia	r6!, {r0, r1, r2, r3}
   83274:	e897 0003 	ldmia.w	r7, {r0, r1}
   83278:	f846 0b04 	str.w	r0, [r6], #4
   8327c:	7031      	strb	r1, [r6, #0]
	udd_disable_endpoint(0);
   8327e:	f8c8 9108 	str.w	r9, [r8, #264]	; 0x108
	udd_configure_endpoint(0, // endpoint number: 0
   83282:	f8d8 3100 	ldr.w	r3, [r8, #256]	; 0x100
   83286:	f1cc 5400 	rsb	r4, ip, #536870912	; 0x20000000
   8328a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   8328e:	f023 0303 	bic.w	r3, r3, #3
   83292:	f043 036b 	orr.w	r3, r3, #107	; 0x6b
   83296:	f8c8 3100 	str.w	r3, [r8, #256]	; 0x100
	udd_enable_endpoint(0);
   8329a:	f8c8 9104 	str.w	r9, [r8, #260]	; 0x104
	udd_enable_hs_test_mode();
   8329e:	f8d8 30e0 	ldr.w	r3, [r8, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   832a2:	f04f 0e00 	mov.w	lr, #0
	udd_enable_hs_test_mode();
   832a6:	f023 0303 	bic.w	r3, r3, #3
   832aa:	f043 0302 	orr.w	r3, r3, #2
   832ae:	f8c8 30e0 	str.w	r3, [r8, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   832b2:	f8d8 30e0 	ldr.w	r3, [r8, #224]	; 0xe0
   832b6:	ad0d      	add	r5, sp, #52	; 0x34
   832b8:	f043 0310 	orr.w	r3, r3, #16
   832bc:	f504 14c0 	add.w	r4, r4, #1572864	; 0x180000
   832c0:	f8c8 30e0 	str.w	r3, [r8, #224]	; 0xe0
	for (i = 0; i < sizeof(test_packet); i++) {
   832c4:	e001      	b.n	832ca <udd_test_mode_packet+0x76>
		*ptr_dest++ = *ptr_src++;
   832c6:	f81c ef01 	ldrb.w	lr, [ip, #1]!
	for (i = 0; i < sizeof(test_packet); i++) {
   832ca:	45ac      	cmp	ip, r5
		*ptr_dest++ = *ptr_src++;
   832cc:	f804 e00c 	strb.w	lr, [r4, ip]
	for (i = 0; i < sizeof(test_packet); i++) {
   832d0:	d1f9      	bne.n	832c6 <udd_test_mode_packet+0x72>
	udd_ack_in_send(0);
   832d2:	f44f 6180 	mov.w	r1, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   832d6:	f44f 6200 	mov.w	r2, #2048	; 0x800
	udd_ack_in_send(0);
   832da:	4b05      	ldr	r3, [pc, #20]	; (832f0 <udd_test_mode_packet+0x9c>)
   832dc:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   832e0:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
}
   832e4:	b00f      	add	sp, #60	; 0x3c
   832e6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   832ea:	bf00      	nop
   832ec:	0008a34c 	.word	0x0008a34c
   832f0:	400a4000 	.word	0x400a4000

000832f4 <usart_write>:
 *
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
   832f4:	4603      	mov	r3, r0
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   832f6:	6942      	ldr	r2, [r0, #20]
   832f8:	0792      	lsls	r2, r2, #30
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   832fa:	bf43      	ittte	mi
   832fc:	f3c1 0108 	ubfxmi	r1, r1, #0, #9
	return 0;
   83300:	2000      	movmi	r0, #0
	p_usart->US_THR = US_THR_TXCHR(c);
   83302:	61d9      	strmi	r1, [r3, #28]
		return 1;
   83304:	2001      	movpl	r0, #1
}
   83306:	4770      	bx	lr

00083308 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   83308:	6943      	ldr	r3, [r0, #20]
   8330a:	07db      	lsls	r3, r3, #31
   8330c:	d505      	bpl.n	8331a <usart_read+0x12>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   8330e:	6983      	ldr	r3, [r0, #24]

	return 0;
   83310:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   83312:	f3c3 0308 	ubfx	r3, r3, #0, #9
   83316:	600b      	str	r3, [r1, #0]
	return 0;
   83318:	4770      	bx	lr
		return 1;
   8331a:	2001      	movs	r0, #1
}
   8331c:	4770      	bx	lr
   8331e:	bf00      	nop

00083320 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   83320:	3801      	subs	r0, #1
   83322:	2802      	cmp	r0, #2
   83324:	d81a      	bhi.n	8335c <_write+0x3c>
		return -1;
	}

	for (; len != 0; --len) {
   83326:	b1da      	cbz	r2, 83360 <_write+0x40>
{
   83328:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8332c:	460d      	mov	r5, r1
	for (; len != 0; --len) {
   8332e:	4614      	mov	r4, r2
   83330:	4f0c      	ldr	r7, [pc, #48]	; (83364 <_write+0x44>)
   83332:	f8df 8034 	ldr.w	r8, [pc, #52]	; 83368 <_write+0x48>
   83336:	1c56      	adds	r6, r2, #1
   83338:	e001      	b.n	8333e <_write+0x1e>
   8333a:	3c01      	subs	r4, #1
   8333c:	d00b      	beq.n	83356 <_write+0x36>
		if (ptr_put(stdio_base, *ptr++) < 0) {
   8333e:	6838      	ldr	r0, [r7, #0]
   83340:	f8d8 3000 	ldr.w	r3, [r8]
   83344:	f815 1b01 	ldrb.w	r1, [r5], #1
   83348:	4798      	blx	r3
   8334a:	2800      	cmp	r0, #0
   8334c:	eba6 0204 	sub.w	r2, r6, r4
   83350:	daf3      	bge.n	8333a <_write+0x1a>
		return -1;
   83352:	f04f 32ff 	mov.w	r2, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
   83356:	4610      	mov	r0, r2
   83358:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   8335c:	f04f 32ff 	mov.w	r2, #4294967295
}
   83360:	4610      	mov	r0, r2
   83362:	4770      	bx	lr
   83364:	200036c8 	.word	0x200036c8
   83368:	200036c4 	.word	0x200036c4

0008336c <__libc_init_array>:
   8336c:	b570      	push	{r4, r5, r6, lr}
   8336e:	4e0d      	ldr	r6, [pc, #52]	; (833a4 <__libc_init_array+0x38>)
   83370:	4d0d      	ldr	r5, [pc, #52]	; (833a8 <__libc_init_array+0x3c>)
   83372:	1b76      	subs	r6, r6, r5
   83374:	10b6      	asrs	r6, r6, #2
   83376:	d006      	beq.n	83386 <__libc_init_array+0x1a>
   83378:	2400      	movs	r4, #0
   8337a:	f855 3b04 	ldr.w	r3, [r5], #4
   8337e:	3401      	adds	r4, #1
   83380:	4798      	blx	r3
   83382:	42a6      	cmp	r6, r4
   83384:	d1f9      	bne.n	8337a <__libc_init_array+0xe>
   83386:	4e09      	ldr	r6, [pc, #36]	; (833ac <__libc_init_array+0x40>)
   83388:	4d09      	ldr	r5, [pc, #36]	; (833b0 <__libc_init_array+0x44>)
   8338a:	f007 f9f9 	bl	8a780 <_init>
   8338e:	1b76      	subs	r6, r6, r5
   83390:	10b6      	asrs	r6, r6, #2
   83392:	d006      	beq.n	833a2 <__libc_init_array+0x36>
   83394:	2400      	movs	r4, #0
   83396:	f855 3b04 	ldr.w	r3, [r5], #4
   8339a:	3401      	adds	r4, #1
   8339c:	4798      	blx	r3
   8339e:	42a6      	cmp	r6, r4
   833a0:	d1f9      	bne.n	83396 <__libc_init_array+0x2a>
   833a2:	bd70      	pop	{r4, r5, r6, pc}
   833a4:	0008a78c 	.word	0x0008a78c
   833a8:	0008a78c 	.word	0x0008a78c
   833ac:	0008a794 	.word	0x0008a794
   833b0:	0008a78c 	.word	0x0008a78c

000833b4 <iprintf>:
   833b4:	b40f      	push	{r0, r1, r2, r3}
   833b6:	b500      	push	{lr}
   833b8:	4a07      	ldr	r2, [pc, #28]	; (833d8 <iprintf+0x24>)
   833ba:	b083      	sub	sp, #12
   833bc:	ab04      	add	r3, sp, #16
   833be:	6810      	ldr	r0, [r2, #0]
   833c0:	f853 2b04 	ldr.w	r2, [r3], #4
   833c4:	6881      	ldr	r1, [r0, #8]
   833c6:	9301      	str	r3, [sp, #4]
   833c8:	f001 ffc2 	bl	85350 <_vfiprintf_r>
   833cc:	b003      	add	sp, #12
   833ce:	f85d eb04 	ldr.w	lr, [sp], #4
   833d2:	b004      	add	sp, #16
   833d4:	4770      	bx	lr
   833d6:	bf00      	nop
   833d8:	200003ac 	.word	0x200003ac

000833dc <memcpy>:
   833dc:	4684      	mov	ip, r0
   833de:	ea41 0300 	orr.w	r3, r1, r0
   833e2:	f013 0303 	ands.w	r3, r3, #3
   833e6:	d149      	bne.n	8347c <memcpy+0xa0>
   833e8:	3a40      	subs	r2, #64	; 0x40
   833ea:	d323      	bcc.n	83434 <memcpy+0x58>
   833ec:	680b      	ldr	r3, [r1, #0]
   833ee:	6003      	str	r3, [r0, #0]
   833f0:	684b      	ldr	r3, [r1, #4]
   833f2:	6043      	str	r3, [r0, #4]
   833f4:	688b      	ldr	r3, [r1, #8]
   833f6:	6083      	str	r3, [r0, #8]
   833f8:	68cb      	ldr	r3, [r1, #12]
   833fa:	60c3      	str	r3, [r0, #12]
   833fc:	690b      	ldr	r3, [r1, #16]
   833fe:	6103      	str	r3, [r0, #16]
   83400:	694b      	ldr	r3, [r1, #20]
   83402:	6143      	str	r3, [r0, #20]
   83404:	698b      	ldr	r3, [r1, #24]
   83406:	6183      	str	r3, [r0, #24]
   83408:	69cb      	ldr	r3, [r1, #28]
   8340a:	61c3      	str	r3, [r0, #28]
   8340c:	6a0b      	ldr	r3, [r1, #32]
   8340e:	6203      	str	r3, [r0, #32]
   83410:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83412:	6243      	str	r3, [r0, #36]	; 0x24
   83414:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83416:	6283      	str	r3, [r0, #40]	; 0x28
   83418:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   8341a:	62c3      	str	r3, [r0, #44]	; 0x2c
   8341c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8341e:	6303      	str	r3, [r0, #48]	; 0x30
   83420:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83422:	6343      	str	r3, [r0, #52]	; 0x34
   83424:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83426:	6383      	str	r3, [r0, #56]	; 0x38
   83428:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   8342a:	63c3      	str	r3, [r0, #60]	; 0x3c
   8342c:	3040      	adds	r0, #64	; 0x40
   8342e:	3140      	adds	r1, #64	; 0x40
   83430:	3a40      	subs	r2, #64	; 0x40
   83432:	d2db      	bcs.n	833ec <memcpy+0x10>
   83434:	3230      	adds	r2, #48	; 0x30
   83436:	d30b      	bcc.n	83450 <memcpy+0x74>
   83438:	680b      	ldr	r3, [r1, #0]
   8343a:	6003      	str	r3, [r0, #0]
   8343c:	684b      	ldr	r3, [r1, #4]
   8343e:	6043      	str	r3, [r0, #4]
   83440:	688b      	ldr	r3, [r1, #8]
   83442:	6083      	str	r3, [r0, #8]
   83444:	68cb      	ldr	r3, [r1, #12]
   83446:	60c3      	str	r3, [r0, #12]
   83448:	3010      	adds	r0, #16
   8344a:	3110      	adds	r1, #16
   8344c:	3a10      	subs	r2, #16
   8344e:	d2f3      	bcs.n	83438 <memcpy+0x5c>
   83450:	320c      	adds	r2, #12
   83452:	d305      	bcc.n	83460 <memcpy+0x84>
   83454:	f851 3b04 	ldr.w	r3, [r1], #4
   83458:	f840 3b04 	str.w	r3, [r0], #4
   8345c:	3a04      	subs	r2, #4
   8345e:	d2f9      	bcs.n	83454 <memcpy+0x78>
   83460:	3204      	adds	r2, #4
   83462:	d008      	beq.n	83476 <memcpy+0x9a>
   83464:	07d2      	lsls	r2, r2, #31
   83466:	bf1c      	itt	ne
   83468:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8346c:	f800 3b01 	strbne.w	r3, [r0], #1
   83470:	d301      	bcc.n	83476 <memcpy+0x9a>
   83472:	880b      	ldrh	r3, [r1, #0]
   83474:	8003      	strh	r3, [r0, #0]
   83476:	4660      	mov	r0, ip
   83478:	4770      	bx	lr
   8347a:	bf00      	nop
   8347c:	2a08      	cmp	r2, #8
   8347e:	d313      	bcc.n	834a8 <memcpy+0xcc>
   83480:	078b      	lsls	r3, r1, #30
   83482:	d0b1      	beq.n	833e8 <memcpy+0xc>
   83484:	f010 0303 	ands.w	r3, r0, #3
   83488:	d0ae      	beq.n	833e8 <memcpy+0xc>
   8348a:	f1c3 0304 	rsb	r3, r3, #4
   8348e:	1ad2      	subs	r2, r2, r3
   83490:	07db      	lsls	r3, r3, #31
   83492:	bf1c      	itt	ne
   83494:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83498:	f800 3b01 	strbne.w	r3, [r0], #1
   8349c:	d3a4      	bcc.n	833e8 <memcpy+0xc>
   8349e:	f831 3b02 	ldrh.w	r3, [r1], #2
   834a2:	f820 3b02 	strh.w	r3, [r0], #2
   834a6:	e79f      	b.n	833e8 <memcpy+0xc>
   834a8:	3a04      	subs	r2, #4
   834aa:	d3d9      	bcc.n	83460 <memcpy+0x84>
   834ac:	3a01      	subs	r2, #1
   834ae:	f811 3b01 	ldrb.w	r3, [r1], #1
   834b2:	f800 3b01 	strb.w	r3, [r0], #1
   834b6:	d2f9      	bcs.n	834ac <memcpy+0xd0>
   834b8:	780b      	ldrb	r3, [r1, #0]
   834ba:	7003      	strb	r3, [r0, #0]
   834bc:	784b      	ldrb	r3, [r1, #1]
   834be:	7043      	strb	r3, [r0, #1]
   834c0:	788b      	ldrb	r3, [r1, #2]
   834c2:	7083      	strb	r3, [r0, #2]
   834c4:	4660      	mov	r0, ip
   834c6:	4770      	bx	lr

000834c8 <memset>:
   834c8:	0783      	lsls	r3, r0, #30
   834ca:	b530      	push	{r4, r5, lr}
   834cc:	d048      	beq.n	83560 <memset+0x98>
   834ce:	1e54      	subs	r4, r2, #1
   834d0:	2a00      	cmp	r2, #0
   834d2:	d03f      	beq.n	83554 <memset+0x8c>
   834d4:	4603      	mov	r3, r0
   834d6:	b2ca      	uxtb	r2, r1
   834d8:	e001      	b.n	834de <memset+0x16>
   834da:	3c01      	subs	r4, #1
   834dc:	d33a      	bcc.n	83554 <memset+0x8c>
   834de:	f803 2b01 	strb.w	r2, [r3], #1
   834e2:	079d      	lsls	r5, r3, #30
   834e4:	d1f9      	bne.n	834da <memset+0x12>
   834e6:	2c03      	cmp	r4, #3
   834e8:	d92d      	bls.n	83546 <memset+0x7e>
   834ea:	b2cd      	uxtb	r5, r1
   834ec:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   834f0:	2c0f      	cmp	r4, #15
   834f2:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   834f6:	d936      	bls.n	83566 <memset+0x9e>
   834f8:	f1a4 0210 	sub.w	r2, r4, #16
   834fc:	f022 0c0f 	bic.w	ip, r2, #15
   83500:	f103 0e20 	add.w	lr, r3, #32
   83504:	44e6      	add	lr, ip
   83506:	ea4f 1c12 	mov.w	ip, r2, lsr #4
   8350a:	f103 0210 	add.w	r2, r3, #16
   8350e:	e942 5504 	strd	r5, r5, [r2, #-16]
   83512:	e942 5502 	strd	r5, r5, [r2, #-8]
   83516:	3210      	adds	r2, #16
   83518:	4572      	cmp	r2, lr
   8351a:	d1f8      	bne.n	8350e <memset+0x46>
   8351c:	f10c 0201 	add.w	r2, ip, #1
   83520:	f014 0f0c 	tst.w	r4, #12
   83524:	eb03 1202 	add.w	r2, r3, r2, lsl #4
   83528:	f004 0c0f 	and.w	ip, r4, #15
   8352c:	d013      	beq.n	83556 <memset+0x8e>
   8352e:	f1ac 0304 	sub.w	r3, ip, #4
   83532:	f023 0303 	bic.w	r3, r3, #3
   83536:	3304      	adds	r3, #4
   83538:	4413      	add	r3, r2
   8353a:	f842 5b04 	str.w	r5, [r2], #4
   8353e:	4293      	cmp	r3, r2
   83540:	d1fb      	bne.n	8353a <memset+0x72>
   83542:	f00c 0403 	and.w	r4, ip, #3
   83546:	b12c      	cbz	r4, 83554 <memset+0x8c>
   83548:	b2ca      	uxtb	r2, r1
   8354a:	441c      	add	r4, r3
   8354c:	f803 2b01 	strb.w	r2, [r3], #1
   83550:	429c      	cmp	r4, r3
   83552:	d1fb      	bne.n	8354c <memset+0x84>
   83554:	bd30      	pop	{r4, r5, pc}
   83556:	4664      	mov	r4, ip
   83558:	4613      	mov	r3, r2
   8355a:	2c00      	cmp	r4, #0
   8355c:	d1f4      	bne.n	83548 <memset+0x80>
   8355e:	e7f9      	b.n	83554 <memset+0x8c>
   83560:	4603      	mov	r3, r0
   83562:	4614      	mov	r4, r2
   83564:	e7bf      	b.n	834e6 <memset+0x1e>
   83566:	461a      	mov	r2, r3
   83568:	46a4      	mov	ip, r4
   8356a:	e7e0      	b.n	8352e <memset+0x66>

0008356c <setbuf>:
   8356c:	2900      	cmp	r1, #0
   8356e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83572:	bf0c      	ite	eq
   83574:	2202      	moveq	r2, #2
   83576:	2200      	movne	r2, #0
   83578:	f000 b800 	b.w	8357c <setvbuf>

0008357c <setvbuf>:
   8357c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83580:	4c69      	ldr	r4, [pc, #420]	; (83728 <setvbuf+0x1ac>)
   83582:	460e      	mov	r6, r1
   83584:	f8d4 8000 	ldr.w	r8, [r4]
   83588:	4617      	mov	r7, r2
   8358a:	4604      	mov	r4, r0
   8358c:	461d      	mov	r5, r3
   8358e:	b083      	sub	sp, #12
   83590:	f1b8 0f00 	cmp.w	r8, #0
   83594:	d003      	beq.n	8359e <setvbuf+0x22>
   83596:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   8359a:	2b00      	cmp	r3, #0
   8359c:	d077      	beq.n	8368e <setvbuf+0x112>
   8359e:	2f02      	cmp	r7, #2
   835a0:	d005      	beq.n	835ae <setvbuf+0x32>
   835a2:	2f01      	cmp	r7, #1
   835a4:	f200 80ac 	bhi.w	83700 <setvbuf+0x184>
   835a8:	2d00      	cmp	r5, #0
   835aa:	f2c0 80a9 	blt.w	83700 <setvbuf+0x184>
   835ae:	6e63      	ldr	r3, [r4, #100]	; 0x64
   835b0:	07da      	lsls	r2, r3, #31
   835b2:	d552      	bpl.n	8365a <setvbuf+0xde>
   835b4:	4621      	mov	r1, r4
   835b6:	4640      	mov	r0, r8
   835b8:	f003 fee2 	bl	87380 <_fflush_r>
   835bc:	6b21      	ldr	r1, [r4, #48]	; 0x30
   835be:	b141      	cbz	r1, 835d2 <setvbuf+0x56>
   835c0:	f104 0340 	add.w	r3, r4, #64	; 0x40
   835c4:	4299      	cmp	r1, r3
   835c6:	d002      	beq.n	835ce <setvbuf+0x52>
   835c8:	4640      	mov	r0, r8
   835ca:	f004 f889 	bl	876e0 <_free_r>
   835ce:	2300      	movs	r3, #0
   835d0:	6323      	str	r3, [r4, #48]	; 0x30
   835d2:	2300      	movs	r3, #0
   835d4:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   835d8:	61a3      	str	r3, [r4, #24]
   835da:	f01c 0f80 	tst.w	ip, #128	; 0x80
   835de:	6063      	str	r3, [r4, #4]
   835e0:	d164      	bne.n	836ac <setvbuf+0x130>
   835e2:	f42c 6c4a 	bic.w	ip, ip, #3232	; 0xca0
   835e6:	f02c 0c03 	bic.w	ip, ip, #3
   835ea:	2f02      	cmp	r7, #2
   835ec:	f8a4 c00c 	strh.w	ip, [r4, #12]
   835f0:	d06a      	beq.n	836c8 <setvbuf+0x14c>
   835f2:	ab01      	add	r3, sp, #4
   835f4:	4621      	mov	r1, r4
   835f6:	4640      	mov	r0, r8
   835f8:	466a      	mov	r2, sp
   835fa:	f004 fb8f 	bl	87d1c <__swhatbuf_r>
   835fe:	89a3      	ldrh	r3, [r4, #12]
   83600:	4318      	orrs	r0, r3
   83602:	81a0      	strh	r0, [r4, #12]
   83604:	2d00      	cmp	r5, #0
   83606:	d02f      	beq.n	83668 <setvbuf+0xec>
   83608:	2e00      	cmp	r6, #0
   8360a:	d02e      	beq.n	8366a <setvbuf+0xee>
   8360c:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   83610:	2b00      	cmp	r3, #0
   83612:	d038      	beq.n	83686 <setvbuf+0x10a>
   83614:	9b00      	ldr	r3, [sp, #0]
   83616:	e9c4 6504 	strd	r6, r5, [r4, #16]
   8361a:	42ab      	cmp	r3, r5
   8361c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83620:	6026      	str	r6, [r4, #0]
   83622:	bf1c      	itt	ne
   83624:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
   83628:	81a3      	strhne	r3, [r4, #12]
   8362a:	2f01      	cmp	r7, #1
   8362c:	bf04      	itt	eq
   8362e:	f043 0301 	orreq.w	r3, r3, #1
   83632:	81a3      	strheq	r3, [r4, #12]
   83634:	b29a      	uxth	r2, r3
   83636:	f013 0308 	ands.w	r3, r3, #8
   8363a:	d02c      	beq.n	83696 <setvbuf+0x11a>
   8363c:	07d1      	lsls	r1, r2, #31
   8363e:	d55d      	bpl.n	836fc <setvbuf+0x180>
   83640:	2100      	movs	r1, #0
   83642:	426d      	negs	r5, r5
   83644:	61a5      	str	r5, [r4, #24]
   83646:	6e65      	ldr	r5, [r4, #100]	; 0x64
   83648:	60a1      	str	r1, [r4, #8]
   8364a:	f015 0501 	ands.w	r5, r5, #1
   8364e:	d027      	beq.n	836a0 <setvbuf+0x124>
   83650:	2500      	movs	r5, #0
   83652:	4628      	mov	r0, r5
   83654:	b003      	add	sp, #12
   83656:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   8365a:	89a3      	ldrh	r3, [r4, #12]
   8365c:	059b      	lsls	r3, r3, #22
   8365e:	d4a9      	bmi.n	835b4 <setvbuf+0x38>
   83660:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83662:	f004 fae7 	bl	87c34 <__retarget_lock_acquire_recursive>
   83666:	e7a5      	b.n	835b4 <setvbuf+0x38>
   83668:	9d00      	ldr	r5, [sp, #0]
   8366a:	4628      	mov	r0, r5
   8366c:	f004 fb86 	bl	87d7c <malloc>
   83670:	4606      	mov	r6, r0
   83672:	2800      	cmp	r0, #0
   83674:	d047      	beq.n	83706 <setvbuf+0x18a>
   83676:	89a3      	ldrh	r3, [r4, #12]
   83678:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   8367c:	81a3      	strh	r3, [r4, #12]
   8367e:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   83682:	2b00      	cmp	r3, #0
   83684:	d1c6      	bne.n	83614 <setvbuf+0x98>
   83686:	4640      	mov	r0, r8
   83688:	f003 feae 	bl	873e8 <__sinit>
   8368c:	e7c2      	b.n	83614 <setvbuf+0x98>
   8368e:	4640      	mov	r0, r8
   83690:	f003 feaa 	bl	873e8 <__sinit>
   83694:	e783      	b.n	8359e <setvbuf+0x22>
   83696:	60a3      	str	r3, [r4, #8]
   83698:	6e65      	ldr	r5, [r4, #100]	; 0x64
   8369a:	f015 0501 	ands.w	r5, r5, #1
   8369e:	d1d7      	bne.n	83650 <setvbuf+0xd4>
   836a0:	0593      	lsls	r3, r2, #22
   836a2:	d524      	bpl.n	836ee <setvbuf+0x172>
   836a4:	4628      	mov	r0, r5
   836a6:	b003      	add	sp, #12
   836a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   836ac:	4640      	mov	r0, r8
   836ae:	6921      	ldr	r1, [r4, #16]
   836b0:	f004 f816 	bl	876e0 <_free_r>
   836b4:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   836b8:	2f02      	cmp	r7, #2
   836ba:	f42c 6c4a 	bic.w	ip, ip, #3232	; 0xca0
   836be:	f02c 0c03 	bic.w	ip, ip, #3
   836c2:	f8a4 c00c 	strh.w	ip, [r4, #12]
   836c6:	d194      	bne.n	835f2 <setvbuf+0x76>
   836c8:	2500      	movs	r5, #0
   836ca:	2100      	movs	r1, #0
   836cc:	2201      	movs	r2, #1
   836ce:	f104 0343 	add.w	r3, r4, #67	; 0x43
   836d2:	6023      	str	r3, [r4, #0]
   836d4:	6123      	str	r3, [r4, #16]
   836d6:	6e63      	ldr	r3, [r4, #100]	; 0x64
   836d8:	f04c 0c02 	orr.w	ip, ip, #2
   836dc:	07d8      	lsls	r0, r3, #31
   836de:	f8a4 c00c 	strh.w	ip, [r4, #12]
   836e2:	60a1      	str	r1, [r4, #8]
   836e4:	6162      	str	r2, [r4, #20]
   836e6:	d4dd      	bmi.n	836a4 <setvbuf+0x128>
   836e8:	f41c 7f00 	tst.w	ip, #512	; 0x200
   836ec:	d1da      	bne.n	836a4 <setvbuf+0x128>
   836ee:	6da0      	ldr	r0, [r4, #88]	; 0x58
   836f0:	f004 faa2 	bl	87c38 <__retarget_lock_release_recursive>
   836f4:	4628      	mov	r0, r5
   836f6:	b003      	add	sp, #12
   836f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   836fc:	60a5      	str	r5, [r4, #8]
   836fe:	e7cb      	b.n	83698 <setvbuf+0x11c>
   83700:	f04f 35ff 	mov.w	r5, #4294967295
   83704:	e7ce      	b.n	836a4 <setvbuf+0x128>
   83706:	f8dd 9000 	ldr.w	r9, [sp]
   8370a:	45a9      	cmp	r9, r5
   8370c:	d004      	beq.n	83718 <setvbuf+0x19c>
   8370e:	4648      	mov	r0, r9
   83710:	f004 fb34 	bl	87d7c <malloc>
   83714:	4606      	mov	r6, r0
   83716:	b920      	cbnz	r0, 83722 <setvbuf+0x1a6>
   83718:	f04f 35ff 	mov.w	r5, #4294967295
   8371c:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   83720:	e7d3      	b.n	836ca <setvbuf+0x14e>
   83722:	464d      	mov	r5, r9
   83724:	e7a7      	b.n	83676 <setvbuf+0xfa>
   83726:	bf00      	nop
   83728:	200003ac 	.word	0x200003ac

0008372c <sprintf>:
   8372c:	b40e      	push	{r1, r2, r3}
   8372e:	b530      	push	{r4, r5, lr}
   83730:	4604      	mov	r4, r0
   83732:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83736:	b09c      	sub	sp, #112	; 0x70
   83738:	4a0b      	ldr	r2, [pc, #44]	; (83768 <sprintf+0x3c>)
   8373a:	ab1f      	add	r3, sp, #124	; 0x7c
   8373c:	490b      	ldr	r1, [pc, #44]	; (8376c <sprintf+0x40>)
   8373e:	9205      	str	r2, [sp, #20]
   83740:	f853 2b04 	ldr.w	r2, [r3], #4
   83744:	6808      	ldr	r0, [r1, #0]
   83746:	a902      	add	r1, sp, #8
   83748:	e9cd 3401 	strd	r3, r4, [sp, #4]
   8374c:	9507      	str	r5, [sp, #28]
   8374e:	9504      	str	r5, [sp, #16]
   83750:	9406      	str	r4, [sp, #24]
   83752:	f000 f86f 	bl	83834 <_svfprintf_r>
   83756:	2200      	movs	r2, #0
   83758:	9b02      	ldr	r3, [sp, #8]
   8375a:	701a      	strb	r2, [r3, #0]
   8375c:	b01c      	add	sp, #112	; 0x70
   8375e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   83762:	b003      	add	sp, #12
   83764:	4770      	bx	lr
   83766:	bf00      	nop
   83768:	ffff0208 	.word	0xffff0208
   8376c:	200003ac 	.word	0x200003ac

00083770 <strlen>:
   83770:	f020 0103 	bic.w	r1, r0, #3
   83774:	f010 0003 	ands.w	r0, r0, #3
   83778:	f1c0 0000 	rsb	r0, r0, #0
   8377c:	f851 3b04 	ldr.w	r3, [r1], #4
   83780:	f100 0c04 	add.w	ip, r0, #4
   83784:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83788:	f06f 0200 	mvn.w	r2, #0
   8378c:	bf1c      	itt	ne
   8378e:	fa22 f20c 	lsrne.w	r2, r2, ip
   83792:	4313      	orrne	r3, r2
   83794:	f04f 0c01 	mov.w	ip, #1
   83798:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   8379c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   837a0:	eba3 020c 	sub.w	r2, r3, ip
   837a4:	ea22 0203 	bic.w	r2, r2, r3
   837a8:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   837ac:	bf04      	itt	eq
   837ae:	f851 3b04 	ldreq.w	r3, [r1], #4
   837b2:	3004      	addeq	r0, #4
   837b4:	d0f4      	beq.n	837a0 <strlen+0x30>
   837b6:	f1c2 0100 	rsb	r1, r2, #0
   837ba:	ea02 0201 	and.w	r2, r2, r1
   837be:	fab2 f282 	clz	r2, r2
   837c2:	f1c2 021f 	rsb	r2, r2, #31
   837c6:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   837ca:	4770      	bx	lr

000837cc <strncpy>:
   837cc:	b530      	push	{r4, r5, lr}
   837ce:	ea40 0401 	orr.w	r4, r0, r1
   837d2:	07a3      	lsls	r3, r4, #30
   837d4:	d122      	bne.n	8381c <strncpy+0x50>
   837d6:	2a03      	cmp	r2, #3
   837d8:	d920      	bls.n	8381c <strncpy+0x50>
   837da:	460b      	mov	r3, r1
   837dc:	4684      	mov	ip, r0
   837de:	4619      	mov	r1, r3
   837e0:	f853 5b04 	ldr.w	r5, [r3], #4
   837e4:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   837e8:	ea24 0405 	bic.w	r4, r4, r5
   837ec:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
   837f0:	d115      	bne.n	8381e <strncpy+0x52>
   837f2:	3a04      	subs	r2, #4
   837f4:	2a03      	cmp	r2, #3
   837f6:	4619      	mov	r1, r3
   837f8:	f84c 5b04 	str.w	r5, [ip], #4
   837fc:	d8ef      	bhi.n	837de <strncpy+0x12>
   837fe:	f101 3eff 	add.w	lr, r1, #4294967295
   83802:	b152      	cbz	r2, 8381a <strncpy+0x4e>
   83804:	4663      	mov	r3, ip
   83806:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   8380a:	1e54      	subs	r4, r2, #1
   8380c:	f803 1b01 	strb.w	r1, [r3], #1
   83810:	b141      	cbz	r1, 83824 <strncpy+0x58>
   83812:	4622      	mov	r2, r4
   83814:	469c      	mov	ip, r3
   83816:	2a00      	cmp	r2, #0
   83818:	d1f4      	bne.n	83804 <strncpy+0x38>
   8381a:	bd30      	pop	{r4, r5, pc}
   8381c:	4684      	mov	ip, r0
   8381e:	f101 3eff 	add.w	lr, r1, #4294967295
   83822:	e7ee      	b.n	83802 <strncpy+0x36>
   83824:	4462      	add	r2, ip
   83826:	2c00      	cmp	r4, #0
   83828:	d0f7      	beq.n	8381a <strncpy+0x4e>
   8382a:	f803 1b01 	strb.w	r1, [r3], #1
   8382e:	4293      	cmp	r3, r2
   83830:	d1fb      	bne.n	8382a <strncpy+0x5e>
   83832:	bd30      	pop	{r4, r5, pc}

00083834 <_svfprintf_r>:
   83834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83838:	b0d5      	sub	sp, #340	; 0x154
   8383a:	460c      	mov	r4, r1
   8383c:	910c      	str	r1, [sp, #48]	; 0x30
   8383e:	4691      	mov	r9, r2
   83840:	930e      	str	r3, [sp, #56]	; 0x38
   83842:	900a      	str	r0, [sp, #40]	; 0x28
   83844:	f004 f9ee 	bl	87c24 <_localeconv_r>
   83848:	6803      	ldr	r3, [r0, #0]
   8384a:	4618      	mov	r0, r3
   8384c:	9317      	str	r3, [sp, #92]	; 0x5c
   8384e:	f7ff ff8f 	bl	83770 <strlen>
   83852:	89a3      	ldrh	r3, [r4, #12]
   83854:	9016      	str	r0, [sp, #88]	; 0x58
   83856:	0619      	lsls	r1, r3, #24
   83858:	d503      	bpl.n	83862 <_svfprintf_r+0x2e>
   8385a:	6923      	ldr	r3, [r4, #16]
   8385c:	2b00      	cmp	r3, #0
   8385e:	f000 878f 	beq.w	84780 <_svfprintf_r+0xf4c>
   83862:	2400      	movs	r4, #0
   83864:	ab2b      	add	r3, sp, #172	; 0xac
   83866:	4622      	mov	r2, r4
   83868:	4698      	mov	r8, r3
   8386a:	464d      	mov	r5, r9
   8386c:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
   83870:	9328      	str	r3, [sp, #160]	; 0xa0
   83872:	9412      	str	r4, [sp, #72]	; 0x48
   83874:	2300      	movs	r3, #0
   83876:	2400      	movs	r4, #0
   83878:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   8387c:	782b      	ldrb	r3, [r5, #0]
   8387e:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
   83882:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
   83886:	9218      	str	r2, [sp, #96]	; 0x60
   83888:	9208      	str	r2, [sp, #32]
   8388a:	2b00      	cmp	r3, #0
   8388c:	f000 81ce 	beq.w	83c2c <_svfprintf_r+0x3f8>
   83890:	46aa      	mov	sl, r5
   83892:	e004      	b.n	8389e <_svfprintf_r+0x6a>
   83894:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
   83898:	2b00      	cmp	r3, #0
   8389a:	f000 8109 	beq.w	83ab0 <_svfprintf_r+0x27c>
   8389e:	2b25      	cmp	r3, #37	; 0x25
   838a0:	d1f8      	bne.n	83894 <_svfprintf_r+0x60>
   838a2:	ebba 0605 	subs.w	r6, sl, r5
   838a6:	f040 8107 	bne.w	83ab8 <_svfprintf_r+0x284>
   838aa:	f89a 3000 	ldrb.w	r3, [sl]
   838ae:	2b00      	cmp	r3, #0
   838b0:	f000 81bc 	beq.w	83c2c <_svfprintf_r+0x3f8>
   838b4:	2300      	movs	r3, #0
   838b6:	f04f 32ff 	mov.w	r2, #4294967295
   838ba:	f04f 092b 	mov.w	r9, #43	; 0x2b
   838be:	2420      	movs	r4, #32
   838c0:	461f      	mov	r7, r3
   838c2:	f89a 6001 	ldrb.w	r6, [sl, #1]
   838c6:	9207      	str	r2, [sp, #28]
   838c8:	f10a 0a01 	add.w	sl, sl, #1
   838cc:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   838d0:	9309      	str	r3, [sp, #36]	; 0x24
   838d2:	f10a 0a01 	add.w	sl, sl, #1
   838d6:	f1a6 0320 	sub.w	r3, r6, #32
   838da:	2b5a      	cmp	r3, #90	; 0x5a
   838dc:	f200 8120 	bhi.w	83b20 <_svfprintf_r+0x2ec>
   838e0:	e8df f013 	tbh	[pc, r3, lsl #1]
   838e4:	011e02ca 	.word	0x011e02ca
   838e8:	02c5011e 	.word	0x02c5011e
   838ec:	011e011e 	.word	0x011e011e
   838f0:	02a3011e 	.word	0x02a3011e
   838f4:	011e011e 	.word	0x011e011e
   838f8:	02f3006a 	.word	0x02f3006a
   838fc:	0247011e 	.word	0x0247011e
   83900:	011e02d9 	.word	0x011e02d9
   83904:	005b02d4 	.word	0x005b02d4
   83908:	005b005b 	.word	0x005b005b
   8390c:	005b005b 	.word	0x005b005b
   83910:	005b005b 	.word	0x005b005b
   83914:	005b005b 	.word	0x005b005b
   83918:	011e011e 	.word	0x011e011e
   8391c:	011e011e 	.word	0x011e011e
   83920:	011e011e 	.word	0x011e011e
   83924:	01b0011e 	.word	0x01b0011e
   83928:	020b011e 	.word	0x020b011e
   8392c:	01b0007a 	.word	0x01b0007a
   83930:	01b001b0 	.word	0x01b001b0
   83934:	011e011e 	.word	0x011e011e
   83938:	011e011e 	.word	0x011e011e
   8393c:	011e029e 	.word	0x011e029e
   83940:	00b6011e 	.word	0x00b6011e
   83944:	011e011e 	.word	0x011e011e
   83948:	0219011e 	.word	0x0219011e
   8394c:	024c011e 	.word	0x024c011e
   83950:	011e011e 	.word	0x011e011e
   83954:	011e073f 	.word	0x011e073f
   83958:	011e011e 	.word	0x011e011e
   8395c:	011e011e 	.word	0x011e011e
   83960:	011e011e 	.word	0x011e011e
   83964:	01b0011e 	.word	0x01b0011e
   83968:	020b011e 	.word	0x020b011e
   8396c:	01b0007c 	.word	0x01b0007c
   83970:	01b001b0 	.word	0x01b001b0
   83974:	007c0291 	.word	0x007c0291
   83978:	011e0075 	.word	0x011e0075
   8397c:	011e0284 	.word	0x011e0284
   83980:	00b80270 	.word	0x00b80270
   83984:	0075025e 	.word	0x0075025e
   83988:	0219011e 	.word	0x0219011e
   8398c:	071c0072 	.word	0x071c0072
   83990:	011e011e 	.word	0x011e011e
   83994:	011e071f 	.word	0x011e071f
   83998:	0072      	.short	0x0072
   8399a:	2200      	movs	r2, #0
   8399c:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   839a0:	f81a 6b01 	ldrb.w	r6, [sl], #1
   839a4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   839a8:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   839ac:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   839b0:	2b09      	cmp	r3, #9
   839b2:	d9f5      	bls.n	839a0 <_svfprintf_r+0x16c>
   839b4:	9209      	str	r2, [sp, #36]	; 0x24
   839b6:	e78e      	b.n	838d6 <_svfprintf_r+0xa2>
   839b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   839ba:	f853 2b04 	ldr.w	r2, [r3], #4
   839be:	2a00      	cmp	r2, #0
   839c0:	9209      	str	r2, [sp, #36]	; 0x24
   839c2:	930e      	str	r3, [sp, #56]	; 0x38
   839c4:	f2c0 81d2 	blt.w	83d6c <_svfprintf_r+0x538>
   839c8:	f89a 6000 	ldrb.w	r6, [sl]
   839cc:	e781      	b.n	838d2 <_svfprintf_r+0x9e>
   839ce:	f89a 6000 	ldrb.w	r6, [sl]
   839d2:	f047 0720 	orr.w	r7, r7, #32
   839d6:	e77c      	b.n	838d2 <_svfprintf_r+0x9e>
   839d8:	f047 0710 	orr.w	r7, r7, #16
   839dc:	06ba      	lsls	r2, r7, #26
   839de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   839e0:	f140 817d 	bpl.w	83cde <_svfprintf_r+0x4aa>
   839e4:	3307      	adds	r3, #7
   839e6:	f023 0307 	bic.w	r3, r3, #7
   839ea:	461a      	mov	r2, r3
   839ec:	685b      	ldr	r3, [r3, #4]
   839ee:	f852 4b08 	ldr.w	r4, [r2], #8
   839f2:	4699      	mov	r9, r3
   839f4:	920e      	str	r2, [sp, #56]	; 0x38
   839f6:	2b00      	cmp	r3, #0
   839f8:	f2c0 857f 	blt.w	844fa <_svfprintf_r+0xcc6>
   839fc:	9b07      	ldr	r3, [sp, #28]
   839fe:	3301      	adds	r3, #1
   83a00:	f001 8039 	beq.w	84a76 <_svfprintf_r+0x1242>
   83a04:	ea54 0309 	orrs.w	r3, r4, r9
   83a08:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
   83a0c:	f000 8505 	beq.w	8441a <_svfprintf_r+0xbe6>
   83a10:	2c0a      	cmp	r4, #10
   83a12:	f179 0300 	sbcs.w	r3, r9, #0
   83a16:	f080 8793 	bcs.w	84940 <_svfprintf_r+0x110c>
   83a1a:	2301      	movs	r3, #1
   83a1c:	465f      	mov	r7, fp
   83a1e:	3430      	adds	r4, #48	; 0x30
   83a20:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
   83a24:	930b      	str	r3, [sp, #44]	; 0x2c
   83a26:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83a2a:	9a07      	ldr	r2, [sp, #28]
   83a2c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83a2e:	2300      	movs	r3, #0
   83a30:	428a      	cmp	r2, r1
   83a32:	bfb8      	it	lt
   83a34:	460a      	movlt	r2, r1
   83a36:	9206      	str	r2, [sp, #24]
   83a38:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83a3c:	930d      	str	r3, [sp, #52]	; 0x34
   83a3e:	930f      	str	r3, [sp, #60]	; 0x3c
   83a40:	9313      	str	r3, [sp, #76]	; 0x4c
   83a42:	9310      	str	r3, [sp, #64]	; 0x40
   83a44:	2a00      	cmp	r2, #0
   83a46:	d07c      	beq.n	83b42 <_svfprintf_r+0x30e>
   83a48:	9b06      	ldr	r3, [sp, #24]
   83a4a:	3301      	adds	r3, #1
   83a4c:	9306      	str	r3, [sp, #24]
   83a4e:	e078      	b.n	83b42 <_svfprintf_r+0x30e>
   83a50:	f047 0710 	orr.w	r7, r7, #16
   83a54:	f017 0920 	ands.w	r9, r7, #32
   83a58:	f000 8132 	beq.w	83cc0 <_svfprintf_r+0x48c>
   83a5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83a5e:	3307      	adds	r3, #7
   83a60:	f023 0307 	bic.w	r3, r3, #7
   83a64:	f8d3 9004 	ldr.w	r9, [r3, #4]
   83a68:	f853 4b08 	ldr.w	r4, [r3], #8
   83a6c:	930e      	str	r3, [sp, #56]	; 0x38
   83a6e:	2300      	movs	r3, #0
   83a70:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   83a74:	2200      	movs	r2, #0
   83a76:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83a7a:	9a07      	ldr	r2, [sp, #28]
   83a7c:	1c51      	adds	r1, r2, #1
   83a7e:	f000 822a 	beq.w	83ed6 <_svfprintf_r+0x6a2>
   83a82:	ea54 0109 	orrs.w	r1, r4, r9
   83a86:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
   83a8a:	f040 8223 	bne.w	83ed4 <_svfprintf_r+0x6a0>
   83a8e:	2a00      	cmp	r2, #0
   83a90:	f041 802b 	bne.w	84aea <_svfprintf_r+0x12b6>
   83a94:	2b00      	cmp	r3, #0
   83a96:	f040 84c5 	bne.w	84424 <_svfprintf_r+0xbf0>
   83a9a:	f01b 0301 	ands.w	r3, fp, #1
   83a9e:	930b      	str	r3, [sp, #44]	; 0x2c
   83aa0:	f000 8554 	beq.w	8454c <_svfprintf_r+0xd18>
   83aa4:	2330      	movs	r3, #48	; 0x30
   83aa6:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83aaa:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
   83aae:	e7bc      	b.n	83a2a <_svfprintf_r+0x1f6>
   83ab0:	ebba 0605 	subs.w	r6, sl, r5
   83ab4:	f000 80ba 	beq.w	83c2c <_svfprintf_r+0x3f8>
   83ab8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   83aba:	e9c8 5600 	strd	r5, r6, [r8]
   83abe:	4433      	add	r3, r6
   83ac0:	932a      	str	r3, [sp, #168]	; 0xa8
   83ac2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83ac4:	3301      	adds	r3, #1
   83ac6:	2b07      	cmp	r3, #7
   83ac8:	9329      	str	r3, [sp, #164]	; 0xa4
   83aca:	dc05      	bgt.n	83ad8 <_svfprintf_r+0x2a4>
   83acc:	f108 0808 	add.w	r8, r8, #8
   83ad0:	9b08      	ldr	r3, [sp, #32]
   83ad2:	4433      	add	r3, r6
   83ad4:	9308      	str	r3, [sp, #32]
   83ad6:	e6e8      	b.n	838aa <_svfprintf_r+0x76>
   83ad8:	990c      	ldr	r1, [sp, #48]	; 0x30
   83ada:	980a      	ldr	r0, [sp, #40]	; 0x28
   83adc:	aa28      	add	r2, sp, #160	; 0xa0
   83ade:	f005 fb09 	bl	890f4 <__ssprint_r>
   83ae2:	b980      	cbnz	r0, 83b06 <_svfprintf_r+0x2d2>
   83ae4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   83ae8:	e7f2      	b.n	83ad0 <_svfprintf_r+0x29c>
   83aea:	990c      	ldr	r1, [sp, #48]	; 0x30
   83aec:	980a      	ldr	r0, [sp, #40]	; 0x28
   83aee:	aa28      	add	r2, sp, #160	; 0xa0
   83af0:	f005 fb00 	bl	890f4 <__ssprint_r>
   83af4:	2800      	cmp	r0, #0
   83af6:	f000 808a 	beq.w	83c0e <_svfprintf_r+0x3da>
   83afa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83afc:	b11b      	cbz	r3, 83b06 <_svfprintf_r+0x2d2>
   83afe:	990d      	ldr	r1, [sp, #52]	; 0x34
   83b00:	980a      	ldr	r0, [sp, #40]	; 0x28
   83b02:	f003 fded 	bl	876e0 <_free_r>
   83b06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83b08:	899b      	ldrh	r3, [r3, #12]
   83b0a:	f013 0f40 	tst.w	r3, #64	; 0x40
   83b0e:	9b08      	ldr	r3, [sp, #32]
   83b10:	bf18      	it	ne
   83b12:	f04f 33ff 	movne.w	r3, #4294967295
   83b16:	9308      	str	r3, [sp, #32]
   83b18:	9808      	ldr	r0, [sp, #32]
   83b1a:	b055      	add	sp, #340	; 0x154
   83b1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83b20:	2e00      	cmp	r6, #0
   83b22:	f000 8083 	beq.w	83c2c <_svfprintf_r+0x3f8>
   83b26:	2301      	movs	r3, #1
   83b28:	2200      	movs	r2, #0
   83b2a:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
   83b2e:	9306      	str	r3, [sp, #24]
   83b30:	ad3b      	add	r5, sp, #236	; 0xec
   83b32:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83b36:	930b      	str	r3, [sp, #44]	; 0x2c
   83b38:	920d      	str	r2, [sp, #52]	; 0x34
   83b3a:	9207      	str	r2, [sp, #28]
   83b3c:	920f      	str	r2, [sp, #60]	; 0x3c
   83b3e:	9213      	str	r2, [sp, #76]	; 0x4c
   83b40:	9210      	str	r2, [sp, #64]	; 0x40
   83b42:	f017 0302 	ands.w	r3, r7, #2
   83b46:	d002      	beq.n	83b4e <_svfprintf_r+0x31a>
   83b48:	9906      	ldr	r1, [sp, #24]
   83b4a:	3102      	adds	r1, #2
   83b4c:	9106      	str	r1, [sp, #24]
   83b4e:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
   83b52:	d107      	bne.n	83b64 <_svfprintf_r+0x330>
   83b54:	9909      	ldr	r1, [sp, #36]	; 0x24
   83b56:	9806      	ldr	r0, [sp, #24]
   83b58:	eba1 0900 	sub.w	r9, r1, r0
   83b5c:	f1b9 0f00 	cmp.w	r9, #0
   83b60:	f300 8336 	bgt.w	841d0 <_svfprintf_r+0x99c>
   83b64:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   83b66:	b182      	cbz	r2, 83b8a <_svfprintf_r+0x356>
   83b68:	2201      	movs	r2, #1
   83b6a:	f8c8 2004 	str.w	r2, [r8, #4]
   83b6e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   83b70:	3401      	adds	r4, #1
   83b72:	3201      	adds	r2, #1
   83b74:	f10d 0183 	add.w	r1, sp, #131	; 0x83
   83b78:	2a07      	cmp	r2, #7
   83b7a:	942a      	str	r4, [sp, #168]	; 0xa8
   83b7c:	9229      	str	r2, [sp, #164]	; 0xa4
   83b7e:	f8c8 1000 	str.w	r1, [r8]
   83b82:	f300 8369 	bgt.w	84258 <_svfprintf_r+0xa24>
   83b86:	f108 0808 	add.w	r8, r8, #8
   83b8a:	b17b      	cbz	r3, 83bac <_svfprintf_r+0x378>
   83b8c:	2302      	movs	r3, #2
   83b8e:	f8c8 3004 	str.w	r3, [r8, #4]
   83b92:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83b94:	3402      	adds	r4, #2
   83b96:	3301      	adds	r3, #1
   83b98:	aa21      	add	r2, sp, #132	; 0x84
   83b9a:	2b07      	cmp	r3, #7
   83b9c:	942a      	str	r4, [sp, #168]	; 0xa8
   83b9e:	9329      	str	r3, [sp, #164]	; 0xa4
   83ba0:	f8c8 2000 	str.w	r2, [r8]
   83ba4:	f300 836c 	bgt.w	84280 <_svfprintf_r+0xa4c>
   83ba8:	f108 0808 	add.w	r8, r8, #8
   83bac:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
   83bb0:	f000 822e 	beq.w	84010 <_svfprintf_r+0x7dc>
   83bb4:	9b07      	ldr	r3, [sp, #28]
   83bb6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   83bb8:	eba3 0b02 	sub.w	fp, r3, r2
   83bbc:	f1bb 0f00 	cmp.w	fp, #0
   83bc0:	f300 8271 	bgt.w	840a6 <_svfprintf_r+0x872>
   83bc4:	05fb      	lsls	r3, r7, #23
   83bc6:	f100 81c5 	bmi.w	83f54 <_svfprintf_r+0x720>
   83bca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83bcc:	f8c8 5000 	str.w	r5, [r8]
   83bd0:	441c      	add	r4, r3
   83bd2:	f8c8 3004 	str.w	r3, [r8, #4]
   83bd6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83bd8:	942a      	str	r4, [sp, #168]	; 0xa8
   83bda:	3301      	adds	r3, #1
   83bdc:	2b07      	cmp	r3, #7
   83bde:	9329      	str	r3, [sp, #164]	; 0xa4
   83be0:	f300 82ea 	bgt.w	841b8 <_svfprintf_r+0x984>
   83be4:	f108 0808 	add.w	r8, r8, #8
   83be8:	077b      	lsls	r3, r7, #29
   83bea:	d505      	bpl.n	83bf8 <_svfprintf_r+0x3c4>
   83bec:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83bee:	9a06      	ldr	r2, [sp, #24]
   83bf0:	1a9d      	subs	r5, r3, r2
   83bf2:	2d00      	cmp	r5, #0
   83bf4:	f300 8350 	bgt.w	84298 <_svfprintf_r+0xa64>
   83bf8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
   83bfc:	9906      	ldr	r1, [sp, #24]
   83bfe:	428a      	cmp	r2, r1
   83c00:	bfac      	ite	ge
   83c02:	189b      	addge	r3, r3, r2
   83c04:	185b      	addlt	r3, r3, r1
   83c06:	9308      	str	r3, [sp, #32]
   83c08:	2c00      	cmp	r4, #0
   83c0a:	f47f af6e 	bne.w	83aea <_svfprintf_r+0x2b6>
   83c0e:	2300      	movs	r3, #0
   83c10:	9329      	str	r3, [sp, #164]	; 0xa4
   83c12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83c14:	b11b      	cbz	r3, 83c1e <_svfprintf_r+0x3ea>
   83c16:	990d      	ldr	r1, [sp, #52]	; 0x34
   83c18:	980a      	ldr	r0, [sp, #40]	; 0x28
   83c1a:	f003 fd61 	bl	876e0 <_free_r>
   83c1e:	4655      	mov	r5, sl
   83c20:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   83c24:	782b      	ldrb	r3, [r5, #0]
   83c26:	2b00      	cmp	r3, #0
   83c28:	f47f ae32 	bne.w	83890 <_svfprintf_r+0x5c>
   83c2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   83c2e:	2b00      	cmp	r3, #0
   83c30:	f43f af69 	beq.w	83b06 <_svfprintf_r+0x2d2>
   83c34:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83c36:	980a      	ldr	r0, [sp, #40]	; 0x28
   83c38:	4621      	mov	r1, r4
   83c3a:	aa28      	add	r2, sp, #160	; 0xa0
   83c3c:	f005 fa5a 	bl	890f4 <__ssprint_r>
   83c40:	89a3      	ldrh	r3, [r4, #12]
   83c42:	e762      	b.n	83b0a <_svfprintf_r+0x2d6>
   83c44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83c46:	3307      	adds	r3, #7
   83c48:	f023 0207 	bic.w	r2, r3, #7
   83c4c:	e8f2 3402 	ldrd	r3, r4, [r2], #8
   83c50:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   83c54:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   83c58:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
   83c5c:	4699      	mov	r9, r3
   83c5e:	4618      	mov	r0, r3
   83c60:	920e      	str	r2, [sp, #56]	; 0x38
   83c62:	4621      	mov	r1, r4
   83c64:	f04f 32ff 	mov.w	r2, #4294967295
   83c68:	4bb6      	ldr	r3, [pc, #728]	; (83f44 <_svfprintf_r+0x710>)
   83c6a:	f006 f983 	bl	89f74 <__aeabi_dcmpun>
   83c6e:	2800      	cmp	r0, #0
   83c70:	f040 8496 	bne.w	845a0 <_svfprintf_r+0xd6c>
   83c74:	4648      	mov	r0, r9
   83c76:	4621      	mov	r1, r4
   83c78:	f04f 32ff 	mov.w	r2, #4294967295
   83c7c:	4bb1      	ldr	r3, [pc, #708]	; (83f44 <_svfprintf_r+0x710>)
   83c7e:	f006 f95b 	bl	89f38 <__aeabi_dcmple>
   83c82:	2800      	cmp	r0, #0
   83c84:	f040 848c 	bne.w	845a0 <_svfprintf_r+0xd6c>
   83c88:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   83c8c:	2200      	movs	r2, #0
   83c8e:	2300      	movs	r3, #0
   83c90:	f006 f948 	bl	89f24 <__aeabi_dcmplt>
   83c94:	2800      	cmp	r0, #0
   83c96:	f040 87a6 	bne.w	84be6 <_svfprintf_r+0x13b2>
   83c9a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83c9e:	2100      	movs	r1, #0
   83ca0:	2003      	movs	r0, #3
   83ca2:	4da9      	ldr	r5, [pc, #676]	; (83f48 <_svfprintf_r+0x714>)
   83ca4:	4ba9      	ldr	r3, [pc, #676]	; (83f4c <_svfprintf_r+0x718>)
   83ca6:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   83caa:	910d      	str	r1, [sp, #52]	; 0x34
   83cac:	9006      	str	r0, [sp, #24]
   83cae:	2e47      	cmp	r6, #71	; 0x47
   83cb0:	bfc8      	it	gt
   83cb2:	461d      	movgt	r5, r3
   83cb4:	9107      	str	r1, [sp, #28]
   83cb6:	900b      	str	r0, [sp, #44]	; 0x2c
   83cb8:	910f      	str	r1, [sp, #60]	; 0x3c
   83cba:	9113      	str	r1, [sp, #76]	; 0x4c
   83cbc:	9110      	str	r1, [sp, #64]	; 0x40
   83cbe:	e6c1      	b.n	83a44 <_svfprintf_r+0x210>
   83cc0:	f017 0310 	ands.w	r3, r7, #16
   83cc4:	f040 8462 	bne.w	8458c <_svfprintf_r+0xd58>
   83cc8:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   83ccc:	f000 877b 	beq.w	84bc6 <_svfprintf_r+0x1392>
   83cd0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83cd2:	4699      	mov	r9, r3
   83cd4:	f852 4b04 	ldr.w	r4, [r2], #4
   83cd8:	920e      	str	r2, [sp, #56]	; 0x38
   83cda:	b2a4      	uxth	r4, r4
   83cdc:	e6c7      	b.n	83a6e <_svfprintf_r+0x23a>
   83cde:	f853 4b04 	ldr.w	r4, [r3], #4
   83ce2:	930e      	str	r3, [sp, #56]	; 0x38
   83ce4:	06fb      	lsls	r3, r7, #27
   83ce6:	f100 8441 	bmi.w	8456c <_svfprintf_r+0xd38>
   83cea:	067d      	lsls	r5, r7, #25
   83cec:	f140 843b 	bpl.w	84566 <_svfprintf_r+0xd32>
   83cf0:	f344 39c0 	sbfx	r9, r4, #15, #1
   83cf4:	464b      	mov	r3, r9
   83cf6:	b224      	sxth	r4, r4
   83cf8:	e67d      	b.n	839f6 <_svfprintf_r+0x1c2>
   83cfa:	2001      	movs	r0, #1
   83cfc:	2200      	movs	r2, #0
   83cfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83d00:	9006      	str	r0, [sp, #24]
   83d02:	f853 1b04 	ldr.w	r1, [r3], #4
   83d06:	ad3b      	add	r5, sp, #236	; 0xec
   83d08:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83d0c:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
   83d10:	930e      	str	r3, [sp, #56]	; 0x38
   83d12:	900b      	str	r0, [sp, #44]	; 0x2c
   83d14:	e710      	b.n	83b38 <_svfprintf_r+0x304>
   83d16:	f04f 0900 	mov.w	r9, #0
   83d1a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   83d1c:	9b07      	ldr	r3, [sp, #28]
   83d1e:	f854 5b04 	ldr.w	r5, [r4], #4
   83d22:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   83d26:	2d00      	cmp	r5, #0
   83d28:	f000 86ee 	beq.w	84b08 <_svfprintf_r+0x12d4>
   83d2c:	1c5a      	adds	r2, r3, #1
   83d2e:	f000 8560 	beq.w	847f2 <_svfprintf_r+0xfbe>
   83d32:	461a      	mov	r2, r3
   83d34:	4649      	mov	r1, r9
   83d36:	4628      	mov	r0, r5
   83d38:	f004 faea 	bl	88310 <memchr>
   83d3c:	900d      	str	r0, [sp, #52]	; 0x34
   83d3e:	2800      	cmp	r0, #0
   83d40:	f001 809e 	beq.w	84e80 <_svfprintf_r+0x164c>
   83d44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83d46:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83d4a:	1b5b      	subs	r3, r3, r5
   83d4c:	930b      	str	r3, [sp, #44]	; 0x2c
   83d4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   83d52:	f8cd 901c 	str.w	r9, [sp, #28]
   83d56:	940e      	str	r4, [sp, #56]	; 0x38
   83d58:	9306      	str	r3, [sp, #24]
   83d5a:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   83d5e:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   83d62:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   83d66:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   83d6a:	e66b      	b.n	83a44 <_svfprintf_r+0x210>
   83d6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83d6e:	425b      	negs	r3, r3
   83d70:	9309      	str	r3, [sp, #36]	; 0x24
   83d72:	f89a 6000 	ldrb.w	r6, [sl]
   83d76:	f047 0704 	orr.w	r7, r7, #4
   83d7a:	e5aa      	b.n	838d2 <_svfprintf_r+0x9e>
   83d7c:	f047 0b10 	orr.w	fp, r7, #16
   83d80:	f01b 0920 	ands.w	r9, fp, #32
   83d84:	f000 83aa 	beq.w	844dc <_svfprintf_r+0xca8>
   83d88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83d8a:	3307      	adds	r3, #7
   83d8c:	f023 0307 	bic.w	r3, r3, #7
   83d90:	461a      	mov	r2, r3
   83d92:	f852 4b08 	ldr.w	r4, [r2], #8
   83d96:	f8d3 9004 	ldr.w	r9, [r3, #4]
   83d9a:	920e      	str	r2, [sp, #56]	; 0x38
   83d9c:	2301      	movs	r3, #1
   83d9e:	e669      	b.n	83a74 <_svfprintf_r+0x240>
   83da0:	2230      	movs	r2, #48	; 0x30
   83da2:	2678      	movs	r6, #120	; 0x78
   83da4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83da6:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   83daa:	f853 4b04 	ldr.w	r4, [r3], #4
   83dae:	4a68      	ldr	r2, [pc, #416]	; (83f50 <_svfprintf_r+0x71c>)
   83db0:	930e      	str	r3, [sp, #56]	; 0x38
   83db2:	f04f 0900 	mov.w	r9, #0
   83db6:	2302      	movs	r3, #2
   83db8:	f047 0b02 	orr.w	fp, r7, #2
   83dbc:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   83dc0:	9218      	str	r2, [sp, #96]	; 0x60
   83dc2:	e657      	b.n	83a74 <_svfprintf_r+0x240>
   83dc4:	06bd      	lsls	r5, r7, #26
   83dc6:	f100 83d6 	bmi.w	84576 <_svfprintf_r+0xd42>
   83dca:	06fc      	lsls	r4, r7, #27
   83dcc:	f100 8693 	bmi.w	84af6 <_svfprintf_r+0x12c2>
   83dd0:	0678      	lsls	r0, r7, #25
   83dd2:	f100 875d 	bmi.w	84c90 <_svfprintf_r+0x145c>
   83dd6:	05b9      	lsls	r1, r7, #22
   83dd8:	f140 868d 	bpl.w	84af6 <_svfprintf_r+0x12c2>
   83ddc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83dde:	9908      	ldr	r1, [sp, #32]
   83de0:	f853 2b04 	ldr.w	r2, [r3], #4
   83de4:	4655      	mov	r5, sl
   83de6:	7011      	strb	r1, [r2, #0]
   83de8:	930e      	str	r3, [sp, #56]	; 0x38
   83dea:	e71b      	b.n	83c24 <_svfprintf_r+0x3f0>
   83dec:	f89a 6000 	ldrb.w	r6, [sl]
   83df0:	2e6c      	cmp	r6, #108	; 0x6c
   83df2:	bf03      	ittte	eq
   83df4:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   83df8:	f047 0720 	orreq.w	r7, r7, #32
   83dfc:	f10a 0a01 	addeq.w	sl, sl, #1
   83e00:	f047 0710 	orrne.w	r7, r7, #16
   83e04:	e565      	b.n	838d2 <_svfprintf_r+0x9e>
   83e06:	f89a 6000 	ldrb.w	r6, [sl]
   83e0a:	2e68      	cmp	r6, #104	; 0x68
   83e0c:	bf03      	ittte	eq
   83e0e:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   83e12:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
   83e16:	f10a 0a01 	addeq.w	sl, sl, #1
   83e1a:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
   83e1e:	e558      	b.n	838d2 <_svfprintf_r+0x9e>
   83e20:	f89a 6000 	ldrb.w	r6, [sl]
   83e24:	f047 0708 	orr.w	r7, r7, #8
   83e28:	e553      	b.n	838d2 <_svfprintf_r+0x9e>
   83e2a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   83e2c:	4630      	mov	r0, r6
   83e2e:	f003 fef9 	bl	87c24 <_localeconv_r>
   83e32:	6843      	ldr	r3, [r0, #4]
   83e34:	4618      	mov	r0, r3
   83e36:	931b      	str	r3, [sp, #108]	; 0x6c
   83e38:	f7ff fc9a 	bl	83770 <strlen>
   83e3c:	4603      	mov	r3, r0
   83e3e:	4630      	mov	r0, r6
   83e40:	931c      	str	r3, [sp, #112]	; 0x70
   83e42:	461e      	mov	r6, r3
   83e44:	f003 feee 	bl	87c24 <_localeconv_r>
   83e48:	6883      	ldr	r3, [r0, #8]
   83e4a:	9319      	str	r3, [sp, #100]	; 0x64
   83e4c:	2e00      	cmp	r6, #0
   83e4e:	f43f adbb 	beq.w	839c8 <_svfprintf_r+0x194>
   83e52:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83e54:	2b00      	cmp	r3, #0
   83e56:	f43f adb7 	beq.w	839c8 <_svfprintf_r+0x194>
   83e5a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   83e5c:	781b      	ldrb	r3, [r3, #0]
   83e5e:	2b00      	cmp	r3, #0
   83e60:	f43f adb2 	beq.w	839c8 <_svfprintf_r+0x194>
   83e64:	f89a 6000 	ldrb.w	r6, [sl]
   83e68:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
   83e6c:	e531      	b.n	838d2 <_svfprintf_r+0x9e>
   83e6e:	f89a 6000 	ldrb.w	r6, [sl]
   83e72:	f047 0701 	orr.w	r7, r7, #1
   83e76:	e52c      	b.n	838d2 <_svfprintf_r+0x9e>
   83e78:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
   83e7c:	2b00      	cmp	r3, #0
   83e7e:	f47f ada3 	bne.w	839c8 <_svfprintf_r+0x194>
   83e82:	f89a 6000 	ldrb.w	r6, [sl]
   83e86:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
   83e8a:	e522      	b.n	838d2 <_svfprintf_r+0x9e>
   83e8c:	f89a 6000 	ldrb.w	r6, [sl]
   83e90:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   83e94:	e51d      	b.n	838d2 <_svfprintf_r+0x9e>
   83e96:	4652      	mov	r2, sl
   83e98:	f812 6b01 	ldrb.w	r6, [r2], #1
   83e9c:	2e2a      	cmp	r6, #42	; 0x2a
   83e9e:	f001 81eb 	beq.w	85278 <_svfprintf_r+0x1a44>
   83ea2:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83ea6:	2b09      	cmp	r3, #9
   83ea8:	4692      	mov	sl, r2
   83eaa:	bf98      	it	ls
   83eac:	2200      	movls	r2, #0
   83eae:	f201 8003 	bhi.w	84eb8 <_svfprintf_r+0x1684>
   83eb2:	f81a 6b01 	ldrb.w	r6, [sl], #1
   83eb6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   83eba:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   83ebe:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83ec2:	2b09      	cmp	r3, #9
   83ec4:	d9f5      	bls.n	83eb2 <_svfprintf_r+0x67e>
   83ec6:	9207      	str	r2, [sp, #28]
   83ec8:	e505      	b.n	838d6 <_svfprintf_r+0xa2>
   83eca:	f89a 6000 	ldrb.w	r6, [sl]
   83ece:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   83ed2:	e4fe      	b.n	838d2 <_svfprintf_r+0x9e>
   83ed4:	46bb      	mov	fp, r7
   83ed6:	2b01      	cmp	r3, #1
   83ed8:	f43f ad9a 	beq.w	83a10 <_svfprintf_r+0x1dc>
   83edc:	2b02      	cmp	r3, #2
   83ede:	ad54      	add	r5, sp, #336	; 0x150
   83ee0:	d112      	bne.n	83f08 <_svfprintf_r+0x6d4>
   83ee2:	9a18      	ldr	r2, [sp, #96]	; 0x60
   83ee4:	f004 030f 	and.w	r3, r4, #15
   83ee8:	5cd3      	ldrb	r3, [r2, r3]
   83eea:	0924      	lsrs	r4, r4, #4
   83eec:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
   83ef0:	ea4f 1919 	mov.w	r9, r9, lsr #4
   83ef4:	f805 3d01 	strb.w	r3, [r5, #-1]!
   83ef8:	ea54 0309 	orrs.w	r3, r4, r9
   83efc:	d1f2      	bne.n	83ee4 <_svfprintf_r+0x6b0>
   83efe:	ab54      	add	r3, sp, #336	; 0x150
   83f00:	1b5b      	subs	r3, r3, r5
   83f02:	465f      	mov	r7, fp
   83f04:	930b      	str	r3, [sp, #44]	; 0x2c
   83f06:	e590      	b.n	83a2a <_svfprintf_r+0x1f6>
   83f08:	f004 0307 	and.w	r3, r4, #7
   83f0c:	08e4      	lsrs	r4, r4, #3
   83f0e:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
   83f12:	ea4f 09d9 	mov.w	r9, r9, lsr #3
   83f16:	3330      	adds	r3, #48	; 0x30
   83f18:	ea54 0109 	orrs.w	r1, r4, r9
   83f1c:	462a      	mov	r2, r5
   83f1e:	f805 3d01 	strb.w	r3, [r5, #-1]!
   83f22:	d1f1      	bne.n	83f08 <_svfprintf_r+0x6d4>
   83f24:	f01b 0f01 	tst.w	fp, #1
   83f28:	d0e9      	beq.n	83efe <_svfprintf_r+0x6ca>
   83f2a:	2b30      	cmp	r3, #48	; 0x30
   83f2c:	d0e7      	beq.n	83efe <_svfprintf_r+0x6ca>
   83f2e:	2330      	movs	r3, #48	; 0x30
   83f30:	3a02      	subs	r2, #2
   83f32:	f805 3c01 	strb.w	r3, [r5, #-1]
   83f36:	ab54      	add	r3, sp, #336	; 0x150
   83f38:	1a9b      	subs	r3, r3, r2
   83f3a:	465f      	mov	r7, fp
   83f3c:	4615      	mov	r5, r2
   83f3e:	930b      	str	r3, [sp, #44]	; 0x2c
   83f40:	e573      	b.n	83a2a <_svfprintf_r+0x1f6>
   83f42:	bf00      	nop
   83f44:	7fefffff 	.word	0x7fefffff
   83f48:	0008a388 	.word	0x0008a388
   83f4c:	0008a38c 	.word	0x0008a38c
   83f50:	0008a398 	.word	0x0008a398
   83f54:	2e65      	cmp	r6, #101	; 0x65
   83f56:	f340 80e9 	ble.w	8412c <_svfprintf_r+0x8f8>
   83f5a:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   83f5e:	2200      	movs	r2, #0
   83f60:	2300      	movs	r3, #0
   83f62:	f005 ffd5 	bl	89f10 <__aeabi_dcmpeq>
   83f66:	2800      	cmp	r0, #0
   83f68:	f000 81d2 	beq.w	84310 <_svfprintf_r+0xadc>
   83f6c:	2301      	movs	r3, #1
   83f6e:	f8c8 3004 	str.w	r3, [r8, #4]
   83f72:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83f74:	4abf      	ldr	r2, [pc, #764]	; (84274 <_svfprintf_r+0xa40>)
   83f76:	3301      	adds	r3, #1
   83f78:	3401      	adds	r4, #1
   83f7a:	2b07      	cmp	r3, #7
   83f7c:	942a      	str	r4, [sp, #168]	; 0xa8
   83f7e:	9329      	str	r3, [sp, #164]	; 0xa4
   83f80:	f8c8 2000 	str.w	r2, [r8]
   83f84:	f300 857a 	bgt.w	84a7c <_svfprintf_r+0x1248>
   83f88:	f108 0808 	add.w	r8, r8, #8
   83f8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   83f8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   83f90:	4293      	cmp	r3, r2
   83f92:	f280 82d7 	bge.w	84544 <_svfprintf_r+0xd10>
   83f96:	9b16      	ldr	r3, [sp, #88]	; 0x58
   83f98:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   83f9a:	441c      	add	r4, r3
   83f9c:	e9c8 2300 	strd	r2, r3, [r8]
   83fa0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83fa2:	942a      	str	r4, [sp, #168]	; 0xa8
   83fa4:	3301      	adds	r3, #1
   83fa6:	2b07      	cmp	r3, #7
   83fa8:	9329      	str	r3, [sp, #164]	; 0xa4
   83faa:	f300 83dd 	bgt.w	84768 <_svfprintf_r+0xf34>
   83fae:	f108 0808 	add.w	r8, r8, #8
   83fb2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   83fb4:	1e5d      	subs	r5, r3, #1
   83fb6:	2d00      	cmp	r5, #0
   83fb8:	f77f ae16 	ble.w	83be8 <_svfprintf_r+0x3b4>
   83fbc:	2d10      	cmp	r5, #16
   83fbe:	f341 8141 	ble.w	85244 <_svfprintf_r+0x1a10>
   83fc2:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 84278 <_svfprintf_r+0xa44>
   83fc6:	4622      	mov	r2, r4
   83fc8:	4649      	mov	r1, r9
   83fca:	2610      	movs	r6, #16
   83fcc:	46b9      	mov	r9, r7
   83fce:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83fd0:	460f      	mov	r7, r1
   83fd2:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   83fd6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83fd8:	e005      	b.n	83fe6 <_svfprintf_r+0x7b2>
   83fda:	f108 0808 	add.w	r8, r8, #8
   83fde:	3d10      	subs	r5, #16
   83fe0:	2d10      	cmp	r5, #16
   83fe2:	f340 8558 	ble.w	84a96 <_svfprintf_r+0x1262>
   83fe6:	3301      	adds	r3, #1
   83fe8:	3210      	adds	r2, #16
   83fea:	2b07      	cmp	r3, #7
   83fec:	e9c8 7600 	strd	r7, r6, [r8]
   83ff0:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   83ff4:	ddf1      	ble.n	83fda <_svfprintf_r+0x7a6>
   83ff6:	4621      	mov	r1, r4
   83ff8:	4658      	mov	r0, fp
   83ffa:	aa28      	add	r2, sp, #160	; 0xa0
   83ffc:	f005 f87a 	bl	890f4 <__ssprint_r>
   84000:	2800      	cmp	r0, #0
   84002:	f47f ad7a 	bne.w	83afa <_svfprintf_r+0x2c6>
   84006:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   8400a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8400e:	e7e6      	b.n	83fde <_svfprintf_r+0x7aa>
   84010:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84012:	9a06      	ldr	r2, [sp, #24]
   84014:	eba3 0b02 	sub.w	fp, r3, r2
   84018:	f1bb 0f00 	cmp.w	fp, #0
   8401c:	f77f adca 	ble.w	83bb4 <_svfprintf_r+0x380>
   84020:	f1bb 0f10 	cmp.w	fp, #16
   84024:	f341 8005 	ble.w	85032 <_svfprintf_r+0x17fe>
   84028:	f8df 924c 	ldr.w	r9, [pc, #588]	; 84278 <_svfprintf_r+0xa44>
   8402c:	4641      	mov	r1, r8
   8402e:	4620      	mov	r0, r4
   84030:	46a8      	mov	r8, r5
   84032:	464c      	mov	r4, r9
   84034:	2310      	movs	r3, #16
   84036:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84038:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8403a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   8403e:	e006      	b.n	8404e <_svfprintf_r+0x81a>
   84040:	f1ab 0b10 	sub.w	fp, fp, #16
   84044:	f1bb 0f10 	cmp.w	fp, #16
   84048:	f101 0108 	add.w	r1, r1, #8
   8404c:	dd19      	ble.n	84082 <_svfprintf_r+0x84e>
   8404e:	3201      	adds	r2, #1
   84050:	3010      	adds	r0, #16
   84052:	2a07      	cmp	r2, #7
   84054:	e9c1 4300 	strd	r4, r3, [r1]
   84058:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   8405c:	ddf0      	ble.n	84040 <_svfprintf_r+0x80c>
   8405e:	4629      	mov	r1, r5
   84060:	4648      	mov	r0, r9
   84062:	aa28      	add	r2, sp, #160	; 0xa0
   84064:	f005 f846 	bl	890f4 <__ssprint_r>
   84068:	2800      	cmp	r0, #0
   8406a:	f47f ad46 	bne.w	83afa <_svfprintf_r+0x2c6>
   8406e:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   84072:	f1ab 0b10 	sub.w	fp, fp, #16
   84076:	f1bb 0f10 	cmp.w	fp, #16
   8407a:	f04f 0310 	mov.w	r3, #16
   8407e:	a92b      	add	r1, sp, #172	; 0xac
   84080:	dce5      	bgt.n	8404e <_svfprintf_r+0x81a>
   84082:	4645      	mov	r5, r8
   84084:	46a1      	mov	r9, r4
   84086:	4688      	mov	r8, r1
   84088:	4604      	mov	r4, r0
   8408a:	3201      	adds	r2, #1
   8408c:	445c      	add	r4, fp
   8408e:	2a07      	cmp	r2, #7
   84090:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   84094:	f8c8 9000 	str.w	r9, [r8]
   84098:	f8c8 b004 	str.w	fp, [r8, #4]
   8409c:	f300 8518 	bgt.w	84ad0 <_svfprintf_r+0x129c>
   840a0:	f108 0808 	add.w	r8, r8, #8
   840a4:	e586      	b.n	83bb4 <_svfprintf_r+0x380>
   840a6:	f1bb 0f10 	cmp.w	fp, #16
   840aa:	f340 8597 	ble.w	84bdc <_svfprintf_r+0x13a8>
   840ae:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 84278 <_svfprintf_r+0xa44>
   840b2:	4641      	mov	r1, r8
   840b4:	4620      	mov	r0, r4
   840b6:	46a8      	mov	r8, r5
   840b8:	464c      	mov	r4, r9
   840ba:	2310      	movs	r3, #16
   840bc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   840be:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   840c0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   840c4:	e006      	b.n	840d4 <_svfprintf_r+0x8a0>
   840c6:	f1ab 0b10 	sub.w	fp, fp, #16
   840ca:	f1bb 0f10 	cmp.w	fp, #16
   840ce:	f101 0108 	add.w	r1, r1, #8
   840d2:	dd19      	ble.n	84108 <_svfprintf_r+0x8d4>
   840d4:	3201      	adds	r2, #1
   840d6:	3010      	adds	r0, #16
   840d8:	2a07      	cmp	r2, #7
   840da:	e9c1 4300 	strd	r4, r3, [r1]
   840de:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   840e2:	ddf0      	ble.n	840c6 <_svfprintf_r+0x892>
   840e4:	4629      	mov	r1, r5
   840e6:	4648      	mov	r0, r9
   840e8:	aa28      	add	r2, sp, #160	; 0xa0
   840ea:	f005 f803 	bl	890f4 <__ssprint_r>
   840ee:	2800      	cmp	r0, #0
   840f0:	f47f ad03 	bne.w	83afa <_svfprintf_r+0x2c6>
   840f4:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   840f8:	f1ab 0b10 	sub.w	fp, fp, #16
   840fc:	f1bb 0f10 	cmp.w	fp, #16
   84100:	f04f 0310 	mov.w	r3, #16
   84104:	a92b      	add	r1, sp, #172	; 0xac
   84106:	dce5      	bgt.n	840d4 <_svfprintf_r+0x8a0>
   84108:	4645      	mov	r5, r8
   8410a:	46a1      	mov	r9, r4
   8410c:	4688      	mov	r8, r1
   8410e:	4604      	mov	r4, r0
   84110:	3201      	adds	r2, #1
   84112:	445c      	add	r4, fp
   84114:	2a07      	cmp	r2, #7
   84116:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   8411a:	f8c8 9000 	str.w	r9, [r8]
   8411e:	f8c8 b004 	str.w	fp, [r8, #4]
   84122:	f300 81ce 	bgt.w	844c2 <_svfprintf_r+0xc8e>
   84126:	f108 0808 	add.w	r8, r8, #8
   8412a:	e54b      	b.n	83bc4 <_svfprintf_r+0x390>
   8412c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8412e:	2b01      	cmp	r3, #1
   84130:	f340 817e 	ble.w	84430 <_svfprintf_r+0xbfc>
   84134:	2301      	movs	r3, #1
   84136:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   84138:	3401      	adds	r4, #1
   8413a:	441e      	add	r6, r3
   8413c:	2e07      	cmp	r6, #7
   8413e:	f8c8 5000 	str.w	r5, [r8]
   84142:	942a      	str	r4, [sp, #168]	; 0xa8
   84144:	f8c8 3004 	str.w	r3, [r8, #4]
   84148:	9629      	str	r6, [sp, #164]	; 0xa4
   8414a:	f300 81e1 	bgt.w	84510 <_svfprintf_r+0xcdc>
   8414e:	f108 0808 	add.w	r8, r8, #8
   84152:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84154:	3601      	adds	r6, #1
   84156:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   84158:	441c      	add	r4, r3
   8415a:	2e07      	cmp	r6, #7
   8415c:	e9c8 2300 	strd	r2, r3, [r8]
   84160:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   84164:	f300 81e1 	bgt.w	8452a <_svfprintf_r+0xcf6>
   84168:	f108 0808 	add.w	r8, r8, #8
   8416c:	2200      	movs	r2, #0
   8416e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   84172:	2300      	movs	r3, #0
   84174:	f005 fecc 	bl	89f10 <__aeabi_dcmpeq>
   84178:	2800      	cmp	r0, #0
   8417a:	f040 8176 	bne.w	8446a <_svfprintf_r+0xc36>
   8417e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84180:	3601      	adds	r6, #1
   84182:	3b01      	subs	r3, #1
   84184:	3501      	adds	r5, #1
   84186:	441c      	add	r4, r3
   84188:	2e07      	cmp	r6, #7
   8418a:	f8c8 5000 	str.w	r5, [r8]
   8418e:	9629      	str	r6, [sp, #164]	; 0xa4
   84190:	f8c8 3004 	str.w	r3, [r8, #4]
   84194:	942a      	str	r4, [sp, #168]	; 0xa8
   84196:	f300 815b 	bgt.w	84450 <_svfprintf_r+0xc1c>
   8419a:	f108 0808 	add.w	r8, r8, #8
   8419e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   841a0:	3601      	adds	r6, #1
   841a2:	441c      	add	r4, r3
   841a4:	f8c8 3004 	str.w	r3, [r8, #4]
   841a8:	2e07      	cmp	r6, #7
   841aa:	ab24      	add	r3, sp, #144	; 0x90
   841ac:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   841b0:	f8c8 3000 	str.w	r3, [r8]
   841b4:	f77f ad16 	ble.w	83be4 <_svfprintf_r+0x3b0>
   841b8:	990c      	ldr	r1, [sp, #48]	; 0x30
   841ba:	980a      	ldr	r0, [sp, #40]	; 0x28
   841bc:	aa28      	add	r2, sp, #160	; 0xa0
   841be:	f004 ff99 	bl	890f4 <__ssprint_r>
   841c2:	2800      	cmp	r0, #0
   841c4:	f47f ac99 	bne.w	83afa <_svfprintf_r+0x2c6>
   841c8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   841ca:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   841ce:	e50b      	b.n	83be8 <_svfprintf_r+0x3b4>
   841d0:	f1b9 0f10 	cmp.w	r9, #16
   841d4:	f340 8650 	ble.w	84e78 <_svfprintf_r+0x1644>
   841d8:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   841dc:	4640      	mov	r0, r8
   841de:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
   841e2:	46b8      	mov	r8, r7
   841e4:	2410      	movs	r4, #16
   841e6:	464f      	mov	r7, r9
   841e8:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   841ea:	46a9      	mov	r9, r5
   841ec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   841ee:	e004      	b.n	841fa <_svfprintf_r+0x9c6>
   841f0:	3f10      	subs	r7, #16
   841f2:	2f10      	cmp	r7, #16
   841f4:	f100 0008 	add.w	r0, r0, #8
   841f8:	dd16      	ble.n	84228 <_svfprintf_r+0x9f4>
   841fa:	3201      	adds	r2, #1
   841fc:	4b1f      	ldr	r3, [pc, #124]	; (8427c <_svfprintf_r+0xa48>)
   841fe:	3110      	adds	r1, #16
   84200:	2a07      	cmp	r2, #7
   84202:	e9c0 3400 	strd	r3, r4, [r0]
   84206:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
   8420a:	ddf1      	ble.n	841f0 <_svfprintf_r+0x9bc>
   8420c:	4631      	mov	r1, r6
   8420e:	4628      	mov	r0, r5
   84210:	aa28      	add	r2, sp, #160	; 0xa0
   84212:	f004 ff6f 	bl	890f4 <__ssprint_r>
   84216:	2800      	cmp	r0, #0
   84218:	f47f ac6f 	bne.w	83afa <_svfprintf_r+0x2c6>
   8421c:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   84220:	3f10      	subs	r7, #16
   84222:	2f10      	cmp	r7, #16
   84224:	a82b      	add	r0, sp, #172	; 0xac
   84226:	dce8      	bgt.n	841fa <_svfprintf_r+0x9c6>
   84228:	464d      	mov	r5, r9
   8422a:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
   8422e:	46b9      	mov	r9, r7
   84230:	4647      	mov	r7, r8
   84232:	4680      	mov	r8, r0
   84234:	eb09 0401 	add.w	r4, r9, r1
   84238:	3201      	adds	r2, #1
   8423a:	4910      	ldr	r1, [pc, #64]	; (8427c <_svfprintf_r+0xa48>)
   8423c:	2a07      	cmp	r2, #7
   8423e:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   84242:	f8c8 9004 	str.w	r9, [r8, #4]
   84246:	f8c8 1000 	str.w	r1, [r8]
   8424a:	f300 83c3 	bgt.w	849d4 <_svfprintf_r+0x11a0>
   8424e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84252:	f108 0808 	add.w	r8, r8, #8
   84256:	e486      	b.n	83b66 <_svfprintf_r+0x332>
   84258:	990c      	ldr	r1, [sp, #48]	; 0x30
   8425a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8425c:	aa28      	add	r2, sp, #160	; 0xa0
   8425e:	931d      	str	r3, [sp, #116]	; 0x74
   84260:	f004 ff48 	bl	890f4 <__ssprint_r>
   84264:	2800      	cmp	r0, #0
   84266:	f47f ac48 	bne.w	83afa <_svfprintf_r+0x2c6>
   8426a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8426c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   8426e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84272:	e48a      	b.n	83b8a <_svfprintf_r+0x356>
   84274:	0008a3c8 	.word	0x0008a3c8
   84278:	0008a3dc 	.word	0x0008a3dc
   8427c:	0008a3cc 	.word	0x0008a3cc
   84280:	990c      	ldr	r1, [sp, #48]	; 0x30
   84282:	980a      	ldr	r0, [sp, #40]	; 0x28
   84284:	aa28      	add	r2, sp, #160	; 0xa0
   84286:	f004 ff35 	bl	890f4 <__ssprint_r>
   8428a:	2800      	cmp	r0, #0
   8428c:	f47f ac35 	bne.w	83afa <_svfprintf_r+0x2c6>
   84290:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84292:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84296:	e489      	b.n	83bac <_svfprintf_r+0x378>
   84298:	2d10      	cmp	r5, #16
   8429a:	f340 86c4 	ble.w	85026 <_svfprintf_r+0x17f2>
   8429e:	2610      	movs	r6, #16
   842a0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   842a2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   842a4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   842a8:	e004      	b.n	842b4 <_svfprintf_r+0xa80>
   842aa:	3d10      	subs	r5, #16
   842ac:	2d10      	cmp	r5, #16
   842ae:	f108 0808 	add.w	r8, r8, #8
   842b2:	dd17      	ble.n	842e4 <_svfprintf_r+0xab0>
   842b4:	3301      	adds	r3, #1
   842b6:	4ab8      	ldr	r2, [pc, #736]	; (84598 <_svfprintf_r+0xd64>)
   842b8:	3410      	adds	r4, #16
   842ba:	2b07      	cmp	r3, #7
   842bc:	e9c8 2600 	strd	r2, r6, [r8]
   842c0:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   842c4:	ddf1      	ble.n	842aa <_svfprintf_r+0xa76>
   842c6:	4649      	mov	r1, r9
   842c8:	4638      	mov	r0, r7
   842ca:	aa28      	add	r2, sp, #160	; 0xa0
   842cc:	f004 ff12 	bl	890f4 <__ssprint_r>
   842d0:	2800      	cmp	r0, #0
   842d2:	f47f ac12 	bne.w	83afa <_svfprintf_r+0x2c6>
   842d6:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
   842da:	3d10      	subs	r5, #16
   842dc:	2d10      	cmp	r5, #16
   842de:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   842e2:	dce7      	bgt.n	842b4 <_svfprintf_r+0xa80>
   842e4:	3301      	adds	r3, #1
   842e6:	4aac      	ldr	r2, [pc, #688]	; (84598 <_svfprintf_r+0xd64>)
   842e8:	442c      	add	r4, r5
   842ea:	2b07      	cmp	r3, #7
   842ec:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   842f0:	f8c8 5004 	str.w	r5, [r8, #4]
   842f4:	f8c8 2000 	str.w	r2, [r8]
   842f8:	f77f ac7e 	ble.w	83bf8 <_svfprintf_r+0x3c4>
   842fc:	990c      	ldr	r1, [sp, #48]	; 0x30
   842fe:	980a      	ldr	r0, [sp, #40]	; 0x28
   84300:	aa28      	add	r2, sp, #160	; 0xa0
   84302:	f004 fef7 	bl	890f4 <__ssprint_r>
   84306:	2800      	cmp	r0, #0
   84308:	f47f abf7 	bne.w	83afa <_svfprintf_r+0x2c6>
   8430c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8430e:	e473      	b.n	83bf8 <_svfprintf_r+0x3c4>
   84310:	9922      	ldr	r1, [sp, #136]	; 0x88
   84312:	2900      	cmp	r1, #0
   84314:	f340 836f 	ble.w	849f6 <_svfprintf_r+0x11c2>
   84318:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   8431c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8431e:	4599      	cmp	r9, r3
   84320:	bfa8      	it	ge
   84322:	4699      	movge	r9, r3
   84324:	f1b9 0f00 	cmp.w	r9, #0
   84328:	dd0b      	ble.n	84342 <_svfprintf_r+0xb0e>
   8432a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8432c:	444c      	add	r4, r9
   8432e:	3301      	adds	r3, #1
   84330:	2b07      	cmp	r3, #7
   84332:	e9c8 5900 	strd	r5, r9, [r8]
   84336:	942a      	str	r4, [sp, #168]	; 0xa8
   84338:	9329      	str	r3, [sp, #164]	; 0xa4
   8433a:	f300 851d 	bgt.w	84d78 <_svfprintf_r+0x1544>
   8433e:	f108 0808 	add.w	r8, r8, #8
   84342:	9e10      	ldr	r6, [sp, #64]	; 0x40
   84344:	f1b9 0f00 	cmp.w	r9, #0
   84348:	bfa8      	it	ge
   8434a:	eba6 0609 	subge.w	r6, r6, r9
   8434e:	2e00      	cmp	r6, #0
   84350:	f300 8225 	bgt.w	8479e <_svfprintf_r+0xf6a>
   84354:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   84358:	0578      	lsls	r0, r7, #21
   8435a:	44ab      	add	fp, r5
   8435c:	f100 825f 	bmi.w	8481e <_svfprintf_r+0xfea>
   84360:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84362:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84364:	4293      	cmp	r3, r2
   84366:	db02      	blt.n	8436e <_svfprintf_r+0xb3a>
   84368:	07f9      	lsls	r1, r7, #31
   8436a:	f140 8476 	bpl.w	84c5a <_svfprintf_r+0x1426>
   8436e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84370:	9917      	ldr	r1, [sp, #92]	; 0x5c
   84372:	4414      	add	r4, r2
   84374:	e9c8 1200 	strd	r1, r2, [r8]
   84378:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   8437a:	942a      	str	r4, [sp, #168]	; 0xa8
   8437c:	3201      	adds	r2, #1
   8437e:	2a07      	cmp	r2, #7
   84380:	9229      	str	r2, [sp, #164]	; 0xa4
   84382:	f300 8513 	bgt.w	84dac <_svfprintf_r+0x1578>
   84386:	f108 0808 	add.w	r8, r8, #8
   8438a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8438c:	18ae      	adds	r6, r5, r2
   8438e:	eba6 060b 	sub.w	r6, r6, fp
   84392:	1ad5      	subs	r5, r2, r3
   84394:	42ae      	cmp	r6, r5
   84396:	bfa8      	it	ge
   84398:	462e      	movge	r6, r5
   8439a:	2e00      	cmp	r6, #0
   8439c:	dd0d      	ble.n	843ba <_svfprintf_r+0xb86>
   8439e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   843a0:	4434      	add	r4, r6
   843a2:	3301      	adds	r3, #1
   843a4:	2b07      	cmp	r3, #7
   843a6:	f8c8 b000 	str.w	fp, [r8]
   843aa:	f8c8 6004 	str.w	r6, [r8, #4]
   843ae:	942a      	str	r4, [sp, #168]	; 0xa8
   843b0:	9329      	str	r3, [sp, #164]	; 0xa4
   843b2:	f300 8571 	bgt.w	84e98 <_svfprintf_r+0x1664>
   843b6:	f108 0808 	add.w	r8, r8, #8
   843ba:	2e00      	cmp	r6, #0
   843bc:	bfa8      	it	ge
   843be:	1bad      	subge	r5, r5, r6
   843c0:	2d00      	cmp	r5, #0
   843c2:	f77f ac11 	ble.w	83be8 <_svfprintf_r+0x3b4>
   843c6:	2d10      	cmp	r5, #16
   843c8:	f340 873c 	ble.w	85244 <_svfprintf_r+0x1a10>
   843cc:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 8459c <_svfprintf_r+0xd68>
   843d0:	4622      	mov	r2, r4
   843d2:	4649      	mov	r1, r9
   843d4:	2610      	movs	r6, #16
   843d6:	46b9      	mov	r9, r7
   843d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   843da:	460f      	mov	r7, r1
   843dc:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   843e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   843e2:	e005      	b.n	843f0 <_svfprintf_r+0xbbc>
   843e4:	f108 0808 	add.w	r8, r8, #8
   843e8:	3d10      	subs	r5, #16
   843ea:	2d10      	cmp	r5, #16
   843ec:	f340 8353 	ble.w	84a96 <_svfprintf_r+0x1262>
   843f0:	3301      	adds	r3, #1
   843f2:	3210      	adds	r2, #16
   843f4:	2b07      	cmp	r3, #7
   843f6:	e9c8 7600 	strd	r7, r6, [r8]
   843fa:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   843fe:	ddf1      	ble.n	843e4 <_svfprintf_r+0xbb0>
   84400:	4621      	mov	r1, r4
   84402:	4658      	mov	r0, fp
   84404:	aa28      	add	r2, sp, #160	; 0xa0
   84406:	f004 fe75 	bl	890f4 <__ssprint_r>
   8440a:	2800      	cmp	r0, #0
   8440c:	f47f ab75 	bne.w	83afa <_svfprintf_r+0x2c6>
   84410:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84414:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84418:	e7e6      	b.n	843e8 <_svfprintf_r+0xbb4>
   8441a:	9b07      	ldr	r3, [sp, #28]
   8441c:	2b00      	cmp	r3, #0
   8441e:	f47f aafc 	bne.w	83a1a <_svfprintf_r+0x1e6>
   84422:	465f      	mov	r7, fp
   84424:	2300      	movs	r3, #0
   84426:	ad54      	add	r5, sp, #336	; 0x150
   84428:	9307      	str	r3, [sp, #28]
   8442a:	930b      	str	r3, [sp, #44]	; 0x2c
   8442c:	f7ff bafd 	b.w	83a2a <_svfprintf_r+0x1f6>
   84430:	07fa      	lsls	r2, r7, #31
   84432:	f53f ae7f 	bmi.w	84134 <_svfprintf_r+0x900>
   84436:	2301      	movs	r3, #1
   84438:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   8443a:	3401      	adds	r4, #1
   8443c:	441e      	add	r6, r3
   8443e:	2e07      	cmp	r6, #7
   84440:	f8c8 5000 	str.w	r5, [r8]
   84444:	942a      	str	r4, [sp, #168]	; 0xa8
   84446:	f8c8 3004 	str.w	r3, [r8, #4]
   8444a:	9629      	str	r6, [sp, #164]	; 0xa4
   8444c:	f77f aea5 	ble.w	8419a <_svfprintf_r+0x966>
   84450:	990c      	ldr	r1, [sp, #48]	; 0x30
   84452:	980a      	ldr	r0, [sp, #40]	; 0x28
   84454:	aa28      	add	r2, sp, #160	; 0xa0
   84456:	f004 fe4d 	bl	890f4 <__ssprint_r>
   8445a:	2800      	cmp	r0, #0
   8445c:	f47f ab4d 	bne.w	83afa <_svfprintf_r+0x2c6>
   84460:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84464:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84468:	e699      	b.n	8419e <_svfprintf_r+0x96a>
   8446a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8446c:	1e5d      	subs	r5, r3, #1
   8446e:	2d00      	cmp	r5, #0
   84470:	f77f ae95 	ble.w	8419e <_svfprintf_r+0x96a>
   84474:	2d10      	cmp	r5, #16
   84476:	f340 86df 	ble.w	85238 <_svfprintf_r+0x1a04>
   8447a:	4622      	mov	r2, r4
   8447c:	9707      	str	r7, [sp, #28]
   8447e:	f04f 0b10 	mov.w	fp, #16
   84482:	f8df 9118 	ldr.w	r9, [pc, #280]	; 8459c <_svfprintf_r+0xd68>
   84486:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84488:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   8448a:	e005      	b.n	84498 <_svfprintf_r+0xc64>
   8448c:	f108 0808 	add.w	r8, r8, #8
   84490:	3d10      	subs	r5, #16
   84492:	2d10      	cmp	r5, #16
   84494:	f340 837f 	ble.w	84b96 <_svfprintf_r+0x1362>
   84498:	3601      	adds	r6, #1
   8449a:	3210      	adds	r2, #16
   8449c:	2e07      	cmp	r6, #7
   8449e:	e9c8 9b00 	strd	r9, fp, [r8]
   844a2:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
   844a6:	ddf1      	ble.n	8448c <_svfprintf_r+0xc58>
   844a8:	4639      	mov	r1, r7
   844aa:	4620      	mov	r0, r4
   844ac:	aa28      	add	r2, sp, #160	; 0xa0
   844ae:	f004 fe21 	bl	890f4 <__ssprint_r>
   844b2:	2800      	cmp	r0, #0
   844b4:	f47f ab21 	bne.w	83afa <_svfprintf_r+0x2c6>
   844b8:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
   844bc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   844c0:	e7e6      	b.n	84490 <_svfprintf_r+0xc5c>
   844c2:	990c      	ldr	r1, [sp, #48]	; 0x30
   844c4:	980a      	ldr	r0, [sp, #40]	; 0x28
   844c6:	aa28      	add	r2, sp, #160	; 0xa0
   844c8:	f004 fe14 	bl	890f4 <__ssprint_r>
   844cc:	2800      	cmp	r0, #0
   844ce:	f47f ab14 	bne.w	83afa <_svfprintf_r+0x2c6>
   844d2:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   844d4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   844d8:	f7ff bb74 	b.w	83bc4 <_svfprintf_r+0x390>
   844dc:	f01b 0310 	ands.w	r3, fp, #16
   844e0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   844e2:	d13a      	bne.n	8455a <_svfprintf_r+0xd26>
   844e4:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   844e8:	d033      	beq.n	84552 <_svfprintf_r+0xd1e>
   844ea:	f852 4b04 	ldr.w	r4, [r2], #4
   844ee:	4699      	mov	r9, r3
   844f0:	920e      	str	r2, [sp, #56]	; 0x38
   844f2:	2301      	movs	r3, #1
   844f4:	b2a4      	uxth	r4, r4
   844f6:	f7ff babd 	b.w	83a74 <_svfprintf_r+0x240>
   844fa:	232d      	movs	r3, #45	; 0x2d
   844fc:	4264      	negs	r4, r4
   844fe:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   84502:	46bb      	mov	fp, r7
   84504:	f04f 0301 	mov.w	r3, #1
   84508:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   8450c:	f7ff bab5 	b.w	83a7a <_svfprintf_r+0x246>
   84510:	990c      	ldr	r1, [sp, #48]	; 0x30
   84512:	980a      	ldr	r0, [sp, #40]	; 0x28
   84514:	aa28      	add	r2, sp, #160	; 0xa0
   84516:	f004 fded 	bl	890f4 <__ssprint_r>
   8451a:	2800      	cmp	r0, #0
   8451c:	f47f aaed 	bne.w	83afa <_svfprintf_r+0x2c6>
   84520:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84524:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84528:	e613      	b.n	84152 <_svfprintf_r+0x91e>
   8452a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8452c:	980a      	ldr	r0, [sp, #40]	; 0x28
   8452e:	aa28      	add	r2, sp, #160	; 0xa0
   84530:	f004 fde0 	bl	890f4 <__ssprint_r>
   84534:	2800      	cmp	r0, #0
   84536:	f47f aae0 	bne.w	83afa <_svfprintf_r+0x2c6>
   8453a:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   8453e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84542:	e613      	b.n	8416c <_svfprintf_r+0x938>
   84544:	07fd      	lsls	r5, r7, #31
   84546:	f57f ab4f 	bpl.w	83be8 <_svfprintf_r+0x3b4>
   8454a:	e524      	b.n	83f96 <_svfprintf_r+0x762>
   8454c:	ad54      	add	r5, sp, #336	; 0x150
   8454e:	f7ff ba6c 	b.w	83a2a <_svfprintf_r+0x1f6>
   84552:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
   84556:	f040 838a 	bne.w	84c6e <_svfprintf_r+0x143a>
   8455a:	f852 4b04 	ldr.w	r4, [r2], #4
   8455e:	2301      	movs	r3, #1
   84560:	920e      	str	r2, [sp, #56]	; 0x38
   84562:	f7ff ba87 	b.w	83a74 <_svfprintf_r+0x240>
   84566:	05b8      	lsls	r0, r7, #22
   84568:	f100 839b 	bmi.w	84ca2 <_svfprintf_r+0x146e>
   8456c:	ea4f 79e4 	mov.w	r9, r4, asr #31
   84570:	464b      	mov	r3, r9
   84572:	f7ff ba40 	b.w	839f6 <_svfprintf_r+0x1c2>
   84576:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84578:	9808      	ldr	r0, [sp, #32]
   8457a:	f853 1b04 	ldr.w	r1, [r3], #4
   8457e:	17c2      	asrs	r2, r0, #31
   84580:	4655      	mov	r5, sl
   84582:	e9c1 0200 	strd	r0, r2, [r1]
   84586:	930e      	str	r3, [sp, #56]	; 0x38
   84588:	f7ff bb4c 	b.w	83c24 <_svfprintf_r+0x3f0>
   8458c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8458e:	f853 4b04 	ldr.w	r4, [r3], #4
   84592:	930e      	str	r3, [sp, #56]	; 0x38
   84594:	f7ff ba6b 	b.w	83a6e <_svfprintf_r+0x23a>
   84598:	0008a3cc 	.word	0x0008a3cc
   8459c:	0008a3dc 	.word	0x0008a3dc
   845a0:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   845a4:	4602      	mov	r2, r0
   845a6:	460b      	mov	r3, r1
   845a8:	f005 fce4 	bl	89f74 <__aeabi_dcmpun>
   845ac:	2800      	cmp	r0, #0
   845ae:	f040 85e9 	bne.w	85184 <_svfprintf_r+0x1950>
   845b2:	2e61      	cmp	r6, #97	; 0x61
   845b4:	f000 857d 	beq.w	850b2 <_svfprintf_r+0x187e>
   845b8:	2e41      	cmp	r6, #65	; 0x41
   845ba:	f000 848b 	beq.w	84ed4 <_svfprintf_r+0x16a0>
   845be:	9b07      	ldr	r3, [sp, #28]
   845c0:	3301      	adds	r3, #1
   845c2:	f000 838f 	beq.w	84ce4 <_svfprintf_r+0x14b0>
   845c6:	f026 0320 	bic.w	r3, r6, #32
   845ca:	2b47      	cmp	r3, #71	; 0x47
   845cc:	9306      	str	r3, [sp, #24]
   845ce:	f000 858f 	beq.w	850f0 <_svfprintf_r+0x18bc>
   845d2:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   845d6:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   845da:	930f      	str	r3, [sp, #60]	; 0x3c
   845dc:	4613      	mov	r3, r2
   845de:	2b00      	cmp	r3, #0
   845e0:	f2c0 85b0 	blt.w	85144 <_svfprintf_r+0x1910>
   845e4:	930b      	str	r3, [sp, #44]	; 0x2c
   845e6:	2300      	movs	r3, #0
   845e8:	468b      	mov	fp, r1
   845ea:	931d      	str	r3, [sp, #116]	; 0x74
   845ec:	930d      	str	r3, [sp, #52]	; 0x34
   845ee:	9b06      	ldr	r3, [sp, #24]
   845f0:	2b46      	cmp	r3, #70	; 0x46
   845f2:	f000 83e9 	beq.w	84dc8 <_svfprintf_r+0x1594>
   845f6:	2b45      	cmp	r3, #69	; 0x45
   845f8:	f000 8546 	beq.w	85088 <_svfprintf_r+0x1854>
   845fc:	9907      	ldr	r1, [sp, #28]
   845fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84600:	9101      	str	r1, [sp, #4]
   84602:	2102      	movs	r1, #2
   84604:	9100      	str	r1, [sp, #0]
   84606:	a926      	add	r1, sp, #152	; 0x98
   84608:	9104      	str	r1, [sp, #16]
   8460a:	a923      	add	r1, sp, #140	; 0x8c
   8460c:	9103      	str	r1, [sp, #12]
   8460e:	a922      	add	r1, sp, #136	; 0x88
   84610:	465a      	mov	r2, fp
   84612:	980a      	ldr	r0, [sp, #40]	; 0x28
   84614:	9102      	str	r1, [sp, #8]
   84616:	f001 febb 	bl	86390 <_dtoa_r>
   8461a:	9b06      	ldr	r3, [sp, #24]
   8461c:	4605      	mov	r5, r0
   8461e:	2b47      	cmp	r3, #71	; 0x47
   84620:	f040 863a 	bne.w	85298 <_svfprintf_r+0x1a64>
   84624:	f017 0f01 	tst.w	r7, #1
   84628:	46b9      	mov	r9, r7
   8462a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8462c:	f040 84fe 	bne.w	8502c <_svfprintf_r+0x17f8>
   84630:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84632:	1b5b      	subs	r3, r3, r5
   84634:	9312      	str	r3, [sp, #72]	; 0x48
   84636:	9b06      	ldr	r3, [sp, #24]
   84638:	2b47      	cmp	r3, #71	; 0x47
   8463a:	f000 836e 	beq.w	84d1a <_svfprintf_r+0x14e6>
   8463e:	9b06      	ldr	r3, [sp, #24]
   84640:	2b46      	cmp	r3, #70	; 0x46
   84642:	f000 83f0 	beq.w	84e26 <_svfprintf_r+0x15f2>
   84646:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84648:	9310      	str	r3, [sp, #64]	; 0x40
   8464a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8464c:	9a06      	ldr	r2, [sp, #24]
   8464e:	3b01      	subs	r3, #1
   84650:	2a41      	cmp	r2, #65	; 0x41
   84652:	9322      	str	r3, [sp, #136]	; 0x88
   84654:	f000 85bb 	beq.w	851ce <_svfprintf_r+0x199a>
   84658:	2100      	movs	r1, #0
   8465a:	b2f2      	uxtb	r2, r6
   8465c:	2b00      	cmp	r3, #0
   8465e:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
   84662:	bfb6      	itet	lt
   84664:	222d      	movlt	r2, #45	; 0x2d
   84666:	222b      	movge	r2, #43	; 0x2b
   84668:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
   8466a:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
   8466e:	bfb8      	it	lt
   84670:	f1c3 0301 	rsblt	r3, r3, #1
   84674:	2b09      	cmp	r3, #9
   84676:	f340 859b 	ble.w	851b0 <_svfprintf_r+0x197c>
   8467a:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
   8467e:	4662      	mov	r2, ip
   84680:	4fb6      	ldr	r7, [pc, #728]	; (8495c <_svfprintf_r+0x1128>)
   84682:	461c      	mov	r4, r3
   84684:	4610      	mov	r0, r2
   84686:	fb87 1203 	smull	r1, r2, r7, r3
   8468a:	17d9      	asrs	r1, r3, #31
   8468c:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
   84690:	eb01 0281 	add.w	r2, r1, r1, lsl #2
   84694:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   84698:	3230      	adds	r2, #48	; 0x30
   8469a:	2c63      	cmp	r4, #99	; 0x63
   8469c:	f800 2c01 	strb.w	r2, [r0, #-1]
   846a0:	460b      	mov	r3, r1
   846a2:	f100 32ff 	add.w	r2, r0, #4294967295
   846a6:	dcec      	bgt.n	84682 <_svfprintf_r+0xe4e>
   846a8:	3330      	adds	r3, #48	; 0x30
   846aa:	1e81      	subs	r1, r0, #2
   846ac:	b2db      	uxtb	r3, r3
   846ae:	458c      	cmp	ip, r1
   846b0:	f802 3c01 	strb.w	r3, [r2, #-1]
   846b4:	f240 85f9 	bls.w	852aa <_svfprintf_r+0x1a76>
   846b8:	f10d 0192 	add.w	r1, sp, #146	; 0x92
   846bc:	e001      	b.n	846c2 <_svfprintf_r+0xe8e>
   846be:	f812 3b01 	ldrb.w	r3, [r2], #1
   846c2:	4594      	cmp	ip, r2
   846c4:	f801 3b01 	strb.w	r3, [r1], #1
   846c8:	d1f9      	bne.n	846be <_svfprintf_r+0xe8a>
   846ca:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
   846ce:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   846d2:	1a1b      	subs	r3, r3, r0
   846d4:	4413      	add	r3, r2
   846d6:	aa24      	add	r2, sp, #144	; 0x90
   846d8:	1a9b      	subs	r3, r3, r2
   846da:	931a      	str	r3, [sp, #104]	; 0x68
   846dc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   846de:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   846e0:	2b01      	cmp	r3, #1
   846e2:	441a      	add	r2, r3
   846e4:	920b      	str	r2, [sp, #44]	; 0x2c
   846e6:	f340 8581 	ble.w	851ec <_svfprintf_r+0x19b8>
   846ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   846ec:	9a16      	ldr	r2, [sp, #88]	; 0x58
   846ee:	4413      	add	r3, r2
   846f0:	930b      	str	r3, [sp, #44]	; 0x2c
   846f2:	2300      	movs	r3, #0
   846f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   846f6:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
   846fa:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
   846fe:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   84702:	930f      	str	r3, [sp, #60]	; 0x3c
   84704:	9206      	str	r2, [sp, #24]
   84706:	9313      	str	r3, [sp, #76]	; 0x4c
   84708:	9310      	str	r3, [sp, #64]	; 0x40
   8470a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   8470c:	2b00      	cmp	r3, #0
   8470e:	f040 832c 	bne.w	84d6a <_svfprintf_r+0x1536>
   84712:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84716:	9307      	str	r3, [sp, #28]
   84718:	f7ff b994 	b.w	83a44 <_svfprintf_r+0x210>
   8471c:	46bb      	mov	fp, r7
   8471e:	f7ff bb2f 	b.w	83d80 <_svfprintf_r+0x54c>
   84722:	4b8f      	ldr	r3, [pc, #572]	; (84960 <_svfprintf_r+0x112c>)
   84724:	9318      	str	r3, [sp, #96]	; 0x60
   84726:	f017 0920 	ands.w	r9, r7, #32
   8472a:	f000 80f5 	beq.w	84918 <_svfprintf_r+0x10e4>
   8472e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84730:	3307      	adds	r3, #7
   84732:	f023 0307 	bic.w	r3, r3, #7
   84736:	f8d3 9004 	ldr.w	r9, [r3, #4]
   8473a:	f853 4b08 	ldr.w	r4, [r3], #8
   8473e:	930e      	str	r3, [sp, #56]	; 0x38
   84740:	07f8      	lsls	r0, r7, #31
   84742:	d509      	bpl.n	84758 <_svfprintf_r+0xf24>
   84744:	ea54 0309 	orrs.w	r3, r4, r9
   84748:	d006      	beq.n	84758 <_svfprintf_r+0xf24>
   8474a:	2330      	movs	r3, #48	; 0x30
   8474c:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   84750:	f047 0702 	orr.w	r7, r7, #2
   84754:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   84758:	2302      	movs	r3, #2
   8475a:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   8475e:	f7ff b989 	b.w	83a74 <_svfprintf_r+0x240>
   84762:	4b80      	ldr	r3, [pc, #512]	; (84964 <_svfprintf_r+0x1130>)
   84764:	9318      	str	r3, [sp, #96]	; 0x60
   84766:	e7de      	b.n	84726 <_svfprintf_r+0xef2>
   84768:	990c      	ldr	r1, [sp, #48]	; 0x30
   8476a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8476c:	aa28      	add	r2, sp, #160	; 0xa0
   8476e:	f004 fcc1 	bl	890f4 <__ssprint_r>
   84772:	2800      	cmp	r0, #0
   84774:	f47f a9c1 	bne.w	83afa <_svfprintf_r+0x2c6>
   84778:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8477a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8477e:	e418      	b.n	83fb2 <_svfprintf_r+0x77e>
   84780:	2140      	movs	r1, #64	; 0x40
   84782:	980a      	ldr	r0, [sp, #40]	; 0x28
   84784:	f003 fb02 	bl	87d8c <_malloc_r>
   84788:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8478a:	6018      	str	r0, [r3, #0]
   8478c:	6118      	str	r0, [r3, #16]
   8478e:	2800      	cmp	r0, #0
   84790:	f000 8597 	beq.w	852c2 <_svfprintf_r+0x1a8e>
   84794:	2340      	movs	r3, #64	; 0x40
   84796:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84798:	6153      	str	r3, [r2, #20]
   8479a:	f7ff b862 	b.w	83862 <_svfprintf_r+0x2e>
   8479e:	2e10      	cmp	r6, #16
   847a0:	f340 8576 	ble.w	85290 <_svfprintf_r+0x1a5c>
   847a4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 84968 <_svfprintf_r+0x1134>
   847a8:	4642      	mov	r2, r8
   847aa:	4648      	mov	r0, r9
   847ac:	4621      	mov	r1, r4
   847ae:	46a8      	mov	r8, r5
   847b0:	46b9      	mov	r9, r7
   847b2:	f04f 0b10 	mov.w	fp, #16
   847b6:	4607      	mov	r7, r0
   847b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   847ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   847bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   847be:	e004      	b.n	847ca <_svfprintf_r+0xf96>
   847c0:	3208      	adds	r2, #8
   847c2:	3e10      	subs	r6, #16
   847c4:	2e10      	cmp	r6, #16
   847c6:	f340 8213 	ble.w	84bf0 <_svfprintf_r+0x13bc>
   847ca:	3301      	adds	r3, #1
   847cc:	3110      	adds	r1, #16
   847ce:	2b07      	cmp	r3, #7
   847d0:	e9c2 7b00 	strd	r7, fp, [r2]
   847d4:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
   847d8:	ddf2      	ble.n	847c0 <_svfprintf_r+0xf8c>
   847da:	4629      	mov	r1, r5
   847dc:	4620      	mov	r0, r4
   847de:	aa28      	add	r2, sp, #160	; 0xa0
   847e0:	f004 fc88 	bl	890f4 <__ssprint_r>
   847e4:	2800      	cmp	r0, #0
   847e6:	f47f a988 	bne.w	83afa <_svfprintf_r+0x2c6>
   847ea:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
   847ee:	aa2b      	add	r2, sp, #172	; 0xac
   847f0:	e7e7      	b.n	847c2 <_svfprintf_r+0xf8e>
   847f2:	4628      	mov	r0, r5
   847f4:	f8cd 901c 	str.w	r9, [sp, #28]
   847f8:	940e      	str	r4, [sp, #56]	; 0x38
   847fa:	f7fe ffb9 	bl	83770 <strlen>
   847fe:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   84802:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84806:	900b      	str	r0, [sp, #44]	; 0x2c
   84808:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   8480c:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   84810:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   84814:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   84818:	9306      	str	r3, [sp, #24]
   8481a:	f7ff b913 	b.w	83a44 <_svfprintf_r+0x210>
   8481e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84820:	4642      	mov	r2, r8
   84822:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
   84826:	18eb      	adds	r3, r5, r3
   84828:	465e      	mov	r6, fp
   8482a:	9307      	str	r3, [sp, #28]
   8482c:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   84830:	9710      	str	r7, [sp, #64]	; 0x40
   84832:	4621      	mov	r1, r4
   84834:	9f19      	ldr	r7, [sp, #100]	; 0x64
   84836:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
   8483a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
   8483e:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84842:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84844:	9513      	str	r5, [sp, #76]	; 0x4c
   84846:	f1b8 0f00 	cmp.w	r8, #0
   8484a:	d02e      	beq.n	848aa <_svfprintf_r+0x1076>
   8484c:	bb83      	cbnz	r3, 848b0 <_svfprintf_r+0x107c>
   8484e:	3f01      	subs	r7, #1
   84850:	f108 38ff 	add.w	r8, r8, #4294967295
   84854:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   84856:	4449      	add	r1, r9
   84858:	e9c2 3900 	strd	r3, r9, [r2]
   8485c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8485e:	912a      	str	r1, [sp, #168]	; 0xa8
   84860:	3301      	adds	r3, #1
   84862:	2b07      	cmp	r3, #7
   84864:	9329      	str	r3, [sp, #164]	; 0xa4
   84866:	dc60      	bgt.n	8492a <_svfprintf_r+0x10f6>
   84868:	3208      	adds	r2, #8
   8486a:	9b07      	ldr	r3, [sp, #28]
   8486c:	7838      	ldrb	r0, [r7, #0]
   8486e:	1b9b      	subs	r3, r3, r6
   84870:	4283      	cmp	r3, r0
   84872:	bfa8      	it	ge
   84874:	4603      	movge	r3, r0
   84876:	2b00      	cmp	r3, #0
   84878:	461c      	mov	r4, r3
   8487a:	dd0b      	ble.n	84894 <_svfprintf_r+0x1060>
   8487c:	9829      	ldr	r0, [sp, #164]	; 0xa4
   8487e:	4419      	add	r1, r3
   84880:	3001      	adds	r0, #1
   84882:	2807      	cmp	r0, #7
   84884:	e9c2 6300 	strd	r6, r3, [r2]
   84888:	912a      	str	r1, [sp, #168]	; 0xa8
   8488a:	9029      	str	r0, [sp, #164]	; 0xa4
   8488c:	f300 8114 	bgt.w	84ab8 <_svfprintf_r+0x1284>
   84890:	7838      	ldrb	r0, [r7, #0]
   84892:	3208      	adds	r2, #8
   84894:	2c00      	cmp	r4, #0
   84896:	bfb4      	ite	lt
   84898:	4605      	movlt	r5, r0
   8489a:	1b05      	subge	r5, r0, r4
   8489c:	2d00      	cmp	r5, #0
   8489e:	dc0b      	bgt.n	848b8 <_svfprintf_r+0x1084>
   848a0:	4406      	add	r6, r0
   848a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   848a4:	f1b8 0f00 	cmp.w	r8, #0
   848a8:	d1d0      	bne.n	8484c <_svfprintf_r+0x1018>
   848aa:	2b00      	cmp	r3, #0
   848ac:	f000 8226 	beq.w	84cfc <_svfprintf_r+0x14c8>
   848b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   848b2:	3b01      	subs	r3, #1
   848b4:	930f      	str	r3, [sp, #60]	; 0x3c
   848b6:	e7cd      	b.n	84854 <_svfprintf_r+0x1020>
   848b8:	2d10      	cmp	r5, #16
   848ba:	f340 849d 	ble.w	851f8 <_svfprintf_r+0x19c4>
   848be:	2410      	movs	r4, #16
   848c0:	9829      	ldr	r0, [sp, #164]	; 0xa4
   848c2:	e004      	b.n	848ce <_svfprintf_r+0x109a>
   848c4:	3d10      	subs	r5, #16
   848c6:	2d10      	cmp	r5, #16
   848c8:	f102 0208 	add.w	r2, r2, #8
   848cc:	dd16      	ble.n	848fc <_svfprintf_r+0x10c8>
   848ce:	3001      	adds	r0, #1
   848d0:	4b25      	ldr	r3, [pc, #148]	; (84968 <_svfprintf_r+0x1134>)
   848d2:	3110      	adds	r1, #16
   848d4:	2807      	cmp	r0, #7
   848d6:	e9c2 3400 	strd	r3, r4, [r2]
   848da:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   848de:	ddf1      	ble.n	848c4 <_svfprintf_r+0x1090>
   848e0:	4659      	mov	r1, fp
   848e2:	4650      	mov	r0, sl
   848e4:	aa28      	add	r2, sp, #160	; 0xa0
   848e6:	f004 fc05 	bl	890f4 <__ssprint_r>
   848ea:	2800      	cmp	r0, #0
   848ec:	f47f a905 	bne.w	83afa <_svfprintf_r+0x2c6>
   848f0:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
   848f4:	3d10      	subs	r5, #16
   848f6:	2d10      	cmp	r5, #16
   848f8:	aa2b      	add	r2, sp, #172	; 0xac
   848fa:	dce8      	bgt.n	848ce <_svfprintf_r+0x109a>
   848fc:	3001      	adds	r0, #1
   848fe:	4b1a      	ldr	r3, [pc, #104]	; (84968 <_svfprintf_r+0x1134>)
   84900:	4429      	add	r1, r5
   84902:	2807      	cmp	r0, #7
   84904:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   84908:	6055      	str	r5, [r2, #4]
   8490a:	6013      	str	r3, [r2, #0]
   8490c:	f300 8241 	bgt.w	84d92 <_svfprintf_r+0x155e>
   84910:	7838      	ldrb	r0, [r7, #0]
   84912:	3208      	adds	r2, #8
   84914:	4406      	add	r6, r0
   84916:	e7c4      	b.n	848a2 <_svfprintf_r+0x106e>
   84918:	f017 0310 	ands.w	r3, r7, #16
   8491c:	f000 80a0 	beq.w	84a60 <_svfprintf_r+0x122c>
   84920:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84922:	f853 4b04 	ldr.w	r4, [r3], #4
   84926:	930e      	str	r3, [sp, #56]	; 0x38
   84928:	e70a      	b.n	84740 <_svfprintf_r+0xf0c>
   8492a:	4659      	mov	r1, fp
   8492c:	4650      	mov	r0, sl
   8492e:	aa28      	add	r2, sp, #160	; 0xa0
   84930:	f004 fbe0 	bl	890f4 <__ssprint_r>
   84934:	2800      	cmp	r0, #0
   84936:	f47f a8e0 	bne.w	83afa <_svfprintf_r+0x2c6>
   8493a:	992a      	ldr	r1, [sp, #168]	; 0xa8
   8493c:	aa2b      	add	r2, sp, #172	; 0xac
   8493e:	e794      	b.n	8486a <_svfprintf_r+0x1036>
   84940:	2300      	movs	r3, #0
   84942:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
   84946:	9606      	str	r6, [sp, #24]
   84948:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   8494c:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   84950:	4692      	mov	sl, r2
   84952:	461e      	mov	r6, r3
   84954:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
   84958:	af54      	add	r7, sp, #336	; 0x150
   8495a:	e014      	b.n	84986 <_svfprintf_r+0x1152>
   8495c:	66666667 	.word	0x66666667
   84960:	0008a398 	.word	0x0008a398
   84964:	0008a3ac 	.word	0x0008a3ac
   84968:	0008a3dc 	.word	0x0008a3dc
   8496c:	2300      	movs	r3, #0
   8496e:	4620      	mov	r0, r4
   84970:	4649      	mov	r1, r9
   84972:	220a      	movs	r2, #10
   84974:	f005 fb3c 	bl	89ff0 <__aeabi_uldivmod>
   84978:	2c0a      	cmp	r4, #10
   8497a:	f179 0300 	sbcs.w	r3, r9, #0
   8497e:	d31b      	bcc.n	849b8 <_svfprintf_r+0x1184>
   84980:	4604      	mov	r4, r0
   84982:	4689      	mov	r9, r1
   84984:	462f      	mov	r7, r5
   84986:	4620      	mov	r0, r4
   84988:	220a      	movs	r2, #10
   8498a:	2300      	movs	r3, #0
   8498c:	4649      	mov	r1, r9
   8498e:	f005 fb2f 	bl	89ff0 <__aeabi_uldivmod>
   84992:	3230      	adds	r2, #48	; 0x30
   84994:	1e7d      	subs	r5, r7, #1
   84996:	3601      	adds	r6, #1
   84998:	f807 2c01 	strb.w	r2, [r7, #-1]
   8499c:	f1ba 0f00 	cmp.w	sl, #0
   849a0:	d0e4      	beq.n	8496c <_svfprintf_r+0x1138>
   849a2:	f898 3000 	ldrb.w	r3, [r8]
   849a6:	429e      	cmp	r6, r3
   849a8:	d1e0      	bne.n	8496c <_svfprintf_r+0x1138>
   849aa:	2eff      	cmp	r6, #255	; 0xff
   849ac:	d0de      	beq.n	8496c <_svfprintf_r+0x1138>
   849ae:	2c0a      	cmp	r4, #10
   849b0:	f179 0300 	sbcs.w	r3, r9, #0
   849b4:	f080 8130 	bcs.w	84c18 <_svfprintf_r+0x13e4>
   849b8:	ab54      	add	r3, sp, #336	; 0x150
   849ba:	1b5b      	subs	r3, r3, r5
   849bc:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   849c0:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
   849c4:	9612      	str	r6, [sp, #72]	; 0x48
   849c6:	465f      	mov	r7, fp
   849c8:	9e06      	ldr	r6, [sp, #24]
   849ca:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   849ce:	930b      	str	r3, [sp, #44]	; 0x2c
   849d0:	f7ff b82b 	b.w	83a2a <_svfprintf_r+0x1f6>
   849d4:	990c      	ldr	r1, [sp, #48]	; 0x30
   849d6:	980a      	ldr	r0, [sp, #40]	; 0x28
   849d8:	aa28      	add	r2, sp, #160	; 0xa0
   849da:	931d      	str	r3, [sp, #116]	; 0x74
   849dc:	f004 fb8a 	bl	890f4 <__ssprint_r>
   849e0:	2800      	cmp	r0, #0
   849e2:	f47f a88a 	bne.w	83afa <_svfprintf_r+0x2c6>
   849e6:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   849ea:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   849ec:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   849ee:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   849f2:	f7ff b8b8 	b.w	83b66 <_svfprintf_r+0x332>
   849f6:	2301      	movs	r3, #1
   849f8:	f8c8 3004 	str.w	r3, [r8, #4]
   849fc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   849fe:	4abc      	ldr	r2, [pc, #752]	; (84cf0 <_svfprintf_r+0x14bc>)
   84a00:	3301      	adds	r3, #1
   84a02:	3401      	adds	r4, #1
   84a04:	2b07      	cmp	r3, #7
   84a06:	942a      	str	r4, [sp, #168]	; 0xa8
   84a08:	9329      	str	r3, [sp, #164]	; 0xa4
   84a0a:	f8c8 2000 	str.w	r2, [r8]
   84a0e:	f300 8117 	bgt.w	84c40 <_svfprintf_r+0x140c>
   84a12:	f108 0808 	add.w	r8, r8, #8
   84a16:	2900      	cmp	r1, #0
   84a18:	f040 8086 	bne.w	84b28 <_svfprintf_r+0x12f4>
   84a1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84a1e:	f007 0301 	and.w	r3, r7, #1
   84a22:	4313      	orrs	r3, r2
   84a24:	f43f a8e0 	beq.w	83be8 <_svfprintf_r+0x3b4>
   84a28:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84a2a:	9917      	ldr	r1, [sp, #92]	; 0x5c
   84a2c:	191a      	adds	r2, r3, r4
   84a2e:	e9c8 1300 	strd	r1, r3, [r8]
   84a32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84a34:	922a      	str	r2, [sp, #168]	; 0xa8
   84a36:	3301      	adds	r3, #1
   84a38:	2b07      	cmp	r3, #7
   84a3a:	9329      	str	r3, [sp, #164]	; 0xa4
   84a3c:	f300 8137 	bgt.w	84cae <_svfprintf_r+0x147a>
   84a40:	f108 0808 	add.w	r8, r8, #8
   84a44:	9912      	ldr	r1, [sp, #72]	; 0x48
   84a46:	3301      	adds	r3, #1
   84a48:	188c      	adds	r4, r1, r2
   84a4a:	2b07      	cmp	r3, #7
   84a4c:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84a50:	f8c8 5000 	str.w	r5, [r8]
   84a54:	f8c8 1004 	str.w	r1, [r8, #4]
   84a58:	f77f a8c4 	ble.w	83be4 <_svfprintf_r+0x3b0>
   84a5c:	f7ff bbac 	b.w	841b8 <_svfprintf_r+0x984>
   84a60:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   84a64:	f000 80a5 	beq.w	84bb2 <_svfprintf_r+0x137e>
   84a68:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84a6a:	4699      	mov	r9, r3
   84a6c:	f852 4b04 	ldr.w	r4, [r2], #4
   84a70:	920e      	str	r2, [sp, #56]	; 0x38
   84a72:	b2a4      	uxth	r4, r4
   84a74:	e664      	b.n	84740 <_svfprintf_r+0xf0c>
   84a76:	46bb      	mov	fp, r7
   84a78:	f7fe bfca 	b.w	83a10 <_svfprintf_r+0x1dc>
   84a7c:	990c      	ldr	r1, [sp, #48]	; 0x30
   84a7e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84a80:	aa28      	add	r2, sp, #160	; 0xa0
   84a82:	f004 fb37 	bl	890f4 <__ssprint_r>
   84a86:	2800      	cmp	r0, #0
   84a88:	f47f a837 	bne.w	83afa <_svfprintf_r+0x2c6>
   84a8c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84a8e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84a92:	f7ff ba7b 	b.w	83f8c <_svfprintf_r+0x758>
   84a96:	4614      	mov	r4, r2
   84a98:	463a      	mov	r2, r7
   84a9a:	464f      	mov	r7, r9
   84a9c:	4691      	mov	r9, r2
   84a9e:	3301      	adds	r3, #1
   84aa0:	442c      	add	r4, r5
   84aa2:	2b07      	cmp	r3, #7
   84aa4:	f8c8 9000 	str.w	r9, [r8]
   84aa8:	f8c8 5004 	str.w	r5, [r8, #4]
   84aac:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84ab0:	f77f a898 	ble.w	83be4 <_svfprintf_r+0x3b0>
   84ab4:	f7ff bb80 	b.w	841b8 <_svfprintf_r+0x984>
   84ab8:	4659      	mov	r1, fp
   84aba:	4650      	mov	r0, sl
   84abc:	aa28      	add	r2, sp, #160	; 0xa0
   84abe:	f004 fb19 	bl	890f4 <__ssprint_r>
   84ac2:	2800      	cmp	r0, #0
   84ac4:	f47f a819 	bne.w	83afa <_svfprintf_r+0x2c6>
   84ac8:	7838      	ldrb	r0, [r7, #0]
   84aca:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84acc:	aa2b      	add	r2, sp, #172	; 0xac
   84ace:	e6e1      	b.n	84894 <_svfprintf_r+0x1060>
   84ad0:	990c      	ldr	r1, [sp, #48]	; 0x30
   84ad2:	980a      	ldr	r0, [sp, #40]	; 0x28
   84ad4:	aa28      	add	r2, sp, #160	; 0xa0
   84ad6:	f004 fb0d 	bl	890f4 <__ssprint_r>
   84ada:	2800      	cmp	r0, #0
   84adc:	f47f a80d 	bne.w	83afa <_svfprintf_r+0x2c6>
   84ae0:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84ae2:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84ae6:	f7ff b865 	b.w	83bb4 <_svfprintf_r+0x380>
   84aea:	2b01      	cmp	r3, #1
   84aec:	46bb      	mov	fp, r7
   84aee:	f47f a9f5 	bne.w	83edc <_svfprintf_r+0x6a8>
   84af2:	f7fe bf92 	b.w	83a1a <_svfprintf_r+0x1e6>
   84af6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84af8:	9908      	ldr	r1, [sp, #32]
   84afa:	f853 2b04 	ldr.w	r2, [r3], #4
   84afe:	4655      	mov	r5, sl
   84b00:	6011      	str	r1, [r2, #0]
   84b02:	930e      	str	r3, [sp, #56]	; 0x38
   84b04:	f7ff b88e 	b.w	83c24 <_svfprintf_r+0x3f0>
   84b08:	2b06      	cmp	r3, #6
   84b0a:	4629      	mov	r1, r5
   84b0c:	bf28      	it	cs
   84b0e:	2306      	movcs	r3, #6
   84b10:	462a      	mov	r2, r5
   84b12:	9507      	str	r5, [sp, #28]
   84b14:	950d      	str	r5, [sp, #52]	; 0x34
   84b16:	9306      	str	r3, [sp, #24]
   84b18:	4d76      	ldr	r5, [pc, #472]	; (84cf4 <_svfprintf_r+0x14c0>)
   84b1a:	940e      	str	r4, [sp, #56]	; 0x38
   84b1c:	930b      	str	r3, [sp, #44]	; 0x2c
   84b1e:	910f      	str	r1, [sp, #60]	; 0x3c
   84b20:	9113      	str	r1, [sp, #76]	; 0x4c
   84b22:	9110      	str	r1, [sp, #64]	; 0x40
   84b24:	f7fe bf8e 	b.w	83a44 <_svfprintf_r+0x210>
   84b28:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84b2a:	9817      	ldr	r0, [sp, #92]	; 0x5c
   84b2c:	191a      	adds	r2, r3, r4
   84b2e:	e9c8 0300 	strd	r0, r3, [r8]
   84b32:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84b34:	922a      	str	r2, [sp, #168]	; 0xa8
   84b36:	3301      	adds	r3, #1
   84b38:	2b07      	cmp	r3, #7
   84b3a:	9329      	str	r3, [sp, #164]	; 0xa4
   84b3c:	f300 80b7 	bgt.w	84cae <_svfprintf_r+0x147a>
   84b40:	f108 0808 	add.w	r8, r8, #8
   84b44:	2900      	cmp	r1, #0
   84b46:	f6bf af7d 	bge.w	84a44 <_svfprintf_r+0x1210>
   84b4a:	424e      	negs	r6, r1
   84b4c:	3110      	adds	r1, #16
   84b4e:	f280 83a9 	bge.w	852a4 <_svfprintf_r+0x1a70>
   84b52:	4641      	mov	r1, r8
   84b54:	2410      	movs	r4, #16
   84b56:	46a8      	mov	r8, r5
   84b58:	f8df 919c 	ldr.w	r9, [pc, #412]	; 84cf8 <_svfprintf_r+0x14c4>
   84b5c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   84b60:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84b62:	e004      	b.n	84b6e <_svfprintf_r+0x133a>
   84b64:	3108      	adds	r1, #8
   84b66:	3e10      	subs	r6, #16
   84b68:	2e10      	cmp	r6, #16
   84b6a:	f340 82a7 	ble.w	850bc <_svfprintf_r+0x1888>
   84b6e:	3301      	adds	r3, #1
   84b70:	3210      	adds	r2, #16
   84b72:	2b07      	cmp	r3, #7
   84b74:	e9c1 9400 	strd	r9, r4, [r1]
   84b78:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   84b7c:	ddf2      	ble.n	84b64 <_svfprintf_r+0x1330>
   84b7e:	4629      	mov	r1, r5
   84b80:	4658      	mov	r0, fp
   84b82:	aa28      	add	r2, sp, #160	; 0xa0
   84b84:	f004 fab6 	bl	890f4 <__ssprint_r>
   84b88:	2800      	cmp	r0, #0
   84b8a:	f47e afb6 	bne.w	83afa <_svfprintf_r+0x2c6>
   84b8e:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84b92:	a92b      	add	r1, sp, #172	; 0xac
   84b94:	e7e7      	b.n	84b66 <_svfprintf_r+0x1332>
   84b96:	4614      	mov	r4, r2
   84b98:	9f07      	ldr	r7, [sp, #28]
   84b9a:	3601      	adds	r6, #1
   84b9c:	442c      	add	r4, r5
   84b9e:	2e07      	cmp	r6, #7
   84ba0:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   84ba4:	f8c8 9000 	str.w	r9, [r8]
   84ba8:	f8c8 5004 	str.w	r5, [r8, #4]
   84bac:	f77f aaf5 	ble.w	8419a <_svfprintf_r+0x966>
   84bb0:	e44e      	b.n	84450 <_svfprintf_r+0xc1c>
   84bb2:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   84bb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84bb8:	d066      	beq.n	84c88 <_svfprintf_r+0x1454>
   84bba:	f853 4b04 	ldr.w	r4, [r3], #4
   84bbe:	4691      	mov	r9, r2
   84bc0:	930e      	str	r3, [sp, #56]	; 0x38
   84bc2:	b2e4      	uxtb	r4, r4
   84bc4:	e5bc      	b.n	84740 <_svfprintf_r+0xf0c>
   84bc6:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   84bca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84bcc:	d057      	beq.n	84c7e <_svfprintf_r+0x144a>
   84bce:	f853 4b04 	ldr.w	r4, [r3], #4
   84bd2:	4691      	mov	r9, r2
   84bd4:	930e      	str	r3, [sp, #56]	; 0x38
   84bd6:	b2e4      	uxtb	r4, r4
   84bd8:	f7fe bf49 	b.w	83a6e <_svfprintf_r+0x23a>
   84bdc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84bde:	f8df 9118 	ldr.w	r9, [pc, #280]	; 84cf8 <_svfprintf_r+0x14c4>
   84be2:	f7ff ba95 	b.w	84110 <_svfprintf_r+0x8dc>
   84be6:	222d      	movs	r2, #45	; 0x2d
   84be8:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   84bec:	f7ff b857 	b.w	83c9e <_svfprintf_r+0x46a>
   84bf0:	4645      	mov	r5, r8
   84bf2:	4690      	mov	r8, r2
   84bf4:	463a      	mov	r2, r7
   84bf6:	460c      	mov	r4, r1
   84bf8:	464f      	mov	r7, r9
   84bfa:	4691      	mov	r9, r2
   84bfc:	3301      	adds	r3, #1
   84bfe:	4434      	add	r4, r6
   84c00:	2b07      	cmp	r3, #7
   84c02:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84c06:	f8c8 9000 	str.w	r9, [r8]
   84c0a:	f8c8 6004 	str.w	r6, [r8, #4]
   84c0e:	dc5c      	bgt.n	84cca <_svfprintf_r+0x1496>
   84c10:	f108 0808 	add.w	r8, r8, #8
   84c14:	f7ff bb9e 	b.w	84354 <_svfprintf_r+0xb20>
   84c18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   84c1a:	991b      	ldr	r1, [sp, #108]	; 0x6c
   84c1c:	1aed      	subs	r5, r5, r3
   84c1e:	461a      	mov	r2, r3
   84c20:	4628      	mov	r0, r5
   84c22:	f7fe fdd3 	bl	837cc <strncpy>
   84c26:	f898 3001 	ldrb.w	r3, [r8, #1]
   84c2a:	b10b      	cbz	r3, 84c30 <_svfprintf_r+0x13fc>
   84c2c:	f108 0801 	add.w	r8, r8, #1
   84c30:	4620      	mov	r0, r4
   84c32:	4649      	mov	r1, r9
   84c34:	220a      	movs	r2, #10
   84c36:	2300      	movs	r3, #0
   84c38:	2600      	movs	r6, #0
   84c3a:	f005 f9d9 	bl	89ff0 <__aeabi_uldivmod>
   84c3e:	e69f      	b.n	84980 <_svfprintf_r+0x114c>
   84c40:	990c      	ldr	r1, [sp, #48]	; 0x30
   84c42:	980a      	ldr	r0, [sp, #40]	; 0x28
   84c44:	aa28      	add	r2, sp, #160	; 0xa0
   84c46:	f004 fa55 	bl	890f4 <__ssprint_r>
   84c4a:	2800      	cmp	r0, #0
   84c4c:	f47e af55 	bne.w	83afa <_svfprintf_r+0x2c6>
   84c50:	9922      	ldr	r1, [sp, #136]	; 0x88
   84c52:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84c54:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84c58:	e6dd      	b.n	84a16 <_svfprintf_r+0x11e2>
   84c5a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84c5c:	18ae      	adds	r6, r5, r2
   84c5e:	eba6 060b 	sub.w	r6, r6, fp
   84c62:	1ad5      	subs	r5, r2, r3
   84c64:	42ae      	cmp	r6, r5
   84c66:	bfa8      	it	ge
   84c68:	462e      	movge	r6, r5
   84c6a:	f7ff bba6 	b.w	843ba <_svfprintf_r+0xb86>
   84c6e:	f852 4b04 	ldr.w	r4, [r2], #4
   84c72:	4689      	mov	r9, r1
   84c74:	2301      	movs	r3, #1
   84c76:	920e      	str	r2, [sp, #56]	; 0x38
   84c78:	b2e4      	uxtb	r4, r4
   84c7a:	f7fe befb 	b.w	83a74 <_svfprintf_r+0x240>
   84c7e:	f853 4b04 	ldr.w	r4, [r3], #4
   84c82:	930e      	str	r3, [sp, #56]	; 0x38
   84c84:	f7fe bef3 	b.w	83a6e <_svfprintf_r+0x23a>
   84c88:	f853 4b04 	ldr.w	r4, [r3], #4
   84c8c:	930e      	str	r3, [sp, #56]	; 0x38
   84c8e:	e557      	b.n	84740 <_svfprintf_r+0xf0c>
   84c90:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84c92:	9908      	ldr	r1, [sp, #32]
   84c94:	f853 2b04 	ldr.w	r2, [r3], #4
   84c98:	4655      	mov	r5, sl
   84c9a:	8011      	strh	r1, [r2, #0]
   84c9c:	930e      	str	r3, [sp, #56]	; 0x38
   84c9e:	f7fe bfc1 	b.w	83c24 <_svfprintf_r+0x3f0>
   84ca2:	f344 19c0 	sbfx	r9, r4, #7, #1
   84ca6:	464b      	mov	r3, r9
   84ca8:	b264      	sxtb	r4, r4
   84caa:	f7fe bea4 	b.w	839f6 <_svfprintf_r+0x1c2>
   84cae:	990c      	ldr	r1, [sp, #48]	; 0x30
   84cb0:	980a      	ldr	r0, [sp, #40]	; 0x28
   84cb2:	aa28      	add	r2, sp, #160	; 0xa0
   84cb4:	f004 fa1e 	bl	890f4 <__ssprint_r>
   84cb8:	2800      	cmp	r0, #0
   84cba:	f47e af1e 	bne.w	83afa <_svfprintf_r+0x2c6>
   84cbe:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   84cc2:	9922      	ldr	r1, [sp, #136]	; 0x88
   84cc4:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84cc8:	e73c      	b.n	84b44 <_svfprintf_r+0x1310>
   84cca:	990c      	ldr	r1, [sp, #48]	; 0x30
   84ccc:	980a      	ldr	r0, [sp, #40]	; 0x28
   84cce:	aa28      	add	r2, sp, #160	; 0xa0
   84cd0:	f004 fa10 	bl	890f4 <__ssprint_r>
   84cd4:	2800      	cmp	r0, #0
   84cd6:	f47e af10 	bne.w	83afa <_svfprintf_r+0x2c6>
   84cda:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84cdc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84ce0:	f7ff bb38 	b.w	84354 <_svfprintf_r+0xb20>
   84ce4:	2306      	movs	r3, #6
   84ce6:	9307      	str	r3, [sp, #28]
   84ce8:	f026 0320 	bic.w	r3, r6, #32
   84cec:	9306      	str	r3, [sp, #24]
   84cee:	e470      	b.n	845d2 <_svfprintf_r+0xd9e>
   84cf0:	0008a3c8 	.word	0x0008a3c8
   84cf4:	0008a3c0 	.word	0x0008a3c0
   84cf8:	0008a3dc 	.word	0x0008a3dc
   84cfc:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
   84d00:	18eb      	adds	r3, r5, r3
   84d02:	429e      	cmp	r6, r3
   84d04:	46b3      	mov	fp, r6
   84d06:	9719      	str	r7, [sp, #100]	; 0x64
   84d08:	4690      	mov	r8, r2
   84d0a:	460c      	mov	r4, r1
   84d0c:	bf28      	it	cs
   84d0e:	469b      	movcs	fp, r3
   84d10:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   84d14:	9f10      	ldr	r7, [sp, #64]	; 0x40
   84d16:	f7ff bb23 	b.w	84360 <_svfprintf_r+0xb2c>
   84d1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84d1c:	1cda      	adds	r2, r3, #3
   84d1e:	9310      	str	r3, [sp, #64]	; 0x40
   84d20:	db02      	blt.n	84d28 <_svfprintf_r+0x14f4>
   84d22:	9a07      	ldr	r2, [sp, #28]
   84d24:	4293      	cmp	r3, r2
   84d26:	dd04      	ble.n	84d32 <_svfprintf_r+0x14fe>
   84d28:	3e02      	subs	r6, #2
   84d2a:	f026 0320 	bic.w	r3, r6, #32
   84d2e:	9306      	str	r3, [sp, #24]
   84d30:	e48b      	b.n	8464a <_svfprintf_r+0xe16>
   84d32:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84d34:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84d36:	4293      	cmp	r3, r2
   84d38:	f2c0 80c2 	blt.w	84ec0 <_svfprintf_r+0x168c>
   84d3c:	f019 0f01 	tst.w	r9, #1
   84d40:	f000 821d 	beq.w	8517e <_svfprintf_r+0x194a>
   84d44:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84d46:	4413      	add	r3, r2
   84d48:	930b      	str	r3, [sp, #44]	; 0x2c
   84d4a:	f419 6f80 	tst.w	r9, #1024	; 0x400
   84d4e:	f000 8214 	beq.w	8517a <_svfprintf_r+0x1946>
   84d52:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84d54:	2667      	movs	r6, #103	; 0x67
   84d56:	2b00      	cmp	r3, #0
   84d58:	dc76      	bgt.n	84e48 <_svfprintf_r+0x1614>
   84d5a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84d5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84d60:	9306      	str	r3, [sp, #24]
   84d62:	2300      	movs	r3, #0
   84d64:	930f      	str	r3, [sp, #60]	; 0x3c
   84d66:	9313      	str	r3, [sp, #76]	; 0x4c
   84d68:	e4cf      	b.n	8470a <_svfprintf_r+0xed6>
   84d6a:	222d      	movs	r2, #45	; 0x2d
   84d6c:	2300      	movs	r3, #0
   84d6e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   84d72:	9307      	str	r3, [sp, #28]
   84d74:	f7fe be68 	b.w	83a48 <_svfprintf_r+0x214>
   84d78:	990c      	ldr	r1, [sp, #48]	; 0x30
   84d7a:	980a      	ldr	r0, [sp, #40]	; 0x28
   84d7c:	aa28      	add	r2, sp, #160	; 0xa0
   84d7e:	f004 f9b9 	bl	890f4 <__ssprint_r>
   84d82:	2800      	cmp	r0, #0
   84d84:	f47e aeb9 	bne.w	83afa <_svfprintf_r+0x2c6>
   84d88:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84d8a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84d8e:	f7ff bad8 	b.w	84342 <_svfprintf_r+0xb0e>
   84d92:	4659      	mov	r1, fp
   84d94:	4650      	mov	r0, sl
   84d96:	aa28      	add	r2, sp, #160	; 0xa0
   84d98:	f004 f9ac 	bl	890f4 <__ssprint_r>
   84d9c:	2800      	cmp	r0, #0
   84d9e:	f47e aeac 	bne.w	83afa <_svfprintf_r+0x2c6>
   84da2:	7838      	ldrb	r0, [r7, #0]
   84da4:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84da6:	aa2b      	add	r2, sp, #172	; 0xac
   84da8:	4406      	add	r6, r0
   84daa:	e57a      	b.n	848a2 <_svfprintf_r+0x106e>
   84dac:	990c      	ldr	r1, [sp, #48]	; 0x30
   84dae:	980a      	ldr	r0, [sp, #40]	; 0x28
   84db0:	aa28      	add	r2, sp, #160	; 0xa0
   84db2:	f004 f99f 	bl	890f4 <__ssprint_r>
   84db6:	2800      	cmp	r0, #0
   84db8:	f47e ae9f 	bne.w	83afa <_svfprintf_r+0x2c6>
   84dbc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84dbe:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84dc0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84dc4:	f7ff bae1 	b.w	8438a <_svfprintf_r+0xb56>
   84dc8:	9907      	ldr	r1, [sp, #28]
   84dca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84dcc:	9101      	str	r1, [sp, #4]
   84dce:	2103      	movs	r1, #3
   84dd0:	9100      	str	r1, [sp, #0]
   84dd2:	a926      	add	r1, sp, #152	; 0x98
   84dd4:	9104      	str	r1, [sp, #16]
   84dd6:	a923      	add	r1, sp, #140	; 0x8c
   84dd8:	9103      	str	r1, [sp, #12]
   84dda:	a922      	add	r1, sp, #136	; 0x88
   84ddc:	465a      	mov	r2, fp
   84dde:	980a      	ldr	r0, [sp, #40]	; 0x28
   84de0:	9102      	str	r1, [sp, #8]
   84de2:	f001 fad5 	bl	86390 <_dtoa_r>
   84de6:	7803      	ldrb	r3, [r0, #0]
   84de8:	4605      	mov	r5, r0
   84dea:	2b30      	cmp	r3, #48	; 0x30
   84dec:	f000 8216 	beq.w	8521c <_svfprintf_r+0x19e8>
   84df0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84df2:	9a07      	ldr	r2, [sp, #28]
   84df4:	46b9      	mov	r9, r7
   84df6:	4413      	add	r3, r2
   84df8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   84dfa:	18ec      	adds	r4, r5, r3
   84dfc:	4658      	mov	r0, fp
   84dfe:	2200      	movs	r2, #0
   84e00:	2300      	movs	r3, #0
   84e02:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84e04:	f005 f884 	bl	89f10 <__aeabi_dcmpeq>
   84e08:	b108      	cbz	r0, 84e0e <_svfprintf_r+0x15da>
   84e0a:	4623      	mov	r3, r4
   84e0c:	e411      	b.n	84632 <_svfprintf_r+0xdfe>
   84e0e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84e10:	42a3      	cmp	r3, r4
   84e12:	f4bf ac0e 	bcs.w	84632 <_svfprintf_r+0xdfe>
   84e16:	2130      	movs	r1, #48	; 0x30
   84e18:	1c5a      	adds	r2, r3, #1
   84e1a:	9226      	str	r2, [sp, #152]	; 0x98
   84e1c:	7019      	strb	r1, [r3, #0]
   84e1e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84e20:	429c      	cmp	r4, r3
   84e22:	d8f9      	bhi.n	84e18 <_svfprintf_r+0x15e4>
   84e24:	e405      	b.n	84632 <_svfprintf_r+0xdfe>
   84e26:	9a22      	ldr	r2, [sp, #136]	; 0x88
   84e28:	2a00      	cmp	r2, #0
   84e2a:	9210      	str	r2, [sp, #64]	; 0x40
   84e2c:	f340 820e 	ble.w	8524c <_svfprintf_r+0x1a18>
   84e30:	9907      	ldr	r1, [sp, #28]
   84e32:	f009 0301 	and.w	r3, r9, #1
   84e36:	430b      	orrs	r3, r1
   84e38:	f040 817e 	bne.w	85138 <_svfprintf_r+0x1904>
   84e3c:	2666      	movs	r6, #102	; 0x66
   84e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84e40:	930b      	str	r3, [sp, #44]	; 0x2c
   84e42:	f419 6f80 	tst.w	r9, #1024	; 0x400
   84e46:	d088      	beq.n	84d5a <_svfprintf_r+0x1526>
   84e48:	9919      	ldr	r1, [sp, #100]	; 0x64
   84e4a:	780b      	ldrb	r3, [r1, #0]
   84e4c:	2bff      	cmp	r3, #255	; 0xff
   84e4e:	f000 8225 	beq.w	8529c <_svfprintf_r+0x1a68>
   84e52:	2400      	movs	r4, #0
   84e54:	9a10      	ldr	r2, [sp, #64]	; 0x40
   84e56:	4620      	mov	r0, r4
   84e58:	e004      	b.n	84e64 <_svfprintf_r+0x1630>
   84e5a:	3001      	adds	r0, #1
   84e5c:	3101      	adds	r1, #1
   84e5e:	2bff      	cmp	r3, #255	; 0xff
   84e60:	f000 8159 	beq.w	85116 <_svfprintf_r+0x18e2>
   84e64:	4293      	cmp	r3, r2
   84e66:	f280 8156 	bge.w	85116 <_svfprintf_r+0x18e2>
   84e6a:	1ad2      	subs	r2, r2, r3
   84e6c:	784b      	ldrb	r3, [r1, #1]
   84e6e:	2b00      	cmp	r3, #0
   84e70:	d1f3      	bne.n	84e5a <_svfprintf_r+0x1626>
   84e72:	780b      	ldrb	r3, [r1, #0]
   84e74:	3401      	adds	r4, #1
   84e76:	e7f2      	b.n	84e5e <_svfprintf_r+0x162a>
   84e78:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   84e7c:	f7ff b9da 	b.w	84234 <_svfprintf_r+0xa00>
   84e80:	9b07      	ldr	r3, [sp, #28]
   84e82:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84e86:	940e      	str	r4, [sp, #56]	; 0x38
   84e88:	9306      	str	r3, [sp, #24]
   84e8a:	930b      	str	r3, [sp, #44]	; 0x2c
   84e8c:	9007      	str	r0, [sp, #28]
   84e8e:	900f      	str	r0, [sp, #60]	; 0x3c
   84e90:	9013      	str	r0, [sp, #76]	; 0x4c
   84e92:	9010      	str	r0, [sp, #64]	; 0x40
   84e94:	f7fe bdd6 	b.w	83a44 <_svfprintf_r+0x210>
   84e98:	990c      	ldr	r1, [sp, #48]	; 0x30
   84e9a:	980a      	ldr	r0, [sp, #40]	; 0x28
   84e9c:	aa28      	add	r2, sp, #160	; 0xa0
   84e9e:	f004 f929 	bl	890f4 <__ssprint_r>
   84ea2:	2800      	cmp	r0, #0
   84ea4:	f47e ae29 	bne.w	83afa <_svfprintf_r+0x2c6>
   84ea8:	9d22      	ldr	r5, [sp, #136]	; 0x88
   84eaa:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84eac:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84eae:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84eb2:	1b5d      	subs	r5, r3, r5
   84eb4:	f7ff ba81 	b.w	843ba <_svfprintf_r+0xb86>
   84eb8:	2300      	movs	r3, #0
   84eba:	9307      	str	r3, [sp, #28]
   84ebc:	f7fe bd0b 	b.w	838d6 <_svfprintf_r+0xa2>
   84ec0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84ec2:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84ec4:	189a      	adds	r2, r3, r2
   84ec6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84ec8:	920b      	str	r2, [sp, #44]	; 0x2c
   84eca:	2b00      	cmp	r3, #0
   84ecc:	f340 8185 	ble.w	851da <_svfprintf_r+0x19a6>
   84ed0:	2667      	movs	r6, #103	; 0x67
   84ed2:	e7b6      	b.n	84e42 <_svfprintf_r+0x160e>
   84ed4:	2330      	movs	r3, #48	; 0x30
   84ed6:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   84eda:	2358      	movs	r3, #88	; 0x58
   84edc:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
   84ee0:	9b07      	ldr	r3, [sp, #28]
   84ee2:	f047 0402 	orr.w	r4, r7, #2
   84ee6:	2b63      	cmp	r3, #99	; 0x63
   84ee8:	f300 80c4 	bgt.w	85074 <_svfprintf_r+0x1840>
   84eec:	2300      	movs	r3, #0
   84eee:	ad3b      	add	r5, sp, #236	; 0xec
   84ef0:	930d      	str	r3, [sp, #52]	; 0x34
   84ef2:	f447 7381 	orr.w	r3, r7, #258	; 0x102
   84ef6:	930f      	str	r3, [sp, #60]	; 0x3c
   84ef8:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   84efc:	4613      	mov	r3, r2
   84efe:	2b00      	cmp	r3, #0
   84f00:	4627      	mov	r7, r4
   84f02:	f2c0 8084 	blt.w	8500e <_svfprintf_r+0x17da>
   84f06:	930b      	str	r3, [sp, #44]	; 0x2c
   84f08:	2300      	movs	r3, #0
   84f0a:	468b      	mov	fp, r1
   84f0c:	931d      	str	r3, [sp, #116]	; 0x74
   84f0e:	f026 0320 	bic.w	r3, r6, #32
   84f12:	9306      	str	r3, [sp, #24]
   84f14:	2e61      	cmp	r6, #97	; 0x61
   84f16:	f000 8118 	beq.w	8514a <_svfprintf_r+0x1916>
   84f1a:	2e41      	cmp	r6, #65	; 0x41
   84f1c:	f47f ab67 	bne.w	845ee <_svfprintf_r+0xdba>
   84f20:	aa22      	add	r2, sp, #136	; 0x88
   84f22:	4658      	mov	r0, fp
   84f24:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84f26:	f004 f855 	bl	88fd4 <frexp>
   84f2a:	2200      	movs	r2, #0
   84f2c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   84f30:	f004 fd86 	bl	89a40 <__aeabi_dmul>
   84f34:	4602      	mov	r2, r0
   84f36:	460b      	mov	r3, r1
   84f38:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   84f3c:	2200      	movs	r2, #0
   84f3e:	2300      	movs	r3, #0
   84f40:	f004 ffe6 	bl	89f10 <__aeabi_dcmpeq>
   84f44:	b108      	cbz	r0, 84f4a <_svfprintf_r+0x1716>
   84f46:	2301      	movs	r3, #1
   84f48:	9322      	str	r3, [sp, #136]	; 0x88
   84f4a:	4bad      	ldr	r3, [pc, #692]	; (85200 <_svfprintf_r+0x19cc>)
   84f4c:	930b      	str	r3, [sp, #44]	; 0x2c
   84f4e:	9b07      	ldr	r3, [sp, #28]
   84f50:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
   84f54:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
   84f58:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   84f5c:	46ab      	mov	fp, r5
   84f5e:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   84f62:	f103 39ff 	add.w	r9, r3, #4294967295
   84f66:	9510      	str	r5, [sp, #64]	; 0x40
   84f68:	e006      	b.n	84f78 <_svfprintf_r+0x1744>
   84f6a:	2200      	movs	r2, #0
   84f6c:	2300      	movs	r3, #0
   84f6e:	f109 39ff 	add.w	r9, r9, #4294967295
   84f72:	f004 ffcd 	bl	89f10 <__aeabi_dcmpeq>
   84f76:	b9e8      	cbnz	r0, 84fb4 <_svfprintf_r+0x1780>
   84f78:	2200      	movs	r2, #0
   84f7a:	4ba2      	ldr	r3, [pc, #648]	; (85204 <_svfprintf_r+0x19d0>)
   84f7c:	4630      	mov	r0, r6
   84f7e:	4639      	mov	r1, r7
   84f80:	f004 fd5e 	bl	89a40 <__aeabi_dmul>
   84f84:	460f      	mov	r7, r1
   84f86:	4606      	mov	r6, r0
   84f88:	f005 f80a 	bl	89fa0 <__aeabi_d2iz>
   84f8c:	4604      	mov	r4, r0
   84f8e:	f004 fced 	bl	8996c <__aeabi_i2d>
   84f92:	460b      	mov	r3, r1
   84f94:	4602      	mov	r2, r0
   84f96:	4639      	mov	r1, r7
   84f98:	4630      	mov	r0, r6
   84f9a:	f004 fb99 	bl	896d0 <__aeabi_dsub>
   84f9e:	f81a 3004 	ldrb.w	r3, [sl, r4]
   84fa2:	f1b9 3fff 	cmp.w	r9, #4294967295
   84fa6:	46d8      	mov	r8, fp
   84fa8:	464d      	mov	r5, r9
   84faa:	4606      	mov	r6, r0
   84fac:	460f      	mov	r7, r1
   84fae:	f80b 3b01 	strb.w	r3, [fp], #1
   84fb2:	d1da      	bne.n	84f6a <_svfprintf_r+0x1736>
   84fb4:	4630      	mov	r0, r6
   84fb6:	4639      	mov	r1, r7
   84fb8:	2200      	movs	r2, #0
   84fba:	4b93      	ldr	r3, [pc, #588]	; (85208 <_svfprintf_r+0x19d4>)
   84fbc:	46a9      	mov	r9, r5
   84fbe:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   84fc2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   84fc4:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   84fc8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   84fcc:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
   84fd0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   84fd2:	9f1e      	ldr	r7, [sp, #120]	; 0x78
   84fd4:	f004 ffc4 	bl	89f60 <__aeabi_dcmpgt>
   84fd8:	bb80      	cbnz	r0, 8503c <_svfprintf_r+0x1808>
   84fda:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   84fde:	2200      	movs	r2, #0
   84fe0:	4b89      	ldr	r3, [pc, #548]	; (85208 <_svfprintf_r+0x19d4>)
   84fe2:	f004 ff95 	bl	89f10 <__aeabi_dcmpeq>
   84fe6:	b108      	cbz	r0, 84fec <_svfprintf_r+0x17b8>
   84fe8:	07e1      	lsls	r1, r4, #31
   84fea:	d427      	bmi.n	8503c <_svfprintf_r+0x1808>
   84fec:	464b      	mov	r3, r9
   84fee:	2b00      	cmp	r3, #0
   84ff0:	db06      	blt.n	85000 <_svfprintf_r+0x17cc>
   84ff2:	2230      	movs	r2, #48	; 0x30
   84ff4:	3301      	adds	r3, #1
   84ff6:	445b      	add	r3, fp
   84ff8:	f80b 2b01 	strb.w	r2, [fp], #1
   84ffc:	455b      	cmp	r3, fp
   84ffe:	d1fb      	bne.n	84ff8 <_svfprintf_r+0x17c4>
   85000:	ebab 0305 	sub.w	r3, fp, r5
   85004:	46b9      	mov	r9, r7
   85006:	9312      	str	r3, [sp, #72]	; 0x48
   85008:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8500a:	f7ff bb14 	b.w	84636 <_svfprintf_r+0xe02>
   8500e:	f026 0320 	bic.w	r3, r6, #32
   85012:	9306      	str	r3, [sp, #24]
   85014:	222d      	movs	r2, #45	; 0x2d
   85016:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   8501a:	469b      	mov	fp, r3
   8501c:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   85020:	921d      	str	r2, [sp, #116]	; 0x74
   85022:	930b      	str	r3, [sp, #44]	; 0x2c
   85024:	e776      	b.n	84f14 <_svfprintf_r+0x16e0>
   85026:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85028:	f7ff b95c 	b.w	842e4 <_svfprintf_r+0xab0>
   8502c:	9b07      	ldr	r3, [sp, #28]
   8502e:	18ec      	adds	r4, r5, r3
   85030:	e6e4      	b.n	84dfc <_svfprintf_r+0x15c8>
   85032:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   85034:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 8520c <_svfprintf_r+0x19d8>
   85038:	f7ff b827 	b.w	8408a <_svfprintf_r+0x856>
   8503c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8503e:	9326      	str	r3, [sp, #152]	; 0x98
   85040:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85042:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   85046:	7bd9      	ldrb	r1, [r3, #15]
   85048:	465b      	mov	r3, fp
   8504a:	428a      	cmp	r2, r1
   8504c:	d109      	bne.n	85062 <_svfprintf_r+0x182e>
   8504e:	2030      	movs	r0, #48	; 0x30
   85050:	f803 0c01 	strb.w	r0, [r3, #-1]
   85054:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85056:	1e5a      	subs	r2, r3, #1
   85058:	9226      	str	r2, [sp, #152]	; 0x98
   8505a:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   8505e:	4291      	cmp	r1, r2
   85060:	d0f6      	beq.n	85050 <_svfprintf_r+0x181c>
   85062:	2a39      	cmp	r2, #57	; 0x39
   85064:	bf0b      	itete	eq
   85066:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
   85068:	3201      	addne	r2, #1
   8506a:	7a92      	ldrbeq	r2, [r2, #10]
   8506c:	b2d2      	uxtbne	r2, r2
   8506e:	f803 2c01 	strb.w	r2, [r3, #-1]
   85072:	e7c5      	b.n	85000 <_svfprintf_r+0x17cc>
   85074:	980a      	ldr	r0, [sp, #40]	; 0x28
   85076:	1c59      	adds	r1, r3, #1
   85078:	f002 fe88 	bl	87d8c <_malloc_r>
   8507c:	4605      	mov	r5, r0
   8507e:	2800      	cmp	r0, #0
   85080:	f000 8117 	beq.w	852b2 <_svfprintf_r+0x1a7e>
   85084:	900d      	str	r0, [sp, #52]	; 0x34
   85086:	e734      	b.n	84ef2 <_svfprintf_r+0x16be>
   85088:	2102      	movs	r1, #2
   8508a:	9100      	str	r1, [sp, #0]
   8508c:	9907      	ldr	r1, [sp, #28]
   8508e:	465a      	mov	r2, fp
   85090:	1c4c      	adds	r4, r1, #1
   85092:	a926      	add	r1, sp, #152	; 0x98
   85094:	9104      	str	r1, [sp, #16]
   85096:	a923      	add	r1, sp, #140	; 0x8c
   85098:	9103      	str	r1, [sp, #12]
   8509a:	a922      	add	r1, sp, #136	; 0x88
   8509c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8509e:	980a      	ldr	r0, [sp, #40]	; 0x28
   850a0:	9401      	str	r4, [sp, #4]
   850a2:	9102      	str	r1, [sp, #8]
   850a4:	f001 f974 	bl	86390 <_dtoa_r>
   850a8:	4605      	mov	r5, r0
   850aa:	46b9      	mov	r9, r7
   850ac:	442c      	add	r4, r5
   850ae:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   850b0:	e6a4      	b.n	84dfc <_svfprintf_r+0x15c8>
   850b2:	2330      	movs	r3, #48	; 0x30
   850b4:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   850b8:	2378      	movs	r3, #120	; 0x78
   850ba:	e70f      	b.n	84edc <_svfprintf_r+0x16a8>
   850bc:	4645      	mov	r5, r8
   850be:	4688      	mov	r8, r1
   850c0:	3301      	adds	r3, #1
   850c2:	4432      	add	r2, r6
   850c4:	2b07      	cmp	r3, #7
   850c6:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   850ca:	f8c8 9000 	str.w	r9, [r8]
   850ce:	f8c8 6004 	str.w	r6, [r8, #4]
   850d2:	f77f acb5 	ble.w	84a40 <_svfprintf_r+0x120c>
   850d6:	990c      	ldr	r1, [sp, #48]	; 0x30
   850d8:	980a      	ldr	r0, [sp, #40]	; 0x28
   850da:	aa28      	add	r2, sp, #160	; 0xa0
   850dc:	f004 f80a 	bl	890f4 <__ssprint_r>
   850e0:	2800      	cmp	r0, #0
   850e2:	f47e ad0a 	bne.w	83afa <_svfprintf_r+0x2c6>
   850e6:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   850ea:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   850ee:	e4a9      	b.n	84a44 <_svfprintf_r+0x1210>
   850f0:	9b07      	ldr	r3, [sp, #28]
   850f2:	2b00      	cmp	r3, #0
   850f4:	bf08      	it	eq
   850f6:	2301      	moveq	r3, #1
   850f8:	9307      	str	r3, [sp, #28]
   850fa:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   850fe:	930f      	str	r3, [sp, #60]	; 0x3c
   85100:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85102:	2b00      	cmp	r3, #0
   85104:	f2c0 80b6 	blt.w	85274 <_svfprintf_r+0x1a40>
   85108:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
   8510c:	900d      	str	r0, [sp, #52]	; 0x34
   8510e:	930b      	str	r3, [sp, #44]	; 0x2c
   85110:	901d      	str	r0, [sp, #116]	; 0x74
   85112:	f7ff ba73 	b.w	845fc <_svfprintf_r+0xdc8>
   85116:	9119      	str	r1, [sp, #100]	; 0x64
   85118:	9210      	str	r2, [sp, #64]	; 0x40
   8511a:	9013      	str	r0, [sp, #76]	; 0x4c
   8511c:	940f      	str	r4, [sp, #60]	; 0x3c
   8511e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85120:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   85122:	991c      	ldr	r1, [sp, #112]	; 0x70
   85124:	4413      	add	r3, r2
   85126:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85128:	fb01 2303 	mla	r3, r1, r3, r2
   8512c:	930b      	str	r3, [sp, #44]	; 0x2c
   8512e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   85132:	9306      	str	r3, [sp, #24]
   85134:	f7ff bae9 	b.w	8470a <_svfprintf_r+0xed6>
   85138:	9b16      	ldr	r3, [sp, #88]	; 0x58
   8513a:	2666      	movs	r6, #102	; 0x66
   8513c:	18d3      	adds	r3, r2, r3
   8513e:	4419      	add	r1, r3
   85140:	910b      	str	r1, [sp, #44]	; 0x2c
   85142:	e67e      	b.n	84e42 <_svfprintf_r+0x160e>
   85144:	2300      	movs	r3, #0
   85146:	930d      	str	r3, [sp, #52]	; 0x34
   85148:	e764      	b.n	85014 <_svfprintf_r+0x17e0>
   8514a:	aa22      	add	r2, sp, #136	; 0x88
   8514c:	4658      	mov	r0, fp
   8514e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85150:	f003 ff40 	bl	88fd4 <frexp>
   85154:	2200      	movs	r2, #0
   85156:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   8515a:	f004 fc71 	bl	89a40 <__aeabi_dmul>
   8515e:	4602      	mov	r2, r0
   85160:	460b      	mov	r3, r1
   85162:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   85166:	2200      	movs	r2, #0
   85168:	2300      	movs	r3, #0
   8516a:	f004 fed1 	bl	89f10 <__aeabi_dcmpeq>
   8516e:	b108      	cbz	r0, 85174 <_svfprintf_r+0x1940>
   85170:	2301      	movs	r3, #1
   85172:	9322      	str	r3, [sp, #136]	; 0x88
   85174:	4b26      	ldr	r3, [pc, #152]	; (85210 <_svfprintf_r+0x19dc>)
   85176:	930b      	str	r3, [sp, #44]	; 0x2c
   85178:	e6e9      	b.n	84f4e <_svfprintf_r+0x171a>
   8517a:	2667      	movs	r6, #103	; 0x67
   8517c:	e5ed      	b.n	84d5a <_svfprintf_r+0x1526>
   8517e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85180:	930b      	str	r3, [sp, #44]	; 0x2c
   85182:	e5e2      	b.n	84d4a <_svfprintf_r+0x1516>
   85184:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85186:	2003      	movs	r0, #3
   85188:	2b00      	cmp	r3, #0
   8518a:	bfb8      	it	lt
   8518c:	222d      	movlt	r2, #45	; 0x2d
   8518e:	f04f 0300 	mov.w	r3, #0
   85192:	bfa8      	it	ge
   85194:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
   85198:	4619      	mov	r1, r3
   8519a:	930d      	str	r3, [sp, #52]	; 0x34
   8519c:	4d1d      	ldr	r5, [pc, #116]	; (85214 <_svfprintf_r+0x19e0>)
   8519e:	4b1e      	ldr	r3, [pc, #120]	; (85218 <_svfprintf_r+0x19e4>)
   851a0:	bfb8      	it	lt
   851a2:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
   851a6:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   851aa:	9006      	str	r0, [sp, #24]
   851ac:	f7fe bd7f 	b.w	83cae <_svfprintf_r+0x47a>
   851b0:	2900      	cmp	r1, #0
   851b2:	d144      	bne.n	8523e <_svfprintf_r+0x1a0a>
   851b4:	2230      	movs	r2, #48	; 0x30
   851b6:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
   851ba:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   851be:	3330      	adds	r3, #48	; 0x30
   851c0:	f802 3b01 	strb.w	r3, [r2], #1
   851c4:	ab24      	add	r3, sp, #144	; 0x90
   851c6:	1ad3      	subs	r3, r2, r3
   851c8:	931a      	str	r3, [sp, #104]	; 0x68
   851ca:	f7ff ba87 	b.w	846dc <_svfprintf_r+0xea8>
   851ce:	f106 020f 	add.w	r2, r6, #15
   851d2:	2101      	movs	r1, #1
   851d4:	b2d2      	uxtb	r2, r2
   851d6:	f7ff ba41 	b.w	8465c <_svfprintf_r+0xe28>
   851da:	f1c3 0301 	rsb	r3, r3, #1
   851de:	441a      	add	r2, r3
   851e0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   851e4:	2667      	movs	r6, #103	; 0x67
   851e6:	920b      	str	r2, [sp, #44]	; 0x2c
   851e8:	9306      	str	r3, [sp, #24]
   851ea:	e5ba      	b.n	84d62 <_svfprintf_r+0x152e>
   851ec:	f019 0f01 	tst.w	r9, #1
   851f0:	f43f aa7f 	beq.w	846f2 <_svfprintf_r+0xebe>
   851f4:	f7ff ba79 	b.w	846ea <_svfprintf_r+0xeb6>
   851f8:	9829      	ldr	r0, [sp, #164]	; 0xa4
   851fa:	f7ff bb7f 	b.w	848fc <_svfprintf_r+0x10c8>
   851fe:	bf00      	nop
   85200:	0008a3ac 	.word	0x0008a3ac
   85204:	40300000 	.word	0x40300000
   85208:	3fe00000 	.word	0x3fe00000
   8520c:	0008a3dc 	.word	0x0008a3dc
   85210:	0008a398 	.word	0x0008a398
   85214:	0008a390 	.word	0x0008a390
   85218:	0008a394 	.word	0x0008a394
   8521c:	4658      	mov	r0, fp
   8521e:	2200      	movs	r2, #0
   85220:	2300      	movs	r3, #0
   85222:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85224:	f004 fe74 	bl	89f10 <__aeabi_dcmpeq>
   85228:	2800      	cmp	r0, #0
   8522a:	f47f ade1 	bne.w	84df0 <_svfprintf_r+0x15bc>
   8522e:	9b07      	ldr	r3, [sp, #28]
   85230:	f1c3 0301 	rsb	r3, r3, #1
   85234:	9322      	str	r3, [sp, #136]	; 0x88
   85236:	e5dc      	b.n	84df2 <_svfprintf_r+0x15be>
   85238:	f8df 9098 	ldr.w	r9, [pc, #152]	; 852d4 <_svfprintf_r+0x1aa0>
   8523c:	e4ad      	b.n	84b9a <_svfprintf_r+0x1366>
   8523e:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   85242:	e7bc      	b.n	851be <_svfprintf_r+0x198a>
   85244:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85246:	f8df 908c 	ldr.w	r9, [pc, #140]	; 852d4 <_svfprintf_r+0x1aa0>
   8524a:	e428      	b.n	84a9e <_svfprintf_r+0x126a>
   8524c:	9a07      	ldr	r2, [sp, #28]
   8524e:	f009 0901 	and.w	r9, r9, #1
   85252:	ea59 0302 	orrs.w	r3, r9, r2
   85256:	d104      	bne.n	85262 <_svfprintf_r+0x1a2e>
   85258:	2301      	movs	r3, #1
   8525a:	2666      	movs	r6, #102	; 0x66
   8525c:	9306      	str	r3, [sp, #24]
   8525e:	930b      	str	r3, [sp, #44]	; 0x2c
   85260:	e57f      	b.n	84d62 <_svfprintf_r+0x152e>
   85262:	9b16      	ldr	r3, [sp, #88]	; 0x58
   85264:	2666      	movs	r6, #102	; 0x66
   85266:	3301      	adds	r3, #1
   85268:	441a      	add	r2, r3
   8526a:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   8526e:	920b      	str	r2, [sp, #44]	; 0x2c
   85270:	9306      	str	r3, [sp, #24]
   85272:	e576      	b.n	84d62 <_svfprintf_r+0x152e>
   85274:	900d      	str	r0, [sp, #52]	; 0x34
   85276:	e6cd      	b.n	85014 <_svfprintf_r+0x17e0>
   85278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8527a:	f89a 6001 	ldrb.w	r6, [sl, #1]
   8527e:	4692      	mov	sl, r2
   85280:	f853 2b04 	ldr.w	r2, [r3], #4
   85284:	930e      	str	r3, [sp, #56]	; 0x38
   85286:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
   8528a:	9307      	str	r3, [sp, #28]
   8528c:	f7fe bb21 	b.w	838d2 <_svfprintf_r+0x9e>
   85290:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85292:	f8df 9040 	ldr.w	r9, [pc, #64]	; 852d4 <_svfprintf_r+0x1aa0>
   85296:	e4b1      	b.n	84bfc <_svfprintf_r+0x13c8>
   85298:	9c07      	ldr	r4, [sp, #28]
   8529a:	e706      	b.n	850aa <_svfprintf_r+0x1876>
   8529c:	2300      	movs	r3, #0
   8529e:	930f      	str	r3, [sp, #60]	; 0x3c
   852a0:	9313      	str	r3, [sp, #76]	; 0x4c
   852a2:	e73c      	b.n	8511e <_svfprintf_r+0x18ea>
   852a4:	f8df 902c 	ldr.w	r9, [pc, #44]	; 852d4 <_svfprintf_r+0x1aa0>
   852a8:	e70a      	b.n	850c0 <_svfprintf_r+0x188c>
   852aa:	2302      	movs	r3, #2
   852ac:	931a      	str	r3, [sp, #104]	; 0x68
   852ae:	f7ff ba15 	b.w	846dc <_svfprintf_r+0xea8>
   852b2:	990c      	ldr	r1, [sp, #48]	; 0x30
   852b4:	898b      	ldrh	r3, [r1, #12]
   852b6:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   852ba:	4613      	mov	r3, r2
   852bc:	818a      	strh	r2, [r1, #12]
   852be:	f7fe bc24 	b.w	83b0a <_svfprintf_r+0x2d6>
   852c2:	f04f 32ff 	mov.w	r2, #4294967295
   852c6:	230c      	movs	r3, #12
   852c8:	9208      	str	r2, [sp, #32]
   852ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   852cc:	6013      	str	r3, [r2, #0]
   852ce:	f7fe bc23 	b.w	83b18 <_svfprintf_r+0x2e4>
   852d2:	bf00      	nop
   852d4:	0008a3dc 	.word	0x0008a3dc

000852d8 <__sprint_r.part.0>:
   852d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   852dc:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   852de:	4690      	mov	r8, r2
   852e0:	049c      	lsls	r4, r3, #18
   852e2:	d52d      	bpl.n	85340 <__sprint_r.part.0+0x68>
   852e4:	6893      	ldr	r3, [r2, #8]
   852e6:	6812      	ldr	r2, [r2, #0]
   852e8:	b343      	cbz	r3, 8533c <__sprint_r.part.0+0x64>
   852ea:	468b      	mov	fp, r1
   852ec:	4606      	mov	r6, r0
   852ee:	f102 0908 	add.w	r9, r2, #8
   852f2:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
   852f6:	ea5f 079a 	movs.w	r7, sl, lsr #2
   852fa:	d015      	beq.n	85328 <__sprint_r.part.0+0x50>
   852fc:	2400      	movs	r4, #0
   852fe:	3d04      	subs	r5, #4
   85300:	e001      	b.n	85306 <__sprint_r.part.0+0x2e>
   85302:	42a7      	cmp	r7, r4
   85304:	d00e      	beq.n	85324 <__sprint_r.part.0+0x4c>
   85306:	465a      	mov	r2, fp
   85308:	4630      	mov	r0, r6
   8530a:	f855 1f04 	ldr.w	r1, [r5, #4]!
   8530e:	f002 f963 	bl	875d8 <_fputwc_r>
   85312:	1c43      	adds	r3, r0, #1
   85314:	f104 0401 	add.w	r4, r4, #1
   85318:	d1f3      	bne.n	85302 <__sprint_r.part.0+0x2a>
   8531a:	2300      	movs	r3, #0
   8531c:	e9c8 3301 	strd	r3, r3, [r8, #4]
   85320:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85324:	f8d8 3008 	ldr.w	r3, [r8, #8]
   85328:	f02a 0a03 	bic.w	sl, sl, #3
   8532c:	eba3 030a 	sub.w	r3, r3, sl
   85330:	f8c8 3008 	str.w	r3, [r8, #8]
   85334:	f109 0908 	add.w	r9, r9, #8
   85338:	2b00      	cmp	r3, #0
   8533a:	d1da      	bne.n	852f2 <__sprint_r.part.0+0x1a>
   8533c:	2000      	movs	r0, #0
   8533e:	e7ec      	b.n	8531a <__sprint_r.part.0+0x42>
   85340:	f002 face 	bl	878e0 <__sfvwrite_r>
   85344:	2300      	movs	r3, #0
   85346:	e9c8 3301 	strd	r3, r3, [r8, #4]
   8534a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8534e:	bf00      	nop

00085350 <_vfiprintf_r>:
   85350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85354:	b0bd      	sub	sp, #244	; 0xf4
   85356:	461c      	mov	r4, r3
   85358:	4617      	mov	r7, r2
   8535a:	e9cd 3005 	strd	r3, r0, [sp, #20]
   8535e:	9102      	str	r1, [sp, #8]
   85360:	b118      	cbz	r0, 8536a <_vfiprintf_r+0x1a>
   85362:	6b83      	ldr	r3, [r0, #56]	; 0x38
   85364:	2b00      	cmp	r3, #0
   85366:	f000 8277 	beq.w	85858 <_vfiprintf_r+0x508>
   8536a:	9a02      	ldr	r2, [sp, #8]
   8536c:	6e53      	ldr	r3, [r2, #100]	; 0x64
   8536e:	07de      	lsls	r6, r3, #31
   85370:	f140 8184 	bpl.w	8567c <_vfiprintf_r+0x32c>
   85374:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
   85378:	b28a      	uxth	r2, r1
   8537a:	0490      	lsls	r0, r2, #18
   8537c:	d408      	bmi.n	85390 <_vfiprintf_r+0x40>
   8537e:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
   85382:	9902      	ldr	r1, [sp, #8]
   85384:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   85386:	818a      	strh	r2, [r1, #12]
   85388:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   8538c:	b292      	uxth	r2, r2
   8538e:	664b      	str	r3, [r1, #100]	; 0x64
   85390:	0711      	lsls	r1, r2, #28
   85392:	f140 80ec 	bpl.w	8556e <_vfiprintf_r+0x21e>
   85396:	9b02      	ldr	r3, [sp, #8]
   85398:	691b      	ldr	r3, [r3, #16]
   8539a:	2b00      	cmp	r3, #0
   8539c:	f000 80e7 	beq.w	8556e <_vfiprintf_r+0x21e>
   853a0:	f002 031a 	and.w	r3, r2, #26
   853a4:	2b0a      	cmp	r3, #10
   853a6:	f000 80f0 	beq.w	8558a <_vfiprintf_r+0x23a>
   853aa:	ab13      	add	r3, sp, #76	; 0x4c
   853ac:	9310      	str	r3, [sp, #64]	; 0x40
   853ae:	2300      	movs	r3, #0
   853b0:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
   853b4:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
   853b8:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
   853bc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   853c0:	9304      	str	r3, [sp, #16]
   853c2:	783b      	ldrb	r3, [r7, #0]
   853c4:	2b00      	cmp	r3, #0
   853c6:	f000 8146 	beq.w	85656 <_vfiprintf_r+0x306>
   853ca:	463c      	mov	r4, r7
   853cc:	e004      	b.n	853d8 <_vfiprintf_r+0x88>
   853ce:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   853d2:	2b00      	cmp	r3, #0
   853d4:	f000 8121 	beq.w	8561a <_vfiprintf_r+0x2ca>
   853d8:	2b25      	cmp	r3, #37	; 0x25
   853da:	d1f8      	bne.n	853ce <_vfiprintf_r+0x7e>
   853dc:	1be5      	subs	r5, r4, r7
   853de:	f040 811e 	bne.w	8561e <_vfiprintf_r+0x2ce>
   853e2:	7823      	ldrb	r3, [r4, #0]
   853e4:	2b00      	cmp	r3, #0
   853e6:	f000 8136 	beq.w	85656 <_vfiprintf_r+0x306>
   853ea:	f04f 0300 	mov.w	r3, #0
   853ee:	2500      	movs	r5, #0
   853f0:	f04f 3bff 	mov.w	fp, #4294967295
   853f4:	f04f 082b 	mov.w	r8, #43	; 0x2b
   853f8:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   853fc:	7863      	ldrb	r3, [r4, #1]
   853fe:	9503      	str	r5, [sp, #12]
   85400:	1c67      	adds	r7, r4, #1
   85402:	3701      	adds	r7, #1
   85404:	f1a3 0220 	sub.w	r2, r3, #32
   85408:	2a5a      	cmp	r2, #90	; 0x5a
   8540a:	f200 8146 	bhi.w	8569a <_vfiprintf_r+0x34a>
   8540e:	e8df f012 	tbh	[pc, r2, lsl #1]
   85412:	02a1      	.short	0x02a1
   85414:	01440144 	.word	0x01440144
   85418:	0144029d 	.word	0x0144029d
   8541c:	01440144 	.word	0x01440144
   85420:	0144027c 	.word	0x0144027c
   85424:	006a0144 	.word	0x006a0144
   85428:	01440253 	.word	0x01440253
   8542c:	02af0229 	.word	0x02af0229
   85430:	02ab0144 	.word	0x02ab0144
   85434:	005b005b 	.word	0x005b005b
   85438:	005b005b 	.word	0x005b005b
   8543c:	005b005b 	.word	0x005b005b
   85440:	005b005b 	.word	0x005b005b
   85444:	0144005b 	.word	0x0144005b
   85448:	01440144 	.word	0x01440144
   8544c:	01440144 	.word	0x01440144
   85450:	01440144 	.word	0x01440144
   85454:	01440144 	.word	0x01440144
   85458:	00780213 	.word	0x00780213
   8545c:	01440144 	.word	0x01440144
   85460:	01440144 	.word	0x01440144
   85464:	01440144 	.word	0x01440144
   85468:	01440144 	.word	0x01440144
   8546c:	01440144 	.word	0x01440144
   85470:	014400d1 	.word	0x014400d1
   85474:	01440144 	.word	0x01440144
   85478:	014401f7 	.word	0x014401f7
   8547c:	01440241 	.word	0x01440241
   85480:	05210144 	.word	0x05210144
   85484:	01440144 	.word	0x01440144
   85488:	01440144 	.word	0x01440144
   8548c:	01440144 	.word	0x01440144
   85490:	01440144 	.word	0x01440144
   85494:	01440144 	.word	0x01440144
   85498:	007a0213 	.word	0x007a0213
   8549c:	01440144 	.word	0x01440144
   854a0:	02370144 	.word	0x02370144
   854a4:	0074007a 	.word	0x0074007a
   854a8:	022d0144 	.word	0x022d0144
   854ac:	02690144 	.word	0x02690144
   854b0:	025700d3 	.word	0x025700d3
   854b4:	01440074 	.word	0x01440074
   854b8:	007201f7 	.word	0x007201f7
   854bc:	01440541 	.word	0x01440541
   854c0:	05430144 	.word	0x05430144
   854c4:	00720144 	.word	0x00720144
   854c8:	2100      	movs	r1, #0
   854ca:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   854ce:	f817 3b01 	ldrb.w	r3, [r7], #1
   854d2:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   854d6:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   854da:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   854de:	2a09      	cmp	r2, #9
   854e0:	d9f5      	bls.n	854ce <_vfiprintf_r+0x17e>
   854e2:	9103      	str	r1, [sp, #12]
   854e4:	e78e      	b.n	85404 <_vfiprintf_r+0xb4>
   854e6:	9b05      	ldr	r3, [sp, #20]
   854e8:	f853 2b04 	ldr.w	r2, [r3], #4
   854ec:	2a00      	cmp	r2, #0
   854ee:	9203      	str	r2, [sp, #12]
   854f0:	9305      	str	r3, [sp, #20]
   854f2:	f2c0 81b4 	blt.w	8585e <_vfiprintf_r+0x50e>
   854f6:	783b      	ldrb	r3, [r7, #0]
   854f8:	e783      	b.n	85402 <_vfiprintf_r+0xb2>
   854fa:	783b      	ldrb	r3, [r7, #0]
   854fc:	f045 0520 	orr.w	r5, r5, #32
   85500:	e77f      	b.n	85402 <_vfiprintf_r+0xb2>
   85502:	f045 0510 	orr.w	r5, r5, #16
   85506:	06ac      	lsls	r4, r5, #26
   85508:	9e05      	ldr	r6, [sp, #20]
   8550a:	f140 816b 	bpl.w	857e4 <_vfiprintf_r+0x494>
   8550e:	3607      	adds	r6, #7
   85510:	f026 0607 	bic.w	r6, r6, #7
   85514:	4632      	mov	r2, r6
   85516:	6873      	ldr	r3, [r6, #4]
   85518:	f852 6b08 	ldr.w	r6, [r2], #8
   8551c:	4698      	mov	r8, r3
   8551e:	9205      	str	r2, [sp, #20]
   85520:	2b00      	cmp	r3, #0
   85522:	f2c0 8449 	blt.w	85db8 <_vfiprintf_r+0xa68>
   85526:	f1bb 3fff 	cmp.w	fp, #4294967295
   8552a:	f000 8531 	beq.w	85f90 <_vfiprintf_r+0xc40>
   8552e:	ea56 0308 	orrs.w	r3, r6, r8
   85532:	f025 0a80 	bic.w	sl, r5, #128	; 0x80
   85536:	f000 8425 	beq.w	85d84 <_vfiprintf_r+0xa34>
   8553a:	2e0a      	cmp	r6, #10
   8553c:	f178 0300 	sbcs.w	r3, r8, #0
   85540:	f080 84e1 	bcs.w	85f06 <_vfiprintf_r+0xbb6>
   85544:	2301      	movs	r3, #1
   85546:	4655      	mov	r5, sl
   85548:	3630      	adds	r6, #48	; 0x30
   8554a:	f88d 60ef 	strb.w	r6, [sp, #239]	; 0xef
   8554e:	9301      	str	r3, [sp, #4]
   85550:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85554:	f8dd 8004 	ldr.w	r8, [sp, #4]
   85558:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   8555c:	45d8      	cmp	r8, fp
   8555e:	bfb8      	it	lt
   85560:	46d8      	movlt	r8, fp
   85562:	2b00      	cmp	r3, #0
   85564:	f000 80a8 	beq.w	856b8 <_vfiprintf_r+0x368>
   85568:	f108 0801 	add.w	r8, r8, #1
   8556c:	e0a4      	b.n	856b8 <_vfiprintf_r+0x368>
   8556e:	9d02      	ldr	r5, [sp, #8]
   85570:	9806      	ldr	r0, [sp, #24]
   85572:	4629      	mov	r1, r5
   85574:	f000 fdfa 	bl	8616c <__swsetup_r>
   85578:	2800      	cmp	r0, #0
   8557a:	f040 8594 	bne.w	860a6 <_vfiprintf_r+0xd56>
   8557e:	89aa      	ldrh	r2, [r5, #12]
   85580:	f002 031a 	and.w	r3, r2, #26
   85584:	2b0a      	cmp	r3, #10
   85586:	f47f af10 	bne.w	853aa <_vfiprintf_r+0x5a>
   8558a:	9902      	ldr	r1, [sp, #8]
   8558c:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
   85590:	2b00      	cmp	r3, #0
   85592:	f6ff af0a 	blt.w	853aa <_vfiprintf_r+0x5a>
   85596:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   85598:	07de      	lsls	r6, r3, #31
   8559a:	d402      	bmi.n	855a2 <_vfiprintf_r+0x252>
   8559c:	0595      	lsls	r5, r2, #22
   8559e:	f140 8562 	bpl.w	86066 <_vfiprintf_r+0xd16>
   855a2:	4623      	mov	r3, r4
   855a4:	463a      	mov	r2, r7
   855a6:	9902      	ldr	r1, [sp, #8]
   855a8:	9806      	ldr	r0, [sp, #24]
   855aa:	b03d      	add	sp, #244	; 0xf4
   855ac:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   855b0:	f000 bd9a 	b.w	860e8 <__sbprintf>
   855b4:	f045 0510 	orr.w	r5, r5, #16
   855b8:	f015 0820 	ands.w	r8, r5, #32
   855bc:	f000 8103 	beq.w	857c6 <_vfiprintf_r+0x476>
   855c0:	9e05      	ldr	r6, [sp, #20]
   855c2:	3607      	adds	r6, #7
   855c4:	f026 0607 	bic.w	r6, r6, #7
   855c8:	4633      	mov	r3, r6
   855ca:	f8d6 8004 	ldr.w	r8, [r6, #4]
   855ce:	f853 6b08 	ldr.w	r6, [r3], #8
   855d2:	9305      	str	r3, [sp, #20]
   855d4:	2300      	movs	r3, #0
   855d6:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   855da:	f04f 0200 	mov.w	r2, #0
   855de:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
   855e2:	f1bb 3fff 	cmp.w	fp, #4294967295
   855e6:	f000 81dd 	beq.w	859a4 <_vfiprintf_r+0x654>
   855ea:	ea56 0208 	orrs.w	r2, r6, r8
   855ee:	f02a 0580 	bic.w	r5, sl, #128	; 0x80
   855f2:	f040 81d6 	bne.w	859a2 <_vfiprintf_r+0x652>
   855f6:	f1bb 0f00 	cmp.w	fp, #0
   855fa:	f040 84cc 	bne.w	85f96 <_vfiprintf_r+0xc46>
   855fe:	2b00      	cmp	r3, #0
   85600:	f040 83c5 	bne.w	85d8e <_vfiprintf_r+0xa3e>
   85604:	f01a 0301 	ands.w	r3, sl, #1
   85608:	9301      	str	r3, [sp, #4]
   8560a:	f000 83ec 	beq.w	85de6 <_vfiprintf_r+0xa96>
   8560e:	2330      	movs	r3, #48	; 0x30
   85610:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85614:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
   85618:	e79c      	b.n	85554 <_vfiprintf_r+0x204>
   8561a:	1be5      	subs	r5, r4, r7
   8561c:	d01b      	beq.n	85656 <_vfiprintf_r+0x306>
   8561e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85620:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85622:	3301      	adds	r3, #1
   85624:	442a      	add	r2, r5
   85626:	2b07      	cmp	r3, #7
   85628:	e9c9 7500 	strd	r7, r5, [r9]
   8562c:	9212      	str	r2, [sp, #72]	; 0x48
   8562e:	9311      	str	r3, [sp, #68]	; 0x44
   85630:	dc05      	bgt.n	8563e <_vfiprintf_r+0x2ee>
   85632:	f109 0908 	add.w	r9, r9, #8
   85636:	9b04      	ldr	r3, [sp, #16]
   85638:	442b      	add	r3, r5
   8563a:	9304      	str	r3, [sp, #16]
   8563c:	e6d1      	b.n	853e2 <_vfiprintf_r+0x92>
   8563e:	2a00      	cmp	r2, #0
   85640:	f000 839c 	beq.w	85d7c <_vfiprintf_r+0xa2c>
   85644:	9902      	ldr	r1, [sp, #8]
   85646:	9806      	ldr	r0, [sp, #24]
   85648:	aa10      	add	r2, sp, #64	; 0x40
   8564a:	f7ff fe45 	bl	852d8 <__sprint_r.part.0>
   8564e:	b940      	cbnz	r0, 85662 <_vfiprintf_r+0x312>
   85650:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85654:	e7ef      	b.n	85636 <_vfiprintf_r+0x2e6>
   85656:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85658:	2b00      	cmp	r3, #0
   8565a:	f040 8515 	bne.w	86088 <_vfiprintf_r+0xd38>
   8565e:	2300      	movs	r3, #0
   85660:	9311      	str	r3, [sp, #68]	; 0x44
   85662:	9a02      	ldr	r2, [sp, #8]
   85664:	6e53      	ldr	r3, [r2, #100]	; 0x64
   85666:	07d9      	lsls	r1, r3, #31
   85668:	f140 80a2 	bpl.w	857b0 <_vfiprintf_r+0x460>
   8566c:	8993      	ldrh	r3, [r2, #12]
   8566e:	065b      	lsls	r3, r3, #25
   85670:	f100 8525 	bmi.w	860be <_vfiprintf_r+0xd6e>
   85674:	9804      	ldr	r0, [sp, #16]
   85676:	b03d      	add	sp, #244	; 0xf4
   85678:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8567c:	9b02      	ldr	r3, [sp, #8]
   8567e:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
   85682:	058d      	lsls	r5, r1, #22
   85684:	b28a      	uxth	r2, r1
   85686:	f53f ae78 	bmi.w	8537a <_vfiprintf_r+0x2a>
   8568a:	461d      	mov	r5, r3
   8568c:	6d98      	ldr	r0, [r3, #88]	; 0x58
   8568e:	f002 fad1 	bl	87c34 <__retarget_lock_acquire_recursive>
   85692:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
   85696:	b28a      	uxth	r2, r1
   85698:	e66f      	b.n	8537a <_vfiprintf_r+0x2a>
   8569a:	2b00      	cmp	r3, #0
   8569c:	d0db      	beq.n	85656 <_vfiprintf_r+0x306>
   8569e:	f04f 0801 	mov.w	r8, #1
   856a2:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   856a6:	f04f 0300 	mov.w	r3, #0
   856aa:	ac23      	add	r4, sp, #140	; 0x8c
   856ac:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   856b0:	f8cd 8004 	str.w	r8, [sp, #4]
   856b4:	f04f 0b00 	mov.w	fp, #0
   856b8:	f015 0302 	ands.w	r3, r5, #2
   856bc:	9307      	str	r3, [sp, #28]
   856be:	bf18      	it	ne
   856c0:	f108 0802 	addne.w	r8, r8, #2
   856c4:	f015 0384 	ands.w	r3, r5, #132	; 0x84
   856c8:	9308      	str	r3, [sp, #32]
   856ca:	d105      	bne.n	856d8 <_vfiprintf_r+0x388>
   856cc:	9b03      	ldr	r3, [sp, #12]
   856ce:	eba3 0608 	sub.w	r6, r3, r8
   856d2:	2e00      	cmp	r6, #0
   856d4:	f300 828a 	bgt.w	85bec <_vfiprintf_r+0x89c>
   856d8:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   856dc:	1c48      	adds	r0, r1, #1
   856de:	f89d 603b 	ldrb.w	r6, [sp, #59]	; 0x3b
   856e2:	b176      	cbz	r6, 85702 <_vfiprintf_r+0x3b2>
   856e4:	2101      	movs	r1, #1
   856e6:	3201      	adds	r2, #1
   856e8:	f10d 063b 	add.w	r6, sp, #59	; 0x3b
   856ec:	2807      	cmp	r0, #7
   856ee:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   856f2:	e9c9 6100 	strd	r6, r1, [r9]
   856f6:	f300 8258 	bgt.w	85baa <_vfiprintf_r+0x85a>
   856fa:	4601      	mov	r1, r0
   856fc:	f109 0908 	add.w	r9, r9, #8
   85700:	3001      	adds	r0, #1
   85702:	9b07      	ldr	r3, [sp, #28]
   85704:	b1d3      	cbz	r3, 8573c <_vfiprintf_r+0x3ec>
   85706:	2302      	movs	r3, #2
   85708:	3202      	adds	r2, #2
   8570a:	f8c9 3004 	str.w	r3, [r9, #4]
   8570e:	2807      	cmp	r0, #7
   85710:	ab0f      	add	r3, sp, #60	; 0x3c
   85712:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85716:	f8c9 3000 	str.w	r3, [r9]
   8571a:	f340 8262 	ble.w	85be2 <_vfiprintf_r+0x892>
   8571e:	2a00      	cmp	r2, #0
   85720:	f000 8327 	beq.w	85d72 <_vfiprintf_r+0xa22>
   85724:	9902      	ldr	r1, [sp, #8]
   85726:	9806      	ldr	r0, [sp, #24]
   85728:	aa10      	add	r2, sp, #64	; 0x40
   8572a:	f7ff fdd5 	bl	852d8 <__sprint_r.part.0>
   8572e:	2800      	cmp	r0, #0
   85730:	d197      	bne.n	85662 <_vfiprintf_r+0x312>
   85732:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85736:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8573a:	1c48      	adds	r0, r1, #1
   8573c:	9b08      	ldr	r3, [sp, #32]
   8573e:	2b80      	cmp	r3, #128	; 0x80
   85740:	f000 8171 	beq.w	85a26 <_vfiprintf_r+0x6d6>
   85744:	9b01      	ldr	r3, [sp, #4]
   85746:	ebab 0603 	sub.w	r6, fp, r3
   8574a:	2e00      	cmp	r6, #0
   8574c:	f300 81cf 	bgt.w	85aee <_vfiprintf_r+0x79e>
   85750:	9b01      	ldr	r3, [sp, #4]
   85752:	2807      	cmp	r0, #7
   85754:	441a      	add	r2, r3
   85756:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   8575a:	f8c9 4000 	str.w	r4, [r9]
   8575e:	f8c9 3004 	str.w	r3, [r9, #4]
   85762:	f340 815d 	ble.w	85a20 <_vfiprintf_r+0x6d0>
   85766:	2a00      	cmp	r2, #0
   85768:	f000 8293 	beq.w	85c92 <_vfiprintf_r+0x942>
   8576c:	9902      	ldr	r1, [sp, #8]
   8576e:	9806      	ldr	r0, [sp, #24]
   85770:	aa10      	add	r2, sp, #64	; 0x40
   85772:	f7ff fdb1 	bl	852d8 <__sprint_r.part.0>
   85776:	2800      	cmp	r0, #0
   85778:	f47f af73 	bne.w	85662 <_vfiprintf_r+0x312>
   8577c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8577e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85782:	0768      	lsls	r0, r5, #29
   85784:	d505      	bpl.n	85792 <_vfiprintf_r+0x442>
   85786:	9b03      	ldr	r3, [sp, #12]
   85788:	eba3 0408 	sub.w	r4, r3, r8
   8578c:	2c00      	cmp	r4, #0
   8578e:	f300 828a 	bgt.w	85ca6 <_vfiprintf_r+0x956>
   85792:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
   85796:	4541      	cmp	r1, r8
   85798:	bfac      	ite	ge
   8579a:	185b      	addge	r3, r3, r1
   8579c:	4443      	addlt	r3, r8
   8579e:	9304      	str	r3, [sp, #16]
   857a0:	2a00      	cmp	r2, #0
   857a2:	f040 81f3 	bne.w	85b8c <_vfiprintf_r+0x83c>
   857a6:	2300      	movs	r3, #0
   857a8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   857ac:	9311      	str	r3, [sp, #68]	; 0x44
   857ae:	e608      	b.n	853c2 <_vfiprintf_r+0x72>
   857b0:	9b02      	ldr	r3, [sp, #8]
   857b2:	899b      	ldrh	r3, [r3, #12]
   857b4:	059a      	lsls	r2, r3, #22
   857b6:	f53f af5a 	bmi.w	8566e <_vfiprintf_r+0x31e>
   857ba:	9c02      	ldr	r4, [sp, #8]
   857bc:	6da0      	ldr	r0, [r4, #88]	; 0x58
   857be:	f002 fa3b 	bl	87c38 <__retarget_lock_release_recursive>
   857c2:	89a3      	ldrh	r3, [r4, #12]
   857c4:	e753      	b.n	8566e <_vfiprintf_r+0x31e>
   857c6:	f015 0310 	ands.w	r3, r5, #16
   857ca:	f040 8318 	bne.w	85dfe <_vfiprintf_r+0xaae>
   857ce:	f015 0240 	ands.w	r2, r5, #64	; 0x40
   857d2:	f000 8310 	beq.w	85df6 <_vfiprintf_r+0xaa6>
   857d6:	9e05      	ldr	r6, [sp, #20]
   857d8:	4698      	mov	r8, r3
   857da:	f856 3b04 	ldr.w	r3, [r6], #4
   857de:	9605      	str	r6, [sp, #20]
   857e0:	b29e      	uxth	r6, r3
   857e2:	e6f7      	b.n	855d4 <_vfiprintf_r+0x284>
   857e4:	f856 3b04 	ldr.w	r3, [r6], #4
   857e8:	06e8      	lsls	r0, r5, #27
   857ea:	9605      	str	r6, [sp, #20]
   857ec:	f100 8310 	bmi.w	85e10 <_vfiprintf_r+0xac0>
   857f0:	0669      	lsls	r1, r5, #25
   857f2:	f140 830a 	bpl.w	85e0a <_vfiprintf_r+0xaba>
   857f6:	f343 38c0 	sbfx	r8, r3, #15, #1
   857fa:	b21e      	sxth	r6, r3
   857fc:	4643      	mov	r3, r8
   857fe:	e68f      	b.n	85520 <_vfiprintf_r+0x1d0>
   85800:	f04f 0300 	mov.w	r3, #0
   85804:	9e05      	ldr	r6, [sp, #20]
   85806:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   8580a:	f856 4b04 	ldr.w	r4, [r6], #4
   8580e:	2c00      	cmp	r4, #0
   85810:	f000 83cf 	beq.w	85fb2 <_vfiprintf_r+0xc62>
   85814:	f1bb 3fff 	cmp.w	fp, #4294967295
   85818:	f000 8341 	beq.w	85e9e <_vfiprintf_r+0xb4e>
   8581c:	465a      	mov	r2, fp
   8581e:	2100      	movs	r1, #0
   85820:	4620      	mov	r0, r4
   85822:	f002 fd75 	bl	88310 <memchr>
   85826:	2800      	cmp	r0, #0
   85828:	f000 8422 	beq.w	86070 <_vfiprintf_r+0xd20>
   8582c:	1b03      	subs	r3, r0, r4
   8582e:	f04f 0b00 	mov.w	fp, #0
   85832:	9605      	str	r6, [sp, #20]
   85834:	9301      	str	r3, [sp, #4]
   85836:	e68d      	b.n	85554 <_vfiprintf_r+0x204>
   85838:	f04f 0300 	mov.w	r3, #0
   8583c:	f04f 0801 	mov.w	r8, #1
   85840:	9e05      	ldr	r6, [sp, #20]
   85842:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85846:	f856 3b04 	ldr.w	r3, [r6], #4
   8584a:	ac23      	add	r4, sp, #140	; 0x8c
   8584c:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   85850:	9605      	str	r6, [sp, #20]
   85852:	f8cd 8004 	str.w	r8, [sp, #4]
   85856:	e72d      	b.n	856b4 <_vfiprintf_r+0x364>
   85858:	f001 fdc6 	bl	873e8 <__sinit>
   8585c:	e585      	b.n	8536a <_vfiprintf_r+0x1a>
   8585e:	9b03      	ldr	r3, [sp, #12]
   85860:	425b      	negs	r3, r3
   85862:	9303      	str	r3, [sp, #12]
   85864:	783b      	ldrb	r3, [r7, #0]
   85866:	f045 0504 	orr.w	r5, r5, #4
   8586a:	e5ca      	b.n	85402 <_vfiprintf_r+0xb2>
   8586c:	783b      	ldrb	r3, [r7, #0]
   8586e:	2b6c      	cmp	r3, #108	; 0x6c
   85870:	bf03      	ittte	eq
   85872:	787b      	ldrbeq	r3, [r7, #1]
   85874:	f045 0520 	orreq.w	r5, r5, #32
   85878:	3701      	addeq	r7, #1
   8587a:	f045 0510 	orrne.w	r5, r5, #16
   8587e:	e5c0      	b.n	85402 <_vfiprintf_r+0xb2>
   85880:	783b      	ldrb	r3, [r7, #0]
   85882:	2b68      	cmp	r3, #104	; 0x68
   85884:	bf03      	ittte	eq
   85886:	787b      	ldrbeq	r3, [r7, #1]
   85888:	f445 7500 	orreq.w	r5, r5, #512	; 0x200
   8588c:	3701      	addeq	r7, #1
   8588e:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
   85892:	e5b6      	b.n	85402 <_vfiprintf_r+0xb2>
   85894:	f045 0a10 	orr.w	sl, r5, #16
   85898:	f01a 0820 	ands.w	r8, sl, #32
   8589c:	f000 827e 	beq.w	85d9c <_vfiprintf_r+0xa4c>
   858a0:	9e05      	ldr	r6, [sp, #20]
   858a2:	2301      	movs	r3, #1
   858a4:	3607      	adds	r6, #7
   858a6:	f026 0607 	bic.w	r6, r6, #7
   858aa:	4632      	mov	r2, r6
   858ac:	f8d6 8004 	ldr.w	r8, [r6, #4]
   858b0:	f852 6b08 	ldr.w	r6, [r2], #8
   858b4:	9205      	str	r2, [sp, #20]
   858b6:	e690      	b.n	855da <_vfiprintf_r+0x28a>
   858b8:	783b      	ldrb	r3, [r7, #0]
   858ba:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
   858be:	e5a0      	b.n	85402 <_vfiprintf_r+0xb2>
   858c0:	2230      	movs	r2, #48	; 0x30
   858c2:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
   858c6:	2278      	movs	r2, #120	; 0x78
   858c8:	9b05      	ldr	r3, [sp, #20]
   858ca:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
   858ce:	f853 6b04 	ldr.w	r6, [r3], #4
   858d2:	4abe      	ldr	r2, [pc, #760]	; (85bcc <_vfiprintf_r+0x87c>)
   858d4:	9305      	str	r3, [sp, #20]
   858d6:	f04f 0800 	mov.w	r8, #0
   858da:	2302      	movs	r3, #2
   858dc:	f045 0a02 	orr.w	sl, r5, #2
   858e0:	9209      	str	r2, [sp, #36]	; 0x24
   858e2:	e67a      	b.n	855da <_vfiprintf_r+0x28a>
   858e4:	06ae      	lsls	r6, r5, #26
   858e6:	f100 82a4 	bmi.w	85e32 <_vfiprintf_r+0xae2>
   858ea:	06ec      	lsls	r4, r5, #27
   858ec:	f100 8359 	bmi.w	85fa2 <_vfiprintf_r+0xc52>
   858f0:	0668      	lsls	r0, r5, #25
   858f2:	f100 83b0 	bmi.w	86056 <_vfiprintf_r+0xd06>
   858f6:	05a9      	lsls	r1, r5, #22
   858f8:	f140 8353 	bpl.w	85fa2 <_vfiprintf_r+0xc52>
   858fc:	9e05      	ldr	r6, [sp, #20]
   858fe:	9a04      	ldr	r2, [sp, #16]
   85900:	f856 3b04 	ldr.w	r3, [r6], #4
   85904:	701a      	strb	r2, [r3, #0]
   85906:	9605      	str	r6, [sp, #20]
   85908:	e55b      	b.n	853c2 <_vfiprintf_r+0x72>
   8590a:	9c06      	ldr	r4, [sp, #24]
   8590c:	4620      	mov	r0, r4
   8590e:	f002 f989 	bl	87c24 <_localeconv_r>
   85912:	6843      	ldr	r3, [r0, #4]
   85914:	4618      	mov	r0, r3
   85916:	930b      	str	r3, [sp, #44]	; 0x2c
   85918:	f7fd ff2a 	bl	83770 <strlen>
   8591c:	4603      	mov	r3, r0
   8591e:	4620      	mov	r0, r4
   85920:	930c      	str	r3, [sp, #48]	; 0x30
   85922:	461c      	mov	r4, r3
   85924:	f002 f97e 	bl	87c24 <_localeconv_r>
   85928:	6883      	ldr	r3, [r0, #8]
   8592a:	930a      	str	r3, [sp, #40]	; 0x28
   8592c:	2c00      	cmp	r4, #0
   8592e:	f43f ade2 	beq.w	854f6 <_vfiprintf_r+0x1a6>
   85932:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85934:	2b00      	cmp	r3, #0
   85936:	f43f adde 	beq.w	854f6 <_vfiprintf_r+0x1a6>
   8593a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8593c:	781b      	ldrb	r3, [r3, #0]
   8593e:	2b00      	cmp	r3, #0
   85940:	f43f add9 	beq.w	854f6 <_vfiprintf_r+0x1a6>
   85944:	783b      	ldrb	r3, [r7, #0]
   85946:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
   8594a:	e55a      	b.n	85402 <_vfiprintf_r+0xb2>
   8594c:	783b      	ldrb	r3, [r7, #0]
   8594e:	f045 0501 	orr.w	r5, r5, #1
   85952:	e556      	b.n	85402 <_vfiprintf_r+0xb2>
   85954:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   85958:	2b00      	cmp	r3, #0
   8595a:	f47f adcc 	bne.w	854f6 <_vfiprintf_r+0x1a6>
   8595e:	2320      	movs	r3, #32
   85960:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85964:	783b      	ldrb	r3, [r7, #0]
   85966:	e54c      	b.n	85402 <_vfiprintf_r+0xb2>
   85968:	783b      	ldrb	r3, [r7, #0]
   8596a:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   8596e:	e548      	b.n	85402 <_vfiprintf_r+0xb2>
   85970:	4639      	mov	r1, r7
   85972:	f811 3b01 	ldrb.w	r3, [r1], #1
   85976:	2b2a      	cmp	r3, #42	; 0x2a
   85978:	f000 83a6 	beq.w	860c8 <_vfiprintf_r+0xd78>
   8597c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   85980:	2a09      	cmp	r2, #9
   85982:	460f      	mov	r7, r1
   85984:	f04f 0b00 	mov.w	fp, #0
   85988:	f63f ad3c 	bhi.w	85404 <_vfiprintf_r+0xb4>
   8598c:	f817 3b01 	ldrb.w	r3, [r7], #1
   85990:	eb0b 0b8b 	add.w	fp, fp, fp, lsl #2
   85994:	eb02 0b4b 	add.w	fp, r2, fp, lsl #1
   85998:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   8599c:	2a09      	cmp	r2, #9
   8599e:	d9f5      	bls.n	8598c <_vfiprintf_r+0x63c>
   859a0:	e530      	b.n	85404 <_vfiprintf_r+0xb4>
   859a2:	46aa      	mov	sl, r5
   859a4:	2b01      	cmp	r3, #1
   859a6:	f43f adc8 	beq.w	8553a <_vfiprintf_r+0x1ea>
   859aa:	2b02      	cmp	r3, #2
   859ac:	ac3c      	add	r4, sp, #240	; 0xf0
   859ae:	d112      	bne.n	859d6 <_vfiprintf_r+0x686>
   859b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   859b2:	f006 030f 	and.w	r3, r6, #15
   859b6:	5cd3      	ldrb	r3, [r2, r3]
   859b8:	0936      	lsrs	r6, r6, #4
   859ba:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
   859be:	ea4f 1818 	mov.w	r8, r8, lsr #4
   859c2:	f804 3d01 	strb.w	r3, [r4, #-1]!
   859c6:	ea56 0308 	orrs.w	r3, r6, r8
   859ca:	d1f2      	bne.n	859b2 <_vfiprintf_r+0x662>
   859cc:	ab3c      	add	r3, sp, #240	; 0xf0
   859ce:	1b1b      	subs	r3, r3, r4
   859d0:	4655      	mov	r5, sl
   859d2:	9301      	str	r3, [sp, #4]
   859d4:	e5be      	b.n	85554 <_vfiprintf_r+0x204>
   859d6:	f006 0307 	and.w	r3, r6, #7
   859da:	08f6      	lsrs	r6, r6, #3
   859dc:	ea46 7648 	orr.w	r6, r6, r8, lsl #29
   859e0:	ea4f 08d8 	mov.w	r8, r8, lsr #3
   859e4:	3330      	adds	r3, #48	; 0x30
   859e6:	ea56 0108 	orrs.w	r1, r6, r8
   859ea:	4622      	mov	r2, r4
   859ec:	f804 3d01 	strb.w	r3, [r4, #-1]!
   859f0:	d1f1      	bne.n	859d6 <_vfiprintf_r+0x686>
   859f2:	f01a 0f01 	tst.w	sl, #1
   859f6:	d0e9      	beq.n	859cc <_vfiprintf_r+0x67c>
   859f8:	2b30      	cmp	r3, #48	; 0x30
   859fa:	d0e7      	beq.n	859cc <_vfiprintf_r+0x67c>
   859fc:	2330      	movs	r3, #48	; 0x30
   859fe:	3a02      	subs	r2, #2
   85a00:	f804 3c01 	strb.w	r3, [r4, #-1]
   85a04:	ab3c      	add	r3, sp, #240	; 0xf0
   85a06:	1a9b      	subs	r3, r3, r2
   85a08:	4655      	mov	r5, sl
   85a0a:	4614      	mov	r4, r2
   85a0c:	9301      	str	r3, [sp, #4]
   85a0e:	e5a1      	b.n	85554 <_vfiprintf_r+0x204>
   85a10:	2301      	movs	r3, #1
   85a12:	9a01      	ldr	r2, [sp, #4]
   85a14:	9413      	str	r4, [sp, #76]	; 0x4c
   85a16:	9311      	str	r3, [sp, #68]	; 0x44
   85a18:	9214      	str	r2, [sp, #80]	; 0x50
   85a1a:	9212      	str	r2, [sp, #72]	; 0x48
   85a1c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85a20:	f109 0908 	add.w	r9, r9, #8
   85a24:	e6ad      	b.n	85782 <_vfiprintf_r+0x432>
   85a26:	9b03      	ldr	r3, [sp, #12]
   85a28:	eba3 0608 	sub.w	r6, r3, r8
   85a2c:	2e00      	cmp	r6, #0
   85a2e:	f77f ae89 	ble.w	85744 <_vfiprintf_r+0x3f4>
   85a32:	2e10      	cmp	r6, #16
   85a34:	f8df a198 	ldr.w	sl, [pc, #408]	; 85bd0 <_vfiprintf_r+0x880>
   85a38:	dd38      	ble.n	85aac <_vfiprintf_r+0x75c>
   85a3a:	4653      	mov	r3, sl
   85a3c:	46cc      	mov	ip, r9
   85a3e:	46ba      	mov	sl, r7
   85a40:	46c1      	mov	r9, r8
   85a42:	9407      	str	r4, [sp, #28]
   85a44:	46a8      	mov	r8, r5
   85a46:	461f      	mov	r7, r3
   85a48:	9c06      	ldr	r4, [sp, #24]
   85a4a:	9d02      	ldr	r5, [sp, #8]
   85a4c:	e007      	b.n	85a5e <_vfiprintf_r+0x70e>
   85a4e:	f101 0e02 	add.w	lr, r1, #2
   85a52:	4601      	mov	r1, r0
   85a54:	f10c 0c08 	add.w	ip, ip, #8
   85a58:	3e10      	subs	r6, #16
   85a5a:	2e10      	cmp	r6, #16
   85a5c:	dd1e      	ble.n	85a9c <_vfiprintf_r+0x74c>
   85a5e:	2310      	movs	r3, #16
   85a60:	1c48      	adds	r0, r1, #1
   85a62:	3210      	adds	r2, #16
   85a64:	2807      	cmp	r0, #7
   85a66:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85a6a:	f8cc 7000 	str.w	r7, [ip]
   85a6e:	f8cc 3004 	str.w	r3, [ip, #4]
   85a72:	ddec      	ble.n	85a4e <_vfiprintf_r+0x6fe>
   85a74:	2a00      	cmp	r2, #0
   85a76:	f000 8092 	beq.w	85b9e <_vfiprintf_r+0x84e>
   85a7a:	4629      	mov	r1, r5
   85a7c:	4620      	mov	r0, r4
   85a7e:	aa10      	add	r2, sp, #64	; 0x40
   85a80:	f7ff fc2a 	bl	852d8 <__sprint_r.part.0>
   85a84:	2800      	cmp	r0, #0
   85a86:	f47f adec 	bne.w	85662 <_vfiprintf_r+0x312>
   85a8a:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85a8e:	3e10      	subs	r6, #16
   85a90:	2e10      	cmp	r6, #16
   85a92:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85a96:	f101 0e01 	add.w	lr, r1, #1
   85a9a:	dce0      	bgt.n	85a5e <_vfiprintf_r+0x70e>
   85a9c:	463b      	mov	r3, r7
   85a9e:	4645      	mov	r5, r8
   85aa0:	4657      	mov	r7, sl
   85aa2:	46c8      	mov	r8, r9
   85aa4:	4670      	mov	r0, lr
   85aa6:	46e1      	mov	r9, ip
   85aa8:	469a      	mov	sl, r3
   85aaa:	9c07      	ldr	r4, [sp, #28]
   85aac:	4432      	add	r2, r6
   85aae:	2807      	cmp	r0, #7
   85ab0:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85ab4:	f8c9 a000 	str.w	sl, [r9]
   85ab8:	f8c9 6004 	str.w	r6, [r9, #4]
   85abc:	f340 8196 	ble.w	85dec <_vfiprintf_r+0xa9c>
   85ac0:	2a00      	cmp	r2, #0
   85ac2:	f000 829a 	beq.w	85ffa <_vfiprintf_r+0xcaa>
   85ac6:	9902      	ldr	r1, [sp, #8]
   85ac8:	9806      	ldr	r0, [sp, #24]
   85aca:	aa10      	add	r2, sp, #64	; 0x40
   85acc:	f7ff fc04 	bl	852d8 <__sprint_r.part.0>
   85ad0:	2800      	cmp	r0, #0
   85ad2:	f47f adc6 	bne.w	85662 <_vfiprintf_r+0x312>
   85ad6:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85ada:	9b01      	ldr	r3, [sp, #4]
   85adc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85ae0:	ebab 0603 	sub.w	r6, fp, r3
   85ae4:	2e00      	cmp	r6, #0
   85ae6:	f101 0001 	add.w	r0, r1, #1
   85aea:	f77f ae31 	ble.w	85750 <_vfiprintf_r+0x400>
   85aee:	2e10      	cmp	r6, #16
   85af0:	f340 826b 	ble.w	85fca <_vfiprintf_r+0xc7a>
   85af4:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 85bd0 <_vfiprintf_r+0x880>
   85af8:	46cc      	mov	ip, r9
   85afa:	4653      	mov	r3, sl
   85afc:	46c1      	mov	r9, r8
   85afe:	46ba      	mov	sl, r7
   85b00:	46a8      	mov	r8, r5
   85b02:	9407      	str	r4, [sp, #28]
   85b04:	f04f 0b10 	mov.w	fp, #16
   85b08:	461f      	mov	r7, r3
   85b0a:	9c06      	ldr	r4, [sp, #24]
   85b0c:	9d02      	ldr	r5, [sp, #8]
   85b0e:	e007      	b.n	85b20 <_vfiprintf_r+0x7d0>
   85b10:	f101 0e02 	add.w	lr, r1, #2
   85b14:	4601      	mov	r1, r0
   85b16:	f10c 0c08 	add.w	ip, ip, #8
   85b1a:	3e10      	subs	r6, #16
   85b1c:	2e10      	cmp	r6, #16
   85b1e:	dd19      	ble.n	85b54 <_vfiprintf_r+0x804>
   85b20:	1c48      	adds	r0, r1, #1
   85b22:	3210      	adds	r2, #16
   85b24:	2807      	cmp	r0, #7
   85b26:	e9cc 7b00 	strd	r7, fp, [ip]
   85b2a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85b2e:	ddef      	ble.n	85b10 <_vfiprintf_r+0x7c0>
   85b30:	b332      	cbz	r2, 85b80 <_vfiprintf_r+0x830>
   85b32:	4629      	mov	r1, r5
   85b34:	4620      	mov	r0, r4
   85b36:	aa10      	add	r2, sp, #64	; 0x40
   85b38:	f7ff fbce 	bl	852d8 <__sprint_r.part.0>
   85b3c:	2800      	cmp	r0, #0
   85b3e:	f47f ad90 	bne.w	85662 <_vfiprintf_r+0x312>
   85b42:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85b46:	3e10      	subs	r6, #16
   85b48:	2e10      	cmp	r6, #16
   85b4a:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85b4e:	f101 0e01 	add.w	lr, r1, #1
   85b52:	dce5      	bgt.n	85b20 <_vfiprintf_r+0x7d0>
   85b54:	463b      	mov	r3, r7
   85b56:	4645      	mov	r5, r8
   85b58:	4657      	mov	r7, sl
   85b5a:	46c8      	mov	r8, r9
   85b5c:	4670      	mov	r0, lr
   85b5e:	46e1      	mov	r9, ip
   85b60:	469a      	mov	sl, r3
   85b62:	9c07      	ldr	r4, [sp, #28]
   85b64:	4432      	add	r2, r6
   85b66:	2807      	cmp	r0, #7
   85b68:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85b6c:	f8c9 a000 	str.w	sl, [r9]
   85b70:	f8c9 6004 	str.w	r6, [r9, #4]
   85b74:	f300 80e9 	bgt.w	85d4a <_vfiprintf_r+0x9fa>
   85b78:	f109 0908 	add.w	r9, r9, #8
   85b7c:	3001      	adds	r0, #1
   85b7e:	e5e7      	b.n	85750 <_vfiprintf_r+0x400>
   85b80:	f04f 0e01 	mov.w	lr, #1
   85b84:	4611      	mov	r1, r2
   85b86:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85b8a:	e7c6      	b.n	85b1a <_vfiprintf_r+0x7ca>
   85b8c:	9902      	ldr	r1, [sp, #8]
   85b8e:	9806      	ldr	r0, [sp, #24]
   85b90:	aa10      	add	r2, sp, #64	; 0x40
   85b92:	f7ff fba1 	bl	852d8 <__sprint_r.part.0>
   85b96:	2800      	cmp	r0, #0
   85b98:	f43f ae05 	beq.w	857a6 <_vfiprintf_r+0x456>
   85b9c:	e561      	b.n	85662 <_vfiprintf_r+0x312>
   85b9e:	f04f 0e01 	mov.w	lr, #1
   85ba2:	4611      	mov	r1, r2
   85ba4:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85ba8:	e756      	b.n	85a58 <_vfiprintf_r+0x708>
   85baa:	2a00      	cmp	r2, #0
   85bac:	f000 80de 	beq.w	85d6c <_vfiprintf_r+0xa1c>
   85bb0:	9902      	ldr	r1, [sp, #8]
   85bb2:	9806      	ldr	r0, [sp, #24]
   85bb4:	aa10      	add	r2, sp, #64	; 0x40
   85bb6:	f7ff fb8f 	bl	852d8 <__sprint_r.part.0>
   85bba:	2800      	cmp	r0, #0
   85bbc:	f47f ad51 	bne.w	85662 <_vfiprintf_r+0x312>
   85bc0:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85bc4:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85bc8:	1c48      	adds	r0, r1, #1
   85bca:	e59a      	b.n	85702 <_vfiprintf_r+0x3b2>
   85bcc:	0008a398 	.word	0x0008a398
   85bd0:	0008a3fc 	.word	0x0008a3fc
   85bd4:	2202      	movs	r2, #2
   85bd6:	2001      	movs	r0, #1
   85bd8:	ab0f      	add	r3, sp, #60	; 0x3c
   85bda:	9313      	str	r3, [sp, #76]	; 0x4c
   85bdc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85be0:	9214      	str	r2, [sp, #80]	; 0x50
   85be2:	4601      	mov	r1, r0
   85be4:	f109 0908 	add.w	r9, r9, #8
   85be8:	1c48      	adds	r0, r1, #1
   85bea:	e5a7      	b.n	8573c <_vfiprintf_r+0x3ec>
   85bec:	2e10      	cmp	r6, #16
   85bee:	f340 8245 	ble.w	8607c <_vfiprintf_r+0xd2c>
   85bf2:	e9dd 3211 	ldrd	r3, r2, [sp, #68]	; 0x44
   85bf6:	f8df a2f0 	ldr.w	sl, [pc, #752]	; 85ee8 <_vfiprintf_r+0xb98>
   85bfa:	4619      	mov	r1, r3
   85bfc:	4653      	mov	r3, sl
   85bfe:	46cc      	mov	ip, r9
   85c00:	46ba      	mov	sl, r7
   85c02:	46c1      	mov	r9, r8
   85c04:	940d      	str	r4, [sp, #52]	; 0x34
   85c06:	46a8      	mov	r8, r5
   85c08:	461f      	mov	r7, r3
   85c0a:	9c06      	ldr	r4, [sp, #24]
   85c0c:	9d02      	ldr	r5, [sp, #8]
   85c0e:	e007      	b.n	85c20 <_vfiprintf_r+0x8d0>
   85c10:	f101 0e02 	add.w	lr, r1, #2
   85c14:	4601      	mov	r1, r0
   85c16:	f10c 0c08 	add.w	ip, ip, #8
   85c1a:	3e10      	subs	r6, #16
   85c1c:	2e10      	cmp	r6, #16
   85c1e:	dd1c      	ble.n	85c5a <_vfiprintf_r+0x90a>
   85c20:	2310      	movs	r3, #16
   85c22:	1c48      	adds	r0, r1, #1
   85c24:	3210      	adds	r2, #16
   85c26:	2807      	cmp	r0, #7
   85c28:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85c2c:	f8cc 7000 	str.w	r7, [ip]
   85c30:	f8cc 3004 	str.w	r3, [ip, #4]
   85c34:	ddec      	ble.n	85c10 <_vfiprintf_r+0x8c0>
   85c36:	b332      	cbz	r2, 85c86 <_vfiprintf_r+0x936>
   85c38:	4629      	mov	r1, r5
   85c3a:	4620      	mov	r0, r4
   85c3c:	aa10      	add	r2, sp, #64	; 0x40
   85c3e:	f7ff fb4b 	bl	852d8 <__sprint_r.part.0>
   85c42:	2800      	cmp	r0, #0
   85c44:	f47f ad0d 	bne.w	85662 <_vfiprintf_r+0x312>
   85c48:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85c4c:	3e10      	subs	r6, #16
   85c4e:	2e10      	cmp	r6, #16
   85c50:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85c54:	f101 0e01 	add.w	lr, r1, #1
   85c58:	dce2      	bgt.n	85c20 <_vfiprintf_r+0x8d0>
   85c5a:	463b      	mov	r3, r7
   85c5c:	4645      	mov	r5, r8
   85c5e:	4657      	mov	r7, sl
   85c60:	46c8      	mov	r8, r9
   85c62:	4671      	mov	r1, lr
   85c64:	46e1      	mov	r9, ip
   85c66:	469a      	mov	sl, r3
   85c68:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   85c6a:	4432      	add	r2, r6
   85c6c:	2907      	cmp	r1, #7
   85c6e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
   85c72:	f8c9 a000 	str.w	sl, [r9]
   85c76:	f8c9 6004 	str.w	r6, [r9, #4]
   85c7a:	f300 80a7 	bgt.w	85dcc <_vfiprintf_r+0xa7c>
   85c7e:	f109 0908 	add.w	r9, r9, #8
   85c82:	1c48      	adds	r0, r1, #1
   85c84:	e52b      	b.n	856de <_vfiprintf_r+0x38e>
   85c86:	4611      	mov	r1, r2
   85c88:	f04f 0e01 	mov.w	lr, #1
   85c8c:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85c90:	e7c3      	b.n	85c1a <_vfiprintf_r+0x8ca>
   85c92:	076c      	lsls	r4, r5, #29
   85c94:	9211      	str	r2, [sp, #68]	; 0x44
   85c96:	d550      	bpl.n	85d3a <_vfiprintf_r+0x9ea>
   85c98:	9b03      	ldr	r3, [sp, #12]
   85c9a:	eba3 0408 	sub.w	r4, r3, r8
   85c9e:	2c00      	cmp	r4, #0
   85ca0:	dd4b      	ble.n	85d3a <_vfiprintf_r+0x9ea>
   85ca2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85ca6:	2c10      	cmp	r4, #16
   85ca8:	f340 81f8 	ble.w	8609c <_vfiprintf_r+0xd4c>
   85cac:	f8df a238 	ldr.w	sl, [pc, #568]	; 85ee8 <_vfiprintf_r+0xb98>
   85cb0:	2510      	movs	r5, #16
   85cb2:	4653      	mov	r3, sl
   85cb4:	9911      	ldr	r1, [sp, #68]	; 0x44
   85cb6:	46ba      	mov	sl, r7
   85cb8:	9e06      	ldr	r6, [sp, #24]
   85cba:	461f      	mov	r7, r3
   85cbc:	f8dd b008 	ldr.w	fp, [sp, #8]
   85cc0:	e006      	b.n	85cd0 <_vfiprintf_r+0x980>
   85cc2:	1c88      	adds	r0, r1, #2
   85cc4:	4619      	mov	r1, r3
   85cc6:	f109 0908 	add.w	r9, r9, #8
   85cca:	3c10      	subs	r4, #16
   85ccc:	2c10      	cmp	r4, #16
   85cce:	dd19      	ble.n	85d04 <_vfiprintf_r+0x9b4>
   85cd0:	1c4b      	adds	r3, r1, #1
   85cd2:	3210      	adds	r2, #16
   85cd4:	2b07      	cmp	r3, #7
   85cd6:	e9c9 7500 	strd	r7, r5, [r9]
   85cda:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
   85cde:	ddf0      	ble.n	85cc2 <_vfiprintf_r+0x972>
   85ce0:	b332      	cbz	r2, 85d30 <_vfiprintf_r+0x9e0>
   85ce2:	4659      	mov	r1, fp
   85ce4:	4630      	mov	r0, r6
   85ce6:	aa10      	add	r2, sp, #64	; 0x40
   85ce8:	f7ff faf6 	bl	852d8 <__sprint_r.part.0>
   85cec:	2800      	cmp	r0, #0
   85cee:	f47f acb8 	bne.w	85662 <_vfiprintf_r+0x312>
   85cf2:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85cf6:	3c10      	subs	r4, #16
   85cf8:	2c10      	cmp	r4, #16
   85cfa:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85cfe:	f101 0001 	add.w	r0, r1, #1
   85d02:	dce5      	bgt.n	85cd0 <_vfiprintf_r+0x980>
   85d04:	463b      	mov	r3, r7
   85d06:	4657      	mov	r7, sl
   85d08:	469a      	mov	sl, r3
   85d0a:	4422      	add	r2, r4
   85d0c:	2807      	cmp	r0, #7
   85d0e:	e9c9 a400 	strd	sl, r4, [r9]
   85d12:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85d16:	f77f ad3c 	ble.w	85792 <_vfiprintf_r+0x442>
   85d1a:	b172      	cbz	r2, 85d3a <_vfiprintf_r+0x9ea>
   85d1c:	9902      	ldr	r1, [sp, #8]
   85d1e:	9806      	ldr	r0, [sp, #24]
   85d20:	aa10      	add	r2, sp, #64	; 0x40
   85d22:	f7ff fad9 	bl	852d8 <__sprint_r.part.0>
   85d26:	2800      	cmp	r0, #0
   85d28:	f47f ac9b 	bne.w	85662 <_vfiprintf_r+0x312>
   85d2c:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85d2e:	e530      	b.n	85792 <_vfiprintf_r+0x442>
   85d30:	2001      	movs	r0, #1
   85d32:	4611      	mov	r1, r2
   85d34:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85d38:	e7c7      	b.n	85cca <_vfiprintf_r+0x97a>
   85d3a:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
   85d3e:	4542      	cmp	r2, r8
   85d40:	bfac      	ite	ge
   85d42:	189b      	addge	r3, r3, r2
   85d44:	4443      	addlt	r3, r8
   85d46:	9304      	str	r3, [sp, #16]
   85d48:	e52d      	b.n	857a6 <_vfiprintf_r+0x456>
   85d4a:	2a00      	cmp	r2, #0
   85d4c:	f43f ae60 	beq.w	85a10 <_vfiprintf_r+0x6c0>
   85d50:	9902      	ldr	r1, [sp, #8]
   85d52:	9806      	ldr	r0, [sp, #24]
   85d54:	aa10      	add	r2, sp, #64	; 0x40
   85d56:	f7ff fabf 	bl	852d8 <__sprint_r.part.0>
   85d5a:	2800      	cmp	r0, #0
   85d5c:	f47f ac81 	bne.w	85662 <_vfiprintf_r+0x312>
   85d60:	9811      	ldr	r0, [sp, #68]	; 0x44
   85d62:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85d64:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85d68:	3001      	adds	r0, #1
   85d6a:	e4f1      	b.n	85750 <_vfiprintf_r+0x400>
   85d6c:	9b07      	ldr	r3, [sp, #28]
   85d6e:	2b00      	cmp	r3, #0
   85d70:	d169      	bne.n	85e46 <_vfiprintf_r+0xaf6>
   85d72:	2001      	movs	r0, #1
   85d74:	4611      	mov	r1, r2
   85d76:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85d7a:	e4df      	b.n	8573c <_vfiprintf_r+0x3ec>
   85d7c:	9211      	str	r2, [sp, #68]	; 0x44
   85d7e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85d82:	e458      	b.n	85636 <_vfiprintf_r+0x2e6>
   85d84:	f1bb 0f00 	cmp.w	fp, #0
   85d88:	f47f abdc 	bne.w	85544 <_vfiprintf_r+0x1f4>
   85d8c:	4655      	mov	r5, sl
   85d8e:	f04f 0b00 	mov.w	fp, #0
   85d92:	ac3c      	add	r4, sp, #240	; 0xf0
   85d94:	f8cd b004 	str.w	fp, [sp, #4]
   85d98:	f7ff bbdc 	b.w	85554 <_vfiprintf_r+0x204>
   85d9c:	f01a 0310 	ands.w	r3, sl, #16
   85da0:	d140      	bne.n	85e24 <_vfiprintf_r+0xad4>
   85da2:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
   85da6:	d039      	beq.n	85e1c <_vfiprintf_r+0xacc>
   85da8:	9e05      	ldr	r6, [sp, #20]
   85daa:	4698      	mov	r8, r3
   85dac:	f856 2b04 	ldr.w	r2, [r6], #4
   85db0:	2301      	movs	r3, #1
   85db2:	9605      	str	r6, [sp, #20]
   85db4:	b296      	uxth	r6, r2
   85db6:	e410      	b.n	855da <_vfiprintf_r+0x28a>
   85db8:	232d      	movs	r3, #45	; 0x2d
   85dba:	4276      	negs	r6, r6
   85dbc:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85dc0:	46aa      	mov	sl, r5
   85dc2:	f04f 0301 	mov.w	r3, #1
   85dc6:	eb68 0848 	sbc.w	r8, r8, r8, lsl #1
   85dca:	e40a      	b.n	855e2 <_vfiprintf_r+0x292>
   85dcc:	2a00      	cmp	r2, #0
   85dce:	d06f      	beq.n	85eb0 <_vfiprintf_r+0xb60>
   85dd0:	9902      	ldr	r1, [sp, #8]
   85dd2:	9806      	ldr	r0, [sp, #24]
   85dd4:	aa10      	add	r2, sp, #64	; 0x40
   85dd6:	f7ff fa7f 	bl	852d8 <__sprint_r.part.0>
   85dda:	2800      	cmp	r0, #0
   85ddc:	f47f ac41 	bne.w	85662 <_vfiprintf_r+0x312>
   85de0:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85de4:	e478      	b.n	856d8 <_vfiprintf_r+0x388>
   85de6:	ac3c      	add	r4, sp, #240	; 0xf0
   85de8:	f7ff bbb4 	b.w	85554 <_vfiprintf_r+0x204>
   85dec:	4601      	mov	r1, r0
   85dee:	f109 0908 	add.w	r9, r9, #8
   85df2:	3001      	adds	r0, #1
   85df4:	e4a6      	b.n	85744 <_vfiprintf_r+0x3f4>
   85df6:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   85dfa:	f040 811d 	bne.w	86038 <_vfiprintf_r+0xce8>
   85dfe:	9b05      	ldr	r3, [sp, #20]
   85e00:	f853 6b04 	ldr.w	r6, [r3], #4
   85e04:	9305      	str	r3, [sp, #20]
   85e06:	f7ff bbe5 	b.w	855d4 <_vfiprintf_r+0x284>
   85e0a:	05aa      	lsls	r2, r5, #22
   85e0c:	f100 810e 	bmi.w	8602c <_vfiprintf_r+0xcdc>
   85e10:	ea4f 78e3 	mov.w	r8, r3, asr #31
   85e14:	461e      	mov	r6, r3
   85e16:	4643      	mov	r3, r8
   85e18:	f7ff bb82 	b.w	85520 <_vfiprintf_r+0x1d0>
   85e1c:	f41a 7800 	ands.w	r8, sl, #512	; 0x200
   85e20:	f040 80fb 	bne.w	8601a <_vfiprintf_r+0xcca>
   85e24:	9a05      	ldr	r2, [sp, #20]
   85e26:	2301      	movs	r3, #1
   85e28:	f852 6b04 	ldr.w	r6, [r2], #4
   85e2c:	9205      	str	r2, [sp, #20]
   85e2e:	f7ff bbd4 	b.w	855da <_vfiprintf_r+0x28a>
   85e32:	e9dd 1604 	ldrd	r1, r6, [sp, #16]
   85e36:	f856 2b04 	ldr.w	r2, [r6], #4
   85e3a:	17cb      	asrs	r3, r1, #31
   85e3c:	e9c2 1300 	strd	r1, r3, [r2]
   85e40:	9605      	str	r6, [sp, #20]
   85e42:	f7ff babe 	b.w	853c2 <_vfiprintf_r+0x72>
   85e46:	2202      	movs	r2, #2
   85e48:	ab0f      	add	r3, sp, #60	; 0x3c
   85e4a:	9313      	str	r3, [sp, #76]	; 0x4c
   85e4c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85e50:	9214      	str	r2, [sp, #80]	; 0x50
   85e52:	e6c7      	b.n	85be4 <_vfiprintf_r+0x894>
   85e54:	4a25      	ldr	r2, [pc, #148]	; (85eec <_vfiprintf_r+0xb9c>)
   85e56:	9209      	str	r2, [sp, #36]	; 0x24
   85e58:	f015 0820 	ands.w	r8, r5, #32
   85e5c:	d036      	beq.n	85ecc <_vfiprintf_r+0xb7c>
   85e5e:	9e05      	ldr	r6, [sp, #20]
   85e60:	3607      	adds	r6, #7
   85e62:	f026 0607 	bic.w	r6, r6, #7
   85e66:	4632      	mov	r2, r6
   85e68:	f8d6 8004 	ldr.w	r8, [r6, #4]
   85e6c:	f852 6b08 	ldr.w	r6, [r2], #8
   85e70:	9205      	str	r2, [sp, #20]
   85e72:	07ea      	lsls	r2, r5, #31
   85e74:	d509      	bpl.n	85e8a <_vfiprintf_r+0xb3a>
   85e76:	ea56 0208 	orrs.w	r2, r6, r8
   85e7a:	d006      	beq.n	85e8a <_vfiprintf_r+0xb3a>
   85e7c:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
   85e80:	2330      	movs	r3, #48	; 0x30
   85e82:	f045 0502 	orr.w	r5, r5, #2
   85e86:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
   85e8a:	2302      	movs	r3, #2
   85e8c:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   85e90:	f7ff bba3 	b.w	855da <_vfiprintf_r+0x28a>
   85e94:	46aa      	mov	sl, r5
   85e96:	e4ff      	b.n	85898 <_vfiprintf_r+0x548>
   85e98:	4a15      	ldr	r2, [pc, #84]	; (85ef0 <_vfiprintf_r+0xba0>)
   85e9a:	9209      	str	r2, [sp, #36]	; 0x24
   85e9c:	e7dc      	b.n	85e58 <_vfiprintf_r+0xb08>
   85e9e:	4620      	mov	r0, r4
   85ea0:	9605      	str	r6, [sp, #20]
   85ea2:	f7fd fc65 	bl	83770 <strlen>
   85ea6:	f04f 0b00 	mov.w	fp, #0
   85eaa:	9001      	str	r0, [sp, #4]
   85eac:	f7ff bb52 	b.w	85554 <_vfiprintf_r+0x204>
   85eb0:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
   85eb4:	2900      	cmp	r1, #0
   85eb6:	f000 80a6 	beq.w	86006 <_vfiprintf_r+0xcb6>
   85eba:	2001      	movs	r0, #1
   85ebc:	f10d 023b 	add.w	r2, sp, #59	; 0x3b
   85ec0:	9213      	str	r2, [sp, #76]	; 0x4c
   85ec2:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85ec6:	4602      	mov	r2, r0
   85ec8:	9014      	str	r0, [sp, #80]	; 0x50
   85eca:	e416      	b.n	856fa <_vfiprintf_r+0x3aa>
   85ecc:	f015 0210 	ands.w	r2, r5, #16
   85ed0:	d114      	bne.n	85efc <_vfiprintf_r+0xbac>
   85ed2:	f015 0140 	ands.w	r1, r5, #64	; 0x40
   85ed6:	d00d      	beq.n	85ef4 <_vfiprintf_r+0xba4>
   85ed8:	9e05      	ldr	r6, [sp, #20]
   85eda:	4690      	mov	r8, r2
   85edc:	f856 2b04 	ldr.w	r2, [r6], #4
   85ee0:	9605      	str	r6, [sp, #20]
   85ee2:	b296      	uxth	r6, r2
   85ee4:	e7c5      	b.n	85e72 <_vfiprintf_r+0xb22>
   85ee6:	bf00      	nop
   85ee8:	0008a3ec 	.word	0x0008a3ec
   85eec:	0008a3ac 	.word	0x0008a3ac
   85ef0:	0008a398 	.word	0x0008a398
   85ef4:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   85ef8:	f040 80a6 	bne.w	86048 <_vfiprintf_r+0xcf8>
   85efc:	9a05      	ldr	r2, [sp, #20]
   85efe:	f852 6b04 	ldr.w	r6, [r2], #4
   85f02:	9205      	str	r2, [sp, #20]
   85f04:	e7b5      	b.n	85e72 <_vfiprintf_r+0xb22>
   85f06:	2300      	movs	r3, #0
   85f08:	f40a 6280 	and.w	r2, sl, #1024	; 0x400
   85f0c:	f8cd b004 	str.w	fp, [sp, #4]
   85f10:	f8cd a01c 	str.w	sl, [sp, #28]
   85f14:	46bb      	mov	fp, r7
   85f16:	f8cd 9020 	str.w	r9, [sp, #32]
   85f1a:	469a      	mov	sl, r3
   85f1c:	4617      	mov	r7, r2
   85f1e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   85f22:	ad3c      	add	r5, sp, #240	; 0xf0
   85f24:	e00c      	b.n	85f40 <_vfiprintf_r+0xbf0>
   85f26:	2300      	movs	r3, #0
   85f28:	4630      	mov	r0, r6
   85f2a:	4641      	mov	r1, r8
   85f2c:	220a      	movs	r2, #10
   85f2e:	f004 f85f 	bl	89ff0 <__aeabi_uldivmod>
   85f32:	2e0a      	cmp	r6, #10
   85f34:	f178 0300 	sbcs.w	r3, r8, #0
   85f38:	d31b      	bcc.n	85f72 <_vfiprintf_r+0xc22>
   85f3a:	4606      	mov	r6, r0
   85f3c:	4688      	mov	r8, r1
   85f3e:	4625      	mov	r5, r4
   85f40:	4630      	mov	r0, r6
   85f42:	4641      	mov	r1, r8
   85f44:	220a      	movs	r2, #10
   85f46:	2300      	movs	r3, #0
   85f48:	f004 f852 	bl	89ff0 <__aeabi_uldivmod>
   85f4c:	3230      	adds	r2, #48	; 0x30
   85f4e:	1e6c      	subs	r4, r5, #1
   85f50:	f10a 0a01 	add.w	sl, sl, #1
   85f54:	f805 2c01 	strb.w	r2, [r5, #-1]
   85f58:	2f00      	cmp	r7, #0
   85f5a:	d0e4      	beq.n	85f26 <_vfiprintf_r+0xbd6>
   85f5c:	f899 3000 	ldrb.w	r3, [r9]
   85f60:	4553      	cmp	r3, sl
   85f62:	d1e0      	bne.n	85f26 <_vfiprintf_r+0xbd6>
   85f64:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
   85f68:	d0dd      	beq.n	85f26 <_vfiprintf_r+0xbd6>
   85f6a:	2e0a      	cmp	r6, #10
   85f6c:	f178 0300 	sbcs.w	r3, r8, #0
   85f70:	d22e      	bcs.n	85fd0 <_vfiprintf_r+0xc80>
   85f72:	f8dd a01c 	ldr.w	sl, [sp, #28]
   85f76:	ab3c      	add	r3, sp, #240	; 0xf0
   85f78:	1b1b      	subs	r3, r3, r4
   85f7a:	465f      	mov	r7, fp
   85f7c:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   85f80:	f8dd b004 	ldr.w	fp, [sp, #4]
   85f84:	4655      	mov	r5, sl
   85f86:	f8dd 9020 	ldr.w	r9, [sp, #32]
   85f8a:	9301      	str	r3, [sp, #4]
   85f8c:	f7ff bae2 	b.w	85554 <_vfiprintf_r+0x204>
   85f90:	46aa      	mov	sl, r5
   85f92:	f7ff bad2 	b.w	8553a <_vfiprintf_r+0x1ea>
   85f96:	2b01      	cmp	r3, #1
   85f98:	46aa      	mov	sl, r5
   85f9a:	f47f ad06 	bne.w	859aa <_vfiprintf_r+0x65a>
   85f9e:	f7ff bad1 	b.w	85544 <_vfiprintf_r+0x1f4>
   85fa2:	9e05      	ldr	r6, [sp, #20]
   85fa4:	9a04      	ldr	r2, [sp, #16]
   85fa6:	f856 3b04 	ldr.w	r3, [r6], #4
   85faa:	601a      	str	r2, [r3, #0]
   85fac:	9605      	str	r6, [sp, #20]
   85fae:	f7ff ba08 	b.w	853c2 <_vfiprintf_r+0x72>
   85fb2:	f1bb 0f06 	cmp.w	fp, #6
   85fb6:	46d8      	mov	r8, fp
   85fb8:	bf28      	it	cs
   85fba:	f04f 0806 	movcs.w	r8, #6
   85fbe:	4c47      	ldr	r4, [pc, #284]	; (860dc <_vfiprintf_r+0xd8c>)
   85fc0:	f8cd 8004 	str.w	r8, [sp, #4]
   85fc4:	9605      	str	r6, [sp, #20]
   85fc6:	f7ff bb75 	b.w	856b4 <_vfiprintf_r+0x364>
   85fca:	f8df a114 	ldr.w	sl, [pc, #276]	; 860e0 <_vfiprintf_r+0xd90>
   85fce:	e5c9      	b.n	85b64 <_vfiprintf_r+0x814>
   85fd0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   85fd2:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85fd4:	1ae4      	subs	r4, r4, r3
   85fd6:	461a      	mov	r2, r3
   85fd8:	4620      	mov	r0, r4
   85fda:	f7fd fbf7 	bl	837cc <strncpy>
   85fde:	f899 3001 	ldrb.w	r3, [r9, #1]
   85fe2:	b10b      	cbz	r3, 85fe8 <_vfiprintf_r+0xc98>
   85fe4:	f109 0901 	add.w	r9, r9, #1
   85fe8:	4630      	mov	r0, r6
   85fea:	4641      	mov	r1, r8
   85fec:	220a      	movs	r2, #10
   85fee:	2300      	movs	r3, #0
   85ff0:	f04f 0a00 	mov.w	sl, #0
   85ff4:	f003 fffc 	bl	89ff0 <__aeabi_uldivmod>
   85ff8:	e79f      	b.n	85f3a <_vfiprintf_r+0xbea>
   85ffa:	2001      	movs	r0, #1
   85ffc:	4611      	mov	r1, r2
   85ffe:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86002:	f7ff bb9f 	b.w	85744 <_vfiprintf_r+0x3f4>
   86006:	9b07      	ldr	r3, [sp, #28]
   86008:	2b00      	cmp	r3, #0
   8600a:	f47f ade3 	bne.w	85bd4 <_vfiprintf_r+0x884>
   8600e:	4611      	mov	r1, r2
   86010:	2001      	movs	r0, #1
   86012:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86016:	f7ff bb95 	b.w	85744 <_vfiprintf_r+0x3f4>
   8601a:	9e05      	ldr	r6, [sp, #20]
   8601c:	4690      	mov	r8, r2
   8601e:	f856 2b04 	ldr.w	r2, [r6], #4
   86022:	2301      	movs	r3, #1
   86024:	9605      	str	r6, [sp, #20]
   86026:	b2d6      	uxtb	r6, r2
   86028:	f7ff bad7 	b.w	855da <_vfiprintf_r+0x28a>
   8602c:	f343 18c0 	sbfx	r8, r3, #7, #1
   86030:	b25e      	sxtb	r6, r3
   86032:	4643      	mov	r3, r8
   86034:	f7ff ba74 	b.w	85520 <_vfiprintf_r+0x1d0>
   86038:	9e05      	ldr	r6, [sp, #20]
   8603a:	4690      	mov	r8, r2
   8603c:	f856 3b04 	ldr.w	r3, [r6], #4
   86040:	9605      	str	r6, [sp, #20]
   86042:	b2de      	uxtb	r6, r3
   86044:	f7ff bac6 	b.w	855d4 <_vfiprintf_r+0x284>
   86048:	9e05      	ldr	r6, [sp, #20]
   8604a:	4688      	mov	r8, r1
   8604c:	f856 2b04 	ldr.w	r2, [r6], #4
   86050:	9605      	str	r6, [sp, #20]
   86052:	b2d6      	uxtb	r6, r2
   86054:	e70d      	b.n	85e72 <_vfiprintf_r+0xb22>
   86056:	9e05      	ldr	r6, [sp, #20]
   86058:	9a04      	ldr	r2, [sp, #16]
   8605a:	f856 3b04 	ldr.w	r3, [r6], #4
   8605e:	801a      	strh	r2, [r3, #0]
   86060:	9605      	str	r6, [sp, #20]
   86062:	f7ff b9ae 	b.w	853c2 <_vfiprintf_r+0x72>
   86066:	6d88      	ldr	r0, [r1, #88]	; 0x58
   86068:	f001 fde6 	bl	87c38 <__retarget_lock_release_recursive>
   8606c:	f7ff ba99 	b.w	855a2 <_vfiprintf_r+0x252>
   86070:	f8cd b004 	str.w	fp, [sp, #4]
   86074:	9605      	str	r6, [sp, #20]
   86076:	4683      	mov	fp, r0
   86078:	f7ff ba6c 	b.w	85554 <_vfiprintf_r+0x204>
   8607c:	9911      	ldr	r1, [sp, #68]	; 0x44
   8607e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86080:	f8df a060 	ldr.w	sl, [pc, #96]	; 860e4 <_vfiprintf_r+0xd94>
   86084:	3101      	adds	r1, #1
   86086:	e5f0      	b.n	85c6a <_vfiprintf_r+0x91a>
   86088:	9902      	ldr	r1, [sp, #8]
   8608a:	9806      	ldr	r0, [sp, #24]
   8608c:	aa10      	add	r2, sp, #64	; 0x40
   8608e:	f7ff f923 	bl	852d8 <__sprint_r.part.0>
   86092:	2800      	cmp	r0, #0
   86094:	f43f aae3 	beq.w	8565e <_vfiprintf_r+0x30e>
   86098:	f7ff bae3 	b.w	85662 <_vfiprintf_r+0x312>
   8609c:	9811      	ldr	r0, [sp, #68]	; 0x44
   8609e:	f8df a044 	ldr.w	sl, [pc, #68]	; 860e4 <_vfiprintf_r+0xd94>
   860a2:	3001      	adds	r0, #1
   860a4:	e631      	b.n	85d0a <_vfiprintf_r+0x9ba>
   860a6:	9b02      	ldr	r3, [sp, #8]
   860a8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   860aa:	07db      	lsls	r3, r3, #31
   860ac:	d407      	bmi.n	860be <_vfiprintf_r+0xd6e>
   860ae:	9b02      	ldr	r3, [sp, #8]
   860b0:	899b      	ldrh	r3, [r3, #12]
   860b2:	059f      	lsls	r7, r3, #22
   860b4:	d403      	bmi.n	860be <_vfiprintf_r+0xd6e>
   860b6:	9b02      	ldr	r3, [sp, #8]
   860b8:	6d98      	ldr	r0, [r3, #88]	; 0x58
   860ba:	f001 fdbd 	bl	87c38 <__retarget_lock_release_recursive>
   860be:	f04f 33ff 	mov.w	r3, #4294967295
   860c2:	9304      	str	r3, [sp, #16]
   860c4:	f7ff bad6 	b.w	85674 <_vfiprintf_r+0x324>
   860c8:	9a05      	ldr	r2, [sp, #20]
   860ca:	787b      	ldrb	r3, [r7, #1]
   860cc:	460f      	mov	r7, r1
   860ce:	f852 1b04 	ldr.w	r1, [r2], #4
   860d2:	9205      	str	r2, [sp, #20]
   860d4:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
   860d8:	f7ff b993 	b.w	85402 <_vfiprintf_r+0xb2>
   860dc:	0008a3c0 	.word	0x0008a3c0
   860e0:	0008a3fc 	.word	0x0008a3fc
   860e4:	0008a3ec 	.word	0x0008a3ec

000860e8 <__sbprintf>:
   860e8:	b5f0      	push	{r4, r5, r6, r7, lr}
   860ea:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   860ee:	4615      	mov	r5, r2
   860f0:	2400      	movs	r4, #0
   860f2:	4606      	mov	r6, r0
   860f4:	461f      	mov	r7, r3
   860f6:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   860fa:	ab1a      	add	r3, sp, #104	; 0x68
   860fc:	9300      	str	r3, [sp, #0]
   860fe:	9304      	str	r3, [sp, #16]
   86100:	898b      	ldrh	r3, [r1, #12]
   86102:	a816      	add	r0, sp, #88	; 0x58
   86104:	f023 0302 	bic.w	r3, r3, #2
   86108:	f8ad 300c 	strh.w	r3, [sp, #12]
   8610c:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   8610e:	9406      	str	r4, [sp, #24]
   86110:	9319      	str	r3, [sp, #100]	; 0x64
   86112:	89cb      	ldrh	r3, [r1, #14]
   86114:	460c      	mov	r4, r1
   86116:	f8ad 300e 	strh.w	r3, [sp, #14]
   8611a:	69cb      	ldr	r3, [r1, #28]
   8611c:	f8cd c008 	str.w	ip, [sp, #8]
   86120:	9307      	str	r3, [sp, #28]
   86122:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86124:	f8cd c014 	str.w	ip, [sp, #20]
   86128:	9309      	str	r3, [sp, #36]	; 0x24
   8612a:	f001 fd7f 	bl	87c2c <__retarget_lock_init_recursive>
   8612e:	462a      	mov	r2, r5
   86130:	463b      	mov	r3, r7
   86132:	4669      	mov	r1, sp
   86134:	4630      	mov	r0, r6
   86136:	f7ff f90b 	bl	85350 <_vfiprintf_r>
   8613a:	1e05      	subs	r5, r0, #0
   8613c:	db07      	blt.n	8614e <__sbprintf+0x66>
   8613e:	4669      	mov	r1, sp
   86140:	4630      	mov	r0, r6
   86142:	f001 f91d 	bl	87380 <_fflush_r>
   86146:	2800      	cmp	r0, #0
   86148:	bf18      	it	ne
   8614a:	f04f 35ff 	movne.w	r5, #4294967295
   8614e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   86152:	065b      	lsls	r3, r3, #25
   86154:	d503      	bpl.n	8615e <__sbprintf+0x76>
   86156:	89a3      	ldrh	r3, [r4, #12]
   86158:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8615c:	81a3      	strh	r3, [r4, #12]
   8615e:	9816      	ldr	r0, [sp, #88]	; 0x58
   86160:	f001 fd66 	bl	87c30 <__retarget_lock_close_recursive>
   86164:	4628      	mov	r0, r5
   86166:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   8616a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0008616c <__swsetup_r>:
   8616c:	b538      	push	{r3, r4, r5, lr}
   8616e:	4b33      	ldr	r3, [pc, #204]	; (8623c <__swsetup_r+0xd0>)
   86170:	4605      	mov	r5, r0
   86172:	681b      	ldr	r3, [r3, #0]
   86174:	460c      	mov	r4, r1
   86176:	b10b      	cbz	r3, 8617c <__swsetup_r+0x10>
   86178:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   8617a:	b312      	cbz	r2, 861c2 <__swsetup_r+0x56>
   8617c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   86180:	0718      	lsls	r0, r3, #28
   86182:	b29a      	uxth	r2, r3
   86184:	d525      	bpl.n	861d2 <__swsetup_r+0x66>
   86186:	6921      	ldr	r1, [r4, #16]
   86188:	2900      	cmp	r1, #0
   8618a:	d02d      	beq.n	861e8 <__swsetup_r+0x7c>
   8618c:	f012 0001 	ands.w	r0, r2, #1
   86190:	d007      	beq.n	861a2 <__swsetup_r+0x36>
   86192:	2500      	movs	r5, #0
   86194:	6960      	ldr	r0, [r4, #20]
   86196:	60a5      	str	r5, [r4, #8]
   86198:	4240      	negs	r0, r0
   8619a:	61a0      	str	r0, [r4, #24]
   8619c:	b139      	cbz	r1, 861ae <__swsetup_r+0x42>
   8619e:	2000      	movs	r0, #0
   861a0:	bd38      	pop	{r3, r4, r5, pc}
   861a2:	0795      	lsls	r5, r2, #30
   861a4:	bf58      	it	pl
   861a6:	6960      	ldrpl	r0, [r4, #20]
   861a8:	60a0      	str	r0, [r4, #8]
   861aa:	2900      	cmp	r1, #0
   861ac:	d1f7      	bne.n	8619e <__swsetup_r+0x32>
   861ae:	0612      	lsls	r2, r2, #24
   861b0:	bf58      	it	pl
   861b2:	4608      	movpl	r0, r1
   861b4:	d5f4      	bpl.n	861a0 <__swsetup_r+0x34>
   861b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   861ba:	f04f 30ff 	mov.w	r0, #4294967295
   861be:	81a3      	strh	r3, [r4, #12]
   861c0:	bd38      	pop	{r3, r4, r5, pc}
   861c2:	4618      	mov	r0, r3
   861c4:	f001 f910 	bl	873e8 <__sinit>
   861c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   861cc:	0718      	lsls	r0, r3, #28
   861ce:	b29a      	uxth	r2, r3
   861d0:	d4d9      	bmi.n	86186 <__swsetup_r+0x1a>
   861d2:	06d1      	lsls	r1, r2, #27
   861d4:	d52a      	bpl.n	8622c <__swsetup_r+0xc0>
   861d6:	0752      	lsls	r2, r2, #29
   861d8:	d414      	bmi.n	86204 <__swsetup_r+0x98>
   861da:	6921      	ldr	r1, [r4, #16]
   861dc:	f043 0308 	orr.w	r3, r3, #8
   861e0:	81a3      	strh	r3, [r4, #12]
   861e2:	b29a      	uxth	r2, r3
   861e4:	2900      	cmp	r1, #0
   861e6:	d1d1      	bne.n	8618c <__swsetup_r+0x20>
   861e8:	f402 7020 	and.w	r0, r2, #640	; 0x280
   861ec:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   861f0:	d0cc      	beq.n	8618c <__swsetup_r+0x20>
   861f2:	4621      	mov	r1, r4
   861f4:	4628      	mov	r0, r5
   861f6:	f001 fd21 	bl	87c3c <__smakebuf_r>
   861fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   861fe:	6921      	ldr	r1, [r4, #16]
   86200:	b29a      	uxth	r2, r3
   86202:	e7c3      	b.n	8618c <__swsetup_r+0x20>
   86204:	6b21      	ldr	r1, [r4, #48]	; 0x30
   86206:	b151      	cbz	r1, 8621e <__swsetup_r+0xb2>
   86208:	f104 0240 	add.w	r2, r4, #64	; 0x40
   8620c:	4291      	cmp	r1, r2
   8620e:	d004      	beq.n	8621a <__swsetup_r+0xae>
   86210:	4628      	mov	r0, r5
   86212:	f001 fa65 	bl	876e0 <_free_r>
   86216:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8621a:	2200      	movs	r2, #0
   8621c:	6322      	str	r2, [r4, #48]	; 0x30
   8621e:	2200      	movs	r2, #0
   86220:	6921      	ldr	r1, [r4, #16]
   86222:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   86226:	e9c4 1200 	strd	r1, r2, [r4]
   8622a:	e7d7      	b.n	861dc <__swsetup_r+0x70>
   8622c:	2209      	movs	r2, #9
   8622e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86232:	602a      	str	r2, [r5, #0]
   86234:	f04f 30ff 	mov.w	r0, #4294967295
   86238:	81a3      	strh	r3, [r4, #12]
   8623a:	bd38      	pop	{r3, r4, r5, pc}
   8623c:	200003ac 	.word	0x200003ac

00086240 <register_fini>:
   86240:	4b02      	ldr	r3, [pc, #8]	; (8624c <register_fini+0xc>)
   86242:	b113      	cbz	r3, 8624a <register_fini+0xa>
   86244:	4802      	ldr	r0, [pc, #8]	; (86250 <register_fini+0x10>)
   86246:	f000 b805 	b.w	86254 <atexit>
   8624a:	4770      	bx	lr
   8624c:	00000000 	.word	0x00000000
   86250:	0008750d 	.word	0x0008750d

00086254 <atexit>:
   86254:	2300      	movs	r3, #0
   86256:	4601      	mov	r1, r0
   86258:	461a      	mov	r2, r3
   8625a:	4618      	mov	r0, r3
   8625c:	f003 b862 	b.w	89324 <__register_exitproc>

00086260 <quorem>:
   86260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86264:	6903      	ldr	r3, [r0, #16]
   86266:	690c      	ldr	r4, [r1, #16]
   86268:	b085      	sub	sp, #20
   8626a:	42a3      	cmp	r3, r4
   8626c:	f2c0 8089 	blt.w	86382 <quorem+0x122>
   86270:	3c01      	subs	r4, #1
   86272:	f101 0514 	add.w	r5, r1, #20
   86276:	00a3      	lsls	r3, r4, #2
   86278:	f100 0814 	add.w	r8, r0, #20
   8627c:	9301      	str	r3, [sp, #4]
   8627e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   86282:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86286:	3301      	adds	r3, #1
   86288:	468a      	mov	sl, r1
   8628a:	429a      	cmp	r2, r3
   8628c:	eb08 0184 	add.w	r1, r8, r4, lsl #2
   86290:	4681      	mov	r9, r0
   86292:	fbb2 f6f3 	udiv	r6, r2, r3
   86296:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   8629a:	9102      	str	r1, [sp, #8]
   8629c:	d33a      	bcc.n	86314 <quorem+0xb4>
   8629e:	2100      	movs	r1, #0
   862a0:	46ae      	mov	lr, r5
   862a2:	4640      	mov	r0, r8
   862a4:	460a      	mov	r2, r1
   862a6:	46a3      	mov	fp, r4
   862a8:	9503      	str	r5, [sp, #12]
   862aa:	f85e 5b04 	ldr.w	r5, [lr], #4
   862ae:	6804      	ldr	r4, [r0, #0]
   862b0:	b2ab      	uxth	r3, r5
   862b2:	fb06 1303 	mla	r3, r6, r3, r1
   862b6:	0c2d      	lsrs	r5, r5, #16
   862b8:	0c19      	lsrs	r1, r3, #16
   862ba:	fb06 1105 	mla	r1, r6, r5, r1
   862be:	b29b      	uxth	r3, r3
   862c0:	1ad2      	subs	r2, r2, r3
   862c2:	fa1f fc84 	uxth.w	ip, r4
   862c6:	4494      	add	ip, r2
   862c8:	b28a      	uxth	r2, r1
   862ca:	ebc2 4214 	rsb	r2, r2, r4, lsr #16
   862ce:	eb02 422c 	add.w	r2, r2, ip, asr #16
   862d2:	fa1f fc8c 	uxth.w	ip, ip
   862d6:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
   862da:	4577      	cmp	r7, lr
   862dc:	f840 3b04 	str.w	r3, [r0], #4
   862e0:	ea4f 4111 	mov.w	r1, r1, lsr #16
   862e4:	ea4f 4222 	mov.w	r2, r2, asr #16
   862e8:	d2df      	bcs.n	862aa <quorem+0x4a>
   862ea:	9b01      	ldr	r3, [sp, #4]
   862ec:	465c      	mov	r4, fp
   862ee:	f858 3003 	ldr.w	r3, [r8, r3]
   862f2:	9d03      	ldr	r5, [sp, #12]
   862f4:	b973      	cbnz	r3, 86314 <quorem+0xb4>
   862f6:	9b02      	ldr	r3, [sp, #8]
   862f8:	3b04      	subs	r3, #4
   862fa:	4598      	cmp	r8, r3
   862fc:	d304      	bcc.n	86308 <quorem+0xa8>
   862fe:	e007      	b.n	86310 <quorem+0xb0>
   86300:	4598      	cmp	r8, r3
   86302:	f104 34ff 	add.w	r4, r4, #4294967295
   86306:	d203      	bcs.n	86310 <quorem+0xb0>
   86308:	f853 2904 	ldr.w	r2, [r3], #-4
   8630c:	2a00      	cmp	r2, #0
   8630e:	d0f7      	beq.n	86300 <quorem+0xa0>
   86310:	f8c9 4010 	str.w	r4, [r9, #16]
   86314:	4651      	mov	r1, sl
   86316:	4648      	mov	r0, r9
   86318:	f002 fb46 	bl	889a8 <__mcmp>
   8631c:	2800      	cmp	r0, #0
   8631e:	db2c      	blt.n	8637a <quorem+0x11a>
   86320:	4640      	mov	r0, r8
   86322:	2300      	movs	r3, #0
   86324:	3601      	adds	r6, #1
   86326:	f855 1b04 	ldr.w	r1, [r5], #4
   8632a:	f8d0 c000 	ldr.w	ip, [r0]
   8632e:	b28a      	uxth	r2, r1
   86330:	1a9a      	subs	r2, r3, r2
   86332:	fa1f fe8c 	uxth.w	lr, ip
   86336:	0c0b      	lsrs	r3, r1, #16
   86338:	4472      	add	r2, lr
   8633a:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
   8633e:	eb03 4322 	add.w	r3, r3, r2, asr #16
   86342:	b292      	uxth	r2, r2
   86344:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86348:	42af      	cmp	r7, r5
   8634a:	f840 2b04 	str.w	r2, [r0], #4
   8634e:	ea4f 4323 	mov.w	r3, r3, asr #16
   86352:	d2e8      	bcs.n	86326 <quorem+0xc6>
   86354:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86358:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   8635c:	b96a      	cbnz	r2, 8637a <quorem+0x11a>
   8635e:	3b04      	subs	r3, #4
   86360:	4598      	cmp	r8, r3
   86362:	d304      	bcc.n	8636e <quorem+0x10e>
   86364:	e007      	b.n	86376 <quorem+0x116>
   86366:	4598      	cmp	r8, r3
   86368:	f104 34ff 	add.w	r4, r4, #4294967295
   8636c:	d203      	bcs.n	86376 <quorem+0x116>
   8636e:	f853 2904 	ldr.w	r2, [r3], #-4
   86372:	2a00      	cmp	r2, #0
   86374:	d0f7      	beq.n	86366 <quorem+0x106>
   86376:	f8c9 4010 	str.w	r4, [r9, #16]
   8637a:	4630      	mov	r0, r6
   8637c:	b005      	add	sp, #20
   8637e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86382:	2000      	movs	r0, #0
   86384:	b005      	add	sp, #20
   86386:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8638a:	bf00      	nop
   8638c:	0000      	movs	r0, r0
   8638e:	0000      	movs	r0, r0

00086390 <_dtoa_r>:
   86390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86394:	4690      	mov	r8, r2
   86396:	4699      	mov	r9, r3
   86398:	6c01      	ldr	r1, [r0, #64]	; 0x40
   8639a:	b099      	sub	sp, #100	; 0x64
   8639c:	4604      	mov	r4, r0
   8639e:	e9cd 8904 	strd	r8, r9, [sp, #16]
   863a2:	9d25      	ldr	r5, [sp, #148]	; 0x94
   863a4:	b141      	cbz	r1, 863b8 <_dtoa_r+0x28>
   863a6:	2301      	movs	r3, #1
   863a8:	6c42      	ldr	r2, [r0, #68]	; 0x44
   863aa:	4093      	lsls	r3, r2
   863ac:	608b      	str	r3, [r1, #8]
   863ae:	604a      	str	r2, [r1, #4]
   863b0:	f002 f8a4 	bl	884fc <_Bfree>
   863b4:	2300      	movs	r3, #0
   863b6:	6423      	str	r3, [r4, #64]	; 0x40
   863b8:	f1b9 0a00 	subs.w	sl, r9, #0
   863bc:	bfb4      	ite	lt
   863be:	2301      	movlt	r3, #1
   863c0:	2300      	movge	r3, #0
   863c2:	602b      	str	r3, [r5, #0]
   863c4:	4b76      	ldr	r3, [pc, #472]	; (865a0 <_dtoa_r+0x210>)
   863c6:	bfbc      	itt	lt
   863c8:	f02a 4a00 	biclt.w	sl, sl, #2147483648	; 0x80000000
   863cc:	f8cd a014 	strlt.w	sl, [sp, #20]
   863d0:	ea33 030a 	bics.w	r3, r3, sl
   863d4:	f000 80aa 	beq.w	8652c <_dtoa_r+0x19c>
   863d8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   863dc:	4610      	mov	r0, r2
   863de:	4619      	mov	r1, r3
   863e0:	2200      	movs	r2, #0
   863e2:	2300      	movs	r3, #0
   863e4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   863e8:	f003 fd92 	bl	89f10 <__aeabi_dcmpeq>
   863ec:	4607      	mov	r7, r0
   863ee:	b170      	cbz	r0, 8640e <_dtoa_r+0x7e>
   863f0:	2301      	movs	r3, #1
   863f2:	9a24      	ldr	r2, [sp, #144]	; 0x90
   863f4:	6013      	str	r3, [r2, #0]
   863f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   863f8:	2b00      	cmp	r3, #0
   863fa:	f000 82e6 	beq.w	869ca <_dtoa_r+0x63a>
   863fe:	4869      	ldr	r0, [pc, #420]	; (865a4 <_dtoa_r+0x214>)
   86400:	6018      	str	r0, [r3, #0]
   86402:	1e43      	subs	r3, r0, #1
   86404:	9303      	str	r3, [sp, #12]
   86406:	9803      	ldr	r0, [sp, #12]
   86408:	b019      	add	sp, #100	; 0x64
   8640a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8640e:	ab16      	add	r3, sp, #88	; 0x58
   86410:	9301      	str	r3, [sp, #4]
   86412:	ab17      	add	r3, sp, #92	; 0x5c
   86414:	9300      	str	r3, [sp, #0]
   86416:	4620      	mov	r0, r4
   86418:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   8641c:	f002 fb8a 	bl	88b34 <__d2b>
   86420:	ea5f 561a 	movs.w	r6, sl, lsr #20
   86424:	4605      	mov	r5, r0
   86426:	f040 8097 	bne.w	86558 <_dtoa_r+0x1c8>
   8642a:	e9dd 7616 	ldrd	r7, r6, [sp, #88]	; 0x58
   8642e:	443e      	add	r6, r7
   86430:	f206 4032 	addw	r0, r6, #1074	; 0x432
   86434:	2820      	cmp	r0, #32
   86436:	f340 83b7 	ble.w	86ba8 <_dtoa_r+0x818>
   8643a:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
   8643e:	fa0a fa00 	lsl.w	sl, sl, r0
   86442:	f206 4012 	addw	r0, r6, #1042	; 0x412
   86446:	fa28 f000 	lsr.w	r0, r8, r0
   8644a:	ea4a 0000 	orr.w	r0, sl, r0
   8644e:	f003 fa7d 	bl	8994c <__aeabi_ui2d>
   86452:	2301      	movs	r3, #1
   86454:	3e01      	subs	r6, #1
   86456:	930f      	str	r3, [sp, #60]	; 0x3c
   86458:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   8645c:	2200      	movs	r2, #0
   8645e:	4b52      	ldr	r3, [pc, #328]	; (865a8 <_dtoa_r+0x218>)
   86460:	f003 f936 	bl	896d0 <__aeabi_dsub>
   86464:	a348      	add	r3, pc, #288	; (adr r3, 86588 <_dtoa_r+0x1f8>)
   86466:	e9d3 2300 	ldrd	r2, r3, [r3]
   8646a:	f003 fae9 	bl	89a40 <__aeabi_dmul>
   8646e:	a348      	add	r3, pc, #288	; (adr r3, 86590 <_dtoa_r+0x200>)
   86470:	e9d3 2300 	ldrd	r2, r3, [r3]
   86474:	f003 f92e 	bl	896d4 <__adddf3>
   86478:	4680      	mov	r8, r0
   8647a:	4630      	mov	r0, r6
   8647c:	4689      	mov	r9, r1
   8647e:	f003 fa75 	bl	8996c <__aeabi_i2d>
   86482:	a345      	add	r3, pc, #276	; (adr r3, 86598 <_dtoa_r+0x208>)
   86484:	e9d3 2300 	ldrd	r2, r3, [r3]
   86488:	f003 fada 	bl	89a40 <__aeabi_dmul>
   8648c:	4602      	mov	r2, r0
   8648e:	460b      	mov	r3, r1
   86490:	4640      	mov	r0, r8
   86492:	4649      	mov	r1, r9
   86494:	f003 f91e 	bl	896d4 <__adddf3>
   86498:	4680      	mov	r8, r0
   8649a:	4689      	mov	r9, r1
   8649c:	f003 fd80 	bl	89fa0 <__aeabi_d2iz>
   864a0:	2200      	movs	r2, #0
   864a2:	4683      	mov	fp, r0
   864a4:	2300      	movs	r3, #0
   864a6:	4640      	mov	r0, r8
   864a8:	4649      	mov	r1, r9
   864aa:	f003 fd3b 	bl	89f24 <__aeabi_dcmplt>
   864ae:	2800      	cmp	r0, #0
   864b0:	f040 827e 	bne.w	869b0 <_dtoa_r+0x620>
   864b4:	f1bb 0f16 	cmp.w	fp, #22
   864b8:	f200 826d 	bhi.w	86996 <_dtoa_r+0x606>
   864bc:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   864c0:	4b3a      	ldr	r3, [pc, #232]	; (865ac <_dtoa_r+0x21c>)
   864c2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   864c6:	e9d3 2300 	ldrd	r2, r3, [r3]
   864ca:	f003 fd2b 	bl	89f24 <__aeabi_dcmplt>
   864ce:	2800      	cmp	r0, #0
   864d0:	d072      	beq.n	865b8 <_dtoa_r+0x228>
   864d2:	2300      	movs	r3, #0
   864d4:	1bbe      	subs	r6, r7, r6
   864d6:	930e      	str	r3, [sp, #56]	; 0x38
   864d8:	1e73      	subs	r3, r6, #1
   864da:	f10b 3bff 	add.w	fp, fp, #4294967295
   864de:	9306      	str	r3, [sp, #24]
   864e0:	f100 8260 	bmi.w	869a4 <_dtoa_r+0x614>
   864e4:	2300      	movs	r3, #0
   864e6:	9309      	str	r3, [sp, #36]	; 0x24
   864e8:	f1bb 0f00 	cmp.w	fp, #0
   864ec:	da6b      	bge.n	865c6 <_dtoa_r+0x236>
   864ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
   864f0:	f8cd b01c 	str.w	fp, [sp, #28]
   864f4:	eba3 030b 	sub.w	r3, r3, fp
   864f8:	9309      	str	r3, [sp, #36]	; 0x24
   864fa:	f1cb 0300 	rsb	r3, fp, #0
   864fe:	930d      	str	r3, [sp, #52]	; 0x34
   86500:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86502:	f04f 0b00 	mov.w	fp, #0
   86506:	2b09      	cmp	r3, #9
   86508:	d866      	bhi.n	865d8 <_dtoa_r+0x248>
   8650a:	2b05      	cmp	r3, #5
   8650c:	f340 834a 	ble.w	86ba4 <_dtoa_r+0x814>
   86510:	2600      	movs	r6, #0
   86512:	3b04      	subs	r3, #4
   86514:	9322      	str	r3, [sp, #136]	; 0x88
   86516:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86518:	3b02      	subs	r3, #2
   8651a:	2b03      	cmp	r3, #3
   8651c:	f200 866c 	bhi.w	871f8 <_dtoa_r+0xe68>
   86520:	e8df f013 	tbh	[pc, r3, lsl #1]
   86524:	045e0461 	.word	0x045e0461
   86528:	04380455 	.word	0x04380455
   8652c:	f242 730f 	movw	r3, #9999	; 0x270f
   86530:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86532:	f3ca 0a13 	ubfx	sl, sl, #0, #20
   86536:	6013      	str	r3, [r2, #0]
   86538:	ea5a 0308 	orrs.w	r3, sl, r8
   8653c:	d11a      	bne.n	86574 <_dtoa_r+0x1e4>
   8653e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86540:	2b00      	cmp	r3, #0
   86542:	f000 8668 	beq.w	87216 <_dtoa_r+0xe86>
   86546:	4b1a      	ldr	r3, [pc, #104]	; (865b0 <_dtoa_r+0x220>)
   86548:	9303      	str	r3, [sp, #12]
   8654a:	3308      	adds	r3, #8
   8654c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8654e:	9803      	ldr	r0, [sp, #12]
   86550:	6013      	str	r3, [r2, #0]
   86552:	b019      	add	sp, #100	; 0x64
   86554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86558:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
   8655c:	f3c2 0313 	ubfx	r3, r2, #0, #20
   86560:	4608      	mov	r0, r1
   86562:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   86566:	970f      	str	r7, [sp, #60]	; 0x3c
   86568:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   8656c:	9f16      	ldr	r7, [sp, #88]	; 0x58
   8656e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86572:	e773      	b.n	8645c <_dtoa_r+0xcc>
   86574:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86576:	2b00      	cmp	r3, #0
   86578:	f040 83ef 	bne.w	86d5a <_dtoa_r+0x9ca>
   8657c:	4b0d      	ldr	r3, [pc, #52]	; (865b4 <_dtoa_r+0x224>)
   8657e:	9303      	str	r3, [sp, #12]
   86580:	e741      	b.n	86406 <_dtoa_r+0x76>
   86582:	bf00      	nop
   86584:	f3af 8000 	nop.w
   86588:	636f4361 	.word	0x636f4361
   8658c:	3fd287a7 	.word	0x3fd287a7
   86590:	8b60c8b3 	.word	0x8b60c8b3
   86594:	3fc68a28 	.word	0x3fc68a28
   86598:	509f79fb 	.word	0x509f79fb
   8659c:	3fd34413 	.word	0x3fd34413
   865a0:	7ff00000 	.word	0x7ff00000
   865a4:	0008a3c9 	.word	0x0008a3c9
   865a8:	3ff80000 	.word	0x3ff80000
   865ac:	0008a568 	.word	0x0008a568
   865b0:	0008a410 	.word	0x0008a410
   865b4:	0008a40c 	.word	0x0008a40c
   865b8:	1bbe      	subs	r6, r7, r6
   865ba:	1e73      	subs	r3, r6, #1
   865bc:	9306      	str	r3, [sp, #24]
   865be:	f100 848a 	bmi.w	86ed6 <_dtoa_r+0xb46>
   865c2:	900e      	str	r0, [sp, #56]	; 0x38
   865c4:	9009      	str	r0, [sp, #36]	; 0x24
   865c6:	9b06      	ldr	r3, [sp, #24]
   865c8:	445b      	add	r3, fp
   865ca:	e9cd 3b06 	strd	r3, fp, [sp, #24]
   865ce:	2300      	movs	r3, #0
   865d0:	930d      	str	r3, [sp, #52]	; 0x34
   865d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
   865d4:	2b09      	cmp	r3, #9
   865d6:	d998      	bls.n	8650a <_dtoa_r+0x17a>
   865d8:	2300      	movs	r3, #0
   865da:	9322      	str	r3, [sp, #136]	; 0x88
   865dc:	f04f 33ff 	mov.w	r3, #4294967295
   865e0:	2601      	movs	r6, #1
   865e2:	9308      	str	r3, [sp, #32]
   865e4:	2300      	movs	r3, #0
   865e6:	960c      	str	r6, [sp, #48]	; 0x30
   865e8:	9323      	str	r3, [sp, #140]	; 0x8c
   865ea:	2100      	movs	r1, #0
   865ec:	9b08      	ldr	r3, [sp, #32]
   865ee:	6461      	str	r1, [r4, #68]	; 0x44
   865f0:	9312      	str	r3, [sp, #72]	; 0x48
   865f2:	4620      	mov	r0, r4
   865f4:	f001 ff5c 	bl	884b0 <_Balloc>
   865f8:	9003      	str	r0, [sp, #12]
   865fa:	2800      	cmp	r0, #0
   865fc:	f000 8604 	beq.w	87208 <_dtoa_r+0xe78>
   86600:	9b03      	ldr	r3, [sp, #12]
   86602:	6423      	str	r3, [r4, #64]	; 0x40
   86604:	9b08      	ldr	r3, [sp, #32]
   86606:	2b0e      	cmp	r3, #14
   86608:	f200 8114 	bhi.w	86834 <_dtoa_r+0x4a4>
   8660c:	2e00      	cmp	r6, #0
   8660e:	f000 8111 	beq.w	86834 <_dtoa_r+0x4a4>
   86612:	9907      	ldr	r1, [sp, #28]
   86614:	2900      	cmp	r1, #0
   86616:	f340 8460 	ble.w	86eda <_dtoa_r+0xb4a>
   8661a:	4baf      	ldr	r3, [pc, #700]	; (868d8 <_dtoa_r+0x548>)
   8661c:	f001 020f 	and.w	r2, r1, #15
   86620:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86624:	460a      	mov	r2, r1
   86626:	e9d3 6700 	ldrd	r6, r7, [r3]
   8662a:	ea4f 1821 	mov.w	r8, r1, asr #4
   8662e:	05d1      	lsls	r1, r2, #23
   86630:	f140 8417 	bpl.w	86e62 <_dtoa_r+0xad2>
   86634:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86638:	4ba8      	ldr	r3, [pc, #672]	; (868dc <_dtoa_r+0x54c>)
   8663a:	f04f 0a03 	mov.w	sl, #3
   8663e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   86642:	f003 fb27 	bl	89c94 <__aeabi_ddiv>
   86646:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8664a:	f008 080f 	and.w	r8, r8, #15
   8664e:	f1b8 0f00 	cmp.w	r8, #0
   86652:	d013      	beq.n	8667c <_dtoa_r+0x2ec>
   86654:	f8df 9284 	ldr.w	r9, [pc, #644]	; 868dc <_dtoa_r+0x54c>
   86658:	f018 0f01 	tst.w	r8, #1
   8665c:	d009      	beq.n	86672 <_dtoa_r+0x2e2>
   8665e:	e9d9 2300 	ldrd	r2, r3, [r9]
   86662:	4630      	mov	r0, r6
   86664:	4639      	mov	r1, r7
   86666:	f003 f9eb 	bl	89a40 <__aeabi_dmul>
   8666a:	4606      	mov	r6, r0
   8666c:	460f      	mov	r7, r1
   8666e:	f10a 0a01 	add.w	sl, sl, #1
   86672:	ea5f 0868 	movs.w	r8, r8, asr #1
   86676:	f109 0908 	add.w	r9, r9, #8
   8667a:	d1ed      	bne.n	86658 <_dtoa_r+0x2c8>
   8667c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86680:	4632      	mov	r2, r6
   86682:	463b      	mov	r3, r7
   86684:	f003 fb06 	bl	89c94 <__aeabi_ddiv>
   86688:	4680      	mov	r8, r0
   8668a:	4689      	mov	r9, r1
   8668c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8668e:	b143      	cbz	r3, 866a2 <_dtoa_r+0x312>
   86690:	2200      	movs	r2, #0
   86692:	4640      	mov	r0, r8
   86694:	4649      	mov	r1, r9
   86696:	4b92      	ldr	r3, [pc, #584]	; (868e0 <_dtoa_r+0x550>)
   86698:	f003 fc44 	bl	89f24 <__aeabi_dcmplt>
   8669c:	2800      	cmp	r0, #0
   8669e:	f040 8535 	bne.w	8710c <_dtoa_r+0xd7c>
   866a2:	4650      	mov	r0, sl
   866a4:	f003 f962 	bl	8996c <__aeabi_i2d>
   866a8:	4642      	mov	r2, r8
   866aa:	464b      	mov	r3, r9
   866ac:	f003 f9c8 	bl	89a40 <__aeabi_dmul>
   866b0:	4b8c      	ldr	r3, [pc, #560]	; (868e4 <_dtoa_r+0x554>)
   866b2:	2200      	movs	r2, #0
   866b4:	f003 f80e 	bl	896d4 <__adddf3>
   866b8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   866bc:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   866c0:	9311      	str	r3, [sp, #68]	; 0x44
   866c2:	9b08      	ldr	r3, [sp, #32]
   866c4:	2b00      	cmp	r3, #0
   866c6:	f000 8097 	beq.w	867f8 <_dtoa_r+0x468>
   866ca:	9b07      	ldr	r3, [sp, #28]
   866cc:	9314      	str	r3, [sp, #80]	; 0x50
   866ce:	9b08      	ldr	r3, [sp, #32]
   866d0:	9313      	str	r3, [sp, #76]	; 0x4c
   866d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   866d4:	2b00      	cmp	r3, #0
   866d6:	f000 84a9 	beq.w	8702c <_dtoa_r+0xc9c>
   866da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   866dc:	4b7e      	ldr	r3, [pc, #504]	; (868d8 <_dtoa_r+0x548>)
   866de:	2000      	movs	r0, #0
   866e0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   866e4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   866e8:	497f      	ldr	r1, [pc, #508]	; (868e8 <_dtoa_r+0x558>)
   866ea:	f003 fad3 	bl	89c94 <__aeabi_ddiv>
   866ee:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   866f2:	f002 ffed 	bl	896d0 <__aeabi_dsub>
   866f6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   866fa:	4649      	mov	r1, r9
   866fc:	4640      	mov	r0, r8
   866fe:	f003 fc4f 	bl	89fa0 <__aeabi_d2iz>
   86702:	4607      	mov	r7, r0
   86704:	f003 f932 	bl	8996c <__aeabi_i2d>
   86708:	4602      	mov	r2, r0
   8670a:	460b      	mov	r3, r1
   8670c:	4640      	mov	r0, r8
   8670e:	4649      	mov	r1, r9
   86710:	f002 ffde 	bl	896d0 <__aeabi_dsub>
   86714:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86718:	9e03      	ldr	r6, [sp, #12]
   8671a:	3730      	adds	r7, #48	; 0x30
   8671c:	f806 7b01 	strb.w	r7, [r6], #1
   86720:	4680      	mov	r8, r0
   86722:	4689      	mov	r9, r1
   86724:	f003 fbfe 	bl	89f24 <__aeabi_dcmplt>
   86728:	2800      	cmp	r0, #0
   8672a:	f040 852e 	bne.w	8718a <_dtoa_r+0xdfa>
   8672e:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
   86732:	2700      	movs	r7, #0
   86734:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   86738:	9510      	str	r5, [sp, #64]	; 0x40
   8673a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   8673c:	9413      	str	r4, [sp, #76]	; 0x4c
   8673e:	e02a      	b.n	86796 <_dtoa_r+0x406>
   86740:	3701      	adds	r7, #1
   86742:	42af      	cmp	r7, r5
   86744:	f280 852e 	bge.w	871a4 <_dtoa_r+0xe14>
   86748:	4650      	mov	r0, sl
   8674a:	4659      	mov	r1, fp
   8674c:	2200      	movs	r2, #0
   8674e:	4b67      	ldr	r3, [pc, #412]	; (868ec <_dtoa_r+0x55c>)
   86750:	f003 f976 	bl	89a40 <__aeabi_dmul>
   86754:	2200      	movs	r2, #0
   86756:	4b65      	ldr	r3, [pc, #404]	; (868ec <_dtoa_r+0x55c>)
   86758:	4682      	mov	sl, r0
   8675a:	468b      	mov	fp, r1
   8675c:	4640      	mov	r0, r8
   8675e:	4649      	mov	r1, r9
   86760:	f003 f96e 	bl	89a40 <__aeabi_dmul>
   86764:	4689      	mov	r9, r1
   86766:	4680      	mov	r8, r0
   86768:	f003 fc1a 	bl	89fa0 <__aeabi_d2iz>
   8676c:	4604      	mov	r4, r0
   8676e:	f003 f8fd 	bl	8996c <__aeabi_i2d>
   86772:	4602      	mov	r2, r0
   86774:	460b      	mov	r3, r1
   86776:	4640      	mov	r0, r8
   86778:	4649      	mov	r1, r9
   8677a:	f002 ffa9 	bl	896d0 <__aeabi_dsub>
   8677e:	3430      	adds	r4, #48	; 0x30
   86780:	4652      	mov	r2, sl
   86782:	465b      	mov	r3, fp
   86784:	f806 4b01 	strb.w	r4, [r6], #1
   86788:	4680      	mov	r8, r0
   8678a:	4689      	mov	r9, r1
   8678c:	f003 fbca 	bl	89f24 <__aeabi_dcmplt>
   86790:	2800      	cmp	r0, #0
   86792:	f040 84f8 	bne.w	87186 <_dtoa_r+0xdf6>
   86796:	4642      	mov	r2, r8
   86798:	464b      	mov	r3, r9
   8679a:	2000      	movs	r0, #0
   8679c:	4950      	ldr	r1, [pc, #320]	; (868e0 <_dtoa_r+0x550>)
   8679e:	f002 ff97 	bl	896d0 <__aeabi_dsub>
   867a2:	4652      	mov	r2, sl
   867a4:	465b      	mov	r3, fp
   867a6:	f003 fbbd 	bl	89f24 <__aeabi_dcmplt>
   867aa:	2800      	cmp	r0, #0
   867ac:	d0c8      	beq.n	86740 <_dtoa_r+0x3b0>
   867ae:	e9dd 4313 	ldrd	r4, r3, [sp, #76]	; 0x4c
   867b2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   867b4:	9a03      	ldr	r2, [sp, #12]
   867b6:	9307      	str	r3, [sp, #28]
   867b8:	e002      	b.n	867c0 <_dtoa_r+0x430>
   867ba:	4296      	cmp	r6, r2
   867bc:	f000 84cd 	beq.w	8715a <_dtoa_r+0xdca>
   867c0:	46b2      	mov	sl, r6
   867c2:	f816 3d01 	ldrb.w	r3, [r6, #-1]!
   867c6:	2b39      	cmp	r3, #57	; 0x39
   867c8:	d0f7      	beq.n	867ba <_dtoa_r+0x42a>
   867ca:	3301      	adds	r3, #1
   867cc:	b2db      	uxtb	r3, r3
   867ce:	7033      	strb	r3, [r6, #0]
   867d0:	9b07      	ldr	r3, [sp, #28]
   867d2:	3301      	adds	r3, #1
   867d4:	9307      	str	r3, [sp, #28]
   867d6:	e1c8      	b.n	86b6a <_dtoa_r+0x7da>
   867d8:	4650      	mov	r0, sl
   867da:	f003 f8c7 	bl	8996c <__aeabi_i2d>
   867de:	4642      	mov	r2, r8
   867e0:	464b      	mov	r3, r9
   867e2:	f003 f92d 	bl	89a40 <__aeabi_dmul>
   867e6:	4b3f      	ldr	r3, [pc, #252]	; (868e4 <_dtoa_r+0x554>)
   867e8:	2200      	movs	r2, #0
   867ea:	f002 ff73 	bl	896d4 <__adddf3>
   867ee:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   867f2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   867f6:	9311      	str	r3, [sp, #68]	; 0x44
   867f8:	4640      	mov	r0, r8
   867fa:	4649      	mov	r1, r9
   867fc:	2200      	movs	r2, #0
   867fe:	4b3c      	ldr	r3, [pc, #240]	; (868f0 <_dtoa_r+0x560>)
   86800:	f002 ff66 	bl	896d0 <__aeabi_dsub>
   86804:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
   86808:	464b      	mov	r3, r9
   8680a:	4642      	mov	r2, r8
   8680c:	4606      	mov	r6, r0
   8680e:	460f      	mov	r7, r1
   86810:	f003 fba6 	bl	89f60 <__aeabi_dcmpgt>
   86814:	4681      	mov	r9, r0
   86816:	2800      	cmp	r0, #0
   86818:	f040 84af 	bne.w	8717a <_dtoa_r+0xdea>
   8681c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86820:	4602      	mov	r2, r0
   86822:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   86826:	4630      	mov	r0, r6
   86828:	4639      	mov	r1, r7
   8682a:	f003 fb7b 	bl	89f24 <__aeabi_dcmplt>
   8682e:	2800      	cmp	r0, #0
   86830:	f040 8348 	bne.w	86ec4 <_dtoa_r+0xb34>
   86834:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86836:	2b00      	cmp	r3, #0
   86838:	f2c0 808c 	blt.w	86954 <_dtoa_r+0x5c4>
   8683c:	9a07      	ldr	r2, [sp, #28]
   8683e:	2a0e      	cmp	r2, #14
   86840:	f300 8088 	bgt.w	86954 <_dtoa_r+0x5c4>
   86844:	4b24      	ldr	r3, [pc, #144]	; (868d8 <_dtoa_r+0x548>)
   86846:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8684a:	e9d3 ab00 	ldrd	sl, fp, [r3]
   8684e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86850:	2b00      	cmp	r3, #0
   86852:	da1b      	bge.n	8688c <_dtoa_r+0x4fc>
   86854:	9b08      	ldr	r3, [sp, #32]
   86856:	2b00      	cmp	r3, #0
   86858:	dc18      	bgt.n	8688c <_dtoa_r+0x4fc>
   8685a:	f040 8331 	bne.w	86ec0 <_dtoa_r+0xb30>
   8685e:	2200      	movs	r2, #0
   86860:	4b23      	ldr	r3, [pc, #140]	; (868f0 <_dtoa_r+0x560>)
   86862:	4650      	mov	r0, sl
   86864:	4659      	mov	r1, fp
   86866:	f003 f8eb 	bl	89a40 <__aeabi_dmul>
   8686a:	4602      	mov	r2, r0
   8686c:	460b      	mov	r3, r1
   8686e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86872:	f003 fb61 	bl	89f38 <__aeabi_dcmple>
   86876:	f8dd 9020 	ldr.w	r9, [sp, #32]
   8687a:	464e      	mov	r6, r9
   8687c:	2800      	cmp	r0, #0
   8687e:	f000 82ca 	beq.w	86e16 <_dtoa_r+0xa86>
   86882:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86884:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86888:	43df      	mvns	r7, r3
   8688a:	e2cc      	b.n	86e26 <_dtoa_r+0xa96>
   8688c:	4652      	mov	r2, sl
   8688e:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
   86892:	465b      	mov	r3, fp
   86894:	4638      	mov	r0, r7
   86896:	4641      	mov	r1, r8
   86898:	f003 f9fc 	bl	89c94 <__aeabi_ddiv>
   8689c:	f003 fb80 	bl	89fa0 <__aeabi_d2iz>
   868a0:	4681      	mov	r9, r0
   868a2:	9009      	str	r0, [sp, #36]	; 0x24
   868a4:	f003 f862 	bl	8996c <__aeabi_i2d>
   868a8:	4652      	mov	r2, sl
   868aa:	465b      	mov	r3, fp
   868ac:	f003 f8c8 	bl	89a40 <__aeabi_dmul>
   868b0:	9e03      	ldr	r6, [sp, #12]
   868b2:	460b      	mov	r3, r1
   868b4:	4602      	mov	r2, r0
   868b6:	4641      	mov	r1, r8
   868b8:	4638      	mov	r0, r7
   868ba:	f002 ff09 	bl	896d0 <__aeabi_dsub>
   868be:	f109 0330 	add.w	r3, r9, #48	; 0x30
   868c2:	f806 3b01 	strb.w	r3, [r6], #1
   868c6:	9b08      	ldr	r3, [sp, #32]
   868c8:	2b01      	cmp	r3, #1
   868ca:	f000 835f 	beq.w	86f8c <_dtoa_r+0xbfc>
   868ce:	9406      	str	r4, [sp, #24]
   868d0:	2701      	movs	r7, #1
   868d2:	461c      	mov	r4, r3
   868d4:	9504      	str	r5, [sp, #16]
   868d6:	e02a      	b.n	8692e <_dtoa_r+0x59e>
   868d8:	0008a568 	.word	0x0008a568
   868dc:	0008a540 	.word	0x0008a540
   868e0:	3ff00000 	.word	0x3ff00000
   868e4:	401c0000 	.word	0x401c0000
   868e8:	3fe00000 	.word	0x3fe00000
   868ec:	40240000 	.word	0x40240000
   868f0:	40140000 	.word	0x40140000
   868f4:	4652      	mov	r2, sl
   868f6:	465b      	mov	r3, fp
   868f8:	4640      	mov	r0, r8
   868fa:	4649      	mov	r1, r9
   868fc:	f003 f9ca 	bl	89c94 <__aeabi_ddiv>
   86900:	f003 fb4e 	bl	89fa0 <__aeabi_d2iz>
   86904:	4605      	mov	r5, r0
   86906:	f003 f831 	bl	8996c <__aeabi_i2d>
   8690a:	4652      	mov	r2, sl
   8690c:	465b      	mov	r3, fp
   8690e:	f003 f897 	bl	89a40 <__aeabi_dmul>
   86912:	3701      	adds	r7, #1
   86914:	460b      	mov	r3, r1
   86916:	4602      	mov	r2, r0
   86918:	4649      	mov	r1, r9
   8691a:	4640      	mov	r0, r8
   8691c:	f002 fed8 	bl	896d0 <__aeabi_dsub>
   86920:	f105 0330 	add.w	r3, r5, #48	; 0x30
   86924:	42a7      	cmp	r7, r4
   86926:	f806 3b01 	strb.w	r3, [r6], #1
   8692a:	f000 832c 	beq.w	86f86 <_dtoa_r+0xbf6>
   8692e:	2200      	movs	r2, #0
   86930:	4bab      	ldr	r3, [pc, #684]	; (86be0 <_dtoa_r+0x850>)
   86932:	f003 f885 	bl	89a40 <__aeabi_dmul>
   86936:	2200      	movs	r2, #0
   86938:	2300      	movs	r3, #0
   8693a:	4680      	mov	r8, r0
   8693c:	4689      	mov	r9, r1
   8693e:	f003 fae7 	bl	89f10 <__aeabi_dcmpeq>
   86942:	2800      	cmp	r0, #0
   86944:	d0d6      	beq.n	868f4 <_dtoa_r+0x564>
   86946:	9d04      	ldr	r5, [sp, #16]
   86948:	9c06      	ldr	r4, [sp, #24]
   8694a:	9b07      	ldr	r3, [sp, #28]
   8694c:	46b2      	mov	sl, r6
   8694e:	3301      	adds	r3, #1
   86950:	9307      	str	r3, [sp, #28]
   86952:	e10a      	b.n	86b6a <_dtoa_r+0x7da>
   86954:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86956:	2a00      	cmp	r2, #0
   86958:	d03d      	beq.n	869d6 <_dtoa_r+0x646>
   8695a:	9a22      	ldr	r2, [sp, #136]	; 0x88
   8695c:	2a01      	cmp	r2, #1
   8695e:	f340 829f 	ble.w	86ea0 <_dtoa_r+0xb10>
   86962:	9b08      	ldr	r3, [sp, #32]
   86964:	f103 38ff 	add.w	r8, r3, #4294967295
   86968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8696a:	4543      	cmp	r3, r8
   8696c:	f2c0 8270 	blt.w	86e50 <_dtoa_r+0xac0>
   86970:	eba3 0808 	sub.w	r8, r3, r8
   86974:	9b08      	ldr	r3, [sp, #32]
   86976:	2b00      	cmp	r3, #0
   86978:	f2c0 8340 	blt.w	86ffc <_dtoa_r+0xc6c>
   8697c:	9a06      	ldr	r2, [sp, #24]
   8697e:	441a      	add	r2, r3
   86980:	9206      	str	r2, [sp, #24]
   86982:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86984:	4617      	mov	r7, r2
   86986:	441a      	add	r2, r3
   86988:	9209      	str	r2, [sp, #36]	; 0x24
   8698a:	2101      	movs	r1, #1
   8698c:	4620      	mov	r0, r4
   8698e:	f001 fe5d 	bl	8864c <__i2b>
   86992:	4606      	mov	r6, r0
   86994:	e023      	b.n	869de <_dtoa_r+0x64e>
   86996:	2301      	movs	r3, #1
   86998:	1bbe      	subs	r6, r7, r6
   8699a:	930e      	str	r3, [sp, #56]	; 0x38
   8699c:	1e73      	subs	r3, r6, #1
   8699e:	9306      	str	r3, [sp, #24]
   869a0:	f57f ada0 	bpl.w	864e4 <_dtoa_r+0x154>
   869a4:	f1c6 0301 	rsb	r3, r6, #1
   869a8:	9309      	str	r3, [sp, #36]	; 0x24
   869aa:	2300      	movs	r3, #0
   869ac:	9306      	str	r3, [sp, #24]
   869ae:	e59b      	b.n	864e8 <_dtoa_r+0x158>
   869b0:	4658      	mov	r0, fp
   869b2:	f002 ffdb 	bl	8996c <__aeabi_i2d>
   869b6:	4642      	mov	r2, r8
   869b8:	464b      	mov	r3, r9
   869ba:	f003 faa9 	bl	89f10 <__aeabi_dcmpeq>
   869be:	2800      	cmp	r0, #0
   869c0:	f47f ad78 	bne.w	864b4 <_dtoa_r+0x124>
   869c4:	f10b 3bff 	add.w	fp, fp, #4294967295
   869c8:	e574      	b.n	864b4 <_dtoa_r+0x124>
   869ca:	4b86      	ldr	r3, [pc, #536]	; (86be4 <_dtoa_r+0x854>)
   869cc:	9303      	str	r3, [sp, #12]
   869ce:	9803      	ldr	r0, [sp, #12]
   869d0:	b019      	add	sp, #100	; 0x64
   869d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   869d6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   869da:	9f09      	ldr	r7, [sp, #36]	; 0x24
   869dc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   869de:	2f00      	cmp	r7, #0
   869e0:	dd0c      	ble.n	869fc <_dtoa_r+0x66c>
   869e2:	9906      	ldr	r1, [sp, #24]
   869e4:	2900      	cmp	r1, #0
   869e6:	460b      	mov	r3, r1
   869e8:	dd08      	ble.n	869fc <_dtoa_r+0x66c>
   869ea:	42b9      	cmp	r1, r7
   869ec:	bfa8      	it	ge
   869ee:	463b      	movge	r3, r7
   869f0:	9a09      	ldr	r2, [sp, #36]	; 0x24
   869f2:	1aff      	subs	r7, r7, r3
   869f4:	1ad2      	subs	r2, r2, r3
   869f6:	1acb      	subs	r3, r1, r3
   869f8:	9209      	str	r2, [sp, #36]	; 0x24
   869fa:	9306      	str	r3, [sp, #24]
   869fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   869fe:	b1e3      	cbz	r3, 86a3a <_dtoa_r+0x6aa>
   86a00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86a02:	2b00      	cmp	r3, #0
   86a04:	f000 8260 	beq.w	86ec8 <_dtoa_r+0xb38>
   86a08:	f1b8 0f00 	cmp.w	r8, #0
   86a0c:	dd10      	ble.n	86a30 <_dtoa_r+0x6a0>
   86a0e:	4631      	mov	r1, r6
   86a10:	4642      	mov	r2, r8
   86a12:	4620      	mov	r0, r4
   86a14:	f001 fef6 	bl	88804 <__pow5mult>
   86a18:	4606      	mov	r6, r0
   86a1a:	462a      	mov	r2, r5
   86a1c:	4631      	mov	r1, r6
   86a1e:	4620      	mov	r0, r4
   86a20:	f001 fe42 	bl	886a8 <__multiply>
   86a24:	4603      	mov	r3, r0
   86a26:	4629      	mov	r1, r5
   86a28:	4620      	mov	r0, r4
   86a2a:	461d      	mov	r5, r3
   86a2c:	f001 fd66 	bl	884fc <_Bfree>
   86a30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86a32:	ebb3 0208 	subs.w	r2, r3, r8
   86a36:	f040 82db 	bne.w	86ff0 <_dtoa_r+0xc60>
   86a3a:	2101      	movs	r1, #1
   86a3c:	4620      	mov	r0, r4
   86a3e:	f001 fe05 	bl	8864c <__i2b>
   86a42:	f1bb 0f00 	cmp.w	fp, #0
   86a46:	4681      	mov	r9, r0
   86a48:	f300 80b3 	bgt.w	86bb2 <_dtoa_r+0x822>
   86a4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86a4e:	2b01      	cmp	r3, #1
   86a50:	f340 8188 	ble.w	86d64 <_dtoa_r+0x9d4>
   86a54:	f04f 0a00 	mov.w	sl, #0
   86a58:	2001      	movs	r0, #1
   86a5a:	f1bb 0f00 	cmp.w	fp, #0
   86a5e:	f040 80b4 	bne.w	86bca <_dtoa_r+0x83a>
   86a62:	9a06      	ldr	r2, [sp, #24]
   86a64:	4410      	add	r0, r2
   86a66:	f010 001f 	ands.w	r0, r0, #31
   86a6a:	f000 8092 	beq.w	86b92 <_dtoa_r+0x802>
   86a6e:	f1c0 0320 	rsb	r3, r0, #32
   86a72:	2b04      	cmp	r3, #4
   86a74:	f340 83d3 	ble.w	8721e <_dtoa_r+0xe8e>
   86a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86a7a:	f1c0 001c 	rsb	r0, r0, #28
   86a7e:	4403      	add	r3, r0
   86a80:	4402      	add	r2, r0
   86a82:	9309      	str	r3, [sp, #36]	; 0x24
   86a84:	4407      	add	r7, r0
   86a86:	9206      	str	r2, [sp, #24]
   86a88:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86a8a:	2b00      	cmp	r3, #0
   86a8c:	dd05      	ble.n	86a9a <_dtoa_r+0x70a>
   86a8e:	4629      	mov	r1, r5
   86a90:	461a      	mov	r2, r3
   86a92:	4620      	mov	r0, r4
   86a94:	f001 ff12 	bl	888bc <__lshift>
   86a98:	4605      	mov	r5, r0
   86a9a:	9b06      	ldr	r3, [sp, #24]
   86a9c:	2b00      	cmp	r3, #0
   86a9e:	dd05      	ble.n	86aac <_dtoa_r+0x71c>
   86aa0:	4649      	mov	r1, r9
   86aa2:	461a      	mov	r2, r3
   86aa4:	4620      	mov	r0, r4
   86aa6:	f001 ff09 	bl	888bc <__lshift>
   86aaa:	4681      	mov	r9, r0
   86aac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86aae:	2b00      	cmp	r3, #0
   86ab0:	f040 8138 	bne.w	86d24 <_dtoa_r+0x994>
   86ab4:	9b08      	ldr	r3, [sp, #32]
   86ab6:	2b00      	cmp	r3, #0
   86ab8:	f340 811e 	ble.w	86cf8 <_dtoa_r+0x968>
   86abc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86abe:	2b00      	cmp	r3, #0
   86ac0:	f040 809f 	bne.w	86c02 <_dtoa_r+0x872>
   86ac4:	9b07      	ldr	r3, [sp, #28]
   86ac6:	3301      	adds	r3, #1
   86ac8:	9307      	str	r3, [sp, #28]
   86aca:	2701      	movs	r7, #1
   86acc:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86ad0:	f8dd a020 	ldr.w	sl, [sp, #32]
   86ad4:	e007      	b.n	86ae6 <_dtoa_r+0x756>
   86ad6:	4629      	mov	r1, r5
   86ad8:	2300      	movs	r3, #0
   86ada:	220a      	movs	r2, #10
   86adc:	4620      	mov	r0, r4
   86ade:	f001 fd17 	bl	88510 <__multadd>
   86ae2:	4605      	mov	r5, r0
   86ae4:	3701      	adds	r7, #1
   86ae6:	4649      	mov	r1, r9
   86ae8:	4628      	mov	r0, r5
   86aea:	f7ff fbb9 	bl	86260 <quorem>
   86aee:	4557      	cmp	r7, sl
   86af0:	f100 0330 	add.w	r3, r0, #48	; 0x30
   86af4:	f808 3b01 	strb.w	r3, [r8], #1
   86af8:	dbed      	blt.n	86ad6 <_dtoa_r+0x746>
   86afa:	9a08      	ldr	r2, [sp, #32]
   86afc:	2700      	movs	r7, #0
   86afe:	2a00      	cmp	r2, #0
   86b00:	bfcc      	ite	gt
   86b02:	4693      	movgt	fp, r2
   86b04:	f04f 0b01 	movle.w	fp, #1
   86b08:	9a03      	ldr	r2, [sp, #12]
   86b0a:	4493      	add	fp, r2
   86b0c:	4629      	mov	r1, r5
   86b0e:	2201      	movs	r2, #1
   86b10:	4620      	mov	r0, r4
   86b12:	9304      	str	r3, [sp, #16]
   86b14:	f001 fed2 	bl	888bc <__lshift>
   86b18:	4649      	mov	r1, r9
   86b1a:	4605      	mov	r5, r0
   86b1c:	f001 ff44 	bl	889a8 <__mcmp>
   86b20:	2800      	cmp	r0, #0
   86b22:	f340 81ab 	ble.w	86e7c <_dtoa_r+0xaec>
   86b26:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
   86b2a:	9a03      	ldr	r2, [sp, #12]
   86b2c:	f10b 3bff 	add.w	fp, fp, #4294967295
   86b30:	e004      	b.n	86b3c <_dtoa_r+0x7ac>
   86b32:	455a      	cmp	r2, fp
   86b34:	f000 81ad 	beq.w	86e92 <_dtoa_r+0xb02>
   86b38:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   86b3c:	2b39      	cmp	r3, #57	; 0x39
   86b3e:	f10b 0a01 	add.w	sl, fp, #1
   86b42:	d0f6      	beq.n	86b32 <_dtoa_r+0x7a2>
   86b44:	3301      	adds	r3, #1
   86b46:	f88b 3000 	strb.w	r3, [fp]
   86b4a:	4649      	mov	r1, r9
   86b4c:	4620      	mov	r0, r4
   86b4e:	f001 fcd5 	bl	884fc <_Bfree>
   86b52:	b156      	cbz	r6, 86b6a <_dtoa_r+0x7da>
   86b54:	b12f      	cbz	r7, 86b62 <_dtoa_r+0x7d2>
   86b56:	42b7      	cmp	r7, r6
   86b58:	d003      	beq.n	86b62 <_dtoa_r+0x7d2>
   86b5a:	4639      	mov	r1, r7
   86b5c:	4620      	mov	r0, r4
   86b5e:	f001 fccd 	bl	884fc <_Bfree>
   86b62:	4631      	mov	r1, r6
   86b64:	4620      	mov	r0, r4
   86b66:	f001 fcc9 	bl	884fc <_Bfree>
   86b6a:	4629      	mov	r1, r5
   86b6c:	4620      	mov	r0, r4
   86b6e:	f001 fcc5 	bl	884fc <_Bfree>
   86b72:	2300      	movs	r3, #0
   86b74:	9a07      	ldr	r2, [sp, #28]
   86b76:	f88a 3000 	strb.w	r3, [sl]
   86b7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86b7c:	601a      	str	r2, [r3, #0]
   86b7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86b80:	2b00      	cmp	r3, #0
   86b82:	f43f ac40 	beq.w	86406 <_dtoa_r+0x76>
   86b86:	9803      	ldr	r0, [sp, #12]
   86b88:	f8c3 a000 	str.w	sl, [r3]
   86b8c:	b019      	add	sp, #100	; 0x64
   86b8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86b92:	201c      	movs	r0, #28
   86b94:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86b96:	4407      	add	r7, r0
   86b98:	4403      	add	r3, r0
   86b9a:	9309      	str	r3, [sp, #36]	; 0x24
   86b9c:	9b06      	ldr	r3, [sp, #24]
   86b9e:	4403      	add	r3, r0
   86ba0:	9306      	str	r3, [sp, #24]
   86ba2:	e771      	b.n	86a88 <_dtoa_r+0x6f8>
   86ba4:	2601      	movs	r6, #1
   86ba6:	e4b6      	b.n	86516 <_dtoa_r+0x186>
   86ba8:	f1c0 0020 	rsb	r0, r0, #32
   86bac:	fa08 f000 	lsl.w	r0, r8, r0
   86bb0:	e44d      	b.n	8644e <_dtoa_r+0xbe>
   86bb2:	4601      	mov	r1, r0
   86bb4:	465a      	mov	r2, fp
   86bb6:	4620      	mov	r0, r4
   86bb8:	f001 fe24 	bl	88804 <__pow5mult>
   86bbc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86bbe:	4681      	mov	r9, r0
   86bc0:	2b01      	cmp	r3, #1
   86bc2:	f340 81b6 	ble.w	86f32 <_dtoa_r+0xba2>
   86bc6:	f04f 0a00 	mov.w	sl, #0
   86bca:	f8d9 3010 	ldr.w	r3, [r9, #16]
   86bce:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   86bd2:	6918      	ldr	r0, [r3, #16]
   86bd4:	f001 fcee 	bl	885b4 <__hi0bits>
   86bd8:	f1c0 0020 	rsb	r0, r0, #32
   86bdc:	e741      	b.n	86a62 <_dtoa_r+0x6d2>
   86bde:	bf00      	nop
   86be0:	40240000 	.word	0x40240000
   86be4:	0008a3c8 	.word	0x0008a3c8
   86be8:	4631      	mov	r1, r6
   86bea:	2300      	movs	r3, #0
   86bec:	220a      	movs	r2, #10
   86bee:	4620      	mov	r0, r4
   86bf0:	f001 fc8e 	bl	88510 <__multadd>
   86bf4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86bf6:	4606      	mov	r6, r0
   86bf8:	2b00      	cmp	r3, #0
   86bfa:	f340 82e9 	ble.w	871d0 <_dtoa_r+0xe40>
   86bfe:	e9cd 8307 	strd	r8, r3, [sp, #28]
   86c02:	2f00      	cmp	r7, #0
   86c04:	f300 811d 	bgt.w	86e42 <_dtoa_r+0xab2>
   86c08:	f1ba 0f00 	cmp.w	sl, #0
   86c0c:	f040 81d9 	bne.w	86fc2 <_dtoa_r+0xc32>
   86c10:	46b0      	mov	r8, r6
   86c12:	9b04      	ldr	r3, [sp, #16]
   86c14:	9908      	ldr	r1, [sp, #32]
   86c16:	f003 0201 	and.w	r2, r3, #1
   86c1a:	9b03      	ldr	r3, [sp, #12]
   86c1c:	920a      	str	r2, [sp, #40]	; 0x28
   86c1e:	461f      	mov	r7, r3
   86c20:	3b01      	subs	r3, #1
   86c22:	4419      	add	r1, r3
   86c24:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86c26:	9108      	str	r1, [sp, #32]
   86c28:	4313      	orrs	r3, r2
   86c2a:	9309      	str	r3, [sp, #36]	; 0x24
   86c2c:	4649      	mov	r1, r9
   86c2e:	4628      	mov	r0, r5
   86c30:	f7ff fb16 	bl	86260 <quorem>
   86c34:	4631      	mov	r1, r6
   86c36:	4683      	mov	fp, r0
   86c38:	4628      	mov	r0, r5
   86c3a:	f001 feb5 	bl	889a8 <__mcmp>
   86c3e:	4642      	mov	r2, r8
   86c40:	4649      	mov	r1, r9
   86c42:	4682      	mov	sl, r0
   86c44:	4620      	mov	r0, r4
   86c46:	f001 fecf 	bl	889e8 <__mdiff>
   86c4a:	68c2      	ldr	r2, [r0, #12]
   86c4c:	4601      	mov	r1, r0
   86c4e:	f10b 0330 	add.w	r3, fp, #48	; 0x30
   86c52:	2a00      	cmp	r2, #0
   86c54:	d143      	bne.n	86cde <_dtoa_r+0x94e>
   86c56:	9004      	str	r0, [sp, #16]
   86c58:	4628      	mov	r0, r5
   86c5a:	9306      	str	r3, [sp, #24]
   86c5c:	f001 fea4 	bl	889a8 <__mcmp>
   86c60:	4602      	mov	r2, r0
   86c62:	9904      	ldr	r1, [sp, #16]
   86c64:	4620      	mov	r0, r4
   86c66:	9204      	str	r2, [sp, #16]
   86c68:	f001 fc48 	bl	884fc <_Bfree>
   86c6c:	9a04      	ldr	r2, [sp, #16]
   86c6e:	9b06      	ldr	r3, [sp, #24]
   86c70:	b91a      	cbnz	r2, 86c7a <_dtoa_r+0x8ea>
   86c72:	9909      	ldr	r1, [sp, #36]	; 0x24
   86c74:	2900      	cmp	r1, #0
   86c76:	f000 829b 	beq.w	871b0 <_dtoa_r+0xe20>
   86c7a:	f1ba 0f00 	cmp.w	sl, #0
   86c7e:	f2c0 8164 	blt.w	86f4a <_dtoa_r+0xbba>
   86c82:	9922      	ldr	r1, [sp, #136]	; 0x88
   86c84:	ea4a 0a01 	orr.w	sl, sl, r1
   86c88:	990a      	ldr	r1, [sp, #40]	; 0x28
   86c8a:	ea51 010a 	orrs.w	r1, r1, sl
   86c8e:	f000 815c 	beq.w	86f4a <_dtoa_r+0xbba>
   86c92:	2a00      	cmp	r2, #0
   86c94:	f300 81b6 	bgt.w	87004 <_dtoa_r+0xc74>
   86c98:	9a08      	ldr	r2, [sp, #32]
   86c9a:	f107 0a01 	add.w	sl, r7, #1
   86c9e:	4297      	cmp	r7, r2
   86ca0:	46d3      	mov	fp, sl
   86ca2:	703b      	strb	r3, [r7, #0]
   86ca4:	f000 81b4 	beq.w	87010 <_dtoa_r+0xc80>
   86ca8:	4629      	mov	r1, r5
   86caa:	2300      	movs	r3, #0
   86cac:	220a      	movs	r2, #10
   86cae:	4620      	mov	r0, r4
   86cb0:	f001 fc2e 	bl	88510 <__multadd>
   86cb4:	4546      	cmp	r6, r8
   86cb6:	4605      	mov	r5, r0
   86cb8:	4631      	mov	r1, r6
   86cba:	f04f 0300 	mov.w	r3, #0
   86cbe:	f04f 020a 	mov.w	r2, #10
   86cc2:	4620      	mov	r0, r4
   86cc4:	d012      	beq.n	86cec <_dtoa_r+0x95c>
   86cc6:	f001 fc23 	bl	88510 <__multadd>
   86cca:	4641      	mov	r1, r8
   86ccc:	4606      	mov	r6, r0
   86cce:	2300      	movs	r3, #0
   86cd0:	220a      	movs	r2, #10
   86cd2:	4620      	mov	r0, r4
   86cd4:	f001 fc1c 	bl	88510 <__multadd>
   86cd8:	4657      	mov	r7, sl
   86cda:	4680      	mov	r8, r0
   86cdc:	e7a6      	b.n	86c2c <_dtoa_r+0x89c>
   86cde:	4620      	mov	r0, r4
   86ce0:	9304      	str	r3, [sp, #16]
   86ce2:	f001 fc0b 	bl	884fc <_Bfree>
   86ce6:	2201      	movs	r2, #1
   86ce8:	9b04      	ldr	r3, [sp, #16]
   86cea:	e7c6      	b.n	86c7a <_dtoa_r+0x8ea>
   86cec:	f001 fc10 	bl	88510 <__multadd>
   86cf0:	4657      	mov	r7, sl
   86cf2:	4606      	mov	r6, r0
   86cf4:	4680      	mov	r8, r0
   86cf6:	e799      	b.n	86c2c <_dtoa_r+0x89c>
   86cf8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86cfa:	2b02      	cmp	r3, #2
   86cfc:	dc7a      	bgt.n	86df4 <_dtoa_r+0xa64>
   86cfe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86d00:	2b00      	cmp	r3, #0
   86d02:	f47f af7e 	bne.w	86c02 <_dtoa_r+0x872>
   86d06:	9b07      	ldr	r3, [sp, #28]
   86d08:	4649      	mov	r1, r9
   86d0a:	3301      	adds	r3, #1
   86d0c:	4628      	mov	r0, r5
   86d0e:	9307      	str	r3, [sp, #28]
   86d10:	f7ff faa6 	bl	86260 <quorem>
   86d14:	f8dd b00c 	ldr.w	fp, [sp, #12]
   86d18:	f100 0330 	add.w	r3, r0, #48	; 0x30
   86d1c:	2700      	movs	r7, #0
   86d1e:	f80b 3b01 	strb.w	r3, [fp], #1
   86d22:	e6f3      	b.n	86b0c <_dtoa_r+0x77c>
   86d24:	4649      	mov	r1, r9
   86d26:	4628      	mov	r0, r5
   86d28:	f001 fe3e 	bl	889a8 <__mcmp>
   86d2c:	2800      	cmp	r0, #0
   86d2e:	f6bf aec1 	bge.w	86ab4 <_dtoa_r+0x724>
   86d32:	4629      	mov	r1, r5
   86d34:	2300      	movs	r3, #0
   86d36:	220a      	movs	r2, #10
   86d38:	4620      	mov	r0, r4
   86d3a:	f001 fbe9 	bl	88510 <__multadd>
   86d3e:	9b07      	ldr	r3, [sp, #28]
   86d40:	4605      	mov	r5, r0
   86d42:	f103 38ff 	add.w	r8, r3, #4294967295
   86d46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86d48:	2b00      	cmp	r3, #0
   86d4a:	f47f af4d 	bne.w	86be8 <_dtoa_r+0x858>
   86d4e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86d50:	2b00      	cmp	r3, #0
   86d52:	f340 8234 	ble.w	871be <_dtoa_r+0xe2e>
   86d56:	9308      	str	r3, [sp, #32]
   86d58:	e6b7      	b.n	86aca <_dtoa_r+0x73a>
   86d5a:	4bb0      	ldr	r3, [pc, #704]	; (8701c <_dtoa_r+0xc8c>)
   86d5c:	9303      	str	r3, [sp, #12]
   86d5e:	3303      	adds	r3, #3
   86d60:	f7ff bbf4 	b.w	8654c <_dtoa_r+0x1bc>
   86d64:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   86d68:	2900      	cmp	r1, #0
   86d6a:	f47f ae73 	bne.w	86a54 <_dtoa_r+0x6c4>
   86d6e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   86d72:	2b00      	cmp	r3, #0
   86d74:	f47f ae6e 	bne.w	86a54 <_dtoa_r+0x6c4>
   86d78:	4ba9      	ldr	r3, [pc, #676]	; (87020 <_dtoa_r+0xc90>)
   86d7a:	4013      	ands	r3, r2
   86d7c:	2b00      	cmp	r3, #0
   86d7e:	f000 8200 	beq.w	87182 <_dtoa_r+0xdf2>
   86d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86d84:	f04f 0a01 	mov.w	sl, #1
   86d88:	3301      	adds	r3, #1
   86d8a:	9309      	str	r3, [sp, #36]	; 0x24
   86d8c:	9b06      	ldr	r3, [sp, #24]
   86d8e:	3301      	adds	r3, #1
   86d90:	9306      	str	r3, [sp, #24]
   86d92:	e661      	b.n	86a58 <_dtoa_r+0x6c8>
   86d94:	2301      	movs	r3, #1
   86d96:	930c      	str	r3, [sp, #48]	; 0x30
   86d98:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86d9a:	9a07      	ldr	r2, [sp, #28]
   86d9c:	4413      	add	r3, r2
   86d9e:	9312      	str	r3, [sp, #72]	; 0x48
   86da0:	3301      	adds	r3, #1
   86da2:	2b01      	cmp	r3, #1
   86da4:	461f      	mov	r7, r3
   86da6:	bfb8      	it	lt
   86da8:	2701      	movlt	r7, #1
   86daa:	9308      	str	r3, [sp, #32]
   86dac:	2100      	movs	r1, #0
   86dae:	2f17      	cmp	r7, #23
   86db0:	6461      	str	r1, [r4, #68]	; 0x44
   86db2:	f77f ac1e 	ble.w	865f2 <_dtoa_r+0x262>
   86db6:	2201      	movs	r2, #1
   86db8:	2304      	movs	r3, #4
   86dba:	005b      	lsls	r3, r3, #1
   86dbc:	f103 0014 	add.w	r0, r3, #20
   86dc0:	42b8      	cmp	r0, r7
   86dc2:	4611      	mov	r1, r2
   86dc4:	f102 0201 	add.w	r2, r2, #1
   86dc8:	d9f7      	bls.n	86dba <_dtoa_r+0xa2a>
   86dca:	6461      	str	r1, [r4, #68]	; 0x44
   86dcc:	e411      	b.n	865f2 <_dtoa_r+0x262>
   86dce:	2301      	movs	r3, #1
   86dd0:	930c      	str	r3, [sp, #48]	; 0x30
   86dd2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86dd4:	2b00      	cmp	r3, #0
   86dd6:	dd4c      	ble.n	86e72 <_dtoa_r+0xae2>
   86dd8:	461f      	mov	r7, r3
   86dda:	9312      	str	r3, [sp, #72]	; 0x48
   86ddc:	9308      	str	r3, [sp, #32]
   86dde:	e7e5      	b.n	86dac <_dtoa_r+0xa1c>
   86de0:	2300      	movs	r3, #0
   86de2:	930c      	str	r3, [sp, #48]	; 0x30
   86de4:	e7d8      	b.n	86d98 <_dtoa_r+0xa08>
   86de6:	2300      	movs	r3, #0
   86de8:	930c      	str	r3, [sp, #48]	; 0x30
   86dea:	e7f2      	b.n	86dd2 <_dtoa_r+0xa42>
   86dec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86dee:	f8cd 801c 	str.w	r8, [sp, #28]
   86df2:	9308      	str	r3, [sp, #32]
   86df4:	9b08      	ldr	r3, [sp, #32]
   86df6:	2b00      	cmp	r3, #0
   86df8:	f47f ad43 	bne.w	86882 <_dtoa_r+0x4f2>
   86dfc:	4649      	mov	r1, r9
   86dfe:	2205      	movs	r2, #5
   86e00:	4620      	mov	r0, r4
   86e02:	f001 fb85 	bl	88510 <__multadd>
   86e06:	4681      	mov	r9, r0
   86e08:	4628      	mov	r0, r5
   86e0a:	4649      	mov	r1, r9
   86e0c:	f001 fdcc 	bl	889a8 <__mcmp>
   86e10:	2800      	cmp	r0, #0
   86e12:	f77f ad36 	ble.w	86882 <_dtoa_r+0x4f2>
   86e16:	2331      	movs	r3, #49	; 0x31
   86e18:	9803      	ldr	r0, [sp, #12]
   86e1a:	9f07      	ldr	r7, [sp, #28]
   86e1c:	4680      	mov	r8, r0
   86e1e:	f800 3b01 	strb.w	r3, [r0], #1
   86e22:	3701      	adds	r7, #1
   86e24:	9003      	str	r0, [sp, #12]
   86e26:	4649      	mov	r1, r9
   86e28:	4620      	mov	r0, r4
   86e2a:	f001 fb67 	bl	884fc <_Bfree>
   86e2e:	1c7b      	adds	r3, r7, #1
   86e30:	f8dd a00c 	ldr.w	sl, [sp, #12]
   86e34:	9307      	str	r3, [sp, #28]
   86e36:	f8cd 800c 	str.w	r8, [sp, #12]
   86e3a:	2e00      	cmp	r6, #0
   86e3c:	f47f ae91 	bne.w	86b62 <_dtoa_r+0x7d2>
   86e40:	e693      	b.n	86b6a <_dtoa_r+0x7da>
   86e42:	4631      	mov	r1, r6
   86e44:	463a      	mov	r2, r7
   86e46:	4620      	mov	r0, r4
   86e48:	f001 fd38 	bl	888bc <__lshift>
   86e4c:	4606      	mov	r6, r0
   86e4e:	e6db      	b.n	86c08 <_dtoa_r+0x878>
   86e50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86e52:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   86e56:	eba8 0303 	sub.w	r3, r8, r3
   86e5a:	449b      	add	fp, r3
   86e5c:	f04f 0800 	mov.w	r8, #0
   86e60:	e588      	b.n	86974 <_dtoa_r+0x5e4>
   86e62:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   86e66:	f04f 0a02 	mov.w	sl, #2
   86e6a:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   86e6e:	f7ff bbee 	b.w	8664e <_dtoa_r+0x2be>
   86e72:	2301      	movs	r3, #1
   86e74:	9323      	str	r3, [sp, #140]	; 0x8c
   86e76:	9308      	str	r3, [sp, #32]
   86e78:	f7ff bbb7 	b.w	865ea <_dtoa_r+0x25a>
   86e7c:	d103      	bne.n	86e86 <_dtoa_r+0xaf6>
   86e7e:	9b04      	ldr	r3, [sp, #16]
   86e80:	07d8      	lsls	r0, r3, #31
   86e82:	f53f ae50 	bmi.w	86b26 <_dtoa_r+0x796>
   86e86:	46da      	mov	sl, fp
   86e88:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   86e8c:	2b30      	cmp	r3, #48	; 0x30
   86e8e:	d0fa      	beq.n	86e86 <_dtoa_r+0xaf6>
   86e90:	e65b      	b.n	86b4a <_dtoa_r+0x7ba>
   86e92:	9b07      	ldr	r3, [sp, #28]
   86e94:	9a03      	ldr	r2, [sp, #12]
   86e96:	3301      	adds	r3, #1
   86e98:	9307      	str	r3, [sp, #28]
   86e9a:	2331      	movs	r3, #49	; 0x31
   86e9c:	7013      	strb	r3, [r2, #0]
   86e9e:	e654      	b.n	86b4a <_dtoa_r+0x7ba>
   86ea0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   86ea2:	2a00      	cmp	r2, #0
   86ea4:	f000 8128 	beq.w	870f8 <_dtoa_r+0xd68>
   86ea8:	f203 4333 	addw	r3, r3, #1075	; 0x433
   86eac:	9a06      	ldr	r2, [sp, #24]
   86eae:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   86eb2:	441a      	add	r2, r3
   86eb4:	9206      	str	r2, [sp, #24]
   86eb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86eb8:	4617      	mov	r7, r2
   86eba:	441a      	add	r2, r3
   86ebc:	9209      	str	r2, [sp, #36]	; 0x24
   86ebe:	e564      	b.n	8698a <_dtoa_r+0x5fa>
   86ec0:	f04f 0900 	mov.w	r9, #0
   86ec4:	464e      	mov	r6, r9
   86ec6:	e4dc      	b.n	86882 <_dtoa_r+0x4f2>
   86ec8:	4629      	mov	r1, r5
   86eca:	4620      	mov	r0, r4
   86ecc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   86ece:	f001 fc99 	bl	88804 <__pow5mult>
   86ed2:	4605      	mov	r5, r0
   86ed4:	e5b1      	b.n	86a3a <_dtoa_r+0x6aa>
   86ed6:	900e      	str	r0, [sp, #56]	; 0x38
   86ed8:	e564      	b.n	869a4 <_dtoa_r+0x614>
   86eda:	f000 8111 	beq.w	87100 <_dtoa_r+0xd70>
   86ede:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86ee2:	9a07      	ldr	r2, [sp, #28]
   86ee4:	4b4f      	ldr	r3, [pc, #316]	; (87024 <_dtoa_r+0xc94>)
   86ee6:	4256      	negs	r6, r2
   86ee8:	f006 020f 	and.w	r2, r6, #15
   86eec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86ef0:	e9d3 2300 	ldrd	r2, r3, [r3]
   86ef4:	f002 fda4 	bl	89a40 <__aeabi_dmul>
   86ef8:	1136      	asrs	r6, r6, #4
   86efa:	4680      	mov	r8, r0
   86efc:	4689      	mov	r9, r1
   86efe:	f000 8170 	beq.w	871e2 <_dtoa_r+0xe52>
   86f02:	2300      	movs	r3, #0
   86f04:	f04f 0a02 	mov.w	sl, #2
   86f08:	4f47      	ldr	r7, [pc, #284]	; (87028 <_dtoa_r+0xc98>)
   86f0a:	07f2      	lsls	r2, r6, #31
   86f0c:	d506      	bpl.n	86f1c <_dtoa_r+0xb8c>
   86f0e:	e9d7 2300 	ldrd	r2, r3, [r7]
   86f12:	f002 fd95 	bl	89a40 <__aeabi_dmul>
   86f16:	2301      	movs	r3, #1
   86f18:	f10a 0a01 	add.w	sl, sl, #1
   86f1c:	1076      	asrs	r6, r6, #1
   86f1e:	f107 0708 	add.w	r7, r7, #8
   86f22:	d1f2      	bne.n	86f0a <_dtoa_r+0xb7a>
   86f24:	2b00      	cmp	r3, #0
   86f26:	f43f abb1 	beq.w	8668c <_dtoa_r+0x2fc>
   86f2a:	4680      	mov	r8, r0
   86f2c:	4689      	mov	r9, r1
   86f2e:	f7ff bbad 	b.w	8668c <_dtoa_r+0x2fc>
   86f32:	9b04      	ldr	r3, [sp, #16]
   86f34:	2b00      	cmp	r3, #0
   86f36:	f47f ae46 	bne.w	86bc6 <_dtoa_r+0x836>
   86f3a:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   86f3e:	f3c2 0313 	ubfx	r3, r2, #0, #20
   86f42:	2b00      	cmp	r3, #0
   86f44:	f43f af18 	beq.w	86d78 <_dtoa_r+0x9e8>
   86f48:	e63d      	b.n	86bc6 <_dtoa_r+0x836>
   86f4a:	2a00      	cmp	r2, #0
   86f4c:	dd12      	ble.n	86f74 <_dtoa_r+0xbe4>
   86f4e:	4629      	mov	r1, r5
   86f50:	2201      	movs	r2, #1
   86f52:	4620      	mov	r0, r4
   86f54:	9304      	str	r3, [sp, #16]
   86f56:	f001 fcb1 	bl	888bc <__lshift>
   86f5a:	4649      	mov	r1, r9
   86f5c:	4605      	mov	r5, r0
   86f5e:	f001 fd23 	bl	889a8 <__mcmp>
   86f62:	2800      	cmp	r0, #0
   86f64:	9b04      	ldr	r3, [sp, #16]
   86f66:	f340 8117 	ble.w	87198 <_dtoa_r+0xe08>
   86f6a:	2b39      	cmp	r3, #57	; 0x39
   86f6c:	f000 80fb 	beq.w	87166 <_dtoa_r+0xdd6>
   86f70:	f10b 0331 	add.w	r3, fp, #49	; 0x31
   86f74:	46ba      	mov	sl, r7
   86f76:	9a07      	ldr	r2, [sp, #28]
   86f78:	4637      	mov	r7, r6
   86f7a:	3201      	adds	r2, #1
   86f7c:	4646      	mov	r6, r8
   86f7e:	9207      	str	r2, [sp, #28]
   86f80:	f80a 3b01 	strb.w	r3, [sl], #1
   86f84:	e5e1      	b.n	86b4a <_dtoa_r+0x7ba>
   86f86:	9509      	str	r5, [sp, #36]	; 0x24
   86f88:	9c06      	ldr	r4, [sp, #24]
   86f8a:	9d04      	ldr	r5, [sp, #16]
   86f8c:	4602      	mov	r2, r0
   86f8e:	460b      	mov	r3, r1
   86f90:	f002 fba0 	bl	896d4 <__adddf3>
   86f94:	4652      	mov	r2, sl
   86f96:	465b      	mov	r3, fp
   86f98:	4680      	mov	r8, r0
   86f9a:	4689      	mov	r9, r1
   86f9c:	f002 ffe0 	bl	89f60 <__aeabi_dcmpgt>
   86fa0:	b960      	cbnz	r0, 86fbc <_dtoa_r+0xc2c>
   86fa2:	4652      	mov	r2, sl
   86fa4:	465b      	mov	r3, fp
   86fa6:	4640      	mov	r0, r8
   86fa8:	4649      	mov	r1, r9
   86faa:	f002 ffb1 	bl	89f10 <__aeabi_dcmpeq>
   86fae:	2800      	cmp	r0, #0
   86fb0:	f43f accb 	beq.w	8694a <_dtoa_r+0x5ba>
   86fb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86fb6:	07d9      	lsls	r1, r3, #31
   86fb8:	f57f acc7 	bpl.w	8694a <_dtoa_r+0x5ba>
   86fbc:	9a03      	ldr	r2, [sp, #12]
   86fbe:	f7ff bbff 	b.w	867c0 <_dtoa_r+0x430>
   86fc2:	4620      	mov	r0, r4
   86fc4:	6871      	ldr	r1, [r6, #4]
   86fc6:	f001 fa73 	bl	884b0 <_Balloc>
   86fca:	4607      	mov	r7, r0
   86fcc:	2800      	cmp	r0, #0
   86fce:	f000 810c 	beq.w	871ea <_dtoa_r+0xe5a>
   86fd2:	6933      	ldr	r3, [r6, #16]
   86fd4:	f106 010c 	add.w	r1, r6, #12
   86fd8:	3302      	adds	r3, #2
   86fda:	009a      	lsls	r2, r3, #2
   86fdc:	300c      	adds	r0, #12
   86fde:	f7fc f9fd 	bl	833dc <memcpy>
   86fe2:	4639      	mov	r1, r7
   86fe4:	2201      	movs	r2, #1
   86fe6:	4620      	mov	r0, r4
   86fe8:	f001 fc68 	bl	888bc <__lshift>
   86fec:	4680      	mov	r8, r0
   86fee:	e610      	b.n	86c12 <_dtoa_r+0x882>
   86ff0:	4629      	mov	r1, r5
   86ff2:	4620      	mov	r0, r4
   86ff4:	f001 fc06 	bl	88804 <__pow5mult>
   86ff8:	4605      	mov	r5, r0
   86ffa:	e51e      	b.n	86a3a <_dtoa_r+0x6aa>
   86ffc:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   87000:	1a9f      	subs	r7, r3, r2
   87002:	e4c2      	b.n	8698a <_dtoa_r+0x5fa>
   87004:	2b39      	cmp	r3, #57	; 0x39
   87006:	f000 80ae 	beq.w	87166 <_dtoa_r+0xdd6>
   8700a:	46ba      	mov	sl, r7
   8700c:	3301      	adds	r3, #1
   8700e:	e7b2      	b.n	86f76 <_dtoa_r+0xbe6>
   87010:	9a07      	ldr	r2, [sp, #28]
   87012:	4637      	mov	r7, r6
   87014:	3201      	adds	r2, #1
   87016:	4646      	mov	r6, r8
   87018:	9207      	str	r2, [sp, #28]
   8701a:	e577      	b.n	86b0c <_dtoa_r+0x77c>
   8701c:	0008a40c 	.word	0x0008a40c
   87020:	7ff00000 	.word	0x7ff00000
   87024:	0008a568 	.word	0x0008a568
   87028:	0008a540 	.word	0x0008a540
   8702c:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   87030:	4983      	ldr	r1, [pc, #524]	; (87240 <_dtoa_r+0xeb0>)
   87032:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   87036:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
   8703a:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   8703e:	f002 fcff 	bl	89a40 <__aeabi_dmul>
   87042:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   87046:	4649      	mov	r1, r9
   87048:	4640      	mov	r0, r8
   8704a:	f002 ffa9 	bl	89fa0 <__aeabi_d2iz>
   8704e:	4606      	mov	r6, r0
   87050:	f002 fc8c 	bl	8996c <__aeabi_i2d>
   87054:	460b      	mov	r3, r1
   87056:	4602      	mov	r2, r0
   87058:	4649      	mov	r1, r9
   8705a:	4640      	mov	r0, r8
   8705c:	f002 fb38 	bl	896d0 <__aeabi_dsub>
   87060:	4653      	mov	r3, sl
   87062:	9f03      	ldr	r7, [sp, #12]
   87064:	3630      	adds	r6, #48	; 0x30
   87066:	2b01      	cmp	r3, #1
   87068:	4680      	mov	r8, r0
   8706a:	4689      	mov	r9, r1
   8706c:	f807 6b01 	strb.w	r6, [r7], #1
   87070:	f000 80ac 	beq.w	871cc <_dtoa_r+0xe3c>
   87074:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   87076:	9b03      	ldr	r3, [sp, #12]
   87078:	441e      	add	r6, r3
   8707a:	2200      	movs	r2, #0
   8707c:	4b71      	ldr	r3, [pc, #452]	; (87244 <_dtoa_r+0xeb4>)
   8707e:	4640      	mov	r0, r8
   87080:	4649      	mov	r1, r9
   87082:	f002 fcdd 	bl	89a40 <__aeabi_dmul>
   87086:	4689      	mov	r9, r1
   87088:	4680      	mov	r8, r0
   8708a:	f002 ff89 	bl	89fa0 <__aeabi_d2iz>
   8708e:	4682      	mov	sl, r0
   87090:	f002 fc6c 	bl	8996c <__aeabi_i2d>
   87094:	4602      	mov	r2, r0
   87096:	460b      	mov	r3, r1
   87098:	4640      	mov	r0, r8
   8709a:	4649      	mov	r1, r9
   8709c:	f002 fb18 	bl	896d0 <__aeabi_dsub>
   870a0:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
   870a4:	f807 ab01 	strb.w	sl, [r7], #1
   870a8:	42b7      	cmp	r7, r6
   870aa:	4680      	mov	r8, r0
   870ac:	4689      	mov	r9, r1
   870ae:	d1e4      	bne.n	8707a <_dtoa_r+0xcea>
   870b0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   870b4:	2200      	movs	r2, #0
   870b6:	4b64      	ldr	r3, [pc, #400]	; (87248 <_dtoa_r+0xeb8>)
   870b8:	f002 fb0c 	bl	896d4 <__adddf3>
   870bc:	4642      	mov	r2, r8
   870be:	464b      	mov	r3, r9
   870c0:	f002 ff30 	bl	89f24 <__aeabi_dcmplt>
   870c4:	2800      	cmp	r0, #0
   870c6:	d162      	bne.n	8718e <_dtoa_r+0xdfe>
   870c8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   870cc:	2000      	movs	r0, #0
   870ce:	495e      	ldr	r1, [pc, #376]	; (87248 <_dtoa_r+0xeb8>)
   870d0:	f002 fafe 	bl	896d0 <__aeabi_dsub>
   870d4:	4642      	mov	r2, r8
   870d6:	464b      	mov	r3, r9
   870d8:	f002 ff42 	bl	89f60 <__aeabi_dcmpgt>
   870dc:	2800      	cmp	r0, #0
   870de:	f43f aba9 	beq.w	86834 <_dtoa_r+0x4a4>
   870e2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   870e6:	46b2      	mov	sl, r6
   870e8:	2b30      	cmp	r3, #48	; 0x30
   870ea:	f106 36ff 	add.w	r6, r6, #4294967295
   870ee:	d0f8      	beq.n	870e2 <_dtoa_r+0xd52>
   870f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   870f2:	3301      	adds	r3, #1
   870f4:	9307      	str	r3, [sp, #28]
   870f6:	e538      	b.n	86b6a <_dtoa_r+0x7da>
   870f8:	9b16      	ldr	r3, [sp, #88]	; 0x58
   870fa:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   870fe:	e6d5      	b.n	86eac <_dtoa_r+0xb1c>
   87100:	f04f 0a02 	mov.w	sl, #2
   87104:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
   87108:	f7ff bac0 	b.w	8668c <_dtoa_r+0x2fc>
   8710c:	9b08      	ldr	r3, [sp, #32]
   8710e:	2b00      	cmp	r3, #0
   87110:	f43f ab62 	beq.w	867d8 <_dtoa_r+0x448>
   87114:	9b12      	ldr	r3, [sp, #72]	; 0x48
   87116:	2b00      	cmp	r3, #0
   87118:	f77f ab8c 	ble.w	86834 <_dtoa_r+0x4a4>
   8711c:	9313      	str	r3, [sp, #76]	; 0x4c
   8711e:	9b07      	ldr	r3, [sp, #28]
   87120:	2200      	movs	r2, #0
   87122:	3b01      	subs	r3, #1
   87124:	4640      	mov	r0, r8
   87126:	4649      	mov	r1, r9
   87128:	9314      	str	r3, [sp, #80]	; 0x50
   8712a:	4b46      	ldr	r3, [pc, #280]	; (87244 <_dtoa_r+0xeb4>)
   8712c:	f002 fc88 	bl	89a40 <__aeabi_dmul>
   87130:	4680      	mov	r8, r0
   87132:	4689      	mov	r9, r1
   87134:	f10a 0001 	add.w	r0, sl, #1
   87138:	f002 fc18 	bl	8996c <__aeabi_i2d>
   8713c:	4642      	mov	r2, r8
   8713e:	464b      	mov	r3, r9
   87140:	f002 fc7e 	bl	89a40 <__aeabi_dmul>
   87144:	4b41      	ldr	r3, [pc, #260]	; (8724c <_dtoa_r+0xebc>)
   87146:	2200      	movs	r2, #0
   87148:	f002 fac4 	bl	896d4 <__adddf3>
   8714c:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   87150:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   87154:	9311      	str	r3, [sp, #68]	; 0x44
   87156:	f7ff babc 	b.w	866d2 <_dtoa_r+0x342>
   8715a:	9b07      	ldr	r3, [sp, #28]
   8715c:	3301      	adds	r3, #1
   8715e:	9307      	str	r3, [sp, #28]
   87160:	2331      	movs	r3, #49	; 0x31
   87162:	f7ff bb34 	b.w	867ce <_dtoa_r+0x43e>
   87166:	9b07      	ldr	r3, [sp, #28]
   87168:	46bb      	mov	fp, r7
   8716a:	3301      	adds	r3, #1
   8716c:	9307      	str	r3, [sp, #28]
   8716e:	2339      	movs	r3, #57	; 0x39
   87170:	4637      	mov	r7, r6
   87172:	f80b 3b01 	strb.w	r3, [fp], #1
   87176:	4646      	mov	r6, r8
   87178:	e4d7      	b.n	86b2a <_dtoa_r+0x79a>
   8717a:	f04f 0900 	mov.w	r9, #0
   8717e:	464e      	mov	r6, r9
   87180:	e649      	b.n	86e16 <_dtoa_r+0xa86>
   87182:	469a      	mov	sl, r3
   87184:	e468      	b.n	86a58 <_dtoa_r+0x6c8>
   87186:	9d10      	ldr	r5, [sp, #64]	; 0x40
   87188:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   8718a:	46b2      	mov	sl, r6
   8718c:	e7b0      	b.n	870f0 <_dtoa_r+0xd60>
   8718e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87190:	9a03      	ldr	r2, [sp, #12]
   87192:	9307      	str	r3, [sp, #28]
   87194:	f7ff bb14 	b.w	867c0 <_dtoa_r+0x430>
   87198:	f47f aeec 	bne.w	86f74 <_dtoa_r+0xbe4>
   8719c:	07da      	lsls	r2, r3, #31
   8719e:	f57f aee9 	bpl.w	86f74 <_dtoa_r+0xbe4>
   871a2:	e6e2      	b.n	86f6a <_dtoa_r+0xbda>
   871a4:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
   871a8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   871aa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   871ac:	f7ff bb42 	b.w	86834 <_dtoa_r+0x4a4>
   871b0:	2b39      	cmp	r3, #57	; 0x39
   871b2:	d0d8      	beq.n	87166 <_dtoa_r+0xdd6>
   871b4:	f1ba 0f00 	cmp.w	sl, #0
   871b8:	f73f aeda 	bgt.w	86f70 <_dtoa_r+0xbe0>
   871bc:	e6da      	b.n	86f74 <_dtoa_r+0xbe4>
   871be:	9b22      	ldr	r3, [sp, #136]	; 0x88
   871c0:	2b02      	cmp	r3, #2
   871c2:	f73f ae13 	bgt.w	86dec <_dtoa_r+0xa5c>
   871c6:	f8cd 801c 	str.w	r8, [sp, #28]
   871ca:	e59c      	b.n	86d06 <_dtoa_r+0x976>
   871cc:	463e      	mov	r6, r7
   871ce:	e76f      	b.n	870b0 <_dtoa_r+0xd20>
   871d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   871d2:	2b02      	cmp	r3, #2
   871d4:	f73f ae0a 	bgt.w	86dec <_dtoa_r+0xa5c>
   871d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   871da:	f8cd 801c 	str.w	r8, [sp, #28]
   871de:	9308      	str	r3, [sp, #32]
   871e0:	e50f      	b.n	86c02 <_dtoa_r+0x872>
   871e2:	f04f 0a02 	mov.w	sl, #2
   871e6:	f7ff ba51 	b.w	8668c <_dtoa_r+0x2fc>
   871ea:	4602      	mov	r2, r0
   871ec:	f240 21ea 	movw	r1, #746	; 0x2ea
   871f0:	4b17      	ldr	r3, [pc, #92]	; (87250 <_dtoa_r+0xec0>)
   871f2:	4818      	ldr	r0, [pc, #96]	; (87254 <_dtoa_r+0xec4>)
   871f4:	f002 f8dc 	bl	893b0 <__assert_func>
   871f8:	2600      	movs	r6, #0
   871fa:	4620      	mov	r0, r4
   871fc:	4631      	mov	r1, r6
   871fe:	6466      	str	r6, [r4, #68]	; 0x44
   87200:	f001 f956 	bl	884b0 <_Balloc>
   87204:	9003      	str	r0, [sp, #12]
   87206:	b978      	cbnz	r0, 87228 <_dtoa_r+0xe98>
   87208:	2200      	movs	r2, #0
   8720a:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   8720e:	4b10      	ldr	r3, [pc, #64]	; (87250 <_dtoa_r+0xec0>)
   87210:	4810      	ldr	r0, [pc, #64]	; (87254 <_dtoa_r+0xec4>)
   87212:	f002 f8cd 	bl	893b0 <__assert_func>
   87216:	4b10      	ldr	r3, [pc, #64]	; (87258 <_dtoa_r+0xec8>)
   87218:	9303      	str	r3, [sp, #12]
   8721a:	f7ff b8f4 	b.w	86406 <_dtoa_r+0x76>
   8721e:	f43f ac33 	beq.w	86a88 <_dtoa_r+0x6f8>
   87222:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   87226:	e4b5      	b.n	86b94 <_dtoa_r+0x804>
   87228:	9b03      	ldr	r3, [sp, #12]
   8722a:	2201      	movs	r2, #1
   8722c:	6423      	str	r3, [r4, #64]	; 0x40
   8722e:	f04f 33ff 	mov.w	r3, #4294967295
   87232:	9623      	str	r6, [sp, #140]	; 0x8c
   87234:	9312      	str	r3, [sp, #72]	; 0x48
   87236:	920c      	str	r2, [sp, #48]	; 0x30
   87238:	9308      	str	r3, [sp, #32]
   8723a:	f7ff bafb 	b.w	86834 <_dtoa_r+0x4a4>
   8723e:	bf00      	nop
   87240:	0008a568 	.word	0x0008a568
   87244:	40240000 	.word	0x40240000
   87248:	3fe00000 	.word	0x3fe00000
   8724c:	401c0000 	.word	0x401c0000
   87250:	0008a41c 	.word	0x0008a41c
   87254:	0008a430 	.word	0x0008a430
   87258:	0008a410 	.word	0x0008a410

0008725c <__sflush_r>:
   8725c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   87260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87262:	460c      	mov	r4, r1
   87264:	0711      	lsls	r1, r2, #28
   87266:	4607      	mov	r7, r0
   87268:	d443      	bmi.n	872f2 <__sflush_r+0x96>
   8726a:	6863      	ldr	r3, [r4, #4]
   8726c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   87270:	2b00      	cmp	r3, #0
   87272:	81a2      	strh	r2, [r4, #12]
   87274:	dd5b      	ble.n	8732e <__sflush_r+0xd2>
   87276:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   87278:	2d00      	cmp	r5, #0
   8727a:	d056      	beq.n	8732a <__sflush_r+0xce>
   8727c:	2300      	movs	r3, #0
   8727e:	683e      	ldr	r6, [r7, #0]
   87280:	603b      	str	r3, [r7, #0]
   87282:	b293      	uxth	r3, r2
   87284:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   87288:	d155      	bne.n	87336 <__sflush_r+0xda>
   8728a:	2301      	movs	r3, #1
   8728c:	4638      	mov	r0, r7
   8728e:	69e1      	ldr	r1, [r4, #28]
   87290:	47a8      	blx	r5
   87292:	1c42      	adds	r2, r0, #1
   87294:	d065      	beq.n	87362 <__sflush_r+0x106>
   87296:	89a3      	ldrh	r3, [r4, #12]
   87298:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   8729a:	075b      	lsls	r3, r3, #29
   8729c:	d505      	bpl.n	872aa <__sflush_r+0x4e>
   8729e:	6863      	ldr	r3, [r4, #4]
   872a0:	1ac0      	subs	r0, r0, r3
   872a2:	6b23      	ldr	r3, [r4, #48]	; 0x30
   872a4:	b10b      	cbz	r3, 872aa <__sflush_r+0x4e>
   872a6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   872a8:	1ac0      	subs	r0, r0, r3
   872aa:	4602      	mov	r2, r0
   872ac:	69e1      	ldr	r1, [r4, #28]
   872ae:	2300      	movs	r3, #0
   872b0:	4638      	mov	r0, r7
   872b2:	47a8      	blx	r5
   872b4:	1c41      	adds	r1, r0, #1
   872b6:	d140      	bne.n	8733a <__sflush_r+0xde>
   872b8:	683b      	ldr	r3, [r7, #0]
   872ba:	2b00      	cmp	r3, #0
   872bc:	d03d      	beq.n	8733a <__sflush_r+0xde>
   872be:	2b1d      	cmp	r3, #29
   872c0:	d001      	beq.n	872c6 <__sflush_r+0x6a>
   872c2:	2b16      	cmp	r3, #22
   872c4:	d154      	bne.n	87370 <__sflush_r+0x114>
   872c6:	2200      	movs	r2, #0
   872c8:	89a3      	ldrh	r3, [r4, #12]
   872ca:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   872ce:	81a3      	strh	r3, [r4, #12]
   872d0:	6923      	ldr	r3, [r4, #16]
   872d2:	e9c4 3200 	strd	r3, r2, [r4]
   872d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
   872d8:	603e      	str	r6, [r7, #0]
   872da:	b331      	cbz	r1, 8732a <__sflush_r+0xce>
   872dc:	f104 0340 	add.w	r3, r4, #64	; 0x40
   872e0:	4299      	cmp	r1, r3
   872e2:	d002      	beq.n	872ea <__sflush_r+0x8e>
   872e4:	4638      	mov	r0, r7
   872e6:	f000 f9fb 	bl	876e0 <_free_r>
   872ea:	2300      	movs	r3, #0
   872ec:	4618      	mov	r0, r3
   872ee:	6323      	str	r3, [r4, #48]	; 0x30
   872f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   872f2:	6926      	ldr	r6, [r4, #16]
   872f4:	b1ce      	cbz	r6, 8732a <__sflush_r+0xce>
   872f6:	b293      	uxth	r3, r2
   872f8:	079a      	lsls	r2, r3, #30
   872fa:	bf18      	it	ne
   872fc:	2300      	movne	r3, #0
   872fe:	6825      	ldr	r5, [r4, #0]
   87300:	bf08      	it	eq
   87302:	6963      	ldreq	r3, [r4, #20]
   87304:	6026      	str	r6, [r4, #0]
   87306:	1bad      	subs	r5, r5, r6
   87308:	60a3      	str	r3, [r4, #8]
   8730a:	e00c      	b.n	87326 <__sflush_r+0xca>
   8730c:	462b      	mov	r3, r5
   8730e:	4632      	mov	r2, r6
   87310:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87314:	4638      	mov	r0, r7
   87316:	69e1      	ldr	r1, [r4, #28]
   87318:	47e0      	blx	ip
   8731a:	f1b0 0c00 	subs.w	ip, r0, #0
   8731e:	eba5 050c 	sub.w	r5, r5, ip
   87322:	4466      	add	r6, ip
   87324:	dd16      	ble.n	87354 <__sflush_r+0xf8>
   87326:	2d00      	cmp	r5, #0
   87328:	dcf0      	bgt.n	8730c <__sflush_r+0xb0>
   8732a:	2000      	movs	r0, #0
   8732c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8732e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   87330:	2b00      	cmp	r3, #0
   87332:	dca0      	bgt.n	87276 <__sflush_r+0x1a>
   87334:	e7f9      	b.n	8732a <__sflush_r+0xce>
   87336:	6d20      	ldr	r0, [r4, #80]	; 0x50
   87338:	e7af      	b.n	8729a <__sflush_r+0x3e>
   8733a:	2200      	movs	r2, #0
   8733c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87340:	6062      	str	r2, [r4, #4]
   87342:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   87346:	6922      	ldr	r2, [r4, #16]
   87348:	81a3      	strh	r3, [r4, #12]
   8734a:	04db      	lsls	r3, r3, #19
   8734c:	6022      	str	r2, [r4, #0]
   8734e:	d5c2      	bpl.n	872d6 <__sflush_r+0x7a>
   87350:	6520      	str	r0, [r4, #80]	; 0x50
   87352:	e7c0      	b.n	872d6 <__sflush_r+0x7a>
   87354:	89a3      	ldrh	r3, [r4, #12]
   87356:	f04f 30ff 	mov.w	r0, #4294967295
   8735a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8735e:	81a3      	strh	r3, [r4, #12]
   87360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87362:	683b      	ldr	r3, [r7, #0]
   87364:	2b00      	cmp	r3, #0
   87366:	d096      	beq.n	87296 <__sflush_r+0x3a>
   87368:	2b1d      	cmp	r3, #29
   8736a:	d006      	beq.n	8737a <__sflush_r+0x11e>
   8736c:	2b16      	cmp	r3, #22
   8736e:	d004      	beq.n	8737a <__sflush_r+0x11e>
   87370:	89a3      	ldrh	r3, [r4, #12]
   87372:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87376:	81a3      	strh	r3, [r4, #12]
   87378:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8737a:	2000      	movs	r0, #0
   8737c:	603e      	str	r6, [r7, #0]
   8737e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00087380 <_fflush_r>:
   87380:	b538      	push	{r3, r4, r5, lr}
   87382:	4605      	mov	r5, r0
   87384:	460c      	mov	r4, r1
   87386:	b108      	cbz	r0, 8738c <_fflush_r+0xc>
   87388:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8738a:	b1a3      	cbz	r3, 873b6 <_fflush_r+0x36>
   8738c:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87390:	b1b8      	cbz	r0, 873c2 <_fflush_r+0x42>
   87392:	6e63      	ldr	r3, [r4, #100]	; 0x64
   87394:	07db      	lsls	r3, r3, #31
   87396:	d401      	bmi.n	8739c <_fflush_r+0x1c>
   87398:	0581      	lsls	r1, r0, #22
   8739a:	d515      	bpl.n	873c8 <_fflush_r+0x48>
   8739c:	4628      	mov	r0, r5
   8739e:	4621      	mov	r1, r4
   873a0:	f7ff ff5c 	bl	8725c <__sflush_r>
   873a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   873a6:	4605      	mov	r5, r0
   873a8:	07da      	lsls	r2, r3, #31
   873aa:	d402      	bmi.n	873b2 <_fflush_r+0x32>
   873ac:	89a3      	ldrh	r3, [r4, #12]
   873ae:	059b      	lsls	r3, r3, #22
   873b0:	d50e      	bpl.n	873d0 <_fflush_r+0x50>
   873b2:	4628      	mov	r0, r5
   873b4:	bd38      	pop	{r3, r4, r5, pc}
   873b6:	f000 f817 	bl	873e8 <__sinit>
   873ba:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   873be:	2800      	cmp	r0, #0
   873c0:	d1e7      	bne.n	87392 <_fflush_r+0x12>
   873c2:	4605      	mov	r5, r0
   873c4:	4628      	mov	r0, r5
   873c6:	bd38      	pop	{r3, r4, r5, pc}
   873c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   873ca:	f000 fc33 	bl	87c34 <__retarget_lock_acquire_recursive>
   873ce:	e7e5      	b.n	8739c <_fflush_r+0x1c>
   873d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   873d2:	f000 fc31 	bl	87c38 <__retarget_lock_release_recursive>
   873d6:	4628      	mov	r0, r5
   873d8:	bd38      	pop	{r3, r4, r5, pc}
   873da:	bf00      	nop

000873dc <_cleanup_r>:
   873dc:	4901      	ldr	r1, [pc, #4]	; (873e4 <_cleanup_r+0x8>)
   873de:	f000 bbf7 	b.w	87bd0 <_fwalk_reent>
   873e2:	bf00      	nop
   873e4:	00089499 	.word	0x00089499

000873e8 <__sinit>:
   873e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   873ec:	4682      	mov	sl, r0
   873ee:	4839      	ldr	r0, [pc, #228]	; (874d4 <__sinit+0xec>)
   873f0:	f000 fc20 	bl	87c34 <__retarget_lock_acquire_recursive>
   873f4:	f8da 4038 	ldr.w	r4, [sl, #56]	; 0x38
   873f8:	2c00      	cmp	r4, #0
   873fa:	d166      	bne.n	874ca <__sinit+0xe2>
   873fc:	2304      	movs	r3, #4
   873fe:	2203      	movs	r2, #3
   87400:	4935      	ldr	r1, [pc, #212]	; (874d8 <__sinit+0xf0>)
   87402:	f8da 5004 	ldr.w	r5, [sl, #4]
   87406:	f8ca 103c 	str.w	r1, [sl, #60]	; 0x3c
   8740a:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 874dc <__sinit+0xf4>
   8740e:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 874e0 <__sinit+0xf8>
   87412:	4f34      	ldr	r7, [pc, #208]	; (874e4 <__sinit+0xfc>)
   87414:	4e34      	ldr	r6, [pc, #208]	; (874e8 <__sinit+0x100>)
   87416:	f50a 713b 	add.w	r1, sl, #748	; 0x2ec
   8741a:	e9ca 21b9 	strd	r2, r1, [sl, #740]	; 0x2e4
   8741e:	f8ca 42e0 	str.w	r4, [sl, #736]	; 0x2e0
   87422:	4621      	mov	r1, r4
   87424:	60eb      	str	r3, [r5, #12]
   87426:	2208      	movs	r2, #8
   87428:	e9c5 4400 	strd	r4, r4, [r5]
   8742c:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87430:	666c      	str	r4, [r5, #100]	; 0x64
   87432:	60ac      	str	r4, [r5, #8]
   87434:	61ac      	str	r4, [r5, #24]
   87436:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8743a:	f7fc f845 	bl	834c8 <memset>
   8743e:	e9c5 5907 	strd	r5, r9, [r5, #28]
   87442:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   87446:	62ee      	str	r6, [r5, #44]	; 0x2c
   87448:	f105 0058 	add.w	r0, r5, #88	; 0x58
   8744c:	f000 fbee 	bl	87c2c <__retarget_lock_init_recursive>
   87450:	f8da 5008 	ldr.w	r5, [sl, #8]
   87454:	4b25      	ldr	r3, [pc, #148]	; (874ec <__sinit+0x104>)
   87456:	4621      	mov	r1, r4
   87458:	60eb      	str	r3, [r5, #12]
   8745a:	2208      	movs	r2, #8
   8745c:	e9c5 4400 	strd	r4, r4, [r5]
   87460:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87464:	666c      	str	r4, [r5, #100]	; 0x64
   87466:	60ac      	str	r4, [r5, #8]
   87468:	61ac      	str	r4, [r5, #24]
   8746a:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8746e:	f7fc f82b 	bl	834c8 <memset>
   87472:	e9c5 5907 	strd	r5, r9, [r5, #28]
   87476:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   8747a:	62ee      	str	r6, [r5, #44]	; 0x2c
   8747c:	f105 0058 	add.w	r0, r5, #88	; 0x58
   87480:	f000 fbd4 	bl	87c2c <__retarget_lock_init_recursive>
   87484:	f8da 500c 	ldr.w	r5, [sl, #12]
   87488:	4b19      	ldr	r3, [pc, #100]	; (874f0 <__sinit+0x108>)
   8748a:	4621      	mov	r1, r4
   8748c:	60eb      	str	r3, [r5, #12]
   8748e:	2208      	movs	r2, #8
   87490:	e9c5 4400 	strd	r4, r4, [r5]
   87494:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87498:	666c      	str	r4, [r5, #100]	; 0x64
   8749a:	60ac      	str	r4, [r5, #8]
   8749c:	61ac      	str	r4, [r5, #24]
   8749e:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   874a2:	f7fc f811 	bl	834c8 <memset>
   874a6:	f105 0058 	add.w	r0, r5, #88	; 0x58
   874aa:	e9c5 5907 	strd	r5, r9, [r5, #28]
   874ae:	e9c5 760a 	strd	r7, r6, [r5, #40]	; 0x28
   874b2:	f8c5 8024 	str.w	r8, [r5, #36]	; 0x24
   874b6:	f000 fbb9 	bl	87c2c <__retarget_lock_init_recursive>
   874ba:	2301      	movs	r3, #1
   874bc:	4805      	ldr	r0, [pc, #20]	; (874d4 <__sinit+0xec>)
   874be:	f8ca 3038 	str.w	r3, [sl, #56]	; 0x38
   874c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   874c6:	f000 bbb7 	b.w	87c38 <__retarget_lock_release_recursive>
   874ca:	4802      	ldr	r0, [pc, #8]	; (874d4 <__sinit+0xec>)
   874cc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   874d0:	f000 bbb2 	b.w	87c38 <__retarget_lock_release_recursive>
   874d4:	200036d8 	.word	0x200036d8
   874d8:	000873dd 	.word	0x000873dd
   874dc:	00089069 	.word	0x00089069
   874e0:	0008908d 	.word	0x0008908d
   874e4:	000890cd 	.word	0x000890cd
   874e8:	000890ed 	.word	0x000890ed
   874ec:	00010009 	.word	0x00010009
   874f0:	00020012 	.word	0x00020012

000874f4 <__sfp_lock_acquire>:
   874f4:	4801      	ldr	r0, [pc, #4]	; (874fc <__sfp_lock_acquire+0x8>)
   874f6:	f000 bb9d 	b.w	87c34 <__retarget_lock_acquire_recursive>
   874fa:	bf00      	nop
   874fc:	200036d4 	.word	0x200036d4

00087500 <__sfp_lock_release>:
   87500:	4801      	ldr	r0, [pc, #4]	; (87508 <__sfp_lock_release+0x8>)
   87502:	f000 bb99 	b.w	87c38 <__retarget_lock_release_recursive>
   87506:	bf00      	nop
   87508:	200036d4 	.word	0x200036d4

0008750c <__libc_fini_array>:
   8750c:	b538      	push	{r3, r4, r5, lr}
   8750e:	4b08      	ldr	r3, [pc, #32]	; (87530 <__libc_fini_array+0x24>)
   87510:	4d08      	ldr	r5, [pc, #32]	; (87534 <__libc_fini_array+0x28>)
   87512:	1b5b      	subs	r3, r3, r5
   87514:	109c      	asrs	r4, r3, #2
   87516:	d007      	beq.n	87528 <__libc_fini_array+0x1c>
   87518:	3b04      	subs	r3, #4
   8751a:	441d      	add	r5, r3
   8751c:	3c01      	subs	r4, #1
   8751e:	f855 3904 	ldr.w	r3, [r5], #-4
   87522:	4798      	blx	r3
   87524:	2c00      	cmp	r4, #0
   87526:	d1f9      	bne.n	8751c <__libc_fini_array+0x10>
   87528:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8752c:	f003 b932 	b.w	8a794 <_fini>
   87530:	0008a7a4 	.word	0x0008a7a4
   87534:	0008a7a0 	.word	0x0008a7a0

00087538 <__fputwc>:
   87538:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8753c:	b083      	sub	sp, #12
   8753e:	4607      	mov	r7, r0
   87540:	4688      	mov	r8, r1
   87542:	4614      	mov	r4, r2
   87544:	f000 fb68 	bl	87c18 <__locale_mb_cur_max>
   87548:	2801      	cmp	r0, #1
   8754a:	d103      	bne.n	87554 <__fputwc+0x1c>
   8754c:	f108 33ff 	add.w	r3, r8, #4294967295
   87550:	2bfe      	cmp	r3, #254	; 0xfe
   87552:	d933      	bls.n	875bc <__fputwc+0x84>
   87554:	4642      	mov	r2, r8
   87556:	4638      	mov	r0, r7
   87558:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   8755c:	a901      	add	r1, sp, #4
   8755e:	f001 fe9f 	bl	892a0 <_wcrtomb_r>
   87562:	1c42      	adds	r2, r0, #1
   87564:	4606      	mov	r6, r0
   87566:	d02f      	beq.n	875c8 <__fputwc+0x90>
   87568:	b318      	cbz	r0, 875b2 <__fputwc+0x7a>
   8756a:	f89d 1004 	ldrb.w	r1, [sp, #4]
   8756e:	2500      	movs	r5, #0
   87570:	f10d 0905 	add.w	r9, sp, #5
   87574:	e008      	b.n	87588 <__fputwc+0x50>
   87576:	6823      	ldr	r3, [r4, #0]
   87578:	1c5a      	adds	r2, r3, #1
   8757a:	6022      	str	r2, [r4, #0]
   8757c:	7019      	strb	r1, [r3, #0]
   8757e:	3501      	adds	r5, #1
   87580:	42b5      	cmp	r5, r6
   87582:	d216      	bcs.n	875b2 <__fputwc+0x7a>
   87584:	f819 1b01 	ldrb.w	r1, [r9], #1
   87588:	68a3      	ldr	r3, [r4, #8]
   8758a:	3b01      	subs	r3, #1
   8758c:	2b00      	cmp	r3, #0
   8758e:	60a3      	str	r3, [r4, #8]
   87590:	daf1      	bge.n	87576 <__fputwc+0x3e>
   87592:	69a2      	ldr	r2, [r4, #24]
   87594:	4293      	cmp	r3, r2
   87596:	db01      	blt.n	8759c <__fputwc+0x64>
   87598:	290a      	cmp	r1, #10
   8759a:	d1ec      	bne.n	87576 <__fputwc+0x3e>
   8759c:	4622      	mov	r2, r4
   8759e:	4638      	mov	r0, r7
   875a0:	f001 fe26 	bl	891f0 <__swbuf_r>
   875a4:	1c43      	adds	r3, r0, #1
   875a6:	d1ea      	bne.n	8757e <__fputwc+0x46>
   875a8:	4606      	mov	r6, r0
   875aa:	4630      	mov	r0, r6
   875ac:	b003      	add	sp, #12
   875ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   875b2:	4646      	mov	r6, r8
   875b4:	4630      	mov	r0, r6
   875b6:	b003      	add	sp, #12
   875b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   875bc:	fa5f f188 	uxtb.w	r1, r8
   875c0:	4606      	mov	r6, r0
   875c2:	f88d 1004 	strb.w	r1, [sp, #4]
   875c6:	e7d2      	b.n	8756e <__fputwc+0x36>
   875c8:	4630      	mov	r0, r6
   875ca:	89a3      	ldrh	r3, [r4, #12]
   875cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   875d0:	81a3      	strh	r3, [r4, #12]
   875d2:	b003      	add	sp, #12
   875d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000875d8 <_fputwc_r>:
   875d8:	b530      	push	{r4, r5, lr}
   875da:	6e53      	ldr	r3, [r2, #100]	; 0x64
   875dc:	4614      	mov	r4, r2
   875de:	f013 0f01 	tst.w	r3, #1
   875e2:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   875e6:	4605      	mov	r5, r0
   875e8:	b083      	sub	sp, #12
   875ea:	b29a      	uxth	r2, r3
   875ec:	d101      	bne.n	875f2 <_fputwc_r+0x1a>
   875ee:	0598      	lsls	r0, r3, #22
   875f0:	d51c      	bpl.n	8762c <_fputwc_r+0x54>
   875f2:	0490      	lsls	r0, r2, #18
   875f4:	d406      	bmi.n	87604 <_fputwc_r+0x2c>
   875f6:	6e62      	ldr	r2, [r4, #100]	; 0x64
   875f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   875fc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   87600:	81a3      	strh	r3, [r4, #12]
   87602:	6662      	str	r2, [r4, #100]	; 0x64
   87604:	4622      	mov	r2, r4
   87606:	4628      	mov	r0, r5
   87608:	f7ff ff96 	bl	87538 <__fputwc>
   8760c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8760e:	4605      	mov	r5, r0
   87610:	07da      	lsls	r2, r3, #31
   87612:	d402      	bmi.n	8761a <_fputwc_r+0x42>
   87614:	89a3      	ldrh	r3, [r4, #12]
   87616:	059b      	lsls	r3, r3, #22
   87618:	d502      	bpl.n	87620 <_fputwc_r+0x48>
   8761a:	4628      	mov	r0, r5
   8761c:	b003      	add	sp, #12
   8761e:	bd30      	pop	{r4, r5, pc}
   87620:	6da0      	ldr	r0, [r4, #88]	; 0x58
   87622:	f000 fb09 	bl	87c38 <__retarget_lock_release_recursive>
   87626:	4628      	mov	r0, r5
   87628:	b003      	add	sp, #12
   8762a:	bd30      	pop	{r4, r5, pc}
   8762c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8762e:	9101      	str	r1, [sp, #4]
   87630:	f000 fb00 	bl	87c34 <__retarget_lock_acquire_recursive>
   87634:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87638:	9901      	ldr	r1, [sp, #4]
   8763a:	b29a      	uxth	r2, r3
   8763c:	e7d9      	b.n	875f2 <_fputwc_r+0x1a>
   8763e:	bf00      	nop

00087640 <_malloc_trim_r>:
   87640:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87642:	460c      	mov	r4, r1
   87644:	4f23      	ldr	r7, [pc, #140]	; (876d4 <_malloc_trim_r+0x94>)
   87646:	4606      	mov	r6, r0
   87648:	f000 ff26 	bl	88498 <__malloc_lock>
   8764c:	68bb      	ldr	r3, [r7, #8]
   8764e:	685d      	ldr	r5, [r3, #4]
   87650:	f5c4 637e 	rsb	r3, r4, #4064	; 0xfe0
   87654:	f025 0503 	bic.w	r5, r5, #3
   87658:	330f      	adds	r3, #15
   8765a:	442b      	add	r3, r5
   8765c:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
   87660:	f023 030f 	bic.w	r3, r3, #15
   87664:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
   87668:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   8766c:	db07      	blt.n	8767e <_malloc_trim_r+0x3e>
   8766e:	2100      	movs	r1, #0
   87670:	4630      	mov	r0, r6
   87672:	f001 fce7 	bl	89044 <_sbrk_r>
   87676:	68bb      	ldr	r3, [r7, #8]
   87678:	442b      	add	r3, r5
   8767a:	4298      	cmp	r0, r3
   8767c:	d004      	beq.n	87688 <_malloc_trim_r+0x48>
   8767e:	4630      	mov	r0, r6
   87680:	f000 ff10 	bl	884a4 <__malloc_unlock>
   87684:	2000      	movs	r0, #0
   87686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87688:	4630      	mov	r0, r6
   8768a:	4261      	negs	r1, r4
   8768c:	f001 fcda 	bl	89044 <_sbrk_r>
   87690:	3001      	adds	r0, #1
   87692:	d00d      	beq.n	876b0 <_malloc_trim_r+0x70>
   87694:	4a10      	ldr	r2, [pc, #64]	; (876d8 <_malloc_trim_r+0x98>)
   87696:	68bb      	ldr	r3, [r7, #8]
   87698:	1b2d      	subs	r5, r5, r4
   8769a:	f045 0501 	orr.w	r5, r5, #1
   8769e:	605d      	str	r5, [r3, #4]
   876a0:	6813      	ldr	r3, [r2, #0]
   876a2:	4630      	mov	r0, r6
   876a4:	1b1b      	subs	r3, r3, r4
   876a6:	6013      	str	r3, [r2, #0]
   876a8:	f000 fefc 	bl	884a4 <__malloc_unlock>
   876ac:	2001      	movs	r0, #1
   876ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   876b0:	2100      	movs	r1, #0
   876b2:	4630      	mov	r0, r6
   876b4:	f001 fcc6 	bl	89044 <_sbrk_r>
   876b8:	68ba      	ldr	r2, [r7, #8]
   876ba:	1a83      	subs	r3, r0, r2
   876bc:	2b0f      	cmp	r3, #15
   876be:	ddde      	ble.n	8767e <_malloc_trim_r+0x3e>
   876c0:	f043 0301 	orr.w	r3, r3, #1
   876c4:	6053      	str	r3, [r2, #4]
   876c6:	4b05      	ldr	r3, [pc, #20]	; (876dc <_malloc_trim_r+0x9c>)
   876c8:	4903      	ldr	r1, [pc, #12]	; (876d8 <_malloc_trim_r+0x98>)
   876ca:	681b      	ldr	r3, [r3, #0]
   876cc:	1ac0      	subs	r0, r0, r3
   876ce:	6008      	str	r0, [r1, #0]
   876d0:	e7d5      	b.n	8767e <_malloc_trim_r+0x3e>
   876d2:	bf00      	nop
   876d4:	20000948 	.word	0x20000948
   876d8:	200036dc 	.word	0x200036dc
   876dc:	20000d50 	.word	0x20000d50

000876e0 <_free_r>:
   876e0:	2900      	cmp	r1, #0
   876e2:	d05e      	beq.n	877a2 <_free_r+0xc2>
   876e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   876e6:	460c      	mov	r4, r1
   876e8:	4606      	mov	r6, r0
   876ea:	f000 fed5 	bl	88498 <__malloc_lock>
   876ee:	f854 2c04 	ldr.w	r2, [r4, #-4]
   876f2:	4f78      	ldr	r7, [pc, #480]	; (878d4 <_free_r+0x1f4>)
   876f4:	f1a4 0508 	sub.w	r5, r4, #8
   876f8:	f022 0101 	bic.w	r1, r2, #1
   876fc:	1868      	adds	r0, r5, r1
   876fe:	f8d7 c008 	ldr.w	ip, [r7, #8]
   87702:	6843      	ldr	r3, [r0, #4]
   87704:	4584      	cmp	ip, r0
   87706:	f023 0303 	bic.w	r3, r3, #3
   8770a:	f000 8087 	beq.w	8781c <_free_r+0x13c>
   8770e:	07d2      	lsls	r2, r2, #31
   87710:	6043      	str	r3, [r0, #4]
   87712:	d434      	bmi.n	8777e <_free_r+0x9e>
   87714:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87718:	f107 0408 	add.w	r4, r7, #8
   8771c:	1aad      	subs	r5, r5, r2
   8771e:	4411      	add	r1, r2
   87720:	68aa      	ldr	r2, [r5, #8]
   87722:	42a2      	cmp	r2, r4
   87724:	d068      	beq.n	877f8 <_free_r+0x118>
   87726:	eb00 0c03 	add.w	ip, r0, r3
   8772a:	f8dc e004 	ldr.w	lr, [ip, #4]
   8772e:	f8d5 c00c 	ldr.w	ip, [r5, #12]
   87732:	f01e 0f01 	tst.w	lr, #1
   87736:	f8c2 c00c 	str.w	ip, [r2, #12]
   8773a:	f8cc 2008 	str.w	r2, [ip, #8]
   8773e:	f000 8091 	beq.w	87864 <_free_r+0x184>
   87742:	f041 0301 	orr.w	r3, r1, #1
   87746:	606b      	str	r3, [r5, #4]
   87748:	6001      	str	r1, [r0, #0]
   8774a:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   8774e:	d231      	bcs.n	877b4 <_free_r+0xd4>
   87750:	094a      	lsrs	r2, r1, #5
   87752:	08cb      	lsrs	r3, r1, #3
   87754:	2101      	movs	r1, #1
   87756:	4091      	lsls	r1, r2
   87758:	687a      	ldr	r2, [r7, #4]
   8775a:	3301      	adds	r3, #1
   8775c:	4311      	orrs	r1, r2
   8775e:	6079      	str	r1, [r7, #4]
   87760:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   87764:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   87768:	3a08      	subs	r2, #8
   8776a:	e9c5 1202 	strd	r1, r2, [r5, #8]
   8776e:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   87772:	60cd      	str	r5, [r1, #12]
   87774:	4630      	mov	r0, r6
   87776:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   8777a:	f000 be93 	b.w	884a4 <__malloc_unlock>
   8777e:	18c2      	adds	r2, r0, r3
   87780:	6852      	ldr	r2, [r2, #4]
   87782:	07d2      	lsls	r2, r2, #31
   87784:	d40e      	bmi.n	877a4 <_free_r+0xc4>
   87786:	4419      	add	r1, r3
   87788:	f107 0408 	add.w	r4, r7, #8
   8778c:	6883      	ldr	r3, [r0, #8]
   8778e:	42a3      	cmp	r3, r4
   87790:	d070      	beq.n	87874 <_free_r+0x194>
   87792:	68c2      	ldr	r2, [r0, #12]
   87794:	60da      	str	r2, [r3, #12]
   87796:	6093      	str	r3, [r2, #8]
   87798:	f041 0301 	orr.w	r3, r1, #1
   8779c:	606b      	str	r3, [r5, #4]
   8779e:	5069      	str	r1, [r5, r1]
   877a0:	e7d3      	b.n	8774a <_free_r+0x6a>
   877a2:	4770      	bx	lr
   877a4:	f041 0301 	orr.w	r3, r1, #1
   877a8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   877ac:	f844 3c04 	str.w	r3, [r4, #-4]
   877b0:	6001      	str	r1, [r0, #0]
   877b2:	d3cd      	bcc.n	87750 <_free_r+0x70>
   877b4:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
   877b8:	ea4f 2351 	mov.w	r3, r1, lsr #9
   877bc:	d247      	bcs.n	8784e <_free_r+0x16e>
   877be:	098b      	lsrs	r3, r1, #6
   877c0:	f103 0039 	add.w	r0, r3, #57	; 0x39
   877c4:	f103 0238 	add.w	r2, r3, #56	; 0x38
   877c8:	00c3      	lsls	r3, r0, #3
   877ca:	18f8      	adds	r0, r7, r3
   877cc:	58fb      	ldr	r3, [r7, r3]
   877ce:	3808      	subs	r0, #8
   877d0:	4298      	cmp	r0, r3
   877d2:	d058      	beq.n	87886 <_free_r+0x1a6>
   877d4:	685a      	ldr	r2, [r3, #4]
   877d6:	f022 0203 	bic.w	r2, r2, #3
   877da:	428a      	cmp	r2, r1
   877dc:	d902      	bls.n	877e4 <_free_r+0x104>
   877de:	689b      	ldr	r3, [r3, #8]
   877e0:	4298      	cmp	r0, r3
   877e2:	d1f7      	bne.n	877d4 <_free_r+0xf4>
   877e4:	68d8      	ldr	r0, [r3, #12]
   877e6:	e9c5 3002 	strd	r3, r0, [r5, #8]
   877ea:	6085      	str	r5, [r0, #8]
   877ec:	4630      	mov	r0, r6
   877ee:	60dd      	str	r5, [r3, #12]
   877f0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   877f4:	f000 be56 	b.w	884a4 <__malloc_unlock>
   877f8:	18c2      	adds	r2, r0, r3
   877fa:	6852      	ldr	r2, [r2, #4]
   877fc:	07d2      	lsls	r2, r2, #31
   877fe:	d463      	bmi.n	878c8 <_free_r+0x1e8>
   87800:	440b      	add	r3, r1
   87802:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
   87806:	60ca      	str	r2, [r1, #12]
   87808:	6091      	str	r1, [r2, #8]
   8780a:	f043 0201 	orr.w	r2, r3, #1
   8780e:	606a      	str	r2, [r5, #4]
   87810:	4630      	mov	r0, r6
   87812:	50eb      	str	r3, [r5, r3]
   87814:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87818:	f000 be44 	b.w	884a4 <__malloc_unlock>
   8781c:	440b      	add	r3, r1
   8781e:	07d1      	lsls	r1, r2, #31
   87820:	d407      	bmi.n	87832 <_free_r+0x152>
   87822:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87826:	1aad      	subs	r5, r5, r2
   87828:	4413      	add	r3, r2
   8782a:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
   8782e:	60ca      	str	r2, [r1, #12]
   87830:	6091      	str	r1, [r2, #8]
   87832:	f043 0201 	orr.w	r2, r3, #1
   87836:	606a      	str	r2, [r5, #4]
   87838:	4a27      	ldr	r2, [pc, #156]	; (878d8 <_free_r+0x1f8>)
   8783a:	60bd      	str	r5, [r7, #8]
   8783c:	6812      	ldr	r2, [r2, #0]
   8783e:	429a      	cmp	r2, r3
   87840:	d898      	bhi.n	87774 <_free_r+0x94>
   87842:	4b26      	ldr	r3, [pc, #152]	; (878dc <_free_r+0x1fc>)
   87844:	4630      	mov	r0, r6
   87846:	6819      	ldr	r1, [r3, #0]
   87848:	f7ff fefa 	bl	87640 <_malloc_trim_r>
   8784c:	e792      	b.n	87774 <_free_r+0x94>
   8784e:	2b14      	cmp	r3, #20
   87850:	d90a      	bls.n	87868 <_free_r+0x188>
   87852:	2b54      	cmp	r3, #84	; 0x54
   87854:	d81f      	bhi.n	87896 <_free_r+0x1b6>
   87856:	0b0b      	lsrs	r3, r1, #12
   87858:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   8785c:	f103 026e 	add.w	r2, r3, #110	; 0x6e
   87860:	00c3      	lsls	r3, r0, #3
   87862:	e7b2      	b.n	877ca <_free_r+0xea>
   87864:	4419      	add	r1, r3
   87866:	e791      	b.n	8778c <_free_r+0xac>
   87868:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   8786c:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   87870:	00c3      	lsls	r3, r0, #3
   87872:	e7aa      	b.n	877ca <_free_r+0xea>
   87874:	f041 0301 	orr.w	r3, r1, #1
   87878:	e9c7 5504 	strd	r5, r5, [r7, #16]
   8787c:	e9c5 4402 	strd	r4, r4, [r5, #8]
   87880:	606b      	str	r3, [r5, #4]
   87882:	5069      	str	r1, [r5, r1]
   87884:	e776      	b.n	87774 <_free_r+0x94>
   87886:	2101      	movs	r1, #1
   87888:	1092      	asrs	r2, r2, #2
   8788a:	fa01 f202 	lsl.w	r2, r1, r2
   8788e:	6879      	ldr	r1, [r7, #4]
   87890:	430a      	orrs	r2, r1
   87892:	607a      	str	r2, [r7, #4]
   87894:	e7a7      	b.n	877e6 <_free_r+0x106>
   87896:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   8789a:	d806      	bhi.n	878aa <_free_r+0x1ca>
   8789c:	0bcb      	lsrs	r3, r1, #15
   8789e:	f103 0078 	add.w	r0, r3, #120	; 0x78
   878a2:	f103 0277 	add.w	r2, r3, #119	; 0x77
   878a6:	00c3      	lsls	r3, r0, #3
   878a8:	e78f      	b.n	877ca <_free_r+0xea>
   878aa:	f240 5254 	movw	r2, #1364	; 0x554
   878ae:	4293      	cmp	r3, r2
   878b0:	d806      	bhi.n	878c0 <_free_r+0x1e0>
   878b2:	0c8b      	lsrs	r3, r1, #18
   878b4:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   878b8:	f103 027c 	add.w	r2, r3, #124	; 0x7c
   878bc:	00c3      	lsls	r3, r0, #3
   878be:	e784      	b.n	877ca <_free_r+0xea>
   878c0:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
   878c4:	227e      	movs	r2, #126	; 0x7e
   878c6:	e780      	b.n	877ca <_free_r+0xea>
   878c8:	f041 0301 	orr.w	r3, r1, #1
   878cc:	606b      	str	r3, [r5, #4]
   878ce:	6001      	str	r1, [r0, #0]
   878d0:	e750      	b.n	87774 <_free_r+0x94>
   878d2:	bf00      	nop
   878d4:	20000948 	.word	0x20000948
   878d8:	20000d54 	.word	0x20000d54
   878dc:	2000370c 	.word	0x2000370c

000878e0 <__sfvwrite_r>:
   878e0:	6893      	ldr	r3, [r2, #8]
   878e2:	2b00      	cmp	r3, #0
   878e4:	f000 80b7 	beq.w	87a56 <__sfvwrite_r+0x176>
   878e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   878ec:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   878f0:	460c      	mov	r4, r1
   878f2:	0719      	lsls	r1, r3, #28
   878f4:	4680      	mov	r8, r0
   878f6:	4617      	mov	r7, r2
   878f8:	b083      	sub	sp, #12
   878fa:	b298      	uxth	r0, r3
   878fc:	d525      	bpl.n	8794a <__sfvwrite_r+0x6a>
   878fe:	6923      	ldr	r3, [r4, #16]
   87900:	b31b      	cbz	r3, 8794a <__sfvwrite_r+0x6a>
   87902:	f010 0302 	ands.w	r3, r0, #2
   87906:	683d      	ldr	r5, [r7, #0]
   87908:	d02d      	beq.n	87966 <__sfvwrite_r+0x86>
   8790a:	f04f 0b00 	mov.w	fp, #0
   8790e:	465e      	mov	r6, fp
   87910:	f8df a2b8 	ldr.w	sl, [pc, #696]	; 87bcc <__sfvwrite_r+0x2ec>
   87914:	2e00      	cmp	r6, #0
   87916:	f000 808b 	beq.w	87a30 <__sfvwrite_r+0x150>
   8791a:	4556      	cmp	r6, sl
   8791c:	4633      	mov	r3, r6
   8791e:	465a      	mov	r2, fp
   87920:	bf28      	it	cs
   87922:	4653      	movcs	r3, sl
   87924:	4640      	mov	r0, r8
   87926:	69e1      	ldr	r1, [r4, #28]
   87928:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   8792c:	47e0      	blx	ip
   8792e:	2800      	cmp	r0, #0
   87930:	f340 8087 	ble.w	87a42 <__sfvwrite_r+0x162>
   87934:	68bb      	ldr	r3, [r7, #8]
   87936:	4483      	add	fp, r0
   87938:	1a1b      	subs	r3, r3, r0
   8793a:	1a36      	subs	r6, r6, r0
   8793c:	60bb      	str	r3, [r7, #8]
   8793e:	2b00      	cmp	r3, #0
   87940:	d1e8      	bne.n	87914 <__sfvwrite_r+0x34>
   87942:	2000      	movs	r0, #0
   87944:	b003      	add	sp, #12
   87946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8794a:	4621      	mov	r1, r4
   8794c:	4640      	mov	r0, r8
   8794e:	f7fe fc0d 	bl	8616c <__swsetup_r>
   87952:	2800      	cmp	r0, #0
   87954:	f040 8136 	bne.w	87bc4 <__sfvwrite_r+0x2e4>
   87958:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8795c:	683d      	ldr	r5, [r7, #0]
   8795e:	b298      	uxth	r0, r3
   87960:	f010 0302 	ands.w	r3, r0, #2
   87964:	d1d1      	bne.n	8790a <__sfvwrite_r+0x2a>
   87966:	f010 0901 	ands.w	r9, r0, #1
   8796a:	d176      	bne.n	87a5a <__sfvwrite_r+0x17a>
   8796c:	464e      	mov	r6, r9
   8796e:	2e00      	cmp	r6, #0
   87970:	d05a      	beq.n	87a28 <__sfvwrite_r+0x148>
   87972:	0582      	lsls	r2, r0, #22
   87974:	f8d4 b008 	ldr.w	fp, [r4, #8]
   87978:	f140 80b5 	bpl.w	87ae6 <__sfvwrite_r+0x206>
   8797c:	45b3      	cmp	fp, r6
   8797e:	465a      	mov	r2, fp
   87980:	f200 80cd 	bhi.w	87b1e <__sfvwrite_r+0x23e>
   87984:	f410 6f90 	tst.w	r0, #1152	; 0x480
   87988:	f000 80cb 	beq.w	87b22 <__sfvwrite_r+0x242>
   8798c:	6823      	ldr	r3, [r4, #0]
   8798e:	6921      	ldr	r1, [r4, #16]
   87990:	eba3 0b01 	sub.w	fp, r3, r1
   87994:	6963      	ldr	r3, [r4, #20]
   87996:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
   8799a:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
   8799e:	f10b 0301 	add.w	r3, fp, #1
   879a2:	ea4f 0a6a 	mov.w	sl, sl, asr #1
   879a6:	4433      	add	r3, r6
   879a8:	4553      	cmp	r3, sl
   879aa:	4652      	mov	r2, sl
   879ac:	bf84      	itt	hi
   879ae:	469a      	movhi	sl, r3
   879b0:	4652      	movhi	r2, sl
   879b2:	0543      	lsls	r3, r0, #21
   879b4:	f140 80ea 	bpl.w	87b8c <__sfvwrite_r+0x2ac>
   879b8:	4611      	mov	r1, r2
   879ba:	4640      	mov	r0, r8
   879bc:	f000 f9e6 	bl	87d8c <_malloc_r>
   879c0:	2800      	cmp	r0, #0
   879c2:	f000 80f9 	beq.w	87bb8 <__sfvwrite_r+0x2d8>
   879c6:	465a      	mov	r2, fp
   879c8:	6921      	ldr	r1, [r4, #16]
   879ca:	9001      	str	r0, [sp, #4]
   879cc:	f7fb fd06 	bl	833dc <memcpy>
   879d0:	89a2      	ldrh	r2, [r4, #12]
   879d2:	9b01      	ldr	r3, [sp, #4]
   879d4:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   879d8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   879dc:	81a2      	strh	r2, [r4, #12]
   879de:	eb03 000b 	add.w	r0, r3, fp
   879e2:	6123      	str	r3, [r4, #16]
   879e4:	4632      	mov	r2, r6
   879e6:	ebaa 030b 	sub.w	r3, sl, fp
   879ea:	46b3      	mov	fp, r6
   879ec:	f8c4 a014 	str.w	sl, [r4, #20]
   879f0:	60a3      	str	r3, [r4, #8]
   879f2:	6020      	str	r0, [r4, #0]
   879f4:	46b2      	mov	sl, r6
   879f6:	2600      	movs	r6, #0
   879f8:	4649      	mov	r1, r9
   879fa:	9201      	str	r2, [sp, #4]
   879fc:	f000 fcd0 	bl	883a0 <memmove>
   87a00:	68a3      	ldr	r3, [r4, #8]
   87a02:	6821      	ldr	r1, [r4, #0]
   87a04:	9a01      	ldr	r2, [sp, #4]
   87a06:	eba3 030b 	sub.w	r3, r3, fp
   87a0a:	440a      	add	r2, r1
   87a0c:	60a3      	str	r3, [r4, #8]
   87a0e:	6022      	str	r2, [r4, #0]
   87a10:	68b8      	ldr	r0, [r7, #8]
   87a12:	44d1      	add	r9, sl
   87a14:	eba0 000a 	sub.w	r0, r0, sl
   87a18:	60b8      	str	r0, [r7, #8]
   87a1a:	2800      	cmp	r0, #0
   87a1c:	d091      	beq.n	87942 <__sfvwrite_r+0x62>
   87a1e:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87a22:	b280      	uxth	r0, r0
   87a24:	2e00      	cmp	r6, #0
   87a26:	d1a4      	bne.n	87972 <__sfvwrite_r+0x92>
   87a28:	e9d5 9600 	ldrd	r9, r6, [r5]
   87a2c:	3508      	adds	r5, #8
   87a2e:	e79e      	b.n	8796e <__sfvwrite_r+0x8e>
   87a30:	e9d5 b600 	ldrd	fp, r6, [r5]
   87a34:	3508      	adds	r5, #8
   87a36:	e76d      	b.n	87914 <__sfvwrite_r+0x34>
   87a38:	4621      	mov	r1, r4
   87a3a:	4640      	mov	r0, r8
   87a3c:	f7ff fca0 	bl	87380 <_fflush_r>
   87a40:	b380      	cbz	r0, 87aa4 <__sfvwrite_r+0x1c4>
   87a42:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87a46:	f04f 30ff 	mov.w	r0, #4294967295
   87a4a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87a4e:	81a3      	strh	r3, [r4, #12]
   87a50:	b003      	add	sp, #12
   87a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87a56:	2000      	movs	r0, #0
   87a58:	4770      	bx	lr
   87a5a:	461e      	mov	r6, r3
   87a5c:	46aa      	mov	sl, r5
   87a5e:	4699      	mov	r9, r3
   87a60:	4618      	mov	r0, r3
   87a62:	461d      	mov	r5, r3
   87a64:	b356      	cbz	r6, 87abc <__sfvwrite_r+0x1dc>
   87a66:	2800      	cmp	r0, #0
   87a68:	d032      	beq.n	87ad0 <__sfvwrite_r+0x1f0>
   87a6a:	464a      	mov	r2, r9
   87a6c:	6820      	ldr	r0, [r4, #0]
   87a6e:	6921      	ldr	r1, [r4, #16]
   87a70:	42b2      	cmp	r2, r6
   87a72:	bf28      	it	cs
   87a74:	4632      	movcs	r2, r6
   87a76:	4288      	cmp	r0, r1
   87a78:	6963      	ldr	r3, [r4, #20]
   87a7a:	d904      	bls.n	87a86 <__sfvwrite_r+0x1a6>
   87a7c:	68a1      	ldr	r1, [r4, #8]
   87a7e:	eb03 0b01 	add.w	fp, r3, r1
   87a82:	455a      	cmp	r2, fp
   87a84:	dc74      	bgt.n	87b70 <__sfvwrite_r+0x290>
   87a86:	4293      	cmp	r3, r2
   87a88:	dc65      	bgt.n	87b56 <__sfvwrite_r+0x276>
   87a8a:	462a      	mov	r2, r5
   87a8c:	4640      	mov	r0, r8
   87a8e:	69e1      	ldr	r1, [r4, #28]
   87a90:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87a94:	47e0      	blx	ip
   87a96:	f1b0 0b00 	subs.w	fp, r0, #0
   87a9a:	ddd2      	ble.n	87a42 <__sfvwrite_r+0x162>
   87a9c:	ebb9 090b 	subs.w	r9, r9, fp
   87aa0:	d0ca      	beq.n	87a38 <__sfvwrite_r+0x158>
   87aa2:	2001      	movs	r0, #1
   87aa4:	68bb      	ldr	r3, [r7, #8]
   87aa6:	445d      	add	r5, fp
   87aa8:	eba3 030b 	sub.w	r3, r3, fp
   87aac:	eba6 060b 	sub.w	r6, r6, fp
   87ab0:	60bb      	str	r3, [r7, #8]
   87ab2:	2b00      	cmp	r3, #0
   87ab4:	f43f af45 	beq.w	87942 <__sfvwrite_r+0x62>
   87ab8:	2e00      	cmp	r6, #0
   87aba:	d1d4      	bne.n	87a66 <__sfvwrite_r+0x186>
   87abc:	f10a 0308 	add.w	r3, sl, #8
   87ac0:	f853 6c04 	ldr.w	r6, [r3, #-4]
   87ac4:	469a      	mov	sl, r3
   87ac6:	f853 5c08 	ldr.w	r5, [r3, #-8]
   87aca:	3308      	adds	r3, #8
   87acc:	2e00      	cmp	r6, #0
   87ace:	d0f7      	beq.n	87ac0 <__sfvwrite_r+0x1e0>
   87ad0:	4632      	mov	r2, r6
   87ad2:	210a      	movs	r1, #10
   87ad4:	4628      	mov	r0, r5
   87ad6:	f000 fc1b 	bl	88310 <memchr>
   87ada:	2800      	cmp	r0, #0
   87adc:	d069      	beq.n	87bb2 <__sfvwrite_r+0x2d2>
   87ade:	3001      	adds	r0, #1
   87ae0:	eba0 0905 	sub.w	r9, r0, r5
   87ae4:	e7c1      	b.n	87a6a <__sfvwrite_r+0x18a>
   87ae6:	6820      	ldr	r0, [r4, #0]
   87ae8:	6923      	ldr	r3, [r4, #16]
   87aea:	4298      	cmp	r0, r3
   87aec:	d81b      	bhi.n	87b26 <__sfvwrite_r+0x246>
   87aee:	6963      	ldr	r3, [r4, #20]
   87af0:	42b3      	cmp	r3, r6
   87af2:	d818      	bhi.n	87b26 <__sfvwrite_r+0x246>
   87af4:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
   87af8:	45b4      	cmp	ip, r6
   87afa:	bf28      	it	cs
   87afc:	46b4      	movcs	ip, r6
   87afe:	fb9c fcf3 	sdiv	ip, ip, r3
   87b02:	464a      	mov	r2, r9
   87b04:	fb03 f30c 	mul.w	r3, r3, ip
   87b08:	4640      	mov	r0, r8
   87b0a:	69e1      	ldr	r1, [r4, #28]
   87b0c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87b10:	47e0      	blx	ip
   87b12:	f1b0 0a00 	subs.w	sl, r0, #0
   87b16:	dd94      	ble.n	87a42 <__sfvwrite_r+0x162>
   87b18:	eba6 060a 	sub.w	r6, r6, sl
   87b1c:	e778      	b.n	87a10 <__sfvwrite_r+0x130>
   87b1e:	46b3      	mov	fp, r6
   87b20:	4632      	mov	r2, r6
   87b22:	6820      	ldr	r0, [r4, #0]
   87b24:	e766      	b.n	879f4 <__sfvwrite_r+0x114>
   87b26:	45b3      	cmp	fp, r6
   87b28:	46da      	mov	sl, fp
   87b2a:	bf28      	it	cs
   87b2c:	46b2      	movcs	sl, r6
   87b2e:	4649      	mov	r1, r9
   87b30:	4652      	mov	r2, sl
   87b32:	f000 fc35 	bl	883a0 <memmove>
   87b36:	68a3      	ldr	r3, [r4, #8]
   87b38:	6822      	ldr	r2, [r4, #0]
   87b3a:	eba3 030a 	sub.w	r3, r3, sl
   87b3e:	4452      	add	r2, sl
   87b40:	60a3      	str	r3, [r4, #8]
   87b42:	6022      	str	r2, [r4, #0]
   87b44:	2b00      	cmp	r3, #0
   87b46:	d1e7      	bne.n	87b18 <__sfvwrite_r+0x238>
   87b48:	4621      	mov	r1, r4
   87b4a:	4640      	mov	r0, r8
   87b4c:	f7ff fc18 	bl	87380 <_fflush_r>
   87b50:	2800      	cmp	r0, #0
   87b52:	d0e1      	beq.n	87b18 <__sfvwrite_r+0x238>
   87b54:	e775      	b.n	87a42 <__sfvwrite_r+0x162>
   87b56:	4629      	mov	r1, r5
   87b58:	4693      	mov	fp, r2
   87b5a:	9201      	str	r2, [sp, #4]
   87b5c:	f000 fc20 	bl	883a0 <memmove>
   87b60:	68a3      	ldr	r3, [r4, #8]
   87b62:	9a01      	ldr	r2, [sp, #4]
   87b64:	1a9b      	subs	r3, r3, r2
   87b66:	60a3      	str	r3, [r4, #8]
   87b68:	6823      	ldr	r3, [r4, #0]
   87b6a:	441a      	add	r2, r3
   87b6c:	6022      	str	r2, [r4, #0]
   87b6e:	e795      	b.n	87a9c <__sfvwrite_r+0x1bc>
   87b70:	4629      	mov	r1, r5
   87b72:	465a      	mov	r2, fp
   87b74:	f000 fc14 	bl	883a0 <memmove>
   87b78:	6823      	ldr	r3, [r4, #0]
   87b7a:	4621      	mov	r1, r4
   87b7c:	445b      	add	r3, fp
   87b7e:	4640      	mov	r0, r8
   87b80:	6023      	str	r3, [r4, #0]
   87b82:	f7ff fbfd 	bl	87380 <_fflush_r>
   87b86:	2800      	cmp	r0, #0
   87b88:	d088      	beq.n	87a9c <__sfvwrite_r+0x1bc>
   87b8a:	e75a      	b.n	87a42 <__sfvwrite_r+0x162>
   87b8c:	4640      	mov	r0, r8
   87b8e:	f001 f833 	bl	88bf8 <_realloc_r>
   87b92:	4603      	mov	r3, r0
   87b94:	2800      	cmp	r0, #0
   87b96:	f47f af22 	bne.w	879de <__sfvwrite_r+0xfe>
   87b9a:	4640      	mov	r0, r8
   87b9c:	6921      	ldr	r1, [r4, #16]
   87b9e:	f7ff fd9f 	bl	876e0 <_free_r>
   87ba2:	220c      	movs	r2, #12
   87ba4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87ba8:	f8c8 2000 	str.w	r2, [r8]
   87bac:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   87bb0:	e749      	b.n	87a46 <__sfvwrite_r+0x166>
   87bb2:	1c72      	adds	r2, r6, #1
   87bb4:	4691      	mov	r9, r2
   87bb6:	e759      	b.n	87a6c <__sfvwrite_r+0x18c>
   87bb8:	220c      	movs	r2, #12
   87bba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87bbe:	f8c8 2000 	str.w	r2, [r8]
   87bc2:	e740      	b.n	87a46 <__sfvwrite_r+0x166>
   87bc4:	f04f 30ff 	mov.w	r0, #4294967295
   87bc8:	e6bc      	b.n	87944 <__sfvwrite_r+0x64>
   87bca:	bf00      	nop
   87bcc:	7ffffc00 	.word	0x7ffffc00

00087bd0 <_fwalk_reent>:
   87bd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   87bd4:	f04f 0900 	mov.w	r9, #0
   87bd8:	4607      	mov	r7, r0
   87bda:	4688      	mov	r8, r1
   87bdc:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
   87be0:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   87be4:	3d01      	subs	r5, #1
   87be6:	d410      	bmi.n	87c0a <_fwalk_reent+0x3a>
   87be8:	89a3      	ldrh	r3, [r4, #12]
   87bea:	3d01      	subs	r5, #1
   87bec:	2b01      	cmp	r3, #1
   87bee:	d908      	bls.n	87c02 <_fwalk_reent+0x32>
   87bf0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   87bf4:	3301      	adds	r3, #1
   87bf6:	d004      	beq.n	87c02 <_fwalk_reent+0x32>
   87bf8:	4621      	mov	r1, r4
   87bfa:	4638      	mov	r0, r7
   87bfc:	47c0      	blx	r8
   87bfe:	ea49 0900 	orr.w	r9, r9, r0
   87c02:	1c6b      	adds	r3, r5, #1
   87c04:	f104 0468 	add.w	r4, r4, #104	; 0x68
   87c08:	d1ee      	bne.n	87be8 <_fwalk_reent+0x18>
   87c0a:	6836      	ldr	r6, [r6, #0]
   87c0c:	2e00      	cmp	r6, #0
   87c0e:	d1e7      	bne.n	87be0 <_fwalk_reent+0x10>
   87c10:	4648      	mov	r0, r9
   87c12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   87c16:	bf00      	nop

00087c18 <__locale_mb_cur_max>:
   87c18:	4b01      	ldr	r3, [pc, #4]	; (87c20 <__locale_mb_cur_max+0x8>)
   87c1a:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   87c1e:	4770      	bx	lr
   87c20:	200007dc 	.word	0x200007dc

00087c24 <_localeconv_r>:
   87c24:	4800      	ldr	r0, [pc, #0]	; (87c28 <_localeconv_r+0x4>)
   87c26:	4770      	bx	lr
   87c28:	200008cc 	.word	0x200008cc

00087c2c <__retarget_lock_init_recursive>:
   87c2c:	4770      	bx	lr
   87c2e:	bf00      	nop

00087c30 <__retarget_lock_close_recursive>:
   87c30:	4770      	bx	lr
   87c32:	bf00      	nop

00087c34 <__retarget_lock_acquire_recursive>:
   87c34:	4770      	bx	lr
   87c36:	bf00      	nop

00087c38 <__retarget_lock_release_recursive>:
   87c38:	4770      	bx	lr
   87c3a:	bf00      	nop

00087c3c <__smakebuf_r>:
   87c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   87c40:	898b      	ldrh	r3, [r1, #12]
   87c42:	460c      	mov	r4, r1
   87c44:	0799      	lsls	r1, r3, #30
   87c46:	b096      	sub	sp, #88	; 0x58
   87c48:	d508      	bpl.n	87c5c <__smakebuf_r+0x20>
   87c4a:	2201      	movs	r2, #1
   87c4c:	f104 0343 	add.w	r3, r4, #67	; 0x43
   87c50:	e9c4 3204 	strd	r3, r2, [r4, #16]
   87c54:	6023      	str	r3, [r4, #0]
   87c56:	b016      	add	sp, #88	; 0x58
   87c58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87c5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   87c60:	4606      	mov	r6, r0
   87c62:	2900      	cmp	r1, #0
   87c64:	db27      	blt.n	87cb6 <__smakebuf_r+0x7a>
   87c66:	466a      	mov	r2, sp
   87c68:	f001 fc90 	bl	8958c <_fstat_r>
   87c6c:	2800      	cmp	r0, #0
   87c6e:	db21      	blt.n	87cb4 <__smakebuf_r+0x78>
   87c70:	9d01      	ldr	r5, [sp, #4]
   87c72:	f44f 6880 	mov.w	r8, #1024	; 0x400
   87c76:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   87c7a:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
   87c7e:	fab5 f585 	clz	r5, r5
   87c82:	f44f 6700 	mov.w	r7, #2048	; 0x800
   87c86:	096d      	lsrs	r5, r5, #5
   87c88:	4641      	mov	r1, r8
   87c8a:	4630      	mov	r0, r6
   87c8c:	f000 f87e 	bl	87d8c <_malloc_r>
   87c90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87c94:	b1f0      	cbz	r0, 87cd4 <__smakebuf_r+0x98>
   87c96:	4a20      	ldr	r2, [pc, #128]	; (87d18 <__smakebuf_r+0xdc>)
   87c98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   87c9c:	63f2      	str	r2, [r6, #60]	; 0x3c
   87c9e:	f8c4 8014 	str.w	r8, [r4, #20]
   87ca2:	81a3      	strh	r3, [r4, #12]
   87ca4:	6020      	str	r0, [r4, #0]
   87ca6:	6120      	str	r0, [r4, #16]
   87ca8:	bb35      	cbnz	r5, 87cf8 <__smakebuf_r+0xbc>
   87caa:	433b      	orrs	r3, r7
   87cac:	81a3      	strh	r3, [r4, #12]
   87cae:	b016      	add	sp, #88	; 0x58
   87cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87cb4:	89a3      	ldrh	r3, [r4, #12]
   87cb6:	f013 0580 	ands.w	r5, r3, #128	; 0x80
   87cba:	d019      	beq.n	87cf0 <__smakebuf_r+0xb4>
   87cbc:	f04f 0840 	mov.w	r8, #64	; 0x40
   87cc0:	4630      	mov	r0, r6
   87cc2:	4641      	mov	r1, r8
   87cc4:	2500      	movs	r5, #0
   87cc6:	f000 f861 	bl	87d8c <_malloc_r>
   87cca:	462f      	mov	r7, r5
   87ccc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87cd0:	2800      	cmp	r0, #0
   87cd2:	d1e0      	bne.n	87c96 <__smakebuf_r+0x5a>
   87cd4:	059a      	lsls	r2, r3, #22
   87cd6:	d4be      	bmi.n	87c56 <__smakebuf_r+0x1a>
   87cd8:	2101      	movs	r1, #1
   87cda:	f023 0303 	bic.w	r3, r3, #3
   87cde:	f104 0243 	add.w	r2, r4, #67	; 0x43
   87ce2:	f043 0302 	orr.w	r3, r3, #2
   87ce6:	e9c4 2104 	strd	r2, r1, [r4, #16]
   87cea:	81a3      	strh	r3, [r4, #12]
   87cec:	6022      	str	r2, [r4, #0]
   87cee:	e7b2      	b.n	87c56 <__smakebuf_r+0x1a>
   87cf0:	f44f 6880 	mov.w	r8, #1024	; 0x400
   87cf4:	462f      	mov	r7, r5
   87cf6:	e7c7      	b.n	87c88 <__smakebuf_r+0x4c>
   87cf8:	4630      	mov	r0, r6
   87cfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   87cfe:	f001 fc59 	bl	895b4 <_isatty_r>
   87d02:	b910      	cbnz	r0, 87d0a <__smakebuf_r+0xce>
   87d04:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87d08:	e7cf      	b.n	87caa <__smakebuf_r+0x6e>
   87d0a:	89a3      	ldrh	r3, [r4, #12]
   87d0c:	f023 0303 	bic.w	r3, r3, #3
   87d10:	f043 0301 	orr.w	r3, r3, #1
   87d14:	b21b      	sxth	r3, r3
   87d16:	e7c8      	b.n	87caa <__smakebuf_r+0x6e>
   87d18:	000873dd 	.word	0x000873dd

00087d1c <__swhatbuf_r>:
   87d1c:	b570      	push	{r4, r5, r6, lr}
   87d1e:	460c      	mov	r4, r1
   87d20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   87d24:	4615      	mov	r5, r2
   87d26:	2900      	cmp	r1, #0
   87d28:	461e      	mov	r6, r3
   87d2a:	b096      	sub	sp, #88	; 0x58
   87d2c:	db14      	blt.n	87d58 <__swhatbuf_r+0x3c>
   87d2e:	466a      	mov	r2, sp
   87d30:	f001 fc2c 	bl	8958c <_fstat_r>
   87d34:	2800      	cmp	r0, #0
   87d36:	db0f      	blt.n	87d58 <__swhatbuf_r+0x3c>
   87d38:	9a01      	ldr	r2, [sp, #4]
   87d3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   87d3e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   87d42:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   87d46:	fab2 f282 	clz	r2, r2
   87d4a:	f44f 6000 	mov.w	r0, #2048	; 0x800
   87d4e:	0952      	lsrs	r2, r2, #5
   87d50:	6032      	str	r2, [r6, #0]
   87d52:	602b      	str	r3, [r5, #0]
   87d54:	b016      	add	sp, #88	; 0x58
   87d56:	bd70      	pop	{r4, r5, r6, pc}
   87d58:	2300      	movs	r3, #0
   87d5a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   87d5e:	6033      	str	r3, [r6, #0]
   87d60:	f011 0080 	ands.w	r0, r1, #128	; 0x80
   87d64:	d004      	beq.n	87d70 <__swhatbuf_r+0x54>
   87d66:	2240      	movs	r2, #64	; 0x40
   87d68:	4618      	mov	r0, r3
   87d6a:	602a      	str	r2, [r5, #0]
   87d6c:	b016      	add	sp, #88	; 0x58
   87d6e:	bd70      	pop	{r4, r5, r6, pc}
   87d70:	f44f 6380 	mov.w	r3, #1024	; 0x400
   87d74:	602b      	str	r3, [r5, #0]
   87d76:	b016      	add	sp, #88	; 0x58
   87d78:	bd70      	pop	{r4, r5, r6, pc}
   87d7a:	bf00      	nop

00087d7c <malloc>:
   87d7c:	4b02      	ldr	r3, [pc, #8]	; (87d88 <malloc+0xc>)
   87d7e:	4601      	mov	r1, r0
   87d80:	6818      	ldr	r0, [r3, #0]
   87d82:	f000 b803 	b.w	87d8c <_malloc_r>
   87d86:	bf00      	nop
   87d88:	200003ac 	.word	0x200003ac

00087d8c <_malloc_r>:
   87d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87d90:	f101 050b 	add.w	r5, r1, #11
   87d94:	2d16      	cmp	r5, #22
   87d96:	4606      	mov	r6, r0
   87d98:	b083      	sub	sp, #12
   87d9a:	d825      	bhi.n	87de8 <_malloc_r+0x5c>
   87d9c:	2910      	cmp	r1, #16
   87d9e:	f200 80b8 	bhi.w	87f12 <_malloc_r+0x186>
   87da2:	f000 fb79 	bl	88498 <__malloc_lock>
   87da6:	2510      	movs	r5, #16
   87da8:	2218      	movs	r2, #24
   87daa:	f04f 0c02 	mov.w	ip, #2
   87dae:	4fb5      	ldr	r7, [pc, #724]	; (88084 <_malloc_r+0x2f8>)
   87db0:	443a      	add	r2, r7
   87db2:	6853      	ldr	r3, [r2, #4]
   87db4:	f1a2 0108 	sub.w	r1, r2, #8
   87db8:	428b      	cmp	r3, r1
   87dba:	f000 80b7 	beq.w	87f2c <_malloc_r+0x1a0>
   87dbe:	685a      	ldr	r2, [r3, #4]
   87dc0:	68d9      	ldr	r1, [r3, #12]
   87dc2:	f022 0203 	bic.w	r2, r2, #3
   87dc6:	441a      	add	r2, r3
   87dc8:	689c      	ldr	r4, [r3, #8]
   87dca:	4630      	mov	r0, r6
   87dcc:	60e1      	str	r1, [r4, #12]
   87dce:	608c      	str	r4, [r1, #8]
   87dd0:	6851      	ldr	r1, [r2, #4]
   87dd2:	f103 0408 	add.w	r4, r3, #8
   87dd6:	f041 0101 	orr.w	r1, r1, #1
   87dda:	6051      	str	r1, [r2, #4]
   87ddc:	f000 fb62 	bl	884a4 <__malloc_unlock>
   87de0:	4620      	mov	r0, r4
   87de2:	b003      	add	sp, #12
   87de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87de8:	f035 0507 	bics.w	r5, r5, #7
   87dec:	f100 8091 	bmi.w	87f12 <_malloc_r+0x186>
   87df0:	42a9      	cmp	r1, r5
   87df2:	f200 808e 	bhi.w	87f12 <_malloc_r+0x186>
   87df6:	f000 fb4f 	bl	88498 <__malloc_lock>
   87dfa:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   87dfe:	f0c0 8194 	bcc.w	8812a <_malloc_r+0x39e>
   87e02:	0a6b      	lsrs	r3, r5, #9
   87e04:	f000 808c 	beq.w	87f20 <_malloc_r+0x194>
   87e08:	2b04      	cmp	r3, #4
   87e0a:	f200 816a 	bhi.w	880e2 <_malloc_r+0x356>
   87e0e:	09ab      	lsrs	r3, r5, #6
   87e10:	f103 0c39 	add.w	ip, r3, #57	; 0x39
   87e14:	f103 0438 	add.w	r4, r3, #56	; 0x38
   87e18:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   87e1c:	4f99      	ldr	r7, [pc, #612]	; (88084 <_malloc_r+0x2f8>)
   87e1e:	4438      	add	r0, r7
   87e20:	6843      	ldr	r3, [r0, #4]
   87e22:	3808      	subs	r0, #8
   87e24:	4298      	cmp	r0, r3
   87e26:	d106      	bne.n	87e36 <_malloc_r+0xaa>
   87e28:	e00c      	b.n	87e44 <_malloc_r+0xb8>
   87e2a:	2900      	cmp	r1, #0
   87e2c:	f280 8126 	bge.w	8807c <_malloc_r+0x2f0>
   87e30:	68db      	ldr	r3, [r3, #12]
   87e32:	4298      	cmp	r0, r3
   87e34:	d006      	beq.n	87e44 <_malloc_r+0xb8>
   87e36:	685a      	ldr	r2, [r3, #4]
   87e38:	f022 0203 	bic.w	r2, r2, #3
   87e3c:	1b51      	subs	r1, r2, r5
   87e3e:	290f      	cmp	r1, #15
   87e40:	ddf3      	ble.n	87e2a <_malloc_r+0x9e>
   87e42:	46a4      	mov	ip, r4
   87e44:	693c      	ldr	r4, [r7, #16]
   87e46:	f8df e240 	ldr.w	lr, [pc, #576]	; 88088 <_malloc_r+0x2fc>
   87e4a:	4574      	cmp	r4, lr
   87e4c:	d07a      	beq.n	87f44 <_malloc_r+0x1b8>
   87e4e:	6862      	ldr	r2, [r4, #4]
   87e50:	f022 0203 	bic.w	r2, r2, #3
   87e54:	1b53      	subs	r3, r2, r5
   87e56:	2b0f      	cmp	r3, #15
   87e58:	f300 8176 	bgt.w	88148 <_malloc_r+0x3bc>
   87e5c:	2b00      	cmp	r3, #0
   87e5e:	e9c7 ee04 	strd	lr, lr, [r7, #16]
   87e62:	f280 8167 	bge.w	88134 <_malloc_r+0x3a8>
   87e66:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   87e6a:	f080 8119 	bcs.w	880a0 <_malloc_r+0x314>
   87e6e:	2101      	movs	r1, #1
   87e70:	08d3      	lsrs	r3, r2, #3
   87e72:	0952      	lsrs	r2, r2, #5
   87e74:	440b      	add	r3, r1
   87e76:	4091      	lsls	r1, r2
   87e78:	687a      	ldr	r2, [r7, #4]
   87e7a:	f857 0033 	ldr.w	r0, [r7, r3, lsl #3]
   87e7e:	430a      	orrs	r2, r1
   87e80:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
   87e84:	3908      	subs	r1, #8
   87e86:	60a0      	str	r0, [r4, #8]
   87e88:	60e1      	str	r1, [r4, #12]
   87e8a:	607a      	str	r2, [r7, #4]
   87e8c:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   87e90:	60c4      	str	r4, [r0, #12]
   87e92:	2101      	movs	r1, #1
   87e94:	ea4f 03ac 	mov.w	r3, ip, asr #2
   87e98:	4099      	lsls	r1, r3
   87e9a:	4291      	cmp	r1, r2
   87e9c:	d859      	bhi.n	87f52 <_malloc_r+0x1c6>
   87e9e:	4211      	tst	r1, r2
   87ea0:	d106      	bne.n	87eb0 <_malloc_r+0x124>
   87ea2:	f02c 0c03 	bic.w	ip, ip, #3
   87ea6:	0049      	lsls	r1, r1, #1
   87ea8:	4211      	tst	r1, r2
   87eaa:	f10c 0c04 	add.w	ip, ip, #4
   87eae:	d0fa      	beq.n	87ea6 <_malloc_r+0x11a>
   87eb0:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
   87eb4:	4648      	mov	r0, r9
   87eb6:	4664      	mov	r4, ip
   87eb8:	f8d0 800c 	ldr.w	r8, [r0, #12]
   87ebc:	4540      	cmp	r0, r8
   87ebe:	d108      	bne.n	87ed2 <_malloc_r+0x146>
   87ec0:	e11c      	b.n	880fc <_malloc_r+0x370>
   87ec2:	2b00      	cmp	r3, #0
   87ec4:	f280 8121 	bge.w	8810a <_malloc_r+0x37e>
   87ec8:	f8d8 800c 	ldr.w	r8, [r8, #12]
   87ecc:	4540      	cmp	r0, r8
   87ece:	f000 8115 	beq.w	880fc <_malloc_r+0x370>
   87ed2:	f8d8 2004 	ldr.w	r2, [r8, #4]
   87ed6:	f022 0203 	bic.w	r2, r2, #3
   87eda:	1b53      	subs	r3, r2, r5
   87edc:	2b0f      	cmp	r3, #15
   87ede:	ddf0      	ble.n	87ec2 <_malloc_r+0x136>
   87ee0:	eb08 0105 	add.w	r1, r8, r5
   87ee4:	f045 0501 	orr.w	r5, r5, #1
   87ee8:	f8c8 5004 	str.w	r5, [r8, #4]
   87eec:	4630      	mov	r0, r6
   87eee:	e9d8 6402 	ldrd	r6, r4, [r8, #8]
   87ef2:	60f4      	str	r4, [r6, #12]
   87ef4:	60a6      	str	r6, [r4, #8]
   87ef6:	f043 0401 	orr.w	r4, r3, #1
   87efa:	e9c7 1104 	strd	r1, r1, [r7, #16]
   87efe:	604c      	str	r4, [r1, #4]
   87f00:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   87f04:	f848 3002 	str.w	r3, [r8, r2]
   87f08:	f000 facc 	bl	884a4 <__malloc_unlock>
   87f0c:	f108 0408 	add.w	r4, r8, #8
   87f10:	e002      	b.n	87f18 <_malloc_r+0x18c>
   87f12:	230c      	movs	r3, #12
   87f14:	2400      	movs	r4, #0
   87f16:	6033      	str	r3, [r6, #0]
   87f18:	4620      	mov	r0, r4
   87f1a:	b003      	add	sp, #12
   87f1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87f20:	f44f 7000 	mov.w	r0, #512	; 0x200
   87f24:	f04f 0c40 	mov.w	ip, #64	; 0x40
   87f28:	243f      	movs	r4, #63	; 0x3f
   87f2a:	e777      	b.n	87e1c <_malloc_r+0x90>
   87f2c:	68d3      	ldr	r3, [r2, #12]
   87f2e:	429a      	cmp	r2, r3
   87f30:	bf08      	it	eq
   87f32:	f10c 0c02 	addeq.w	ip, ip, #2
   87f36:	f47f af42 	bne.w	87dbe <_malloc_r+0x32>
   87f3a:	693c      	ldr	r4, [r7, #16]
   87f3c:	f8df e148 	ldr.w	lr, [pc, #328]	; 88088 <_malloc_r+0x2fc>
   87f40:	4574      	cmp	r4, lr
   87f42:	d184      	bne.n	87e4e <_malloc_r+0xc2>
   87f44:	2101      	movs	r1, #1
   87f46:	687a      	ldr	r2, [r7, #4]
   87f48:	ea4f 03ac 	mov.w	r3, ip, asr #2
   87f4c:	4099      	lsls	r1, r3
   87f4e:	4291      	cmp	r1, r2
   87f50:	d9a5      	bls.n	87e9e <_malloc_r+0x112>
   87f52:	68bc      	ldr	r4, [r7, #8]
   87f54:	6863      	ldr	r3, [r4, #4]
   87f56:	f023 0903 	bic.w	r9, r3, #3
   87f5a:	454d      	cmp	r5, r9
   87f5c:	d803      	bhi.n	87f66 <_malloc_r+0x1da>
   87f5e:	eba9 0305 	sub.w	r3, r9, r5
   87f62:	2b0f      	cmp	r3, #15
   87f64:	dc7a      	bgt.n	8805c <_malloc_r+0x2d0>
   87f66:	f8df b124 	ldr.w	fp, [pc, #292]	; 8808c <_malloc_r+0x300>
   87f6a:	4b49      	ldr	r3, [pc, #292]	; (88090 <_malloc_r+0x304>)
   87f6c:	f8db 2000 	ldr.w	r2, [fp]
   87f70:	681b      	ldr	r3, [r3, #0]
   87f72:	3201      	adds	r2, #1
   87f74:	442b      	add	r3, r5
   87f76:	eb04 0a09 	add.w	sl, r4, r9
   87f7a:	f000 812f 	beq.w	881dc <_malloc_r+0x450>
   87f7e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   87f82:	330f      	adds	r3, #15
   87f84:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
   87f88:	f028 080f 	bic.w	r8, r8, #15
   87f8c:	4641      	mov	r1, r8
   87f8e:	4630      	mov	r0, r6
   87f90:	f001 f858 	bl	89044 <_sbrk_r>
   87f94:	1c41      	adds	r1, r0, #1
   87f96:	4602      	mov	r2, r0
   87f98:	f000 80ef 	beq.w	8817a <_malloc_r+0x3ee>
   87f9c:	4582      	cmp	sl, r0
   87f9e:	f200 80ea 	bhi.w	88176 <_malloc_r+0x3ea>
   87fa2:	4b3c      	ldr	r3, [pc, #240]	; (88094 <_malloc_r+0x308>)
   87fa4:	6819      	ldr	r1, [r3, #0]
   87fa6:	4441      	add	r1, r8
   87fa8:	4608      	mov	r0, r1
   87faa:	6019      	str	r1, [r3, #0]
   87fac:	f000 8149 	beq.w	88242 <_malloc_r+0x4b6>
   87fb0:	f8db 1000 	ldr.w	r1, [fp]
   87fb4:	9301      	str	r3, [sp, #4]
   87fb6:	3101      	adds	r1, #1
   87fb8:	bf1b      	ittet	ne
   87fba:	eba2 0a0a 	subne.w	sl, r2, sl
   87fbe:	4450      	addne	r0, sl
   87fc0:	f8cb 2000 	streq.w	r2, [fp]
   87fc4:	6018      	strne	r0, [r3, #0]
   87fc6:	f012 0b07 	ands.w	fp, r2, #7
   87fca:	f000 8111 	beq.w	881f0 <_malloc_r+0x464>
   87fce:	f1cb 0108 	rsb	r1, fp, #8
   87fd2:	440a      	add	r2, r1
   87fd4:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
   87fd8:	4490      	add	r8, r2
   87fda:	3108      	adds	r1, #8
   87fdc:	eba1 0108 	sub.w	r1, r1, r8
   87fe0:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   87fe4:	4651      	mov	r1, sl
   87fe6:	4630      	mov	r0, r6
   87fe8:	9200      	str	r2, [sp, #0]
   87fea:	f001 f82b 	bl	89044 <_sbrk_r>
   87fee:	1c42      	adds	r2, r0, #1
   87ff0:	e9dd 2300 	ldrd	r2, r3, [sp]
   87ff4:	f000 814b 	beq.w	8828e <_malloc_r+0x502>
   87ff8:	1a80      	subs	r0, r0, r2
   87ffa:	eb00 080a 	add.w	r8, r0, sl
   87ffe:	6819      	ldr	r1, [r3, #0]
   88000:	f048 0001 	orr.w	r0, r8, #1
   88004:	4451      	add	r1, sl
   88006:	42bc      	cmp	r4, r7
   88008:	60ba      	str	r2, [r7, #8]
   8800a:	6019      	str	r1, [r3, #0]
   8800c:	6050      	str	r0, [r2, #4]
   8800e:	f000 8124 	beq.w	8825a <_malloc_r+0x4ce>
   88012:	f1b9 0f0f 	cmp.w	r9, #15
   88016:	f240 8122 	bls.w	8825e <_malloc_r+0x4d2>
   8801a:	f04f 0e05 	mov.w	lr, #5
   8801e:	6860      	ldr	r0, [r4, #4]
   88020:	f1a9 0c0c 	sub.w	ip, r9, #12
   88024:	f02c 0c07 	bic.w	ip, ip, #7
   88028:	f000 0001 	and.w	r0, r0, #1
   8802c:	ea40 000c 	orr.w	r0, r0, ip
   88030:	6060      	str	r0, [r4, #4]
   88032:	f1bc 0f0f 	cmp.w	ip, #15
   88036:	eb04 000c 	add.w	r0, r4, ip
   8803a:	e9c0 ee01 	strd	lr, lr, [r0, #4]
   8803e:	f200 812e 	bhi.w	8829e <_malloc_r+0x512>
   88042:	4614      	mov	r4, r2
   88044:	6850      	ldr	r0, [r2, #4]
   88046:	4b14      	ldr	r3, [pc, #80]	; (88098 <_malloc_r+0x30c>)
   88048:	681a      	ldr	r2, [r3, #0]
   8804a:	428a      	cmp	r2, r1
   8804c:	bf38      	it	cc
   8804e:	6019      	strcc	r1, [r3, #0]
   88050:	4b12      	ldr	r3, [pc, #72]	; (8809c <_malloc_r+0x310>)
   88052:	681a      	ldr	r2, [r3, #0]
   88054:	428a      	cmp	r2, r1
   88056:	bf38      	it	cc
   88058:	6019      	strcc	r1, [r3, #0]
   8805a:	e090      	b.n	8817e <_malloc_r+0x3f2>
   8805c:	1962      	adds	r2, r4, r5
   8805e:	f043 0301 	orr.w	r3, r3, #1
   88062:	f045 0501 	orr.w	r5, r5, #1
   88066:	6065      	str	r5, [r4, #4]
   88068:	4630      	mov	r0, r6
   8806a:	60ba      	str	r2, [r7, #8]
   8806c:	3408      	adds	r4, #8
   8806e:	6053      	str	r3, [r2, #4]
   88070:	f000 fa18 	bl	884a4 <__malloc_unlock>
   88074:	4620      	mov	r0, r4
   88076:	b003      	add	sp, #12
   88078:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8807c:	68d9      	ldr	r1, [r3, #12]
   8807e:	441a      	add	r2, r3
   88080:	e6a2      	b.n	87dc8 <_malloc_r+0x3c>
   88082:	bf00      	nop
   88084:	20000948 	.word	0x20000948
   88088:	20000950 	.word	0x20000950
   8808c:	20000d50 	.word	0x20000d50
   88090:	2000370c 	.word	0x2000370c
   88094:	200036dc 	.word	0x200036dc
   88098:	20003704 	.word	0x20003704
   8809c:	20003708 	.word	0x20003708
   880a0:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
   880a4:	ea4f 2352 	mov.w	r3, r2, lsr #9
   880a8:	d35f      	bcc.n	8816a <_malloc_r+0x3de>
   880aa:	2b14      	cmp	r3, #20
   880ac:	f200 80b1 	bhi.w	88212 <_malloc_r+0x486>
   880b0:	f103 015c 	add.w	r1, r3, #92	; 0x5c
   880b4:	00c9      	lsls	r1, r1, #3
   880b6:	335b      	adds	r3, #91	; 0x5b
   880b8:	1878      	adds	r0, r7, r1
   880ba:	5879      	ldr	r1, [r7, r1]
   880bc:	3808      	subs	r0, #8
   880be:	4288      	cmp	r0, r1
   880c0:	f000 808f 	beq.w	881e2 <_malloc_r+0x456>
   880c4:	684b      	ldr	r3, [r1, #4]
   880c6:	f023 0303 	bic.w	r3, r3, #3
   880ca:	4293      	cmp	r3, r2
   880cc:	d902      	bls.n	880d4 <_malloc_r+0x348>
   880ce:	6889      	ldr	r1, [r1, #8]
   880d0:	4288      	cmp	r0, r1
   880d2:	d1f7      	bne.n	880c4 <_malloc_r+0x338>
   880d4:	68c8      	ldr	r0, [r1, #12]
   880d6:	687a      	ldr	r2, [r7, #4]
   880d8:	e9c4 1002 	strd	r1, r0, [r4, #8]
   880dc:	6084      	str	r4, [r0, #8]
   880de:	60cc      	str	r4, [r1, #12]
   880e0:	e6d7      	b.n	87e92 <_malloc_r+0x106>
   880e2:	2b14      	cmp	r3, #20
   880e4:	d959      	bls.n	8819a <_malloc_r+0x40e>
   880e6:	2b54      	cmp	r3, #84	; 0x54
   880e8:	f200 809b 	bhi.w	88222 <_malloc_r+0x496>
   880ec:	0b2b      	lsrs	r3, r5, #12
   880ee:	f103 0c6f 	add.w	ip, r3, #111	; 0x6f
   880f2:	f103 046e 	add.w	r4, r3, #110	; 0x6e
   880f6:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   880fa:	e68f      	b.n	87e1c <_malloc_r+0x90>
   880fc:	3401      	adds	r4, #1
   880fe:	07a3      	lsls	r3, r4, #30
   88100:	f100 0008 	add.w	r0, r0, #8
   88104:	f47f aed8 	bne.w	87eb8 <_malloc_r+0x12c>
   88108:	e053      	b.n	881b2 <_malloc_r+0x426>
   8810a:	4644      	mov	r4, r8
   8810c:	4442      	add	r2, r8
   8810e:	6853      	ldr	r3, [r2, #4]
   88110:	f8d8 100c 	ldr.w	r1, [r8, #12]
   88114:	f043 0301 	orr.w	r3, r3, #1
   88118:	6053      	str	r3, [r2, #4]
   8811a:	f854 3f08 	ldr.w	r3, [r4, #8]!
   8811e:	4630      	mov	r0, r6
   88120:	60d9      	str	r1, [r3, #12]
   88122:	608b      	str	r3, [r1, #8]
   88124:	f000 f9be 	bl	884a4 <__malloc_unlock>
   88128:	e6f6      	b.n	87f18 <_malloc_r+0x18c>
   8812a:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   8812e:	f105 0208 	add.w	r2, r5, #8
   88132:	e63c      	b.n	87dae <_malloc_r+0x22>
   88134:	4422      	add	r2, r4
   88136:	6853      	ldr	r3, [r2, #4]
   88138:	4630      	mov	r0, r6
   8813a:	f043 0301 	orr.w	r3, r3, #1
   8813e:	6053      	str	r3, [r2, #4]
   88140:	f000 f9b0 	bl	884a4 <__malloc_unlock>
   88144:	3408      	adds	r4, #8
   88146:	e6e7      	b.n	87f18 <_malloc_r+0x18c>
   88148:	1961      	adds	r1, r4, r5
   8814a:	f045 0501 	orr.w	r5, r5, #1
   8814e:	6065      	str	r5, [r4, #4]
   88150:	f043 0501 	orr.w	r5, r3, #1
   88154:	e9c7 1104 	strd	r1, r1, [r7, #16]
   88158:	4630      	mov	r0, r6
   8815a:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   8815e:	604d      	str	r5, [r1, #4]
   88160:	50a3      	str	r3, [r4, r2]
   88162:	f000 f99f 	bl	884a4 <__malloc_unlock>
   88166:	3408      	adds	r4, #8
   88168:	e6d6      	b.n	87f18 <_malloc_r+0x18c>
   8816a:	0993      	lsrs	r3, r2, #6
   8816c:	f103 0139 	add.w	r1, r3, #57	; 0x39
   88170:	00c9      	lsls	r1, r1, #3
   88172:	3338      	adds	r3, #56	; 0x38
   88174:	e7a0      	b.n	880b8 <_malloc_r+0x32c>
   88176:	42bc      	cmp	r4, r7
   88178:	d05e      	beq.n	88238 <_malloc_r+0x4ac>
   8817a:	68bc      	ldr	r4, [r7, #8]
   8817c:	6860      	ldr	r0, [r4, #4]
   8817e:	f020 0803 	bic.w	r8, r0, #3
   88182:	4545      	cmp	r5, r8
   88184:	eba8 0305 	sub.w	r3, r8, r5
   88188:	d802      	bhi.n	88190 <_malloc_r+0x404>
   8818a:	2b0f      	cmp	r3, #15
   8818c:	f73f af66 	bgt.w	8805c <_malloc_r+0x2d0>
   88190:	4630      	mov	r0, r6
   88192:	f000 f987 	bl	884a4 <__malloc_unlock>
   88196:	2400      	movs	r4, #0
   88198:	e6be      	b.n	87f18 <_malloc_r+0x18c>
   8819a:	f103 0c5c 	add.w	ip, r3, #92	; 0x5c
   8819e:	f103 045b 	add.w	r4, r3, #91	; 0x5b
   881a2:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   881a6:	e639      	b.n	87e1c <_malloc_r+0x90>
   881a8:	f859 3908 	ldr.w	r3, [r9], #-8
   881ac:	454b      	cmp	r3, r9
   881ae:	f040 8095 	bne.w	882dc <_malloc_r+0x550>
   881b2:	f01c 0f03 	tst.w	ip, #3
   881b6:	f10c 3cff 	add.w	ip, ip, #4294967295
   881ba:	d1f5      	bne.n	881a8 <_malloc_r+0x41c>
   881bc:	687b      	ldr	r3, [r7, #4]
   881be:	ea23 0301 	bic.w	r3, r3, r1
   881c2:	607b      	str	r3, [r7, #4]
   881c4:	0049      	lsls	r1, r1, #1
   881c6:	4299      	cmp	r1, r3
   881c8:	f63f aec3 	bhi.w	87f52 <_malloc_r+0x1c6>
   881cc:	b911      	cbnz	r1, 881d4 <_malloc_r+0x448>
   881ce:	e6c0      	b.n	87f52 <_malloc_r+0x1c6>
   881d0:	0049      	lsls	r1, r1, #1
   881d2:	3404      	adds	r4, #4
   881d4:	4219      	tst	r1, r3
   881d6:	d0fb      	beq.n	881d0 <_malloc_r+0x444>
   881d8:	46a4      	mov	ip, r4
   881da:	e669      	b.n	87eb0 <_malloc_r+0x124>
   881dc:	f103 0810 	add.w	r8, r3, #16
   881e0:	e6d4      	b.n	87f8c <_malloc_r+0x200>
   881e2:	2201      	movs	r2, #1
   881e4:	109b      	asrs	r3, r3, #2
   881e6:	409a      	lsls	r2, r3
   881e8:	687b      	ldr	r3, [r7, #4]
   881ea:	431a      	orrs	r2, r3
   881ec:	607a      	str	r2, [r7, #4]
   881ee:	e773      	b.n	880d8 <_malloc_r+0x34c>
   881f0:	eb02 0108 	add.w	r1, r2, r8
   881f4:	4249      	negs	r1, r1
   881f6:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   881fa:	4651      	mov	r1, sl
   881fc:	4630      	mov	r0, r6
   881fe:	9200      	str	r2, [sp, #0]
   88200:	f000 ff20 	bl	89044 <_sbrk_r>
   88204:	1c43      	adds	r3, r0, #1
   88206:	e9dd 2300 	ldrd	r2, r3, [sp]
   8820a:	f47f aef5 	bne.w	87ff8 <_malloc_r+0x26c>
   8820e:	46da      	mov	sl, fp
   88210:	e6f5      	b.n	87ffe <_malloc_r+0x272>
   88212:	2b54      	cmp	r3, #84	; 0x54
   88214:	d826      	bhi.n	88264 <_malloc_r+0x4d8>
   88216:	0b13      	lsrs	r3, r2, #12
   88218:	f103 016f 	add.w	r1, r3, #111	; 0x6f
   8821c:	00c9      	lsls	r1, r1, #3
   8821e:	336e      	adds	r3, #110	; 0x6e
   88220:	e74a      	b.n	880b8 <_malloc_r+0x32c>
   88222:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   88226:	d826      	bhi.n	88276 <_malloc_r+0x4ea>
   88228:	0beb      	lsrs	r3, r5, #15
   8822a:	f103 0c78 	add.w	ip, r3, #120	; 0x78
   8822e:	f103 0477 	add.w	r4, r3, #119	; 0x77
   88232:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   88236:	e5f1      	b.n	87e1c <_malloc_r+0x90>
   88238:	4b29      	ldr	r3, [pc, #164]	; (882e0 <_malloc_r+0x554>)
   8823a:	6818      	ldr	r0, [r3, #0]
   8823c:	4440      	add	r0, r8
   8823e:	6018      	str	r0, [r3, #0]
   88240:	e6b6      	b.n	87fb0 <_malloc_r+0x224>
   88242:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
   88246:	f1bc 0f00 	cmp.w	ip, #0
   8824a:	f47f aeb1 	bne.w	87fb0 <_malloc_r+0x224>
   8824e:	68bc      	ldr	r4, [r7, #8]
   88250:	44c8      	add	r8, r9
   88252:	f048 0001 	orr.w	r0, r8, #1
   88256:	6060      	str	r0, [r4, #4]
   88258:	e6f5      	b.n	88046 <_malloc_r+0x2ba>
   8825a:	4614      	mov	r4, r2
   8825c:	e6f3      	b.n	88046 <_malloc_r+0x2ba>
   8825e:	2301      	movs	r3, #1
   88260:	6053      	str	r3, [r2, #4]
   88262:	e795      	b.n	88190 <_malloc_r+0x404>
   88264:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   88268:	d824      	bhi.n	882b4 <_malloc_r+0x528>
   8826a:	0bd3      	lsrs	r3, r2, #15
   8826c:	f103 0178 	add.w	r1, r3, #120	; 0x78
   88270:	00c9      	lsls	r1, r1, #3
   88272:	3377      	adds	r3, #119	; 0x77
   88274:	e720      	b.n	880b8 <_malloc_r+0x32c>
   88276:	f240 5254 	movw	r2, #1364	; 0x554
   8827a:	4293      	cmp	r3, r2
   8827c:	d824      	bhi.n	882c8 <_malloc_r+0x53c>
   8827e:	0cab      	lsrs	r3, r5, #18
   88280:	f103 0c7d 	add.w	ip, r3, #125	; 0x7d
   88284:	f103 047c 	add.w	r4, r3, #124	; 0x7c
   88288:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   8828c:	e5c6      	b.n	87e1c <_malloc_r+0x90>
   8828e:	f1ab 0b08 	sub.w	fp, fp, #8
   88292:	44d8      	add	r8, fp
   88294:	f04f 0a00 	mov.w	sl, #0
   88298:	eba8 0802 	sub.w	r8, r8, r2
   8829c:	e6af      	b.n	87ffe <_malloc_r+0x272>
   8829e:	f104 0108 	add.w	r1, r4, #8
   882a2:	4630      	mov	r0, r6
   882a4:	9300      	str	r3, [sp, #0]
   882a6:	f7ff fa1b 	bl	876e0 <_free_r>
   882aa:	68bc      	ldr	r4, [r7, #8]
   882ac:	9b00      	ldr	r3, [sp, #0]
   882ae:	6860      	ldr	r0, [r4, #4]
   882b0:	6819      	ldr	r1, [r3, #0]
   882b2:	e6c8      	b.n	88046 <_malloc_r+0x2ba>
   882b4:	f240 5154 	movw	r1, #1364	; 0x554
   882b8:	428b      	cmp	r3, r1
   882ba:	d80b      	bhi.n	882d4 <_malloc_r+0x548>
   882bc:	0c93      	lsrs	r3, r2, #18
   882be:	f103 017d 	add.w	r1, r3, #125	; 0x7d
   882c2:	00c9      	lsls	r1, r1, #3
   882c4:	337c      	adds	r3, #124	; 0x7c
   882c6:	e6f7      	b.n	880b8 <_malloc_r+0x32c>
   882c8:	f44f 707e 	mov.w	r0, #1016	; 0x3f8
   882cc:	f04f 0c7f 	mov.w	ip, #127	; 0x7f
   882d0:	247e      	movs	r4, #126	; 0x7e
   882d2:	e5a3      	b.n	87e1c <_malloc_r+0x90>
   882d4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   882d8:	237e      	movs	r3, #126	; 0x7e
   882da:	e6ed      	b.n	880b8 <_malloc_r+0x32c>
   882dc:	687b      	ldr	r3, [r7, #4]
   882de:	e771      	b.n	881c4 <_malloc_r+0x438>
   882e0:	200036dc 	.word	0x200036dc

000882e4 <__ascii_mbtowc>:
   882e4:	b082      	sub	sp, #8
   882e6:	b149      	cbz	r1, 882fc <__ascii_mbtowc+0x18>
   882e8:	b15a      	cbz	r2, 88302 <__ascii_mbtowc+0x1e>
   882ea:	b16b      	cbz	r3, 88308 <__ascii_mbtowc+0x24>
   882ec:	7813      	ldrb	r3, [r2, #0]
   882ee:	600b      	str	r3, [r1, #0]
   882f0:	7812      	ldrb	r2, [r2, #0]
   882f2:	1e10      	subs	r0, r2, #0
   882f4:	bf18      	it	ne
   882f6:	2001      	movne	r0, #1
   882f8:	b002      	add	sp, #8
   882fa:	4770      	bx	lr
   882fc:	a901      	add	r1, sp, #4
   882fe:	2a00      	cmp	r2, #0
   88300:	d1f3      	bne.n	882ea <__ascii_mbtowc+0x6>
   88302:	4610      	mov	r0, r2
   88304:	b002      	add	sp, #8
   88306:	4770      	bx	lr
   88308:	f06f 0001 	mvn.w	r0, #1
   8830c:	e7f4      	b.n	882f8 <__ascii_mbtowc+0x14>
   8830e:	bf00      	nop

00088310 <memchr>:
   88310:	fa5f fc81 	uxtb.w	ip, r1
   88314:	0781      	lsls	r1, r0, #30
   88316:	d010      	beq.n	8833a <memchr+0x2a>
   88318:	4603      	mov	r3, r0
   8831a:	1e51      	subs	r1, r2, #1
   8831c:	b92a      	cbnz	r2, 8832a <memchr+0x1a>
   8831e:	e00a      	b.n	88336 <memchr+0x26>
   88320:	079a      	lsls	r2, r3, #30
   88322:	4618      	mov	r0, r3
   88324:	d00a      	beq.n	8833c <memchr+0x2c>
   88326:	3901      	subs	r1, #1
   88328:	d305      	bcc.n	88336 <memchr+0x26>
   8832a:	4618      	mov	r0, r3
   8832c:	f813 2b01 	ldrb.w	r2, [r3], #1
   88330:	4562      	cmp	r2, ip
   88332:	d1f5      	bne.n	88320 <memchr+0x10>
   88334:	4770      	bx	lr
   88336:	2000      	movs	r0, #0
   88338:	4770      	bx	lr
   8833a:	4611      	mov	r1, r2
   8833c:	2903      	cmp	r1, #3
   8833e:	d80c      	bhi.n	8835a <memchr+0x4a>
   88340:	2900      	cmp	r1, #0
   88342:	d0f8      	beq.n	88336 <memchr+0x26>
   88344:	4603      	mov	r3, r0
   88346:	4401      	add	r1, r0
   88348:	e001      	b.n	8834e <memchr+0x3e>
   8834a:	428b      	cmp	r3, r1
   8834c:	d0f3      	beq.n	88336 <memchr+0x26>
   8834e:	4618      	mov	r0, r3
   88350:	f813 2b01 	ldrb.w	r2, [r3], #1
   88354:	4562      	cmp	r2, ip
   88356:	d1f8      	bne.n	8834a <memchr+0x3a>
   88358:	e7ec      	b.n	88334 <memchr+0x24>
   8835a:	4602      	mov	r2, r0
   8835c:	b510      	push	{r4, lr}
   8835e:	ea4c 240c 	orr.w	r4, ip, ip, lsl #8
   88362:	ea44 4404 	orr.w	r4, r4, r4, lsl #16
   88366:	4610      	mov	r0, r2
   88368:	6803      	ldr	r3, [r0, #0]
   8836a:	3204      	adds	r2, #4
   8836c:	4063      	eors	r3, r4
   8836e:	f1a3 3e01 	sub.w	lr, r3, #16843009	; 0x1010101
   88372:	ea2e 0303 	bic.w	r3, lr, r3
   88376:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   8837a:	d104      	bne.n	88386 <memchr+0x76>
   8837c:	3904      	subs	r1, #4
   8837e:	2903      	cmp	r1, #3
   88380:	4610      	mov	r0, r2
   88382:	d8f0      	bhi.n	88366 <memchr+0x56>
   88384:	b151      	cbz	r1, 8839c <memchr+0x8c>
   88386:	4603      	mov	r3, r0
   88388:	4401      	add	r1, r0
   8838a:	e001      	b.n	88390 <memchr+0x80>
   8838c:	428b      	cmp	r3, r1
   8838e:	d005      	beq.n	8839c <memchr+0x8c>
   88390:	4618      	mov	r0, r3
   88392:	f813 2b01 	ldrb.w	r2, [r3], #1
   88396:	4562      	cmp	r2, ip
   88398:	d1f8      	bne.n	8838c <memchr+0x7c>
   8839a:	bd10      	pop	{r4, pc}
   8839c:	2000      	movs	r0, #0
   8839e:	bd10      	pop	{r4, pc}

000883a0 <memmove>:
   883a0:	4288      	cmp	r0, r1
   883a2:	d90d      	bls.n	883c0 <memmove+0x20>
   883a4:	188b      	adds	r3, r1, r2
   883a6:	4283      	cmp	r3, r0
   883a8:	d90a      	bls.n	883c0 <memmove+0x20>
   883aa:	eb00 0c02 	add.w	ip, r0, r2
   883ae:	b1ba      	cbz	r2, 883e0 <memmove+0x40>
   883b0:	4662      	mov	r2, ip
   883b2:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
   883b6:	4299      	cmp	r1, r3
   883b8:	f802 cd01 	strb.w	ip, [r2, #-1]!
   883bc:	d1f9      	bne.n	883b2 <memmove+0x12>
   883be:	4770      	bx	lr
   883c0:	2a0f      	cmp	r2, #15
   883c2:	d80e      	bhi.n	883e2 <memmove+0x42>
   883c4:	4603      	mov	r3, r0
   883c6:	f102 3cff 	add.w	ip, r2, #4294967295
   883ca:	b14a      	cbz	r2, 883e0 <memmove+0x40>
   883cc:	f10c 0c01 	add.w	ip, ip, #1
   883d0:	3b01      	subs	r3, #1
   883d2:	448c      	add	ip, r1
   883d4:	f811 2b01 	ldrb.w	r2, [r1], #1
   883d8:	4561      	cmp	r1, ip
   883da:	f803 2f01 	strb.w	r2, [r3, #1]!
   883de:	d1f9      	bne.n	883d4 <memmove+0x34>
   883e0:	4770      	bx	lr
   883e2:	ea40 0301 	orr.w	r3, r0, r1
   883e6:	079b      	lsls	r3, r3, #30
   883e8:	d14f      	bne.n	8848a <memmove+0xea>
   883ea:	f1a2 0310 	sub.w	r3, r2, #16
   883ee:	b570      	push	{r4, r5, r6, lr}
   883f0:	f101 0c20 	add.w	ip, r1, #32
   883f4:	f023 050f 	bic.w	r5, r3, #15
   883f8:	f101 0e10 	add.w	lr, r1, #16
   883fc:	f100 0410 	add.w	r4, r0, #16
   88400:	44ac      	add	ip, r5
   88402:	091b      	lsrs	r3, r3, #4
   88404:	f85e 5c10 	ldr.w	r5, [lr, #-16]
   88408:	f10e 0e10 	add.w	lr, lr, #16
   8840c:	f844 5c10 	str.w	r5, [r4, #-16]
   88410:	f85e 5c1c 	ldr.w	r5, [lr, #-28]
   88414:	3410      	adds	r4, #16
   88416:	f844 5c1c 	str.w	r5, [r4, #-28]
   8841a:	f85e 5c18 	ldr.w	r5, [lr, #-24]
   8841e:	f844 5c18 	str.w	r5, [r4, #-24]
   88422:	f85e 5c14 	ldr.w	r5, [lr, #-20]
   88426:	45e6      	cmp	lr, ip
   88428:	f844 5c14 	str.w	r5, [r4, #-20]
   8842c:	d1ea      	bne.n	88404 <memmove+0x64>
   8842e:	3301      	adds	r3, #1
   88430:	f012 0f0c 	tst.w	r2, #12
   88434:	eb01 1103 	add.w	r1, r1, r3, lsl #4
   88438:	f002 040f 	and.w	r4, r2, #15
   8843c:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   88440:	d027      	beq.n	88492 <memmove+0xf2>
   88442:	468e      	mov	lr, r1
   88444:	3c04      	subs	r4, #4
   88446:	f024 0603 	bic.w	r6, r4, #3
   8844a:	ea4f 0c94 	mov.w	ip, r4, lsr #2
   8844e:	441e      	add	r6, r3
   88450:	1f1c      	subs	r4, r3, #4
   88452:	f85e 5b04 	ldr.w	r5, [lr], #4
   88456:	f844 5f04 	str.w	r5, [r4, #4]!
   8845a:	42b4      	cmp	r4, r6
   8845c:	d1f9      	bne.n	88452 <memmove+0xb2>
   8845e:	f10c 0401 	add.w	r4, ip, #1
   88462:	f002 0203 	and.w	r2, r2, #3
   88466:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   8846a:	eb01 0184 	add.w	r1, r1, r4, lsl #2
   8846e:	f102 3cff 	add.w	ip, r2, #4294967295
   88472:	b14a      	cbz	r2, 88488 <memmove+0xe8>
   88474:	f10c 0c01 	add.w	ip, ip, #1
   88478:	3b01      	subs	r3, #1
   8847a:	448c      	add	ip, r1
   8847c:	f811 2b01 	ldrb.w	r2, [r1], #1
   88480:	4561      	cmp	r1, ip
   88482:	f803 2f01 	strb.w	r2, [r3, #1]!
   88486:	d1f9      	bne.n	8847c <memmove+0xdc>
   88488:	bd70      	pop	{r4, r5, r6, pc}
   8848a:	4603      	mov	r3, r0
   8848c:	f102 3cff 	add.w	ip, r2, #4294967295
   88490:	e79c      	b.n	883cc <memmove+0x2c>
   88492:	4622      	mov	r2, r4
   88494:	e7eb      	b.n	8846e <memmove+0xce>
   88496:	bf00      	nop

00088498 <__malloc_lock>:
   88498:	4801      	ldr	r0, [pc, #4]	; (884a0 <__malloc_lock+0x8>)
   8849a:	f7ff bbcb 	b.w	87c34 <__retarget_lock_acquire_recursive>
   8849e:	bf00      	nop
   884a0:	200036d0 	.word	0x200036d0

000884a4 <__malloc_unlock>:
   884a4:	4801      	ldr	r0, [pc, #4]	; (884ac <__malloc_unlock+0x8>)
   884a6:	f7ff bbc7 	b.w	87c38 <__retarget_lock_release_recursive>
   884aa:	bf00      	nop
   884ac:	200036d0 	.word	0x200036d0

000884b0 <_Balloc>:
   884b0:	b538      	push	{r3, r4, r5, lr}
   884b2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   884b4:	4605      	mov	r5, r0
   884b6:	460c      	mov	r4, r1
   884b8:	b14b      	cbz	r3, 884ce <_Balloc+0x1e>
   884ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   884be:	b180      	cbz	r0, 884e2 <_Balloc+0x32>
   884c0:	6802      	ldr	r2, [r0, #0]
   884c2:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   884c6:	2300      	movs	r3, #0
   884c8:	e9c0 3303 	strd	r3, r3, [r0, #12]
   884cc:	bd38      	pop	{r3, r4, r5, pc}
   884ce:	2221      	movs	r2, #33	; 0x21
   884d0:	2104      	movs	r1, #4
   884d2:	f000 ff8d 	bl	893f0 <_calloc_r>
   884d6:	4603      	mov	r3, r0
   884d8:	64e8      	str	r0, [r5, #76]	; 0x4c
   884da:	2800      	cmp	r0, #0
   884dc:	d1ed      	bne.n	884ba <_Balloc+0xa>
   884de:	2000      	movs	r0, #0
   884e0:	bd38      	pop	{r3, r4, r5, pc}
   884e2:	2101      	movs	r1, #1
   884e4:	4628      	mov	r0, r5
   884e6:	fa01 f504 	lsl.w	r5, r1, r4
   884ea:	1d6a      	adds	r2, r5, #5
   884ec:	0092      	lsls	r2, r2, #2
   884ee:	f000 ff7f 	bl	893f0 <_calloc_r>
   884f2:	2800      	cmp	r0, #0
   884f4:	d0f3      	beq.n	884de <_Balloc+0x2e>
   884f6:	e9c0 4501 	strd	r4, r5, [r0, #4]
   884fa:	e7e4      	b.n	884c6 <_Balloc+0x16>

000884fc <_Bfree>:
   884fc:	b131      	cbz	r1, 8850c <_Bfree+0x10>
   884fe:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88500:	684a      	ldr	r2, [r1, #4]
   88502:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   88506:	6008      	str	r0, [r1, #0]
   88508:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   8850c:	4770      	bx	lr
   8850e:	bf00      	nop

00088510 <__multadd>:
   88510:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88514:	f04f 0e00 	mov.w	lr, #0
   88518:	460e      	mov	r6, r1
   8851a:	461c      	mov	r4, r3
   8851c:	690d      	ldr	r5, [r1, #16]
   8851e:	4607      	mov	r7, r0
   88520:	f101 0014 	add.w	r0, r1, #20
   88524:	6801      	ldr	r1, [r0, #0]
   88526:	f10e 0e01 	add.w	lr, lr, #1
   8852a:	b28b      	uxth	r3, r1
   8852c:	fb02 4303 	mla	r3, r2, r3, r4
   88530:	0c09      	lsrs	r1, r1, #16
   88532:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   88536:	fb02 cc01 	mla	ip, r2, r1, ip
   8853a:	b29b      	uxth	r3, r3
   8853c:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   88540:	4575      	cmp	r5, lr
   88542:	f840 3b04 	str.w	r3, [r0], #4
   88546:	ea4f 441c 	mov.w	r4, ip, lsr #16
   8854a:	dceb      	bgt.n	88524 <__multadd+0x14>
   8854c:	b13c      	cbz	r4, 8855e <__multadd+0x4e>
   8854e:	68b3      	ldr	r3, [r6, #8]
   88550:	42ab      	cmp	r3, r5
   88552:	dd07      	ble.n	88564 <__multadd+0x54>
   88554:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   88558:	3501      	adds	r5, #1
   8855a:	615c      	str	r4, [r3, #20]
   8855c:	6135      	str	r5, [r6, #16]
   8855e:	4630      	mov	r0, r6
   88560:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88564:	6871      	ldr	r1, [r6, #4]
   88566:	4638      	mov	r0, r7
   88568:	3101      	adds	r1, #1
   8856a:	f7ff ffa1 	bl	884b0 <_Balloc>
   8856e:	4680      	mov	r8, r0
   88570:	b1a8      	cbz	r0, 8859e <__multadd+0x8e>
   88572:	6932      	ldr	r2, [r6, #16]
   88574:	f106 010c 	add.w	r1, r6, #12
   88578:	3202      	adds	r2, #2
   8857a:	0092      	lsls	r2, r2, #2
   8857c:	300c      	adds	r0, #12
   8857e:	f7fa ff2d 	bl	833dc <memcpy>
   88582:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88584:	6872      	ldr	r2, [r6, #4]
   88586:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8858a:	6031      	str	r1, [r6, #0]
   8858c:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   88590:	4646      	mov	r6, r8
   88592:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   88596:	3501      	adds	r5, #1
   88598:	615c      	str	r4, [r3, #20]
   8859a:	6135      	str	r5, [r6, #16]
   8859c:	e7df      	b.n	8855e <__multadd+0x4e>
   8859e:	4602      	mov	r2, r0
   885a0:	21b5      	movs	r1, #181	; 0xb5
   885a2:	4b02      	ldr	r3, [pc, #8]	; (885ac <__multadd+0x9c>)
   885a4:	4802      	ldr	r0, [pc, #8]	; (885b0 <__multadd+0xa0>)
   885a6:	f000 ff03 	bl	893b0 <__assert_func>
   885aa:	bf00      	nop
   885ac:	0008a41c 	.word	0x0008a41c
   885b0:	0008a4c0 	.word	0x0008a4c0

000885b4 <__hi0bits>:
   885b4:	0c02      	lsrs	r2, r0, #16
   885b6:	0412      	lsls	r2, r2, #16
   885b8:	4603      	mov	r3, r0
   885ba:	b9ca      	cbnz	r2, 885f0 <__hi0bits+0x3c>
   885bc:	2010      	movs	r0, #16
   885be:	4083      	lsls	r3, r0
   885c0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   885c4:	bf04      	itt	eq
   885c6:	021b      	lsleq	r3, r3, #8
   885c8:	3008      	addeq	r0, #8
   885ca:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   885ce:	bf04      	itt	eq
   885d0:	011b      	lsleq	r3, r3, #4
   885d2:	3004      	addeq	r0, #4
   885d4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   885d8:	bf04      	itt	eq
   885da:	009b      	lsleq	r3, r3, #2
   885dc:	3002      	addeq	r0, #2
   885de:	2b00      	cmp	r3, #0
   885e0:	db05      	blt.n	885ee <__hi0bits+0x3a>
   885e2:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
   885e6:	f100 0001 	add.w	r0, r0, #1
   885ea:	bf08      	it	eq
   885ec:	2020      	moveq	r0, #32
   885ee:	4770      	bx	lr
   885f0:	2000      	movs	r0, #0
   885f2:	e7e5      	b.n	885c0 <__hi0bits+0xc>

000885f4 <__lo0bits>:
   885f4:	6803      	ldr	r3, [r0, #0]
   885f6:	4602      	mov	r2, r0
   885f8:	f013 0007 	ands.w	r0, r3, #7
   885fc:	d009      	beq.n	88612 <__lo0bits+0x1e>
   885fe:	07d9      	lsls	r1, r3, #31
   88600:	d41f      	bmi.n	88642 <__lo0bits+0x4e>
   88602:	0798      	lsls	r0, r3, #30
   88604:	bf4b      	itete	mi
   88606:	085b      	lsrmi	r3, r3, #1
   88608:	089b      	lsrpl	r3, r3, #2
   8860a:	2001      	movmi	r0, #1
   8860c:	2002      	movpl	r0, #2
   8860e:	6013      	str	r3, [r2, #0]
   88610:	4770      	bx	lr
   88612:	b299      	uxth	r1, r3
   88614:	b909      	cbnz	r1, 8861a <__lo0bits+0x26>
   88616:	2010      	movs	r0, #16
   88618:	40c3      	lsrs	r3, r0
   8861a:	b2d9      	uxtb	r1, r3
   8861c:	b909      	cbnz	r1, 88622 <__lo0bits+0x2e>
   8861e:	3008      	adds	r0, #8
   88620:	0a1b      	lsrs	r3, r3, #8
   88622:	0719      	lsls	r1, r3, #28
   88624:	bf04      	itt	eq
   88626:	091b      	lsreq	r3, r3, #4
   88628:	3004      	addeq	r0, #4
   8862a:	0799      	lsls	r1, r3, #30
   8862c:	bf04      	itt	eq
   8862e:	089b      	lsreq	r3, r3, #2
   88630:	3002      	addeq	r0, #2
   88632:	07d9      	lsls	r1, r3, #31
   88634:	d403      	bmi.n	8863e <__lo0bits+0x4a>
   88636:	085b      	lsrs	r3, r3, #1
   88638:	f100 0001 	add.w	r0, r0, #1
   8863c:	d003      	beq.n	88646 <__lo0bits+0x52>
   8863e:	6013      	str	r3, [r2, #0]
   88640:	4770      	bx	lr
   88642:	2000      	movs	r0, #0
   88644:	4770      	bx	lr
   88646:	2020      	movs	r0, #32
   88648:	4770      	bx	lr
   8864a:	bf00      	nop

0008864c <__i2b>:
   8864c:	b538      	push	{r3, r4, r5, lr}
   8864e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88650:	4604      	mov	r4, r0
   88652:	460d      	mov	r5, r1
   88654:	b14b      	cbz	r3, 8866a <__i2b+0x1e>
   88656:	6858      	ldr	r0, [r3, #4]
   88658:	b1b0      	cbz	r0, 88688 <__i2b+0x3c>
   8865a:	6802      	ldr	r2, [r0, #0]
   8865c:	605a      	str	r2, [r3, #4]
   8865e:	2200      	movs	r2, #0
   88660:	2301      	movs	r3, #1
   88662:	6145      	str	r5, [r0, #20]
   88664:	e9c0 2303 	strd	r2, r3, [r0, #12]
   88668:	bd38      	pop	{r3, r4, r5, pc}
   8866a:	2221      	movs	r2, #33	; 0x21
   8866c:	2104      	movs	r1, #4
   8866e:	f000 febf 	bl	893f0 <_calloc_r>
   88672:	4603      	mov	r3, r0
   88674:	64e0      	str	r0, [r4, #76]	; 0x4c
   88676:	2800      	cmp	r0, #0
   88678:	d1ed      	bne.n	88656 <__i2b+0xa>
   8867a:	2200      	movs	r2, #0
   8867c:	f44f 71a0 	mov.w	r1, #320	; 0x140
   88680:	4b07      	ldr	r3, [pc, #28]	; (886a0 <__i2b+0x54>)
   88682:	4808      	ldr	r0, [pc, #32]	; (886a4 <__i2b+0x58>)
   88684:	f000 fe94 	bl	893b0 <__assert_func>
   88688:	221c      	movs	r2, #28
   8868a:	2101      	movs	r1, #1
   8868c:	4620      	mov	r0, r4
   8868e:	f000 feaf 	bl	893f0 <_calloc_r>
   88692:	2800      	cmp	r0, #0
   88694:	d0f1      	beq.n	8867a <__i2b+0x2e>
   88696:	2201      	movs	r2, #1
   88698:	2302      	movs	r3, #2
   8869a:	e9c0 2301 	strd	r2, r3, [r0, #4]
   8869e:	e7de      	b.n	8865e <__i2b+0x12>
   886a0:	0008a41c 	.word	0x0008a41c
   886a4:	0008a4c0 	.word	0x0008a4c0

000886a8 <__multiply>:
   886a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   886ac:	690e      	ldr	r6, [r1, #16]
   886ae:	6915      	ldr	r5, [r2, #16]
   886b0:	4688      	mov	r8, r1
   886b2:	42ae      	cmp	r6, r5
   886b4:	4614      	mov	r4, r2
   886b6:	b085      	sub	sp, #20
   886b8:	db05      	blt.n	886c6 <__multiply+0x1e>
   886ba:	462a      	mov	r2, r5
   886bc:	4623      	mov	r3, r4
   886be:	4635      	mov	r5, r6
   886c0:	460c      	mov	r4, r1
   886c2:	4616      	mov	r6, r2
   886c4:	4698      	mov	r8, r3
   886c6:	68a3      	ldr	r3, [r4, #8]
   886c8:	6861      	ldr	r1, [r4, #4]
   886ca:	19af      	adds	r7, r5, r6
   886cc:	42bb      	cmp	r3, r7
   886ce:	bfb8      	it	lt
   886d0:	3101      	addlt	r1, #1
   886d2:	f7ff feed 	bl	884b0 <_Balloc>
   886d6:	9001      	str	r0, [sp, #4]
   886d8:	2800      	cmp	r0, #0
   886da:	f000 8087 	beq.w	887ec <__multiply+0x144>
   886de:	9b01      	ldr	r3, [sp, #4]
   886e0:	f103 0914 	add.w	r9, r3, #20
   886e4:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
   886e8:	45d1      	cmp	r9, sl
   886ea:	d205      	bcs.n	886f8 <__multiply+0x50>
   886ec:	464b      	mov	r3, r9
   886ee:	2200      	movs	r2, #0
   886f0:	f843 2b04 	str.w	r2, [r3], #4
   886f4:	459a      	cmp	sl, r3
   886f6:	d8fb      	bhi.n	886f0 <__multiply+0x48>
   886f8:	f108 0814 	add.w	r8, r8, #20
   886fc:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
   88700:	f104 0314 	add.w	r3, r4, #20
   88704:	45d8      	cmp	r8, fp
   88706:	461a      	mov	r2, r3
   88708:	eb03 0585 	add.w	r5, r3, r5, lsl #2
   8870c:	d25f      	bcs.n	887ce <__multiply+0x126>
   8870e:	1b2b      	subs	r3, r5, r4
   88710:	3b15      	subs	r3, #21
   88712:	f023 0303 	bic.w	r3, r3, #3
   88716:	3304      	adds	r3, #4
   88718:	3415      	adds	r4, #21
   8871a:	42a5      	cmp	r5, r4
   8871c:	bf38      	it	cc
   8871e:	2304      	movcc	r3, #4
   88720:	e9cd a702 	strd	sl, r7, [sp, #8]
   88724:	46ac      	mov	ip, r5
   88726:	461f      	mov	r7, r3
   88728:	4692      	mov	sl, r2
   8872a:	e005      	b.n	88738 <__multiply+0x90>
   8872c:	0c00      	lsrs	r0, r0, #16
   8872e:	d129      	bne.n	88784 <__multiply+0xdc>
   88730:	45c3      	cmp	fp, r8
   88732:	f109 0904 	add.w	r9, r9, #4
   88736:	d948      	bls.n	887ca <__multiply+0x122>
   88738:	f858 0b04 	ldr.w	r0, [r8], #4
   8873c:	b285      	uxth	r5, r0
   8873e:	2d00      	cmp	r5, #0
   88740:	d0f4      	beq.n	8872c <__multiply+0x84>
   88742:	4656      	mov	r6, sl
   88744:	464c      	mov	r4, r9
   88746:	2300      	movs	r3, #0
   88748:	f856 0b04 	ldr.w	r0, [r6], #4
   8874c:	6821      	ldr	r1, [r4, #0]
   8874e:	b282      	uxth	r2, r0
   88750:	fa1f fe81 	uxth.w	lr, r1
   88754:	fb05 ee02 	mla	lr, r5, r2, lr
   88758:	0c00      	lsrs	r0, r0, #16
   8875a:	0c0a      	lsrs	r2, r1, #16
   8875c:	fb05 2200 	mla	r2, r5, r0, r2
   88760:	4473      	add	r3, lr
   88762:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   88766:	b29b      	uxth	r3, r3
   88768:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8876c:	45b4      	cmp	ip, r6
   8876e:	f844 3b04 	str.w	r3, [r4], #4
   88772:	ea4f 4312 	mov.w	r3, r2, lsr #16
   88776:	d8e7      	bhi.n	88748 <__multiply+0xa0>
   88778:	f849 3007 	str.w	r3, [r9, r7]
   8877c:	f858 0c04 	ldr.w	r0, [r8, #-4]
   88780:	0c00      	lsrs	r0, r0, #16
   88782:	d0d5      	beq.n	88730 <__multiply+0x88>
   88784:	f8d9 3000 	ldr.w	r3, [r9]
   88788:	4654      	mov	r4, sl
   8878a:	4619      	mov	r1, r3
   8878c:	464d      	mov	r5, r9
   8878e:	2200      	movs	r2, #0
   88790:	8826      	ldrh	r6, [r4, #0]
   88792:	0c09      	lsrs	r1, r1, #16
   88794:	fb00 1106 	mla	r1, r0, r6, r1
   88798:	b29b      	uxth	r3, r3
   8879a:	440a      	add	r2, r1
   8879c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   887a0:	f845 3b04 	str.w	r3, [r5], #4
   887a4:	f854 6b04 	ldr.w	r6, [r4], #4
   887a8:	6829      	ldr	r1, [r5, #0]
   887aa:	0c36      	lsrs	r6, r6, #16
   887ac:	b28b      	uxth	r3, r1
   887ae:	fb00 3306 	mla	r3, r0, r6, r3
   887b2:	45a4      	cmp	ip, r4
   887b4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   887b8:	ea4f 4213 	mov.w	r2, r3, lsr #16
   887bc:	d8e8      	bhi.n	88790 <__multiply+0xe8>
   887be:	45c3      	cmp	fp, r8
   887c0:	f849 3007 	str.w	r3, [r9, r7]
   887c4:	f109 0904 	add.w	r9, r9, #4
   887c8:	d8b6      	bhi.n	88738 <__multiply+0x90>
   887ca:	e9dd a702 	ldrd	sl, r7, [sp, #8]
   887ce:	2f00      	cmp	r7, #0
   887d0:	dc02      	bgt.n	887d8 <__multiply+0x130>
   887d2:	e005      	b.n	887e0 <__multiply+0x138>
   887d4:	3f01      	subs	r7, #1
   887d6:	d003      	beq.n	887e0 <__multiply+0x138>
   887d8:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   887dc:	2b00      	cmp	r3, #0
   887de:	d0f9      	beq.n	887d4 <__multiply+0x12c>
   887e0:	9b01      	ldr	r3, [sp, #4]
   887e2:	4618      	mov	r0, r3
   887e4:	611f      	str	r7, [r3, #16]
   887e6:	b005      	add	sp, #20
   887e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   887ec:	4602      	mov	r2, r0
   887ee:	f240 115d 	movw	r1, #349	; 0x15d
   887f2:	4b02      	ldr	r3, [pc, #8]	; (887fc <__multiply+0x154>)
   887f4:	4802      	ldr	r0, [pc, #8]	; (88800 <__multiply+0x158>)
   887f6:	f000 fddb 	bl	893b0 <__assert_func>
   887fa:	bf00      	nop
   887fc:	0008a41c 	.word	0x0008a41c
   88800:	0008a4c0 	.word	0x0008a4c0

00088804 <__pow5mult>:
   88804:	f012 0303 	ands.w	r3, r2, #3
   88808:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   8880c:	4614      	mov	r4, r2
   8880e:	4607      	mov	r7, r0
   88810:	d12e      	bne.n	88870 <__pow5mult+0x6c>
   88812:	460e      	mov	r6, r1
   88814:	10a4      	asrs	r4, r4, #2
   88816:	d01c      	beq.n	88852 <__pow5mult+0x4e>
   88818:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   8881a:	b395      	cbz	r5, 88882 <__pow5mult+0x7e>
   8881c:	07e3      	lsls	r3, r4, #31
   8881e:	f04f 0800 	mov.w	r8, #0
   88822:	d406      	bmi.n	88832 <__pow5mult+0x2e>
   88824:	1064      	asrs	r4, r4, #1
   88826:	d014      	beq.n	88852 <__pow5mult+0x4e>
   88828:	6828      	ldr	r0, [r5, #0]
   8882a:	b1a8      	cbz	r0, 88858 <__pow5mult+0x54>
   8882c:	4605      	mov	r5, r0
   8882e:	07e3      	lsls	r3, r4, #31
   88830:	d5f8      	bpl.n	88824 <__pow5mult+0x20>
   88832:	462a      	mov	r2, r5
   88834:	4631      	mov	r1, r6
   88836:	4638      	mov	r0, r7
   88838:	f7ff ff36 	bl	886a8 <__multiply>
   8883c:	b1b6      	cbz	r6, 8886c <__pow5mult+0x68>
   8883e:	6871      	ldr	r1, [r6, #4]
   88840:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88842:	1064      	asrs	r4, r4, #1
   88844:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   88848:	6032      	str	r2, [r6, #0]
   8884a:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
   8884e:	4606      	mov	r6, r0
   88850:	d1ea      	bne.n	88828 <__pow5mult+0x24>
   88852:	4630      	mov	r0, r6
   88854:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88858:	462a      	mov	r2, r5
   8885a:	4629      	mov	r1, r5
   8885c:	4638      	mov	r0, r7
   8885e:	f7ff ff23 	bl	886a8 <__multiply>
   88862:	6028      	str	r0, [r5, #0]
   88864:	4605      	mov	r5, r0
   88866:	f8c0 8000 	str.w	r8, [r0]
   8886a:	e7e0      	b.n	8882e <__pow5mult+0x2a>
   8886c:	4606      	mov	r6, r0
   8886e:	e7d9      	b.n	88824 <__pow5mult+0x20>
   88870:	4a0f      	ldr	r2, [pc, #60]	; (888b0 <__pow5mult+0xac>)
   88872:	3b01      	subs	r3, #1
   88874:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   88878:	2300      	movs	r3, #0
   8887a:	f7ff fe49 	bl	88510 <__multadd>
   8887e:	4606      	mov	r6, r0
   88880:	e7c8      	b.n	88814 <__pow5mult+0x10>
   88882:	2101      	movs	r1, #1
   88884:	4638      	mov	r0, r7
   88886:	f7ff fe13 	bl	884b0 <_Balloc>
   8888a:	4605      	mov	r5, r0
   8888c:	b140      	cbz	r0, 888a0 <__pow5mult+0x9c>
   8888e:	f240 2371 	movw	r3, #625	; 0x271
   88892:	2201      	movs	r2, #1
   88894:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88898:	2300      	movs	r3, #0
   8889a:	64b8      	str	r0, [r7, #72]	; 0x48
   8889c:	6003      	str	r3, [r0, #0]
   8889e:	e7bd      	b.n	8881c <__pow5mult+0x18>
   888a0:	4602      	mov	r2, r0
   888a2:	f44f 71a0 	mov.w	r1, #320	; 0x140
   888a6:	4b03      	ldr	r3, [pc, #12]	; (888b4 <__pow5mult+0xb0>)
   888a8:	4803      	ldr	r0, [pc, #12]	; (888b8 <__pow5mult+0xb4>)
   888aa:	f000 fd81 	bl	893b0 <__assert_func>
   888ae:	bf00      	nop
   888b0:	0008a630 	.word	0x0008a630
   888b4:	0008a41c 	.word	0x0008a41c
   888b8:	0008a4c0 	.word	0x0008a4c0

000888bc <__lshift>:
   888bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   888c0:	460c      	mov	r4, r1
   888c2:	6926      	ldr	r6, [r4, #16]
   888c4:	68a3      	ldr	r3, [r4, #8]
   888c6:	eb06 1662 	add.w	r6, r6, r2, asr #5
   888ca:	1c75      	adds	r5, r6, #1
   888cc:	429d      	cmp	r5, r3
   888ce:	4690      	mov	r8, r2
   888d0:	4607      	mov	r7, r0
   888d2:	6849      	ldr	r1, [r1, #4]
   888d4:	ea4f 1962 	mov.w	r9, r2, asr #5
   888d8:	dd04      	ble.n	888e4 <__lshift+0x28>
   888da:	005b      	lsls	r3, r3, #1
   888dc:	429d      	cmp	r5, r3
   888de:	f101 0101 	add.w	r1, r1, #1
   888e2:	dcfa      	bgt.n	888da <__lshift+0x1e>
   888e4:	4638      	mov	r0, r7
   888e6:	f7ff fde3 	bl	884b0 <_Balloc>
   888ea:	2800      	cmp	r0, #0
   888ec:	d051      	beq.n	88992 <__lshift+0xd6>
   888ee:	f1b9 0f00 	cmp.w	r9, #0
   888f2:	f100 0114 	add.w	r1, r0, #20
   888f6:	dd0f      	ble.n	88918 <__lshift+0x5c>
   888f8:	460b      	mov	r3, r1
   888fa:	f04f 0c00 	mov.w	ip, #0
   888fe:	f109 0205 	add.w	r2, r9, #5
   88902:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   88906:	eb00 0282 	add.w	r2, r0, r2, lsl #2
   8890a:	f843 cb04 	str.w	ip, [r3], #4
   8890e:	4293      	cmp	r3, r2
   88910:	d1fb      	bne.n	8890a <__lshift+0x4e>
   88912:	f1ae 0314 	sub.w	r3, lr, #20
   88916:	4419      	add	r1, r3
   88918:	6922      	ldr	r2, [r4, #16]
   8891a:	f104 0314 	add.w	r3, r4, #20
   8891e:	f018 081f 	ands.w	r8, r8, #31
   88922:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   88926:	d02c      	beq.n	88982 <__lshift+0xc6>
   88928:	468e      	mov	lr, r1
   8892a:	f04f 0a00 	mov.w	sl, #0
   8892e:	f1c8 0920 	rsb	r9, r8, #32
   88932:	681a      	ldr	r2, [r3, #0]
   88934:	fa02 f208 	lsl.w	r2, r2, r8
   88938:	ea42 020a 	orr.w	r2, r2, sl
   8893c:	f84e 2b04 	str.w	r2, [lr], #4
   88940:	f853 2b04 	ldr.w	r2, [r3], #4
   88944:	459c      	cmp	ip, r3
   88946:	fa22 fa09 	lsr.w	sl, r2, r9
   8894a:	d8f2      	bhi.n	88932 <__lshift+0x76>
   8894c:	ebac 0304 	sub.w	r3, ip, r4
   88950:	3b15      	subs	r3, #21
   88952:	f023 0303 	bic.w	r3, r3, #3
   88956:	3304      	adds	r3, #4
   88958:	f104 0215 	add.w	r2, r4, #21
   8895c:	4594      	cmp	ip, r2
   8895e:	bf38      	it	cc
   88960:	2304      	movcc	r3, #4
   88962:	f1ba 0f00 	cmp.w	sl, #0
   88966:	bf18      	it	ne
   88968:	462e      	movne	r6, r5
   8896a:	f841 a003 	str.w	sl, [r1, r3]
   8896e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88970:	6862      	ldr	r2, [r4, #4]
   88972:	6106      	str	r6, [r0, #16]
   88974:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88978:	6021      	str	r1, [r4, #0]
   8897a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   8897e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88982:	3904      	subs	r1, #4
   88984:	f853 2b04 	ldr.w	r2, [r3], #4
   88988:	459c      	cmp	ip, r3
   8898a:	f841 2f04 	str.w	r2, [r1, #4]!
   8898e:	d8f9      	bhi.n	88984 <__lshift+0xc8>
   88990:	e7ed      	b.n	8896e <__lshift+0xb2>
   88992:	4602      	mov	r2, r0
   88994:	f240 11d9 	movw	r1, #473	; 0x1d9
   88998:	4b01      	ldr	r3, [pc, #4]	; (889a0 <__lshift+0xe4>)
   8899a:	4802      	ldr	r0, [pc, #8]	; (889a4 <__lshift+0xe8>)
   8899c:	f000 fd08 	bl	893b0 <__assert_func>
   889a0:	0008a41c 	.word	0x0008a41c
   889a4:	0008a4c0 	.word	0x0008a4c0

000889a8 <__mcmp>:
   889a8:	4684      	mov	ip, r0
   889aa:	690b      	ldr	r3, [r1, #16]
   889ac:	6900      	ldr	r0, [r0, #16]
   889ae:	1ac0      	subs	r0, r0, r3
   889b0:	d115      	bne.n	889de <__mcmp+0x36>
   889b2:	f10c 0c14 	add.w	ip, ip, #20
   889b6:	3114      	adds	r1, #20
   889b8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   889bc:	b410      	push	{r4}
   889be:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   889c2:	e001      	b.n	889c8 <__mcmp+0x20>
   889c4:	4594      	cmp	ip, r2
   889c6:	d208      	bcs.n	889da <__mcmp+0x32>
   889c8:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   889cc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   889d0:	428c      	cmp	r4, r1
   889d2:	d0f7      	beq.n	889c4 <__mcmp+0x1c>
   889d4:	d204      	bcs.n	889e0 <__mcmp+0x38>
   889d6:	f04f 30ff 	mov.w	r0, #4294967295
   889da:	bc10      	pop	{r4}
   889dc:	4770      	bx	lr
   889de:	4770      	bx	lr
   889e0:	2001      	movs	r0, #1
   889e2:	bc10      	pop	{r4}
   889e4:	4770      	bx	lr
   889e6:	bf00      	nop

000889e8 <__mdiff>:
   889e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   889ec:	690c      	ldr	r4, [r1, #16]
   889ee:	6913      	ldr	r3, [r2, #16]
   889f0:	4689      	mov	r9, r1
   889f2:	1ae4      	subs	r4, r4, r3
   889f4:	2c00      	cmp	r4, #0
   889f6:	4617      	mov	r7, r2
   889f8:	d17d      	bne.n	88af6 <__mdiff+0x10e>
   889fa:	f101 0614 	add.w	r6, r1, #20
   889fe:	3214      	adds	r2, #20
   88a00:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   88a04:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   88a08:	e001      	b.n	88a0e <__mdiff+0x26>
   88a0a:	429e      	cmp	r6, r3
   88a0c:	d276      	bcs.n	88afc <__mdiff+0x114>
   88a0e:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   88a12:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   88a16:	428d      	cmp	r5, r1
   88a18:	d0f7      	beq.n	88a0a <__mdiff+0x22>
   88a1a:	d367      	bcc.n	88aec <__mdiff+0x104>
   88a1c:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88a20:	f7ff fd46 	bl	884b0 <_Balloc>
   88a24:	2800      	cmp	r0, #0
   88a26:	d073      	beq.n	88b10 <__mdiff+0x128>
   88a28:	f8d9 5010 	ldr.w	r5, [r9, #16]
   88a2c:	60c4      	str	r4, [r0, #12]
   88a2e:	f100 0414 	add.w	r4, r0, #20
   88a32:	4626      	mov	r6, r4
   88a34:	f04f 0a00 	mov.w	sl, #0
   88a38:	693b      	ldr	r3, [r7, #16]
   88a3a:	f109 0814 	add.w	r8, r9, #20
   88a3e:	f107 0e14 	add.w	lr, r7, #20
   88a42:	f109 0c10 	add.w	ip, r9, #16
   88a46:	eb08 0285 	add.w	r2, r8, r5, lsl #2
   88a4a:	eb0e 0983 	add.w	r9, lr, r3, lsl #2
   88a4e:	f85c bf04 	ldr.w	fp, [ip, #4]!
   88a52:	f85e 1b04 	ldr.w	r1, [lr], #4
   88a56:	fa1f f38b 	uxth.w	r3, fp
   88a5a:	4453      	add	r3, sl
   88a5c:	fa1f fa81 	uxth.w	sl, r1
   88a60:	0c09      	lsrs	r1, r1, #16
   88a62:	eba3 030a 	sub.w	r3, r3, sl
   88a66:	ebc1 411b 	rsb	r1, r1, fp, lsr #16
   88a6a:	eb01 4123 	add.w	r1, r1, r3, asr #16
   88a6e:	b29b      	uxth	r3, r3
   88a70:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88a74:	45f1      	cmp	r9, lr
   88a76:	f846 3b04 	str.w	r3, [r6], #4
   88a7a:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88a7e:	d8e6      	bhi.n	88a4e <__mdiff+0x66>
   88a80:	eba9 0107 	sub.w	r1, r9, r7
   88a84:	3915      	subs	r1, #21
   88a86:	3715      	adds	r7, #21
   88a88:	45b9      	cmp	r9, r7
   88a8a:	f021 0603 	bic.w	r6, r1, #3
   88a8e:	f106 0604 	add.w	r6, r6, #4
   88a92:	bf38      	it	cc
   88a94:	2604      	movcc	r6, #4
   88a96:	f021 0103 	bic.w	r1, r1, #3
   88a9a:	bf38      	it	cc
   88a9c:	2100      	movcc	r1, #0
   88a9e:	44b0      	add	r8, r6
   88aa0:	4542      	cmp	r2, r8
   88aa2:	4426      	add	r6, r4
   88aa4:	440c      	add	r4, r1
   88aa6:	d918      	bls.n	88ada <__mdiff+0xf2>
   88aa8:	4637      	mov	r7, r6
   88aaa:	4644      	mov	r4, r8
   88aac:	f854 1b04 	ldr.w	r1, [r4], #4
   88ab0:	b28b      	uxth	r3, r1
   88ab2:	4453      	add	r3, sl
   88ab4:	ea4f 4a23 	mov.w	sl, r3, asr #16
   88ab8:	eb0a 4111 	add.w	r1, sl, r1, lsr #16
   88abc:	b29b      	uxth	r3, r3
   88abe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88ac2:	42a2      	cmp	r2, r4
   88ac4:	f847 3b04 	str.w	r3, [r7], #4
   88ac8:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88acc:	d8ee      	bhi.n	88aac <__mdiff+0xc4>
   88ace:	1e54      	subs	r4, r2, #1
   88ad0:	eba4 0408 	sub.w	r4, r4, r8
   88ad4:	f024 0403 	bic.w	r4, r4, #3
   88ad8:	4434      	add	r4, r6
   88ada:	b923      	cbnz	r3, 88ae6 <__mdiff+0xfe>
   88adc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88ae0:	3d01      	subs	r5, #1
   88ae2:	2b00      	cmp	r3, #0
   88ae4:	d0fa      	beq.n	88adc <__mdiff+0xf4>
   88ae6:	6105      	str	r5, [r0, #16]
   88ae8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88aec:	464b      	mov	r3, r9
   88aee:	2401      	movs	r4, #1
   88af0:	46b9      	mov	r9, r7
   88af2:	461f      	mov	r7, r3
   88af4:	e792      	b.n	88a1c <__mdiff+0x34>
   88af6:	dbf9      	blt.n	88aec <__mdiff+0x104>
   88af8:	2400      	movs	r4, #0
   88afa:	e78f      	b.n	88a1c <__mdiff+0x34>
   88afc:	2100      	movs	r1, #0
   88afe:	f7ff fcd7 	bl	884b0 <_Balloc>
   88b02:	b160      	cbz	r0, 88b1e <__mdiff+0x136>
   88b04:	2201      	movs	r2, #1
   88b06:	2300      	movs	r3, #0
   88b08:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88b0c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88b10:	4602      	mov	r2, r0
   88b12:	f44f 7110 	mov.w	r1, #576	; 0x240
   88b16:	4b05      	ldr	r3, [pc, #20]	; (88b2c <__mdiff+0x144>)
   88b18:	4805      	ldr	r0, [pc, #20]	; (88b30 <__mdiff+0x148>)
   88b1a:	f000 fc49 	bl	893b0 <__assert_func>
   88b1e:	4602      	mov	r2, r0
   88b20:	f240 2132 	movw	r1, #562	; 0x232
   88b24:	4b01      	ldr	r3, [pc, #4]	; (88b2c <__mdiff+0x144>)
   88b26:	4802      	ldr	r0, [pc, #8]	; (88b30 <__mdiff+0x148>)
   88b28:	f000 fc42 	bl	893b0 <__assert_func>
   88b2c:	0008a41c 	.word	0x0008a41c
   88b30:	0008a4c0 	.word	0x0008a4c0

00088b34 <__d2b>:
   88b34:	b570      	push	{r4, r5, r6, lr}
   88b36:	2101      	movs	r1, #1
   88b38:	b082      	sub	sp, #8
   88b3a:	4616      	mov	r6, r2
   88b3c:	461d      	mov	r5, r3
   88b3e:	f7ff fcb7 	bl	884b0 <_Balloc>
   88b42:	4604      	mov	r4, r0
   88b44:	2800      	cmp	r0, #0
   88b46:	d04c      	beq.n	88be2 <__d2b+0xae>
   88b48:	462b      	mov	r3, r5
   88b4a:	f3c5 550a 	ubfx	r5, r5, #20, #11
   88b4e:	f3c3 0313 	ubfx	r3, r3, #0, #20
   88b52:	b10d      	cbz	r5, 88b58 <__d2b+0x24>
   88b54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   88b58:	2e00      	cmp	r6, #0
   88b5a:	9301      	str	r3, [sp, #4]
   88b5c:	d022      	beq.n	88ba4 <__d2b+0x70>
   88b5e:	4668      	mov	r0, sp
   88b60:	9600      	str	r6, [sp, #0]
   88b62:	f7ff fd47 	bl	885f4 <__lo0bits>
   88b66:	2800      	cmp	r0, #0
   88b68:	d037      	beq.n	88bda <__d2b+0xa6>
   88b6a:	9b01      	ldr	r3, [sp, #4]
   88b6c:	9900      	ldr	r1, [sp, #0]
   88b6e:	f1c0 0220 	rsb	r2, r0, #32
   88b72:	fa03 f202 	lsl.w	r2, r3, r2
   88b76:	430a      	orrs	r2, r1
   88b78:	40c3      	lsrs	r3, r0
   88b7a:	9301      	str	r3, [sp, #4]
   88b7c:	6162      	str	r2, [r4, #20]
   88b7e:	2b00      	cmp	r3, #0
   88b80:	bf14      	ite	ne
   88b82:	2102      	movne	r1, #2
   88b84:	2101      	moveq	r1, #1
   88b86:	61a3      	str	r3, [r4, #24]
   88b88:	6121      	str	r1, [r4, #16]
   88b8a:	b1b5      	cbz	r5, 88bba <__d2b+0x86>
   88b8c:	9b06      	ldr	r3, [sp, #24]
   88b8e:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
   88b92:	4405      	add	r5, r0
   88b94:	601d      	str	r5, [r3, #0]
   88b96:	9b07      	ldr	r3, [sp, #28]
   88b98:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   88b9c:	6018      	str	r0, [r3, #0]
   88b9e:	4620      	mov	r0, r4
   88ba0:	b002      	add	sp, #8
   88ba2:	bd70      	pop	{r4, r5, r6, pc}
   88ba4:	a801      	add	r0, sp, #4
   88ba6:	f7ff fd25 	bl	885f4 <__lo0bits>
   88baa:	2301      	movs	r3, #1
   88bac:	9a01      	ldr	r2, [sp, #4]
   88bae:	4619      	mov	r1, r3
   88bb0:	6162      	str	r2, [r4, #20]
   88bb2:	3020      	adds	r0, #32
   88bb4:	6123      	str	r3, [r4, #16]
   88bb6:	2d00      	cmp	r5, #0
   88bb8:	d1e8      	bne.n	88b8c <__d2b+0x58>
   88bba:	eb04 0281 	add.w	r2, r4, r1, lsl #2
   88bbe:	f2a0 4332 	subw	r3, r0, #1074	; 0x432
   88bc2:	6910      	ldr	r0, [r2, #16]
   88bc4:	9a06      	ldr	r2, [sp, #24]
   88bc6:	6013      	str	r3, [r2, #0]
   88bc8:	f7ff fcf4 	bl	885b4 <__hi0bits>
   88bcc:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
   88bd0:	4620      	mov	r0, r4
   88bd2:	9b07      	ldr	r3, [sp, #28]
   88bd4:	6019      	str	r1, [r3, #0]
   88bd6:	b002      	add	sp, #8
   88bd8:	bd70      	pop	{r4, r5, r6, pc}
   88bda:	e9dd 2300 	ldrd	r2, r3, [sp]
   88bde:	6162      	str	r2, [r4, #20]
   88be0:	e7cd      	b.n	88b7e <__d2b+0x4a>
   88be2:	4602      	mov	r2, r0
   88be4:	f240 310a 	movw	r1, #778	; 0x30a
   88be8:	4b01      	ldr	r3, [pc, #4]	; (88bf0 <__d2b+0xbc>)
   88bea:	4802      	ldr	r0, [pc, #8]	; (88bf4 <__d2b+0xc0>)
   88bec:	f000 fbe0 	bl	893b0 <__assert_func>
   88bf0:	0008a41c 	.word	0x0008a41c
   88bf4:	0008a4c0 	.word	0x0008a4c0

00088bf8 <_realloc_r>:
   88bf8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88bfc:	4616      	mov	r6, r2
   88bfe:	2900      	cmp	r1, #0
   88c00:	f000 8098 	beq.w	88d34 <_realloc_r+0x13c>
   88c04:	f106 050b 	add.w	r5, r6, #11
   88c08:	4680      	mov	r8, r0
   88c0a:	460c      	mov	r4, r1
   88c0c:	f7ff fc44 	bl	88498 <__malloc_lock>
   88c10:	2d16      	cmp	r5, #22
   88c12:	d85d      	bhi.n	88cd0 <_realloc_r+0xd8>
   88c14:	2510      	movs	r5, #16
   88c16:	462a      	mov	r2, r5
   88c18:	42ae      	cmp	r6, r5
   88c1a:	d85e      	bhi.n	88cda <_realloc_r+0xe2>
   88c1c:	f854 1c04 	ldr.w	r1, [r4, #-4]
   88c20:	f1a4 0908 	sub.w	r9, r4, #8
   88c24:	f021 0703 	bic.w	r7, r1, #3
   88c28:	4297      	cmp	r7, r2
   88c2a:	da62      	bge.n	88cf2 <_realloc_r+0xfa>
   88c2c:	4bbc      	ldr	r3, [pc, #752]	; (88f20 <_realloc_r+0x328>)
   88c2e:	eb09 0007 	add.w	r0, r9, r7
   88c32:	f8d3 c008 	ldr.w	ip, [r3, #8]
   88c36:	4584      	cmp	ip, r0
   88c38:	f000 8097 	beq.w	88d6a <_realloc_r+0x172>
   88c3c:	f8d0 c004 	ldr.w	ip, [r0, #4]
   88c40:	f02c 0301 	bic.w	r3, ip, #1
   88c44:	4403      	add	r3, r0
   88c46:	685b      	ldr	r3, [r3, #4]
   88c48:	07db      	lsls	r3, r3, #31
   88c4a:	d468      	bmi.n	88d1e <_realloc_r+0x126>
   88c4c:	f02c 0c03 	bic.w	ip, ip, #3
   88c50:	eb07 030c 	add.w	r3, r7, ip
   88c54:	4293      	cmp	r3, r2
   88c56:	da47      	bge.n	88ce8 <_realloc_r+0xf0>
   88c58:	07cb      	lsls	r3, r1, #31
   88c5a:	d410      	bmi.n	88c7e <_realloc_r+0x86>
   88c5c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88c60:	eba9 0a03 	sub.w	sl, r9, r3
   88c64:	f8da 3004 	ldr.w	r3, [sl, #4]
   88c68:	f023 0103 	bic.w	r1, r3, #3
   88c6c:	448c      	add	ip, r1
   88c6e:	44bc      	add	ip, r7
   88c70:	4594      	cmp	ip, r2
   88c72:	f280 8111 	bge.w	88e98 <_realloc_r+0x2a0>
   88c76:	187b      	adds	r3, r7, r1
   88c78:	4293      	cmp	r3, r2
   88c7a:	f280 80e8 	bge.w	88e4e <_realloc_r+0x256>
   88c7e:	4631      	mov	r1, r6
   88c80:	4640      	mov	r0, r8
   88c82:	f7ff f883 	bl	87d8c <_malloc_r>
   88c86:	4606      	mov	r6, r0
   88c88:	b1e0      	cbz	r0, 88cc4 <_realloc_r+0xcc>
   88c8a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88c8e:	f1a0 0208 	sub.w	r2, r0, #8
   88c92:	f023 0301 	bic.w	r3, r3, #1
   88c96:	444b      	add	r3, r9
   88c98:	4293      	cmp	r3, r2
   88c9a:	f000 80d2 	beq.w	88e42 <_realloc_r+0x24a>
   88c9e:	1f3a      	subs	r2, r7, #4
   88ca0:	2a24      	cmp	r2, #36	; 0x24
   88ca2:	f200 80f5 	bhi.w	88e90 <_realloc_r+0x298>
   88ca6:	2a13      	cmp	r2, #19
   88ca8:	f200 80ac 	bhi.w	88e04 <_realloc_r+0x20c>
   88cac:	4603      	mov	r3, r0
   88cae:	4622      	mov	r2, r4
   88cb0:	6811      	ldr	r1, [r2, #0]
   88cb2:	6019      	str	r1, [r3, #0]
   88cb4:	6851      	ldr	r1, [r2, #4]
   88cb6:	6059      	str	r1, [r3, #4]
   88cb8:	6892      	ldr	r2, [r2, #8]
   88cba:	609a      	str	r2, [r3, #8]
   88cbc:	4621      	mov	r1, r4
   88cbe:	4640      	mov	r0, r8
   88cc0:	f7fe fd0e 	bl	876e0 <_free_r>
   88cc4:	4640      	mov	r0, r8
   88cc6:	f7ff fbed 	bl	884a4 <__malloc_unlock>
   88cca:	4630      	mov	r0, r6
   88ccc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88cd0:	f025 0507 	bic.w	r5, r5, #7
   88cd4:	2d00      	cmp	r5, #0
   88cd6:	462a      	mov	r2, r5
   88cd8:	da9e      	bge.n	88c18 <_realloc_r+0x20>
   88cda:	230c      	movs	r3, #12
   88cdc:	2600      	movs	r6, #0
   88cde:	f8c8 3000 	str.w	r3, [r8]
   88ce2:	4630      	mov	r0, r6
   88ce4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88ce8:	461f      	mov	r7, r3
   88cea:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
   88cee:	60d3      	str	r3, [r2, #12]
   88cf0:	609a      	str	r2, [r3, #8]
   88cf2:	1b7b      	subs	r3, r7, r5
   88cf4:	2b0f      	cmp	r3, #15
   88cf6:	d822      	bhi.n	88d3e <_realloc_r+0x146>
   88cf8:	f8d9 3004 	ldr.w	r3, [r9, #4]
   88cfc:	f003 0301 	and.w	r3, r3, #1
   88d00:	433b      	orrs	r3, r7
   88d02:	f8c9 3004 	str.w	r3, [r9, #4]
   88d06:	444f      	add	r7, r9
   88d08:	687b      	ldr	r3, [r7, #4]
   88d0a:	f043 0301 	orr.w	r3, r3, #1
   88d0e:	607b      	str	r3, [r7, #4]
   88d10:	4626      	mov	r6, r4
   88d12:	4640      	mov	r0, r8
   88d14:	f7ff fbc6 	bl	884a4 <__malloc_unlock>
   88d18:	4630      	mov	r0, r6
   88d1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88d1e:	07c9      	lsls	r1, r1, #31
   88d20:	d4ad      	bmi.n	88c7e <_realloc_r+0x86>
   88d22:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88d26:	eba9 0a03 	sub.w	sl, r9, r3
   88d2a:	f8da 1004 	ldr.w	r1, [sl, #4]
   88d2e:	f021 0103 	bic.w	r1, r1, #3
   88d32:	e7a0      	b.n	88c76 <_realloc_r+0x7e>
   88d34:	4611      	mov	r1, r2
   88d36:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88d3a:	f7ff b827 	b.w	87d8c <_malloc_r>
   88d3e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88d42:	f043 0301 	orr.w	r3, r3, #1
   88d46:	f001 0101 	and.w	r1, r1, #1
   88d4a:	4329      	orrs	r1, r5
   88d4c:	f8c9 1004 	str.w	r1, [r9, #4]
   88d50:	eb09 0105 	add.w	r1, r9, r5
   88d54:	604b      	str	r3, [r1, #4]
   88d56:	444f      	add	r7, r9
   88d58:	687b      	ldr	r3, [r7, #4]
   88d5a:	4640      	mov	r0, r8
   88d5c:	f043 0301 	orr.w	r3, r3, #1
   88d60:	3108      	adds	r1, #8
   88d62:	607b      	str	r3, [r7, #4]
   88d64:	f7fe fcbc 	bl	876e0 <_free_r>
   88d68:	e7d2      	b.n	88d10 <_realloc_r+0x118>
   88d6a:	f8dc 0004 	ldr.w	r0, [ip, #4]
   88d6e:	f020 0b03 	bic.w	fp, r0, #3
   88d72:	eb07 0c0b 	add.w	ip, r7, fp
   88d76:	f105 0010 	add.w	r0, r5, #16
   88d7a:	4584      	cmp	ip, r0
   88d7c:	da4d      	bge.n	88e1a <_realloc_r+0x222>
   88d7e:	07c9      	lsls	r1, r1, #31
   88d80:	f53f af7d 	bmi.w	88c7e <_realloc_r+0x86>
   88d84:	f854 1c08 	ldr.w	r1, [r4, #-8]
   88d88:	eba9 0a01 	sub.w	sl, r9, r1
   88d8c:	f8da 1004 	ldr.w	r1, [sl, #4]
   88d90:	f021 0103 	bic.w	r1, r1, #3
   88d94:	448b      	add	fp, r1
   88d96:	44bb      	add	fp, r7
   88d98:	4558      	cmp	r0, fp
   88d9a:	f73f af6c 	bgt.w	88c76 <_realloc_r+0x7e>
   88d9e:	4656      	mov	r6, sl
   88da0:	f8da 100c 	ldr.w	r1, [sl, #12]
   88da4:	f856 0f08 	ldr.w	r0, [r6, #8]!
   88da8:	1f3a      	subs	r2, r7, #4
   88daa:	2a24      	cmp	r2, #36	; 0x24
   88dac:	60c1      	str	r1, [r0, #12]
   88dae:	6088      	str	r0, [r1, #8]
   88db0:	f200 80db 	bhi.w	88f6a <_realloc_r+0x372>
   88db4:	2a13      	cmp	r2, #19
   88db6:	f240 80d6 	bls.w	88f66 <_realloc_r+0x36e>
   88dba:	6821      	ldr	r1, [r4, #0]
   88dbc:	2a1b      	cmp	r2, #27
   88dbe:	f8ca 1008 	str.w	r1, [sl, #8]
   88dc2:	6861      	ldr	r1, [r4, #4]
   88dc4:	f8ca 100c 	str.w	r1, [sl, #12]
   88dc8:	f200 80e0 	bhi.w	88f8c <_realloc_r+0x394>
   88dcc:	3408      	adds	r4, #8
   88dce:	f10a 0210 	add.w	r2, sl, #16
   88dd2:	6821      	ldr	r1, [r4, #0]
   88dd4:	6011      	str	r1, [r2, #0]
   88dd6:	6861      	ldr	r1, [r4, #4]
   88dd8:	6051      	str	r1, [r2, #4]
   88dda:	68a1      	ldr	r1, [r4, #8]
   88ddc:	6091      	str	r1, [r2, #8]
   88dde:	ebab 0205 	sub.w	r2, fp, r5
   88de2:	eb0a 0105 	add.w	r1, sl, r5
   88de6:	f042 0201 	orr.w	r2, r2, #1
   88dea:	6099      	str	r1, [r3, #8]
   88dec:	604a      	str	r2, [r1, #4]
   88dee:	f8da 3004 	ldr.w	r3, [sl, #4]
   88df2:	4640      	mov	r0, r8
   88df4:	f003 0301 	and.w	r3, r3, #1
   88df8:	431d      	orrs	r5, r3
   88dfa:	f8ca 5004 	str.w	r5, [sl, #4]
   88dfe:	f7ff fb51 	bl	884a4 <__malloc_unlock>
   88e02:	e76e      	b.n	88ce2 <_realloc_r+0xea>
   88e04:	6823      	ldr	r3, [r4, #0]
   88e06:	2a1b      	cmp	r2, #27
   88e08:	6003      	str	r3, [r0, #0]
   88e0a:	6863      	ldr	r3, [r4, #4]
   88e0c:	6043      	str	r3, [r0, #4]
   88e0e:	d868      	bhi.n	88ee2 <_realloc_r+0x2ea>
   88e10:	f104 0208 	add.w	r2, r4, #8
   88e14:	f100 0308 	add.w	r3, r0, #8
   88e18:	e74a      	b.n	88cb0 <_realloc_r+0xb8>
   88e1a:	eb09 0205 	add.w	r2, r9, r5
   88e1e:	ebac 0c05 	sub.w	ip, ip, r5
   88e22:	609a      	str	r2, [r3, #8]
   88e24:	f04c 0301 	orr.w	r3, ip, #1
   88e28:	6053      	str	r3, [r2, #4]
   88e2a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88e2e:	4640      	mov	r0, r8
   88e30:	f003 0301 	and.w	r3, r3, #1
   88e34:	431d      	orrs	r5, r3
   88e36:	f844 5c04 	str.w	r5, [r4, #-4]
   88e3a:	f7ff fb33 	bl	884a4 <__malloc_unlock>
   88e3e:	4626      	mov	r6, r4
   88e40:	e74f      	b.n	88ce2 <_realloc_r+0xea>
   88e42:	f850 3c04 	ldr.w	r3, [r0, #-4]
   88e46:	f023 0303 	bic.w	r3, r3, #3
   88e4a:	441f      	add	r7, r3
   88e4c:	e751      	b.n	88cf2 <_realloc_r+0xfa>
   88e4e:	4656      	mov	r6, sl
   88e50:	f8da 100c 	ldr.w	r1, [sl, #12]
   88e54:	f856 0f08 	ldr.w	r0, [r6, #8]!
   88e58:	1f3a      	subs	r2, r7, #4
   88e5a:	2a24      	cmp	r2, #36	; 0x24
   88e5c:	60c1      	str	r1, [r0, #12]
   88e5e:	6088      	str	r0, [r1, #8]
   88e60:	d84c      	bhi.n	88efc <_realloc_r+0x304>
   88e62:	2a13      	cmp	r2, #19
   88e64:	d948      	bls.n	88ef8 <_realloc_r+0x300>
   88e66:	6821      	ldr	r1, [r4, #0]
   88e68:	2a1b      	cmp	r2, #27
   88e6a:	f8ca 1008 	str.w	r1, [sl, #8]
   88e6e:	6861      	ldr	r1, [r4, #4]
   88e70:	f8ca 100c 	str.w	r1, [sl, #12]
   88e74:	d856      	bhi.n	88f24 <_realloc_r+0x32c>
   88e76:	3408      	adds	r4, #8
   88e78:	f10a 0210 	add.w	r2, sl, #16
   88e7c:	461f      	mov	r7, r3
   88e7e:	6823      	ldr	r3, [r4, #0]
   88e80:	46d1      	mov	r9, sl
   88e82:	6013      	str	r3, [r2, #0]
   88e84:	6863      	ldr	r3, [r4, #4]
   88e86:	6053      	str	r3, [r2, #4]
   88e88:	68a3      	ldr	r3, [r4, #8]
   88e8a:	4634      	mov	r4, r6
   88e8c:	6093      	str	r3, [r2, #8]
   88e8e:	e730      	b.n	88cf2 <_realloc_r+0xfa>
   88e90:	4621      	mov	r1, r4
   88e92:	f7ff fa85 	bl	883a0 <memmove>
   88e96:	e711      	b.n	88cbc <_realloc_r+0xc4>
   88e98:	4656      	mov	r6, sl
   88e9a:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
   88e9e:	60cb      	str	r3, [r1, #12]
   88ea0:	6099      	str	r1, [r3, #8]
   88ea2:	f856 1f08 	ldr.w	r1, [r6, #8]!
   88ea6:	f8da 300c 	ldr.w	r3, [sl, #12]
   88eaa:	1f3a      	subs	r2, r7, #4
   88eac:	2a24      	cmp	r2, #36	; 0x24
   88eae:	60cb      	str	r3, [r1, #12]
   88eb0:	6099      	str	r1, [r3, #8]
   88eb2:	d82d      	bhi.n	88f10 <_realloc_r+0x318>
   88eb4:	2a13      	cmp	r2, #19
   88eb6:	d929      	bls.n	88f0c <_realloc_r+0x314>
   88eb8:	6823      	ldr	r3, [r4, #0]
   88eba:	2a1b      	cmp	r2, #27
   88ebc:	f8ca 3008 	str.w	r3, [sl, #8]
   88ec0:	6863      	ldr	r3, [r4, #4]
   88ec2:	f8ca 300c 	str.w	r3, [sl, #12]
   88ec6:	d842      	bhi.n	88f4e <_realloc_r+0x356>
   88ec8:	3408      	adds	r4, #8
   88eca:	f10a 0310 	add.w	r3, sl, #16
   88ece:	6822      	ldr	r2, [r4, #0]
   88ed0:	4667      	mov	r7, ip
   88ed2:	601a      	str	r2, [r3, #0]
   88ed4:	6862      	ldr	r2, [r4, #4]
   88ed6:	46d1      	mov	r9, sl
   88ed8:	605a      	str	r2, [r3, #4]
   88eda:	68a2      	ldr	r2, [r4, #8]
   88edc:	4634      	mov	r4, r6
   88ede:	609a      	str	r2, [r3, #8]
   88ee0:	e707      	b.n	88cf2 <_realloc_r+0xfa>
   88ee2:	68a3      	ldr	r3, [r4, #8]
   88ee4:	2a24      	cmp	r2, #36	; 0x24
   88ee6:	6083      	str	r3, [r0, #8]
   88ee8:	68e3      	ldr	r3, [r4, #12]
   88eea:	60c3      	str	r3, [r0, #12]
   88eec:	d026      	beq.n	88f3c <_realloc_r+0x344>
   88eee:	f104 0210 	add.w	r2, r4, #16
   88ef2:	f100 0310 	add.w	r3, r0, #16
   88ef6:	e6db      	b.n	88cb0 <_realloc_r+0xb8>
   88ef8:	4632      	mov	r2, r6
   88efa:	e7bf      	b.n	88e7c <_realloc_r+0x284>
   88efc:	4621      	mov	r1, r4
   88efe:	4630      	mov	r0, r6
   88f00:	461f      	mov	r7, r3
   88f02:	46d1      	mov	r9, sl
   88f04:	f7ff fa4c 	bl	883a0 <memmove>
   88f08:	4634      	mov	r4, r6
   88f0a:	e6f2      	b.n	88cf2 <_realloc_r+0xfa>
   88f0c:	4633      	mov	r3, r6
   88f0e:	e7de      	b.n	88ece <_realloc_r+0x2d6>
   88f10:	4621      	mov	r1, r4
   88f12:	4630      	mov	r0, r6
   88f14:	4667      	mov	r7, ip
   88f16:	46d1      	mov	r9, sl
   88f18:	f7ff fa42 	bl	883a0 <memmove>
   88f1c:	4634      	mov	r4, r6
   88f1e:	e6e8      	b.n	88cf2 <_realloc_r+0xfa>
   88f20:	20000948 	.word	0x20000948
   88f24:	68a1      	ldr	r1, [r4, #8]
   88f26:	2a24      	cmp	r2, #36	; 0x24
   88f28:	f8ca 1010 	str.w	r1, [sl, #16]
   88f2c:	68e1      	ldr	r1, [r4, #12]
   88f2e:	f8ca 1014 	str.w	r1, [sl, #20]
   88f32:	d020      	beq.n	88f76 <_realloc_r+0x37e>
   88f34:	3410      	adds	r4, #16
   88f36:	f10a 0218 	add.w	r2, sl, #24
   88f3a:	e79f      	b.n	88e7c <_realloc_r+0x284>
   88f3c:	6923      	ldr	r3, [r4, #16]
   88f3e:	f104 0218 	add.w	r2, r4, #24
   88f42:	6103      	str	r3, [r0, #16]
   88f44:	6963      	ldr	r3, [r4, #20]
   88f46:	6143      	str	r3, [r0, #20]
   88f48:	f100 0318 	add.w	r3, r0, #24
   88f4c:	e6b0      	b.n	88cb0 <_realloc_r+0xb8>
   88f4e:	68a3      	ldr	r3, [r4, #8]
   88f50:	2a24      	cmp	r2, #36	; 0x24
   88f52:	f8ca 3010 	str.w	r3, [sl, #16]
   88f56:	68e3      	ldr	r3, [r4, #12]
   88f58:	f8ca 3014 	str.w	r3, [sl, #20]
   88f5c:	d022      	beq.n	88fa4 <_realloc_r+0x3ac>
   88f5e:	3410      	adds	r4, #16
   88f60:	f10a 0318 	add.w	r3, sl, #24
   88f64:	e7b3      	b.n	88ece <_realloc_r+0x2d6>
   88f66:	4632      	mov	r2, r6
   88f68:	e733      	b.n	88dd2 <_realloc_r+0x1da>
   88f6a:	4621      	mov	r1, r4
   88f6c:	4630      	mov	r0, r6
   88f6e:	f7ff fa17 	bl	883a0 <memmove>
   88f72:	4b17      	ldr	r3, [pc, #92]	; (88fd0 <_realloc_r+0x3d8>)
   88f74:	e733      	b.n	88dde <_realloc_r+0x1e6>
   88f76:	6922      	ldr	r2, [r4, #16]
   88f78:	3418      	adds	r4, #24
   88f7a:	f8ca 2018 	str.w	r2, [sl, #24]
   88f7e:	f854 2c04 	ldr.w	r2, [r4, #-4]
   88f82:	f8ca 201c 	str.w	r2, [sl, #28]
   88f86:	f10a 0220 	add.w	r2, sl, #32
   88f8a:	e777      	b.n	88e7c <_realloc_r+0x284>
   88f8c:	68a1      	ldr	r1, [r4, #8]
   88f8e:	2a24      	cmp	r2, #36	; 0x24
   88f90:	f8ca 1010 	str.w	r1, [sl, #16]
   88f94:	68e1      	ldr	r1, [r4, #12]
   88f96:	f8ca 1014 	str.w	r1, [sl, #20]
   88f9a:	d00e      	beq.n	88fba <_realloc_r+0x3c2>
   88f9c:	3410      	adds	r4, #16
   88f9e:	f10a 0218 	add.w	r2, sl, #24
   88fa2:	e716      	b.n	88dd2 <_realloc_r+0x1da>
   88fa4:	6923      	ldr	r3, [r4, #16]
   88fa6:	3418      	adds	r4, #24
   88fa8:	f8ca 3018 	str.w	r3, [sl, #24]
   88fac:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88fb0:	f8ca 301c 	str.w	r3, [sl, #28]
   88fb4:	f10a 0320 	add.w	r3, sl, #32
   88fb8:	e789      	b.n	88ece <_realloc_r+0x2d6>
   88fba:	6922      	ldr	r2, [r4, #16]
   88fbc:	3418      	adds	r4, #24
   88fbe:	f8ca 2018 	str.w	r2, [sl, #24]
   88fc2:	f854 2c04 	ldr.w	r2, [r4, #-4]
   88fc6:	f8ca 201c 	str.w	r2, [sl, #28]
   88fca:	f10a 0220 	add.w	r2, sl, #32
   88fce:	e700      	b.n	88dd2 <_realloc_r+0x1da>
   88fd0:	20000948 	.word	0x20000948

00088fd4 <frexp>:
   88fd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   88fd6:	2700      	movs	r7, #0
   88fd8:	f8df c05c 	ldr.w	ip, [pc, #92]	; 89038 <frexp+0x64>
   88fdc:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   88fe0:	4563      	cmp	r3, ip
   88fe2:	4604      	mov	r4, r0
   88fe4:	460d      	mov	r5, r1
   88fe6:	6017      	str	r7, [r2, #0]
   88fe8:	dc23      	bgt.n	89032 <frexp+0x5e>
   88fea:	4684      	mov	ip, r0
   88fec:	ea53 0c0c 	orrs.w	ip, r3, ip
   88ff0:	d01f      	beq.n	89032 <frexp+0x5e>
   88ff2:	f8df c048 	ldr.w	ip, [pc, #72]	; 8903c <frexp+0x68>
   88ff6:	4616      	mov	r6, r2
   88ff8:	ea01 0c0c 	and.w	ip, r1, ip
   88ffc:	460a      	mov	r2, r1
   88ffe:	f1bc 0f00 	cmp.w	ip, #0
   89002:	d109      	bne.n	89018 <frexp+0x44>
   89004:	2200      	movs	r2, #0
   89006:	4b0e      	ldr	r3, [pc, #56]	; (89040 <frexp+0x6c>)
   89008:	f000 fd1a 	bl	89a40 <__aeabi_dmul>
   8900c:	f06f 0735 	mvn.w	r7, #53	; 0x35
   89010:	4604      	mov	r4, r0
   89012:	460a      	mov	r2, r1
   89014:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   89018:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
   8901c:	151b      	asrs	r3, r3, #20
   8901e:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
   89022:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
   89026:	443b      	add	r3, r7
   89028:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   8902c:	6033      	str	r3, [r6, #0]
   8902e:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
   89032:	4620      	mov	r0, r4
   89034:	4629      	mov	r1, r5
   89036:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   89038:	7fefffff 	.word	0x7fefffff
   8903c:	7ff00000 	.word	0x7ff00000
   89040:	43500000 	.word	0x43500000

00089044 <_sbrk_r>:
   89044:	2200      	movs	r2, #0
   89046:	b538      	push	{r3, r4, r5, lr}
   89048:	4d06      	ldr	r5, [pc, #24]	; (89064 <_sbrk_r+0x20>)
   8904a:	4604      	mov	r4, r0
   8904c:	4608      	mov	r0, r1
   8904e:	602a      	str	r2, [r5, #0]
   89050:	f7f8 fdc2 	bl	81bd8 <_sbrk>
   89054:	1c43      	adds	r3, r0, #1
   89056:	d000      	beq.n	8905a <_sbrk_r+0x16>
   89058:	bd38      	pop	{r3, r4, r5, pc}
   8905a:	682b      	ldr	r3, [r5, #0]
   8905c:	2b00      	cmp	r3, #0
   8905e:	d0fb      	beq.n	89058 <_sbrk_r+0x14>
   89060:	6023      	str	r3, [r4, #0]
   89062:	bd38      	pop	{r3, r4, r5, pc}
   89064:	20003710 	.word	0x20003710

00089068 <__sread>:
   89068:	b510      	push	{r4, lr}
   8906a:	460c      	mov	r4, r1
   8906c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   89070:	f000 fac8 	bl	89604 <_read_r>
   89074:	2800      	cmp	r0, #0
   89076:	db03      	blt.n	89080 <__sread+0x18>
   89078:	6d23      	ldr	r3, [r4, #80]	; 0x50
   8907a:	4403      	add	r3, r0
   8907c:	6523      	str	r3, [r4, #80]	; 0x50
   8907e:	bd10      	pop	{r4, pc}
   89080:	89a3      	ldrh	r3, [r4, #12]
   89082:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   89086:	81a3      	strh	r3, [r4, #12]
   89088:	bd10      	pop	{r4, pc}
   8908a:	bf00      	nop

0008908c <__swrite>:
   8908c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   89090:	460c      	mov	r4, r1
   89092:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   89096:	461f      	mov	r7, r3
   89098:	05cb      	lsls	r3, r1, #23
   8909a:	4605      	mov	r5, r0
   8909c:	4616      	mov	r6, r2
   8909e:	d40b      	bmi.n	890b8 <__swrite+0x2c>
   890a0:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   890a4:	81a1      	strh	r1, [r4, #12]
   890a6:	463b      	mov	r3, r7
   890a8:	4632      	mov	r2, r6
   890aa:	4628      	mov	r0, r5
   890ac:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   890b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   890b4:	f000 b920 	b.w	892f8 <_write_r>
   890b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   890bc:	2302      	movs	r3, #2
   890be:	2200      	movs	r2, #0
   890c0:	f000 fa8a 	bl	895d8 <_lseek_r>
   890c4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   890c8:	e7ea      	b.n	890a0 <__swrite+0x14>
   890ca:	bf00      	nop

000890cc <__sseek>:
   890cc:	b510      	push	{r4, lr}
   890ce:	460c      	mov	r4, r1
   890d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   890d4:	f000 fa80 	bl	895d8 <_lseek_r>
   890d8:	89a3      	ldrh	r3, [r4, #12]
   890da:	1c42      	adds	r2, r0, #1
   890dc:	bf0e      	itee	eq
   890de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   890e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   890e6:	6520      	strne	r0, [r4, #80]	; 0x50
   890e8:	81a3      	strh	r3, [r4, #12]
   890ea:	bd10      	pop	{r4, pc}

000890ec <__sclose>:
   890ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   890f0:	f000 b9ba 	b.w	89468 <_close_r>

000890f4 <__ssprint_r>:
   890f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   890f8:	6893      	ldr	r3, [r2, #8]
   890fa:	4691      	mov	r9, r2
   890fc:	b083      	sub	sp, #12
   890fe:	2b00      	cmp	r3, #0
   89100:	d06e      	beq.n	891e0 <__ssprint_r+0xec>
   89102:	6817      	ldr	r7, [r2, #0]
   89104:	4680      	mov	r8, r0
   89106:	460c      	mov	r4, r1
   89108:	6808      	ldr	r0, [r1, #0]
   8910a:	688d      	ldr	r5, [r1, #8]
   8910c:	3708      	adds	r7, #8
   8910e:	e044      	b.n	8919a <__ssprint_r+0xa6>
   89110:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
   89114:	f41c 6f90 	tst.w	ip, #1152	; 0x480
   89118:	d02e      	beq.n	89178 <__ssprint_r+0x84>
   8911a:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
   8911e:	1a45      	subs	r5, r0, r1
   89120:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   89124:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   89128:	19aa      	adds	r2, r5, r6
   8912a:	ea4f 0a63 	mov.w	sl, r3, asr #1
   8912e:	1c53      	adds	r3, r2, #1
   89130:	4553      	cmp	r3, sl
   89132:	4652      	mov	r2, sl
   89134:	bf84      	itt	hi
   89136:	469a      	movhi	sl, r3
   89138:	4652      	movhi	r2, sl
   8913a:	f41c 6f80 	tst.w	ip, #1024	; 0x400
   8913e:	d036      	beq.n	891ae <__ssprint_r+0xba>
   89140:	4611      	mov	r1, r2
   89142:	4640      	mov	r0, r8
   89144:	f7fe fe22 	bl	87d8c <_malloc_r>
   89148:	2800      	cmp	r0, #0
   8914a:	d03a      	beq.n	891c2 <__ssprint_r+0xce>
   8914c:	462a      	mov	r2, r5
   8914e:	6921      	ldr	r1, [r4, #16]
   89150:	9001      	str	r0, [sp, #4]
   89152:	f7fa f943 	bl	833dc <memcpy>
   89156:	89a2      	ldrh	r2, [r4, #12]
   89158:	9b01      	ldr	r3, [sp, #4]
   8915a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8915e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   89162:	81a2      	strh	r2, [r4, #12]
   89164:	1958      	adds	r0, r3, r5
   89166:	ebaa 0505 	sub.w	r5, sl, r5
   8916a:	60a5      	str	r5, [r4, #8]
   8916c:	f8c4 a014 	str.w	sl, [r4, #20]
   89170:	4635      	mov	r5, r6
   89172:	46b2      	mov	sl, r6
   89174:	6123      	str	r3, [r4, #16]
   89176:	6020      	str	r0, [r4, #0]
   89178:	4659      	mov	r1, fp
   8917a:	4652      	mov	r2, sl
   8917c:	f7ff f910 	bl	883a0 <memmove>
   89180:	f8d9 3008 	ldr.w	r3, [r9, #8]
   89184:	68a1      	ldr	r1, [r4, #8]
   89186:	6820      	ldr	r0, [r4, #0]
   89188:	1b4d      	subs	r5, r1, r5
   8918a:	4450      	add	r0, sl
   8918c:	1b9e      	subs	r6, r3, r6
   8918e:	60a5      	str	r5, [r4, #8]
   89190:	6020      	str	r0, [r4, #0]
   89192:	f8c9 6008 	str.w	r6, [r9, #8]
   89196:	b31e      	cbz	r6, 891e0 <__ssprint_r+0xec>
   89198:	3708      	adds	r7, #8
   8919a:	e957 b602 	ldrd	fp, r6, [r7, #-8]
   8919e:	2e00      	cmp	r6, #0
   891a0:	d0fa      	beq.n	89198 <__ssprint_r+0xa4>
   891a2:	42b5      	cmp	r5, r6
   891a4:	46aa      	mov	sl, r5
   891a6:	d9b3      	bls.n	89110 <__ssprint_r+0x1c>
   891a8:	4635      	mov	r5, r6
   891aa:	46b2      	mov	sl, r6
   891ac:	e7e4      	b.n	89178 <__ssprint_r+0x84>
   891ae:	4640      	mov	r0, r8
   891b0:	f7ff fd22 	bl	88bf8 <_realloc_r>
   891b4:	4603      	mov	r3, r0
   891b6:	2800      	cmp	r0, #0
   891b8:	d1d4      	bne.n	89164 <__ssprint_r+0x70>
   891ba:	4640      	mov	r0, r8
   891bc:	6921      	ldr	r1, [r4, #16]
   891be:	f7fe fa8f 	bl	876e0 <_free_r>
   891c2:	230c      	movs	r3, #12
   891c4:	2200      	movs	r2, #0
   891c6:	f04f 30ff 	mov.w	r0, #4294967295
   891ca:	f8c8 3000 	str.w	r3, [r8]
   891ce:	89a3      	ldrh	r3, [r4, #12]
   891d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   891d4:	81a3      	strh	r3, [r4, #12]
   891d6:	e9c9 2201 	strd	r2, r2, [r9, #4]
   891da:	b003      	add	sp, #12
   891dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   891e0:	2300      	movs	r3, #0
   891e2:	4618      	mov	r0, r3
   891e4:	f8c9 3004 	str.w	r3, [r9, #4]
   891e8:	b003      	add	sp, #12
   891ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   891ee:	bf00      	nop

000891f0 <__swbuf_r>:
   891f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   891f2:	4606      	mov	r6, r0
   891f4:	460d      	mov	r5, r1
   891f6:	4614      	mov	r4, r2
   891f8:	b110      	cbz	r0, 89200 <__swbuf_r+0x10>
   891fa:	6b83      	ldr	r3, [r0, #56]	; 0x38
   891fc:	2b00      	cmp	r3, #0
   891fe:	d043      	beq.n	89288 <__swbuf_r+0x98>
   89200:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   89204:	69a3      	ldr	r3, [r4, #24]
   89206:	0710      	lsls	r0, r2, #28
   89208:	60a3      	str	r3, [r4, #8]
   8920a:	b291      	uxth	r1, r2
   8920c:	d51b      	bpl.n	89246 <__swbuf_r+0x56>
   8920e:	6923      	ldr	r3, [r4, #16]
   89210:	b1cb      	cbz	r3, 89246 <__swbuf_r+0x56>
   89212:	b2ed      	uxtb	r5, r5
   89214:	0489      	lsls	r1, r1, #18
   89216:	462f      	mov	r7, r5
   89218:	d522      	bpl.n	89260 <__swbuf_r+0x70>
   8921a:	6822      	ldr	r2, [r4, #0]
   8921c:	6961      	ldr	r1, [r4, #20]
   8921e:	1ad3      	subs	r3, r2, r3
   89220:	4299      	cmp	r1, r3
   89222:	dd29      	ble.n	89278 <__swbuf_r+0x88>
   89224:	3301      	adds	r3, #1
   89226:	68a1      	ldr	r1, [r4, #8]
   89228:	3901      	subs	r1, #1
   8922a:	60a1      	str	r1, [r4, #8]
   8922c:	1c51      	adds	r1, r2, #1
   8922e:	6021      	str	r1, [r4, #0]
   89230:	7015      	strb	r5, [r2, #0]
   89232:	6962      	ldr	r2, [r4, #20]
   89234:	429a      	cmp	r2, r3
   89236:	d02a      	beq.n	8928e <__swbuf_r+0x9e>
   89238:	89a3      	ldrh	r3, [r4, #12]
   8923a:	07db      	lsls	r3, r3, #31
   8923c:	d501      	bpl.n	89242 <__swbuf_r+0x52>
   8923e:	2d0a      	cmp	r5, #10
   89240:	d025      	beq.n	8928e <__swbuf_r+0x9e>
   89242:	4638      	mov	r0, r7
   89244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   89246:	4621      	mov	r1, r4
   89248:	4630      	mov	r0, r6
   8924a:	f7fc ff8f 	bl	8616c <__swsetup_r>
   8924e:	bb20      	cbnz	r0, 8929a <__swbuf_r+0xaa>
   89250:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   89254:	b2ed      	uxtb	r5, r5
   89256:	b291      	uxth	r1, r2
   89258:	0489      	lsls	r1, r1, #18
   8925a:	462f      	mov	r7, r5
   8925c:	6923      	ldr	r3, [r4, #16]
   8925e:	d4dc      	bmi.n	8921a <__swbuf_r+0x2a>
   89260:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   89264:	81a2      	strh	r2, [r4, #12]
   89266:	6e62      	ldr	r2, [r4, #100]	; 0x64
   89268:	6961      	ldr	r1, [r4, #20]
   8926a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   8926e:	6662      	str	r2, [r4, #100]	; 0x64
   89270:	6822      	ldr	r2, [r4, #0]
   89272:	1ad3      	subs	r3, r2, r3
   89274:	4299      	cmp	r1, r3
   89276:	dcd5      	bgt.n	89224 <__swbuf_r+0x34>
   89278:	4621      	mov	r1, r4
   8927a:	4630      	mov	r0, r6
   8927c:	f7fe f880 	bl	87380 <_fflush_r>
   89280:	b958      	cbnz	r0, 8929a <__swbuf_r+0xaa>
   89282:	2301      	movs	r3, #1
   89284:	6822      	ldr	r2, [r4, #0]
   89286:	e7ce      	b.n	89226 <__swbuf_r+0x36>
   89288:	f7fe f8ae 	bl	873e8 <__sinit>
   8928c:	e7b8      	b.n	89200 <__swbuf_r+0x10>
   8928e:	4621      	mov	r1, r4
   89290:	4630      	mov	r0, r6
   89292:	f7fe f875 	bl	87380 <_fflush_r>
   89296:	2800      	cmp	r0, #0
   89298:	d0d3      	beq.n	89242 <__swbuf_r+0x52>
   8929a:	f04f 37ff 	mov.w	r7, #4294967295
   8929e:	e7d0      	b.n	89242 <__swbuf_r+0x52>

000892a0 <_wcrtomb_r>:
   892a0:	b570      	push	{r4, r5, r6, lr}
   892a2:	4605      	mov	r5, r0
   892a4:	461c      	mov	r4, r3
   892a6:	b084      	sub	sp, #16
   892a8:	b139      	cbz	r1, 892ba <_wcrtomb_r+0x1a>
   892aa:	4e0b      	ldr	r6, [pc, #44]	; (892d8 <_wcrtomb_r+0x38>)
   892ac:	f8d6 60e0 	ldr.w	r6, [r6, #224]	; 0xe0
   892b0:	47b0      	blx	r6
   892b2:	1c43      	adds	r3, r0, #1
   892b4:	d009      	beq.n	892ca <_wcrtomb_r+0x2a>
   892b6:	b004      	add	sp, #16
   892b8:	bd70      	pop	{r4, r5, r6, pc}
   892ba:	460a      	mov	r2, r1
   892bc:	4906      	ldr	r1, [pc, #24]	; (892d8 <_wcrtomb_r+0x38>)
   892be:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   892c2:	a901      	add	r1, sp, #4
   892c4:	47b0      	blx	r6
   892c6:	1c43      	adds	r3, r0, #1
   892c8:	d1f5      	bne.n	892b6 <_wcrtomb_r+0x16>
   892ca:	2200      	movs	r2, #0
   892cc:	238a      	movs	r3, #138	; 0x8a
   892ce:	6022      	str	r2, [r4, #0]
   892d0:	602b      	str	r3, [r5, #0]
   892d2:	b004      	add	sp, #16
   892d4:	bd70      	pop	{r4, r5, r6, pc}
   892d6:	bf00      	nop
   892d8:	200007dc 	.word	0x200007dc

000892dc <__ascii_wctomb>:
   892dc:	4603      	mov	r3, r0
   892de:	b149      	cbz	r1, 892f4 <__ascii_wctomb+0x18>
   892e0:	2aff      	cmp	r2, #255	; 0xff
   892e2:	d802      	bhi.n	892ea <__ascii_wctomb+0xe>
   892e4:	2001      	movs	r0, #1
   892e6:	700a      	strb	r2, [r1, #0]
   892e8:	4770      	bx	lr
   892ea:	228a      	movs	r2, #138	; 0x8a
   892ec:	f04f 30ff 	mov.w	r0, #4294967295
   892f0:	601a      	str	r2, [r3, #0]
   892f2:	4770      	bx	lr
   892f4:	4608      	mov	r0, r1
   892f6:	4770      	bx	lr

000892f8 <_write_r>:
   892f8:	b538      	push	{r3, r4, r5, lr}
   892fa:	460c      	mov	r4, r1
   892fc:	4611      	mov	r1, r2
   892fe:	2200      	movs	r2, #0
   89300:	4684      	mov	ip, r0
   89302:	4d07      	ldr	r5, [pc, #28]	; (89320 <_write_r+0x28>)
   89304:	4620      	mov	r0, r4
   89306:	602a      	str	r2, [r5, #0]
   89308:	461a      	mov	r2, r3
   8930a:	4664      	mov	r4, ip
   8930c:	f7fa f808 	bl	83320 <_write>
   89310:	1c43      	adds	r3, r0, #1
   89312:	d000      	beq.n	89316 <_write_r+0x1e>
   89314:	bd38      	pop	{r3, r4, r5, pc}
   89316:	682b      	ldr	r3, [r5, #0]
   89318:	2b00      	cmp	r3, #0
   8931a:	d0fb      	beq.n	89314 <_write_r+0x1c>
   8931c:	6023      	str	r3, [r4, #0]
   8931e:	bd38      	pop	{r3, r4, r5, pc}
   89320:	20003710 	.word	0x20003710

00089324 <__register_exitproc>:
   89324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   89328:	f8df a07c 	ldr.w	sl, [pc, #124]	; 893a8 <__register_exitproc+0x84>
   8932c:	4606      	mov	r6, r0
   8932e:	f8da 0000 	ldr.w	r0, [sl]
   89332:	4698      	mov	r8, r3
   89334:	460f      	mov	r7, r1
   89336:	4691      	mov	r9, r2
   89338:	f7fe fc7c 	bl	87c34 <__retarget_lock_acquire_recursive>
   8933c:	4b1b      	ldr	r3, [pc, #108]	; (893ac <__register_exitproc+0x88>)
   8933e:	681b      	ldr	r3, [r3, #0]
   89340:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
   89344:	b324      	cbz	r4, 89390 <__register_exitproc+0x6c>
   89346:	6865      	ldr	r5, [r4, #4]
   89348:	2d1f      	cmp	r5, #31
   8934a:	dc26      	bgt.n	8939a <__register_exitproc+0x76>
   8934c:	b95e      	cbnz	r6, 89366 <__register_exitproc+0x42>
   8934e:	1c6b      	adds	r3, r5, #1
   89350:	3502      	adds	r5, #2
   89352:	f8da 0000 	ldr.w	r0, [sl]
   89356:	6063      	str	r3, [r4, #4]
   89358:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   8935c:	f7fe fc6c 	bl	87c38 <__retarget_lock_release_recursive>
   89360:	2000      	movs	r0, #0
   89362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89366:	2301      	movs	r3, #1
   89368:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   8936c:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   89370:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   89374:	40ab      	lsls	r3, r5
   89376:	431a      	orrs	r2, r3
   89378:	2e02      	cmp	r6, #2
   8937a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   8937e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   89382:	d1e4      	bne.n	8934e <__register_exitproc+0x2a>
   89384:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   89388:	4313      	orrs	r3, r2
   8938a:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
   8938e:	e7de      	b.n	8934e <__register_exitproc+0x2a>
   89390:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
   89394:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
   89398:	e7d5      	b.n	89346 <__register_exitproc+0x22>
   8939a:	f8da 0000 	ldr.w	r0, [sl]
   8939e:	f7fe fc4b 	bl	87c38 <__retarget_lock_release_recursive>
   893a2:	f04f 30ff 	mov.w	r0, #4294967295
   893a6:	e7dc      	b.n	89362 <__register_exitproc+0x3e>
   893a8:	200007d8 	.word	0x200007d8
   893ac:	0008a384 	.word	0x0008a384

000893b0 <__assert_func>:
   893b0:	4614      	mov	r4, r2
   893b2:	b500      	push	{lr}
   893b4:	461a      	mov	r2, r3
   893b6:	4b0a      	ldr	r3, [pc, #40]	; (893e0 <__assert_func+0x30>)
   893b8:	460d      	mov	r5, r1
   893ba:	681b      	ldr	r3, [r3, #0]
   893bc:	b085      	sub	sp, #20
   893be:	68de      	ldr	r6, [r3, #12]
   893c0:	4603      	mov	r3, r0
   893c2:	b14c      	cbz	r4, 893d8 <__assert_func+0x28>
   893c4:	4907      	ldr	r1, [pc, #28]	; (893e4 <__assert_func+0x34>)
   893c6:	9101      	str	r1, [sp, #4]
   893c8:	4630      	mov	r0, r6
   893ca:	4907      	ldr	r1, [pc, #28]	; (893e8 <__assert_func+0x38>)
   893cc:	9402      	str	r4, [sp, #8]
   893ce:	9500      	str	r5, [sp, #0]
   893d0:	f000 f8c8 	bl	89564 <fiprintf>
   893d4:	f000 f92c 	bl	89630 <abort>
   893d8:	4904      	ldr	r1, [pc, #16]	; (893ec <__assert_func+0x3c>)
   893da:	460c      	mov	r4, r1
   893dc:	e7f3      	b.n	893c6 <__assert_func+0x16>
   893de:	bf00      	nop
   893e0:	200003ac 	.word	0x200003ac
   893e4:	0008a63c 	.word	0x0008a63c
   893e8:	0008a64c 	.word	0x0008a64c
   893ec:	0008a348 	.word	0x0008a348

000893f0 <_calloc_r>:
   893f0:	b538      	push	{r3, r4, r5, lr}
   893f2:	fba1 1402 	umull	r1, r4, r1, r2
   893f6:	bb84      	cbnz	r4, 8945a <_calloc_r+0x6a>
   893f8:	f7fe fcc8 	bl	87d8c <_malloc_r>
   893fc:	4605      	mov	r5, r0
   893fe:	b1d8      	cbz	r0, 89438 <_calloc_r+0x48>
   89400:	f850 2c04 	ldr.w	r2, [r0, #-4]
   89404:	f022 0203 	bic.w	r2, r2, #3
   89408:	3a04      	subs	r2, #4
   8940a:	2a24      	cmp	r2, #36	; 0x24
   8940c:	d816      	bhi.n	8943c <_calloc_r+0x4c>
   8940e:	2a13      	cmp	r2, #19
   89410:	d919      	bls.n	89446 <_calloc_r+0x56>
   89412:	2a1b      	cmp	r2, #27
   89414:	e9c0 4400 	strd	r4, r4, [r0]
   89418:	d91c      	bls.n	89454 <_calloc_r+0x64>
   8941a:	2300      	movs	r3, #0
   8941c:	2a24      	cmp	r2, #36	; 0x24
   8941e:	bf14      	ite	ne
   89420:	f100 0210 	addne.w	r2, r0, #16
   89424:	f100 0218 	addeq.w	r2, r0, #24
   89428:	e9c0 4402 	strd	r4, r4, [r0, #8]
   8942c:	bf04      	itt	eq
   8942e:	6104      	streq	r4, [r0, #16]
   89430:	6144      	streq	r4, [r0, #20]
   89432:	e9c2 3300 	strd	r3, r3, [r2]
   89436:	6093      	str	r3, [r2, #8]
   89438:	4628      	mov	r0, r5
   8943a:	bd38      	pop	{r3, r4, r5, pc}
   8943c:	4621      	mov	r1, r4
   8943e:	f7fa f843 	bl	834c8 <memset>
   89442:	4628      	mov	r0, r5
   89444:	bd38      	pop	{r3, r4, r5, pc}
   89446:	4602      	mov	r2, r0
   89448:	2300      	movs	r3, #0
   8944a:	4628      	mov	r0, r5
   8944c:	e9c2 3300 	strd	r3, r3, [r2]
   89450:	6093      	str	r3, [r2, #8]
   89452:	bd38      	pop	{r3, r4, r5, pc}
   89454:	f100 0208 	add.w	r2, r0, #8
   89458:	e7f6      	b.n	89448 <_calloc_r+0x58>
   8945a:	f000 f817 	bl	8948c <__errno>
   8945e:	230c      	movs	r3, #12
   89460:	2500      	movs	r5, #0
   89462:	6003      	str	r3, [r0, #0]
   89464:	e7e8      	b.n	89438 <_calloc_r+0x48>
   89466:	bf00      	nop

00089468 <_close_r>:
   89468:	2200      	movs	r2, #0
   8946a:	b538      	push	{r3, r4, r5, lr}
   8946c:	4d06      	ldr	r5, [pc, #24]	; (89488 <_close_r+0x20>)
   8946e:	4604      	mov	r4, r0
   89470:	4608      	mov	r0, r1
   89472:	602a      	str	r2, [r5, #0]
   89474:	f7f8 fbd0 	bl	81c18 <_close>
   89478:	1c43      	adds	r3, r0, #1
   8947a:	d000      	beq.n	8947e <_close_r+0x16>
   8947c:	bd38      	pop	{r3, r4, r5, pc}
   8947e:	682b      	ldr	r3, [r5, #0]
   89480:	2b00      	cmp	r3, #0
   89482:	d0fb      	beq.n	8947c <_close_r+0x14>
   89484:	6023      	str	r3, [r4, #0]
   89486:	bd38      	pop	{r3, r4, r5, pc}
   89488:	20003710 	.word	0x20003710

0008948c <__errno>:
   8948c:	4b01      	ldr	r3, [pc, #4]	; (89494 <__errno+0x8>)
   8948e:	6818      	ldr	r0, [r3, #0]
   89490:	4770      	bx	lr
   89492:	bf00      	nop
   89494:	200003ac 	.word	0x200003ac

00089498 <_fclose_r>:
   89498:	b570      	push	{r4, r5, r6, lr}
   8949a:	2900      	cmp	r1, #0
   8949c:	d04b      	beq.n	89536 <_fclose_r+0x9e>
   8949e:	4606      	mov	r6, r0
   894a0:	460c      	mov	r4, r1
   894a2:	b110      	cbz	r0, 894aa <_fclose_r+0x12>
   894a4:	6b83      	ldr	r3, [r0, #56]	; 0x38
   894a6:	2b00      	cmp	r3, #0
   894a8:	d048      	beq.n	8953c <_fclose_r+0xa4>
   894aa:	6e63      	ldr	r3, [r4, #100]	; 0x64
   894ac:	07d8      	lsls	r0, r3, #31
   894ae:	d534      	bpl.n	8951a <_fclose_r+0x82>
   894b0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   894b4:	2b00      	cmp	r3, #0
   894b6:	d03e      	beq.n	89536 <_fclose_r+0x9e>
   894b8:	4621      	mov	r1, r4
   894ba:	4630      	mov	r0, r6
   894bc:	f7fd fece 	bl	8725c <__sflush_r>
   894c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   894c2:	4605      	mov	r5, r0
   894c4:	b133      	cbz	r3, 894d4 <_fclose_r+0x3c>
   894c6:	4630      	mov	r0, r6
   894c8:	69e1      	ldr	r1, [r4, #28]
   894ca:	4798      	blx	r3
   894cc:	2800      	cmp	r0, #0
   894ce:	bfb8      	it	lt
   894d0:	f04f 35ff 	movlt.w	r5, #4294967295
   894d4:	89a3      	ldrh	r3, [r4, #12]
   894d6:	061a      	lsls	r2, r3, #24
   894d8:	d43b      	bmi.n	89552 <_fclose_r+0xba>
   894da:	6b21      	ldr	r1, [r4, #48]	; 0x30
   894dc:	b141      	cbz	r1, 894f0 <_fclose_r+0x58>
   894de:	f104 0340 	add.w	r3, r4, #64	; 0x40
   894e2:	4299      	cmp	r1, r3
   894e4:	d002      	beq.n	894ec <_fclose_r+0x54>
   894e6:	4630      	mov	r0, r6
   894e8:	f7fe f8fa 	bl	876e0 <_free_r>
   894ec:	2300      	movs	r3, #0
   894ee:	6323      	str	r3, [r4, #48]	; 0x30
   894f0:	6c61      	ldr	r1, [r4, #68]	; 0x44
   894f2:	b121      	cbz	r1, 894fe <_fclose_r+0x66>
   894f4:	4630      	mov	r0, r6
   894f6:	f7fe f8f3 	bl	876e0 <_free_r>
   894fa:	2300      	movs	r3, #0
   894fc:	6463      	str	r3, [r4, #68]	; 0x44
   894fe:	f7fd fff9 	bl	874f4 <__sfp_lock_acquire>
   89502:	2200      	movs	r2, #0
   89504:	6e63      	ldr	r3, [r4, #100]	; 0x64
   89506:	81a2      	strh	r2, [r4, #12]
   89508:	07db      	lsls	r3, r3, #31
   8950a:	d527      	bpl.n	8955c <_fclose_r+0xc4>
   8950c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8950e:	f7fe fb8f 	bl	87c30 <__retarget_lock_close_recursive>
   89512:	f7fd fff5 	bl	87500 <__sfp_lock_release>
   89516:	4628      	mov	r0, r5
   89518:	bd70      	pop	{r4, r5, r6, pc}
   8951a:	89a3      	ldrh	r3, [r4, #12]
   8951c:	0599      	lsls	r1, r3, #22
   8951e:	d4cb      	bmi.n	894b8 <_fclose_r+0x20>
   89520:	6da0      	ldr	r0, [r4, #88]	; 0x58
   89522:	f7fe fb87 	bl	87c34 <__retarget_lock_acquire_recursive>
   89526:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8952a:	2b00      	cmp	r3, #0
   8952c:	d1c4      	bne.n	894b8 <_fclose_r+0x20>
   8952e:	6e65      	ldr	r5, [r4, #100]	; 0x64
   89530:	f015 0501 	ands.w	r5, r5, #1
   89534:	d008      	beq.n	89548 <_fclose_r+0xb0>
   89536:	2500      	movs	r5, #0
   89538:	4628      	mov	r0, r5
   8953a:	bd70      	pop	{r4, r5, r6, pc}
   8953c:	f7fd ff54 	bl	873e8 <__sinit>
   89540:	6e63      	ldr	r3, [r4, #100]	; 0x64
   89542:	07d8      	lsls	r0, r3, #31
   89544:	d4b4      	bmi.n	894b0 <_fclose_r+0x18>
   89546:	e7e8      	b.n	8951a <_fclose_r+0x82>
   89548:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8954a:	f7fe fb75 	bl	87c38 <__retarget_lock_release_recursive>
   8954e:	4628      	mov	r0, r5
   89550:	bd70      	pop	{r4, r5, r6, pc}
   89552:	4630      	mov	r0, r6
   89554:	6921      	ldr	r1, [r4, #16]
   89556:	f7fe f8c3 	bl	876e0 <_free_r>
   8955a:	e7be      	b.n	894da <_fclose_r+0x42>
   8955c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8955e:	f7fe fb6b 	bl	87c38 <__retarget_lock_release_recursive>
   89562:	e7d3      	b.n	8950c <_fclose_r+0x74>

00089564 <fiprintf>:
   89564:	b40e      	push	{r1, r2, r3}
   89566:	b500      	push	{lr}
   89568:	4a07      	ldr	r2, [pc, #28]	; (89588 <fiprintf+0x24>)
   8956a:	b082      	sub	sp, #8
   8956c:	ab03      	add	r3, sp, #12
   8956e:	4601      	mov	r1, r0
   89570:	6810      	ldr	r0, [r2, #0]
   89572:	f853 2b04 	ldr.w	r2, [r3], #4
   89576:	9301      	str	r3, [sp, #4]
   89578:	f7fb feea 	bl	85350 <_vfiprintf_r>
   8957c:	b002      	add	sp, #8
   8957e:	f85d eb04 	ldr.w	lr, [sp], #4
   89582:	b003      	add	sp, #12
   89584:	4770      	bx	lr
   89586:	bf00      	nop
   89588:	200003ac 	.word	0x200003ac

0008958c <_fstat_r>:
   8958c:	b570      	push	{r4, r5, r6, lr}
   8958e:	2600      	movs	r6, #0
   89590:	4d07      	ldr	r5, [pc, #28]	; (895b0 <_fstat_r+0x24>)
   89592:	4604      	mov	r4, r0
   89594:	4608      	mov	r0, r1
   89596:	4611      	mov	r1, r2
   89598:	602e      	str	r6, [r5, #0]
   8959a:	f7f8 fb41 	bl	81c20 <_fstat>
   8959e:	1c43      	adds	r3, r0, #1
   895a0:	d000      	beq.n	895a4 <_fstat_r+0x18>
   895a2:	bd70      	pop	{r4, r5, r6, pc}
   895a4:	682b      	ldr	r3, [r5, #0]
   895a6:	2b00      	cmp	r3, #0
   895a8:	d0fb      	beq.n	895a2 <_fstat_r+0x16>
   895aa:	6023      	str	r3, [r4, #0]
   895ac:	bd70      	pop	{r4, r5, r6, pc}
   895ae:	bf00      	nop
   895b0:	20003710 	.word	0x20003710

000895b4 <_isatty_r>:
   895b4:	2200      	movs	r2, #0
   895b6:	b538      	push	{r3, r4, r5, lr}
   895b8:	4d06      	ldr	r5, [pc, #24]	; (895d4 <_isatty_r+0x20>)
   895ba:	4604      	mov	r4, r0
   895bc:	4608      	mov	r0, r1
   895be:	602a      	str	r2, [r5, #0]
   895c0:	f7f8 fb34 	bl	81c2c <_isatty>
   895c4:	1c43      	adds	r3, r0, #1
   895c6:	d000      	beq.n	895ca <_isatty_r+0x16>
   895c8:	bd38      	pop	{r3, r4, r5, pc}
   895ca:	682b      	ldr	r3, [r5, #0]
   895cc:	2b00      	cmp	r3, #0
   895ce:	d0fb      	beq.n	895c8 <_isatty_r+0x14>
   895d0:	6023      	str	r3, [r4, #0]
   895d2:	bd38      	pop	{r3, r4, r5, pc}
   895d4:	20003710 	.word	0x20003710

000895d8 <_lseek_r>:
   895d8:	b538      	push	{r3, r4, r5, lr}
   895da:	460c      	mov	r4, r1
   895dc:	4611      	mov	r1, r2
   895de:	2200      	movs	r2, #0
   895e0:	4684      	mov	ip, r0
   895e2:	4d07      	ldr	r5, [pc, #28]	; (89600 <_lseek_r+0x28>)
   895e4:	4620      	mov	r0, r4
   895e6:	602a      	str	r2, [r5, #0]
   895e8:	461a      	mov	r2, r3
   895ea:	4664      	mov	r4, ip
   895ec:	f7f8 fb20 	bl	81c30 <_lseek>
   895f0:	1c43      	adds	r3, r0, #1
   895f2:	d000      	beq.n	895f6 <_lseek_r+0x1e>
   895f4:	bd38      	pop	{r3, r4, r5, pc}
   895f6:	682b      	ldr	r3, [r5, #0]
   895f8:	2b00      	cmp	r3, #0
   895fa:	d0fb      	beq.n	895f4 <_lseek_r+0x1c>
   895fc:	6023      	str	r3, [r4, #0]
   895fe:	bd38      	pop	{r3, r4, r5, pc}
   89600:	20003710 	.word	0x20003710

00089604 <_read_r>:
   89604:	b538      	push	{r3, r4, r5, lr}
   89606:	460c      	mov	r4, r1
   89608:	4611      	mov	r1, r2
   8960a:	2200      	movs	r2, #0
   8960c:	4684      	mov	ip, r0
   8960e:	4d07      	ldr	r5, [pc, #28]	; (8962c <_read_r+0x28>)
   89610:	4620      	mov	r0, r4
   89612:	602a      	str	r2, [r5, #0]
   89614:	461a      	mov	r2, r3
   89616:	4664      	mov	r4, ip
   89618:	f7f8 fa56 	bl	81ac8 <_read>
   8961c:	1c43      	adds	r3, r0, #1
   8961e:	d000      	beq.n	89622 <_read_r+0x1e>
   89620:	bd38      	pop	{r3, r4, r5, pc}
   89622:	682b      	ldr	r3, [r5, #0]
   89624:	2b00      	cmp	r3, #0
   89626:	d0fb      	beq.n	89620 <_read_r+0x1c>
   89628:	6023      	str	r3, [r4, #0]
   8962a:	bd38      	pop	{r3, r4, r5, pc}
   8962c:	20003710 	.word	0x20003710

00089630 <abort>:
   89630:	2006      	movs	r0, #6
   89632:	b508      	push	{r3, lr}
   89634:	f000 f804 	bl	89640 <raise>
   89638:	2001      	movs	r0, #1
   8963a:	f7f8 fafb 	bl	81c34 <_exit>
   8963e:	bf00      	nop

00089640 <raise>:
   89640:	b538      	push	{r3, r4, r5, lr}
   89642:	4b15      	ldr	r3, [pc, #84]	; (89698 <raise+0x58>)
   89644:	281f      	cmp	r0, #31
   89646:	681d      	ldr	r5, [r3, #0]
   89648:	d820      	bhi.n	8968c <raise+0x4c>
   8964a:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
   8964e:	4604      	mov	r4, r0
   89650:	b162      	cbz	r2, 8966c <raise+0x2c>
   89652:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
   89656:	b14b      	cbz	r3, 8966c <raise+0x2c>
   89658:	2b01      	cmp	r3, #1
   8965a:	d015      	beq.n	89688 <raise+0x48>
   8965c:	1c59      	adds	r1, r3, #1
   8965e:	d00f      	beq.n	89680 <raise+0x40>
   89660:	2500      	movs	r5, #0
   89662:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
   89666:	4798      	blx	r3
   89668:	4628      	mov	r0, r5
   8966a:	bd38      	pop	{r3, r4, r5, pc}
   8966c:	4628      	mov	r0, r5
   8966e:	f000 f829 	bl	896c4 <_getpid_r>
   89672:	4622      	mov	r2, r4
   89674:	4601      	mov	r1, r0
   89676:	4628      	mov	r0, r5
   89678:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8967c:	f000 b80e 	b.w	8969c <_kill_r>
   89680:	2316      	movs	r3, #22
   89682:	2001      	movs	r0, #1
   89684:	602b      	str	r3, [r5, #0]
   89686:	bd38      	pop	{r3, r4, r5, pc}
   89688:	2000      	movs	r0, #0
   8968a:	bd38      	pop	{r3, r4, r5, pc}
   8968c:	2316      	movs	r3, #22
   8968e:	f04f 30ff 	mov.w	r0, #4294967295
   89692:	602b      	str	r3, [r5, #0]
   89694:	bd38      	pop	{r3, r4, r5, pc}
   89696:	bf00      	nop
   89698:	200003ac 	.word	0x200003ac

0008969c <_kill_r>:
   8969c:	b570      	push	{r4, r5, r6, lr}
   8969e:	2600      	movs	r6, #0
   896a0:	4d07      	ldr	r5, [pc, #28]	; (896c0 <_kill_r+0x24>)
   896a2:	4604      	mov	r4, r0
   896a4:	4608      	mov	r0, r1
   896a6:	4611      	mov	r1, r2
   896a8:	602e      	str	r6, [r5, #0]
   896aa:	f7f8 facd 	bl	81c48 <_kill>
   896ae:	1c43      	adds	r3, r0, #1
   896b0:	d000      	beq.n	896b4 <_kill_r+0x18>
   896b2:	bd70      	pop	{r4, r5, r6, pc}
   896b4:	682b      	ldr	r3, [r5, #0]
   896b6:	2b00      	cmp	r3, #0
   896b8:	d0fb      	beq.n	896b2 <_kill_r+0x16>
   896ba:	6023      	str	r3, [r4, #0]
   896bc:	bd70      	pop	{r4, r5, r6, pc}
   896be:	bf00      	nop
   896c0:	20003710 	.word	0x20003710

000896c4 <_getpid_r>:
   896c4:	f7f8 bac2 	b.w	81c4c <_getpid>

000896c8 <__aeabi_drsub>:
   896c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   896cc:	e002      	b.n	896d4 <__adddf3>
   896ce:	bf00      	nop

000896d0 <__aeabi_dsub>:
   896d0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000896d4 <__adddf3>:
   896d4:	b530      	push	{r4, r5, lr}
   896d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
   896da:	ea4f 0543 	mov.w	r5, r3, lsl #1
   896de:	ea94 0f05 	teq	r4, r5
   896e2:	bf08      	it	eq
   896e4:	ea90 0f02 	teqeq	r0, r2
   896e8:	bf1f      	itttt	ne
   896ea:	ea54 0c00 	orrsne.w	ip, r4, r0
   896ee:	ea55 0c02 	orrsne.w	ip, r5, r2
   896f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   896f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   896fa:	f000 80e2 	beq.w	898c2 <__adddf3+0x1ee>
   896fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
   89702:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   89706:	bfb8      	it	lt
   89708:	426d      	neglt	r5, r5
   8970a:	dd0c      	ble.n	89726 <__adddf3+0x52>
   8970c:	442c      	add	r4, r5
   8970e:	ea80 0202 	eor.w	r2, r0, r2
   89712:	ea81 0303 	eor.w	r3, r1, r3
   89716:	ea82 0000 	eor.w	r0, r2, r0
   8971a:	ea83 0101 	eor.w	r1, r3, r1
   8971e:	ea80 0202 	eor.w	r2, r0, r2
   89722:	ea81 0303 	eor.w	r3, r1, r3
   89726:	2d36      	cmp	r5, #54	; 0x36
   89728:	bf88      	it	hi
   8972a:	bd30      	pophi	{r4, r5, pc}
   8972c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   89730:	ea4f 3101 	mov.w	r1, r1, lsl #12
   89734:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   89738:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   8973c:	d002      	beq.n	89744 <__adddf3+0x70>
   8973e:	4240      	negs	r0, r0
   89740:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   89744:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   89748:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8974c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   89750:	d002      	beq.n	89758 <__adddf3+0x84>
   89752:	4252      	negs	r2, r2
   89754:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   89758:	ea94 0f05 	teq	r4, r5
   8975c:	f000 80a7 	beq.w	898ae <__adddf3+0x1da>
   89760:	f1a4 0401 	sub.w	r4, r4, #1
   89764:	f1d5 0e20 	rsbs	lr, r5, #32
   89768:	db0d      	blt.n	89786 <__adddf3+0xb2>
   8976a:	fa02 fc0e 	lsl.w	ip, r2, lr
   8976e:	fa22 f205 	lsr.w	r2, r2, r5
   89772:	1880      	adds	r0, r0, r2
   89774:	f141 0100 	adc.w	r1, r1, #0
   89778:	fa03 f20e 	lsl.w	r2, r3, lr
   8977c:	1880      	adds	r0, r0, r2
   8977e:	fa43 f305 	asr.w	r3, r3, r5
   89782:	4159      	adcs	r1, r3
   89784:	e00e      	b.n	897a4 <__adddf3+0xd0>
   89786:	f1a5 0520 	sub.w	r5, r5, #32
   8978a:	f10e 0e20 	add.w	lr, lr, #32
   8978e:	2a01      	cmp	r2, #1
   89790:	fa03 fc0e 	lsl.w	ip, r3, lr
   89794:	bf28      	it	cs
   89796:	f04c 0c02 	orrcs.w	ip, ip, #2
   8979a:	fa43 f305 	asr.w	r3, r3, r5
   8979e:	18c0      	adds	r0, r0, r3
   897a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   897a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   897a8:	d507      	bpl.n	897ba <__adddf3+0xe6>
   897aa:	f04f 0e00 	mov.w	lr, #0
   897ae:	f1dc 0c00 	rsbs	ip, ip, #0
   897b2:	eb7e 0000 	sbcs.w	r0, lr, r0
   897b6:	eb6e 0101 	sbc.w	r1, lr, r1
   897ba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   897be:	d31b      	bcc.n	897f8 <__adddf3+0x124>
   897c0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   897c4:	d30c      	bcc.n	897e0 <__adddf3+0x10c>
   897c6:	0849      	lsrs	r1, r1, #1
   897c8:	ea5f 0030 	movs.w	r0, r0, rrx
   897cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
   897d0:	f104 0401 	add.w	r4, r4, #1
   897d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
   897d8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   897dc:	f080 809a 	bcs.w	89914 <__adddf3+0x240>
   897e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   897e4:	bf08      	it	eq
   897e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   897ea:	f150 0000 	adcs.w	r0, r0, #0
   897ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   897f2:	ea41 0105 	orr.w	r1, r1, r5
   897f6:	bd30      	pop	{r4, r5, pc}
   897f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   897fc:	4140      	adcs	r0, r0
   897fe:	eb41 0101 	adc.w	r1, r1, r1
   89802:	3c01      	subs	r4, #1
   89804:	bf28      	it	cs
   89806:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   8980a:	d2e9      	bcs.n	897e0 <__adddf3+0x10c>
   8980c:	f091 0f00 	teq	r1, #0
   89810:	bf04      	itt	eq
   89812:	4601      	moveq	r1, r0
   89814:	2000      	moveq	r0, #0
   89816:	fab1 f381 	clz	r3, r1
   8981a:	bf08      	it	eq
   8981c:	3320      	addeq	r3, #32
   8981e:	f1a3 030b 	sub.w	r3, r3, #11
   89822:	f1b3 0220 	subs.w	r2, r3, #32
   89826:	da0c      	bge.n	89842 <__adddf3+0x16e>
   89828:	320c      	adds	r2, #12
   8982a:	dd08      	ble.n	8983e <__adddf3+0x16a>
   8982c:	f102 0c14 	add.w	ip, r2, #20
   89830:	f1c2 020c 	rsb	r2, r2, #12
   89834:	fa01 f00c 	lsl.w	r0, r1, ip
   89838:	fa21 f102 	lsr.w	r1, r1, r2
   8983c:	e00c      	b.n	89858 <__adddf3+0x184>
   8983e:	f102 0214 	add.w	r2, r2, #20
   89842:	bfd8      	it	le
   89844:	f1c2 0c20 	rsble	ip, r2, #32
   89848:	fa01 f102 	lsl.w	r1, r1, r2
   8984c:	fa20 fc0c 	lsr.w	ip, r0, ip
   89850:	bfdc      	itt	le
   89852:	ea41 010c 	orrle.w	r1, r1, ip
   89856:	4090      	lslle	r0, r2
   89858:	1ae4      	subs	r4, r4, r3
   8985a:	bfa2      	ittt	ge
   8985c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   89860:	4329      	orrge	r1, r5
   89862:	bd30      	popge	{r4, r5, pc}
   89864:	ea6f 0404 	mvn.w	r4, r4
   89868:	3c1f      	subs	r4, #31
   8986a:	da1c      	bge.n	898a6 <__adddf3+0x1d2>
   8986c:	340c      	adds	r4, #12
   8986e:	dc0e      	bgt.n	8988e <__adddf3+0x1ba>
   89870:	f104 0414 	add.w	r4, r4, #20
   89874:	f1c4 0220 	rsb	r2, r4, #32
   89878:	fa20 f004 	lsr.w	r0, r0, r4
   8987c:	fa01 f302 	lsl.w	r3, r1, r2
   89880:	ea40 0003 	orr.w	r0, r0, r3
   89884:	fa21 f304 	lsr.w	r3, r1, r4
   89888:	ea45 0103 	orr.w	r1, r5, r3
   8988c:	bd30      	pop	{r4, r5, pc}
   8988e:	f1c4 040c 	rsb	r4, r4, #12
   89892:	f1c4 0220 	rsb	r2, r4, #32
   89896:	fa20 f002 	lsr.w	r0, r0, r2
   8989a:	fa01 f304 	lsl.w	r3, r1, r4
   8989e:	ea40 0003 	orr.w	r0, r0, r3
   898a2:	4629      	mov	r1, r5
   898a4:	bd30      	pop	{r4, r5, pc}
   898a6:	fa21 f004 	lsr.w	r0, r1, r4
   898aa:	4629      	mov	r1, r5
   898ac:	bd30      	pop	{r4, r5, pc}
   898ae:	f094 0f00 	teq	r4, #0
   898b2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   898b6:	bf06      	itte	eq
   898b8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   898bc:	3401      	addeq	r4, #1
   898be:	3d01      	subne	r5, #1
   898c0:	e74e      	b.n	89760 <__adddf3+0x8c>
   898c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   898c6:	bf18      	it	ne
   898c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   898cc:	d029      	beq.n	89922 <__adddf3+0x24e>
   898ce:	ea94 0f05 	teq	r4, r5
   898d2:	bf08      	it	eq
   898d4:	ea90 0f02 	teqeq	r0, r2
   898d8:	d005      	beq.n	898e6 <__adddf3+0x212>
   898da:	ea54 0c00 	orrs.w	ip, r4, r0
   898de:	bf04      	itt	eq
   898e0:	4619      	moveq	r1, r3
   898e2:	4610      	moveq	r0, r2
   898e4:	bd30      	pop	{r4, r5, pc}
   898e6:	ea91 0f03 	teq	r1, r3
   898ea:	bf1e      	ittt	ne
   898ec:	2100      	movne	r1, #0
   898ee:	2000      	movne	r0, #0
   898f0:	bd30      	popne	{r4, r5, pc}
   898f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   898f6:	d105      	bne.n	89904 <__adddf3+0x230>
   898f8:	0040      	lsls	r0, r0, #1
   898fa:	4149      	adcs	r1, r1
   898fc:	bf28      	it	cs
   898fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   89902:	bd30      	pop	{r4, r5, pc}
   89904:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   89908:	bf3c      	itt	cc
   8990a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   8990e:	bd30      	popcc	{r4, r5, pc}
   89910:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89914:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   89918:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8991c:	f04f 0000 	mov.w	r0, #0
   89920:	bd30      	pop	{r4, r5, pc}
   89922:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   89926:	bf1a      	itte	ne
   89928:	4619      	movne	r1, r3
   8992a:	4610      	movne	r0, r2
   8992c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   89930:	bf1c      	itt	ne
   89932:	460b      	movne	r3, r1
   89934:	4602      	movne	r2, r0
   89936:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8993a:	bf06      	itte	eq
   8993c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   89940:	ea91 0f03 	teqeq	r1, r3
   89944:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   89948:	bd30      	pop	{r4, r5, pc}
   8994a:	bf00      	nop

0008994c <__aeabi_ui2d>:
   8994c:	f090 0f00 	teq	r0, #0
   89950:	bf04      	itt	eq
   89952:	2100      	moveq	r1, #0
   89954:	4770      	bxeq	lr
   89956:	b530      	push	{r4, r5, lr}
   89958:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8995c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89960:	f04f 0500 	mov.w	r5, #0
   89964:	f04f 0100 	mov.w	r1, #0
   89968:	e750      	b.n	8980c <__adddf3+0x138>
   8996a:	bf00      	nop

0008996c <__aeabi_i2d>:
   8996c:	f090 0f00 	teq	r0, #0
   89970:	bf04      	itt	eq
   89972:	2100      	moveq	r1, #0
   89974:	4770      	bxeq	lr
   89976:	b530      	push	{r4, r5, lr}
   89978:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8997c:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89980:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   89984:	bf48      	it	mi
   89986:	4240      	negmi	r0, r0
   89988:	f04f 0100 	mov.w	r1, #0
   8998c:	e73e      	b.n	8980c <__adddf3+0x138>
   8998e:	bf00      	nop

00089990 <__aeabi_f2d>:
   89990:	0042      	lsls	r2, r0, #1
   89992:	ea4f 01e2 	mov.w	r1, r2, asr #3
   89996:	ea4f 0131 	mov.w	r1, r1, rrx
   8999a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   8999e:	bf1f      	itttt	ne
   899a0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   899a4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   899a8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   899ac:	4770      	bxne	lr
   899ae:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   899b2:	bf08      	it	eq
   899b4:	4770      	bxeq	lr
   899b6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   899ba:	bf04      	itt	eq
   899bc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   899c0:	4770      	bxeq	lr
   899c2:	b530      	push	{r4, r5, lr}
   899c4:	f44f 7460 	mov.w	r4, #896	; 0x380
   899c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   899cc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   899d0:	e71c      	b.n	8980c <__adddf3+0x138>
   899d2:	bf00      	nop

000899d4 <__aeabi_ul2d>:
   899d4:	ea50 0201 	orrs.w	r2, r0, r1
   899d8:	bf08      	it	eq
   899da:	4770      	bxeq	lr
   899dc:	b530      	push	{r4, r5, lr}
   899de:	f04f 0500 	mov.w	r5, #0
   899e2:	e00a      	b.n	899fa <__aeabi_l2d+0x16>

000899e4 <__aeabi_l2d>:
   899e4:	ea50 0201 	orrs.w	r2, r0, r1
   899e8:	bf08      	it	eq
   899ea:	4770      	bxeq	lr
   899ec:	b530      	push	{r4, r5, lr}
   899ee:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   899f2:	d502      	bpl.n	899fa <__aeabi_l2d+0x16>
   899f4:	4240      	negs	r0, r0
   899f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   899fa:	f44f 6480 	mov.w	r4, #1024	; 0x400
   899fe:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89a02:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   89a06:	f43f aed8 	beq.w	897ba <__adddf3+0xe6>
   89a0a:	f04f 0203 	mov.w	r2, #3
   89a0e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89a12:	bf18      	it	ne
   89a14:	3203      	addne	r2, #3
   89a16:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89a1a:	bf18      	it	ne
   89a1c:	3203      	addne	r2, #3
   89a1e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   89a22:	f1c2 0320 	rsb	r3, r2, #32
   89a26:	fa00 fc03 	lsl.w	ip, r0, r3
   89a2a:	fa20 f002 	lsr.w	r0, r0, r2
   89a2e:	fa01 fe03 	lsl.w	lr, r1, r3
   89a32:	ea40 000e 	orr.w	r0, r0, lr
   89a36:	fa21 f102 	lsr.w	r1, r1, r2
   89a3a:	4414      	add	r4, r2
   89a3c:	e6bd      	b.n	897ba <__adddf3+0xe6>
   89a3e:	bf00      	nop

00089a40 <__aeabi_dmul>:
   89a40:	b570      	push	{r4, r5, r6, lr}
   89a42:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89a46:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   89a4a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   89a4e:	bf1d      	ittte	ne
   89a50:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89a54:	ea94 0f0c 	teqne	r4, ip
   89a58:	ea95 0f0c 	teqne	r5, ip
   89a5c:	f000 f8de 	bleq	89c1c <__aeabi_dmul+0x1dc>
   89a60:	442c      	add	r4, r5
   89a62:	ea81 0603 	eor.w	r6, r1, r3
   89a66:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   89a6a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   89a6e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   89a72:	bf18      	it	ne
   89a74:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   89a78:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89a7c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   89a80:	d038      	beq.n	89af4 <__aeabi_dmul+0xb4>
   89a82:	fba0 ce02 	umull	ip, lr, r0, r2
   89a86:	f04f 0500 	mov.w	r5, #0
   89a8a:	fbe1 e502 	umlal	lr, r5, r1, r2
   89a8e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   89a92:	fbe0 e503 	umlal	lr, r5, r0, r3
   89a96:	f04f 0600 	mov.w	r6, #0
   89a9a:	fbe1 5603 	umlal	r5, r6, r1, r3
   89a9e:	f09c 0f00 	teq	ip, #0
   89aa2:	bf18      	it	ne
   89aa4:	f04e 0e01 	orrne.w	lr, lr, #1
   89aa8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   89aac:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   89ab0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   89ab4:	d204      	bcs.n	89ac0 <__aeabi_dmul+0x80>
   89ab6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   89aba:	416d      	adcs	r5, r5
   89abc:	eb46 0606 	adc.w	r6, r6, r6
   89ac0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   89ac4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   89ac8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   89acc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   89ad0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   89ad4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89ad8:	bf88      	it	hi
   89ada:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   89ade:	d81e      	bhi.n	89b1e <__aeabi_dmul+0xde>
   89ae0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   89ae4:	bf08      	it	eq
   89ae6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   89aea:	f150 0000 	adcs.w	r0, r0, #0
   89aee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89af2:	bd70      	pop	{r4, r5, r6, pc}
   89af4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   89af8:	ea46 0101 	orr.w	r1, r6, r1
   89afc:	ea40 0002 	orr.w	r0, r0, r2
   89b00:	ea81 0103 	eor.w	r1, r1, r3
   89b04:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   89b08:	bfc2      	ittt	gt
   89b0a:	ebd4 050c 	rsbsgt	r5, r4, ip
   89b0e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   89b12:	bd70      	popgt	{r4, r5, r6, pc}
   89b14:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89b18:	f04f 0e00 	mov.w	lr, #0
   89b1c:	3c01      	subs	r4, #1
   89b1e:	f300 80ab 	bgt.w	89c78 <__aeabi_dmul+0x238>
   89b22:	f114 0f36 	cmn.w	r4, #54	; 0x36
   89b26:	bfde      	ittt	le
   89b28:	2000      	movle	r0, #0
   89b2a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   89b2e:	bd70      	pople	{r4, r5, r6, pc}
   89b30:	f1c4 0400 	rsb	r4, r4, #0
   89b34:	3c20      	subs	r4, #32
   89b36:	da35      	bge.n	89ba4 <__aeabi_dmul+0x164>
   89b38:	340c      	adds	r4, #12
   89b3a:	dc1b      	bgt.n	89b74 <__aeabi_dmul+0x134>
   89b3c:	f104 0414 	add.w	r4, r4, #20
   89b40:	f1c4 0520 	rsb	r5, r4, #32
   89b44:	fa00 f305 	lsl.w	r3, r0, r5
   89b48:	fa20 f004 	lsr.w	r0, r0, r4
   89b4c:	fa01 f205 	lsl.w	r2, r1, r5
   89b50:	ea40 0002 	orr.w	r0, r0, r2
   89b54:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   89b58:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   89b5c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   89b60:	fa21 f604 	lsr.w	r6, r1, r4
   89b64:	eb42 0106 	adc.w	r1, r2, r6
   89b68:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89b6c:	bf08      	it	eq
   89b6e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89b72:	bd70      	pop	{r4, r5, r6, pc}
   89b74:	f1c4 040c 	rsb	r4, r4, #12
   89b78:	f1c4 0520 	rsb	r5, r4, #32
   89b7c:	fa00 f304 	lsl.w	r3, r0, r4
   89b80:	fa20 f005 	lsr.w	r0, r0, r5
   89b84:	fa01 f204 	lsl.w	r2, r1, r4
   89b88:	ea40 0002 	orr.w	r0, r0, r2
   89b8c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89b90:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   89b94:	f141 0100 	adc.w	r1, r1, #0
   89b98:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89b9c:	bf08      	it	eq
   89b9e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89ba2:	bd70      	pop	{r4, r5, r6, pc}
   89ba4:	f1c4 0520 	rsb	r5, r4, #32
   89ba8:	fa00 f205 	lsl.w	r2, r0, r5
   89bac:	ea4e 0e02 	orr.w	lr, lr, r2
   89bb0:	fa20 f304 	lsr.w	r3, r0, r4
   89bb4:	fa01 f205 	lsl.w	r2, r1, r5
   89bb8:	ea43 0302 	orr.w	r3, r3, r2
   89bbc:	fa21 f004 	lsr.w	r0, r1, r4
   89bc0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89bc4:	fa21 f204 	lsr.w	r2, r1, r4
   89bc8:	ea20 0002 	bic.w	r0, r0, r2
   89bcc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   89bd0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89bd4:	bf08      	it	eq
   89bd6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89bda:	bd70      	pop	{r4, r5, r6, pc}
   89bdc:	f094 0f00 	teq	r4, #0
   89be0:	d10f      	bne.n	89c02 <__aeabi_dmul+0x1c2>
   89be2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   89be6:	0040      	lsls	r0, r0, #1
   89be8:	eb41 0101 	adc.w	r1, r1, r1
   89bec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89bf0:	bf08      	it	eq
   89bf2:	3c01      	subeq	r4, #1
   89bf4:	d0f7      	beq.n	89be6 <__aeabi_dmul+0x1a6>
   89bf6:	ea41 0106 	orr.w	r1, r1, r6
   89bfa:	f095 0f00 	teq	r5, #0
   89bfe:	bf18      	it	ne
   89c00:	4770      	bxne	lr
   89c02:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   89c06:	0052      	lsls	r2, r2, #1
   89c08:	eb43 0303 	adc.w	r3, r3, r3
   89c0c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   89c10:	bf08      	it	eq
   89c12:	3d01      	subeq	r5, #1
   89c14:	d0f7      	beq.n	89c06 <__aeabi_dmul+0x1c6>
   89c16:	ea43 0306 	orr.w	r3, r3, r6
   89c1a:	4770      	bx	lr
   89c1c:	ea94 0f0c 	teq	r4, ip
   89c20:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   89c24:	bf18      	it	ne
   89c26:	ea95 0f0c 	teqne	r5, ip
   89c2a:	d00c      	beq.n	89c46 <__aeabi_dmul+0x206>
   89c2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   89c30:	bf18      	it	ne
   89c32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   89c36:	d1d1      	bne.n	89bdc <__aeabi_dmul+0x19c>
   89c38:	ea81 0103 	eor.w	r1, r1, r3
   89c3c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89c40:	f04f 0000 	mov.w	r0, #0
   89c44:	bd70      	pop	{r4, r5, r6, pc}
   89c46:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   89c4a:	bf06      	itte	eq
   89c4c:	4610      	moveq	r0, r2
   89c4e:	4619      	moveq	r1, r3
   89c50:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   89c54:	d019      	beq.n	89c8a <__aeabi_dmul+0x24a>
   89c56:	ea94 0f0c 	teq	r4, ip
   89c5a:	d102      	bne.n	89c62 <__aeabi_dmul+0x222>
   89c5c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   89c60:	d113      	bne.n	89c8a <__aeabi_dmul+0x24a>
   89c62:	ea95 0f0c 	teq	r5, ip
   89c66:	d105      	bne.n	89c74 <__aeabi_dmul+0x234>
   89c68:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   89c6c:	bf1c      	itt	ne
   89c6e:	4610      	movne	r0, r2
   89c70:	4619      	movne	r1, r3
   89c72:	d10a      	bne.n	89c8a <__aeabi_dmul+0x24a>
   89c74:	ea81 0103 	eor.w	r1, r1, r3
   89c78:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89c7c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   89c80:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   89c84:	f04f 0000 	mov.w	r0, #0
   89c88:	bd70      	pop	{r4, r5, r6, pc}
   89c8a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   89c8e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   89c92:	bd70      	pop	{r4, r5, r6, pc}

00089c94 <__aeabi_ddiv>:
   89c94:	b570      	push	{r4, r5, r6, lr}
   89c96:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89c9a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   89c9e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   89ca2:	bf1d      	ittte	ne
   89ca4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89ca8:	ea94 0f0c 	teqne	r4, ip
   89cac:	ea95 0f0c 	teqne	r5, ip
   89cb0:	f000 f8a7 	bleq	89e02 <__aeabi_ddiv+0x16e>
   89cb4:	eba4 0405 	sub.w	r4, r4, r5
   89cb8:	ea81 0e03 	eor.w	lr, r1, r3
   89cbc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   89cc0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   89cc4:	f000 8088 	beq.w	89dd8 <__aeabi_ddiv+0x144>
   89cc8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   89ccc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   89cd0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   89cd4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   89cd8:	ea4f 2202 	mov.w	r2, r2, lsl #8
   89cdc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   89ce0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   89ce4:	ea4f 2600 	mov.w	r6, r0, lsl #8
   89ce8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   89cec:	429d      	cmp	r5, r3
   89cee:	bf08      	it	eq
   89cf0:	4296      	cmpeq	r6, r2
   89cf2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   89cf6:	f504 7440 	add.w	r4, r4, #768	; 0x300
   89cfa:	d202      	bcs.n	89d02 <__aeabi_ddiv+0x6e>
   89cfc:	085b      	lsrs	r3, r3, #1
   89cfe:	ea4f 0232 	mov.w	r2, r2, rrx
   89d02:	1ab6      	subs	r6, r6, r2
   89d04:	eb65 0503 	sbc.w	r5, r5, r3
   89d08:	085b      	lsrs	r3, r3, #1
   89d0a:	ea4f 0232 	mov.w	r2, r2, rrx
   89d0e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   89d12:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   89d16:	ebb6 0e02 	subs.w	lr, r6, r2
   89d1a:	eb75 0e03 	sbcs.w	lr, r5, r3
   89d1e:	bf22      	ittt	cs
   89d20:	1ab6      	subcs	r6, r6, r2
   89d22:	4675      	movcs	r5, lr
   89d24:	ea40 000c 	orrcs.w	r0, r0, ip
   89d28:	085b      	lsrs	r3, r3, #1
   89d2a:	ea4f 0232 	mov.w	r2, r2, rrx
   89d2e:	ebb6 0e02 	subs.w	lr, r6, r2
   89d32:	eb75 0e03 	sbcs.w	lr, r5, r3
   89d36:	bf22      	ittt	cs
   89d38:	1ab6      	subcs	r6, r6, r2
   89d3a:	4675      	movcs	r5, lr
   89d3c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   89d40:	085b      	lsrs	r3, r3, #1
   89d42:	ea4f 0232 	mov.w	r2, r2, rrx
   89d46:	ebb6 0e02 	subs.w	lr, r6, r2
   89d4a:	eb75 0e03 	sbcs.w	lr, r5, r3
   89d4e:	bf22      	ittt	cs
   89d50:	1ab6      	subcs	r6, r6, r2
   89d52:	4675      	movcs	r5, lr
   89d54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   89d58:	085b      	lsrs	r3, r3, #1
   89d5a:	ea4f 0232 	mov.w	r2, r2, rrx
   89d5e:	ebb6 0e02 	subs.w	lr, r6, r2
   89d62:	eb75 0e03 	sbcs.w	lr, r5, r3
   89d66:	bf22      	ittt	cs
   89d68:	1ab6      	subcs	r6, r6, r2
   89d6a:	4675      	movcs	r5, lr
   89d6c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   89d70:	ea55 0e06 	orrs.w	lr, r5, r6
   89d74:	d018      	beq.n	89da8 <__aeabi_ddiv+0x114>
   89d76:	ea4f 1505 	mov.w	r5, r5, lsl #4
   89d7a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   89d7e:	ea4f 1606 	mov.w	r6, r6, lsl #4
   89d82:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   89d86:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   89d8a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   89d8e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   89d92:	d1c0      	bne.n	89d16 <__aeabi_ddiv+0x82>
   89d94:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89d98:	d10b      	bne.n	89db2 <__aeabi_ddiv+0x11e>
   89d9a:	ea41 0100 	orr.w	r1, r1, r0
   89d9e:	f04f 0000 	mov.w	r0, #0
   89da2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   89da6:	e7b6      	b.n	89d16 <__aeabi_ddiv+0x82>
   89da8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89dac:	bf04      	itt	eq
   89dae:	4301      	orreq	r1, r0
   89db0:	2000      	moveq	r0, #0
   89db2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89db6:	bf88      	it	hi
   89db8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   89dbc:	f63f aeaf 	bhi.w	89b1e <__aeabi_dmul+0xde>
   89dc0:	ebb5 0c03 	subs.w	ip, r5, r3
   89dc4:	bf04      	itt	eq
   89dc6:	ebb6 0c02 	subseq.w	ip, r6, r2
   89dca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   89dce:	f150 0000 	adcs.w	r0, r0, #0
   89dd2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89dd6:	bd70      	pop	{r4, r5, r6, pc}
   89dd8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   89ddc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   89de0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   89de4:	bfc2      	ittt	gt
   89de6:	ebd4 050c 	rsbsgt	r5, r4, ip
   89dea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   89dee:	bd70      	popgt	{r4, r5, r6, pc}
   89df0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89df4:	f04f 0e00 	mov.w	lr, #0
   89df8:	3c01      	subs	r4, #1
   89dfa:	e690      	b.n	89b1e <__aeabi_dmul+0xde>
   89dfc:	ea45 0e06 	orr.w	lr, r5, r6
   89e00:	e68d      	b.n	89b1e <__aeabi_dmul+0xde>
   89e02:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   89e06:	ea94 0f0c 	teq	r4, ip
   89e0a:	bf08      	it	eq
   89e0c:	ea95 0f0c 	teqeq	r5, ip
   89e10:	f43f af3b 	beq.w	89c8a <__aeabi_dmul+0x24a>
   89e14:	ea94 0f0c 	teq	r4, ip
   89e18:	d10a      	bne.n	89e30 <__aeabi_ddiv+0x19c>
   89e1a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   89e1e:	f47f af34 	bne.w	89c8a <__aeabi_dmul+0x24a>
   89e22:	ea95 0f0c 	teq	r5, ip
   89e26:	f47f af25 	bne.w	89c74 <__aeabi_dmul+0x234>
   89e2a:	4610      	mov	r0, r2
   89e2c:	4619      	mov	r1, r3
   89e2e:	e72c      	b.n	89c8a <__aeabi_dmul+0x24a>
   89e30:	ea95 0f0c 	teq	r5, ip
   89e34:	d106      	bne.n	89e44 <__aeabi_ddiv+0x1b0>
   89e36:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   89e3a:	f43f aefd 	beq.w	89c38 <__aeabi_dmul+0x1f8>
   89e3e:	4610      	mov	r0, r2
   89e40:	4619      	mov	r1, r3
   89e42:	e722      	b.n	89c8a <__aeabi_dmul+0x24a>
   89e44:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   89e48:	bf18      	it	ne
   89e4a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   89e4e:	f47f aec5 	bne.w	89bdc <__aeabi_dmul+0x19c>
   89e52:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   89e56:	f47f af0d 	bne.w	89c74 <__aeabi_dmul+0x234>
   89e5a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   89e5e:	f47f aeeb 	bne.w	89c38 <__aeabi_dmul+0x1f8>
   89e62:	e712      	b.n	89c8a <__aeabi_dmul+0x24a>

00089e64 <__gedf2>:
   89e64:	f04f 3cff 	mov.w	ip, #4294967295
   89e68:	e006      	b.n	89e78 <__cmpdf2+0x4>
   89e6a:	bf00      	nop

00089e6c <__ledf2>:
   89e6c:	f04f 0c01 	mov.w	ip, #1
   89e70:	e002      	b.n	89e78 <__cmpdf2+0x4>
   89e72:	bf00      	nop

00089e74 <__cmpdf2>:
   89e74:	f04f 0c01 	mov.w	ip, #1
   89e78:	f84d cd04 	str.w	ip, [sp, #-4]!
   89e7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89e80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89e84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89e88:	bf18      	it	ne
   89e8a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   89e8e:	d01b      	beq.n	89ec8 <__cmpdf2+0x54>
   89e90:	b001      	add	sp, #4
   89e92:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   89e96:	bf0c      	ite	eq
   89e98:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   89e9c:	ea91 0f03 	teqne	r1, r3
   89ea0:	bf02      	ittt	eq
   89ea2:	ea90 0f02 	teqeq	r0, r2
   89ea6:	2000      	moveq	r0, #0
   89ea8:	4770      	bxeq	lr
   89eaa:	f110 0f00 	cmn.w	r0, #0
   89eae:	ea91 0f03 	teq	r1, r3
   89eb2:	bf58      	it	pl
   89eb4:	4299      	cmppl	r1, r3
   89eb6:	bf08      	it	eq
   89eb8:	4290      	cmpeq	r0, r2
   89eba:	bf2c      	ite	cs
   89ebc:	17d8      	asrcs	r0, r3, #31
   89ebe:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   89ec2:	f040 0001 	orr.w	r0, r0, #1
   89ec6:	4770      	bx	lr
   89ec8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89ecc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89ed0:	d102      	bne.n	89ed8 <__cmpdf2+0x64>
   89ed2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   89ed6:	d107      	bne.n	89ee8 <__cmpdf2+0x74>
   89ed8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89edc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89ee0:	d1d6      	bne.n	89e90 <__cmpdf2+0x1c>
   89ee2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   89ee6:	d0d3      	beq.n	89e90 <__cmpdf2+0x1c>
   89ee8:	f85d 0b04 	ldr.w	r0, [sp], #4
   89eec:	4770      	bx	lr
   89eee:	bf00      	nop

00089ef0 <__aeabi_cdrcmple>:
   89ef0:	4684      	mov	ip, r0
   89ef2:	4610      	mov	r0, r2
   89ef4:	4662      	mov	r2, ip
   89ef6:	468c      	mov	ip, r1
   89ef8:	4619      	mov	r1, r3
   89efa:	4663      	mov	r3, ip
   89efc:	e000      	b.n	89f00 <__aeabi_cdcmpeq>
   89efe:	bf00      	nop

00089f00 <__aeabi_cdcmpeq>:
   89f00:	b501      	push	{r0, lr}
   89f02:	f7ff ffb7 	bl	89e74 <__cmpdf2>
   89f06:	2800      	cmp	r0, #0
   89f08:	bf48      	it	mi
   89f0a:	f110 0f00 	cmnmi.w	r0, #0
   89f0e:	bd01      	pop	{r0, pc}

00089f10 <__aeabi_dcmpeq>:
   89f10:	f84d ed08 	str.w	lr, [sp, #-8]!
   89f14:	f7ff fff4 	bl	89f00 <__aeabi_cdcmpeq>
   89f18:	bf0c      	ite	eq
   89f1a:	2001      	moveq	r0, #1
   89f1c:	2000      	movne	r0, #0
   89f1e:	f85d fb08 	ldr.w	pc, [sp], #8
   89f22:	bf00      	nop

00089f24 <__aeabi_dcmplt>:
   89f24:	f84d ed08 	str.w	lr, [sp, #-8]!
   89f28:	f7ff ffea 	bl	89f00 <__aeabi_cdcmpeq>
   89f2c:	bf34      	ite	cc
   89f2e:	2001      	movcc	r0, #1
   89f30:	2000      	movcs	r0, #0
   89f32:	f85d fb08 	ldr.w	pc, [sp], #8
   89f36:	bf00      	nop

00089f38 <__aeabi_dcmple>:
   89f38:	f84d ed08 	str.w	lr, [sp, #-8]!
   89f3c:	f7ff ffe0 	bl	89f00 <__aeabi_cdcmpeq>
   89f40:	bf94      	ite	ls
   89f42:	2001      	movls	r0, #1
   89f44:	2000      	movhi	r0, #0
   89f46:	f85d fb08 	ldr.w	pc, [sp], #8
   89f4a:	bf00      	nop

00089f4c <__aeabi_dcmpge>:
   89f4c:	f84d ed08 	str.w	lr, [sp, #-8]!
   89f50:	f7ff ffce 	bl	89ef0 <__aeabi_cdrcmple>
   89f54:	bf94      	ite	ls
   89f56:	2001      	movls	r0, #1
   89f58:	2000      	movhi	r0, #0
   89f5a:	f85d fb08 	ldr.w	pc, [sp], #8
   89f5e:	bf00      	nop

00089f60 <__aeabi_dcmpgt>:
   89f60:	f84d ed08 	str.w	lr, [sp, #-8]!
   89f64:	f7ff ffc4 	bl	89ef0 <__aeabi_cdrcmple>
   89f68:	bf34      	ite	cc
   89f6a:	2001      	movcc	r0, #1
   89f6c:	2000      	movcs	r0, #0
   89f6e:	f85d fb08 	ldr.w	pc, [sp], #8
   89f72:	bf00      	nop

00089f74 <__aeabi_dcmpun>:
   89f74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89f78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89f7c:	d102      	bne.n	89f84 <__aeabi_dcmpun+0x10>
   89f7e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   89f82:	d10a      	bne.n	89f9a <__aeabi_dcmpun+0x26>
   89f84:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89f88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89f8c:	d102      	bne.n	89f94 <__aeabi_dcmpun+0x20>
   89f8e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   89f92:	d102      	bne.n	89f9a <__aeabi_dcmpun+0x26>
   89f94:	f04f 0000 	mov.w	r0, #0
   89f98:	4770      	bx	lr
   89f9a:	f04f 0001 	mov.w	r0, #1
   89f9e:	4770      	bx	lr

00089fa0 <__aeabi_d2iz>:
   89fa0:	ea4f 0241 	mov.w	r2, r1, lsl #1
   89fa4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   89fa8:	d215      	bcs.n	89fd6 <__aeabi_d2iz+0x36>
   89faa:	d511      	bpl.n	89fd0 <__aeabi_d2iz+0x30>
   89fac:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   89fb0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   89fb4:	d912      	bls.n	89fdc <__aeabi_d2iz+0x3c>
   89fb6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   89fba:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   89fbe:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   89fc2:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   89fc6:	fa23 f002 	lsr.w	r0, r3, r2
   89fca:	bf18      	it	ne
   89fcc:	4240      	negne	r0, r0
   89fce:	4770      	bx	lr
   89fd0:	f04f 0000 	mov.w	r0, #0
   89fd4:	4770      	bx	lr
   89fd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   89fda:	d105      	bne.n	89fe8 <__aeabi_d2iz+0x48>
   89fdc:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   89fe0:	bf08      	it	eq
   89fe2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   89fe6:	4770      	bx	lr
   89fe8:	f04f 0000 	mov.w	r0, #0
   89fec:	4770      	bx	lr
   89fee:	bf00      	nop

00089ff0 <__aeabi_uldivmod>:
   89ff0:	b953      	cbnz	r3, 8a008 <__aeabi_uldivmod+0x18>
   89ff2:	b94a      	cbnz	r2, 8a008 <__aeabi_uldivmod+0x18>
   89ff4:	2900      	cmp	r1, #0
   89ff6:	bf08      	it	eq
   89ff8:	2800      	cmpeq	r0, #0
   89ffa:	bf1c      	itt	ne
   89ffc:	f04f 31ff 	movne.w	r1, #4294967295
   8a000:	f04f 30ff 	movne.w	r0, #4294967295
   8a004:	f000 b976 	b.w	8a2f4 <__aeabi_idiv0>
   8a008:	f1ad 0c08 	sub.w	ip, sp, #8
   8a00c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8a010:	f000 f806 	bl	8a020 <__udivmoddi4>
   8a014:	f8dd e004 	ldr.w	lr, [sp, #4]
   8a018:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8a01c:	b004      	add	sp, #16
   8a01e:	4770      	bx	lr

0008a020 <__udivmoddi4>:
   8a020:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8a024:	9e08      	ldr	r6, [sp, #32]
   8a026:	460d      	mov	r5, r1
   8a028:	4604      	mov	r4, r0
   8a02a:	4688      	mov	r8, r1
   8a02c:	2b00      	cmp	r3, #0
   8a02e:	d14d      	bne.n	8a0cc <__udivmoddi4+0xac>
   8a030:	428a      	cmp	r2, r1
   8a032:	4694      	mov	ip, r2
   8a034:	d968      	bls.n	8a108 <__udivmoddi4+0xe8>
   8a036:	fab2 f282 	clz	r2, r2
   8a03a:	b152      	cbz	r2, 8a052 <__udivmoddi4+0x32>
   8a03c:	fa01 f302 	lsl.w	r3, r1, r2
   8a040:	f1c2 0120 	rsb	r1, r2, #32
   8a044:	fa20 f101 	lsr.w	r1, r0, r1
   8a048:	fa0c fc02 	lsl.w	ip, ip, r2
   8a04c:	ea41 0803 	orr.w	r8, r1, r3
   8a050:	4094      	lsls	r4, r2
   8a052:	ea4f 411c 	mov.w	r1, ip, lsr #16
   8a056:	fbb8 f7f1 	udiv	r7, r8, r1
   8a05a:	fa1f fe8c 	uxth.w	lr, ip
   8a05e:	fb01 8817 	mls	r8, r1, r7, r8
   8a062:	fb07 f00e 	mul.w	r0, r7, lr
   8a066:	0c23      	lsrs	r3, r4, #16
   8a068:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8a06c:	4298      	cmp	r0, r3
   8a06e:	d90a      	bls.n	8a086 <__udivmoddi4+0x66>
   8a070:	eb1c 0303 	adds.w	r3, ip, r3
   8a074:	f107 35ff 	add.w	r5, r7, #4294967295
   8a078:	f080 811e 	bcs.w	8a2b8 <__udivmoddi4+0x298>
   8a07c:	4298      	cmp	r0, r3
   8a07e:	f240 811b 	bls.w	8a2b8 <__udivmoddi4+0x298>
   8a082:	3f02      	subs	r7, #2
   8a084:	4463      	add	r3, ip
   8a086:	1a1b      	subs	r3, r3, r0
   8a088:	fbb3 f0f1 	udiv	r0, r3, r1
   8a08c:	fb01 3310 	mls	r3, r1, r0, r3
   8a090:	fb00 fe0e 	mul.w	lr, r0, lr
   8a094:	b2a4      	uxth	r4, r4
   8a096:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   8a09a:	45a6      	cmp	lr, r4
   8a09c:	d90a      	bls.n	8a0b4 <__udivmoddi4+0x94>
   8a09e:	eb1c 0404 	adds.w	r4, ip, r4
   8a0a2:	f100 33ff 	add.w	r3, r0, #4294967295
   8a0a6:	f080 8109 	bcs.w	8a2bc <__udivmoddi4+0x29c>
   8a0aa:	45a6      	cmp	lr, r4
   8a0ac:	f240 8106 	bls.w	8a2bc <__udivmoddi4+0x29c>
   8a0b0:	4464      	add	r4, ip
   8a0b2:	3802      	subs	r0, #2
   8a0b4:	2100      	movs	r1, #0
   8a0b6:	eba4 040e 	sub.w	r4, r4, lr
   8a0ba:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   8a0be:	b11e      	cbz	r6, 8a0c8 <__udivmoddi4+0xa8>
   8a0c0:	2300      	movs	r3, #0
   8a0c2:	40d4      	lsrs	r4, r2
   8a0c4:	e9c6 4300 	strd	r4, r3, [r6]
   8a0c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a0cc:	428b      	cmp	r3, r1
   8a0ce:	d908      	bls.n	8a0e2 <__udivmoddi4+0xc2>
   8a0d0:	2e00      	cmp	r6, #0
   8a0d2:	f000 80ee 	beq.w	8a2b2 <__udivmoddi4+0x292>
   8a0d6:	2100      	movs	r1, #0
   8a0d8:	e9c6 0500 	strd	r0, r5, [r6]
   8a0dc:	4608      	mov	r0, r1
   8a0de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a0e2:	fab3 f183 	clz	r1, r3
   8a0e6:	2900      	cmp	r1, #0
   8a0e8:	d14a      	bne.n	8a180 <__udivmoddi4+0x160>
   8a0ea:	42ab      	cmp	r3, r5
   8a0ec:	d302      	bcc.n	8a0f4 <__udivmoddi4+0xd4>
   8a0ee:	4282      	cmp	r2, r0
   8a0f0:	f200 80fc 	bhi.w	8a2ec <__udivmoddi4+0x2cc>
   8a0f4:	1a84      	subs	r4, r0, r2
   8a0f6:	eb65 0303 	sbc.w	r3, r5, r3
   8a0fa:	2001      	movs	r0, #1
   8a0fc:	4698      	mov	r8, r3
   8a0fe:	2e00      	cmp	r6, #0
   8a100:	d0e2      	beq.n	8a0c8 <__udivmoddi4+0xa8>
   8a102:	e9c6 4800 	strd	r4, r8, [r6]
   8a106:	e7df      	b.n	8a0c8 <__udivmoddi4+0xa8>
   8a108:	b902      	cbnz	r2, 8a10c <__udivmoddi4+0xec>
   8a10a:	deff      	udf	#255	; 0xff
   8a10c:	fab2 f282 	clz	r2, r2
   8a110:	2a00      	cmp	r2, #0
   8a112:	f040 8091 	bne.w	8a238 <__udivmoddi4+0x218>
   8a116:	eba1 000c 	sub.w	r0, r1, ip
   8a11a:	2101      	movs	r1, #1
   8a11c:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a120:	fa1f fe8c 	uxth.w	lr, ip
   8a124:	fbb0 f3f7 	udiv	r3, r0, r7
   8a128:	fb07 0013 	mls	r0, r7, r3, r0
   8a12c:	0c25      	lsrs	r5, r4, #16
   8a12e:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a132:	fb0e f003 	mul.w	r0, lr, r3
   8a136:	42a8      	cmp	r0, r5
   8a138:	d908      	bls.n	8a14c <__udivmoddi4+0x12c>
   8a13a:	eb1c 0505 	adds.w	r5, ip, r5
   8a13e:	f103 38ff 	add.w	r8, r3, #4294967295
   8a142:	d202      	bcs.n	8a14a <__udivmoddi4+0x12a>
   8a144:	42a8      	cmp	r0, r5
   8a146:	f200 80ce 	bhi.w	8a2e6 <__udivmoddi4+0x2c6>
   8a14a:	4643      	mov	r3, r8
   8a14c:	1a2d      	subs	r5, r5, r0
   8a14e:	fbb5 f0f7 	udiv	r0, r5, r7
   8a152:	fb07 5510 	mls	r5, r7, r0, r5
   8a156:	fb0e fe00 	mul.w	lr, lr, r0
   8a15a:	b2a4      	uxth	r4, r4
   8a15c:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   8a160:	45a6      	cmp	lr, r4
   8a162:	d908      	bls.n	8a176 <__udivmoddi4+0x156>
   8a164:	eb1c 0404 	adds.w	r4, ip, r4
   8a168:	f100 35ff 	add.w	r5, r0, #4294967295
   8a16c:	d202      	bcs.n	8a174 <__udivmoddi4+0x154>
   8a16e:	45a6      	cmp	lr, r4
   8a170:	f200 80b6 	bhi.w	8a2e0 <__udivmoddi4+0x2c0>
   8a174:	4628      	mov	r0, r5
   8a176:	eba4 040e 	sub.w	r4, r4, lr
   8a17a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a17e:	e79e      	b.n	8a0be <__udivmoddi4+0x9e>
   8a180:	f1c1 0720 	rsb	r7, r1, #32
   8a184:	408b      	lsls	r3, r1
   8a186:	fa22 fc07 	lsr.w	ip, r2, r7
   8a18a:	ea4c 0c03 	orr.w	ip, ip, r3
   8a18e:	fa25 fa07 	lsr.w	sl, r5, r7
   8a192:	ea4f 491c 	mov.w	r9, ip, lsr #16
   8a196:	fbba f8f9 	udiv	r8, sl, r9
   8a19a:	fa20 f307 	lsr.w	r3, r0, r7
   8a19e:	fb09 aa18 	mls	sl, r9, r8, sl
   8a1a2:	408d      	lsls	r5, r1
   8a1a4:	fa1f fe8c 	uxth.w	lr, ip
   8a1a8:	431d      	orrs	r5, r3
   8a1aa:	fa00 f301 	lsl.w	r3, r0, r1
   8a1ae:	fb08 f00e 	mul.w	r0, r8, lr
   8a1b2:	0c2c      	lsrs	r4, r5, #16
   8a1b4:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
   8a1b8:	42a0      	cmp	r0, r4
   8a1ba:	fa02 f201 	lsl.w	r2, r2, r1
   8a1be:	d90b      	bls.n	8a1d8 <__udivmoddi4+0x1b8>
   8a1c0:	eb1c 0404 	adds.w	r4, ip, r4
   8a1c4:	f108 3aff 	add.w	sl, r8, #4294967295
   8a1c8:	f080 8088 	bcs.w	8a2dc <__udivmoddi4+0x2bc>
   8a1cc:	42a0      	cmp	r0, r4
   8a1ce:	f240 8085 	bls.w	8a2dc <__udivmoddi4+0x2bc>
   8a1d2:	f1a8 0802 	sub.w	r8, r8, #2
   8a1d6:	4464      	add	r4, ip
   8a1d8:	1a24      	subs	r4, r4, r0
   8a1da:	fbb4 f0f9 	udiv	r0, r4, r9
   8a1de:	fb09 4410 	mls	r4, r9, r0, r4
   8a1e2:	fb00 fe0e 	mul.w	lr, r0, lr
   8a1e6:	b2ad      	uxth	r5, r5
   8a1e8:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
   8a1ec:	45a6      	cmp	lr, r4
   8a1ee:	d908      	bls.n	8a202 <__udivmoddi4+0x1e2>
   8a1f0:	eb1c 0404 	adds.w	r4, ip, r4
   8a1f4:	f100 35ff 	add.w	r5, r0, #4294967295
   8a1f8:	d26c      	bcs.n	8a2d4 <__udivmoddi4+0x2b4>
   8a1fa:	45a6      	cmp	lr, r4
   8a1fc:	d96a      	bls.n	8a2d4 <__udivmoddi4+0x2b4>
   8a1fe:	3802      	subs	r0, #2
   8a200:	4464      	add	r4, ip
   8a202:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
   8a206:	fba0 9502 	umull	r9, r5, r0, r2
   8a20a:	eba4 040e 	sub.w	r4, r4, lr
   8a20e:	42ac      	cmp	r4, r5
   8a210:	46c8      	mov	r8, r9
   8a212:	46ae      	mov	lr, r5
   8a214:	d356      	bcc.n	8a2c4 <__udivmoddi4+0x2a4>
   8a216:	d053      	beq.n	8a2c0 <__udivmoddi4+0x2a0>
   8a218:	2e00      	cmp	r6, #0
   8a21a:	d069      	beq.n	8a2f0 <__udivmoddi4+0x2d0>
   8a21c:	ebb3 0208 	subs.w	r2, r3, r8
   8a220:	eb64 040e 	sbc.w	r4, r4, lr
   8a224:	fa22 f301 	lsr.w	r3, r2, r1
   8a228:	fa04 f707 	lsl.w	r7, r4, r7
   8a22c:	431f      	orrs	r7, r3
   8a22e:	40cc      	lsrs	r4, r1
   8a230:	e9c6 7400 	strd	r7, r4, [r6]
   8a234:	2100      	movs	r1, #0
   8a236:	e747      	b.n	8a0c8 <__udivmoddi4+0xa8>
   8a238:	fa0c fc02 	lsl.w	ip, ip, r2
   8a23c:	f1c2 0120 	rsb	r1, r2, #32
   8a240:	fa25 f301 	lsr.w	r3, r5, r1
   8a244:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a248:	fa20 f101 	lsr.w	r1, r0, r1
   8a24c:	4095      	lsls	r5, r2
   8a24e:	430d      	orrs	r5, r1
   8a250:	fbb3 f1f7 	udiv	r1, r3, r7
   8a254:	fb07 3311 	mls	r3, r7, r1, r3
   8a258:	fa1f fe8c 	uxth.w	lr, ip
   8a25c:	0c28      	lsrs	r0, r5, #16
   8a25e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a262:	fb01 f30e 	mul.w	r3, r1, lr
   8a266:	4283      	cmp	r3, r0
   8a268:	fa04 f402 	lsl.w	r4, r4, r2
   8a26c:	d908      	bls.n	8a280 <__udivmoddi4+0x260>
   8a26e:	eb1c 0000 	adds.w	r0, ip, r0
   8a272:	f101 38ff 	add.w	r8, r1, #4294967295
   8a276:	d22f      	bcs.n	8a2d8 <__udivmoddi4+0x2b8>
   8a278:	4283      	cmp	r3, r0
   8a27a:	d92d      	bls.n	8a2d8 <__udivmoddi4+0x2b8>
   8a27c:	3902      	subs	r1, #2
   8a27e:	4460      	add	r0, ip
   8a280:	1ac0      	subs	r0, r0, r3
   8a282:	fbb0 f3f7 	udiv	r3, r0, r7
   8a286:	fb07 0013 	mls	r0, r7, r3, r0
   8a28a:	b2ad      	uxth	r5, r5
   8a28c:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a290:	fb03 f00e 	mul.w	r0, r3, lr
   8a294:	42a8      	cmp	r0, r5
   8a296:	d908      	bls.n	8a2aa <__udivmoddi4+0x28a>
   8a298:	eb1c 0505 	adds.w	r5, ip, r5
   8a29c:	f103 38ff 	add.w	r8, r3, #4294967295
   8a2a0:	d216      	bcs.n	8a2d0 <__udivmoddi4+0x2b0>
   8a2a2:	42a8      	cmp	r0, r5
   8a2a4:	d914      	bls.n	8a2d0 <__udivmoddi4+0x2b0>
   8a2a6:	3b02      	subs	r3, #2
   8a2a8:	4465      	add	r5, ip
   8a2aa:	1a28      	subs	r0, r5, r0
   8a2ac:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   8a2b0:	e738      	b.n	8a124 <__udivmoddi4+0x104>
   8a2b2:	4631      	mov	r1, r6
   8a2b4:	4630      	mov	r0, r6
   8a2b6:	e707      	b.n	8a0c8 <__udivmoddi4+0xa8>
   8a2b8:	462f      	mov	r7, r5
   8a2ba:	e6e4      	b.n	8a086 <__udivmoddi4+0x66>
   8a2bc:	4618      	mov	r0, r3
   8a2be:	e6f9      	b.n	8a0b4 <__udivmoddi4+0x94>
   8a2c0:	454b      	cmp	r3, r9
   8a2c2:	d2a9      	bcs.n	8a218 <__udivmoddi4+0x1f8>
   8a2c4:	ebb9 0802 	subs.w	r8, r9, r2
   8a2c8:	eb65 0e0c 	sbc.w	lr, r5, ip
   8a2cc:	3801      	subs	r0, #1
   8a2ce:	e7a3      	b.n	8a218 <__udivmoddi4+0x1f8>
   8a2d0:	4643      	mov	r3, r8
   8a2d2:	e7ea      	b.n	8a2aa <__udivmoddi4+0x28a>
   8a2d4:	4628      	mov	r0, r5
   8a2d6:	e794      	b.n	8a202 <__udivmoddi4+0x1e2>
   8a2d8:	4641      	mov	r1, r8
   8a2da:	e7d1      	b.n	8a280 <__udivmoddi4+0x260>
   8a2dc:	46d0      	mov	r8, sl
   8a2de:	e77b      	b.n	8a1d8 <__udivmoddi4+0x1b8>
   8a2e0:	4464      	add	r4, ip
   8a2e2:	3802      	subs	r0, #2
   8a2e4:	e747      	b.n	8a176 <__udivmoddi4+0x156>
   8a2e6:	3b02      	subs	r3, #2
   8a2e8:	4465      	add	r5, ip
   8a2ea:	e72f      	b.n	8a14c <__udivmoddi4+0x12c>
   8a2ec:	4608      	mov	r0, r1
   8a2ee:	e706      	b.n	8a0fe <__udivmoddi4+0xde>
   8a2f0:	4631      	mov	r1, r6
   8a2f2:	e6e9      	b.n	8a0c8 <__udivmoddi4+0xa8>

0008a2f4 <__aeabi_idiv0>:
   8a2f4:	4770      	bx	lr
   8a2f6:	bf00      	nop
   8a2f8:	78383025 	.word	0x78383025
   8a2fc:	00000000 	.word	0x00000000

0008a300 <BUILD_DATE>:
   8a300:	20677541 32203631 00323230              Aug 16 2022.

0008a30c <BUILD_TIME>:
   8a30c:	333a3631 30333a37 00000000              16:37:30....

0008a318 <LED_DESCRIPTOR>:
   8a318:	00000011 00000001 00000010 00000001     ................
   8a328:	0000004c 00000001 74697845 20676e69     L.......Exiting 
   8a338:	68746977 61747320 20737574 0a2e6425     with status %d..
   8a348:	00000000 00000000 00000000 aaaaaa00     ................
   8a358:	aaaaaaaa eeeeeeaa eeeeeeee fffffeee     ................
   8a368:	ffffffff ffffffff dfbf7fff fdfbf7ef     ................
   8a378:	dfbf7efc fdfbf7ef 0000007e              .~......~...

0008a384 <_global_impure_ptr>:
   8a384:	200003b0 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   8a394:	006e616e 33323130 37363534 62613938     nan.0123456789ab
   8a3a4:	66656463 00000000 33323130 37363534     cdef....01234567
   8a3b4:	42413938 46454443 00000000 6c756e28     89ABCDEF....(nul
   8a3c4:	0000296c 00000030                       l)..0...

0008a3cc <blanks.1>:
   8a3cc:	20202020 20202020 20202020 20202020                     

0008a3dc <zeroes.0>:
   8a3dc:	30303030 30303030 30303030 30303030     0000000000000000

0008a3ec <blanks.1>:
   8a3ec:	20202020 20202020 20202020 20202020                     

0008a3fc <zeroes.0>:
   8a3fc:	30303030 30303030 30303030 30303030     0000000000000000
   8a40c:	004e614e 69666e49 7974696e 00000000     NaN.Infinity....
   8a41c:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
   8a42c:	00000000 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8a43c:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8a44c:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8a45c:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8a46c:	656e696c 3833332d 3230325f 31303131     line-338_2021101
   8a47c:	36315f38 31353433 33303236 6372732f     8_1634516203/src
   8a48c:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8a49c:	2f636269 6c647473 642f6269 2e616f74     ibc/stdlib/dtoa.
   8a4ac:	00000063 00000043 49534f50 00000058     c...C...POSIX...
   8a4bc:	0000002e 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8a4cc:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8a4dc:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8a4ec:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8a4fc:	656e696c 3833332d 3230325f 31303131     line-338_2021101
   8a50c:	36315f38 31353433 33303236 6372732f     8_1634516203/src
   8a51c:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8a52c:	2f636269 6c647473 6d2f6269 63657270     ibc/stdlib/mprec
   8a53c:	0000632e                                .c..

0008a540 <__mprec_bigtens>:
   8a540:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   8a550:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   8a560:	7f73bf3c 75154fdd                       <.s..O.u

0008a568 <__mprec_tens>:
   8a568:	00000000 3ff00000 00000000 40240000     .......?......$@
   8a578:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   8a588:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   8a598:	00000000 412e8480 00000000 416312d0     .......A......cA
   8a5a8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   8a5b8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   8a5c8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   8a5d8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   8a5e8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   8a5f8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   8a608:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   8a618:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   8a628:	79d99db4 44ea7843                       ...yCx.D

0008a630 <p05.0>:
   8a630:	00000005 00000019 0000007d 7566202c     ........}..., fu
   8a640:	6974636e 203a6e6f 00000000 65737361     nction: ....asse
   8a650:	6f697472 2522206e 66202273 656c6961     rtion "%s" faile
   8a660:	66203a64 20656c69 22732522 696c202c     d: file "%s", li
   8a670:	2520656e 25732564 00000a73              ne %d%s%s...

0008a67c <_ctype_>:
   8a67c:	20202000 20202020 28282020 20282828     .         ((((( 
   8a68c:	20202020 20202020 20202020 20202020                     
   8a69c:	10108820 10101010 10101010 10101010      ...............
   8a6ac:	04040410 04040404 10040404 10101010     ................
   8a6bc:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8a6cc:	01010101 01010101 01010101 10101010     ................
   8a6dc:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8a6ec:	02020202 02020202 02020202 10101010     ................
   8a6fc:	00000020 00000000 00000000 00000000      ...............
   8a70c:	00000000 00000000 00000000 00000000     ................
   8a71c:	00000000 00000000 00000000 00000000     ................
   8a72c:	00000000 00000000 00000000 00000000     ................
   8a73c:	00000000 00000000 00000000 00000000     ................
   8a74c:	00000000 00000000 00000000 00000000     ................
   8a75c:	00000000 00000000 00000000 00000000     ................
   8a76c:	00000000 00000000 00000000 00000000     ................
   8a77c:	00000000                                ....

0008a780 <_init>:
   8a780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a782:	bf00      	nop
   8a784:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a786:	bc08      	pop	{r3}
   8a788:	469e      	mov	lr, r3
   8a78a:	4770      	bx	lr

0008a78c <__init_array_start>:
   8a78c:	00086241 	.word	0x00086241

0008a790 <__frame_dummy_init_array_entry>:
   8a790:	000800e1                                ....

0008a794 <_fini>:
   8a794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a796:	bf00      	nop
   8a798:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a79a:	bc08      	pop	{r3}
   8a79c:	469e      	mov	lr, r3
   8a79e:	4770      	bx	lr

0008a7a0 <__do_global_dtors_aux_fini_array_entry>:
   8a7a0:	00bd 0008                                   ....

Disassembly of section .relocate:

20000000 <efc_perform_read_sequence>:
__no_inline
RAMFUNC
uint32_t efc_perform_read_sequence(Efc *p_efc,
		uint32_t ul_cmd_st, uint32_t ul_cmd_sp,
		uint32_t *p_ul_buf, uint32_t ul_size)
{
20000000:	b530      	push	{r4, r5, lr}
	volatile uint32_t ul_status;
	uint32_t ul_cnt;

#if (SAM3U4 || SAM3XA || SAM4SD16 || SAM4SD32 || SAM4C32)
	uint32_t *p_ul_data =
			(uint32_t *) ((p_efc == EFC0) ?
20000002:	4c20      	ldr	r4, [pc, #128]	; (20000084 <efc_perform_read_sequence+0x84>)
{
20000004:	b083      	sub	sp, #12
			(uint32_t *) ((p_efc == EFC0) ?
20000006:	42a0      	cmp	r0, r4
20000008:	bf0c      	ite	eq
2000000a:	f44f 2c00 	moveq.w	ip, #524288	; 0x80000
2000000e:	f44f 1c80 	movne.w	ip, #1048576	; 0x100000
{
20000012:	9d06      	ldr	r5, [sp, #24]
	uint32_t *p_ul_data = (uint32_t *) READ_BUFF_ADDR;
#else
	return EFC_RC_NOT_SUPPORT;
#endif

	if (p_ul_buf == NULL) {
20000014:	b393      	cbz	r3, 2000007c <efc_perform_read_sequence+0x7c>
20000016:	4686      	mov	lr, r0
		return EFC_RC_INVALID;
	}

	p_efc->EEFC_FMR |= (0x1u << 16);
20000018:	6800      	ldr	r0, [r0, #0]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	p_efc->EEFC_FCR = EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
#else
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
2000001a:	b2c9      	uxtb	r1, r1
2000001c:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
	p_efc->EEFC_FMR |= (0x1u << 16);
20000020:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
20000024:	f8ce 0000 	str.w	r0, [lr]
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
20000028:	f8ce 1004 	str.w	r1, [lr, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register
	 * (EEFC_FSR) falls.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
2000002c:	f8de 1008 	ldr.w	r1, [lr, #8]
20000030:	9101      	str	r1, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) == EEFC_FSR_FRDY);
20000032:	9801      	ldr	r0, [sp, #4]
20000034:	f010 0001 	ands.w	r0, r0, #1
20000038:	d1f8      	bne.n	2000002c <efc_perform_read_sequence+0x2c>

	/* The data is located in the first address of the Flash
	 * memory mapping.
	 */
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
2000003a:	b165      	cbz	r5, 20000056 <efc_perform_read_sequence+0x56>
2000003c:	eb0c 0585 	add.w	r5, ip, r5, lsl #2
20000040:	f1ac 0104 	sub.w	r1, ip, #4
20000044:	3b04      	subs	r3, #4
20000046:	f1a5 0c04 	sub.w	ip, r5, #4
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
2000004a:	f851 4f04 	ldr.w	r4, [r1, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
2000004e:	4561      	cmp	r1, ip
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
20000050:	f843 4f04 	str.w	r4, [r3, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
20000054:	d1f9      	bne.n	2000004a <efc_perform_read_sequence+0x4a>
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
#else
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
20000056:	b2d2      	uxtb	r2, r2
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
20000058:	f042 42b4 	orr.w	r2, r2, #1509949440	; 0x5a000000
	p_efc->EEFC_FCR =
2000005c:	f8ce 2004 	str.w	r2, [lr, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register (EEFC_FSR)
	 * rises.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
20000060:	f8de 3008 	ldr.w	r3, [lr, #8]
20000064:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000066:	9b01      	ldr	r3, [sp, #4]
20000068:	07db      	lsls	r3, r3, #31
2000006a:	d5f9      	bpl.n	20000060 <efc_perform_read_sequence+0x60>

	p_efc->EEFC_FMR &= ~(0x1u << 16);
2000006c:	f8de 3000 	ldr.w	r3, [lr]
20000070:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
20000074:	f8ce 3000 	str.w	r3, [lr]

	return EFC_RC_OK;
}
20000078:	b003      	add	sp, #12
2000007a:	bd30      	pop	{r4, r5, pc}
		return EFC_RC_INVALID;
2000007c:	2002      	movs	r0, #2
}
2000007e:	b003      	add	sp, #12
20000080:	bd30      	pop	{r4, r5, pc}
20000082:	bf00      	nop
20000084:	400e0800 	.word	0x400e0800

20000088 <efc_write_fmr>:
 */
__no_inline
RAMFUNC
void efc_write_fmr(Efc *p_efc, uint32_t ul_fmr)
{
	p_efc->EEFC_FMR = ul_fmr;
20000088:	6001      	str	r1, [r0, #0]
}
2000008a:	4770      	bx	lr

2000008c <efc_perform_fcr>:
 * \return The current status.
 */
__no_inline
RAMFUNC
uint32_t efc_perform_fcr(Efc *p_efc, uint32_t ul_fcr)
{
2000008c:	b082      	sub	sp, #8
	volatile uint32_t ul_status;

	p_efc->EEFC_FCR = ul_fcr;
2000008e:	6041      	str	r1, [r0, #4]
	do {
		ul_status = p_efc->EEFC_FSR;
20000090:	6883      	ldr	r3, [r0, #8]
20000092:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000094:	9b01      	ldr	r3, [sp, #4]
20000096:	07db      	lsls	r3, r3, #31
20000098:	d5fa      	bpl.n	20000090 <efc_perform_fcr+0x4>

	return (ul_status & EEFC_ERROR_FLAGS);
2000009a:	9801      	ldr	r0, [sp, #4]
}
2000009c:	f000 0006 	and.w	r0, r0, #6
200000a0:	b002      	add	sp, #8
200000a2:	4770      	bx	lr

200000a4 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200000a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
200000a8:	4819      	ldr	r0, [pc, #100]	; (20000110 <SystemInit+0x6c>)
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200000aa:	491a      	ldr	r1, [pc, #104]	; (20000114 <SystemInit+0x70>)
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
200000ac:	4a1a      	ldr	r2, [pc, #104]	; (20000118 <SystemInit+0x74>)
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200000ae:	6003      	str	r3, [r0, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200000b0:	600b      	str	r3, [r1, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
200000b2:	6a13      	ldr	r3, [r2, #32]
200000b4:	01db      	lsls	r3, r3, #7
200000b6:	d404      	bmi.n	200000c2 <SystemInit+0x1e>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000b8:	4b18      	ldr	r3, [pc, #96]	; (2000011c <SystemInit+0x78>)
200000ba:	6213      	str	r3, [r2, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
200000bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000be:	07d8      	lsls	r0, r3, #31
200000c0:	d5fc      	bpl.n	200000bc <SystemInit+0x18>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000c2:	4a15      	ldr	r2, [pc, #84]	; (20000118 <SystemInit+0x74>)
200000c4:	4b16      	ldr	r3, [pc, #88]	; (20000120 <SystemInit+0x7c>)
200000c6:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
200000c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000ca:	03d9      	lsls	r1, r3, #15
200000cc:	d5fc      	bpl.n	200000c8 <SystemInit+0x24>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000ce:	6b13      	ldr	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000d0:	4811      	ldr	r0, [pc, #68]	; (20000118 <SystemInit+0x74>)
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000d2:	f023 0303 	bic.w	r3, r3, #3
200000d6:	f043 0301 	orr.w	r3, r3, #1
200000da:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000dc:	6e83      	ldr	r3, [r0, #104]	; 0x68
200000de:	071b      	lsls	r3, r3, #28
200000e0:	d5fc      	bpl.n	200000dc <SystemInit+0x38>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000e2:	4b10      	ldr	r3, [pc, #64]	; (20000124 <SystemInit+0x80>)
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000e4:	490c      	ldr	r1, [pc, #48]	; (20000118 <SystemInit+0x74>)
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000e6:	6283      	str	r3, [r0, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000e8:	6e8b      	ldr	r3, [r1, #104]	; 0x68
200000ea:	0798      	lsls	r0, r3, #30
200000ec:	d5fc      	bpl.n	200000e8 <SystemInit+0x44>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000ee:	2311      	movs	r3, #17
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000f0:	4a09      	ldr	r2, [pc, #36]	; (20000118 <SystemInit+0x74>)
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000f2:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000f6:	0719      	lsls	r1, r3, #28
200000f8:	d5fc      	bpl.n	200000f4 <SystemInit+0x50>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000fa:	2312      	movs	r3, #18
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000fc:	4906      	ldr	r1, [pc, #24]	; (20000118 <SystemInit+0x74>)
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000fe:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000100:	6e8b      	ldr	r3, [r1, #104]	; 0x68
20000102:	071b      	lsls	r3, r3, #28
20000104:	d5fc      	bpl.n	20000100 <SystemInit+0x5c>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000106:	4b08      	ldr	r3, [pc, #32]	; (20000128 <SystemInit+0x84>)
20000108:	4a08      	ldr	r2, [pc, #32]	; (2000012c <SystemInit+0x88>)
2000010a:	601a      	str	r2, [r3, #0]
}
2000010c:	4770      	bx	lr
2000010e:	bf00      	nop
20000110:	400e0800 	.word	0x400e0800
20000114:	400e0a00 	.word	0x400e0a00
20000118:	400e0400 	.word	0x400e0400
2000011c:	00370809 	.word	0x00370809
20000120:	01370809 	.word	0x01370809
20000124:	200f3f01 	.word	0x200f3f01
20000128:	20000308 	.word	0x20000308
2000012c:	05b8d800 	.word	0x05b8d800

20000130 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
20000130:	4b14      	ldr	r3, [pc, #80]	; (20000184 <system_init_flash+0x54>)
20000132:	4298      	cmp	r0, r3
20000134:	d205      	bcs.n	20000142 <system_init_flash+0x12>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
20000136:	2300      	movs	r3, #0
20000138:	4913      	ldr	r1, [pc, #76]	; (20000188 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
2000013a:	4a14      	ldr	r2, [pc, #80]	; (2000018c <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
2000013c:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
2000013e:	6013      	str	r3, [r2, #0]
20000140:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
20000142:	4b13      	ldr	r3, [pc, #76]	; (20000190 <system_init_flash+0x60>)
20000144:	4298      	cmp	r0, r3
20000146:	d206      	bcs.n	20000156 <system_init_flash+0x26>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
20000148:	f44f 7380 	mov.w	r3, #256	; 0x100
2000014c:	490e      	ldr	r1, [pc, #56]	; (20000188 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
2000014e:	4a0f      	ldr	r2, [pc, #60]	; (2000018c <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
20000150:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
20000152:	6013      	str	r3, [r2, #0]
20000154:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
20000156:	4b0f      	ldr	r3, [pc, #60]	; (20000194 <system_init_flash+0x64>)
20000158:	4298      	cmp	r0, r3
2000015a:	d806      	bhi.n	2000016a <system_init_flash+0x3a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
2000015c:	f44f 7300 	mov.w	r3, #512	; 0x200
20000160:	4909      	ldr	r1, [pc, #36]	; (20000188 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20000162:	4a0a      	ldr	r2, [pc, #40]	; (2000018c <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20000164:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20000166:	6013      	str	r3, [r2, #0]
20000168:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
2000016a:	4b0b      	ldr	r3, [pc, #44]	; (20000198 <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2000016c:	4906      	ldr	r1, [pc, #24]	; (20000188 <system_init_flash+0x58>)
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
2000016e:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
20000170:	bf94      	ite	ls
20000172:	f44f 7340 	movls.w	r3, #768	; 0x300
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000176:	f44f 6380 	movhi.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000017a:	4a04      	ldr	r2, [pc, #16]	; (2000018c <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2000017c:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000017e:	6013      	str	r3, [r2, #0]
	}
}
20000180:	4770      	bx	lr
20000182:	bf00      	nop
20000184:	016e3600 	.word	0x016e3600
20000188:	400e0800 	.word	0x400e0800
2000018c:	400e0a00 	.word	0x400e0a00
20000190:	02625a00 	.word	0x02625a00
20000194:	044aa1ff 	.word	0x044aa1ff
20000198:	0501bcff 	.word	0x0501bcff

2000019c <usb_serial_number>:
2000019c:	30303030 30303030 30303030 44414544     000000000000DEAD
200001ac:	46454542 00000000 00000000 00000000     BEEF............
200001bc:	00000000                                ....

200001c0 <sram_size>:
200001c0:	00400000                                ..@.

200001c4 <main_b_vendor_enable>:
200001c4:	00000001                                ....

200001c8 <MS_BOS_PACKET>:
200001c8:	00210f05 05101c01 dd60df00 c74589d8     ..!.......`...E.
200001d8:	65d29c4c 8a649e9d 0300009f 01009e06     L..e..d.........
200001e8:	00000000                                ....

200001ec <MS_OS_DESC>:
200001ec:	0000000a 06030000 0014009e 49570003     ..............WI
200001fc:	4253554e 00000000 00000000 00800000     NUSB............
2000020c:	00070004 00440028 00760065 00630069     ....(.D.e.v.i.c.
2000021c:	00490065 0074006e 00720065 00610066     e.I.n.t.e.r.f.a.
2000022c:	00650063 00550047 00440049 004e0000     c.e.G.U.I.D...N.
2000023c:	0030007b 00430041 00320045 00330042     {.0.A.C.E.2.B.3.
2000024c:	002d0045 00420032 00450033 0032002d     E.-.2.B.3.E.-.2.
2000025c:	00330042 002d0045 00420032 00450033     B.3.E.-.2.B.3.E.
2000026c:	0034002d 00320035 00300031 00430041     -.4.5.2.1.0.A.C.
2000027c:	00320045 00330042 007d0045 00000000     E.2.B.3.E.}.....

2000028c <udc_string_desc>:
2000028c:	00000300 00000000 00000000 00000000     ................
2000029c:	00000000 00000000 00000000 00000000     ................
200002ac:	00000000 00000000 00000000 00000000     ................
200002bc:	00000000 00000000 00000000 00000000     ................
200002cc:	00000000                                ....

200002d0 <udc_string_desc_languageid>:
200002d0:	04090304                                ....

200002d4 <udc_string_manufacturer_name>:
200002d4:	4177654e 65542045 6f6e6863 79676f6c     NewAE Technology
200002e4:	636e4920 0000002e                        Inc....

200002ec <udc_string_product_name>:
200002ec:	6c6c6142 69747369 65472063 5743206c     Ballistic Gel CW
200002fc:	00313235                                521.

20000300 <xram>:
20000300:	60000000                                ...`

20000304 <g_interrupt_enabled>:
20000304:	00000001                                ....

20000308 <SystemCoreClock>:
20000308:	003d0900                                ..=.

2000030c <udi_api_vendor>:
2000030c:	00081e95 00081e51 00081e65 00081e45     ....Q...e...E...
2000031c:	00000000                                ....

20000320 <udc_config>:
20000320:	20000388 20000340 20000388 2000039c     ... @.. ... ... 
20000330:	20000338 00000000                       8.. ....

20000338 <udc_config_hs>:
20000338:	20000368 200003a8                       h.. ... 

20000340 <udc_config_lsfs>:
20000340:	20000348 200003a8                       H.. ... 

20000348 <udc_desc_fs>:
20000348:	00200209 80000101 000409fa ffff0200     .. .............
20000358:	050700ff 00400281 02050700 00004002     ......@......@..

20000368 <udc_desc_hs>:
20000368:	00200209 80000101 000409fa ffff0200     .. .............
20000378:	050700ff 02000281 02050700 00020002     ................

20000388 <udc_device_desc>:
20000388:	02000112 40000000 c5212b3e 02010200     .......@>+!.....
20000398:	00000103                                ....

2000039c <udc_device_qual>:
2000039c:	0200060a 40000000 00000001              .......@....

200003a8 <udi_apis>:
200003a8:	2000030c                                ... 

200003ac <_impure_ptr>:
200003ac:	200003b0                                ... 

200003b0 <impure_data>:
200003b0:	00000000 2000069c 20000704 2000076c     ....... ... l.. 
200003c0:	00000000 00000000 00000000 00000000     ................
200003d0:	00000000 00000000 00000000 00000000     ................
200003e0:	00000000 00000000 00000000 00000000     ................
200003f0:	00000000 00000000 00000000 00000000     ................
20000400:	00000000 00000000 00000000 00000000     ................
20000410:	00000000 00000000 00000000 00000000     ................
20000420:	00000000 00000000 00000000 00000000     ................
20000430:	00000000 00000000 00000000 00000000     ................
20000440:	00000000 00000000 00000000 00000000     ................
20000450:	00000000 00000000 00000001 00000000     ................
20000460:	abcd330e e66d1234 0005deec 0000000b     .3..4.m.........
20000470:	00000000 00000000 00000000 00000000     ................
20000480:	00000000 00000000 00000000 00000000     ................
20000490:	00000000 00000000 00000000 00000000     ................
200004a0:	00000000 00000000 00000000 00000000     ................
200004b0:	00000000 00000000 00000000 00000000     ................
200004c0:	00000000 00000000 00000000 00000000     ................
200004d0:	00000000 00000000 00000000 00000000     ................
200004e0:	00000000 00000000 00000000 00000000     ................
200004f0:	00000000 00000000 00000000 00000000     ................
20000500:	00000000 00000000 00000000 00000000     ................
20000510:	00000000 00000000 00000000 00000000     ................
20000520:	00000000 00000000 00000000 00000000     ................
20000530:	00000000 00000000 00000000 00000000     ................
20000540:	00000000 00000000 00000000 00000000     ................
20000550:	00000000 00000000 00000000 00000000     ................
20000560:	00000000 00000000 00000000 00000000     ................
20000570:	00000000 00000000 00000000 00000000     ................
20000580:	00000000 00000000 00000000 00000000     ................
20000590:	00000000 00000000 00000000 00000000     ................
200005a0:	00000000 00000000 00000000 00000000     ................
200005b0:	00000000 00000000 00000000 00000000     ................
200005c0:	00000000 00000000 00000000 00000000     ................
200005d0:	00000000 00000000 00000000 00000000     ................
200005e0:	00000000 00000000 00000000 00000000     ................
200005f0:	00000000 00000000 00000000 00000000     ................
20000600:	00000000 00000000 00000000 00000000     ................
20000610:	00000000 00000000 00000000 00000000     ................
20000620:	00000000 00000000 00000000 00000000     ................
20000630:	00000000 00000000 00000000 00000000     ................
20000640:	00000000 00000000 00000000 00000000     ................
20000650:	00000000 00000000 00000000 00000000     ................
20000660:	00000000 00000000 00000000 00000000     ................
20000670:	00000000 00000000 00000000 00000000     ................
20000680:	00000000 00000000 00000000 00000000     ................
20000690:	00000000 00000000 00000000 00000000     ................
200006a0:	00000000 00000000 00000000 00000000     ................
200006b0:	00000000 00000000 00000000 00000000     ................
200006c0:	00000000 00000000 00000000 00000000     ................
200006d0:	00000000 00000000 00000000 00000000     ................
200006e0:	00000000 00000000 00000000 00000000     ................
200006f0:	00000000 00000000 00000000 00000000     ................
20000700:	00000000 00000000 00000000 00000000     ................
20000710:	00000000 00000000 00000000 00000000     ................
20000720:	00000000 00000000 00000000 00000000     ................
20000730:	00000000 00000000 00000000 00000000     ................
20000740:	00000000 00000000 00000000 00000000     ................
20000750:	00000000 00000000 00000000 00000000     ................
20000760:	00000000 00000000 00000000 00000000     ................
20000770:	00000000 00000000 00000000 00000000     ................
20000780:	00000000 00000000 00000000 00000000     ................
20000790:	00000000 00000000 00000000 00000000     ................
200007a0:	00000000 00000000 00000000 00000000     ................
200007b0:	00000000 00000000 00000000 00000000     ................
200007c0:	00000000 00000000 00000000 00000000     ................
200007d0:	00000000 00000000                       ........

200007d8 <__atexit_recursive_mutex>:
200007d8:	200036cc                                .6. 

200007dc <__global_locale>:
200007dc:	00000043 00000000 00000000 00000000     C...............
200007ec:	00000000 00000000 00000000 00000000     ................
200007fc:	00000043 00000000 00000000 00000000     C...............
2000080c:	00000000 00000000 00000000 00000000     ................
2000081c:	00000043 00000000 00000000 00000000     C...............
2000082c:	00000000 00000000 00000000 00000000     ................
2000083c:	00000043 00000000 00000000 00000000     C...............
2000084c:	00000000 00000000 00000000 00000000     ................
2000085c:	00000043 00000000 00000000 00000000     C...............
2000086c:	00000000 00000000 00000000 00000000     ................
2000087c:	00000043 00000000 00000000 00000000     C...............
2000088c:	00000000 00000000 00000000 00000000     ................
2000089c:	00000043 00000000 00000000 00000000     C...............
200008ac:	00000000 00000000 00000000 00000000     ................
200008bc:	000892dd 000882e5 00000000 0008a67c     ............|...
200008cc:	0008a4bc 0008a348 0008a348 0008a348     ....H...H...H...
200008dc:	0008a348 0008a348 0008a348 0008a348     H...H...H...H...
200008ec:	0008a348 0008a348 ffffffff ffffffff     H...H...........
200008fc:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
2000090c:	00000000 00000000 00000000 00000000     ................
2000091c:	00000000 00000000 53410000 00494943     ..........ASCII.
2000092c:	00000000 00000000 00000000 00000000     ................
2000093c:	00000000 00000000 00000000              ............

20000948 <__malloc_av_>:
20000948:	00000000 00000000 20000948 20000948     ........H.. H.. 
20000958:	20000950 20000950 20000958 20000958     P.. P.. X.. X.. 
20000968:	20000960 20000960 20000968 20000968     `.. `.. h.. h.. 
20000978:	20000970 20000970 20000978 20000978     p.. p.. x.. x.. 
20000988:	20000980 20000980 20000988 20000988     ... ... ... ... 
20000998:	20000990 20000990 20000998 20000998     ... ... ... ... 
200009a8:	200009a0 200009a0 200009a8 200009a8     ... ... ... ... 
200009b8:	200009b0 200009b0 200009b8 200009b8     ... ... ... ... 
200009c8:	200009c0 200009c0 200009c8 200009c8     ... ... ... ... 
200009d8:	200009d0 200009d0 200009d8 200009d8     ... ... ... ... 
200009e8:	200009e0 200009e0 200009e8 200009e8     ... ... ... ... 
200009f8:	200009f0 200009f0 200009f8 200009f8     ... ... ... ... 
20000a08:	20000a00 20000a00 20000a08 20000a08     ... ... ... ... 
20000a18:	20000a10 20000a10 20000a18 20000a18     ... ... ... ... 
20000a28:	20000a20 20000a20 20000a28 20000a28      ..  .. (.. (.. 
20000a38:	20000a30 20000a30 20000a38 20000a38     0.. 0.. 8.. 8.. 
20000a48:	20000a40 20000a40 20000a48 20000a48     @.. @.. H.. H.. 
20000a58:	20000a50 20000a50 20000a58 20000a58     P.. P.. X.. X.. 
20000a68:	20000a60 20000a60 20000a68 20000a68     `.. `.. h.. h.. 
20000a78:	20000a70 20000a70 20000a78 20000a78     p.. p.. x.. x.. 
20000a88:	20000a80 20000a80 20000a88 20000a88     ... ... ... ... 
20000a98:	20000a90 20000a90 20000a98 20000a98     ... ... ... ... 
20000aa8:	20000aa0 20000aa0 20000aa8 20000aa8     ... ... ... ... 
20000ab8:	20000ab0 20000ab0 20000ab8 20000ab8     ... ... ... ... 
20000ac8:	20000ac0 20000ac0 20000ac8 20000ac8     ... ... ... ... 
20000ad8:	20000ad0 20000ad0 20000ad8 20000ad8     ... ... ... ... 
20000ae8:	20000ae0 20000ae0 20000ae8 20000ae8     ... ... ... ... 
20000af8:	20000af0 20000af0 20000af8 20000af8     ... ... ... ... 
20000b08:	20000b00 20000b00 20000b08 20000b08     ... ... ... ... 
20000b18:	20000b10 20000b10 20000b18 20000b18     ... ... ... ... 
20000b28:	20000b20 20000b20 20000b28 20000b28      ..  .. (.. (.. 
20000b38:	20000b30 20000b30 20000b38 20000b38     0.. 0.. 8.. 8.. 
20000b48:	20000b40 20000b40 20000b48 20000b48     @.. @.. H.. H.. 
20000b58:	20000b50 20000b50 20000b58 20000b58     P.. P.. X.. X.. 
20000b68:	20000b60 20000b60 20000b68 20000b68     `.. `.. h.. h.. 
20000b78:	20000b70 20000b70 20000b78 20000b78     p.. p.. x.. x.. 
20000b88:	20000b80 20000b80 20000b88 20000b88     ... ... ... ... 
20000b98:	20000b90 20000b90 20000b98 20000b98     ... ... ... ... 
20000ba8:	20000ba0 20000ba0 20000ba8 20000ba8     ... ... ... ... 
20000bb8:	20000bb0 20000bb0 20000bb8 20000bb8     ... ... ... ... 
20000bc8:	20000bc0 20000bc0 20000bc8 20000bc8     ... ... ... ... 
20000bd8:	20000bd0 20000bd0 20000bd8 20000bd8     ... ... ... ... 
20000be8:	20000be0 20000be0 20000be8 20000be8     ... ... ... ... 
20000bf8:	20000bf0 20000bf0 20000bf8 20000bf8     ... ... ... ... 
20000c08:	20000c00 20000c00 20000c08 20000c08     ... ... ... ... 
20000c18:	20000c10 20000c10 20000c18 20000c18     ... ... ... ... 
20000c28:	20000c20 20000c20 20000c28 20000c28      ..  .. (.. (.. 
20000c38:	20000c30 20000c30 20000c38 20000c38     0.. 0.. 8.. 8.. 
20000c48:	20000c40 20000c40 20000c48 20000c48     @.. @.. H.. H.. 
20000c58:	20000c50 20000c50 20000c58 20000c58     P.. P.. X.. X.. 
20000c68:	20000c60 20000c60 20000c68 20000c68     `.. `.. h.. h.. 
20000c78:	20000c70 20000c70 20000c78 20000c78     p.. p.. x.. x.. 
20000c88:	20000c80 20000c80 20000c88 20000c88     ... ... ... ... 
20000c98:	20000c90 20000c90 20000c98 20000c98     ... ... ... ... 
20000ca8:	20000ca0 20000ca0 20000ca8 20000ca8     ... ... ... ... 
20000cb8:	20000cb0 20000cb0 20000cb8 20000cb8     ... ... ... ... 
20000cc8:	20000cc0 20000cc0 20000cc8 20000cc8     ... ... ... ... 
20000cd8:	20000cd0 20000cd0 20000cd8 20000cd8     ... ... ... ... 
20000ce8:	20000ce0 20000ce0 20000ce8 20000ce8     ... ... ... ... 
20000cf8:	20000cf0 20000cf0 20000cf8 20000cf8     ... ... ... ... 
20000d08:	20000d00 20000d00 20000d08 20000d08     ... ... ... ... 
20000d18:	20000d10 20000d10 20000d18 20000d18     ... ... ... ... 
20000d28:	20000d20 20000d20 20000d28 20000d28      ..  .. (.. (.. 
20000d38:	20000d30 20000d30 20000d38 20000d38     0.. 0.. 8.. 8.. 
20000d48:	20000d40 20000d40                       @.. @.. 

20000d50 <__malloc_sbrk_base>:
20000d50:	ffffffff                                ....

20000d54 <__malloc_trim_threshold>:
20000d54:	00020000                                ....
