
cw521-CW521.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a044  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008a044  0008a044  0001a044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000c88  20000000  0008a04c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00002958  20000c88  0008acd4  00020c88  2**2
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020c88  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020cb1  2**0
                  CONTENTS, READONLY
  7 .debug_info   000260f6  00000000  00000000  00020d0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000054b5  00000000  00000000  00046e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000a39a  00000000  00000000  0004c2b5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000da8  00000000  00000000  0005664f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00002630  00000000  00000000  000573f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001a23c  00000000  00000000  00059a27  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00015b51  00000000  00000000  00073c63  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00059a29  00000000  00000000  000897b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  0000381c  00000000  00000000  000e31e0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 59 24 08 00 39 2a 08 00 39 2a 08 00     .@. Y$..9*..9*..
   80010:	39 2a 08 00 39 2a 08 00 39 2a 08 00 00 00 00 00     9*..9*..9*......
   80020:	00 00 00 00 00 00 00 00 00 00 00 00 39 2a 08 00     ............9*..
   80030:	39 2a 08 00 00 00 00 00 39 2a 08 00 39 2a 08 00     9*......9*..9*..
   80040:	39 2a 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     9*..9*..9*..9*..
   80050:	39 2a 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     9*..9*..9*..9*..
   80060:	39 2a 08 00 39 2a 08 00 4d 0b 08 00 19 0c 08 00     9*..9*..M.......
   80070:	e5 0c 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     ....9*..9*..9*..
   80080:	39 2a 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     9*..9*..9*..9*..
   80090:	39 2a 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     9*..9*..9*..9*..
   800a0:	39 2a 08 00 39 2a 08 00 39 2a 08 00 39 2a 08 00     9*..9*..9*..9*..
   800b0:	39 2a 08 00 c9 11 08 00 39 2a 08 00                 9*......9*..

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000c88 	.word	0x20000c88
   800d8:	00000000 	.word	0x00000000
   800dc:	0008a04c 	.word	0x0008a04c

000800e0 <frame_dummy>:
   800e0:	4b0c      	ldr	r3, [pc, #48]	; (80114 <frame_dummy+0x34>)
   800e2:	b143      	cbz	r3, 800f6 <frame_dummy+0x16>
   800e4:	480c      	ldr	r0, [pc, #48]	; (80118 <frame_dummy+0x38>)
   800e6:	b510      	push	{r4, lr}
   800e8:	490c      	ldr	r1, [pc, #48]	; (8011c <frame_dummy+0x3c>)
   800ea:	f3af 8000 	nop.w
   800ee:	480c      	ldr	r0, [pc, #48]	; (80120 <frame_dummy+0x40>)
   800f0:	6803      	ldr	r3, [r0, #0]
   800f2:	b923      	cbnz	r3, 800fe <frame_dummy+0x1e>
   800f4:	bd10      	pop	{r4, pc}
   800f6:	480a      	ldr	r0, [pc, #40]	; (80120 <frame_dummy+0x40>)
   800f8:	6803      	ldr	r3, [r0, #0]
   800fa:	b933      	cbnz	r3, 8010a <frame_dummy+0x2a>
   800fc:	4770      	bx	lr
   800fe:	4b09      	ldr	r3, [pc, #36]	; (80124 <frame_dummy+0x44>)
   80100:	2b00      	cmp	r3, #0
   80102:	d0f7      	beq.n	800f4 <frame_dummy+0x14>
   80104:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   80108:	4718      	bx	r3
   8010a:	4b06      	ldr	r3, [pc, #24]	; (80124 <frame_dummy+0x44>)
   8010c:	2b00      	cmp	r3, #0
   8010e:	d0f5      	beq.n	800fc <frame_dummy+0x1c>
   80110:	4718      	bx	r3
   80112:	bf00      	nop
   80114:	00000000 	.word	0x00000000
   80118:	0008a04c 	.word	0x0008a04c
   8011c:	20000c8c 	.word	0x20000c8c
   80120:	0008a04c 	.word	0x0008a04c
   80124:	00000000 	.word	0x00000000

00080128 <usart_serial_getchar>:
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   80128:	2200      	movs	r2, #0
{
   8012a:	b5f0      	push	{r4, r5, r6, r7, lr}

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   8012c:	4b20      	ldr	r3, [pc, #128]	; (801b0 <usart_serial_getchar+0x88>)
{
   8012e:	b083      	sub	sp, #12
	if (UART == (Uart*)p_usart) {
   80130:	4298      	cmp	r0, r3
{
   80132:	460e      	mov	r6, r1
	uint32_t val = 0;
   80134:	9201      	str	r2, [sp, #4]
	if (UART == (Uart*)p_usart) {
   80136:	d020      	beq.n	8017a <usart_serial_getchar+0x52>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   80138:	4b1e      	ldr	r3, [pc, #120]	; (801b4 <usart_serial_getchar+0x8c>)
   8013a:	4298      	cmp	r0, r3
   8013c:	d026      	beq.n	8018c <usart_serial_getchar+0x64>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   8013e:	4b1e      	ldr	r3, [pc, #120]	; (801b8 <usart_serial_getchar+0x90>)
   80140:	4298      	cmp	r0, r3
   80142:	d02c      	beq.n	8019e <usart_serial_getchar+0x76>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
   80144:	4b1d      	ldr	r3, [pc, #116]	; (801bc <usart_serial_getchar+0x94>)
   80146:	4298      	cmp	r0, r3
   80148:	d00e      	beq.n	80168 <usart_serial_getchar+0x40>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
   8014a:	4b1d      	ldr	r3, [pc, #116]	; (801c0 <usart_serial_getchar+0x98>)
   8014c:	4298      	cmp	r0, r3
   8014e:	d109      	bne.n	80164 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
   80150:	4604      	mov	r4, r0
   80152:	4f1c      	ldr	r7, [pc, #112]	; (801c4 <usart_serial_getchar+0x9c>)
   80154:	ad01      	add	r5, sp, #4
   80156:	4629      	mov	r1, r5
   80158:	4620      	mov	r0, r4
   8015a:	47b8      	blx	r7
   8015c:	2800      	cmp	r0, #0
   8015e:	d1fa      	bne.n	80156 <usart_serial_getchar+0x2e>
		*data = (uint8_t)(val & 0xFF);
   80160:	9b01      	ldr	r3, [sp, #4]
   80162:	7033      	strb	r3, [r6, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   80164:	b003      	add	sp, #12
   80166:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (usart_read(p_usart, &val));
   80168:	4604      	mov	r4, r0
   8016a:	4f16      	ldr	r7, [pc, #88]	; (801c4 <usart_serial_getchar+0x9c>)
   8016c:	ad01      	add	r5, sp, #4
   8016e:	4629      	mov	r1, r5
   80170:	4620      	mov	r0, r4
   80172:	47b8      	blx	r7
   80174:	2800      	cmp	r0, #0
   80176:	d1fa      	bne.n	8016e <usart_serial_getchar+0x46>
   80178:	e7f2      	b.n	80160 <usart_serial_getchar+0x38>
		while (uart_read((Uart*)p_usart, data));
   8017a:	4604      	mov	r4, r0
   8017c:	4d12      	ldr	r5, [pc, #72]	; (801c8 <usart_serial_getchar+0xa0>)
   8017e:	4631      	mov	r1, r6
   80180:	4620      	mov	r0, r4
   80182:	47a8      	blx	r5
   80184:	2800      	cmp	r0, #0
   80186:	d1fa      	bne.n	8017e <usart_serial_getchar+0x56>
}
   80188:	b003      	add	sp, #12
   8018a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (usart_read(p_usart, &val));
   8018c:	4604      	mov	r4, r0
   8018e:	4f0d      	ldr	r7, [pc, #52]	; (801c4 <usart_serial_getchar+0x9c>)
   80190:	ad01      	add	r5, sp, #4
   80192:	4629      	mov	r1, r5
   80194:	4620      	mov	r0, r4
   80196:	47b8      	blx	r7
   80198:	2800      	cmp	r0, #0
   8019a:	d1fa      	bne.n	80192 <usart_serial_getchar+0x6a>
   8019c:	e7e0      	b.n	80160 <usart_serial_getchar+0x38>
		while (usart_read(p_usart, &val));
   8019e:	4604      	mov	r4, r0
   801a0:	4f08      	ldr	r7, [pc, #32]	; (801c4 <usart_serial_getchar+0x9c>)
   801a2:	ad01      	add	r5, sp, #4
   801a4:	4629      	mov	r1, r5
   801a6:	4620      	mov	r0, r4
   801a8:	47b8      	blx	r7
   801aa:	2800      	cmp	r0, #0
   801ac:	d1fa      	bne.n	801a4 <usart_serial_getchar+0x7c>
   801ae:	e7d7      	b.n	80160 <usart_serial_getchar+0x38>
   801b0:	400e0600 	.word	0x400e0600
   801b4:	40090000 	.word	0x40090000
   801b8:	40094000 	.word	0x40094000
   801bc:	40098000 	.word	0x40098000
   801c0:	4009c000 	.word	0x4009c000
   801c4:	00080ae9 	.word	0x00080ae9
   801c8:	00083645 	.word	0x00083645

000801cc <usart_serial_putchar>:
	if (UART == (Uart*)p_usart) {
   801cc:	4b1f      	ldr	r3, [pc, #124]	; (8024c <usart_serial_putchar+0x80>)
{
   801ce:	b570      	push	{r4, r5, r6, lr}
	if (UART == (Uart*)p_usart) {
   801d0:	4298      	cmp	r0, r3
{
   801d2:	460d      	mov	r5, r1
	if (UART == (Uart*)p_usart) {
   801d4:	d016      	beq.n	80204 <usart_serial_putchar+0x38>
	if (USART0 == p_usart) {
   801d6:	4b1e      	ldr	r3, [pc, #120]	; (80250 <usart_serial_putchar+0x84>)
   801d8:	4298      	cmp	r0, r3
   801da:	d01c      	beq.n	80216 <usart_serial_putchar+0x4a>
	if (USART1 == p_usart) {
   801dc:	4b1d      	ldr	r3, [pc, #116]	; (80254 <usart_serial_putchar+0x88>)
   801de:	4298      	cmp	r0, r3
   801e0:	d022      	beq.n	80228 <usart_serial_putchar+0x5c>
	if (USART2 == p_usart) {
   801e2:	4b1d      	ldr	r3, [pc, #116]	; (80258 <usart_serial_putchar+0x8c>)
   801e4:	4298      	cmp	r0, r3
   801e6:	d028      	beq.n	8023a <usart_serial_putchar+0x6e>
	if (USART3 == p_usart) {
   801e8:	4b1c      	ldr	r3, [pc, #112]	; (8025c <usart_serial_putchar+0x90>)
   801ea:	4298      	cmp	r0, r3
   801ec:	d001      	beq.n	801f2 <usart_serial_putchar+0x26>
	return 0;
   801ee:	2000      	movs	r0, #0
}
   801f0:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   801f2:	4604      	mov	r4, r0
   801f4:	4e1a      	ldr	r6, [pc, #104]	; (80260 <usart_serial_putchar+0x94>)
   801f6:	4629      	mov	r1, r5
   801f8:	4620      	mov	r0, r4
   801fa:	47b0      	blx	r6
   801fc:	2800      	cmp	r0, #0
   801fe:	d1fa      	bne.n	801f6 <usart_serial_putchar+0x2a>
		return 1;
   80200:	2001      	movs	r0, #1
   80202:	bd70      	pop	{r4, r5, r6, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
   80204:	4604      	mov	r4, r0
   80206:	4e17      	ldr	r6, [pc, #92]	; (80264 <usart_serial_putchar+0x98>)
   80208:	4629      	mov	r1, r5
   8020a:	4620      	mov	r0, r4
   8020c:	47b0      	blx	r6
   8020e:	2800      	cmp	r0, #0
   80210:	d1fa      	bne.n	80208 <usart_serial_putchar+0x3c>
		return 1;
   80212:	2001      	movs	r0, #1
   80214:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80216:	4604      	mov	r4, r0
   80218:	4e11      	ldr	r6, [pc, #68]	; (80260 <usart_serial_putchar+0x94>)
   8021a:	4629      	mov	r1, r5
   8021c:	4620      	mov	r0, r4
   8021e:	47b0      	blx	r6
   80220:	2800      	cmp	r0, #0
   80222:	d1fa      	bne.n	8021a <usart_serial_putchar+0x4e>
		return 1;
   80224:	2001      	movs	r0, #1
   80226:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   80228:	4604      	mov	r4, r0
   8022a:	4e0d      	ldr	r6, [pc, #52]	; (80260 <usart_serial_putchar+0x94>)
   8022c:	4629      	mov	r1, r5
   8022e:	4620      	mov	r0, r4
   80230:	47b0      	blx	r6
   80232:	2800      	cmp	r0, #0
   80234:	d1fa      	bne.n	8022c <usart_serial_putchar+0x60>
		return 1;
   80236:	2001      	movs	r0, #1
   80238:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
   8023a:	4604      	mov	r4, r0
   8023c:	4e08      	ldr	r6, [pc, #32]	; (80260 <usart_serial_putchar+0x94>)
   8023e:	4629      	mov	r1, r5
   80240:	4620      	mov	r0, r4
   80242:	47b0      	blx	r6
   80244:	2800      	cmp	r0, #0
   80246:	d1fa      	bne.n	8023e <usart_serial_putchar+0x72>
   80248:	e7da      	b.n	80200 <usart_serial_putchar+0x34>
   8024a:	bf00      	nop
   8024c:	400e0600 	.word	0x400e0600
   80250:	40090000 	.word	0x40090000
   80254:	40094000 	.word	0x40094000
   80258:	40098000 	.word	0x40098000
   8025c:	4009c000 	.word	0x4009c000
   80260:	00080ad5 	.word	0x00080ad5
   80264:	00083635 	.word	0x00083635

00080268 <main>:
static void configure_console(void);

/*! \brief Main function. Execution starts here.
 */
int main(void)
{
   80268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8026c:	b08b      	sub	sp, #44	; 0x2c
  uint32_t serial_number[4];

  // Read Device-ID from SAM3U. Do this before enabling interrupts etc.
  flash_read_unique_id(serial_number, sizeof(serial_number));
   8026e:	2110      	movs	r1, #16
   80270:	4b8c      	ldr	r3, [pc, #560]	; (804a4 <main+0x23c>)
   80272:	a806      	add	r0, sp, #24
   80274:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   80276:	f8df 92b8 	ldr.w	r9, [pc, #696]	; 80530 <main+0x2c8>
   8027a:	2008      	movs	r0, #8
   8027c:	47c8      	blx	r9
	uart_settings.ul_baudrate = opt->baudrate;
   8027e:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
	uart_settings.ul_mode = opt->paritytype;
   80282:	f44f 6000 	mov.w	r0, #2048	; 0x800
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
   80286:	4c88      	ldr	r4, [pc, #544]	; (804a8 <main+0x240>)
   80288:	4d88      	ldr	r5, [pc, #544]	; (804ac <main+0x244>)
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8028a:	4a89      	ldr	r2, [pc, #548]	; (804b0 <main+0x248>)
   8028c:	4989      	ldr	r1, [pc, #548]	; (804b4 <main+0x24c>)
	uart_settings.ul_baudrate = opt->baudrate;
   8028e:	9304      	str	r3, [sp, #16]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80290:	4e89      	ldr	r6, [pc, #548]	; (804b8 <main+0x250>)
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80292:	4b8a      	ldr	r3, [pc, #552]	; (804bc <main+0x254>)
   80294:	4f8a      	ldr	r7, [pc, #552]	; (804c0 <main+0x258>)
	uart_settings.ul_mode = opt->paritytype;
   80296:	9005      	str	r0, [sp, #20]
	stdio_base = (void *)usart;
   80298:	602c      	str	r4, [r5, #0]
   8029a:	2008      	movs	r0, #8
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   8029c:	4d89      	ldr	r5, [pc, #548]	; (804c4 <main+0x25c>)
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8029e:	6011      	str	r1, [r2, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   802a0:	9303      	str	r3, [sp, #12]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   802a2:	6037      	str	r7, [r6, #0]
   802a4:	47c8      	blx	r9
		uart_init((Uart*)p_usart, &uart_settings);
   802a6:	a903      	add	r1, sp, #12
   802a8:	4620      	mov	r0, r4
   802aa:	4b87      	ldr	r3, [pc, #540]	; (804c8 <main+0x260>)
   802ac:	4798      	blx	r3
	setbuf(stdout, NULL);
   802ae:	682b      	ldr	r3, [r5, #0]
   802b0:	4c86      	ldr	r4, [pc, #536]	; (804cc <main+0x264>)
   802b2:	6898      	ldr	r0, [r3, #8]
   802b4:	2100      	movs	r1, #0
   802b6:	47a0      	blx	r4
	setbuf(stdin, NULL);
   802b8:	682b      	ldr	r3, [r5, #0]
   802ba:	2100      	movs	r1, #0
   802bc:	6858      	ldr	r0, [r3, #4]
   802be:	47a0      	blx	r4

  configure_console();

  irq_initialize_vectors();
  cpu_irq_enable();
   802c0:	2201      	movs	r2, #1
   802c2:	4c83      	ldr	r4, [pc, #524]	; (804d0 <main+0x268>)
   802c4:	7022      	strb	r2, [r4, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   802c6:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   802ca:	b662      	cpsie	i
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	uint8_t i;

	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
		sleepmgr_locks[i] = 0;
   802cc:	2300      	movs	r3, #0
   802ce:	f8df a220 	ldr.w	sl, [pc, #544]	; 804f0 <main+0x288>
   802d2:	4e80      	ldr	r6, [pc, #512]	; (804d4 <main+0x26c>)
   802d4:	4657      	mov	r7, sl

  // Initialize the sleep manager
  sleepmgr_init();
#if !SAMD21 && !SAMR21
  sysclk_init();
   802d6:	4980      	ldr	r1, [pc, #512]	; (804d8 <main+0x270>)
	}
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
   802d8:	7172      	strb	r2, [r6, #5]
		sleepmgr_locks[i] = 0;
   802da:	7033      	strb	r3, [r6, #0]
   802dc:	7073      	strb	r3, [r6, #1]
   802de:	70b3      	strb	r3, [r6, #2]
   802e0:	70f3      	strb	r3, [r6, #3]
   802e2:	7133      	strb	r3, [r6, #4]
   802e4:	4788      	blx	r1
  board_init();
   802e6:	4b7d      	ldr	r3, [pc, #500]	; (804dc <main+0x274>)
   802e8:	4798      	blx	r3
  system_init();
#endif

  //Convert serial number to ASCII for USB Serial number
  for(unsigned int i = 0; i < 4; i++){
    sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);
   802ea:	f8df b248 	ldr.w	fp, [pc, #584]	; 80534 <main+0x2cc>
   802ee:	4b7c      	ldr	r3, [pc, #496]	; (804e0 <main+0x278>)
   802f0:	ad06      	add	r5, sp, #24
   802f2:	f10a 0820 	add.w	r8, sl, #32
   802f6:	4638      	mov	r0, r7
   802f8:	f855 2b04 	ldr.w	r2, [r5], #4
   802fc:	4659      	mov	r1, fp
   802fe:	3708      	adds	r7, #8
   80300:	9301      	str	r3, [sp, #4]
   80302:	4798      	blx	r3
  for(unsigned int i = 0; i < 4; i++){
   80304:	4547      	cmp	r7, r8
   80306:	9b01      	ldr	r3, [sp, #4]
   80308:	d1f5      	bne.n	802f6 <main+0x8e>
  }
  usb_serial_number[32] = 0;
   8030a:	2500      	movs	r5, #0

  printf("ChipSHOUTER CW321 Ballistic Gel Online. Firmware build: %s/%s\n", __TIME__, __DATE__);
   8030c:	4a75      	ldr	r2, [pc, #468]	; (804e4 <main+0x27c>)
   8030e:	f8df 8228 	ldr.w	r8, [pc, #552]	; 80538 <main+0x2d0>
   80312:	4975      	ldr	r1, [pc, #468]	; (804e8 <main+0x280>)
   80314:	4875      	ldr	r0, [pc, #468]	; (804ec <main+0x284>)
  usb_serial_number[32] = 0;
   80316:	f88a 5020 	strb.w	r5, [sl, #32]
  printf("ChipSHOUTER CW321 Ballistic Gel Online. Firmware build: %s/%s\n", __TIME__, __DATE__);
   8031a:	47c0      	blx	r8
  printf("Serial number: %s\n", usb_serial_number);
   8031c:	4974      	ldr	r1, [pc, #464]	; (804f0 <main+0x288>)
   8031e:	4875      	ldr	r0, [pc, #468]	; (804f4 <main+0x28c>)
   80320:	47c0      	blx	r8


  /* Enable SMC */
  pmc_enable_periph_clk(ID_SMC);
   80322:	2009      	movs	r0, #9
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   80324:	4f74      	ldr	r7, [pc, #464]	; (804f8 <main+0x290>)
  pmc_enable_periph_clk(ID_SMC);
   80326:	47c8      	blx	r9
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   80328:	4974      	ldr	r1, [pc, #464]	; (804fc <main+0x294>)
   8032a:	2029      	movs	r0, #41	; 0x29
   8032c:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAG1);
   8032e:	4973      	ldr	r1, [pc, #460]	; (804fc <main+0x294>)
   80330:	202a      	movs	r0, #42	; 0x2a
   80332:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAG1);
   80334:	4971      	ldr	r1, [pc, #452]	; (804fc <main+0x294>)
   80336:	202b      	movs	r0, #43	; 0x2b
   80338:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAG1);
   8033a:	4970      	ldr	r1, [pc, #448]	; (804fc <main+0x294>)
   8033c:	202c      	movs	r0, #44	; 0x2c
   8033e:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAG1);
   80340:	496e      	ldr	r1, [pc, #440]	; (804fc <main+0x294>)
   80342:	202d      	movs	r0, #45	; 0x2d
   80344:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAG1);
   80346:	496d      	ldr	r1, [pc, #436]	; (804fc <main+0x294>)
   80348:	202e      	movs	r0, #46	; 0x2e
   8034a:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAG1);
   8034c:	496b      	ldr	r1, [pc, #428]	; (804fc <main+0x294>)
   8034e:	202f      	movs	r0, #47	; 0x2f
   80350:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAG1);
   80352:	496a      	ldr	r1, [pc, #424]	; (804fc <main+0x294>)
   80354:	2030      	movs	r0, #48	; 0x30
   80356:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D8, PIN_EBI_DATA_BUS_FLAG1);
   80358:	4968      	ldr	r1, [pc, #416]	; (804fc <main+0x294>)
   8035a:	2039      	movs	r0, #57	; 0x39
   8035c:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D9, PIN_EBI_DATA_BUS_FLAG1);
   8035e:	4967      	ldr	r1, [pc, #412]	; (804fc <main+0x294>)
   80360:	203a      	movs	r0, #58	; 0x3a
   80362:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D10, PIN_EBI_DATA_BUS_FLAG1);
   80364:	4965      	ldr	r1, [pc, #404]	; (804fc <main+0x294>)
   80366:	203b      	movs	r0, #59	; 0x3b
   80368:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D11, PIN_EBI_DATA_BUS_FLAG1);
   8036a:	4964      	ldr	r1, [pc, #400]	; (804fc <main+0x294>)
   8036c:	203c      	movs	r0, #60	; 0x3c
   8036e:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D12, PIN_EBI_DATA_BUS_FLAG1);
   80370:	4962      	ldr	r1, [pc, #392]	; (804fc <main+0x294>)
   80372:	203d      	movs	r0, #61	; 0x3d
   80374:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D13, PIN_EBI_DATA_BUS_FLAG1);
   80376:	4961      	ldr	r1, [pc, #388]	; (804fc <main+0x294>)
   80378:	203e      	movs	r0, #62	; 0x3e
   8037a:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D14, PIN_EBI_DATA_BUS_FLAG1);
   8037c:	495f      	ldr	r1, [pc, #380]	; (804fc <main+0x294>)
   8037e:	203f      	movs	r0, #63	; 0x3f
   80380:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_DATA_BUS_D15, PIN_EBI_DATA_BUS_FLAG2);
   80382:	495f      	ldr	r1, [pc, #380]	; (80500 <main+0x298>)
   80384:	2026      	movs	r0, #38	; 0x26
   80386:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
   80388:	495c      	ldr	r1, [pc, #368]	; (804fc <main+0x294>)
   8038a:	2033      	movs	r0, #51	; 0x33
   8038c:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
   8038e:	495b      	ldr	r1, [pc, #364]	; (804fc <main+0x294>)
   80390:	2037      	movs	r0, #55	; 0x37
   80392:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
   80394:	4959      	ldr	r1, [pc, #356]	; (804fc <main+0x294>)
   80396:	2034      	movs	r0, #52	; 0x34
   80398:	47b8      	blx	r7

  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS0, PIN_EBI_ADDR_BUS_FLAG1);
   8039a:	4959      	ldr	r1, [pc, #356]	; (80500 <main+0x298>)
   8039c:	2027      	movs	r0, #39	; 0x27
   8039e:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS1, PIN_EBI_ADDR_BUS_FLAG2);
   803a0:	4956      	ldr	r1, [pc, #344]	; (804fc <main+0x294>)
   803a2:	204f      	movs	r0, #79	; 0x4f
   803a4:	47b8      	blx	r7

  gpio_configure_pin(PIN_EBI_ADDR_BUS_A1, PIN_EBI_ADDR_BUS_FLAG1);
   803a6:	4956      	ldr	r1, [pc, #344]	; (80500 <main+0x298>)
   803a8:	2028      	movs	r0, #40	; 0x28
   803aa:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A2, PIN_EBI_ADDR_BUS_FLAG2);
   803ac:	4953      	ldr	r1, [pc, #332]	; (804fc <main+0x294>)
   803ae:	2040      	movs	r0, #64	; 0x40
   803b0:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A3, PIN_EBI_ADDR_BUS_FLAG2);
   803b2:	4952      	ldr	r1, [pc, #328]	; (804fc <main+0x294>)
   803b4:	2041      	movs	r0, #65	; 0x41
   803b6:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A4, PIN_EBI_ADDR_BUS_FLAG2);
   803b8:	4950      	ldr	r1, [pc, #320]	; (804fc <main+0x294>)
   803ba:	2042      	movs	r0, #66	; 0x42
   803bc:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A5, PIN_EBI_ADDR_BUS_FLAG2);
   803be:	494f      	ldr	r1, [pc, #316]	; (804fc <main+0x294>)
   803c0:	2043      	movs	r0, #67	; 0x43
   803c2:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A6, PIN_EBI_ADDR_BUS_FLAG2);
   803c4:	494d      	ldr	r1, [pc, #308]	; (804fc <main+0x294>)
   803c6:	2044      	movs	r0, #68	; 0x44
   803c8:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A7, PIN_EBI_ADDR_BUS_FLAG2);
   803ca:	494c      	ldr	r1, [pc, #304]	; (804fc <main+0x294>)
   803cc:	2045      	movs	r0, #69	; 0x45
   803ce:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A8, PIN_EBI_ADDR_BUS_FLAG2);
   803d0:	494a      	ldr	r1, [pc, #296]	; (804fc <main+0x294>)
   803d2:	2046      	movs	r0, #70	; 0x46
   803d4:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A9, PIN_EBI_ADDR_BUS_FLAG2);
   803d6:	4949      	ldr	r1, [pc, #292]	; (804fc <main+0x294>)
   803d8:	2047      	movs	r0, #71	; 0x47
   803da:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A10, PIN_EBI_ADDR_BUS_FLAG2);
   803dc:	4947      	ldr	r1, [pc, #284]	; (804fc <main+0x294>)
   803de:	2048      	movs	r0, #72	; 0x48
   803e0:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A11, PIN_EBI_ADDR_BUS_FLAG2);
   803e2:	4946      	ldr	r1, [pc, #280]	; (804fc <main+0x294>)
   803e4:	2049      	movs	r0, #73	; 0x49
   803e6:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A12, PIN_EBI_ADDR_BUS_FLAG2);
   803e8:	4944      	ldr	r1, [pc, #272]	; (804fc <main+0x294>)
   803ea:	204a      	movs	r0, #74	; 0x4a
   803ec:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A13, PIN_EBI_ADDR_BUS_FLAG2);
   803ee:	4943      	ldr	r1, [pc, #268]	; (804fc <main+0x294>)
   803f0:	204b      	movs	r0, #75	; 0x4b
   803f2:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A14, PIN_EBI_ADDR_BUS_FLAG2);
   803f4:	4941      	ldr	r1, [pc, #260]	; (804fc <main+0x294>)
   803f6:	2054      	movs	r0, #84	; 0x54
   803f8:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A15, PIN_EBI_ADDR_BUS_FLAG2);
   803fa:	4940      	ldr	r1, [pc, #256]	; (804fc <main+0x294>)
   803fc:	2055      	movs	r0, #85	; 0x55
   803fe:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A16, PIN_EBI_ADDR_BUS_FLAG2);
   80400:	493e      	ldr	r1, [pc, #248]	; (804fc <main+0x294>)
   80402:	2056      	movs	r0, #86	; 0x56
   80404:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A17, PIN_EBI_ADDR_BUS_FLAG2);
   80406:	493d      	ldr	r1, [pc, #244]	; (804fc <main+0x294>)
   80408:	2057      	movs	r0, #87	; 0x57
   8040a:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A18, PIN_EBI_ADDR_BUS_FLAG2);
   8040c:	493b      	ldr	r1, [pc, #236]	; (804fc <main+0x294>)
   8040e:	2058      	movs	r0, #88	; 0x58
   80410:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A19, PIN_EBI_ADDR_BUS_FLAG2);
   80412:	493a      	ldr	r1, [pc, #232]	; (804fc <main+0x294>)
   80414:	2059      	movs	r0, #89	; 0x59
   80416:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A20, PIN_EBI_ADDR_BUS_FLAG2);
   80418:	4938      	ldr	r1, [pc, #224]	; (804fc <main+0x294>)
   8041a:	205a      	movs	r0, #90	; 0x5a
   8041c:	47b8      	blx	r7
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A21, PIN_EBI_ADDR_BUS_FLAG2);
   8041e:	4937      	ldr	r1, [pc, #220]	; (804fc <main+0x294>)
   80420:	2035      	movs	r0, #53	; 0x35
   80422:	47b8      	blx	r7

  /* Configure EBI I/O for PSRAM connection */
  printf("Setting up SRAM Communication\n");
   80424:	4837      	ldr	r0, [pc, #220]	; (80504 <main+0x29c>)
   80426:	47c0      	blx	r8
  | SMC_CYCLE_NRD_CYCLE(8));
  smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
  | SMC_MODE_DBW_BIT_16);
  */

    smc_set_setup_timing(SMC, 0, SMC_SETUP_NWE_SETUP(0)
   80428:	4629      	mov	r1, r5
   8042a:	4a37      	ldr	r2, [pc, #220]	; (80508 <main+0x2a0>)
   8042c:	4837      	ldr	r0, [pc, #220]	; (8050c <main+0x2a4>)
   8042e:	4b38      	ldr	r3, [pc, #224]	; (80510 <main+0x2a8>)
   80430:	4798      	blx	r3
    | SMC_SETUP_NCS_WR_SETUP(4)
    | SMC_SETUP_NRD_SETUP(4)
    | SMC_SETUP_NCS_RD_SETUP(4));
    smc_set_pulse_timing(SMC, 0, SMC_PULSE_NWE_PULSE(12)
   80432:	4629      	mov	r1, r5
   80434:	f04f 320c 	mov.w	r2, #202116108	; 0xc0c0c0c
   80438:	4834      	ldr	r0, [pc, #208]	; (8050c <main+0x2a4>)
   8043a:	4b36      	ldr	r3, [pc, #216]	; (80514 <main+0x2ac>)
   8043c:	4798      	blx	r3
    | SMC_PULSE_NCS_WR_PULSE(12)
    | SMC_PULSE_NRD_PULSE(12)
    | SMC_PULSE_NCS_RD_PULSE(12));
    smc_set_cycle_timing(SMC, 0, SMC_CYCLE_NWE_CYCLE(16)
   8043e:	4629      	mov	r1, r5
   80440:	f04f 1210 	mov.w	r2, #1048592	; 0x100010
   80444:	4831      	ldr	r0, [pc, #196]	; (8050c <main+0x2a4>)
   80446:	4b34      	ldr	r3, [pc, #208]	; (80518 <main+0x2b0>)
   80448:	4798      	blx	r3
    | SMC_CYCLE_NRD_CYCLE(16));
    smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
   8044a:	4629      	mov	r1, r5
   8044c:	f241 0203 	movw	r2, #4099	; 0x1003
   80450:	482e      	ldr	r0, [pc, #184]	; (8050c <main+0x2a4>)
   80452:	4b32      	ldr	r3, [pc, #200]	; (8051c <main+0x2b4>)
   80454:	4798      	blx	r3
  /*
  osc_enable(OSC_MAINCK_XTAL);
      osc_wait_ready(OSC_MAINCK_XTAL);
      pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
  */
  ui_init();
   80456:	4b32      	ldr	r3, [pc, #200]	; (80520 <main+0x2b8>)
   80458:	4798      	blx	r3

  // Start USB stack to authorize VBus monitoring
  udc_start();
   8045a:	4b32      	ldr	r3, [pc, #200]	; (80524 <main+0x2bc>)
   8045c:	4798      	blx	r3
  //genclk_enable_config(GENCLK_PCK_1, GENCLK_PCK_SRC_MCK, GENCLK_PCK_PRES_1);

  //Following is 60MHz version
  //genclk_enable_config(GENCLK_PCK_0, GENCLK_PCK_SRC_PLLBCK, GENCLK_PCK_PRES_4);

  printf("Event Loop Entered, waiting...\n");
   8045e:	4832      	ldr	r0, [pc, #200]	; (80528 <main+0x2c0>)
   80460:	47c0      	blx	r8

	// Find the deepest allowable sleep mode
	sleep_mode = sleepmgr_get_sleep_mode();
	// Return right away if first mode (ACTIVE) is locked.
	if (sleep_mode==SLEEPMGR_ACTIVE) {
		cpu_irq_enable();
   80462:	f04f 0801 	mov.w	r8, #1
   80466:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 8053c <main+0x2d4>
   8046a:	4f30      	ldr	r7, [pc, #192]	; (8052c <main+0x2c4>)
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i");
   8046c:	b672      	cpsid	i
   8046e:	f3bf 8f5f 	dmb	sy
	while (!(*lock_ptr)) {
   80472:	7830      	ldrb	r0, [r6, #0]
	cpu_irq_disable();
   80474:	7025      	strb	r5, [r4, #0]
	while (!(*lock_ptr)) {
   80476:	b938      	cbnz	r0, 80488 <main+0x220>
   80478:	4b16      	ldr	r3, [pc, #88]	; (804d4 <main+0x26c>)
   8047a:	f813 2f01 	ldrb.w	r2, [r3, #1]!
		sleep_mode = (enum sleepmgr_mode)(sleep_mode + 1);
   8047e:	3001      	adds	r0, #1
   80480:	b2c0      	uxtb	r0, r0
	while (!(*lock_ptr)) {
   80482:	2a00      	cmp	r2, #0
   80484:	d0f9      	beq.n	8047a <main+0x212>
	if (sleep_mode==SLEEPMGR_ACTIVE) {
   80486:	b930      	cbnz	r0, 80496 <main+0x22e>
		cpu_irq_enable();
   80488:	f884 8000 	strb.w	r8, [r4]
   8048c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   80490:	b662      	cpsie	i

  // The main loop manages only the power mode
  // because the USB management is done by interrupt
  while (true) {
    sleepmgr_enter_sleep();
    process_events();
   80492:	47b8      	blx	r7
    sleepmgr_enter_sleep();
   80494:	e7ea      	b.n	8046c <main+0x204>
  __ASM volatile ("cpsid i");
   80496:	b672      	cpsid	i
   80498:	f3bf 8f5f 	dmb	sy

static inline void sleepmgr_sleep(const enum sleepmgr_mode sleep_mode)
{
	Assert(sleep_mode != SLEEPMGR_ACTIVE);
#ifdef CONFIG_SLEEPMGR_ENABLE
	cpu_irq_disable();
   8049c:	7025      	strb	r5, [r4, #0]

	// Atomically enable the global interrupts and enter the sleep mode.
	pmc_sleep(sleep_mode);
   8049e:	47c8      	blx	r9
   804a0:	e7f7      	b.n	80492 <main+0x22a>
   804a2:	bf00      	nop
   804a4:	00080a89 	.word	0x00080a89
   804a8:	400e0600 	.word	0x400e0600
   804ac:	200035a8 	.word	0x200035a8
   804b0:	200035ac 	.word	0x200035ac
   804b4:	00080129 	.word	0x00080129
   804b8:	200035a4 	.word	0x200035a4
   804bc:	05b8d800 	.word	0x05b8d800
   804c0:	000801cd 	.word	0x000801cd
   804c4:	200002d8 	.word	0x200002d8
   804c8:	000835f9 	.word	0x000835f9
   804cc:	00083ac1 	.word	0x00083ac1
   804d0:	20000244 	.word	0x20000244
   804d4:	200035b0 	.word	0x200035b0
   804d8:	00082519 	.word	0x00082519
   804dc:	00083655 	.word	0x00083655
   804e0:	00083c61 	.word	0x00083c61
   804e4:	00089c94 	.word	0x00089c94
   804e8:	00089ca0 	.word	0x00089ca0
   804ec:	00089cac 	.word	0x00089cac
   804f0:	20000190 	.word	0x20000190
   804f4:	00089cec 	.word	0x00089cec
   804f8:	0008287d 	.word	0x0008287d
   804fc:	08000001 	.word	0x08000001
   80500:	10000001 	.word	0x10000001
   80504:	00089d00 	.word	0x00089d00
   80508:	04040400 	.word	0x04040400
   8050c:	400e0000 	.word	0x400e0000
   80510:	00080b19 	.word	0x00080b19
   80514:	00080b25 	.word	0x00080b25
   80518:	00080b31 	.word	0x00080b31
   8051c:	00080b3d 	.word	0x00080b3d
   80520:	0008380d 	.word	0x0008380d
   80524:	00082c05 	.word	0x00082c05
   80528:	00089d20 	.word	0x00089d20
   8052c:	00080db1 	.word	0x00080db1
   80530:	000826f5 	.word	0x000826f5
   80534:	00089c8c 	.word	0x00089c8c
   80538:	00083911 	.word	0x00083911
   8053c:	00083315 	.word	0x00083315

00080540 <do_task>:

/*
Regular FPGA task to check status and print to LCD screen.
*/
void do_task(void)
{
   80540:	4770      	bx	lr
   80542:	bf00      	nop

00080544 <ctrl_testmem>:
static uint8_t buffer[9000];
static uint16_t found_err[] = {0};
volatile static uint8_t rng_done = 0;
uint8_t testmem_sent_back = 1;
void ctrl_testmem(void)
{
   80544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80548:	4a44      	ldr	r2, [pc, #272]	; (8065c <ctrl_testmem+0x118>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
     if (address > (sram_size - buflen) )
   8054a:	4b45      	ldr	r3, [pc, #276]	; (80660 <ctrl_testmem+0x11c>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8054c:	6814      	ldr	r4, [r2, #0]
     if (address > (sram_size - buflen) )
   8054e:	681b      	ldr	r3, [r3, #0]
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80550:	6855      	ldr	r5, [r2, #4]
     if (address > (sram_size - buflen) )
   80552:	1b1b      	subs	r3, r3, r4
   80554:	429d      	cmp	r5, r3
{
   80556:	b083      	sub	sp, #12
     if (address > (sram_size - buflen) )
   80558:	d803      	bhi.n	80562 <ctrl_testmem+0x1e>
          return;
     int i =0;
     if (buflen >= sizeof(buffer))
   8055a:	f242 3327 	movw	r3, #8999	; 0x2327
   8055e:	429c      	cmp	r4, r3
   80560:	d902      	bls.n	80568 <ctrl_testmem+0x24>
          }
     }

     ctrlmemread_buf = found_err;
     ctrlmemread_size = 4;
}
   80562:	b003      	add	sp, #12
   80564:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
     LED_On(LED2_GPIO);
   80568:	204c      	movs	r0, #76	; 0x4c
   8056a:	4b3e      	ldr	r3, [pc, #248]	; (80664 <ctrl_testmem+0x120>)
   8056c:	4798      	blx	r3
     if (!address) {
   8056e:	2d00      	cmp	r5, #0
   80570:	d06a      	beq.n	80648 <ctrl_testmem+0x104>
   80572:	f8df c10c 	ldr.w	ip, [pc, #268]	; 80680 <ctrl_testmem+0x13c>
   80576:	f8bc 6002 	ldrh.w	r6, [ip, #2]
   8057a:	3601      	adds	r6, #1
   8057c:	b2b6      	uxth	r6, r6
     found_err[0] = 0;
   8057e:	2300      	movs	r3, #0
     for (i = 0; i < buflen / 4; i++) {
   80580:	08a4      	lsrs	r4, r4, #2
     found_err[1]++;
   80582:	f8ac 6002 	strh.w	r6, [ip, #2]
     found_err[0] = 0;
   80586:	f8ac 3000 	strh.w	r3, [ip]
     for (i = 0; i < buflen / 4; i++) {
   8058a:	d054      	beq.n	80636 <ctrl_testmem+0xf2>
   8058c:	4b36      	ldr	r3, [pc, #216]	; (80668 <ctrl_testmem+0x124>)
   8058e:	eb05 0484 	add.w	r4, r5, r4, lsl #2
   80592:	681b      	ldr	r3, [r3, #0]
   80594:	4935      	ldr	r1, [pc, #212]	; (8066c <ctrl_testmem+0x128>)
   80596:	195a      	adds	r2, r3, r5
   80598:	4423      	add	r3, r4
   8059a:	9301      	str	r3, [sp, #4]
   8059c:	4b34      	ldr	r3, [pc, #208]	; (80670 <ctrl_testmem+0x12c>)
                    found_err[0] = 1;
   8059e:	f04f 0901 	mov.w	r9, #1
   805a2:	e893 0420 	ldmia.w	r3, {r5, sl}
   805a6:	68d8      	ldr	r0, [r3, #12]
   805a8:	f8d3 8008 	ldr.w	r8, [r3, #8]
   805ac:	e002      	b.n	805b4 <ctrl_testmem+0x70>
     for (i = 0; i < buflen / 4; i++) {
   805ae:	46d0      	mov	r8, sl
   805b0:	46aa      	mov	sl, r5
     state[2] = state[1];
     s = state[0];
     state[1] = state[0];

     t ^= s;
     t ^= s >> 19;
   805b2:	461d      	mov	r5, r3
     t ^= t << 11;
   805b4:	ea80 20c0 	eor.w	r0, r0, r0, lsl #11
   805b8:	ea80 43d5 	eor.w	r3, r0, r5, lsr #19
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805bc:	7816      	ldrb	r6, [r2, #0]
   805be:	406b      	eors	r3, r5
     t ^= s >> 19;
   805c0:	ea83 2310 	eor.w	r3, r3, r0, lsr #8
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805c4:	b2dc      	uxtb	r4, r3
   805c6:	b2f0      	uxtb	r0, r6
   805c8:	ea84 0b00 	eor.w	fp, r4, r0
               if (buffer[i * 4 + j]) {
   805cc:	4284      	cmp	r4, r0
                    found_err[0] = 1;
   805ce:	bf18      	it	ne
   805d0:	f8ac 9000 	strhne.w	r9, [ip]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805d4:	f881 b000 	strb.w	fp, [r1]
   805d8:	7854      	ldrb	r4, [r2, #1]
   805da:	f3c3 2e07 	ubfx	lr, r3, #8, #8
   805de:	b2e4      	uxtb	r4, r4
               if (buffer[i * 4 + j]) {
   805e0:	45a6      	cmp	lr, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805e2:	ea8e 0b04 	eor.w	fp, lr, r4
                    found_err[0] = 1;
   805e6:	bf18      	it	ne
   805e8:	f8ac 9000 	strhne.w	r9, [ip]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805ec:	f881 b001 	strb.w	fp, [r1, #1]
   805f0:	7894      	ldrb	r4, [r2, #2]
   805f2:	f3c3 4707 	ubfx	r7, r3, #16, #8
   805f6:	b2e4      	uxtb	r4, r4
               if (buffer[i * 4 + j]) {
   805f8:	42a7      	cmp	r7, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   805fa:	ea87 0e04 	eor.w	lr, r7, r4
                    found_err[0] = 1;
   805fe:	bf18      	it	ne
   80600:	f8ac 9000 	strhne.w	r9, [ip]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80604:	f881 e002 	strb.w	lr, [r1, #2]
   80608:	78d4      	ldrb	r4, [r2, #3]
   8060a:	0e1e      	lsrs	r6, r3, #24
   8060c:	b2e4      	uxtb	r4, r4
               if (buffer[i * 4 + j]) {
   8060e:	42a6      	cmp	r6, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80610:	ea86 0704 	eor.w	r7, r6, r4
     for (i = 0; i < buflen / 4; i++) {
   80614:	9c01      	ldr	r4, [sp, #4]
   80616:	f102 0204 	add.w	r2, r2, #4
                    found_err[0] = 1;
   8061a:	bf18      	it	ne
   8061c:	f8ac 9000 	strhne.w	r9, [ip]
     for (i = 0; i < buflen / 4; i++) {
   80620:	42a2      	cmp	r2, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80622:	70cf      	strb	r7, [r1, #3]
   80624:	4640      	mov	r0, r8
   80626:	f101 0104 	add.w	r1, r1, #4
     for (i = 0; i < buflen / 4; i++) {
   8062a:	d1c0      	bne.n	805ae <ctrl_testmem+0x6a>
   8062c:	4a10      	ldr	r2, [pc, #64]	; (80670 <ctrl_testmem+0x12c>)
   8062e:	e882 0428 	stmia.w	r2, {r3, r5, sl}
   80632:	f8c2 800c 	str.w	r8, [r2, #12]
     ctrlmemread_size = 4;
   80636:	2104      	movs	r1, #4
   80638:	4a0e      	ldr	r2, [pc, #56]	; (80674 <ctrl_testmem+0x130>)
     ctrlmemread_buf = found_err;
   8063a:	4b0f      	ldr	r3, [pc, #60]	; (80678 <ctrl_testmem+0x134>)
     ctrlmemread_size = 4;
   8063c:	6011      	str	r1, [r2, #0]
     ctrlmemread_buf = found_err;
   8063e:	f8c3 c000 	str.w	ip, [r3]
}
   80642:	b003      	add	sp, #12
   80644:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   80648:	4b0c      	ldr	r3, [pc, #48]	; (8067c <ctrl_testmem+0x138>)
   8064a:	4f09      	ldr	r7, [pc, #36]	; (80670 <ctrl_testmem+0x12c>)
   8064c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
     if (!address) {
   8064e:	2601      	movs	r6, #1
   80650:	e887 000f 	stmia.w	r7, {r0, r1, r2, r3}
   80654:	f8df c028 	ldr.w	ip, [pc, #40]	; 80680 <ctrl_testmem+0x13c>
   80658:	e791      	b.n	8057e <ctrl_testmem+0x3a>
   8065a:	bf00      	nop
   8065c:	20002fd4 	.word	0x20002fd4
   80660:	200001b4 	.word	0x200001b4
   80664:	00082439 	.word	0x00082439
   80668:	200001b8 	.word	0x200001b8
   8066c:	20000ca8 	.word	0x20000ca8
   80670:	20003474 	.word	0x20003474
   80674:	20003018 	.word	0x20003018
   80678:	20003014 	.word	0x20003014
   8067c:	20003460 	.word	0x20003460
   80680:	2000301c 	.word	0x2000301c

00080684 <ctrl_readmem_bulk>:
     if (buflen >= sizeof(buffer))
   80684:	f242 3227 	movw	r2, #8999	; 0x2327
void ctrl_readmem_bulk(void){
   80688:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8068a:	4b10      	ldr	r3, [pc, #64]	; (806cc <ctrl_readmem_bulk+0x48>)
   8068c:	681c      	ldr	r4, [r3, #0]
     if (buflen >= sizeof(buffer))
   8068e:	4294      	cmp	r4, r2
   80690:	d81b      	bhi.n	806ca <ctrl_readmem_bulk+0x46>
     if (seeded) {
   80692:	4a0f      	ldr	r2, [pc, #60]	; (806d0 <ctrl_readmem_bulk+0x4c>)
   80694:	6812      	ldr	r2, [r2, #0]
   80696:	b972      	cbnz	r2, 806b6 <ctrl_readmem_bulk+0x32>
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80698:	685d      	ldr	r5, [r3, #4]
     FPGA_setlock(fpga_blockin);
   8069a:	2002      	movs	r0, #2
   8069c:	4b0d      	ldr	r3, [pc, #52]	; (806d4 <ctrl_readmem_bulk+0x50>)
   8069e:	4798      	blx	r3
     LED_On(LED2_GPIO);
   806a0:	204c      	movs	r0, #76	; 0x4c
   806a2:	4b0d      	ldr	r3, [pc, #52]	; (806d8 <ctrl_readmem_bulk+0x54>)
   806a4:	4798      	blx	r3
     udi_vendor_bulk_in_run(
   806a6:	f105 40c0 	add.w	r0, r5, #1610612736	; 0x60000000
   806aa:	4621      	mov	r1, r4
}
   806ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     udi_vendor_bulk_in_run(
   806b0:	4a0a      	ldr	r2, [pc, #40]	; (806dc <ctrl_readmem_bulk+0x58>)
   806b2:	4b0b      	ldr	r3, [pc, #44]	; (806e0 <ctrl_readmem_bulk+0x5c>)
   806b4:	4718      	bx	r3
          LED_On(LED2_GPIO);
   806b6:	204c      	movs	r0, #76	; 0x4c
   806b8:	4b07      	ldr	r3, [pc, #28]	; (806d8 <ctrl_readmem_bulk+0x54>)
   806ba:	4798      	blx	r3
          udi_vendor_bulk_in_run(
   806bc:	4621      	mov	r1, r4
}
   806be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          udi_vendor_bulk_in_run(
   806c2:	4a06      	ldr	r2, [pc, #24]	; (806dc <ctrl_readmem_bulk+0x58>)
   806c4:	4807      	ldr	r0, [pc, #28]	; (806e4 <ctrl_readmem_bulk+0x60>)
   806c6:	4b06      	ldr	r3, [pc, #24]	; (806e0 <ctrl_readmem_bulk+0x5c>)
   806c8:	4718      	bx	r3
   806ca:	bd70      	pop	{r4, r5, r6, pc}
   806cc:	20002fd4 	.word	0x20002fd4
   806d0:	20003470 	.word	0x20003470
   806d4:	00080b01 	.word	0x00080b01
   806d8:	00082439 	.word	0x00082439
   806dc:	00080795 	.word	0x00080795
   806e0:	00082805 	.word	0x00082805
   806e4:	20000ca8 	.word	0x20000ca8

000806e8 <ctrl_readmem_ctrl>:
void ctrl_readmem_ctrl(void){
   806e8:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   806ea:	4b08      	ldr	r3, [pc, #32]	; (8070c <ctrl_readmem_ctrl+0x24>)
     FPGA_setlock(fpga_ctrlmem);
   806ec:	2004      	movs	r0, #4
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   806ee:	685c      	ldr	r4, [r3, #4]
     FPGA_setlock(fpga_ctrlmem);
   806f0:	4a07      	ldr	r2, [pc, #28]	; (80710 <ctrl_readmem_ctrl+0x28>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   806f2:	681d      	ldr	r5, [r3, #0]
     FPGA_setlock(fpga_ctrlmem);
   806f4:	4790      	blx	r2
     ctrlmemread_size = buflen;
   806f6:	4907      	ldr	r1, [pc, #28]	; (80714 <ctrl_readmem_ctrl+0x2c>)
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   806f8:	4a07      	ldr	r2, [pc, #28]	; (80718 <ctrl_readmem_ctrl+0x30>)
   806fa:	f104 44c0 	add.w	r4, r4, #1610612736	; 0x60000000
     ctrlmemread_size = buflen;
   806fe:	600d      	str	r5, [r1, #0]
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   80700:	6014      	str	r4, [r2, #0]
     LED_On(LED2_GPIO);
   80702:	204c      	movs	r0, #76	; 0x4c
}
   80704:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     LED_On(LED2_GPIO);
   80708:	4b04      	ldr	r3, [pc, #16]	; (8071c <ctrl_readmem_ctrl+0x34>)
   8070a:	4718      	bx	r3
   8070c:	20002fd4 	.word	0x20002fd4
   80710:	00080b01 	.word	0x00080b01
   80714:	20003018 	.word	0x20003018
   80718:	20003014 	.word	0x20003014
   8071c:	00082439 	.word	0x00082439

00080720 <ctrl_writemem_ctrl>:
          }
     }
     seeded = 1;
}

void ctrl_writemem_ctrl(void){
   80720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80724:	4d0c      	ldr	r5, [pc, #48]	; (80758 <ctrl_writemem_ctrl+0x38>)

     uint8_t * ctrlbuf_payload = (uint8_t *)(CTRLBUFFER_WORDPTR + 2);

     //printf("Writing to %x, %d\n", address, buflen);

     FPGA_setlock(fpga_generic);
   80726:	2001      	movs	r0, #1
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80728:	682e      	ldr	r6, [r5, #0]
     FPGA_setlock(fpga_generic);
   8072a:	f8df 8038 	ldr.w	r8, [pc, #56]	; 80764 <ctrl_writemem_ctrl+0x44>
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8072e:	686c      	ldr	r4, [r5, #4]
     FPGA_setlock(fpga_generic);
   80730:	47c0      	blx	r8

     /* Start Transaction */
     LED_On(LED1_GPIO);
   80732:	2010      	movs	r0, #16
   80734:	4b09      	ldr	r3, [pc, #36]	; (8075c <ctrl_writemem_ctrl+0x3c>)
   80736:	4798      	blx	r3

     /* Do memory write */
     for(unsigned int i = 0; i < buflen; i++){
   80738:	b14e      	cbz	r6, 8074e <ctrl_writemem_ctrl+0x2e>
   8073a:	4f09      	ldr	r7, [pc, #36]	; (80760 <ctrl_writemem_ctrl+0x40>)
   8073c:	1deb      	adds	r3, r5, #7
   8073e:	1930      	adds	r0, r6, r4
          xram[i+address] = ctrlbuf_payload[i];
   80740:	683a      	ldr	r2, [r7, #0]
   80742:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   80746:	5511      	strb	r1, [r2, r4]
   80748:	3401      	adds	r4, #1
     for(unsigned int i = 0; i < buflen; i++){
   8074a:	4284      	cmp	r4, r0
   8074c:	d1f8      	bne.n	80740 <ctrl_writemem_ctrl+0x20>
     }

     FPGA_setlock(fpga_unlocked);
   8074e:	4643      	mov	r3, r8
}
   80750:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
     FPGA_setlock(fpga_unlocked);
   80754:	2000      	movs	r0, #0
   80756:	4718      	bx	r3
   80758:	20002fd4 	.word	0x20002fd4
   8075c:	00082439 	.word	0x00082439
   80760:	200001b8 	.word	0x200001b8
   80764:	00080b01 	.word	0x00080b01

00080768 <ctrl_writemem_bulk>:

static uint32_t bulkread_address = 0;
static uint32_t bulkread_len = 0;

void ctrl_writemem_bulk(void){
   80768:	b510      	push	{r4, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8076a:	4a06      	ldr	r2, [pc, #24]	; (80784 <ctrl_writemem_bulk+0x1c>)

     FPGA_setlock(fpga_blockout);
   8076c:	2003      	movs	r0, #3
   8076e:	4b06      	ldr	r3, [pc, #24]	; (80788 <ctrl_writemem_bulk+0x20>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80770:	6854      	ldr	r4, [r2, #4]
     FPGA_setlock(fpga_blockout);
   80772:	4798      	blx	r3

     /* Set address */
     bulkread_address = address;
   80774:	4a05      	ldr	r2, [pc, #20]	; (8078c <ctrl_writemem_bulk+0x24>)
     bulkread_len = buflen;
     //FPGA_setaddr(address);

     /* Transaction done in generic callback */
     LED_On(LED1_GPIO);
   80776:	2010      	movs	r0, #16
     bulkread_address = address;
   80778:	6014      	str	r4, [r2, #0]
     LED_On(LED1_GPIO);
   8077a:	4b05      	ldr	r3, [pc, #20]	; (80790 <ctrl_writemem_bulk+0x28>)
}
   8077c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     LED_On(LED1_GPIO);
   80780:	4718      	bx	r3
   80782:	bf00      	nop
   80784:	20002fd4 	.word	0x20002fd4
   80788:	00080b01 	.word	0x00080b01
   8078c:	20002fd0 	.word	0x20002fd0
   80790:	00082439 	.word	0x00082439

00080794 <main_vendor_bulk_in_received>:
void main_vendor_bulk_in_received(udd_ep_status_t status,
                                  iram_size_t nb_transfered, udd_ep_id_t ep)
{
     UNUSED(nb_transfered);
     UNUSED(ep);
     if (UDD_EP_TRANSFER_OK != status) {
   80794:	b100      	cbz	r0, 80798 <main_vendor_bulk_in_received+0x4>
   80796:	4770      	bx	lr
{
   80798:	b510      	push	{r4, lr}
          return; // Transfer aborted/error
     }

     if (FPGA_lockstatus() == fpga_blockin){
   8079a:	4b05      	ldr	r3, [pc, #20]	; (807b0 <main_vendor_bulk_in_received+0x1c>)
   8079c:	4604      	mov	r4, r0
   8079e:	4798      	blx	r3
   807a0:	2802      	cmp	r0, #2
   807a2:	d000      	beq.n	807a6 <main_vendor_bulk_in_received+0x12>
   807a4:	bd10      	pop	{r4, pc}
          FPGA_setlock(fpga_unlocked);
   807a6:	4620      	mov	r0, r4
     }
}
   807a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          FPGA_setlock(fpga_unlocked);
   807ac:	4b01      	ldr	r3, [pc, #4]	; (807b4 <main_vendor_bulk_in_received+0x20>)
   807ae:	4718      	bx	r3
   807b0:	00080b0d 	.word	0x00080b0d
   807b4:	00080b01 	.word	0x00080b01

000807b8 <main_vendor_bulk_out_received>:

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep)
{
   807b8:	b570      	push	{r4, r5, r6, lr}
     UNUSED(ep);
     if (UDD_EP_TRANSFER_OK != status) {
   807ba:	b9a8      	cbnz	r0, 807e8 <main_vendor_bulk_out_received+0x30>
               main_vendor_bulk_out_received);

          return;
     }

     if (blockendpoint_usage == bep_emem){
   807bc:	4b10      	ldr	r3, [pc, #64]	; (80800 <main_vendor_bulk_out_received+0x48>)
   807be:	781b      	ldrb	r3, [r3, #0]
   807c0:	b993      	cbnz	r3, 807e8 <main_vendor_bulk_out_received+0x30>

          for(uint32_t i = 0; i < nb_transfered; i++){
   807c2:	b169      	cbz	r1, 807e0 <main_vendor_bulk_out_received+0x28>
   807c4:	4c0f      	ldr	r4, [pc, #60]	; (80804 <main_vendor_bulk_out_received+0x4c>)
   807c6:	4a10      	ldr	r2, [pc, #64]	; (80808 <main_vendor_bulk_out_received+0x50>)
   807c8:	4623      	mov	r3, r4
   807ca:	6815      	ldr	r5, [r2, #0]
   807cc:	4e0f      	ldr	r6, [pc, #60]	; (8080c <main_vendor_bulk_out_received+0x54>)
   807ce:	440c      	add	r4, r1
   807d0:	1aed      	subs	r5, r5, r3
               xram[i + bulkread_address] = main_buf_loopback[i];
   807d2:	18ea      	adds	r2, r5, r3
   807d4:	f813 0b01 	ldrb.w	r0, [r3], #1
   807d8:	6831      	ldr	r1, [r6, #0]
          for(uint32_t i = 0; i < nb_transfered; i++){
   807da:	42a3      	cmp	r3, r4
               xram[i + bulkread_address] = main_buf_loopback[i];
   807dc:	5488      	strb	r0, [r1, r2]
          for(uint32_t i = 0; i < nb_transfered; i++){
   807de:	d1f8      	bne.n	807d2 <main_vendor_bulk_out_received+0x1a>
          }

          if (FPGA_lockstatus() == fpga_blockout){
   807e0:	4b0b      	ldr	r3, [pc, #44]	; (80810 <main_vendor_bulk_out_received+0x58>)
   807e2:	4798      	blx	r3
   807e4:	2803      	cmp	r0, #3
   807e6:	d007      	beq.n	807f8 <main_vendor_bulk_out_received+0x40>

     udi_vendor_bulk_out_run(
          main_buf_loopback,
          sizeof(main_buf_loopback),
          main_vendor_bulk_out_received);
}
   807e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
          udi_vendor_bulk_out_run(
   807ec:	4a09      	ldr	r2, [pc, #36]	; (80814 <main_vendor_bulk_out_received+0x5c>)
   807ee:	f44f 6180 	mov.w	r1, #1024	; 0x400
   807f2:	4804      	ldr	r0, [pc, #16]	; (80804 <main_vendor_bulk_out_received+0x4c>)
   807f4:	4b08      	ldr	r3, [pc, #32]	; (80818 <main_vendor_bulk_out_received+0x60>)
   807f6:	4718      	bx	r3
               FPGA_setlock(fpga_unlocked);
   807f8:	2000      	movs	r0, #0
   807fa:	4b08      	ldr	r3, [pc, #32]	; (8081c <main_vendor_bulk_out_received+0x64>)
   807fc:	4798      	blx	r3
   807fe:	e7f3      	b.n	807e8 <main_vendor_bulk_out_received+0x30>
   80800:	20000ca4 	.word	0x20000ca4
   80804:	20003020 	.word	0x20003020
   80808:	20002fd0 	.word	0x20002fd0
   8080c:	200001b8 	.word	0x200001b8
   80810:	00080b0d 	.word	0x00080b0d
   80814:	000807b9 	.word	0x000807b9
   80818:	00082821 	.word	0x00082821
   8081c:	00080b01 	.word	0x00080b01

00080820 <ctrl_sam3ucfg_cb>:
     switch(udd_g_ctrlreq.req.wValue & 0xFF)
   80820:	4b0b      	ldr	r3, [pc, #44]	; (80850 <ctrl_sam3ucfg_cb+0x30>)
   80822:	789b      	ldrb	r3, [r3, #2]
   80824:	2b01      	cmp	r3, #1
   80826:	d005      	beq.n	80834 <ctrl_sam3ucfg_cb+0x14>
   80828:	2b02      	cmp	r3, #2
   8082a:	d102      	bne.n	80832 <ctrl_sam3ucfg_cb+0x12>
          pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   8082c:	2010      	movs	r0, #16
   8082e:	4b09      	ldr	r3, [pc, #36]	; (80854 <ctrl_sam3ucfg_cb+0x34>)
   80830:	4718      	bx	r3
   80832:	4770      	bx	lr
{
   80834:	b510      	push	{r4, lr}
		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   80836:	203e      	movs	r0, #62	; 0x3e
   80838:	4b07      	ldr	r3, [pc, #28]	; (80858 <ctrl_sam3ucfg_cb+0x38>)
   8083a:	4798      	blx	r3
   8083c:	4c07      	ldr	r4, [pc, #28]	; (8085c <ctrl_sam3ucfg_cb+0x3c>)
	case OSC_MAINCK_12M_RC:
		return pmc_osc_is_ready_fastrc();

	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_main_xtal();
   8083e:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80840:	2800      	cmp	r0, #0
   80842:	d0fc      	beq.n	8083e <ctrl_sam3ucfg_cb+0x1e>
          pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
   80844:	2010      	movs	r0, #16
}
   80846:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
   8084a:	4b05      	ldr	r3, [pc, #20]	; (80860 <ctrl_sam3ucfg_cb+0x40>)
   8084c:	4718      	bx	r3
   8084e:	bf00      	nop
   80850:	2000358c 	.word	0x2000358c
   80854:	000825ed 	.word	0x000825ed
   80858:	00082645 	.word	0x00082645
   8085c:	0008266d 	.word	0x0008266d
   80860:	00082595 	.word	0x00082595

00080864 <main_suspend_action>:
     ui_powerdown();
   80864:	4b00      	ldr	r3, [pc, #0]	; (80868 <main_suspend_action+0x4>)
   80866:	4718      	bx	r3
   80868:	00083829 	.word	0x00083829

0008086c <main_resume_action>:
     ui_wakeup();
   8086c:	4b00      	ldr	r3, [pc, #0]	; (80870 <main_resume_action+0x4>)
   8086e:	4718      	bx	r3
   80870:	0008384d 	.word	0x0008384d

00080874 <main_sof_action>:
     if (!main_b_vendor_enable)
   80874:	4b05      	ldr	r3, [pc, #20]	; (8088c <main_sof_action+0x18>)
   80876:	781b      	ldrb	r3, [r3, #0]
   80878:	b903      	cbnz	r3, 8087c <main_sof_action+0x8>
   8087a:	4770      	bx	lr
{
   8087c:	b510      	push	{r4, lr}
     ui_process(udd_get_frame_number());
   8087e:	4b04      	ldr	r3, [pc, #16]	; (80890 <main_sof_action+0x1c>)
   80880:	4798      	blx	r3
}
   80882:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ui_process(udd_get_frame_number());
   80886:	4b03      	ldr	r3, [pc, #12]	; (80894 <main_sof_action+0x20>)
   80888:	4718      	bx	r3
   8088a:	bf00      	nop
   8088c:	200001b1 	.word	0x200001b1
   80890:	00081b79 	.word	0x00081b79
   80894:	00083869 	.word	0x00083869

00080898 <main_vendor_enable>:
{
   80898:	b538      	push	{r3, r4, r5, lr}
     main_b_vendor_enable = true;
   8089a:	2401      	movs	r4, #1
     LED_On(LED2_GPIO);
   8089c:	204c      	movs	r0, #76	; 0x4c
   8089e:	4b06      	ldr	r3, [pc, #24]	; (808b8 <main_vendor_enable+0x20>)
     main_b_vendor_enable = true;
   808a0:	4d06      	ldr	r5, [pc, #24]	; (808bc <main_vendor_enable+0x24>)
     LED_On(LED2_GPIO);
   808a2:	4798      	blx	r3
     udi_vendor_bulk_out_run(
   808a4:	4a06      	ldr	r2, [pc, #24]	; (808c0 <main_vendor_enable+0x28>)
   808a6:	f44f 6180 	mov.w	r1, #1024	; 0x400
   808aa:	4b06      	ldr	r3, [pc, #24]	; (808c4 <main_vendor_enable+0x2c>)
   808ac:	4806      	ldr	r0, [pc, #24]	; (808c8 <main_vendor_enable+0x30>)
     main_b_vendor_enable = true;
   808ae:	702c      	strb	r4, [r5, #0]
     udi_vendor_bulk_out_run(
   808b0:	4798      	blx	r3
}
   808b2:	4620      	mov	r0, r4
   808b4:	bd38      	pop	{r3, r4, r5, pc}
   808b6:	bf00      	nop
   808b8:	00082439 	.word	0x00082439
   808bc:	200001b1 	.word	0x200001b1
   808c0:	000807b9 	.word	0x000807b9
   808c4:	00082821 	.word	0x00082821
   808c8:	20003020 	.word	0x20003020

000808cc <main_vendor_disable>:
     main_b_vendor_enable = false;
   808cc:	2200      	movs	r2, #0
   808ce:	4b01      	ldr	r3, [pc, #4]	; (808d4 <main_vendor_disable+0x8>)
   808d0:	701a      	strb	r2, [r3, #0]
   808d2:	4770      	bx	lr
   808d4:	200001b1 	.word	0x200001b1

000808d8 <ctrl_writemem_rng>:
{
   808d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   808da:	4d23      	ldr	r5, [pc, #140]	; (80968 <ctrl_writemem_rng+0x90>)
     LED_On(LED1_GPIO);
   808dc:	2010      	movs	r0, #16
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   808de:	686c      	ldr	r4, [r5, #4]
     LED_On(LED1_GPIO);
   808e0:	4b22      	ldr	r3, [pc, #136]	; (8096c <ctrl_writemem_rng+0x94>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   808e2:	682e      	ldr	r6, [r5, #0]
     LED_On(LED1_GPIO);
   808e4:	4798      	blx	r3
     if (!address) {
   808e6:	b984      	cbnz	r4, 8090a <ctrl_writemem_rng+0x32>
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   808e8:	4821      	ldr	r0, [pc, #132]	; (80970 <ctrl_writemem_rng+0x98>)
               seed[i] = state[i];
   808ea:	4b22      	ldr	r3, [pc, #136]	; (80974 <ctrl_writemem_rng+0x9c>)
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   808ec:	f8d5 e008 	ldr.w	lr, [r5, #8]
   808f0:	68ef      	ldr	r7, [r5, #12]
   808f2:	6929      	ldr	r1, [r5, #16]
   808f4:	696a      	ldr	r2, [r5, #20]
   808f6:	f8c0 e000 	str.w	lr, [r0]
               seed[i] = state[i];
   808fa:	f8c3 e000 	str.w	lr, [r3]
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   808fe:	6047      	str	r7, [r0, #4]
               seed[i] = state[i];
   80900:	605f      	str	r7, [r3, #4]
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   80902:	6081      	str	r1, [r0, #8]
               seed[i] = state[i];
   80904:	6099      	str	r1, [r3, #8]
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   80906:	60c2      	str	r2, [r0, #12]
               seed[i] = state[i];
   80908:	60da      	str	r2, [r3, #12]
     for (i = 0; i < num_rng; i++) {
   8090a:	08b6      	lsrs	r6, r6, #2
   8090c:	d028      	beq.n	80960 <ctrl_writemem_rng+0x88>
   8090e:	4818      	ldr	r0, [pc, #96]	; (80970 <ctrl_writemem_rng+0x98>)
   80910:	4d19      	ldr	r5, [pc, #100]	; (80978 <ctrl_writemem_rng+0xa0>)
   80912:	eb04 0686 	add.w	r6, r4, r6, lsl #2
     s = state[0];
   80916:	6801      	ldr	r1, [r0, #0]
     uint32_t s, t = state[3];
   80918:	68c2      	ldr	r2, [r0, #12]
   8091a:	ea81 43d1 	eor.w	r3, r1, r1, lsr #19
     t ^= t << 11;
   8091e:	ea82 22c2 	eor.w	r2, r2, r2, lsl #11
   80922:	4053      	eors	r3, r2
     t ^= s >> 19;
   80924:	ea83 2312 	eor.w	r3, r3, r2, lsr #8
     state[2] = state[1];
   80928:	6842      	ldr	r2, [r0, #4]
     state[3] = state[2];
   8092a:	6887      	ldr	r7, [r0, #8]
     state[2] = state[1];
   8092c:	6082      	str	r2, [r0, #8]
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8092e:	682a      	ldr	r2, [r5, #0]
   80930:	fa5f fe83 	uxtb.w	lr, r3
     state[0] = t;
   80934:	6003      	str	r3, [r0, #0]
     state[1] = state[0];
   80936:	6041      	str	r1, [r0, #4]
     state[3] = state[2];
   80938:	60c7      	str	r7, [r0, #12]
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8093a:	f802 e004 	strb.w	lr, [r2, r4]
   8093e:	6829      	ldr	r1, [r5, #0]
   80940:	f3c3 2707 	ubfx	r7, r3, #8, #8
   80944:	1c62      	adds	r2, r4, #1
   80946:	548f      	strb	r7, [r1, r2]
   80948:	6829      	ldr	r1, [r5, #0]
   8094a:	1ca2      	adds	r2, r4, #2
   8094c:	f3c3 4707 	ubfx	r7, r3, #16, #8
   80950:	548f      	strb	r7, [r1, r2]
   80952:	6829      	ldr	r1, [r5, #0]
   80954:	1ce2      	adds	r2, r4, #3
   80956:	3404      	adds	r4, #4
   80958:	0e1b      	lsrs	r3, r3, #24
     for (i = 0; i < num_rng; i++) {
   8095a:	42a6      	cmp	r6, r4
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8095c:	548b      	strb	r3, [r1, r2]
     for (i = 0; i < num_rng; i++) {
   8095e:	d1da      	bne.n	80916 <ctrl_writemem_rng+0x3e>
     seeded = 1;
   80960:	2201      	movs	r2, #1
   80962:	4b06      	ldr	r3, [pc, #24]	; (8097c <ctrl_writemem_rng+0xa4>)
   80964:	601a      	str	r2, [r3, #0]
}
   80966:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80968:	20002fd4 	.word	0x20002fd4
   8096c:	00082439 	.word	0x00082439
   80970:	20003474 	.word	0x20003474
   80974:	20003460 	.word	0x20003460
   80978:	200001b8 	.word	0x200001b8
   8097c:	20003470 	.word	0x20003470

00080980 <main_setup_out_received>:
{
   80980:	b538      	push	{r3, r4, r5, lr}
     udd_g_ctrlreq.payload = ctrlbuffer;
   80982:	4b1c      	ldr	r3, [pc, #112]	; (809f4 <main_setup_out_received+0x74>)
     blockendpoint_usage = bep_emem;
   80984:	2400      	movs	r4, #0
     udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   80986:	88d9      	ldrh	r1, [r3, #6]
     switch(udd_g_ctrlreq.req.bRequest){
   80988:	785a      	ldrb	r2, [r3, #1]
     udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   8098a:	2940      	cmp	r1, #64	; 0x40
   8098c:	bf28      	it	cs
   8098e:	2140      	movcs	r1, #64	; 0x40
     udd_g_ctrlreq.payload = ctrlbuffer;
   80990:	4d19      	ldr	r5, [pc, #100]	; (809f8 <main_setup_out_received+0x78>)
     blockendpoint_usage = bep_emem;
   80992:	481a      	ldr	r0, [pc, #104]	; (809fc <main_setup_out_received+0x7c>)
     switch(udd_g_ctrlreq.req.bRequest){
   80994:	3a10      	subs	r2, #16
     udd_g_ctrlreq.payload = ctrlbuffer;
   80996:	609d      	str	r5, [r3, #8]
     udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   80998:	8199      	strh	r1, [r3, #12]
     blockendpoint_usage = bep_emem;
   8099a:	7004      	strb	r4, [r0, #0]
     switch(udd_g_ctrlreq.req.bRequest){
   8099c:	2a12      	cmp	r2, #18
   8099e:	d827      	bhi.n	809f0 <main_setup_out_received+0x70>
   809a0:	e8df f002 	tbb	[pc, r2]
   809a4:	1a16120e 	.word	0x1a16120e
   809a8:	2626221e 	.word	0x2626221e
   809ac:	26262626 	.word	0x26262626
   809b0:	26262626 	.word	0x26262626
   809b4:	2626      	.short	0x2626
   809b6:	0a          	.byte	0x0a
   809b7:	00          	.byte	0x00
          udd_g_ctrlreq.callback = ctrl_sam3ucfg_cb;
   809b8:	4a11      	ldr	r2, [pc, #68]	; (80a00 <main_setup_out_received+0x80>)
          return true;
   809ba:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_sam3ucfg_cb;
   809bc:	611a      	str	r2, [r3, #16]
          return true;
   809be:	bd38      	pop	{r3, r4, r5, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   809c0:	4a10      	ldr	r2, [pc, #64]	; (80a04 <main_setup_out_received+0x84>)
          return true;
   809c2:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   809c4:	611a      	str	r2, [r3, #16]
          return true;
   809c6:	bd38      	pop	{r3, r4, r5, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   809c8:	4a0f      	ldr	r2, [pc, #60]	; (80a08 <main_setup_out_received+0x88>)
          return true;
   809ca:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   809cc:	611a      	str	r2, [r3, #16]
          return true;
   809ce:	bd38      	pop	{r3, r4, r5, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   809d0:	4a0e      	ldr	r2, [pc, #56]	; (80a0c <main_setup_out_received+0x8c>)
          return true;
   809d2:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   809d4:	611a      	str	r2, [r3, #16]
          return true;
   809d6:	bd38      	pop	{r3, r4, r5, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   809d8:	4a0d      	ldr	r2, [pc, #52]	; (80a10 <main_setup_out_received+0x90>)
          return true;
   809da:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   809dc:	611a      	str	r2, [r3, #16]
          return true;
   809de:	bd38      	pop	{r3, r4, r5, pc}
          ctrl_writemem_rng();
   809e0:	4b0c      	ldr	r3, [pc, #48]	; (80a14 <main_setup_out_received+0x94>)
   809e2:	4798      	blx	r3
          return true;
   809e4:	2001      	movs	r0, #1
   809e6:	bd38      	pop	{r3, r4, r5, pc}
          udd_g_ctrlreq.callback = ctrl_testmem;
   809e8:	4a0b      	ldr	r2, [pc, #44]	; (80a18 <main_setup_out_received+0x98>)
          return true;
   809ea:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_testmem;
   809ec:	611a      	str	r2, [r3, #16]
          return true;
   809ee:	bd38      	pop	{r3, r4, r5, pc}
          return false;
   809f0:	2000      	movs	r0, #0
}
   809f2:	bd38      	pop	{r3, r4, r5, pc}
   809f4:	2000358c 	.word	0x2000358c
   809f8:	20002fd4 	.word	0x20002fd4
   809fc:	20000ca4 	.word	0x20000ca4
   80a00:	00080821 	.word	0x00080821
   80a04:	00080685 	.word	0x00080685
   80a08:	00080769 	.word	0x00080769
   80a0c:	000806e9 	.word	0x000806e9
   80a10:	00080721 	.word	0x00080721
   80a14:	000808d9 	.word	0x000808d9
   80a18:	00080545 	.word	0x00080545

00080a1c <main_setup_in_received>:
{
   80a1c:	b538      	push	{r3, r4, r5, lr}
     switch(udd_g_ctrlreq.req.bRequest){
   80a1e:	4a14      	ldr	r2, [pc, #80]	; (80a70 <main_setup_in_received+0x54>)
   80a20:	7853      	ldrb	r3, [r2, #1]
   80a22:	2b15      	cmp	r3, #21
   80a24:	d005      	beq.n	80a32 <main_setup_in_received+0x16>
   80a26:	2b17      	cmp	r3, #23
   80a28:	d011      	beq.n	80a4e <main_setup_in_received+0x32>
   80a2a:	2b12      	cmp	r3, #18
   80a2c:	d001      	beq.n	80a32 <main_setup_in_received+0x16>
          return false;
   80a2e:	2000      	movs	r0, #0
   80a30:	bd38      	pop	{r3, r4, r5, pc}
          ctrlmemread_size = 0;
   80a32:	2400      	movs	r4, #0
          udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80a34:	4b0f      	ldr	r3, [pc, #60]	; (80a74 <main_setup_in_received+0x58>)
          udd_g_ctrlreq.payload = ctrlmemread_buf;
   80a36:	4910      	ldr	r1, [pc, #64]	; (80a78 <main_setup_in_received+0x5c>)
          udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80a38:	6818      	ldr	r0, [r3, #0]
          udd_g_ctrlreq.payload = ctrlmemread_buf;
   80a3a:	680d      	ldr	r5, [r1, #0]
          if (FPGA_lockstatus() == fpga_ctrlmem){
   80a3c:	490f      	ldr	r1, [pc, #60]	; (80a7c <main_setup_in_received+0x60>)
          udd_g_ctrlreq.payload = ctrlmemread_buf;
   80a3e:	6095      	str	r5, [r2, #8]
          udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80a40:	8190      	strh	r0, [r2, #12]
          ctrlmemread_size = 0;
   80a42:	601c      	str	r4, [r3, #0]
          if (FPGA_lockstatus() == fpga_ctrlmem){
   80a44:	4788      	blx	r1
   80a46:	2804      	cmp	r0, #4
   80a48:	d00c      	beq.n	80a64 <main_setup_in_received+0x48>
          return true;
   80a4a:	2001      	movs	r0, #1
}
   80a4c:	bd38      	pop	{r3, r4, r5, pc}
          respbuf[0] = FW_VER_MAJOR;
   80a4e:	2100      	movs	r1, #0
          respbuf[1] = FW_VER_MINOR;
   80a50:	200a      	movs	r0, #10
          udd_g_ctrlreq.payload_size = 3;
   80a52:	2403      	movs	r4, #3
          respbuf[0] = FW_VER_MAJOR;
   80a54:	4b0a      	ldr	r3, [pc, #40]	; (80a80 <main_setup_in_received+0x64>)
          udd_g_ctrlreq.payload_size = 3;
   80a56:	8194      	strh	r4, [r2, #12]
          respbuf[1] = FW_VER_MINOR;
   80a58:	7058      	strb	r0, [r3, #1]
          respbuf[0] = FW_VER_MAJOR;
   80a5a:	7019      	strb	r1, [r3, #0]
          respbuf[2] = FW_VER_DEBUG;
   80a5c:	7099      	strb	r1, [r3, #2]
          udd_g_ctrlreq.payload = respbuf;
   80a5e:	6093      	str	r3, [r2, #8]
          return true;
   80a60:	2001      	movs	r0, #1
   80a62:	bd38      	pop	{r3, r4, r5, pc}
               FPGA_setlock(fpga_unlocked);
   80a64:	4620      	mov	r0, r4
   80a66:	4b07      	ldr	r3, [pc, #28]	; (80a84 <main_setup_in_received+0x68>)
   80a68:	4798      	blx	r3
          return true;
   80a6a:	2001      	movs	r0, #1
   80a6c:	bd38      	pop	{r3, r4, r5, pc}
   80a6e:	bf00      	nop
   80a70:	2000358c 	.word	0x2000358c
   80a74:	20003018 	.word	0x20003018
   80a78:	20003014 	.word	0x20003014
   80a7c:	00080b0d 	.word	0x00080b0d
   80a80:	20003420 	.word	0x20003420
   80a84:	00080b01 	.word	0x00080b01

00080a88 <flash_read_unique_id>:
uint32_t flash_read_unique_id(uint32_t *pul_data, uint32_t ul_size)
{
	uint32_t uid_buf[4];
	uint32_t ul_idx;

	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   80a88:	2304      	movs	r3, #4
{
   80a8a:	b570      	push	{r4, r5, r6, lr}
   80a8c:	b086      	sub	sp, #24
   80a8e:	4606      	mov	r6, r0
   80a90:	460d      	mov	r5, r1
	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   80a92:	9300      	str	r3, [sp, #0]
   80a94:	220f      	movs	r2, #15
   80a96:	ab02      	add	r3, sp, #8
   80a98:	210e      	movs	r1, #14
   80a9a:	480b      	ldr	r0, [pc, #44]	; (80ac8 <flash_read_unique_id+0x40>)
   80a9c:	4c0b      	ldr	r4, [pc, #44]	; (80acc <flash_read_unique_id+0x44>)
   80a9e:	47a0      	blx	r4
   80aa0:	b118      	cbz	r0, 80aaa <flash_read_unique_id+0x22>
			EFC_FCMD_SPUI, uid_buf, 4)) {
		return FLASH_RC_ERROR;
   80aa2:	2410      	movs	r4, #16
	for (ul_idx = 0; ul_idx < ul_size; ul_idx++) {
		pul_data[ul_idx] = uid_buf[ul_idx];
	}

	return FLASH_RC_OK;
}
   80aa4:	4620      	mov	r0, r4
   80aa6:	b006      	add	sp, #24
   80aa8:	bd70      	pop	{r4, r5, r6, pc}
   80aaa:	2d04      	cmp	r5, #4
   80aac:	bf28      	it	cs
   80aae:	2504      	movcs	r5, #4
   80ab0:	4604      	mov	r4, r0
	for (ul_idx = 0; ul_idx < ul_size; ul_idx++) {
   80ab2:	2d00      	cmp	r5, #0
   80ab4:	d0f6      	beq.n	80aa4 <flash_read_unique_id+0x1c>
   80ab6:	00aa      	lsls	r2, r5, #2
   80ab8:	a902      	add	r1, sp, #8
   80aba:	4630      	mov	r0, r6
   80abc:	4b04      	ldr	r3, [pc, #16]	; (80ad0 <flash_read_unique_id+0x48>)
   80abe:	4798      	blx	r3
}
   80ac0:	4620      	mov	r0, r4
   80ac2:	b006      	add	sp, #24
   80ac4:	bd70      	pop	{r4, r5, r6, pc}
   80ac6:	bf00      	nop
   80ac8:	400e0800 	.word	0x400e0800
   80acc:	20000001 	.word	0x20000001
   80ad0:	00083939 	.word	0x00083939

00080ad4 <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   80ad4:	6943      	ldr	r3, [r0, #20]
   80ad6:	079b      	lsls	r3, r3, #30
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   80ad8:	bf43      	ittte	mi
   80ada:	f3c1 0108 	ubfxmi	r1, r1, #0, #9
   80ade:	61c1      	strmi	r1, [r0, #28]
	return 0;
   80ae0:	2000      	movmi	r0, #0
		return 1;
   80ae2:	2001      	movpl	r0, #1
}
   80ae4:	4770      	bx	lr
   80ae6:	bf00      	nop

00080ae8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   80ae8:	6943      	ldr	r3, [r0, #20]
   80aea:	07db      	lsls	r3, r3, #31
   80aec:	d505      	bpl.n	80afa <usart_read+0x12>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   80aee:	6983      	ldr	r3, [r0, #24]

	return 0;
   80af0:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   80af2:	f3c3 0308 	ubfx	r3, r3, #0, #9
   80af6:	600b      	str	r3, [r1, #0]
	return 0;
   80af8:	4770      	bx	lr
		return 1;
   80afa:	2001      	movs	r0, #1
}
   80afc:	4770      	bx	lr
   80afe:	bf00      	nop

00080b00 <FPGA_setlock>:

static volatile fpga_lockstatus_t _fpga_locked = fpga_unlocked;

void FPGA_setlock(fpga_lockstatus_t lockstatus)
{
	_fpga_locked = lockstatus;
   80b00:	4b01      	ldr	r3, [pc, #4]	; (80b08 <FPGA_setlock+0x8>)
   80b02:	7018      	strb	r0, [r3, #0]
   80b04:	4770      	bx	lr
   80b06:	bf00      	nop
   80b08:	20003484 	.word	0x20003484

00080b0c <FPGA_lockstatus>:
}

fpga_lockstatus_t FPGA_lockstatus(void)
{
	return _fpga_locked;
   80b0c:	4b01      	ldr	r3, [pc, #4]	; (80b14 <FPGA_lockstatus+0x8>)
   80b0e:	7818      	ldrb	r0, [r3, #0]
}
   80b10:	4770      	bx	lr
   80b12:	bf00      	nop
   80b14:	20003484 	.word	0x20003484

00080b18 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
   80b18:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80b1c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   80b20:	670a      	str	r2, [r1, #112]	; 0x70
   80b22:	4770      	bx	lr

00080b24 <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
   80b24:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80b28:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   80b2c:	674a      	str	r2, [r1, #116]	; 0x74
   80b2e:	4770      	bx	lr

00080b30 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
   80b30:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80b34:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   80b38:	678a      	str	r2, [r1, #120]	; 0x78
   80b3a:	4770      	bx	lr

00080b3c <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
   80b3c:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   80b40:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   80b44:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
   80b48:	4770      	bx	lr
   80b4a:	bf00      	nop

00080b4c <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80b4c:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   80b4e:	4b2e      	ldr	r3, [pc, #184]	; (80c08 <PIOA_Handler+0xbc>)
   80b50:	482e      	ldr	r0, [pc, #184]	; (80c0c <PIOA_Handler+0xc0>)
   80b52:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   80b54:	4b2e      	ldr	r3, [pc, #184]	; (80c10 <PIOA_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   80b56:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80b58:	482c      	ldr	r0, [pc, #176]	; (80c0c <PIOA_Handler+0xc0>)
   80b5a:	4798      	blx	r3
	if (status != 0) {
   80b5c:	4005      	ands	r5, r0
   80b5e:	d015      	beq.n	80b8c <PIOA_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80b60:	4c2c      	ldr	r4, [pc, #176]	; (80c14 <PIOA_Handler+0xc8>)
   80b62:	6820      	ldr	r0, [r4, #0]
   80b64:	280a      	cmp	r0, #10
   80b66:	d012      	beq.n	80b8e <PIOA_Handler+0x42>
   80b68:	6920      	ldr	r0, [r4, #16]
   80b6a:	280a      	cmp	r0, #10
   80b6c:	d018      	beq.n	80ba0 <PIOA_Handler+0x54>
   80b6e:	6a20      	ldr	r0, [r4, #32]
   80b70:	280a      	cmp	r0, #10
   80b72:	d01e      	beq.n	80bb2 <PIOA_Handler+0x66>
   80b74:	6b20      	ldr	r0, [r4, #48]	; 0x30
   80b76:	280a      	cmp	r0, #10
   80b78:	d024      	beq.n	80bc4 <PIOA_Handler+0x78>
   80b7a:	6c20      	ldr	r0, [r4, #64]	; 0x40
   80b7c:	280a      	cmp	r0, #10
   80b7e:	d02a      	beq.n	80bd6 <PIOA_Handler+0x8a>
   80b80:	6d20      	ldr	r0, [r4, #80]	; 0x50
   80b82:	280a      	cmp	r0, #10
   80b84:	d037      	beq.n	80bf6 <PIOA_Handler+0xaa>
   80b86:	6e20      	ldr	r0, [r4, #96]	; 0x60
   80b88:	280a      	cmp	r0, #10
   80b8a:	d02d      	beq.n	80be8 <PIOA_Handler+0x9c>
   80b8c:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80b8e:	6861      	ldr	r1, [r4, #4]
   80b90:	420d      	tst	r5, r1
   80b92:	d0e9      	beq.n	80b68 <PIOA_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80b94:	68e3      	ldr	r3, [r4, #12]
   80b96:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80b98:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
   80b9a:	439d      	bics	r5, r3
   80b9c:	d0f6      	beq.n	80b8c <PIOA_Handler+0x40>
   80b9e:	e7e3      	b.n	80b68 <PIOA_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80ba0:	6961      	ldr	r1, [r4, #20]
   80ba2:	4229      	tst	r1, r5
   80ba4:	d0e3      	beq.n	80b6e <PIOA_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80ba6:	69e3      	ldr	r3, [r4, #28]
   80ba8:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80baa:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
   80bac:	439d      	bics	r5, r3
   80bae:	d0ed      	beq.n	80b8c <PIOA_Handler+0x40>
   80bb0:	e7dd      	b.n	80b6e <PIOA_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80bb2:	6a61      	ldr	r1, [r4, #36]	; 0x24
   80bb4:	4229      	tst	r1, r5
   80bb6:	d0dd      	beq.n	80b74 <PIOA_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bb8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   80bba:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80bbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
   80bbe:	439d      	bics	r5, r3
   80bc0:	d0e4      	beq.n	80b8c <PIOA_Handler+0x40>
   80bc2:	e7d7      	b.n	80b74 <PIOA_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80bc4:	6b61      	ldr	r1, [r4, #52]	; 0x34
   80bc6:	4229      	tst	r1, r5
   80bc8:	d0d7      	beq.n	80b7a <PIOA_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   80bcc:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80bce:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
   80bd0:	439d      	bics	r5, r3
   80bd2:	d0db      	beq.n	80b8c <PIOA_Handler+0x40>
   80bd4:	e7d1      	b.n	80b7a <PIOA_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80bd6:	6c61      	ldr	r1, [r4, #68]	; 0x44
   80bd8:	4229      	tst	r1, r5
   80bda:	d0d1      	beq.n	80b80 <PIOA_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bdc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
   80bde:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80be0:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
   80be2:	439d      	bics	r5, r3
   80be4:	d0d2      	beq.n	80b8c <PIOA_Handler+0x40>
   80be6:	e7cb      	b.n	80b80 <PIOA_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80be8:	6e61      	ldr	r1, [r4, #100]	; 0x64
   80bea:	4229      	tst	r1, r5
   80bec:	d0ce      	beq.n	80b8c <PIOA_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bee:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOA, ID_PIOA);
}
   80bf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bf4:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80bf6:	6d61      	ldr	r1, [r4, #84]	; 0x54
   80bf8:	4229      	tst	r1, r5
   80bfa:	d0c4      	beq.n	80b86 <PIOA_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80bfc:	6de3      	ldr	r3, [r4, #92]	; 0x5c
   80bfe:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c00:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
   80c02:	439d      	bics	r5, r3
   80c04:	d0c2      	beq.n	80b8c <PIOA_Handler+0x40>
   80c06:	e7be      	b.n	80b86 <PIOA_Handler+0x3a>
   80c08:	0008283d 	.word	0x0008283d
   80c0c:	400e0c00 	.word	0x400e0c00
   80c10:	00082841 	.word	0x00082841
   80c14:	20003488 	.word	0x20003488

00080c18 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80c18:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   80c1a:	4b2e      	ldr	r3, [pc, #184]	; (80cd4 <PIOB_Handler+0xbc>)
   80c1c:	482e      	ldr	r0, [pc, #184]	; (80cd8 <PIOB_Handler+0xc0>)
   80c1e:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   80c20:	4b2e      	ldr	r3, [pc, #184]	; (80cdc <PIOB_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   80c22:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80c24:	482c      	ldr	r0, [pc, #176]	; (80cd8 <PIOB_Handler+0xc0>)
   80c26:	4798      	blx	r3
	if (status != 0) {
   80c28:	4005      	ands	r5, r0
   80c2a:	d015      	beq.n	80c58 <PIOB_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80c2c:	4c2c      	ldr	r4, [pc, #176]	; (80ce0 <PIOB_Handler+0xc8>)
   80c2e:	6820      	ldr	r0, [r4, #0]
   80c30:	280b      	cmp	r0, #11
   80c32:	d012      	beq.n	80c5a <PIOB_Handler+0x42>
   80c34:	6920      	ldr	r0, [r4, #16]
   80c36:	280b      	cmp	r0, #11
   80c38:	d018      	beq.n	80c6c <PIOB_Handler+0x54>
   80c3a:	6a20      	ldr	r0, [r4, #32]
   80c3c:	280b      	cmp	r0, #11
   80c3e:	d01e      	beq.n	80c7e <PIOB_Handler+0x66>
   80c40:	6b20      	ldr	r0, [r4, #48]	; 0x30
   80c42:	280b      	cmp	r0, #11
   80c44:	d024      	beq.n	80c90 <PIOB_Handler+0x78>
   80c46:	6c20      	ldr	r0, [r4, #64]	; 0x40
   80c48:	280b      	cmp	r0, #11
   80c4a:	d02a      	beq.n	80ca2 <PIOB_Handler+0x8a>
   80c4c:	6d20      	ldr	r0, [r4, #80]	; 0x50
   80c4e:	280b      	cmp	r0, #11
   80c50:	d037      	beq.n	80cc2 <PIOB_Handler+0xaa>
   80c52:	6e20      	ldr	r0, [r4, #96]	; 0x60
   80c54:	280b      	cmp	r0, #11
   80c56:	d02d      	beq.n	80cb4 <PIOB_Handler+0x9c>
   80c58:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c5a:	6861      	ldr	r1, [r4, #4]
   80c5c:	420d      	tst	r5, r1
   80c5e:	d0e9      	beq.n	80c34 <PIOB_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c60:	68e3      	ldr	r3, [r4, #12]
   80c62:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c64:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
   80c66:	439d      	bics	r5, r3
   80c68:	d0f6      	beq.n	80c58 <PIOB_Handler+0x40>
   80c6a:	e7e3      	b.n	80c34 <PIOB_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c6c:	6961      	ldr	r1, [r4, #20]
   80c6e:	4229      	tst	r1, r5
   80c70:	d0e3      	beq.n	80c3a <PIOB_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c72:	69e3      	ldr	r3, [r4, #28]
   80c74:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c76:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
   80c78:	439d      	bics	r5, r3
   80c7a:	d0ed      	beq.n	80c58 <PIOB_Handler+0x40>
   80c7c:	e7dd      	b.n	80c3a <PIOB_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c7e:	6a61      	ldr	r1, [r4, #36]	; 0x24
   80c80:	4229      	tst	r1, r5
   80c82:	d0dd      	beq.n	80c40 <PIOB_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c84:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   80c86:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c88:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
   80c8a:	439d      	bics	r5, r3
   80c8c:	d0e4      	beq.n	80c58 <PIOB_Handler+0x40>
   80c8e:	e7d7      	b.n	80c40 <PIOB_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80c90:	6b61      	ldr	r1, [r4, #52]	; 0x34
   80c92:	4229      	tst	r1, r5
   80c94:	d0d7      	beq.n	80c46 <PIOB_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80c96:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   80c98:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80c9a:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
   80c9c:	439d      	bics	r5, r3
   80c9e:	d0db      	beq.n	80c58 <PIOB_Handler+0x40>
   80ca0:	e7d1      	b.n	80c46 <PIOB_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80ca2:	6c61      	ldr	r1, [r4, #68]	; 0x44
   80ca4:	4229      	tst	r1, r5
   80ca6:	d0d1      	beq.n	80c4c <PIOB_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80ca8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
   80caa:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80cac:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
   80cae:	439d      	bics	r5, r3
   80cb0:	d0d2      	beq.n	80c58 <PIOB_Handler+0x40>
   80cb2:	e7cb      	b.n	80c4c <PIOB_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80cb4:	6e61      	ldr	r1, [r4, #100]	; 0x64
   80cb6:	4229      	tst	r1, r5
   80cb8:	d0ce      	beq.n	80c58 <PIOB_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80cba:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
    pio_handler_process(PIOB, ID_PIOB);
}
   80cbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80cc0:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80cc2:	6d61      	ldr	r1, [r4, #84]	; 0x54
   80cc4:	4229      	tst	r1, r5
   80cc6:	d0c4      	beq.n	80c52 <PIOB_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80cc8:	6de3      	ldr	r3, [r4, #92]	; 0x5c
   80cca:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80ccc:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
   80cce:	439d      	bics	r5, r3
   80cd0:	d0c2      	beq.n	80c58 <PIOB_Handler+0x40>
   80cd2:	e7be      	b.n	80c52 <PIOB_Handler+0x3a>
   80cd4:	0008283d 	.word	0x0008283d
   80cd8:	400e0e00 	.word	0x400e0e00
   80cdc:	00082841 	.word	0x00082841
   80ce0:	20003488 	.word	0x20003488

00080ce4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80ce4:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   80ce6:	4b2e      	ldr	r3, [pc, #184]	; (80da0 <PIOC_Handler+0xbc>)
   80ce8:	482e      	ldr	r0, [pc, #184]	; (80da4 <PIOC_Handler+0xc0>)
   80cea:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   80cec:	4b2e      	ldr	r3, [pc, #184]	; (80da8 <PIOC_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   80cee:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80cf0:	482c      	ldr	r0, [pc, #176]	; (80da4 <PIOC_Handler+0xc0>)
   80cf2:	4798      	blx	r3
	if (status != 0) {
   80cf4:	4005      	ands	r5, r0
   80cf6:	d015      	beq.n	80d24 <PIOC_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   80cf8:	4c2c      	ldr	r4, [pc, #176]	; (80dac <PIOC_Handler+0xc8>)
   80cfa:	6820      	ldr	r0, [r4, #0]
   80cfc:	280c      	cmp	r0, #12
   80cfe:	d012      	beq.n	80d26 <PIOC_Handler+0x42>
   80d00:	6920      	ldr	r0, [r4, #16]
   80d02:	280c      	cmp	r0, #12
   80d04:	d018      	beq.n	80d38 <PIOC_Handler+0x54>
   80d06:	6a20      	ldr	r0, [r4, #32]
   80d08:	280c      	cmp	r0, #12
   80d0a:	d01e      	beq.n	80d4a <PIOC_Handler+0x66>
   80d0c:	6b20      	ldr	r0, [r4, #48]	; 0x30
   80d0e:	280c      	cmp	r0, #12
   80d10:	d024      	beq.n	80d5c <PIOC_Handler+0x78>
   80d12:	6c20      	ldr	r0, [r4, #64]	; 0x40
   80d14:	280c      	cmp	r0, #12
   80d16:	d02a      	beq.n	80d6e <PIOC_Handler+0x8a>
   80d18:	6d20      	ldr	r0, [r4, #80]	; 0x50
   80d1a:	280c      	cmp	r0, #12
   80d1c:	d037      	beq.n	80d8e <PIOC_Handler+0xaa>
   80d1e:	6e20      	ldr	r0, [r4, #96]	; 0x60
   80d20:	280c      	cmp	r0, #12
   80d22:	d02d      	beq.n	80d80 <PIOC_Handler+0x9c>
   80d24:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d26:	6861      	ldr	r1, [r4, #4]
   80d28:	420d      	tst	r5, r1
   80d2a:	d0e9      	beq.n	80d00 <PIOC_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d2c:	68e3      	ldr	r3, [r4, #12]
   80d2e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d30:	6863      	ldr	r3, [r4, #4]
		while (status != 0) {
   80d32:	439d      	bics	r5, r3
   80d34:	d0f6      	beq.n	80d24 <PIOC_Handler+0x40>
   80d36:	e7e3      	b.n	80d00 <PIOC_Handler+0x1c>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d38:	6961      	ldr	r1, [r4, #20]
   80d3a:	4229      	tst	r1, r5
   80d3c:	d0e3      	beq.n	80d06 <PIOC_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d3e:	69e3      	ldr	r3, [r4, #28]
   80d40:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d42:	6963      	ldr	r3, [r4, #20]
		while (status != 0) {
   80d44:	439d      	bics	r5, r3
   80d46:	d0ed      	beq.n	80d24 <PIOC_Handler+0x40>
   80d48:	e7dd      	b.n	80d06 <PIOC_Handler+0x22>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
   80d4c:	4229      	tst	r1, r5
   80d4e:	d0dd      	beq.n	80d0c <PIOC_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d50:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   80d52:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d54:	6a63      	ldr	r3, [r4, #36]	; 0x24
		while (status != 0) {
   80d56:	439d      	bics	r5, r3
   80d58:	d0e4      	beq.n	80d24 <PIOC_Handler+0x40>
   80d5a:	e7d7      	b.n	80d0c <PIOC_Handler+0x28>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d5c:	6b61      	ldr	r1, [r4, #52]	; 0x34
   80d5e:	4229      	tst	r1, r5
   80d60:	d0d7      	beq.n	80d12 <PIOC_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d62:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   80d64:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d66:	6b63      	ldr	r3, [r4, #52]	; 0x34
		while (status != 0) {
   80d68:	439d      	bics	r5, r3
   80d6a:	d0db      	beq.n	80d24 <PIOC_Handler+0x40>
   80d6c:	e7d1      	b.n	80d12 <PIOC_Handler+0x2e>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d6e:	6c61      	ldr	r1, [r4, #68]	; 0x44
   80d70:	4229      	tst	r1, r5
   80d72:	d0d1      	beq.n	80d18 <PIOC_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d74:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
   80d76:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d78:	6c63      	ldr	r3, [r4, #68]	; 0x44
		while (status != 0) {
   80d7a:	439d      	bics	r5, r3
   80d7c:	d0d2      	beq.n	80d24 <PIOC_Handler+0x40>
   80d7e:	e7cb      	b.n	80d18 <PIOC_Handler+0x34>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d80:	6e61      	ldr	r1, [r4, #100]	; 0x64
   80d82:	4229      	tst	r1, r5
   80d84:	d0ce      	beq.n	80d24 <PIOC_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d86:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
	pio_handler_process(PIOC, ID_PIOC);
}
   80d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d8c:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80d8e:	6d61      	ldr	r1, [r4, #84]	; 0x54
   80d90:	4229      	tst	r1, r5
   80d92:	d0c4      	beq.n	80d1e <PIOC_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80d94:	6de3      	ldr	r3, [r4, #92]	; 0x5c
   80d96:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   80d98:	6d63      	ldr	r3, [r4, #84]	; 0x54
		while (status != 0) {
   80d9a:	439d      	bics	r5, r3
   80d9c:	d0c2      	beq.n	80d24 <PIOC_Handler+0x40>
   80d9e:	e7be      	b.n	80d1e <PIOC_Handler+0x3a>
   80da0:	0008283d 	.word	0x0008283d
   80da4:	400e1000 	.word	0x400e1000
   80da8:	00082841 	.word	0x00082841
   80dac:	20003488 	.word	0x20003488

00080db0 <process_events>:
/*
TODO: Need to have a proper event loop not this crappy hack
*/

void process_events(void)
{
   80db0:	b538      	push	{r3, r4, r5, lr}
	static uint32_t nextCnt = 0;

	/* Hack for now - fixed at 100 mS, one event */	
	if (task_tickCnt > nextCnt){
   80db2:	4d0a      	ldr	r5, [pc, #40]	; (80ddc <process_events+0x2c>)
   80db4:	4c0a      	ldr	r4, [pc, #40]	; (80de0 <process_events+0x30>)
   80db6:	682a      	ldr	r2, [r5, #0]
   80db8:	6823      	ldr	r3, [r4, #0]
   80dba:	429a      	cmp	r2, r3
   80dbc:	d800      	bhi.n	80dc0 <process_events+0x10>
   80dbe:	bd38      	pop	{r3, r4, r5, pc}

		do_task();
   80dc0:	4b08      	ldr	r3, [pc, #32]	; (80de4 <process_events+0x34>)
   80dc2:	4798      	blx	r3

		nextCnt += 100;
   80dc4:	6823      	ldr	r3, [r4, #0]
		if (nextCnt < task_tickCnt){
   80dc6:	682a      	ldr	r2, [r5, #0]
		nextCnt += 100;
   80dc8:	3364      	adds	r3, #100	; 0x64
		if (nextCnt < task_tickCnt){
   80dca:	4293      	cmp	r3, r2
		nextCnt += 100;
   80dcc:	6023      	str	r3, [r4, #0]
		if (nextCnt < task_tickCnt){
   80dce:	d2f6      	bcs.n	80dbe <process_events+0xe>
			task_tickCnt = 0;
   80dd0:	2200      	movs	r2, #0
			nextCnt = 100;
   80dd2:	2364      	movs	r3, #100	; 0x64
			task_tickCnt = 0;
   80dd4:	602a      	str	r2, [r5, #0]
			nextCnt = 100;
   80dd6:	6023      	str	r3, [r4, #0]
   80dd8:	bd38      	pop	{r3, r4, r5, pc}
   80dda:	bf00      	nop
   80ddc:	20003588 	.word	0x20003588
   80de0:	200034f8 	.word	0x200034f8
   80de4:	00080541 	.word	0x00080541

00080de8 <udd_ctrl_send_zlp_in>:

static void udd_ctrl_send_zlp_in(void)
{
	irqflags_t flags;

	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   80de8:	2203      	movs	r2, #3
   80dea:	4b12      	ldr	r3, [pc, #72]	; (80e34 <udd_ctrl_send_zlp_in+0x4c>)
{
   80dec:	b470      	push	{r4, r5, r6}
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   80dee:	701a      	strb	r2, [r3, #0]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   80df0:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   80df4:	b672      	cpsid	i
   80df6:	f3bf 8f5f 	dmb	sy

	// Validate and send empty IN packet on control endpoint
	flags = cpu_irq_save();
	// Send ZLP on IN endpoint
	udd_ack_in_send(0);
   80dfa:	f44f 6080 	mov.w	r0, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
	udd_enable_in_send_interrupt(0);
	// To detect a protocol error, enable nak interrupt on data OUT phase
	udd_ack_nak_out(0);
   80dfe:	f44f 4100 	mov.w	r1, #32768	; 0x8000
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
   80e02:	2600      	movs	r6, #0
	udd_raise_tx_pkt_ready(0);
   80e04:	f44f 6500 	mov.w	r5, #2048	; 0x800
	udd_ack_in_send(0);
   80e08:	4b0b      	ldr	r3, [pc, #44]	; (80e38 <udd_ctrl_send_zlp_in+0x50>)
   80e0a:	4c0c      	ldr	r4, [pc, #48]	; (80e3c <udd_ctrl_send_zlp_in+0x54>)
   80e0c:	7026      	strb	r6, [r4, #0]
   80e0e:	f8c3 0118 	str.w	r0, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   80e12:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   80e16:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	udd_ack_nak_out(0);
   80e1a:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   80e1e:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   80e22:	b922      	cbnz	r2, 80e2e <udd_ctrl_send_zlp_in+0x46>
		cpu_irq_enable();
   80e24:	2301      	movs	r3, #1
   80e26:	7023      	strb	r3, [r4, #0]
   80e28:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   80e2c:	b662      	cpsie	i
	cpu_irq_restore(flags);
}
   80e2e:	bc70      	pop	{r4, r5, r6}
   80e30:	4770      	bx	lr
   80e32:	bf00      	nop
   80e34:	20003502 	.word	0x20003502
   80e38:	400a4000 	.word	0x400a4000
   80e3c:	20000244 	.word	0x20000244

00080e40 <udd_ep_trans_done>:
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
			UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}

static void udd_ep_trans_done(udd_ep_id_t ep)
{
   80e40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   80e44:	1e44      	subs	r4, r0, #1

	if (!ptr_job->busy) {
   80e46:	0066      	lsls	r6, r4, #1
   80e48:	4a6c      	ldr	r2, [pc, #432]	; (80ffc <udd_ep_trans_done+0x1bc>)
   80e4a:	1933      	adds	r3, r6, r4
   80e4c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   80e50:	7d19      	ldrb	r1, [r3, #20]
   80e52:	07cd      	lsls	r5, r1, #31
   80e54:	d53d      	bpl.n	80ed2 <udd_ep_trans_done+0x92>
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   80e56:	f8d3 e00c 	ldr.w	lr, [r3, #12]
   80e5a:	689d      	ldr	r5, [r3, #8]
   80e5c:	45ae      	cmp	lr, r5
   80e5e:	f000 8081 	beq.w	80f64 <udd_ep_trans_done+0x124>
		// Need to send or receive other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   80e62:	eba5 050e 	sub.w	r5, r5, lr

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   80e66:	f5b5 3f80 	cmp.w	r5, #65536	; 0x10000
   80e6a:	ea4f 1140 	mov.w	r1, r0, lsl #5
   80e6e:	d832      	bhi.n	80ed6 <udd_ep_trans_done+0x96>
   80e70:	f101 2c40 	add.w	ip, r1, #1073758208	; 0x40004000
   80e74:	f50c 2c20 	add.w	ip, ip, #655360	; 0xa0000
			// Set 0 to transfer the maximum
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
		}
		if (Is_udd_endpoint_in(ep)) {
   80e78:	f8dc 8100 	ldr.w	r8, [ip, #256]	; 0x100
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   80e7c:	042f      	lsls	r7, r5, #16
		if (Is_udd_endpoint_in(ep)) {
   80e7e:	f018 0f08 	tst.w	r8, #8
   80e82:	d033      	beq.n	80eec <udd_ep_trans_done+0xac>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   80e84:	2108      	movs	r1, #8
   80e86:	f8dc c100 	ldr.w	ip, [ip, #256]	; 0x100
   80e8a:	f00c 0c07 	and.w	ip, ip, #7
   80e8e:	fa01 f10c 	lsl.w	r1, r1, ip
   80e92:	3901      	subs	r1, #1
   80e94:	4229      	tst	r1, r5
   80e96:	f000 808c 	beq.w	80fb2 <udd_ep_trans_done+0x172>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_B_EN;
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   80e9a:	7d19      	ldrb	r1, [r3, #20]
   80e9c:	f047 0c29 	orr.w	ip, r7, #41	; 0x29
   80ea0:	f36f 0141 	bfc	r1, #1, #1
   80ea4:	7519      	strb	r1, [r3, #20]
   80ea6:	e02d      	b.n	80f04 <udd_ep_trans_done+0xc4>
	if (cpu_irq_is_enabled_flags(flags))
   80ea8:	f1b8 0f00 	cmp.w	r8, #0
   80eac:	f000 809f 	beq.w	80fee <udd_ep_trans_done+0x1ae>
		cpu_irq_restore(flags);

		// Here a ZLP has been received
		// and the DMA transfer must be not started.
		// It is the end of transfer
		ptr_job->buf_size = ptr_job->buf_cnt;
   80eb0:	1931      	adds	r1, r6, r4
   80eb2:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
   80eb6:	68cd      	ldr	r5, [r1, #12]
	}
	if (Is_udd_endpoint_in(ep)) {
   80eb8:	4f51      	ldr	r7, [pc, #324]	; (81000 <udd_ep_trans_done+0x1c0>)
   80eba:	f100 0308 	add.w	r3, r0, #8
		ptr_job->buf_size = ptr_job->buf_cnt;
   80ebe:	608d      	str	r5, [r1, #8]
	if (Is_udd_endpoint_in(ep)) {
   80ec0:	015d      	lsls	r5, r3, #5
   80ec2:	597d      	ldr	r5, [r7, r5]
   80ec4:	7d09      	ldrb	r1, [r1, #20]
   80ec6:	072f      	lsls	r7, r5, #28
   80ec8:	d501      	bpl.n	80ece <udd_ep_trans_done+0x8e>
		if (ptr_job->b_shortpacket) {
   80eca:	078d      	lsls	r5, r1, #30
   80ecc:	d453      	bmi.n	80f76 <udd_ep_trans_done+0x136>
	if (ptr_job->busy == false) {
   80ece:	07c9      	lsls	r1, r1, #31
   80ed0:	d472      	bmi.n	80fb8 <udd_ep_trans_done+0x178>
   80ed2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80ed6:	f101 2540 	add.w	r5, r1, #1073758208	; 0x40004000
   80eda:	f505 2520 	add.w	r5, r5, #655360	; 0xa0000
		if (Is_udd_endpoint_in(ep)) {
   80ede:	f8d5 7100 	ldr.w	r7, [r5, #256]	; 0x100
   80ee2:	f017 0708 	ands.w	r7, r7, #8
   80ee6:	d155      	bne.n	80f94 <udd_ep_trans_done+0x154>
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   80ee8:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   80eec:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
   80ef0:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   80ef4:	f8d1 3100 	ldr.w	r3, [r1, #256]	; 0x100
   80ef8:	f3c3 1301 	ubfx	r3, r3, #4, #2
   80efc:	2b01      	cmp	r3, #1
   80efe:	d050      	beq.n	80fa2 <udd_ep_trans_done+0x162>
   80f00:	f047 0c35 	orr.w	ip, r7, #53	; 0x35
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   80f04:	1931      	adds	r1, r6, r4
   80f06:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
   80f0a:	684f      	ldr	r7, [r1, #4]
   80f0c:	4b3d      	ldr	r3, [pc, #244]	; (81004 <udd_ep_trans_done+0x1c4>)
   80f0e:	4477      	add	r7, lr
   80f10:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   80f14:	605f      	str	r7, [r3, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   80f16:	f3ef 8810 	mrs	r8, PRIMASK
  __ASM volatile ("cpsid i");
   80f1a:	b672      	cpsid	i
   80f1c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   80f20:	f04f 0e00 	mov.w	lr, #0
   80f24:	4f38      	ldr	r7, [pc, #224]	; (81008 <udd_ep_trans_done+0x1c8>)
   80f26:	f887 e000 	strb.w	lr, [r7]
		if (!(udd_endpoint_dma_get_status(ep)
   80f2a:	f8d3 e00c 	ldr.w	lr, [r3, #12]
   80f2e:	f01e 0f10 	tst.w	lr, #16
   80f32:	d1b9      	bne.n	80ea8 <udd_ep_trans_done+0x68>
			udd_enable_endpoint_dma_interrupt(ep);
   80f34:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   80f38:	f8c3 c008 	str.w	ip, [r3, #8]
			ptr_job->buf_cnt += next_trans;
   80f3c:	68cb      	ldr	r3, [r1, #12]
			udd_enable_endpoint_dma_interrupt(ep);
   80f3e:	4830      	ldr	r0, [pc, #192]	; (81000 <udd_ep_trans_done+0x1c0>)
			ptr_job->buf_cnt += next_trans;
   80f40:	442b      	add	r3, r5
			ptr_job->buf_load = next_trans;
   80f42:	610d      	str	r5, [r1, #16]
			ptr_job->buf_cnt += next_trans;
   80f44:	60cb      	str	r3, [r1, #12]
			udd_enable_endpoint_dma_interrupt(ep);
   80f46:	6903      	ldr	r3, [r0, #16]
   80f48:	fa02 f404 	lsl.w	r4, r2, r4
   80f4c:	431c      	orrs	r4, r3
   80f4e:	6104      	str	r4, [r0, #16]
	if (cpu_irq_is_enabled_flags(flags))
   80f50:	f1b8 0f00 	cmp.w	r8, #0
   80f54:	d1bd      	bne.n	80ed2 <udd_ep_trans_done+0x92>
		cpu_irq_enable();
   80f56:	2301      	movs	r3, #1
   80f58:	703b      	strb	r3, [r7, #0]
   80f5a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   80f5e:	b662      	cpsie	i
   80f60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (Is_udd_endpoint_in(ep)) {
   80f64:	f100 0308 	add.w	r3, r0, #8
   80f68:	4f25      	ldr	r7, [pc, #148]	; (81000 <udd_ep_trans_done+0x1c0>)
   80f6a:	015d      	lsls	r5, r3, #5
   80f6c:	597d      	ldr	r5, [r7, r5]
   80f6e:	072d      	lsls	r5, r5, #28
   80f70:	d522      	bpl.n	80fb8 <udd_ep_trans_done+0x178>
		if (ptr_job->b_shortpacket) {
   80f72:	0789      	lsls	r1, r1, #30
   80f74:	d520      	bpl.n	80fb8 <udd_ep_trans_done+0x178>
			dbg_print("zlp ");
			// Need to send a ZLP (No possible with USB DMA)
			// enable interrupt to wait a free bank to sent ZLP
			udd_enable_tx_pkt_ready_interrupt(ep);
   80f76:	f44f 6400 	mov.w	r4, #2048	; 0x800
			udd_enable_endpoint_interrupt(ep);
   80f7a:	f44f 7280 	mov.w	r2, #256	; 0x100
			udd_enable_tx_pkt_ready_interrupt(ep);
   80f7e:	4920      	ldr	r1, [pc, #128]	; (81000 <udd_ep_trans_done+0x1c0>)
			udd_enable_endpoint_interrupt(ep);
   80f80:	fa02 f000 	lsl.w	r0, r2, r0
			udd_enable_tx_pkt_ready_interrupt(ep);
   80f84:	eb01 1343 	add.w	r3, r1, r3, lsl #5
   80f88:	605c      	str	r4, [r3, #4]
			udd_enable_endpoint_interrupt(ep);
   80f8a:	690b      	ldr	r3, [r1, #16]
   80f8c:	4318      	orrs	r0, r3
   80f8e:	6108      	str	r0, [r1, #16]
			return;
   80f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   80f94:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
   80f98:	f04f 0c21 	mov.w	ip, #33	; 0x21
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   80f9c:	f44f 3580 	mov.w	r5, #65536	; 0x10000
   80fa0:	e7b0      	b.n	80f04 <udd_ep_trans_done+0xc4>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   80fa2:	2308      	movs	r3, #8
   80fa4:	f8d1 1100 	ldr.w	r1, [r1, #256]	; 0x100
   80fa8:	f001 0107 	and.w	r1, r1, #7
   80fac:	408b      	lsls	r3, r1
   80fae:	42ab      	cmp	r3, r5
   80fb0:	d2a6      	bcs.n	80f00 <udd_ep_trans_done+0xc0>
   80fb2:	f047 0c21 	orr.w	ip, r7, #33	; 0x21
   80fb6:	e7a5      	b.n	80f04 <udd_ep_trans_done+0xc4>
	ptr_job->busy = false;
   80fb8:	1935      	adds	r5, r6, r4
   80fba:	00ed      	lsls	r5, r5, #3
   80fbc:	1951      	adds	r1, r2, r5
   80fbe:	7d0f      	ldrb	r7, [r1, #20]
	if (NULL == ptr_job->call_trans) {
   80fc0:	5955      	ldr	r5, [r2, r5]
	ptr_job->busy = false;
   80fc2:	f36f 0700 	bfc	r7, #0, #1
   80fc6:	750f      	strb	r7, [r1, #20]
	if (NULL == ptr_job->call_trans) {
   80fc8:	2d00      	cmp	r5, #0
   80fca:	d082      	beq.n	80ed2 <udd_ep_trans_done+0x92>
	if (Is_udd_endpoint_in(ep_num)) {
   80fcc:	490c      	ldr	r1, [pc, #48]	; (81000 <udd_ep_trans_done+0x1c0>)
   80fce:	015b      	lsls	r3, r3, #5
   80fd0:	58cb      	ldr	r3, [r1, r3]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   80fd2:	4434      	add	r4, r6
	if (Is_udd_endpoint_in(ep_num)) {
   80fd4:	071f      	lsls	r7, r3, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   80fd6:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
		ep_num |= USB_EP_DIR_IN;
   80fda:	bf48      	it	mi
   80fdc:	f040 0080 	orrmi.w	r0, r0, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   80fe0:	6891      	ldr	r1, [r2, #8]
   80fe2:	462b      	mov	r3, r5
		}
	}
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
}
   80fe4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   80fe8:	4602      	mov	r2, r0
   80fea:	2000      	movs	r0, #0
   80fec:	4718      	bx	r3
   80fee:	2301      	movs	r3, #1
   80ff0:	703b      	strb	r3, [r7, #0]
   80ff2:	f3bf 8f5f 	dmb	sy
   80ff6:	b662      	cpsie	i
   80ff8:	e75a      	b.n	80eb0 <udd_ep_trans_done+0x70>
   80ffa:	bf00      	nop
   80ffc:	20003504 	.word	0x20003504
   81000:	400a4000 	.word	0x400a4000
   81004:	400a4300 	.word	0x400a4300
   81008:	20000244 	.word	0x20000244

0008100c <udd_ctrl_in_sent>:
{
   8100c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81010:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81014:	b672      	cpsid	i
   81016:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8101a:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   8101c:	f44f 6180 	mov.w	r1, #1024	; 0x400
   81020:	4e61      	ldr	r6, [pc, #388]	; (811a8 <udd_ctrl_in_sent+0x19c>)
   81022:	4a62      	ldr	r2, [pc, #392]	; (811ac <udd_ctrl_in_sent+0x1a0>)
   81024:	7030      	strb	r0, [r6, #0]
   81026:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   8102a:	2b00      	cmp	r3, #0
   8102c:	d05a      	beq.n	810e4 <udd_ctrl_in_sent+0xd8>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   8102e:	f8df 8190 	ldr.w	r8, [pc, #400]	; 811c0 <udd_ctrl_in_sent+0x1b4>
   81032:	f898 3000 	ldrb.w	r3, [r8]
   81036:	2b03      	cmp	r3, #3
   81038:	d05f      	beq.n	810fa <udd_ctrl_in_sent+0xee>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   8103a:	4f5d      	ldr	r7, [pc, #372]	; (811b0 <udd_ctrl_in_sent+0x1a4>)
   8103c:	4d5d      	ldr	r5, [pc, #372]	; (811b4 <udd_ctrl_in_sent+0x1a8>)
   8103e:	8838      	ldrh	r0, [r7, #0]
   81040:	89ac      	ldrh	r4, [r5, #12]
   81042:	1a24      	subs	r4, r4, r0
   81044:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   81046:	2c00      	cmp	r4, #0
   81048:	d033      	beq.n	810b2 <udd_ctrl_in_sent+0xa6>
   8104a:	4601      	mov	r1, r0
   8104c:	f8df 9174 	ldr.w	r9, [pc, #372]	; 811c4 <udd_ctrl_in_sent+0x1b8>
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   81050:	2c3f      	cmp	r4, #63	; 0x3f
		b_shortpacket = true;
   81052:	bf92      	itee	ls
   81054:	2301      	movls	r3, #1
		b_shortpacket = false;
   81056:	2300      	movhi	r3, #0
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   81058:	2440      	movhi	r4, #64	; 0x40
   8105a:	f889 3000 	strb.w	r3, [r9]
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   8105e:	68aa      	ldr	r2, [r5, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81060:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   81064:	b672      	cpsid	i
   81066:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8106a:	f04f 0e00 	mov.w	lr, #0
	if (Is_udd_out_received(0)) {
   8106e:	4b4f      	ldr	r3, [pc, #316]	; (811ac <udd_ctrl_in_sent+0x1a0>)
   81070:	f886 e000 	strb.w	lr, [r6]
   81074:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
   81078:	059b      	lsls	r3, r3, #22
   8107a:	d45d      	bmi.n	81138 <udd_ctrl_in_sent+0x12c>
	for (i = 0; i < nb_remain; i++) {
   8107c:	b144      	cbz	r4, 81090 <udd_ctrl_in_sent+0x84>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   8107e:	4b4e      	ldr	r3, [pc, #312]	; (811b8 <udd_ctrl_in_sent+0x1ac>)
   81080:	440a      	add	r2, r1
		*ptr_dest++ = *ptr_src++;
   81082:	f812 1b01 	ldrb.w	r1, [r2], #1
   81086:	f803 1b01 	strb.w	r1, [r3], #1
	for (i = 0; i < nb_remain; i++) {
   8108a:	b2d9      	uxtb	r1, r3
   8108c:	42a1      	cmp	r1, r4
   8108e:	d3f8      	bcc.n	81082 <udd_ctrl_in_sent+0x76>
	udd_ack_in_send(0);
   81090:	f44f 6280 	mov.w	r2, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   81094:	f44f 6100 	mov.w	r1, #2048	; 0x800
	udd_ack_in_send(0);
   81098:	4b44      	ldr	r3, [pc, #272]	; (811ac <udd_ctrl_in_sent+0x1a0>)
	udd_ctrl_payload_buf_cnt += nb_remain;
   8109a:	4404      	add	r4, r0
   8109c:	803c      	strh	r4, [r7, #0]
	udd_ack_in_send(0);
   8109e:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   810a2:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   810a6:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   810aa:	2d00      	cmp	r5, #0
   810ac:	d05d      	beq.n	8116a <udd_ctrl_in_sent+0x15e>
   810ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   810b2:	4a42      	ldr	r2, [pc, #264]	; (811bc <udd_ctrl_in_sent+0x1b0>)
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   810b4:	88e9      	ldrh	r1, [r5, #6]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   810b6:	8813      	ldrh	r3, [r2, #0]
   810b8:	4403      	add	r3, r0
   810ba:	b29b      	uxth	r3, r3
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   810bc:	4299      	cmp	r1, r3
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   810be:	8013      	strh	r3, [r2, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   810c0:	d040      	beq.n	81144 <udd_ctrl_in_sent+0x138>
				|| b_shortpacket) {
   810c2:	f8df 9100 	ldr.w	r9, [pc, #256]	; 811c4 <udd_ctrl_in_sent+0x1b8>
   810c6:	f899 a000 	ldrb.w	sl, [r9]
   810ca:	f1ba 0f00 	cmp.w	sl, #0
   810ce:	d139      	bne.n	81144 <udd_ctrl_in_sent+0x138>
		if ((!udd_g_ctrlreq.over_under_run)
   810d0:	696b      	ldr	r3, [r5, #20]
   810d2:	2b00      	cmp	r3, #0
   810d4:	d065      	beq.n	811a2 <udd_ctrl_in_sent+0x196>
				|| (!udd_g_ctrlreq.over_under_run())) {
   810d6:	4798      	blx	r3
   810d8:	2800      	cmp	r0, #0
   810da:	d15d      	bne.n	81198 <udd_ctrl_in_sent+0x18c>
   810dc:	8838      	ldrh	r0, [r7, #0]
		b_shortpacket = true;
   810de:	2301      	movs	r3, #1
   810e0:	4601      	mov	r1, r0
   810e2:	e7ba      	b.n	8105a <udd_ctrl_in_sent+0x4e>
		cpu_irq_enable();
   810e4:	2301      	movs	r3, #1
   810e6:	7033      	strb	r3, [r6, #0]
   810e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   810ec:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   810ee:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 811c0 <udd_ctrl_in_sent+0x1b4>
   810f2:	f898 3000 	ldrb.w	r3, [r8]
   810f6:	2b03      	cmp	r3, #3
   810f8:	d19f      	bne.n	8103a <udd_ctrl_in_sent+0x2e>
	if (udd_g_ctrlreq.callback) {
   810fa:	4d2e      	ldr	r5, [pc, #184]	; (811b4 <udd_ctrl_in_sent+0x1a8>)
   810fc:	692b      	ldr	r3, [r5, #16]
   810fe:	b103      	cbz	r3, 81102 <udd_ctrl_in_sent+0xf6>
		udd_g_ctrlreq.callback();
   81100:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81102:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81106:	b672      	cpsid	i
   81108:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8110c:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   8110e:	f44f 6180 	mov.w	r1, #1024	; 0x400
   81112:	4a26      	ldr	r2, [pc, #152]	; (811ac <udd_ctrl_in_sent+0x1a0>)
   81114:	7030      	strb	r0, [r6, #0]
   81116:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   8111a:	2b00      	cmp	r3, #0
   8111c:	d036      	beq.n	8118c <udd_ctrl_in_sent+0x180>
	udd_g_ctrlreq.callback = NULL;
   8111e:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   81120:	f44f 7100 	mov.w	r1, #512	; 0x200
   81124:	4a21      	ldr	r2, [pc, #132]	; (811ac <udd_ctrl_in_sent+0x1a0>)
   81126:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.callback = NULL;
   8112a:	612b      	str	r3, [r5, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   8112c:	616b      	str	r3, [r5, #20]
	udd_g_ctrlreq.payload_size = 0;
   8112e:	81ab      	strh	r3, [r5, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81130:	f888 3000 	strb.w	r3, [r8]
   81134:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81138:	b1f5      	cbz	r5, 81178 <udd_ctrl_in_sent+0x16c>
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   8113a:	2304      	movs	r3, #4
   8113c:	f888 3000 	strb.w	r3, [r8]
		return; // Exit of IN DATA phase
   81140:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81144:	2304      	movs	r3, #4
   81146:	f888 3000 	strb.w	r3, [r8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8114a:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   8114e:	b672      	cpsid	i
   81150:	f3bf 8f5f 	dmb	sy
	udd_ack_nak_in(0);
   81154:	f44f 4180 	mov.w	r1, #16384	; 0x4000
	cpu_irq_disable();
   81158:	2000      	movs	r0, #0
   8115a:	4a14      	ldr	r2, [pc, #80]	; (811ac <udd_ctrl_in_sent+0x1a0>)
   8115c:	7030      	strb	r0, [r6, #0]
   8115e:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_enable_nak_in_interrupt(0);
   81162:	f8c2 1104 	str.w	r1, [r2, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81166:	2b00      	cmp	r3, #0
   81168:	d1a1      	bne.n	810ae <udd_ctrl_in_sent+0xa2>
		cpu_irq_enable();
   8116a:	2301      	movs	r3, #1
   8116c:	7033      	strb	r3, [r6, #0]
   8116e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81172:	b662      	cpsie	i
   81174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   81178:	2301      	movs	r3, #1
   8117a:	7033      	strb	r3, [r6, #0]
   8117c:	f3bf 8f5f 	dmb	sy
   81180:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81182:	2304      	movs	r3, #4
   81184:	f888 3000 	strb.w	r3, [r8]
		return; // Exit of IN DATA phase
   81188:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8118c:	2301      	movs	r3, #1
   8118e:	7033      	strb	r3, [r6, #0]
   81190:	f3bf 8f5f 	dmb	sy
   81194:	b662      	cpsie	i
   81196:	e7c2      	b.n	8111e <udd_ctrl_in_sent+0x112>
			udd_ctrl_payload_buf_cnt = 0;
   81198:	803c      	strh	r4, [r7, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   8119a:	4620      	mov	r0, r4
   8119c:	4651      	mov	r1, sl
   8119e:	89ac      	ldrh	r4, [r5, #12]
   811a0:	e756      	b.n	81050 <udd_ctrl_in_sent+0x44>
   811a2:	4601      	mov	r1, r0
		b_shortpacket = true;
   811a4:	2301      	movs	r3, #1
   811a6:	e758      	b.n	8105a <udd_ctrl_in_sent+0x4e>
   811a8:	20000244 	.word	0x20000244
   811ac:	400a4000 	.word	0x400a4000
   811b0:	200034fe 	.word	0x200034fe
   811b4:	2000358c 	.word	0x2000358c
   811b8:	20180000 	.word	0x20180000
   811bc:	20003500 	.word	0x20003500
   811c0:	20003502 	.word	0x20003502
   811c4:	200034fc 	.word	0x200034fc

000811c8 <UDPHS_Handler>:
{
   811c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_enable_periph_ck();
   811cc:	4bb0      	ldr	r3, [pc, #704]	; (81490 <UDPHS_Handler+0x2c8>)
   811ce:	201d      	movs	r0, #29
   811d0:	4798      	blx	r3
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   811d2:	4bb0      	ldr	r3, [pc, #704]	; (81494 <UDPHS_Handler+0x2cc>)
   811d4:	4798      	blx	r3
   811d6:	b920      	cbnz	r0, 811e2 <UDPHS_Handler+0x1a>
   811d8:	4baf      	ldr	r3, [pc, #700]	; (81498 <UDPHS_Handler+0x2d0>)
   811da:	695b      	ldr	r3, [r3, #20]
   811dc:	f013 0302 	ands.w	r3, r3, #2
   811e0:	d04b      	beq.n	8127a <UDPHS_Handler+0xb2>
	if (Is_udd_sof()) {
   811e2:	4bad      	ldr	r3, [pc, #692]	; (81498 <UDPHS_Handler+0x2d0>)
   811e4:	695a      	ldr	r2, [r3, #20]
   811e6:	0717      	lsls	r7, r2, #28
   811e8:	d50a      	bpl.n	81200 <UDPHS_Handler+0x38>
		udd_ack_sof();
   811ea:	2208      	movs	r2, #8
   811ec:	619a      	str	r2, [r3, #24]
		if (Is_udd_full_speed_mode()) {
   811ee:	695b      	ldr	r3, [r3, #20]
   811f0:	07de      	lsls	r6, r3, #31
   811f2:	d401      	bmi.n	811f8 <UDPHS_Handler+0x30>
			udc_sof_notify();
   811f4:	4ba9      	ldr	r3, [pc, #676]	; (8149c <UDPHS_Handler+0x2d4>)
   811f6:	4798      	blx	r3
}
   811f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_SOF_EVENT();
   811fc:	4ba8      	ldr	r3, [pc, #672]	; (814a0 <UDPHS_Handler+0x2d8>)
   811fe:	4718      	bx	r3
	if (Is_udd_msof()) {
   81200:	695a      	ldr	r2, [r3, #20]
   81202:	0755      	lsls	r5, r2, #29
   81204:	f100 80d6 	bmi.w	813b4 <UDPHS_Handler+0x1ec>
	uint32_t status = udd_get_endpoint_status(0);
   81208:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
	if (!Is_udd_endpoint_interrupt(0)) {
   8120c:	6959      	ldr	r1, [r3, #20]
   8120e:	05cc      	lsls	r4, r1, #23
   81210:	d53a      	bpl.n	81288 <UDPHS_Handler+0xc0>
	udd_disable_nak_in_interrupt(0);
   81212:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	udd_disable_nak_out_interrupt(0);
   81216:	f44f 4100 	mov.w	r1, #32768	; 0x8000
	udd_disable_nak_in_interrupt(0);
   8121a:	f8c3 0108 	str.w	r0, [r3, #264]	; 0x108
	if (Is_udd_endpoint_status_setup_received(status)) {
   8121e:	04d0      	lsls	r0, r2, #19
	udd_disable_nak_out_interrupt(0);
   81220:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
	if (Is_udd_endpoint_status_setup_received(status)) {
   81224:	f100 814e 	bmi.w	814c4 <UDPHS_Handler+0x2fc>
	if (Is_udd_endpoint_status_in_sent(status)
   81228:	0551      	lsls	r1, r2, #21
   8122a:	d504      	bpl.n	81236 <UDPHS_Handler+0x6e>
			&& Is_udd_in_send_interrupt_enabled(0)) {
   8122c:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   81230:	055f      	lsls	r7, r3, #21
   81232:	f100 8128 	bmi.w	81486 <UDPHS_Handler+0x2be>
	if (Is_udd_endpoint_status_out_received(status)) {
   81236:	0596      	lsls	r6, r2, #22
   81238:	f100 817b 	bmi.w	81532 <UDPHS_Handler+0x36a>
	if (Is_udd_endpoint_status_stall(status)) {
   8123c:	0495      	lsls	r5, r2, #18
   8123e:	d504      	bpl.n	8124a <UDPHS_Handler+0x82>
		udd_ack_stall(0);
   81240:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   81244:	4b94      	ldr	r3, [pc, #592]	; (81498 <UDPHS_Handler+0x2d0>)
   81246:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Is_udd_endpoint_status_nak_out(status)) {
   8124a:	0414      	lsls	r4, r2, #16
   8124c:	f100 80b8 	bmi.w	813c0 <UDPHS_Handler+0x1f8>
	if (Is_udd_endpoint_status_nak_in(status)) {
   81250:	0451      	lsls	r1, r2, #17
   81252:	d519      	bpl.n	81288 <UDPHS_Handler+0xc0>
		udd_ack_nak_in(0);
   81254:	f44f 4280 	mov.w	r2, #16384	; 0x4000
   81258:	4b8f      	ldr	r3, [pc, #572]	; (81498 <UDPHS_Handler+0x2d0>)
   8125a:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	if (Is_udd_out_received(0))
   8125e:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
   81262:	0592      	lsls	r2, r2, #22
   81264:	d407      	bmi.n	81276 <UDPHS_Handler+0xae>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   81266:	4a8f      	ldr	r2, [pc, #572]	; (814a4 <UDPHS_Handler+0x2dc>)
   81268:	7812      	ldrb	r2, [r2, #0]
   8126a:	2a01      	cmp	r2, #1
   8126c:	f000 831d 	beq.w	818aa <UDPHS_Handler+0x6e2>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   81270:	2a04      	cmp	r2, #4
   81272:	f000 80b4 	beq.w	813de <UDPHS_Handler+0x216>
   81276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("cpsid i");
   8127a:	b672      	cpsid	i
   8127c:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   81280:	4a89      	ldr	r2, [pc, #548]	; (814a8 <UDPHS_Handler+0x2e0>)
   81282:	7013      	strb	r3, [r2, #0]
		return;
   81284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81288:	4b83      	ldr	r3, [pc, #524]	; (81498 <UDPHS_Handler+0x2d0>)
   8128a:	691a      	ldr	r2, [r3, #16]
   8128c:	0196      	lsls	r6, r2, #6
   8128e:	d503      	bpl.n	81298 <UDPHS_Handler+0xd0>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81290:	695b      	ldr	r3, [r3, #20]
   81292:	019d      	lsls	r5, r3, #6
   81294:	f100 8334 	bmi.w	81900 <UDPHS_Handler+0x738>
			}
			udd_ep_trans_done(ep);
			return true;
		}
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81298:	4b7f      	ldr	r3, [pc, #508]	; (81498 <UDPHS_Handler+0x2d0>)
   8129a:	691a      	ldr	r2, [r3, #16]
   8129c:	0594      	lsls	r4, r2, #22
   8129e:	d53c      	bpl.n	8131a <UDPHS_Handler+0x152>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   812a0:	f8d3 212c 	ldr.w	r2, [r3, #300]	; 0x12c
   812a4:	0510      	lsls	r0, r2, #20
   812a6:	d533      	bpl.n	81310 <UDPHS_Handler+0x148>
					&& !Is_udd_tx_pkt_ready(ep)) {
   812a8:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
   812ac:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
   812b0:	d12e      	bne.n	81310 <UDPHS_Handler+0x148>
   812b2:	2201      	movs	r2, #1
		ptr_job = &udd_ep_job[ep - 1];
   812b4:	4611      	mov	r1, r2
				udd_disable_tx_pkt_ready_interrupt(ep);
   812b6:	f44f 6700 	mov.w	r7, #2048	; 0x800
   812ba:	4e77      	ldr	r6, [pc, #476]	; (81498 <UDPHS_Handler+0x2d0>)
	if (ptr_job->busy == false) {
   812bc:	0058      	lsls	r0, r3, #1
   812be:	4c7b      	ldr	r4, [pc, #492]	; (814ac <UDPHS_Handler+0x2e4>)
				udd_disable_tx_pkt_ready_interrupt(ep);
   812c0:	eb06 1541 	add.w	r5, r6, r1, lsl #5
	if (ptr_job->busy == false) {
   812c4:	4418      	add	r0, r3
				udd_disable_tx_pkt_ready_interrupt(ep);
   812c6:	f8c5 7108 	str.w	r7, [r5, #264]	; 0x108
	if (ptr_job->busy == false) {
   812ca:	eb04 00c0 	add.w	r0, r4, r0, lsl #3
				// One bank is free then send a ZLP
				udd_raise_tx_pkt_ready(ep);
   812ce:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
	if (ptr_job->busy == false) {
   812d2:	7d00      	ldrb	r0, [r0, #20]
   812d4:	07c0      	lsls	r0, r0, #31
   812d6:	d5ce      	bpl.n	81276 <UDPHS_Handler+0xae>
	ptr_job->busy = false;
   812d8:	2518      	movs	r5, #24
   812da:	fb05 f503 	mul.w	r5, r5, r3
   812de:	1960      	adds	r0, r4, r5
   812e0:	7d07      	ldrb	r7, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   812e2:	5965      	ldr	r5, [r4, r5]
	ptr_job->busy = false;
   812e4:	f36f 0700 	bfc	r7, #0, #1
   812e8:	7507      	strb	r7, [r0, #20]
	if (NULL == ptr_job->call_trans) {
   812ea:	2d00      	cmp	r5, #0
   812ec:	d0c3      	beq.n	81276 <UDPHS_Handler+0xae>
	if (Is_udd_endpoint_in(ep_num)) {
   812ee:	3108      	adds	r1, #8
   812f0:	0149      	lsls	r1, r1, #5
   812f2:	5871      	ldr	r1, [r6, r1]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   812f4:	2000      	movs	r0, #0
	if (Is_udd_endpoint_in(ep_num)) {
   812f6:	070f      	lsls	r7, r1, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   812f8:	f04f 0118 	mov.w	r1, #24
   812fc:	fb01 4303 	mla	r3, r1, r3, r4
		ep_num |= USB_EP_DIR_IN;
   81300:	bf48      	it	mi
   81302:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81306:	6899      	ldr	r1, [r3, #8]
   81308:	462b      	mov	r3, r5
}
   8130a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8130e:	4718      	bx	r3
				udd_ep_finish_job(ptr_job, false, ep);
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   81310:	4b61      	ldr	r3, [pc, #388]	; (81498 <UDPHS_Handler+0x2d0>)
   81312:	f8d3 212c 	ldr.w	r2, [r3, #300]	; 0x12c
   81316:	0351      	lsls	r1, r2, #13
   81318:	d466      	bmi.n	813e8 <UDPHS_Handler+0x220>
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   8131a:	4b5f      	ldr	r3, [pc, #380]	; (81498 <UDPHS_Handler+0x2d0>)
   8131c:	691a      	ldr	r2, [r3, #16]
   8131e:	0152      	lsls	r2, r2, #5
   81320:	d503      	bpl.n	8132a <UDPHS_Handler+0x162>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81322:	695b      	ldr	r3, [r3, #20]
   81324:	015b      	lsls	r3, r3, #5
   81326:	f100 830a 	bmi.w	8193e <UDPHS_Handler+0x776>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   8132a:	4b5b      	ldr	r3, [pc, #364]	; (81498 <UDPHS_Handler+0x2d0>)
   8132c:	691a      	ldr	r2, [r3, #16]
   8132e:	0556      	lsls	r6, r2, #21
   81330:	d51a      	bpl.n	81368 <UDPHS_Handler+0x1a0>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81332:	f8d3 214c 	ldr.w	r2, [r3, #332]	; 0x14c
   81336:	0515      	lsls	r5, r2, #20
   81338:	d507      	bpl.n	8134a <UDPHS_Handler+0x182>
					&& !Is_udd_tx_pkt_ready(ep)) {
   8133a:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
   8133e:	051c      	lsls	r4, r3, #20
   81340:	d403      	bmi.n	8134a <UDPHS_Handler+0x182>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   81342:	2202      	movs	r2, #2
		ptr_job = &udd_ep_job[ep - 1];
   81344:	2301      	movs	r3, #1
   81346:	4611      	mov	r1, r2
   81348:	e7b5      	b.n	812b6 <UDPHS_Handler+0xee>
			if (Is_udd_bank_interrupt_enabled(ep)
   8134a:	4b53      	ldr	r3, [pc, #332]	; (81498 <UDPHS_Handler+0x2d0>)
   8134c:	f8d3 214c 	ldr.w	r2, [r3, #332]	; 0x14c
   81350:	0356      	lsls	r6, r2, #13
   81352:	d509      	bpl.n	81368 <UDPHS_Handler+0x1a0>
					&& (0 == udd_nb_busy_bank(ep))) {
   81354:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
   81358:	f413 2f40 	tst.w	r3, #786432	; 0xc0000
   8135c:	d104      	bne.n	81368 <UDPHS_Handler+0x1a0>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   8135e:	f44f 6780 	mov.w	r7, #1024	; 0x400
		ptr_job = &udd_ep_job[ep - 1];
   81362:	2301      	movs	r3, #1
   81364:	2202      	movs	r2, #2
   81366:	e048      	b.n	813fa <UDPHS_Handler+0x232>
	if (Is_udd_reset()) {
   81368:	4a4b      	ldr	r2, [pc, #300]	; (81498 <UDPHS_Handler+0x2d0>)
   8136a:	6954      	ldr	r4, [r2, #20]
   8136c:	f014 0410 	ands.w	r4, r4, #16
   81370:	f040 8110 	bne.w	81594 <UDPHS_Handler+0x3cc>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81374:	6913      	ldr	r3, [r2, #16]
   81376:	0799      	lsls	r1, r3, #30
   81378:	d561      	bpl.n	8143e <UDPHS_Handler+0x276>
   8137a:	6953      	ldr	r3, [r2, #20]
   8137c:	079b      	lsls	r3, r3, #30
   8137e:	d55e      	bpl.n	8143e <UDPHS_Handler+0x276>
		udd_ack_wake_up();
   81380:	2320      	movs	r3, #32
		udd_ack_suspend();
   81382:	2502      	movs	r5, #2
		udd_ack_wake_up();
   81384:	6193      	str	r3, [r2, #24]
		udd_disable_suspend_interrupt();
   81386:	6913      	ldr	r3, [r2, #16]
		udd_disable_periph_ck();
   81388:	4949      	ldr	r1, [pc, #292]	; (814b0 <UDPHS_Handler+0x2e8>)
		udd_disable_suspend_interrupt();
   8138a:	f023 0302 	bic.w	r3, r3, #2
   8138e:	6113      	str	r3, [r2, #16]
		udd_enable_wake_up_interrupt();
   81390:	6913      	ldr	r3, [r2, #16]
		udd_disable_periph_ck();
   81392:	201d      	movs	r0, #29
		udd_enable_wake_up_interrupt();
   81394:	f043 0320 	orr.w	r3, r3, #32
   81398:	6113      	str	r3, [r2, #16]
		udd_ack_suspend();
   8139a:	6195      	str	r5, [r2, #24]
		udd_disable_periph_ck();
   8139c:	4788      	blx	r1
		UDC_SUSPEND_EVENT();
   8139e:	4b45      	ldr	r3, [pc, #276]	; (814b4 <UDPHS_Handler+0x2ec>)
   813a0:	4798      	blx	r3
	if (!b_idle && udd_b_idle) {
   813a2:	4a45      	ldr	r2, [pc, #276]	; (814b8 <UDPHS_Handler+0x2f0>)
   813a4:	7813      	ldrb	r3, [r2, #0]
   813a6:	2b00      	cmp	r3, #0
   813a8:	f040 826b 	bne.w	81882 <UDPHS_Handler+0x6ba>
	udd_b_idle = b_idle;
   813ac:	2300      	movs	r3, #0
   813ae:	7013      	strb	r3, [r2, #0]
   813b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		udd_ack_msof();
   813b4:	2104      	movs	r1, #4
   813b6:	6199      	str	r1, [r3, #24]
		udc_sof_notify();
   813b8:	4a38      	ldr	r2, [pc, #224]	; (8149c <UDPHS_Handler+0x2d4>)
}
   813ba:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udc_sof_notify();
   813be:	4710      	bx	r2
		udd_ack_nak_out(0);
   813c0:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   813c4:	4b34      	ldr	r3, [pc, #208]	; (81498 <UDPHS_Handler+0x2d0>)
   813c6:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	if (Is_udd_in_send(0))
   813ca:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
   813ce:	0550      	lsls	r0, r2, #21
   813d0:	f53f af51 	bmi.w	81276 <UDPHS_Handler+0xae>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   813d4:	4a33      	ldr	r2, [pc, #204]	; (814a4 <UDPHS_Handler+0x2dc>)
   813d6:	7812      	ldrb	r2, [r2, #0]
   813d8:	2a03      	cmp	r2, #3
   813da:	f47f af4c 	bne.w	81276 <UDPHS_Handler+0xae>
		udd_enable_stall_handshake(0);
   813de:	2220      	movs	r2, #32
   813e0:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
   813e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
					&& (0 == udd_nb_busy_bank(ep))) {
   813e8:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
   813ec:	f3c3 4381 	ubfx	r3, r3, #18, #2
   813f0:	2b00      	cmp	r3, #0
   813f2:	d192      	bne.n	8131a <UDPHS_Handler+0x152>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   813f4:	f44f 7700 	mov.w	r7, #512	; 0x200
		ptr_job = &udd_ep_job[ep - 1];
   813f8:	2201      	movs	r2, #1
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   813fa:	f44f 2080 	mov.w	r0, #262144	; 0x40000

				Assert(ptr_job->stall_requested);
				// A stall has been requested during background transfer
				ptr_job->stall_requested = false;
				udd_disable_endpoint_bank_autoswitch(ep);
				udd_enable_stall_handshake(ep);
   813fe:	2620      	movs	r6, #32
				udd_reset_data_toggle(ep);
   81400:	2540      	movs	r5, #64	; 0x40
				udd_disable_bank_interrupt(ep);
   81402:	4925      	ldr	r1, [pc, #148]	; (81498 <UDPHS_Handler+0x2d0>)
				ptr_job->stall_requested = false;
   81404:	005c      	lsls	r4, r3, #1
				udd_disable_bank_interrupt(ep);
   81406:	eb01 1242 	add.w	r2, r1, r2, lsl #5
   8140a:	f8c2 0108 	str.w	r0, [r2, #264]	; 0x108
				udd_disable_endpoint_interrupt(ep);
   8140e:	6908      	ldr	r0, [r1, #16]
				ptr_job->stall_requested = false;
   81410:	441c      	add	r4, r3
   81412:	4b26      	ldr	r3, [pc, #152]	; (814ac <UDPHS_Handler+0x2e4>)
				udd_disable_endpoint_interrupt(ep);
   81414:	ea20 0007 	bic.w	r0, r0, r7
   81418:	6108      	str	r0, [r1, #16]
				ptr_job->stall_requested = false;
   8141a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
   8141e:	7d19      	ldrb	r1, [r3, #20]
   81420:	f36f 0182 	bfc	r1, #2, #1
   81424:	7519      	strb	r1, [r3, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   81426:	f8d2 3108 	ldr.w	r3, [r2, #264]	; 0x108
   8142a:	f023 0302 	bic.w	r3, r3, #2
   8142e:	f8c2 3108 	str.w	r3, [r2, #264]	; 0x108
				udd_enable_stall_handshake(ep);
   81432:	f8c2 6114 	str.w	r6, [r2, #276]	; 0x114
				udd_reset_data_toggle(ep);
   81436:	f8c2 5118 	str.w	r5, [r2, #280]	; 0x118
   8143a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (Is_udd_wake_up()) {
   8143e:	4b16      	ldr	r3, [pc, #88]	; (81498 <UDPHS_Handler+0x2d0>)
   81440:	695b      	ldr	r3, [r3, #20]
   81442:	069f      	lsls	r7, r3, #26
   81444:	f57f af17 	bpl.w	81276 <UDPHS_Handler+0xae>
	if (b_idle && !udd_b_idle) {
   81448:	4a1b      	ldr	r2, [pc, #108]	; (814b8 <UDPHS_Handler+0x2f0>)
   8144a:	7813      	ldrb	r3, [r2, #0]
   8144c:	2b00      	cmp	r3, #0
   8144e:	f000 815f 	beq.w	81710 <UDPHS_Handler+0x548>
	udd_b_idle = b_idle;
   81452:	2401      	movs	r4, #1
		udd_ack_suspend();
   81454:	2002      	movs	r0, #2
		udd_ack_wake_up();
   81456:	2120      	movs	r1, #32
		udd_ack_suspend();
   81458:	4b0f      	ldr	r3, [pc, #60]	; (81498 <UDPHS_Handler+0x2d0>)
	udd_b_idle = b_idle;
   8145a:	7014      	strb	r4, [r2, #0]
		udd_ack_suspend();
   8145c:	6198      	str	r0, [r3, #24]
		udd_ack_wake_up();
   8145e:	6199      	str	r1, [r3, #24]
		udd_disable_wake_up_interrupt();
   81460:	691a      	ldr	r2, [r3, #16]
		UDC_RESUME_EVENT();
   81462:	4916      	ldr	r1, [pc, #88]	; (814bc <UDPHS_Handler+0x2f4>)
		udd_disable_wake_up_interrupt();
   81464:	f022 0220 	bic.w	r2, r2, #32
   81468:	611a      	str	r2, [r3, #16]
		udd_enable_suspend_interrupt();
   8146a:	691a      	ldr	r2, [r3, #16]
   8146c:	4302      	orrs	r2, r0
   8146e:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
   81470:	691a      	ldr	r2, [r3, #16]
   81472:	f042 0208 	orr.w	r2, r2, #8
   81476:	611a      	str	r2, [r3, #16]
		udd_enable_msof_interrupt();
   81478:	691a      	ldr	r2, [r3, #16]
   8147a:	f042 0204 	orr.w	r2, r2, #4
   8147e:	611a      	str	r2, [r3, #16]
}
   81480:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_RESUME_EVENT();
   81484:	4708      	bx	r1
		udd_ctrl_in_sent();
   81486:	4b0e      	ldr	r3, [pc, #56]	; (814c0 <UDPHS_Handler+0x2f8>)
}
   81488:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent();
   8148c:	4718      	bx	r3
   8148e:	bf00      	nop
   81490:	000826f5 	.word	0x000826f5
   81494:	00083591 	.word	0x00083591
   81498:	400a4000 	.word	0x400a4000
   8149c:	00082ca1 	.word	0x00082ca1
   814a0:	00080875 	.word	0x00080875
   814a4:	20003502 	.word	0x20003502
   814a8:	20000244 	.word	0x20000244
   814ac:	20003504 	.word	0x20003504
   814b0:	0008271d 	.word	0x0008271d
   814b4:	00080865 	.word	0x00080865
   814b8:	200034fd 	.word	0x200034fd
   814bc:	0008086d 	.word	0x0008086d
   814c0:	0008100d 	.word	0x0008100d
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   814c4:	4cb7      	ldr	r4, [pc, #732]	; (817a4 <UDPHS_Handler+0x5dc>)
   814c6:	7823      	ldrb	r3, [r4, #0]
   814c8:	b303      	cbz	r3, 8150c <UDPHS_Handler+0x344>
	if (udd_g_ctrlreq.callback) {
   814ca:	4db7      	ldr	r5, [pc, #732]	; (817a8 <UDPHS_Handler+0x5e0>)
   814cc:	692b      	ldr	r3, [r5, #16]
   814ce:	b103      	cbz	r3, 814d2 <UDPHS_Handler+0x30a>
		udd_g_ctrlreq.callback();
   814d0:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   814d2:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   814d6:	b672      	cpsid	i
   814d8:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   814dc:	2600      	movs	r6, #0
	udd_disable_in_send_interrupt(0);
   814de:	f44f 6080 	mov.w	r0, #1024	; 0x400
   814e2:	4ab2      	ldr	r2, [pc, #712]	; (817ac <UDPHS_Handler+0x5e4>)
   814e4:	49b2      	ldr	r1, [pc, #712]	; (817b0 <UDPHS_Handler+0x5e8>)
   814e6:	7016      	strb	r6, [r2, #0]
   814e8:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   814ec:	b923      	cbnz	r3, 814f8 <UDPHS_Handler+0x330>
		cpu_irq_enable();
   814ee:	2301      	movs	r3, #1
   814f0:	7013      	strb	r3, [r2, #0]
   814f2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   814f6:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   814f8:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   814fa:	f44f 7100 	mov.w	r1, #512	; 0x200
   814fe:	4aac      	ldr	r2, [pc, #688]	; (817b0 <UDPHS_Handler+0x5e8>)
   81500:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.callback = NULL;
   81504:	612b      	str	r3, [r5, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   81506:	616b      	str	r3, [r5, #20]
	udd_g_ctrlreq.payload_size = 0;
   81508:	81ab      	strh	r3, [r5, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8150a:	7023      	strb	r3, [r4, #0]
	if (8 != udd_byte_count(0)) {
   8150c:	4da8      	ldr	r5, [pc, #672]	; (817b0 <UDPHS_Handler+0x5e8>)
   8150e:	f8d5 311c 	ldr.w	r3, [r5, #284]	; 0x11c
   81512:	f3c3 530a 	ubfx	r3, r3, #20, #11
   81516:	2b08      	cmp	r3, #8
   81518:	f000 80a5 	beq.w	81666 <UDPHS_Handler+0x49e>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   8151c:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   8151e:	2220      	movs	r2, #32
		udd_ack_setup_received(0);
   81520:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81524:	7021      	strb	r1, [r4, #0]
	udd_enable_stall_handshake(0);
   81526:	f8c5 2114 	str.w	r2, [r5, #276]	; 0x114
		udd_ack_setup_received(0);
   8152a:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
   8152e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81532:	4c9c      	ldr	r4, [pc, #624]	; (817a4 <UDPHS_Handler+0x5dc>)
   81534:	7823      	ldrb	r3, [r4, #0]
   81536:	2b01      	cmp	r3, #1
   81538:	f000 80fe 	beq.w	81738 <UDPHS_Handler+0x570>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   8153c:	2b02      	cmp	r3, #2
   8153e:	f000 80e0 	beq.w	81702 <UDPHS_Handler+0x53a>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   81542:	2b04      	cmp	r3, #4
   81544:	f000 80dd 	beq.w	81702 <UDPHS_Handler+0x53a>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81548:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   8154a:	2220      	movs	r2, #32
   8154c:	4b98      	ldr	r3, [pc, #608]	; (817b0 <UDPHS_Handler+0x5e8>)
   8154e:	4d96      	ldr	r5, [pc, #600]	; (817a8 <UDPHS_Handler+0x5e0>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81550:	7021      	strb	r1, [r4, #0]
	udd_enable_stall_handshake(0);
   81552:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81556:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   8155a:	b672      	cpsid	i
   8155c:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81560:	2600      	movs	r6, #0
	udd_disable_in_send_interrupt(0);
   81562:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81566:	4a91      	ldr	r2, [pc, #580]	; (817ac <UDPHS_Handler+0x5e4>)
   81568:	4991      	ldr	r1, [pc, #580]	; (817b0 <UDPHS_Handler+0x5e8>)
   8156a:	7016      	strb	r6, [r2, #0]
   8156c:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81570:	b923      	cbnz	r3, 8157c <UDPHS_Handler+0x3b4>
		cpu_irq_enable();
   81572:	2301      	movs	r3, #1
   81574:	7013      	strb	r3, [r2, #0]
   81576:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8157a:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   8157c:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   8157e:	f44f 7100 	mov.w	r1, #512	; 0x200
   81582:	4a8b      	ldr	r2, [pc, #556]	; (817b0 <UDPHS_Handler+0x5e8>)
   81584:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.callback = NULL;
   81588:	612b      	str	r3, [r5, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   8158a:	616b      	str	r3, [r5, #20]
	udd_g_ctrlreq.payload_size = 0;
   8158c:	81ab      	strh	r3, [r5, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8158e:	7023      	strb	r3, [r4, #0]
   81590:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		udd_ack_reset();
   81594:	2310      	movs	r3, #16
	if (ptr_job->busy == false) {
   81596:	4c87      	ldr	r4, [pc, #540]	; (817b4 <UDPHS_Handler+0x5ec>)
		udd_ack_reset();
   81598:	6193      	str	r3, [r2, #24]
	if (ptr_job->busy == false) {
   8159a:	7d23      	ldrb	r3, [r4, #20]
   8159c:	07dd      	lsls	r5, r3, #31
   8159e:	f100 8135 	bmi.w	8180c <UDPHS_Handler+0x644>
   815a2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
   815a6:	07d8      	lsls	r0, r3, #31
   815a8:	f100 811c 	bmi.w	817e4 <UDPHS_Handler+0x61c>
	udd_enable_endpoint(0);
   815ac:	2401      	movs	r4, #1
		udc_reset();
   815ae:	4b82      	ldr	r3, [pc, #520]	; (817b8 <UDPHS_Handler+0x5f0>)
   815b0:	4798      	blx	r3
	udd_configure_address(0);
   815b2:	4b7f      	ldr	r3, [pc, #508]	; (817b0 <UDPHS_Handler+0x5e8>)
   815b4:	681a      	ldr	r2, [r3, #0]
   815b6:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   815ba:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   815bc:	681a      	ldr	r2, [r3, #0]
   815be:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   815c2:	601a      	str	r2, [r3, #0]
	udd_configure_endpoint(0,
   815c4:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   815c8:	f422 727f 	bic.w	r2, r2, #1020	; 0x3fc
   815cc:	f022 0203 	bic.w	r2, r2, #3
   815d0:	f042 0243 	orr.w	r2, r2, #67	; 0x43
   815d4:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	udd_enable_endpoint(0);
   815d8:	f8c3 4104 	str.w	r4, [r3, #260]	; 0x104
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   815dc:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   815e0:	b672      	cpsid	i
   815e2:	f3bf 8f5f 	dmb	sy
	udd_enable_out_received_interrupt(0);
   815e6:	f44f 7100 	mov.w	r1, #512	; 0x200
	cpu_irq_disable();
   815ea:	2600      	movs	r6, #0
	udd_enable_setup_received_interrupt(0);
   815ec:	f44f 5580 	mov.w	r5, #4096	; 0x1000
   815f0:	486e      	ldr	r0, [pc, #440]	; (817ac <UDPHS_Handler+0x5e4>)
   815f2:	7006      	strb	r6, [r0, #0]
   815f4:	f8c3 5104 	str.w	r5, [r3, #260]	; 0x104
	udd_enable_out_received_interrupt(0);
   815f8:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	udd_enable_endpoint_interrupt(0);
   815fc:	6919      	ldr	r1, [r3, #16]
   815fe:	f441 7180 	orr.w	r1, r1, #256	; 0x100
   81602:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
   81604:	b91a      	cbnz	r2, 8160e <UDPHS_Handler+0x446>
		cpu_irq_enable();
   81606:	7004      	strb	r4, [r0, #0]
   81608:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8160c:	b662      	cpsie	i
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8160e:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81612:	b672      	cpsid	i
   81614:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81618:	2400      	movs	r4, #0
	udd_disable_in_send_interrupt(0);
   8161a:	f44f 6180 	mov.w	r1, #1024	; 0x400
   8161e:	4a64      	ldr	r2, [pc, #400]	; (817b0 <UDPHS_Handler+0x5e8>)
   81620:	7004      	strb	r4, [r0, #0]
   81622:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81626:	b923      	cbnz	r3, 81632 <UDPHS_Handler+0x46a>
		cpu_irq_enable();
   81628:	2301      	movs	r3, #1
   8162a:	7003      	strb	r3, [r0, #0]
   8162c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81630:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   81632:	2200      	movs	r2, #0
	udd_ack_out_received(0);
   81634:	f44f 7000 	mov.w	r0, #512	; 0x200
   81638:	4b5d      	ldr	r3, [pc, #372]	; (817b0 <UDPHS_Handler+0x5e8>)
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   8163a:	495a      	ldr	r1, [pc, #360]	; (817a4 <UDPHS_Handler+0x5dc>)
	udd_ack_out_received(0);
   8163c:	f8c3 0118 	str.w	r0, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81640:	700a      	strb	r2, [r1, #0]
		udd_enable_sof_interrupt();
   81642:	6918      	ldr	r0, [r3, #16]
	udd_g_ctrlreq.callback = NULL;
   81644:	4958      	ldr	r1, [pc, #352]	; (817a8 <UDPHS_Handler+0x5e0>)
		udd_enable_sof_interrupt();
   81646:	f040 0008 	orr.w	r0, r0, #8
   8164a:	6118      	str	r0, [r3, #16]
		udd_enable_msof_interrupt();
   8164c:	6918      	ldr	r0, [r3, #16]
	udd_g_ctrlreq.callback = NULL;
   8164e:	610a      	str	r2, [r1, #16]
		udd_enable_msof_interrupt();
   81650:	f040 0004 	orr.w	r0, r0, #4
   81654:	6118      	str	r0, [r3, #16]
		udd_enable_suspend_interrupt();
   81656:	6918      	ldr	r0, [r3, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   81658:	614a      	str	r2, [r1, #20]
		udd_enable_suspend_interrupt();
   8165a:	f040 0002 	orr.w	r0, r0, #2
   8165e:	6118      	str	r0, [r3, #16]
	udd_g_ctrlreq.payload_size = 0;
   81660:	818a      	strh	r2, [r1, #12]
		goto udd_interrupt_end;
   81662:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   81666:	4b55      	ldr	r3, [pc, #340]	; (817bc <UDPHS_Handler+0x5f4>)
   81668:	4e4f      	ldr	r6, [pc, #316]	; (817a8 <UDPHS_Handler+0x5e0>)
   8166a:	781a      	ldrb	r2, [r3, #0]
   8166c:	f8df e170 	ldr.w	lr, [pc, #368]	; 817e0 <UDPHS_Handler+0x618>
   81670:	7032      	strb	r2, [r6, #0]
   81672:	f89e c000 	ldrb.w	ip, [lr]
   81676:	4f52      	ldr	r7, [pc, #328]	; (817c0 <UDPHS_Handler+0x5f8>)
   81678:	4852      	ldr	r0, [pc, #328]	; (817c4 <UDPHS_Handler+0x5fc>)
   8167a:	4953      	ldr	r1, [pc, #332]	; (817c8 <UDPHS_Handler+0x600>)
   8167c:	4a53      	ldr	r2, [pc, #332]	; (817cc <UDPHS_Handler+0x604>)
   8167e:	3303      	adds	r3, #3
   81680:	f897 e000 	ldrb.w	lr, [r7]
   81684:	781b      	ldrb	r3, [r3, #0]
   81686:	7807      	ldrb	r7, [r0, #0]
   81688:	3201      	adds	r2, #1
   8168a:	7808      	ldrb	r0, [r1, #0]
   8168c:	f812 1c01 	ldrb.w	r1, [r2, #-1]
   81690:	f886 c001 	strb.w	ip, [r6, #1]
   81694:	7812      	ldrb	r2, [r2, #0]
   81696:	70f3      	strb	r3, [r6, #3]
   81698:	f886 e002 	strb.w	lr, [r6, #2]
	if (udc_process_setup() == false) {
   8169c:	4b4c      	ldr	r3, [pc, #304]	; (817d0 <UDPHS_Handler+0x608>)
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   8169e:	7137      	strb	r7, [r6, #4]
   816a0:	7170      	strb	r0, [r6, #5]
   816a2:	71b1      	strb	r1, [r6, #6]
   816a4:	71f2      	strb	r2, [r6, #7]
	if (udc_process_setup() == false) {
   816a6:	4798      	blx	r3
   816a8:	2800      	cmp	r0, #0
   816aa:	f43f af37 	beq.w	8151c <UDPHS_Handler+0x354>
	udd_ack_setup_received(0);
   816ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   816b2:	f8c5 3118 	str.w	r3, [r5, #280]	; 0x118
	if (Udd_setup_is_in()) {
   816b6:	f996 3000 	ldrsb.w	r3, [r6]
   816ba:	2b00      	cmp	r3, #0
   816bc:	f2c0 8144 	blt.w	81948 <UDPHS_Handler+0x780>
		if (0 == udd_g_ctrlreq.req.wLength) {
   816c0:	88f3      	ldrh	r3, [r6, #6]
   816c2:	2b00      	cmp	r3, #0
   816c4:	f000 80f1 	beq.w	818aa <UDPHS_Handler+0x6e2>
		udd_ctrl_prev_payload_buf_cnt = 0;
   816c8:	2200      	movs	r2, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   816ca:	2601      	movs	r6, #1
		udd_ack_nak_in(0);
   816cc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
		udd_ctrl_prev_payload_buf_cnt = 0;
   816d0:	4840      	ldr	r0, [pc, #256]	; (817d4 <UDPHS_Handler+0x60c>)
		udd_ctrl_payload_buf_cnt = 0;
   816d2:	4b41      	ldr	r3, [pc, #260]	; (817d8 <UDPHS_Handler+0x610>)
		udd_ctrl_prev_payload_buf_cnt = 0;
   816d4:	8002      	strh	r2, [r0, #0]
		udd_ctrl_payload_buf_cnt = 0;
   816d6:	801a      	strh	r2, [r3, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   816d8:	7026      	strb	r6, [r4, #0]
		udd_ack_nak_in(0);
   816da:	f8c5 1118 	str.w	r1, [r5, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   816de:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   816e2:	b672      	cpsid	i
   816e4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   816e8:	4830      	ldr	r0, [pc, #192]	; (817ac <UDPHS_Handler+0x5e4>)
   816ea:	7002      	strb	r2, [r0, #0]
		udd_enable_nak_in_interrupt(0);
   816ec:	f8c5 1104 	str.w	r1, [r5, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   816f0:	2b00      	cmp	r3, #0
   816f2:	f47f adc0 	bne.w	81276 <UDPHS_Handler+0xae>
		cpu_irq_enable();
   816f6:	7006      	strb	r6, [r0, #0]
   816f8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   816fc:	b662      	cpsie	i
   816fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (udd_g_ctrlreq.callback) {
   81702:	4d29      	ldr	r5, [pc, #164]	; (817a8 <UDPHS_Handler+0x5e0>)
   81704:	692b      	ldr	r3, [r5, #16]
   81706:	2b00      	cmp	r3, #0
   81708:	f43f af25 	beq.w	81556 <UDPHS_Handler+0x38e>
		udd_g_ctrlreq.callback();
   8170c:	4798      	blx	r3
   8170e:	e722      	b.n	81556 <UDPHS_Handler+0x38e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81710:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   81714:	b672      	cpsid	i
   81716:	f3bf 8f5f 	dmb	sy
	++sleepmgr_locks[mode];
   8171a:	4c30      	ldr	r4, [pc, #192]	; (817dc <UDPHS_Handler+0x614>)
	cpu_irq_disable();
   8171c:	4d23      	ldr	r5, [pc, #140]	; (817ac <UDPHS_Handler+0x5e4>)
   8171e:	78a0      	ldrb	r0, [r4, #2]
   81720:	702b      	strb	r3, [r5, #0]
   81722:	1c43      	adds	r3, r0, #1
   81724:	70a3      	strb	r3, [r4, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81726:	2900      	cmp	r1, #0
   81728:	f47f ae93 	bne.w	81452 <UDPHS_Handler+0x28a>
		cpu_irq_enable();
   8172c:	2301      	movs	r3, #1
   8172e:	702b      	strb	r3, [r5, #0]
   81730:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81734:	b662      	cpsie	i
   81736:	e68c      	b.n	81452 <UDPHS_Handler+0x28a>
	nb_data = udd_byte_count(0);
   81738:	4b1d      	ldr	r3, [pc, #116]	; (817b0 <UDPHS_Handler+0x5e8>)
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8173a:	f8df 809c 	ldr.w	r8, [pc, #156]	; 817d8 <UDPHS_Handler+0x610>
	nb_data = udd_byte_count(0);
   8173e:	f8d3 611c 	ldr.w	r6, [r3, #284]	; 0x11c
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   81742:	4d19      	ldr	r5, [pc, #100]	; (817a8 <UDPHS_Handler+0x5e0>)
   81744:	f8b8 7000 	ldrh.w	r7, [r8]
   81748:	89ab      	ldrh	r3, [r5, #12]
	nb_data = udd_byte_count(0);
   8174a:	f3c6 560a 	ubfx	r6, r6, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8174e:	19ba      	adds	r2, r7, r6
   81750:	4293      	cmp	r3, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   81752:	bfbc      	itt	lt
   81754:	1bdb      	sublt	r3, r3, r7
   81756:	b29e      	uxthlt	r6, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81758:	68aa      	ldr	r2, [r5, #8]
	for (i = 0; i < nb_data; i++) {
   8175a:	b186      	cbz	r6, 8177e <UDPHS_Handler+0x5b6>
   8175c:	1e79      	subs	r1, r7, #1
   8175e:	4b17      	ldr	r3, [pc, #92]	; (817bc <UDPHS_Handler+0x5f4>)
   81760:	440a      	add	r2, r1
		*ptr_dest++ = *ptr_src++;
   81762:	f813 0b01 	ldrb.w	r0, [r3], #1
	for (i = 0; i < nb_data; i++) {
   81766:	b2d9      	uxtb	r1, r3
   81768:	42b1      	cmp	r1, r6
		*ptr_dest++ = *ptr_src++;
   8176a:	f802 0f01 	strb.w	r0, [r2, #1]!
	for (i = 0; i < nb_data; i++) {
   8176e:	d3f8      	bcc.n	81762 <UDPHS_Handler+0x59a>
	udd_ctrl_payload_buf_cnt += nb_data;
   81770:	4437      	add	r7, r6
   81772:	b2bf      	uxth	r7, r7
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   81774:	2e40      	cmp	r6, #64	; 0x40
	udd_ctrl_payload_buf_cnt += nb_data;
   81776:	f8a8 7000 	strh.w	r7, [r8]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   8177a:	f000 809a 	beq.w	818b2 <UDPHS_Handler+0x6ea>
		if (NULL != udd_g_ctrlreq.over_under_run) {
   8177e:	696b      	ldr	r3, [r5, #20]
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   81780:	81af      	strh	r7, [r5, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   81782:	2b00      	cmp	r3, #0
   81784:	d054      	beq.n	81830 <UDPHS_Handler+0x668>
			if (!udd_g_ctrlreq.over_under_run()) {
   81786:	4798      	blx	r3
   81788:	2800      	cmp	r0, #0
   8178a:	d151      	bne.n	81830 <UDPHS_Handler+0x668>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   8178c:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   8178e:	2120      	movs	r1, #32
			udd_ack_out_received(0);
   81790:	f44f 7200 	mov.w	r2, #512	; 0x200
	udd_enable_stall_handshake(0);
   81794:	4b06      	ldr	r3, [pc, #24]	; (817b0 <UDPHS_Handler+0x5e8>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81796:	7020      	strb	r0, [r4, #0]
	udd_enable_stall_handshake(0);
   81798:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
			udd_ack_out_received(0);
   8179c:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
   817a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   817a4:	20003502 	.word	0x20003502
   817a8:	2000358c 	.word	0x2000358c
   817ac:	20000244 	.word	0x20000244
   817b0:	400a4000 	.word	0x400a4000
   817b4:	20003504 	.word	0x20003504
   817b8:	00082c0d 	.word	0x00082c0d
   817bc:	20180000 	.word	0x20180000
   817c0:	20180002 	.word	0x20180002
   817c4:	20180004 	.word	0x20180004
   817c8:	20180005 	.word	0x20180005
   817cc:	20180006 	.word	0x20180006
   817d0:	00082cd9 	.word	0x00082cd9
   817d4:	20003500 	.word	0x20003500
   817d8:	200034fe 	.word	0x200034fe
   817dc:	200035b0 	.word	0x200035b0
   817e0:	20180001 	.word	0x20180001
	if (NULL == ptr_job->call_trans) {
   817e4:	69a5      	ldr	r5, [r4, #24]
	ptr_job->busy = false;
   817e6:	f36f 0300 	bfc	r3, #0, #1
   817ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
	if (NULL == ptr_job->call_trans) {
   817ee:	2d00      	cmp	r5, #0
   817f0:	f43f aedc 	beq.w	815ac <UDPHS_Handler+0x3e4>
	if (Is_udd_endpoint_in(ep_num)) {
   817f4:	4b62      	ldr	r3, [pc, #392]	; (81980 <UDPHS_Handler+0x7b8>)
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   817f6:	6a21      	ldr	r1, [r4, #32]
	if (Is_udd_endpoint_in(ep_num)) {
   817f8:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   817fc:	2001      	movs	r0, #1
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   817fe:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81802:	bf14      	ite	ne
   81804:	2282      	movne	r2, #130	; 0x82
   81806:	2202      	moveq	r2, #2
   81808:	47a8      	blx	r5
   8180a:	e6cf      	b.n	815ac <UDPHS_Handler+0x3e4>
	if (NULL == ptr_job->call_trans) {
   8180c:	6825      	ldr	r5, [r4, #0]
	ptr_job->busy = false;
   8180e:	f36f 0300 	bfc	r3, #0, #1
   81812:	7523      	strb	r3, [r4, #20]
	if (NULL == ptr_job->call_trans) {
   81814:	2d00      	cmp	r5, #0
   81816:	f43f aec4 	beq.w	815a2 <UDPHS_Handler+0x3da>
	if (Is_udd_endpoint_in(ep_num)) {
   8181a:	f8d2 3120 	ldr.w	r3, [r2, #288]	; 0x120
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8181e:	68a1      	ldr	r1, [r4, #8]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   81820:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81824:	bf14      	ite	ne
   81826:	2281      	movne	r2, #129	; 0x81
   81828:	2201      	moveq	r2, #1
   8182a:	2001      	movs	r0, #1
   8182c:	47a8      	blx	r5
   8182e:	e6b8      	b.n	815a2 <UDPHS_Handler+0x3da>
		udd_ack_out_received(0);
   81830:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   81834:	2203      	movs	r2, #3
		udd_ack_out_received(0);
   81836:	4b52      	ldr	r3, [pc, #328]	; (81980 <UDPHS_Handler+0x7b8>)
   81838:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   8183c:	7022      	strb	r2, [r4, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8183e:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   81842:	b672      	cpsid	i
   81844:	f3bf 8f5f 	dmb	sy
	udd_ack_in_send(0);
   81848:	f44f 6080 	mov.w	r0, #1024	; 0x400
	udd_ack_nak_out(0);
   8184c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
	cpu_irq_disable();
   81850:	2600      	movs	r6, #0
	udd_raise_tx_pkt_ready(0);
   81852:	f44f 6500 	mov.w	r5, #2048	; 0x800
   81856:	4c4b      	ldr	r4, [pc, #300]	; (81984 <UDPHS_Handler+0x7bc>)
   81858:	7026      	strb	r6, [r4, #0]
	udd_ack_in_send(0);
   8185a:	f8c3 0118 	str.w	r0, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   8185e:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   81862:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
	udd_ack_nak_out(0);
   81866:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   8186a:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   8186e:	2a00      	cmp	r2, #0
   81870:	f47f ad01 	bne.w	81276 <UDPHS_Handler+0xae>
		cpu_irq_enable();
   81874:	2301      	movs	r3, #1
   81876:	7023      	strb	r3, [r4, #0]
   81878:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8187c:	b662      	cpsie	i
   8187e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81882:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81886:	b672      	cpsid	i
   81888:	f3bf 8f5f 	dmb	sy
	--sleepmgr_locks[mode];
   8188c:	483e      	ldr	r0, [pc, #248]	; (81988 <UDPHS_Handler+0x7c0>)
	cpu_irq_disable();
   8188e:	4d3d      	ldr	r5, [pc, #244]	; (81984 <UDPHS_Handler+0x7bc>)
   81890:	7881      	ldrb	r1, [r0, #2]
   81892:	702c      	strb	r4, [r5, #0]
   81894:	3901      	subs	r1, #1
   81896:	7081      	strb	r1, [r0, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81898:	2b00      	cmp	r3, #0
   8189a:	f47f ad87 	bne.w	813ac <UDPHS_Handler+0x1e4>
		cpu_irq_enable();
   8189e:	2301      	movs	r3, #1
   818a0:	702b      	strb	r3, [r5, #0]
   818a2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   818a6:	b662      	cpsie	i
   818a8:	e580      	b.n	813ac <UDPHS_Handler+0x1e4>
			udd_ctrl_send_zlp_in();
   818aa:	4b38      	ldr	r3, [pc, #224]	; (8198c <UDPHS_Handler+0x7c4>)
}
   818ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			udd_ctrl_send_zlp_in();
   818b0:	4718      	bx	r3
			(udd_ctrl_prev_payload_buf_cnt +
   818b2:	4e37      	ldr	r6, [pc, #220]	; (81990 <UDPHS_Handler+0x7c8>)
			|| (udd_g_ctrlreq.req.wLength <=
   818b4:	88ea      	ldrh	r2, [r5, #6]
			(udd_ctrl_prev_payload_buf_cnt +
   818b6:	8833      	ldrh	r3, [r6, #0]
   818b8:	443b      	add	r3, r7
			|| (udd_g_ctrlreq.req.wLength <=
   818ba:	429a      	cmp	r2, r3
   818bc:	f77f af5f 	ble.w	8177e <UDPHS_Handler+0x5b6>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   818c0:	89ab      	ldrh	r3, [r5, #12]
   818c2:	42bb      	cmp	r3, r7
   818c4:	d04b      	beq.n	8195e <UDPHS_Handler+0x796>
	udd_ack_out_received(0);
   818c6:	f44f 7300 	mov.w	r3, #512	; 0x200
	udd_ack_nak_in(0);
   818ca:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	udd_ack_out_received(0);
   818ce:	4a2c      	ldr	r2, [pc, #176]	; (81980 <UDPHS_Handler+0x7b8>)
   818d0:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	udd_ack_nak_in(0);
   818d4:	f8c2 0118 	str.w	r0, [r2, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   818d8:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   818dc:	b672      	cpsid	i
   818de:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   818e2:	2400      	movs	r4, #0
   818e4:	4927      	ldr	r1, [pc, #156]	; (81984 <UDPHS_Handler+0x7bc>)
   818e6:	700c      	strb	r4, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   818e8:	f8c2 0104 	str.w	r0, [r2, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   818ec:	2b00      	cmp	r3, #0
   818ee:	f47f acc2 	bne.w	81276 <UDPHS_Handler+0xae>
		cpu_irq_enable();
   818f2:	2301      	movs	r3, #1
   818f4:	700b      	strb	r3, [r1, #0]
   818f6:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   818fa:	b662      	cpsie	i
   818fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81900:	2001      	movs	r0, #1
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81902:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
		ptr_job = &udd_ep_job[ep - 1];
   81906:	2200      	movs	r2, #0
			if (udd_endpoint_dma_get_status(ep)
   81908:	4b22      	ldr	r3, [pc, #136]	; (81994 <UDPHS_Handler+0x7cc>)
   8190a:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   8190e:	68d9      	ldr	r1, [r3, #12]
   81910:	07cf      	lsls	r7, r1, #31
   81912:	f53f acb0 	bmi.w	81276 <UDPHS_Handler+0xae>
			udd_disable_endpoint_dma_interrupt(ep);
   81916:	4c1a      	ldr	r4, [pc, #104]	; (81980 <UDPHS_Handler+0x7b8>)
   81918:	6921      	ldr	r1, [r4, #16]
   8191a:	ea21 0105 	bic.w	r1, r1, r5
   8191e:	6121      	str	r1, [r4, #16]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   81920:	68d9      	ldr	r1, [r3, #12]
			if (nb_remaining) {
   81922:	0c09      	lsrs	r1, r1, #16
   81924:	d007      	beq.n	81936 <UDPHS_Handler+0x76e>
				ptr_job->buf_cnt -= nb_remaining;
   81926:	2418      	movs	r4, #24
   81928:	4b1b      	ldr	r3, [pc, #108]	; (81998 <UDPHS_Handler+0x7d0>)
   8192a:	fb04 3302 	mla	r3, r4, r2, r3
   8192e:	68da      	ldr	r2, [r3, #12]
   81930:	1a52      	subs	r2, r2, r1
   81932:	60da      	str	r2, [r3, #12]
				ptr_job->buf_size = ptr_job->buf_cnt;
   81934:	609a      	str	r2, [r3, #8]
			udd_ep_trans_done(ep);
   81936:	4b19      	ldr	r3, [pc, #100]	; (8199c <UDPHS_Handler+0x7d4>)
}
   81938:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			udd_ep_trans_done(ep);
   8193c:	4718      	bx	r3
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   8193e:	2002      	movs	r0, #2
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81940:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
		ptr_job = &udd_ep_job[ep - 1];
   81944:	2201      	movs	r2, #1
   81946:	e7df      	b.n	81908 <UDPHS_Handler+0x740>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81948:	2300      	movs	r3, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   8194a:	2102      	movs	r1, #2
		udd_ctrl_prev_payload_buf_cnt = 0;
   8194c:	4d10      	ldr	r5, [pc, #64]	; (81990 <UDPHS_Handler+0x7c8>)
		udd_ctrl_payload_buf_cnt = 0;
   8194e:	4814      	ldr	r0, [pc, #80]	; (819a0 <UDPHS_Handler+0x7d8>)
		udd_ctrl_prev_payload_buf_cnt = 0;
   81950:	802b      	strh	r3, [r5, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81952:	8003      	strh	r3, [r0, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   81954:	7021      	strb	r1, [r4, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   81956:	4a13      	ldr	r2, [pc, #76]	; (819a4 <UDPHS_Handler+0x7dc>)
}
   81958:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent(); // Send first data transfer
   8195c:	4710      	bx	r2
		if (!udd_g_ctrlreq.over_under_run) {
   8195e:	696b      	ldr	r3, [r5, #20]
   81960:	2b00      	cmp	r3, #0
   81962:	f43f af13 	beq.w	8178c <UDPHS_Handler+0x5c4>
		if (!udd_g_ctrlreq.over_under_run()) {
   81966:	4798      	blx	r3
   81968:	2800      	cmp	r0, #0
   8196a:	f43f af0f 	beq.w	8178c <UDPHS_Handler+0x5c4>
		udd_ctrl_payload_buf_cnt = 0;
   8196e:	2100      	movs	r1, #0
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81970:	8833      	ldrh	r3, [r6, #0]
   81972:	f8b8 2000 	ldrh.w	r2, [r8]
		udd_ctrl_payload_buf_cnt = 0;
   81976:	f8a8 1000 	strh.w	r1, [r8]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   8197a:	4413      	add	r3, r2
   8197c:	8033      	strh	r3, [r6, #0]
   8197e:	e7a2      	b.n	818c6 <UDPHS_Handler+0x6fe>
   81980:	400a4000 	.word	0x400a4000
   81984:	20000244 	.word	0x20000244
   81988:	200035b0 	.word	0x200035b0
   8198c:	00080de9 	.word	0x00080de9
   81990:	20003500 	.word	0x20003500
   81994:	400a4300 	.word	0x400a4300
   81998:	20003504 	.word	0x20003504
   8199c:	00080e41 	.word	0x00080e41
   819a0:	200034fe 	.word	0x200034fe
   819a4:	0008100d 	.word	0x0008100d

000819a8 <udd_attach>:
{
   819a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   819aa:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   819ae:	b672      	cpsid	i
   819b0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   819b4:	2100      	movs	r1, #0
	if (b_idle && !udd_b_idle) {
   819b6:	4b27      	ldr	r3, [pc, #156]	; (81a54 <udd_attach+0xac>)
   819b8:	4c27      	ldr	r4, [pc, #156]	; (81a58 <udd_attach+0xb0>)
   819ba:	781a      	ldrb	r2, [r3, #0]
   819bc:	7021      	strb	r1, [r4, #0]
   819be:	2a00      	cmp	r2, #0
   819c0:	d035      	beq.n	81a2e <udd_attach+0x86>
	udd_b_idle = b_idle;
   819c2:	2501      	movs	r5, #1
	udd_enable_periph_ck();
   819c4:	4a25      	ldr	r2, [pc, #148]	; (81a5c <udd_attach+0xb4>)
   819c6:	201d      	movs	r0, #29
	udd_b_idle = b_idle;
   819c8:	701d      	strb	r5, [r3, #0]
	udd_enable_periph_ck();
   819ca:	4790      	blx	r2
	udd_ack_reset();
   819cc:	2010      	movs	r0, #16
	udd_ack_suspend();
   819ce:	2702      	movs	r7, #2
	udd_ack_wake_up();
   819d0:	2120      	movs	r1, #32
	udd_ack_sof();
   819d2:	f04f 0c08 	mov.w	ip, #8
	udd_ack_msof();
   819d6:	f04f 0e04 	mov.w	lr, #4
	udd_attach_device();
   819da:	4b21      	ldr	r3, [pc, #132]	; (81a60 <udd_attach+0xb8>)
   819dc:	681a      	ldr	r2, [r3, #0]
   819de:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   819e2:	601a      	str	r2, [r3, #0]
   819e4:	681a      	ldr	r2, [r3, #0]
   819e6:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   819ea:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   819ec:	691a      	ldr	r2, [r3, #16]
   819ee:	4302      	orrs	r2, r0
   819f0:	611a      	str	r2, [r3, #16]
	udd_enable_suspend_interrupt();
   819f2:	691a      	ldr	r2, [r3, #16]
   819f4:	433a      	orrs	r2, r7
   819f6:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
   819f8:	691a      	ldr	r2, [r3, #16]
   819fa:	430a      	orrs	r2, r1
   819fc:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
   819fe:	691a      	ldr	r2, [r3, #16]
   81a00:	ea42 020c 	orr.w	r2, r2, ip
   81a04:	611a      	str	r2, [r3, #16]
	udd_enable_msof_interrupt();
   81a06:	691a      	ldr	r2, [r3, #16]
   81a08:	ea42 020e 	orr.w	r2, r2, lr
   81a0c:	611a      	str	r2, [r3, #16]
	udd_ack_sof();
   81a0e:	f8c3 c018 	str.w	ip, [r3, #24]
	udd_disable_periph_ck();
   81a12:	4a14      	ldr	r2, [pc, #80]	; (81a64 <udd_attach+0xbc>)
	udd_ack_msof();
   81a14:	f8c3 e018 	str.w	lr, [r3, #24]
	udd_ack_reset();
   81a18:	6198      	str	r0, [r3, #24]
	udd_ack_suspend();
   81a1a:	619f      	str	r7, [r3, #24]
	udd_disable_periph_ck();
   81a1c:	201d      	movs	r0, #29
	udd_ack_wake_up();
   81a1e:	6199      	str	r1, [r3, #24]
	udd_disable_periph_ck();
   81a20:	4790      	blx	r2
	if (cpu_irq_is_enabled_flags(flags))
   81a22:	b91e      	cbnz	r6, 81a2c <udd_attach+0x84>
		cpu_irq_enable();
   81a24:	7025      	strb	r5, [r4, #0]
   81a26:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81a2a:	b662      	cpsie	i
   81a2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81a2e:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   81a32:	b672      	cpsid	i
   81a34:	f3bf 8f5f 	dmb	sy
	++sleepmgr_locks[mode];
   81a38:	480b      	ldr	r0, [pc, #44]	; (81a68 <udd_attach+0xc0>)
	cpu_irq_disable();
   81a3a:	7022      	strb	r2, [r4, #0]
   81a3c:	7882      	ldrb	r2, [r0, #2]
   81a3e:	3201      	adds	r2, #1
   81a40:	7082      	strb	r2, [r0, #2]
	if (cpu_irq_is_enabled_flags(flags))
   81a42:	2900      	cmp	r1, #0
   81a44:	d1bd      	bne.n	819c2 <udd_attach+0x1a>
		cpu_irq_enable();
   81a46:	2201      	movs	r2, #1
   81a48:	7022      	strb	r2, [r4, #0]
   81a4a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81a4e:	b662      	cpsie	i
   81a50:	e7b7      	b.n	819c2 <udd_attach+0x1a>
   81a52:	bf00      	nop
   81a54:	200034fd 	.word	0x200034fd
   81a58:	20000244 	.word	0x20000244
   81a5c:	000826f5 	.word	0x000826f5
   81a60:	400a4000 	.word	0x400a4000
   81a64:	0008271d 	.word	0x0008271d
   81a68:	200035b0 	.word	0x200035b0

00081a6c <udd_enable>:
{
   81a6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	sysclk_enable_usb();
   81a6e:	4b26      	ldr	r3, [pc, #152]	; (81b08 <udd_enable+0x9c>)
   81a70:	4798      	blx	r3
	udd_enable_periph_ck();
   81a72:	4b26      	ldr	r3, [pc, #152]	; (81b0c <udd_enable+0xa0>)
   81a74:	201d      	movs	r0, #29
   81a76:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81a78:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   81a7c:	b672      	cpsid	i
   81a7e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81a82:	2400      	movs	r4, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81a84:	2750      	movs	r7, #80	; 0x50
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81a86:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
   81a8a:	4d21      	ldr	r5, [pc, #132]	; (81b10 <udd_enable+0xa4>)
	udd_enable_periph();
   81a8c:	4821      	ldr	r0, [pc, #132]	; (81b14 <udd_enable+0xa8>)
   81a8e:	702c      	strb	r4, [r5, #0]
   81a90:	6803      	ldr	r3, [r0, #0]
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81a92:	4a21      	ldr	r2, [pc, #132]	; (81b18 <udd_enable+0xac>)
   81a94:	f443 7380 	orr.w	r3, r3, #256	; 0x100
   81a98:	6003      	str	r3, [r0, #0]
		udd_ep_job[i].busy = false;
   81a9a:	4b20      	ldr	r3, [pc, #128]	; (81b1c <udd_enable+0xb0>)
   81a9c:	f882 731d 	strb.w	r7, [r2, #797]	; 0x31d
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81aa0:	6011      	str	r1, [r2, #0]
   81aa2:	7d19      	ldrb	r1, [r3, #20]
   81aa4:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
	udd_high_speed_enable();
   81aa8:	f8d0 70e0 	ldr.w	r7, [r0, #224]	; 0xe0
		udd_ep_job[i].stall_requested = false;
   81aac:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
   81ab0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
   81ab4:	f364 0182 	bfi	r1, r4, #2, #1
   81ab8:	f364 0282 	bfi	r2, r4, #2, #1
	udd_high_speed_enable();
   81abc:	f027 0703 	bic.w	r7, r7, #3
   81ac0:	f8c0 70e0 	str.w	r7, [r0, #224]	; 0xe0
		udd_ep_job[i].stall_requested = false;
   81ac4:	7519      	strb	r1, [r3, #20]
   81ac6:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   81aca:	f44f 2080 	mov.w	r0, #262144	; 0x40000
   81ace:	4f14      	ldr	r7, [pc, #80]	; (81b20 <udd_enable+0xb4>)
   81ad0:	47b8      	blx	r7
	udd_b_idle = false;
   81ad2:	4b14      	ldr	r3, [pc, #80]	; (81b24 <udd_enable+0xb8>)
   81ad4:	701c      	strb	r4, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81ad6:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81ada:	b672      	cpsid	i
   81adc:	f3bf 8f5f 	dmb	sy
   81ae0:	4911      	ldr	r1, [pc, #68]	; (81b28 <udd_enable+0xbc>)
   81ae2:	702c      	strb	r4, [r5, #0]
   81ae4:	78ca      	ldrb	r2, [r1, #3]
   81ae6:	3201      	adds	r2, #1
   81ae8:	70ca      	strb	r2, [r1, #3]
	if (cpu_irq_is_enabled_flags(flags))
   81aea:	b923      	cbnz	r3, 81af6 <udd_enable+0x8a>
		cpu_irq_enable();
   81aec:	2301      	movs	r3, #1
   81aee:	702b      	strb	r3, [r5, #0]
   81af0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81af4:	b662      	cpsie	i
	udd_attach();
   81af6:	4b0d      	ldr	r3, [pc, #52]	; (81b2c <udd_enable+0xc0>)
   81af8:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   81afa:	b926      	cbnz	r6, 81b06 <udd_enable+0x9a>
		cpu_irq_enable();
   81afc:	2301      	movs	r3, #1
   81afe:	702b      	strb	r3, [r5, #0]
   81b00:	f3bf 8f5f 	dmb	sy
   81b04:	b662      	cpsie	i
   81b06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   81b08:	000824e5 	.word	0x000824e5
   81b0c:	000826f5 	.word	0x000826f5
   81b10:	20000244 	.word	0x20000244
   81b14:	400a4000 	.word	0x400a4000
   81b18:	e000e100 	.word	0xe000e100
   81b1c:	20003504 	.word	0x20003504
   81b20:	00082745 	.word	0x00082745
   81b24:	200034fd 	.word	0x200034fd
   81b28:	200035b0 	.word	0x200035b0
   81b2c:	000819a9 	.word	0x000819a9

00081b30 <udd_is_high_speed>:
	return !Is_udd_full_speed_mode();
   81b30:	4b02      	ldr	r3, [pc, #8]	; (81b3c <udd_is_high_speed+0xc>)
   81b32:	6958      	ldr	r0, [r3, #20]
}
   81b34:	f000 0001 	and.w	r0, r0, #1
   81b38:	4770      	bx	lr
   81b3a:	bf00      	nop
   81b3c:	400a4000 	.word	0x400a4000

00081b40 <udd_set_address>:
	udd_disable_address();
   81b40:	4b08      	ldr	r3, [pc, #32]	; (81b64 <udd_set_address+0x24>)
	udd_configure_address(address);
   81b42:	f000 017f 	and.w	r1, r0, #127	; 0x7f
	udd_disable_address();
   81b46:	681a      	ldr	r2, [r3, #0]
   81b48:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   81b4c:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   81b4e:	6818      	ldr	r0, [r3, #0]
   81b50:	f020 007f 	bic.w	r0, r0, #127	; 0x7f
   81b54:	4308      	orrs	r0, r1
   81b56:	6018      	str	r0, [r3, #0]
	udd_enable_address();
   81b58:	681a      	ldr	r2, [r3, #0]
   81b5a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   81b5e:	601a      	str	r2, [r3, #0]
   81b60:	4770      	bx	lr
   81b62:	bf00      	nop
   81b64:	400a4000 	.word	0x400a4000

00081b68 <udd_getaddress>:
	return udd_get_configured_address();
   81b68:	4b02      	ldr	r3, [pc, #8]	; (81b74 <udd_getaddress+0xc>)
   81b6a:	6818      	ldr	r0, [r3, #0]
}
   81b6c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   81b70:	4770      	bx	lr
   81b72:	bf00      	nop
   81b74:	400a4000 	.word	0x400a4000

00081b78 <udd_get_frame_number>:
	return udd_frame_number();
   81b78:	4b02      	ldr	r3, [pc, #8]	; (81b84 <udd_get_frame_number+0xc>)
   81b7a:	6858      	ldr	r0, [r3, #4]
}
   81b7c:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   81b80:	4770      	bx	lr
   81b82:	bf00      	nop
   81b84:	400a4000 	.word	0x400a4000

00081b88 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   81b88:	4b01      	ldr	r3, [pc, #4]	; (81b90 <udd_set_setup_payload+0x8>)
   81b8a:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   81b8c:	8199      	strh	r1, [r3, #12]
   81b8e:	4770      	bx	lr
   81b90:	2000358c 	.word	0x2000358c

00081b94 <udd_ep_alloc>:
{
   81b94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ep = ep & USB_EP_ADDR_MASK;
   81b98:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   81b9c:	2c02      	cmp	r4, #2
   81b9e:	d868      	bhi.n	81c72 <udd_ep_alloc+0xde>
	if (Is_udd_endpoint_enabled(ep)) {
   81ba0:	0163      	lsls	r3, r4, #5
   81ba2:	f103 2540 	add.w	r5, r3, #1073758208	; 0x40004000
   81ba6:	f505 2520 	add.w	r5, r5, #655360	; 0xa0000
   81baa:	f8d5 610c 	ldr.w	r6, [r5, #268]	; 0x10c
   81bae:	4627      	mov	r7, r4
   81bb0:	f016 0601 	ands.w	r6, r6, #1
   81bb4:	d15d      	bne.n	81c72 <udd_ep_alloc+0xde>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   81bb6:	f001 0503 	and.w	r5, r1, #3
   81bba:	2d02      	cmp	r5, #2
   81bbc:	d063      	beq.n	81c86 <udd_ep_alloc+0xf2>
   81bbe:	2d03      	cmp	r5, #3
   81bc0:	d05a      	beq.n	81c78 <udd_ep_alloc+0xe4>
   81bc2:	2d01      	cmp	r5, #1
   81bc4:	d155      	bne.n	81c72 <udd_ep_alloc+0xde>
	if (b_iso_hbw) {
   81bc6:	2c00      	cmp	r4, #0
   81bc8:	d056      	beq.n	81c78 <udd_ep_alloc+0xe4>
		switch(MaxEndpointSize & (0x3u << 11)) {
   81bca:	f402 55c0 	and.w	r5, r2, #6144	; 0x1800
   81bce:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
   81bd2:	f000 818e 	beq.w	81ef2 <udd_ep_alloc+0x35e>
			nb_tran = 1;
   81bd6:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
   81bda:	bf0c      	ite	eq
   81bdc:	f04f 0803 	moveq.w	r8, #3
   81be0:	f04f 0801 	movne.w	r8, #1
   81be4:	f04f 0e40 	mov.w	lr, #64	; 0x40
   81be8:	f04f 0c01 	mov.w	ip, #1
		MaxEndpointSize &= ~(0x3u << 11);
   81bec:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
   81bf0:	b292      	uxth	r2, r2
   81bf2:	f103 2540 	add.w	r5, r3, #1073758208	; 0x40004000
   81bf6:	f505 2520 	add.w	r5, r5, #655360	; 0xa0000
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81bfa:	f8d5 a100 	ldr.w	sl, [r5, #256]	; 0x100
   81bfe:	f5a2 6980 	sub.w	r9, r2, #1024	; 0x400
   81c02:	f010 0f80 	tst.w	r0, #128	; 0x80
   81c06:	ea4f 1101 	mov.w	r1, r1, lsl #4
   81c0a:	f42a 7a7f 	bic.w	sl, sl, #1020	; 0x3fc
   81c0e:	fa1f f989 	uxth.w	r9, r9
   81c12:	f001 0130 	and.w	r1, r1, #48	; 0x30
   81c16:	f02a 0a03 	bic.w	sl, sl, #3
   81c1a:	bf0c      	ite	eq
   81c1c:	2000      	moveq	r0, #0
   81c1e:	2008      	movne	r0, #8
   81c20:	f5b9 4f7c 	cmp.w	r9, #64512	; 0xfc00
   81c24:	ea4a 0101 	orr.w	r1, sl, r1
   81c28:	d330      	bcc.n	81c8c <udd_ep_alloc+0xf8>
   81c2a:	2a08      	cmp	r2, #8
   81c2c:	f240 815f 	bls.w	81eee <udd_ep_alloc+0x35a>
   81c30:	0052      	lsls	r2, r2, #1
   81c32:	3a01      	subs	r2, #1
   81c34:	fab2 f282 	clz	r2, r2
   81c38:	f1c2 021c 	rsb	r2, r2, #28
   81c3c:	e027      	b.n	81c8e <udd_ep_alloc+0xfa>
		if (!Is_udd_endpoint_mapped(i)) {
   81c3e:	2402      	movs	r4, #2
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   81c40:	f04f 0801 	mov.w	r8, #1
   81c44:	4627      	mov	r7, r4
   81c46:	46a2      	mov	sl, r4
			if (NULL == ptr_job->call_trans) {
   81c48:	eb0a 0308 	add.w	r3, sl, r8
   81c4c:	f851 5033 	ldr.w	r5, [r1, r3, lsl #3]
   81c50:	b17d      	cbz	r5, 81c72 <udd_ep_alloc+0xde>
			if (Is_udd_endpoint_in(i)) {
   81c52:	4ab6      	ldr	r2, [pc, #728]	; (81f2c <udd_ep_alloc+0x398>)
   81c54:	f107 0308 	add.w	r3, r7, #8
   81c58:	015b      	lsls	r3, r3, #5
   81c5a:	58d3      	ldr	r3, [r2, r3]
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   81c5c:	44d0      	add	r8, sl
			if (Is_udd_endpoint_in(i)) {
   81c5e:	071b      	lsls	r3, r3, #28
				i |= USB_EP_DIR_IN;
   81c60:	bf48      	it	mi
   81c62:	f044 0480 	orrmi.w	r4, r4, #128	; 0x80
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   81c66:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
   81c6a:	68c9      	ldr	r1, [r1, #12]
   81c6c:	4622      	mov	r2, r4
   81c6e:	2001      	movs	r0, #1
   81c70:	47a8      	blx	r5
			return false;
   81c72:	2000      	movs	r0, #0
   81c74:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81c78:	f04f 0e40 	mov.w	lr, #64	; 0x40
	} else if (MaxEndpointSize & (0x3u << 11)) {
   81c7c:	f412 5cc0 	ands.w	ip, r2, #6144	; 0x1800
   81c80:	d1f7      	bne.n	81c72 <udd_ep_alloc+0xde>
	uint8_t nb_bank, bank, nb_tran = 0, i;
   81c82:	46e0      	mov	r8, ip
   81c84:	e7b5      	b.n	81bf2 <udd_ep_alloc+0x5e>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   81c86:	f04f 0e80 	mov.w	lr, #128	; 0x80
   81c8a:	e7f7      	b.n	81c7c <udd_ep_alloc+0xe8>
   81c8c:	2207      	movs	r2, #7
   81c8e:	ea4e 0e01 	orr.w	lr, lr, r1
   81c92:	ea4e 0000 	orr.w	r0, lr, r0
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   81c96:	f1bc 0f00 	cmp.w	ip, #0
   81c9a:	d001      	beq.n	81ca0 <udd_ep_alloc+0x10c>
   81c9c:	ea4f 2608 	mov.w	r6, r8, lsl #8
   81ca0:	4310      	orrs	r0, r2
   81ca2:	4330      	orrs	r0, r6
   81ca4:	f8c5 0100 	str.w	r0, [r5, #256]	; 0x100
	if (!Is_udd_endpoint_mapped(ep)) {
   81ca8:	f8d5 2100 	ldr.w	r2, [r5, #256]	; 0x100
   81cac:	2a00      	cmp	r2, #0
   81cae:	dae0      	bge.n	81c72 <udd_ep_alloc+0xde>
	udd_enable_endpoint(ep);
   81cb0:	2101      	movs	r1, #1
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   81cb2:	2202      	movs	r2, #2
			udd_disable_endpoint(i);
   81cb4:	4688      	mov	r8, r1
	ep_allocated = 0;
   81cb6:	2600      	movs	r6, #0
		if (Is_udd_endpoint_enabled(i)) {
   81cb8:	f8df c270 	ldr.w	ip, [pc, #624]	; 81f2c <udd_ep_alloc+0x398>
	udd_enable_endpoint(ep);
   81cbc:	f8c5 1104 	str.w	r1, [r5, #260]	; 0x104
		if (Is_udd_endpoint_enabled(i)) {
   81cc0:	0151      	lsls	r1, r2, #5
   81cc2:	eb0c 0901 	add.w	r9, ip, r1
   81cc6:	f8d9 010c 	ldr.w	r0, [r9, #268]	; 0x10c
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   81cca:	f102 3eff 	add.w	lr, r2, #4294967295
		if (Is_udd_endpoint_enabled(i)) {
   81cce:	07c0      	lsls	r0, r0, #31
   81cd0:	d514      	bpl.n	81cfc <udd_ep_alloc+0x168>
   81cd2:	f101 2140 	add.w	r1, r1, #1073758208	; 0x40004000
   81cd6:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
			bank = udd_get_endpoint_bank(i);
   81cda:	f8d1 0100 	ldr.w	r0, [r1, #256]	; 0x100
			udd_disable_endpoint(i);
   81cde:	f8c9 8108 	str.w	r8, [r9, #264]	; 0x108
			ep_allocated |=  bank << (i * 2);
   81ce2:	f3c0 1081 	ubfx	r0, r0, #6, #2
			udd_configure_endpoint_bank(i, 0);
   81ce6:	f8d1 9100 	ldr.w	r9, [r1, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   81cea:	0052      	lsls	r2, r2, #1
   81cec:	fa00 f202 	lsl.w	r2, r0, r2
   81cf0:	4332      	orrs	r2, r6
			udd_configure_endpoint_bank(i, 0);
   81cf2:	f029 00c0 	bic.w	r0, r9, #192	; 0xc0
			ep_allocated |=  bank << (i * 2);
   81cf6:	b296      	uxth	r6, r2
			udd_configure_endpoint_bank(i, 0);
   81cf8:	f8c1 0100 	str.w	r0, [r1, #256]	; 0x100
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   81cfc:	fa5f f28e 	uxtb.w	r2, lr
   81d00:	4294      	cmp	r4, r2
   81d02:	d9dd      	bls.n	81cc0 <udd_ep_alloc+0x12c>
		bank = (ep_allocated >> (i * 2)) & 0x03;
   81d04:	0062      	lsls	r2, r4, #1
   81d06:	fa46 f202 	asr.w	r2, r6, r2
		if (bank == 0) {
   81d0a:	f012 0203 	ands.w	r2, r2, #3
   81d0e:	d07f      	beq.n	81e10 <udd_ep_alloc+0x27c>
		udd_configure_endpoint_bank(i, bank);
   81d10:	f8d5 0100 	ldr.w	r0, [r5, #256]	; 0x100
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   81d14:	f104 38ff 	add.w	r8, r4, #4294967295
		bool b_restart = ptr_job->busy;
   81d18:	ea4f 0a48 	mov.w	sl, r8, lsl #1
   81d1c:	4984      	ldr	r1, [pc, #528]	; (81f30 <udd_ep_alloc+0x39c>)
		udd_configure_endpoint_bank(i, bank);
   81d1e:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
		bool b_restart = ptr_job->busy;
   81d22:	eb0a 0c08 	add.w	ip, sl, r8
		udd_configure_endpoint_bank(i, bank);
   81d26:	ea40 1282 	orr.w	r2, r0, r2, lsl #6
		bool b_restart = ptr_job->busy;
   81d2a:	eb01 0ccc 	add.w	ip, r1, ip, lsl #3
   81d2e:	f89c e014 	ldrb.w	lr, [ip, #20]
		udd_configure_endpoint_bank(i, bank);
   81d32:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
		udd_enable_endpoint(i);
   81d36:	2201      	movs	r2, #1
		ptr_job->busy = false;
   81d38:	46f3      	mov	fp, lr
		udd_enable_endpoint(i);
   81d3a:	f8c5 2104 	str.w	r2, [r5, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   81d3e:	f8d5 2100 	ldr.w	r2, [r5, #256]	; 0x100
		ptr_job->busy = false;
   81d42:	f36f 0b00 	bfc	fp, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   81d46:	2a00      	cmp	r2, #0
		ptr_job->busy = false;
   81d48:	f88c b014 	strb.w	fp, [ip, #20]
		bool b_restart = ptr_job->busy;
   81d4c:	f00e 0001 	and.w	r0, lr, #1
		if (!Is_udd_endpoint_mapped(i)) {
   81d50:	f6bf af7a 	bge.w	81c48 <udd_ep_alloc+0xb4>
		udd_enable_endpoint_bank_autoswitch(i);
   81d54:	f8d5 2104 	ldr.w	r2, [r5, #260]	; 0x104
   81d58:	f042 0202 	orr.w	r2, r2, #2
   81d5c:	f8c5 2104 	str.w	r2, [r5, #260]	; 0x104
		if (b_restart) {
   81d60:	2800      	cmp	r0, #0
   81d62:	d055      	beq.n	81e10 <udd_ep_alloc+0x27c>
			ptr_job->buf_cnt -= ptr_job->buf_load;
   81d64:	f8dc 000c 	ldr.w	r0, [ip, #12]
   81d68:	f8dc 2010 	ldr.w	r2, [ip, #16]
	if ((!Is_udd_endpoint_enabled(ep))
   81d6c:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
			ptr_job->buf_cnt -= ptr_job->buf_load;
   81d70:	1a82      	subs	r2, r0, r2
	if ((!Is_udd_endpoint_enabled(ep))
   81d72:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
			ptr_job->buf_cnt -= ptr_job->buf_load;
   81d76:	f8cc 200c 	str.w	r2, [ip, #12]
	if ((!Is_udd_endpoint_enabled(ep))
   81d7a:	f8d3 010c 	ldr.w	r0, [r3, #268]	; 0x10c
   81d7e:	07c7      	lsls	r7, r0, #31
   81d80:	f57f af77 	bpl.w	81c72 <udd_ep_alloc+0xde>
			|| Is_udd_endpoint_stall_requested(ep)
   81d84:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
   81d88:	069d      	lsls	r5, r3, #26
   81d8a:	f53f af72 	bmi.w	81c72 <udd_ep_alloc+0xde>
			|| ptr_job->stall_requested) {
   81d8e:	fa5f fa8b 	uxtb.w	sl, fp
   81d92:	f01a 0b04 	ands.w	fp, sl, #4
   81d96:	f47f af6c 	bne.w	81c72 <udd_ep_alloc+0xde>
					&ptr_job->buf[ptr_job->buf_cnt],
   81d9a:	f8dc 5004 	ldr.w	r5, [ip, #4]
					ptr_job->b_shortpacket,
   81d9e:	f3ca 0e40 	ubfx	lr, sl, #1, #1
					ptr_job->buf_size
   81da2:	f8dc 3008 	ldr.w	r3, [ip, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81da6:	f3ef 8c10 	mrs	ip, PRIMASK
   81daa:	4660      	mov	r0, ip
  __ASM volatile ("cpsid i");
   81dac:	b672      	cpsid	i
   81dae:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81db2:	4f60      	ldr	r7, [pc, #384]	; (81f34 <udd_ep_alloc+0x3a0>)
	if (ptr_job->busy == true) {
   81db4:	f01a 0f01 	tst.w	sl, #1
   81db8:	f887 b000 	strb.w	fp, [r7]
   81dbc:	f040 809c 	bne.w	81ef8 <udd_ep_alloc+0x364>
	ptr_job->busy = true;
   81dc0:	2018      	movs	r0, #24
   81dc2:	fb00 1008 	mla	r0, r0, r8, r1
   81dc6:	f890 9014 	ldrb.w	r9, [r0, #20]
   81dca:	f049 0901 	orr.w	r9, r9, #1
   81dce:	f880 9014 	strb.w	r9, [r0, #20]
	if (cpu_irq_is_enabled_flags(flags))
   81dd2:	f1bc 0f00 	cmp.w	ip, #0
   81dd6:	f000 809d 	beq.w	81f14 <udd_ep_alloc+0x380>
	ptr_job->buf = buf;
   81dda:	2018      	movs	r0, #24
	ptr_job->buf_cnt = 0;
   81ddc:	2700      	movs	r7, #0
	ptr_job->buf = buf;
   81dde:	fb00 1008 	mla	r0, r0, r8, r1
			b_restart = udd_ep_run(i,
   81de2:	1a9b      	subs	r3, r3, r2
   81de4:	442a      	add	r2, r5
	ptr_job->buf = buf;
   81de6:	6042      	str	r2, [r0, #4]
	ptr_job->buf_size = buf_size;
   81de8:	6083      	str	r3, [r0, #8]
	ptr_job->buf_cnt = 0;
   81dea:	60c7      	str	r7, [r0, #12]
	ptr_job->buf_load = 0;
   81dec:	6107      	str	r7, [r0, #16]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81dee:	f1be 0f00 	cmp.w	lr, #0
   81df2:	f040 808b 	bne.w	81f0c <udd_ep_alloc+0x378>
   81df6:	fab3 f383 	clz	r3, r3
   81dfa:	095b      	lsrs	r3, r3, #5
   81dfc:	2218      	movs	r2, #24
   81dfe:	fb02 1208 	mla	r2, r2, r8, r1
   81e02:	7d11      	ldrb	r1, [r2, #20]
	udd_ep_trans_done(ep);
   81e04:	4620      	mov	r0, r4
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81e06:	f363 0141 	bfi	r1, r3, #1, #1
   81e0a:	7511      	strb	r1, [r2, #20]
	udd_ep_trans_done(ep);
   81e0c:	4b4a      	ldr	r3, [pc, #296]	; (81f38 <udd_ep_alloc+0x3a4>)
   81e0e:	4798      	blx	r3
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   81e10:	2c01      	cmp	r4, #1
   81e12:	d169      	bne.n	81ee8 <udd_ep_alloc+0x354>
		bank = (ep_allocated >> (i * 2)) & 0x03;
   81e14:	f3c6 1601 	ubfx	r6, r6, #4, #2
		if (bank == 0) {
   81e18:	2e00      	cmp	r6, #0
   81e1a:	d065      	beq.n	81ee8 <udd_ep_alloc+0x354>
		bool b_restart = ptr_job->busy;
   81e1c:	4944      	ldr	r1, [pc, #272]	; (81f30 <udd_ep_alloc+0x39c>)
   81e1e:	4b47      	ldr	r3, [pc, #284]	; (81f3c <udd_ep_alloc+0x3a8>)
   81e20:	f891 002c 	ldrb.w	r0, [r1, #44]	; 0x2c
		udd_configure_endpoint_bank(i, bank);
   81e24:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
		ptr_job->busy = false;
   81e28:	4605      	mov	r5, r0
		udd_configure_endpoint_bank(i, bank);
   81e2a:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
   81e2e:	ea42 1686 	orr.w	r6, r2, r6, lsl #6
   81e32:	f8c3 6100 	str.w	r6, [r3, #256]	; 0x100
		udd_enable_endpoint(i);
   81e36:	f8c3 4104 	str.w	r4, [r3, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   81e3a:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
		ptr_job->busy = false;
   81e3e:	f36f 0500 	bfc	r5, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   81e42:	2a00      	cmp	r2, #0
		ptr_job->busy = false;
   81e44:	f881 502c 	strb.w	r5, [r1, #44]	; 0x2c
		bool b_restart = ptr_job->busy;
   81e48:	f000 0001 	and.w	r0, r0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   81e4c:	f6bf aef7 	bge.w	81c3e <udd_ep_alloc+0xaa>
		udd_enable_endpoint_bank_autoswitch(i);
   81e50:	f8d3 2104 	ldr.w	r2, [r3, #260]	; 0x104
   81e54:	f042 0202 	orr.w	r2, r2, #2
   81e58:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		if (b_restart) {
   81e5c:	2800      	cmp	r0, #0
   81e5e:	d043      	beq.n	81ee8 <udd_ep_alloc+0x354>
			ptr_job->buf_cnt -= ptr_job->buf_load;
   81e60:	6a48      	ldr	r0, [r1, #36]	; 0x24
   81e62:	6a8b      	ldr	r3, [r1, #40]	; 0x28
	if ((!Is_udd_endpoint_enabled(ep))
   81e64:	4a31      	ldr	r2, [pc, #196]	; (81f2c <udd_ep_alloc+0x398>)
			ptr_job->buf_cnt -= ptr_job->buf_load;
   81e66:	1ac3      	subs	r3, r0, r3
   81e68:	624b      	str	r3, [r1, #36]	; 0x24
	if ((!Is_udd_endpoint_enabled(ep))
   81e6a:	f8d2 014c 	ldr.w	r0, [r2, #332]	; 0x14c
   81e6e:	07c0      	lsls	r0, r0, #31
   81e70:	f57f aeff 	bpl.w	81c72 <udd_ep_alloc+0xde>
			|| Is_udd_endpoint_stall_requested(ep)
   81e74:	f8d2 215c 	ldr.w	r2, [r2, #348]	; 0x15c
   81e78:	0692      	lsls	r2, r2, #26
   81e7a:	f53f aefa 	bmi.w	81c72 <udd_ep_alloc+0xde>
			|| ptr_job->stall_requested) {
   81e7e:	b2ed      	uxtb	r5, r5
   81e80:	f015 0804 	ands.w	r8, r5, #4
   81e84:	f47f aef5 	bne.w	81c72 <udd_ep_alloc+0xde>
					ptr_job->b_shortpacket,
   81e88:	f3c5 0c40 	ubfx	ip, r5, #1, #1
					&ptr_job->buf[ptr_job->buf_cnt],
   81e8c:	69ce      	ldr	r6, [r1, #28]
					ptr_job->buf_size
   81e8e:	6a0a      	ldr	r2, [r1, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81e90:	f3ef 8e10 	mrs	lr, PRIMASK
   81e94:	4670      	mov	r0, lr
  __ASM volatile ("cpsid i");
   81e96:	b672      	cpsid	i
   81e98:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81e9c:	4f25      	ldr	r7, [pc, #148]	; (81f34 <udd_ep_alloc+0x3a0>)
	if (ptr_job->busy == true) {
   81e9e:	f015 0f01 	tst.w	r5, #1
   81ea2:	f887 8000 	strb.w	r8, [r7]
   81ea6:	d127      	bne.n	81ef8 <udd_ep_alloc+0x364>
	ptr_job->busy = true;
   81ea8:	f045 0501 	orr.w	r5, r5, #1
   81eac:	f881 502c 	strb.w	r5, [r1, #44]	; 0x2c
	if (cpu_irq_is_enabled_flags(flags))
   81eb0:	f1be 0f00 	cmp.w	lr, #0
   81eb4:	d035      	beq.n	81f22 <udd_ep_alloc+0x38e>
	ptr_job->buf_cnt = 0;
   81eb6:	2000      	movs	r0, #0
			b_restart = udd_ep_run(i,
   81eb8:	1ad2      	subs	r2, r2, r3
   81eba:	4433      	add	r3, r6
	ptr_job->buf_size = buf_size;
   81ebc:	620a      	str	r2, [r1, #32]
	ptr_job->buf = buf;
   81ebe:	61cb      	str	r3, [r1, #28]
	ptr_job->buf_cnt = 0;
   81ec0:	6248      	str	r0, [r1, #36]	; 0x24
	ptr_job->buf_load = 0;
   81ec2:	6288      	str	r0, [r1, #40]	; 0x28
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81ec4:	f1bc 0f00 	cmp.w	ip, #0
   81ec8:	d122      	bne.n	81f10 <udd_ep_alloc+0x37c>
   81eca:	fab2 f282 	clz	r2, r2
   81ece:	0952      	lsrs	r2, r2, #5
   81ed0:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
	udd_ep_trans_done(ep);
   81ed4:	2002      	movs	r0, #2
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81ed6:	f362 0341 	bfi	r3, r2, #1, #1
   81eda:	f881 302c 	strb.w	r3, [r1, #44]	; 0x2c
	udd_ep_trans_done(ep);
   81ede:	4a16      	ldr	r2, [pc, #88]	; (81f38 <udd_ep_alloc+0x3a4>)
   81ee0:	4790      	blx	r2
	return true;
   81ee2:	2001      	movs	r0, #1
   81ee4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81ee8:	2001      	movs	r0, #1
}
   81eea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   81eee:	2200      	movs	r2, #0
   81ef0:	e6cd      	b.n	81c8e <udd_ep_alloc+0xfa>
			nb_tran = 2;
   81ef2:	f04f 0802 	mov.w	r8, #2
   81ef6:	e675      	b.n	81be4 <udd_ep_alloc+0x50>
   81ef8:	2800      	cmp	r0, #0
   81efa:	f47f aeba 	bne.w	81c72 <udd_ep_alloc+0xde>
		cpu_irq_enable();
   81efe:	2301      	movs	r3, #1
   81f00:	703b      	strb	r3, [r7, #0]
   81f02:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81f06:	b662      	cpsie	i
   81f08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   81f0c:	2301      	movs	r3, #1
   81f0e:	e775      	b.n	81dfc <udd_ep_alloc+0x268>
   81f10:	2201      	movs	r2, #1
   81f12:	e7dd      	b.n	81ed0 <udd_ep_alloc+0x33c>
   81f14:	f04f 0001 	mov.w	r0, #1
   81f18:	7038      	strb	r0, [r7, #0]
   81f1a:	f3bf 8f5f 	dmb	sy
   81f1e:	b662      	cpsie	i
   81f20:	e75b      	b.n	81dda <udd_ep_alloc+0x246>
   81f22:	703c      	strb	r4, [r7, #0]
   81f24:	f3bf 8f5f 	dmb	sy
   81f28:	b662      	cpsie	i
   81f2a:	e7c4      	b.n	81eb6 <udd_ep_alloc+0x322>
   81f2c:	400a4000 	.word	0x400a4000
   81f30:	20003504 	.word	0x20003504
   81f34:	20000244 	.word	0x20000244
   81f38:	00080e41 	.word	0x00080e41
   81f3c:	400a4040 	.word	0x400a4040

00081f40 <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81f40:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81f44:	2a02      	cmp	r2, #2
   81f46:	d900      	bls.n	81f4a <udd_ep_free+0xa>
   81f48:	4770      	bx	lr
	udd_disable_endpoint(ep_index);
   81f4a:	2001      	movs	r0, #1
   81f4c:	0153      	lsls	r3, r2, #5
   81f4e:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   81f52:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   81f56:	460b      	mov	r3, r1
{
   81f58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_disable_endpoint(ep_index);
   81f5c:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   81f60:	1e56      	subs	r6, r2, #1
	udd_configure_endpoint_bank(ep_index, 0);
   81f62:	f8d1 7100 	ldr.w	r7, [r1, #256]	; 0x100
	if (ptr_job->busy == false) {
   81f66:	fa06 f500 	lsl.w	r5, r6, r0
   81f6a:	19a9      	adds	r1, r5, r6
   81f6c:	4c14      	ldr	r4, [pc, #80]	; (81fc0 <udd_ep_free+0x80>)
	udd_configure_endpoint_bank(ep_index, 0);
   81f6e:	f027 07c0 	bic.w	r7, r7, #192	; 0xc0
	if (ptr_job->busy == false) {
   81f72:	00c9      	lsls	r1, r1, #3
	udd_configure_endpoint_bank(ep_index, 0);
   81f74:	f8c3 7100 	str.w	r7, [r3, #256]	; 0x100
	if (ptr_job->busy == false) {
   81f78:	1867      	adds	r7, r4, r1
   81f7a:	7d38      	ldrb	r0, [r7, #20]
   81f7c:	f010 0f01 	tst.w	r0, #1
   81f80:	d108      	bne.n	81f94 <udd_ep_free+0x54>
	udd_ep_job[ep_index - 1].stall_requested = false;
   81f82:	4435      	add	r5, r6
   81f84:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
   81f88:	7d23      	ldrb	r3, [r4, #20]
   81f8a:	f36f 0382 	bfc	r3, #2, #1
   81f8e:	7523      	strb	r3, [r4, #20]
   81f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (NULL == ptr_job->call_trans) {
   81f94:	f854 8001 	ldr.w	r8, [r4, r1]
	ptr_job->busy = false;
   81f98:	f36f 0000 	bfc	r0, #0, #1
   81f9c:	7538      	strb	r0, [r7, #20]
	if (NULL == ptr_job->call_trans) {
   81f9e:	f1b8 0f00 	cmp.w	r8, #0
   81fa2:	d0ee      	beq.n	81f82 <udd_ep_free+0x42>
	if (Is_udd_endpoint_in(ep_num)) {
   81fa4:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81fa8:	2001      	movs	r0, #1
	if (Is_udd_endpoint_in(ep_num)) {
   81faa:	071b      	lsls	r3, r3, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81fac:	eb05 0306 	add.w	r3, r5, r6
   81fb0:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
		ep_num |= USB_EP_DIR_IN;
   81fb4:	bf48      	it	mi
   81fb6:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81fba:	6899      	ldr	r1, [r3, #8]
   81fbc:	47c0      	blx	r8
   81fbe:	e7e0      	b.n	81f82 <udd_ep_free+0x42>
   81fc0:	20003504 	.word	0x20003504

00081fc4 <udd_ep_is_halted>:
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   81fc4:	f000 000f 	and.w	r0, r0, #15
	return (Is_udd_endpoint_stall_requested(ep_index)
   81fc8:	0143      	lsls	r3, r0, #5
   81fca:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   81fce:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   81fd2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
			|| ptr_job->stall_requested);
   81fd6:	069b      	lsls	r3, r3, #26
   81fd8:	d409      	bmi.n	81fee <udd_ep_is_halted+0x2a>
   81fda:	4b06      	ldr	r3, [pc, #24]	; (81ff4 <udd_ep_is_halted+0x30>)
   81fdc:	3801      	subs	r0, #1
   81fde:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   81fe2:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
   81fe6:	7d00      	ldrb	r0, [r0, #20]
   81fe8:	f3c0 0080 	ubfx	r0, r0, #2, #1
   81fec:	4770      	bx	lr
   81fee:	2001      	movs	r0, #1
}
   81ff0:	4770      	bx	lr
   81ff2:	bf00      	nop
   81ff4:	20003504 	.word	0x20003504

00081ff8 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   81ff8:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   81ffc:	2b02      	cmp	r3, #2
   81ffe:	d82c      	bhi.n	8205a <udd_ep_set_halt+0x62>
{
   82000:	b4f0      	push	{r4, r5, r6, r7}
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   82002:	4e24      	ldr	r6, [pc, #144]	; (82094 <udd_ep_set_halt+0x9c>)
   82004:	015c      	lsls	r4, r3, #5
   82006:	1937      	adds	r7, r6, r4
   82008:	f8d7 211c 	ldr.w	r2, [r7, #284]	; 0x11c
   8200c:	0692      	lsls	r2, r2, #26
   8200e:	d421      	bmi.n	82054 <udd_ep_set_halt+0x5c>
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   82010:	4921      	ldr	r1, [pc, #132]	; (82098 <udd_ep_set_halt+0xa0>)
	ptr_job = &udd_ep_job[ep_index - 1];
   82012:	1e5a      	subs	r2, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   82014:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   82018:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   8201c:	7d15      	ldrb	r5, [r2, #20]
   8201e:	f015 0104 	ands.w	r1, r5, #4
   82022:	d117      	bne.n	82054 <udd_ep_set_halt+0x5c>
	if (ptr_job->busy == true) {
   82024:	07ed      	lsls	r5, r5, #31
   82026:	d41a      	bmi.n	8205e <udd_ep_set_halt+0x66>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82028:	0601      	lsls	r1, r0, #24
   8202a:	d41a      	bmi.n	82062 <udd_ep_set_halt+0x6a>
	udd_ack_stall(ep_index);
   8202c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
	udd_enable_stall_handshake(ep_index);
   82030:	2220      	movs	r2, #32
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82032:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
   82036:	f504 2420 	add.w	r4, r4, #655360	; 0xa0000
   8203a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
	return true;
   8203e:	2001      	movs	r0, #1
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82040:	f023 0302 	bic.w	r3, r3, #2
   82044:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
	udd_ack_stall(ep_index);
   82048:	f8c4 1118 	str.w	r1, [r4, #280]	; 0x118
	udd_enable_stall_handshake(ep_index);
   8204c:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
}
   82050:	bcf0      	pop	{r4, r5, r6, r7}
   82052:	4770      	bx	lr
		return true; // Already STALL
   82054:	2001      	movs	r0, #1
}
   82056:	bcf0      	pop	{r4, r5, r6, r7}
   82058:	4770      	bx	lr
		return false;
   8205a:	2000      	movs	r0, #0
   8205c:	4770      	bx	lr
   8205e:	4608      	mov	r0, r1
   82060:	e7f9      	b.n	82056 <udd_ep_set_halt+0x5e>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82062:	f8d7 111c 	ldr.w	r1, [r7, #284]	; 0x11c
   82066:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   8206a:	d0df      	beq.n	8202c <udd_ep_set_halt+0x34>
			udd_enable_bank_interrupt(ep_index);
   8206c:	f44f 2580 	mov.w	r5, #262144	; 0x40000
			udd_enable_endpoint_interrupt(ep_index);
   82070:	f44f 7180 	mov.w	r1, #256	; 0x100
			ptr_job->stall_requested = true;
   82074:	7d14      	ldrb	r4, [r2, #20]
			udd_enable_bank_interrupt(ep_index);
   82076:	f103 0008 	add.w	r0, r3, #8
   8207a:	eb06 1040 	add.w	r0, r6, r0, lsl #5
			ptr_job->stall_requested = true;
   8207e:	f044 0404 	orr.w	r4, r4, #4
   82082:	7514      	strb	r4, [r2, #20]
			udd_enable_bank_interrupt(ep_index);
   82084:	6045      	str	r5, [r0, #4]
			udd_enable_endpoint_interrupt(ep_index);
   82086:	6932      	ldr	r2, [r6, #16]
   82088:	fa01 f303 	lsl.w	r3, r1, r3
   8208c:	4313      	orrs	r3, r2
   8208e:	6133      	str	r3, [r6, #16]
			return true;
   82090:	2001      	movs	r0, #1
   82092:	e7e0      	b.n	82056 <udd_ep_set_halt+0x5e>
   82094:	400a4000 	.word	0x400a4000
   82098:	20003504 	.word	0x20003504

0008209c <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
   8209c:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
   820a0:	2802      	cmp	r0, #2
   820a2:	d854      	bhi.n	8214e <udd_ep_clear_halt+0xb2>
{
   820a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	ptr_job = &udd_ep_job[ep - 1];
   820a6:	1e43      	subs	r3, r0, #1
	if (ptr_job->stall_requested) {
   820a8:	005d      	lsls	r5, r3, #1
   820aa:	4c2e      	ldr	r4, [pc, #184]	; (82164 <udd_ep_clear_halt+0xc8>)
   820ac:	18ea      	adds	r2, r5, r3
   820ae:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
   820b2:	7d11      	ldrb	r1, [r2, #20]
   820b4:	0749      	lsls	r1, r1, #29
   820b6:	d53f      	bpl.n	82138 <udd_ep_clear_halt+0x9c>
		udd_disable_bank_interrupt(ep);
   820b8:	f44f 2c80 	mov.w	ip, #262144	; 0x40000
		udd_disable_endpoint_interrupt(ep);
   820bc:	f44f 7780 	mov.w	r7, #256	; 0x100
		ptr_job->stall_requested = false;
   820c0:	f892 e014 	ldrb.w	lr, [r2, #20]
		udd_disable_bank_interrupt(ep);
   820c4:	4e28      	ldr	r6, [pc, #160]	; (82168 <udd_ep_clear_halt+0xcc>)
		ptr_job->stall_requested = false;
   820c6:	f102 0110 	add.w	r1, r2, #16
   820ca:	f36f 0e82 	bfc	lr, #2, #1
		udd_disable_bank_interrupt(ep);
   820ce:	0142      	lsls	r2, r0, #5
		ptr_job->stall_requested = false;
   820d0:	f881 e004 	strb.w	lr, [r1, #4]
		udd_disable_bank_interrupt(ep);
   820d4:	eb06 0e02 	add.w	lr, r6, r2
   820d8:	f8ce c108 	str.w	ip, [lr, #264]	; 0x108
		udd_disable_endpoint_interrupt(ep);
   820dc:	6931      	ldr	r1, [r6, #16]
   820de:	fa07 f000 	lsl.w	r0, r7, r0
   820e2:	ea21 0000 	bic.w	r0, r1, r0
   820e6:	6130      	str	r0, [r6, #16]
	if (Is_udd_endpoint_stall_requested(ep)) {
   820e8:	f8de 111c 	ldr.w	r1, [lr, #284]	; 0x11c
   820ec:	068f      	lsls	r7, r1, #26
   820ee:	d515      	bpl.n	8211c <udd_ep_clear_halt+0x80>
		if (Is_udd_stall(ep)) {
   820f0:	f102 2140 	add.w	r1, r2, #1073758208	; 0x40004000
   820f4:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   820f8:	f8d1 011c 	ldr.w	r0, [r1, #284]	; 0x11c
   820fc:	0486      	lsls	r6, r0, #18
   820fe:	d428      	bmi.n	82152 <udd_ep_clear_halt+0xb6>
		udd_disable_stall_handshake(ep);
   82100:	2020      	movs	r0, #32
   82102:	f102 2140 	add.w	r1, r2, #1073758208	; 0x40004000
   82106:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   8210a:	460a      	mov	r2, r1
   8210c:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_enable_endpoint_bank_autoswitch(ep);
   82110:	f8d1 1104 	ldr.w	r1, [r1, #260]	; 0x104
   82114:	f041 0102 	orr.w	r1, r1, #2
   82118:	f8c2 1104 	str.w	r1, [r2, #260]	; 0x104
		if (ptr_job->busy == true) {
   8211c:	442b      	add	r3, r5
   8211e:	00db      	lsls	r3, r3, #3
   82120:	18e2      	adds	r2, r4, r3
   82122:	7d11      	ldrb	r1, [r2, #20]
   82124:	07c8      	lsls	r0, r1, #31
   82126:	d510      	bpl.n	8214a <udd_ep_clear_halt+0xae>
			ptr_job->busy = false;
   82128:	7d11      	ldrb	r1, [r2, #20]
			ptr_job->call_nohalt();
   8212a:	58e3      	ldr	r3, [r4, r3]
			ptr_job->busy = false;
   8212c:	f36f 0100 	bfc	r1, #0, #1
   82130:	7511      	strb	r1, [r2, #20]
			ptr_job->call_nohalt();
   82132:	4798      	blx	r3
	return true;
   82134:	2001      	movs	r0, #1
   82136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if (Is_udd_endpoint_stall_requested(ep)) {
   82138:	0142      	lsls	r2, r0, #5
   8213a:	f102 2140 	add.w	r1, r2, #1073758208	; 0x40004000
   8213e:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82142:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   82146:	0689      	lsls	r1, r1, #26
   82148:	d4d2      	bmi.n	820f0 <udd_ep_clear_halt+0x54>
	return true;
   8214a:	2001      	movs	r0, #1
   8214c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		return false;
   8214e:	2000      	movs	r0, #0
   82150:	4770      	bx	lr
			udd_ack_stall(ep);
   82152:	f44f 5600 	mov.w	r6, #8192	; 0x2000
			udd_reset_data_toggle(ep);
   82156:	2040      	movs	r0, #64	; 0x40
			udd_ack_stall(ep);
   82158:	f8c1 6118 	str.w	r6, [r1, #280]	; 0x118
			udd_reset_data_toggle(ep);
   8215c:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
   82160:	e7ce      	b.n	82100 <udd_ep_clear_halt+0x64>
   82162:	bf00      	nop
   82164:	20003504 	.word	0x20003504
   82168:	400a4000 	.word	0x400a4000

0008216c <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   8216c:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   82170:	2802      	cmp	r0, #2
   82172:	d82b      	bhi.n	821cc <udd_ep_run+0x60>
{
   82174:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	if ((!Is_udd_endpoint_enabled(ep))
   82178:	0144      	lsls	r4, r0, #5
   8217a:	f104 2440 	add.w	r4, r4, #1073758208	; 0x40004000
   8217e:	f504 2420 	add.w	r4, r4, #655360	; 0xa0000
   82182:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
   82186:	07ed      	lsls	r5, r5, #31
   82188:	d51d      	bpl.n	821c6 <udd_ep_run+0x5a>
			|| Is_udd_endpoint_stall_requested(ep)
   8218a:	f8d4 411c 	ldr.w	r4, [r4, #284]	; 0x11c
   8218e:	06a4      	lsls	r4, r4, #26
   82190:	d419      	bmi.n	821c6 <udd_ep_run+0x5a>
	ptr_job = &udd_ep_job[ep - 1];
   82192:	1e47      	subs	r7, r0, #1
			|| ptr_job->stall_requested) {
   82194:	ea4f 0c47 	mov.w	ip, r7, lsl #1
   82198:	4e28      	ldr	r6, [pc, #160]	; (8223c <udd_ep_run+0xd0>)
   8219a:	eb0c 0507 	add.w	r5, ip, r7
   8219e:	eb06 05c5 	add.w	r5, r6, r5, lsl #3
   821a2:	f895 e014 	ldrb.w	lr, [r5, #20]
   821a6:	f01e 0804 	ands.w	r8, lr, #4
   821aa:	d10c      	bne.n	821c6 <udd_ep_run+0x5a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   821ac:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   821b0:	b672      	cpsid	i
   821b2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   821b6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 82244 <udd_ep_run+0xd8>
	if (ptr_job->busy == true) {
   821ba:	f01e 0f01 	tst.w	lr, #1
   821be:	f889 8000 	strb.w	r8, [r9]
   821c2:	d005      	beq.n	821d0 <udd_ep_run+0x64>
	if (cpu_irq_is_enabled_flags(flags))
   821c4:	b38c      	cbz	r4, 8222a <udd_ep_run+0xbe>
		return false;
   821c6:	2000      	movs	r0, #0
   821c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   821cc:	2000      	movs	r0, #0
}
   821ce:	4770      	bx	lr
	ptr_job->busy = true;
   821d0:	f895 e014 	ldrb.w	lr, [r5, #20]
   821d4:	f04e 0e01 	orr.w	lr, lr, #1
   821d8:	f885 e014 	strb.w	lr, [r5, #20]
   821dc:	b1f4      	cbz	r4, 8221c <udd_ep_run+0xb0>
	ptr_job->buf_cnt = 0;
   821de:	f04f 0e00 	mov.w	lr, #0
	ptr_job->buf = buf;
   821e2:	eb0c 0407 	add.w	r4, ip, r7
	ptr_job->call_trans = callback;
   821e6:	9d08      	ldr	r5, [sp, #32]
	ptr_job->buf = buf;
   821e8:	00e4      	lsls	r4, r4, #3
	ptr_job->call_trans = callback;
   821ea:	5135      	str	r5, [r6, r4]
	ptr_job->buf = buf;
   821ec:	4434      	add	r4, r6
   821ee:	6062      	str	r2, [r4, #4]
	ptr_job->buf_size = buf_size;
   821f0:	60a3      	str	r3, [r4, #8]
	ptr_job->buf_cnt = 0;
   821f2:	f8c4 e00c 	str.w	lr, [r4, #12]
	ptr_job->buf_load = 0;
   821f6:	f8c4 e010 	str.w	lr, [r4, #16]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   821fa:	b159      	cbz	r1, 82214 <udd_ep_run+0xa8>
   821fc:	4467      	add	r7, ip
   821fe:	eb06 06c7 	add.w	r6, r6, r7, lsl #3
   82202:	7d33      	ldrb	r3, [r6, #20]
	udd_ep_trans_done(ep);
   82204:	4a0e      	ldr	r2, [pc, #56]	; (82240 <udd_ep_run+0xd4>)
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   82206:	f361 0341 	bfi	r3, r1, #1, #1
   8220a:	7533      	strb	r3, [r6, #20]
	udd_ep_trans_done(ep);
   8220c:	4790      	blx	r2
	return true;
   8220e:	2001      	movs	r0, #1
}
   82210:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   82214:	fab3 f183 	clz	r1, r3
   82218:	0949      	lsrs	r1, r1, #5
   8221a:	e7ef      	b.n	821fc <udd_ep_run+0x90>
		cpu_irq_enable();
   8221c:	2401      	movs	r4, #1
   8221e:	f889 4000 	strb.w	r4, [r9]
   82222:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82226:	b662      	cpsie	i
   82228:	e7d9      	b.n	821de <udd_ep_run+0x72>
   8222a:	2301      	movs	r3, #1
   8222c:	f889 3000 	strb.w	r3, [r9]
   82230:	f3bf 8f5f 	dmb	sy
   82234:	b662      	cpsie	i
		return false; // Job already on going
   82236:	4620      	mov	r0, r4
   82238:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   8223c:	20003504 	.word	0x20003504
   82240:	00080e41 	.word	0x00080e41
   82244:	20000244 	.word	0x20000244

00082248 <udd_ep_abort>:
	udd_endpoint_dma_set_control(ep_index, 0);
   82248:	2100      	movs	r1, #0
   8224a:	4b1e      	ldr	r3, [pc, #120]	; (822c4 <udd_ep_abort+0x7c>)
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   8224c:	f000 020f 	and.w	r2, r0, #15
	udd_endpoint_dma_set_control(ep_index, 0);
   82250:	eb03 1302 	add.w	r3, r3, r2, lsl #4
{
   82254:	b4f0      	push	{r4, r5, r6, r7}
	udd_endpoint_dma_set_control(ep_index, 0);
   82256:	6099      	str	r1, [r3, #8]
	if (ep & USB_EP_DIR_IN) {
   82258:	0601      	lsls	r1, r0, #24
   8225a:	d422      	bmi.n	822a2 <udd_ep_abort+0x5a>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   8225c:	1e54      	subs	r4, r2, #1
	if (ptr_job->busy == false) {
   8225e:	0065      	lsls	r5, r4, #1
   82260:	192b      	adds	r3, r5, r4
   82262:	4819      	ldr	r0, [pc, #100]	; (822c8 <udd_ep_abort+0x80>)
   82264:	00db      	lsls	r3, r3, #3
   82266:	18c1      	adds	r1, r0, r3
   82268:	7d0e      	ldrb	r6, [r1, #20]
   8226a:	07f7      	lsls	r7, r6, #31
   8226c:	d401      	bmi.n	82272 <udd_ep_abort+0x2a>
}
   8226e:	bcf0      	pop	{r4, r5, r6, r7}
   82270:	4770      	bx	lr
	ptr_job->busy = false;
   82272:	4637      	mov	r7, r6
	if (NULL == ptr_job->call_trans) {
   82274:	58c6      	ldr	r6, [r0, r3]
	ptr_job->busy = false;
   82276:	f36f 0700 	bfc	r7, #0, #1
   8227a:	750f      	strb	r7, [r1, #20]
	if (NULL == ptr_job->call_trans) {
   8227c:	2e00      	cmp	r6, #0
   8227e:	d0f6      	beq.n	8226e <udd_ep_abort+0x26>
	if (Is_udd_endpoint_in(ep_num)) {
   82280:	f102 0308 	add.w	r3, r2, #8
   82284:	4911      	ldr	r1, [pc, #68]	; (822cc <udd_ep_abort+0x84>)
   82286:	015b      	lsls	r3, r3, #5
   82288:	58cb      	ldr	r3, [r1, r3]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8228a:	442c      	add	r4, r5
   8228c:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
	if (Is_udd_endpoint_in(ep_num)) {
   82290:	071b      	lsls	r3, r3, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82292:	6881      	ldr	r1, [r0, #8]
   82294:	4633      	mov	r3, r6
}
   82296:	bcf0      	pop	{r4, r5, r6, r7}
		ep_num |= USB_EP_DIR_IN;
   82298:	bf48      	it	mi
   8229a:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8229e:	2001      	movs	r0, #1
   822a0:	4718      	bx	r3
			udd_kill_last_in_bank(ep_index);
   822a2:	f44f 7000 	mov.w	r0, #512	; 0x200
		for(;udd_nb_busy_bank(ep_index);) {
   822a6:	4909      	ldr	r1, [pc, #36]	; (822cc <udd_ep_abort+0x84>)
   822a8:	eb01 1142 	add.w	r1, r1, r2, lsl #5
   822ac:	f8d1 311c 	ldr.w	r3, [r1, #284]	; 0x11c
   822b0:	f413 2f40 	tst.w	r3, #786432	; 0xc0000
   822b4:	d0d2      	beq.n	8225c <udd_ep_abort+0x14>
			udd_kill_last_in_bank(ep_index);
   822b6:	f8c1 0114 	str.w	r0, [r1, #276]	; 0x114
			while(Is_udd_kill_last(ep_index));
   822ba:	f8d1 311c 	ldr.w	r3, [r1, #284]	; 0x11c
   822be:	059b      	lsls	r3, r3, #22
   822c0:	d4fb      	bmi.n	822ba <udd_ep_abort+0x72>
   822c2:	e7f3      	b.n	822ac <udd_ep_abort+0x64>
   822c4:	400a4300 	.word	0x400a4300
   822c8:	20003504 	.word	0x20003504
   822cc:	400a4000 	.word	0x400a4000

000822d0 <udd_test_mode_j>:
	udd_enable_hs_test_mode();
   822d0:	4a07      	ldr	r2, [pc, #28]	; (822f0 <udd_test_mode_j+0x20>)
   822d2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   822d6:	f023 0303 	bic.w	r3, r3, #3
   822da:	f043 0302 	orr.w	r3, r3, #2
   822de:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_j();
   822e2:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   822e6:	f043 0304 	orr.w	r3, r3, #4
   822ea:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   822ee:	4770      	bx	lr
   822f0:	400a4000 	.word	0x400a4000

000822f4 <udd_test_mode_k>:
	udd_enable_hs_test_mode();
   822f4:	4a07      	ldr	r2, [pc, #28]	; (82314 <udd_test_mode_k+0x20>)
   822f6:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   822fa:	f023 0303 	bic.w	r3, r3, #3
   822fe:	f043 0302 	orr.w	r3, r3, #2
   82302:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_k();
   82306:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   8230a:	f043 0308 	orr.w	r3, r3, #8
   8230e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   82312:	4770      	bx	lr
   82314:	400a4000 	.word	0x400a4000

00082318 <udd_test_mode_se0_nak>:
	udd_enable_hs_test_mode();
   82318:	4a04      	ldr	r2, [pc, #16]	; (8232c <udd_test_mode_se0_nak+0x14>)
   8231a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   8231e:	f023 0303 	bic.w	r3, r3, #3
   82322:	f043 0302 	orr.w	r3, r3, #2
   82326:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
   8232a:	4770      	bx	lr
   8232c:	400a4000 	.word	0x400a4000

00082330 <udd_test_mode_packet>:
{
   82330:	b470      	push	{r4, r5, r6}
   82332:	b08f      	sub	sp, #60	; 0x3c
	const uint8_t test_packet[] = {
   82334:	466c      	mov	r4, sp
	udd_disable_endpoint(0);
   82336:	2601      	movs	r6, #1
	const uint8_t test_packet[] = {
   82338:	4d1f      	ldr	r5, [pc, #124]	; (823b8 <udd_test_mode_packet+0x88>)
   8233a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8233c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8233e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82340:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82342:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   82344:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   82346:	e895 0003 	ldmia.w	r5, {r0, r1}
	udd_disable_endpoint(0);
   8234a:	4d1c      	ldr	r5, [pc, #112]	; (823bc <udd_test_mode_packet+0x8c>)
	const uint8_t test_packet[] = {
   8234c:	f844 0b04 	str.w	r0, [r4], #4
   82350:	7021      	strb	r1, [r4, #0]
	udd_disable_endpoint(0);
   82352:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
	udd_configure_endpoint(0, // endpoint number: 0
   82356:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
	udd_enable_hs_test_mode_packet();
   8235a:	4a19      	ldr	r2, [pc, #100]	; (823c0 <udd_test_mode_packet+0x90>)
	udd_configure_endpoint(0, // endpoint number: 0
   8235c:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   82360:	f023 0303 	bic.w	r3, r3, #3
   82364:	f043 036b 	orr.w	r3, r3, #107	; 0x6b
   82368:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
	ptr_src = test_packet;
   8236c:	466b      	mov	r3, sp
	udd_enable_endpoint(0);
   8236e:	f8c5 6104 	str.w	r6, [r5, #260]	; 0x104
	udd_enable_hs_test_mode();
   82372:	f8d5 10e0 	ldr.w	r1, [r5, #224]	; 0xe0
   82376:	f10d 0035 	add.w	r0, sp, #53	; 0x35
   8237a:	f021 0103 	bic.w	r1, r1, #3
   8237e:	f041 0102 	orr.w	r1, r1, #2
   82382:	f8c5 10e0 	str.w	r1, [r5, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   82386:	f8d5 10e0 	ldr.w	r1, [r5, #224]	; 0xe0
   8238a:	f041 0110 	orr.w	r1, r1, #16
   8238e:	f8c5 10e0 	str.w	r1, [r5, #224]	; 0xe0
		*ptr_dest++ = *ptr_src++;
   82392:	f813 1b01 	ldrb.w	r1, [r3], #1
	for (i = 0; i < sizeof(test_packet); i++) {
   82396:	4283      	cmp	r3, r0
		*ptr_dest++ = *ptr_src++;
   82398:	f802 1f01 	strb.w	r1, [r2, #1]!
	for (i = 0; i < sizeof(test_packet); i++) {
   8239c:	d1f9      	bne.n	82392 <udd_test_mode_packet+0x62>
	udd_ack_in_send(0);
   8239e:	f44f 6180 	mov.w	r1, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   823a2:	f44f 6200 	mov.w	r2, #2048	; 0x800
	udd_ack_in_send(0);
   823a6:	4b05      	ldr	r3, [pc, #20]	; (823bc <udd_test_mode_packet+0x8c>)
   823a8:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   823ac:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
}
   823b0:	b00f      	add	sp, #60	; 0x3c
   823b2:	bc70      	pop	{r4, r5, r6}
   823b4:	4770      	bx	lr
   823b6:	bf00      	nop
   823b8:	00089d40 	.word	0x00089d40
   823bc:	400a4000 	.word	0x400a4000
   823c0:	2017ffff 	.word	0x2017ffff

000823c4 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   823c4:	3801      	subs	r0, #1
   823c6:	2802      	cmp	r0, #2
   823c8:	d81e      	bhi.n	82408 <_write+0x44>
{
   823ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   823ce:	4615      	mov	r5, r2
		return -1;
	}

	for (; len != 0; --len) {
   823d0:	b1ba      	cbz	r2, 82402 <_write+0x3e>
   823d2:	460e      	mov	r6, r1
   823d4:	460c      	mov	r4, r1
   823d6:	f8df 803c 	ldr.w	r8, [pc, #60]	; 82414 <_write+0x50>
   823da:	4f0d      	ldr	r7, [pc, #52]	; (82410 <_write+0x4c>)
   823dc:	e001      	b.n	823e2 <_write+0x1e>
   823de:	3d01      	subs	r5, #1
   823e0:	d00d      	beq.n	823fe <_write+0x3a>
		if (ptr_put(stdio_base, *ptr++) < 0) {
   823e2:	f814 1b01 	ldrb.w	r1, [r4], #1
   823e6:	f8d8 0000 	ldr.w	r0, [r8]
   823ea:	683b      	ldr	r3, [r7, #0]
   823ec:	4798      	blx	r3
   823ee:	2800      	cmp	r0, #0
   823f0:	eba4 0006 	sub.w	r0, r4, r6
   823f4:	daf3      	bge.n	823de <_write+0x1a>
		return -1;
   823f6:	f04f 30ff 	mov.w	r0, #4294967295
   823fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   823fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len != 0; --len) {
   82402:	4610      	mov	r0, r2
			return -1;
		}
		++nChars;
	}
	return nChars;
}
   82404:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   82408:	f04f 30ff 	mov.w	r0, #4294967295
}
   8240c:	4770      	bx	lr
   8240e:	bf00      	nop
   82410:	200035a4 	.word	0x200035a4
   82414:	200035a8 	.word	0x200035a8

00082418 <LED_Off>:
 */
void LED_Off(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82418:	2811      	cmp	r0, #17
   8241a:	d006      	beq.n	8242a <LED_Off+0x12>
   8241c:	2810      	cmp	r0, #16
   8241e:	d002      	beq.n	82426 <LED_Off+0xe>
   82420:	284c      	cmp	r0, #76	; 0x4c
   82422:	d000      	beq.n	82426 <LED_Off+0xe>
   82424:	4770      	bx	lr
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
				gpio_set_pin_low(led_gpio);
   82426:	4b03      	ldr	r3, [pc, #12]	; (82434 <LED_Off+0x1c>)
   82428:	4718      	bx	r3
{
   8242a:	b510      	push	{r4, lr}
				gpio_set_pin_low(led_gpio);
   8242c:	4b01      	ldr	r3, [pc, #4]	; (82434 <LED_Off+0x1c>)
   8242e:	4798      	blx	r3
   82430:	bd10      	pop	{r4, pc}
   82432:	bf00      	nop
   82434:	00082861 	.word	0x00082861

00082438 <LED_On>:
 */
void LED_On(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82438:	2811      	cmp	r0, #17
   8243a:	d006      	beq.n	8244a <LED_On+0x12>
   8243c:	2810      	cmp	r0, #16
   8243e:	d002      	beq.n	82446 <LED_On+0xe>
   82440:	284c      	cmp	r0, #76	; 0x4c
   82442:	d000      	beq.n	82446 <LED_On+0xe>
   82444:	4770      	bx	lr
			if (LED_DESCRIPTOR[i].ul_active_level == ACTIVE_LEVEL_IS_HIGH) {
				gpio_set_pin_high(led_gpio);
   82446:	4b03      	ldr	r3, [pc, #12]	; (82454 <LED_On+0x1c>)
   82448:	4718      	bx	r3
{
   8244a:	b510      	push	{r4, lr}
				gpio_set_pin_high(led_gpio);
   8244c:	4b01      	ldr	r3, [pc, #4]	; (82454 <LED_On+0x1c>)
   8244e:	4798      	blx	r3
   82450:	bd10      	pop	{r4, pc}
   82452:	bf00      	nop
   82454:	00082845 	.word	0x00082845

00082458 <Reset_Handler>:

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   82458:	4917      	ldr	r1, [pc, #92]	; (824b8 <Reset_Handler+0x60>)
   8245a:	4818      	ldr	r0, [pc, #96]	; (824bc <Reset_Handler+0x64>)
{
   8245c:	b508      	push	{r3, lr}
	if (pSrc != pDest) {
   8245e:	4281      	cmp	r1, r0
   82460:	d009      	beq.n	82476 <Reset_Handler+0x1e>
		for (; pDest < &_erelocate;) {
   82462:	4b17      	ldr	r3, [pc, #92]	; (824c0 <Reset_Handler+0x68>)
   82464:	4298      	cmp	r0, r3
   82466:	d206      	bcs.n	82476 <Reset_Handler+0x1e>
			*pDest++ = *pSrc++;
   82468:	43c2      	mvns	r2, r0
   8246a:	441a      	add	r2, r3
   8246c:	f022 0203 	bic.w	r2, r2, #3
   82470:	3204      	adds	r2, #4
   82472:	4b14      	ldr	r3, [pc, #80]	; (824c4 <Reset_Handler+0x6c>)
   82474:	4798      	blx	r3
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   82476:	4814      	ldr	r0, [pc, #80]	; (824c8 <Reset_Handler+0x70>)
   82478:	4b14      	ldr	r3, [pc, #80]	; (824cc <Reset_Handler+0x74>)
   8247a:	4298      	cmp	r0, r3
   8247c:	d207      	bcs.n	8248e <Reset_Handler+0x36>
		*pDest++ = 0;
   8247e:	43c2      	mvns	r2, r0
   82480:	441a      	add	r2, r3
   82482:	f022 0203 	bic.w	r2, r2, #3
   82486:	3204      	adds	r2, #4
   82488:	2100      	movs	r1, #0
   8248a:	4b11      	ldr	r3, [pc, #68]	; (824d0 <Reset_Handler+0x78>)
   8248c:	4798      	blx	r3
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8248e:	4b11      	ldr	r3, [pc, #68]	; (824d4 <Reset_Handler+0x7c>)
   82490:	4a11      	ldr	r2, [pc, #68]	; (824d8 <Reset_Handler+0x80>)
   82492:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82496:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   8249a:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   8249e:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   824a2:	6091      	str	r1, [r2, #8]
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   824a4:	d203      	bcs.n	824ae <Reset_Handler+0x56>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   824a6:	6893      	ldr	r3, [r2, #8]
   824a8:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   824ac:	6093      	str	r3, [r2, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   824ae:	4b0b      	ldr	r3, [pc, #44]	; (824dc <Reset_Handler+0x84>)
   824b0:	4798      	blx	r3

	/* Branch to main function */
	main();
   824b2:	4b0b      	ldr	r3, [pc, #44]	; (824e0 <Reset_Handler+0x88>)
   824b4:	4798      	blx	r3
   824b6:	e7fe      	b.n	824b6 <Reset_Handler+0x5e>
   824b8:	0008a04c 	.word	0x0008a04c
   824bc:	20000000 	.word	0x20000000
   824c0:	20000c88 	.word	0x20000c88
   824c4:	00083939 	.word	0x00083939
   824c8:	20000c88 	.word	0x20000c88
   824cc:	200035e0 	.word	0x200035e0
   824d0:	00083a25 	.word	0x00083a25
   824d4:	00080000 	.word	0x00080000
   824d8:	e000ed00 	.word	0xe000ed00
   824dc:	000838c1 	.word	0x000838c1
   824e0:	00080269 	.word	0x00080269

000824e4 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   824e4:	b510      	push	{r4, lr}
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   824e6:	203e      	movs	r0, #62	; 0x3e
   824e8:	4b07      	ldr	r3, [pc, #28]	; (82508 <sysclk_enable_usb+0x24>)
   824ea:	4798      	blx	r3
   824ec:	4c07      	ldr	r4, [pc, #28]	; (8250c <sysclk_enable_usb+0x28>)
		return pmc_osc_is_ready_main_xtal();
   824ee:	47a0      	blx	r4
   824f0:	2800      	cmp	r0, #0
   824f2:	d0fc      	beq.n	824ee <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   824f4:	f44f 0271 	mov.w	r2, #15794176	; 0xf10000
   824f8:	4b05      	ldr	r3, [pc, #20]	; (82510 <sysclk_enable_usb+0x2c>)
   824fa:	4c06      	ldr	r4, [pc, #24]	; (82514 <sysclk_enable_usb+0x30>)
   824fc:	61da      	str	r2, [r3, #28]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_upll();
   824fe:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   82500:	2800      	cmp	r0, #0
   82502:	d0fc      	beq.n	824fe <sysclk_enable_usb+0x1a>

	pll_enable_source(CONFIG_PLL1_SOURCE);
	pll_config_defaults(&pllcfg, 1);
	pll_enable(&pllcfg, 1);
	pll_wait_for_lock(1);
}
   82504:	bd10      	pop	{r4, pc}
   82506:	bf00      	nop
   82508:	00082645 	.word	0x00082645
   8250c:	0008266d 	.word	0x0008266d
   82510:	400e0400 	.word	0x400e0400
   82514:	000826e5 	.word	0x000826e5

00082518 <sysclk_init>:
		pll_disable(1);
	}
}

void sysclk_init(void)
{
   82518:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8251a:	4812      	ldr	r0, [pc, #72]	; (82564 <sysclk_init+0x4c>)
   8251c:	4d12      	ldr	r5, [pc, #72]	; (82568 <sysclk_init+0x50>)
   8251e:	47a8      	blx	r5
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   82520:	203e      	movs	r0, #62	; 0x3e
   82522:	4b12      	ldr	r3, [pc, #72]	; (8256c <sysclk_init+0x54>)
   82524:	4798      	blx	r3
   82526:	4c12      	ldr	r4, [pc, #72]	; (82570 <sysclk_init+0x58>)
		return pmc_osc_is_ready_main_xtal();
   82528:	47a0      	blx	r4
   8252a:	2800      	cmp	r0, #0
   8252c:	d0fc      	beq.n	82528 <sysclk_init+0x10>
#  ifndef CONFIG_PLL1_SOURCE
			pmc_osc_disable_main_xtal();
#  endif
		} else if (CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_XTAL ||
				CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_BYPASS) {
			pmc_mainck_osc_select(CKGR_MOR_MOSCSEL);
   8252e:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   82532:	4b10      	ldr	r3, [pc, #64]	; (82574 <sysclk_init+0x5c>)
   82534:	4798      	blx	r3
   82536:	4c10      	ldr	r4, [pc, #64]	; (82578 <sysclk_init+0x60>)
			while(!pmc_osc_is_ready_mainck());
   82538:	47a0      	blx	r4
   8253a:	2800      	cmp	r0, #0
   8253c:	d0fc      	beq.n	82538 <sysclk_init+0x20>
		pmc_disable_pllack(); // Always stop PLL first!
   8253e:	4b0f      	ldr	r3, [pc, #60]	; (8257c <sysclk_init+0x64>)
   82540:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   82542:	4b0f      	ldr	r3, [pc, #60]	; (82580 <sysclk_init+0x68>)
   82544:	4a0f      	ldr	r2, [pc, #60]	; (82584 <sysclk_init+0x6c>)
   82546:	4c10      	ldr	r4, [pc, #64]	; (82588 <sysclk_init+0x70>)
   82548:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
   8254a:	47a0      	blx	r4
   8254c:	2800      	cmp	r0, #0
   8254e:	d0fc      	beq.n	8254a <sysclk_init+0x32>
		}
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   82550:	4b0e      	ldr	r3, [pc, #56]	; (8258c <sysclk_init+0x74>)
   82552:	2010      	movs	r0, #16
   82554:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   82556:	4b0e      	ldr	r3, [pc, #56]	; (82590 <sysclk_init+0x78>)
   82558:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   8255a:	462b      	mov	r3, r5

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   8255c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
   82560:	4800      	ldr	r0, [pc, #0]	; (82564 <sysclk_init+0x4c>)
   82562:	4718      	bx	r3
   82564:	05b8d800 	.word	0x05b8d800
   82568:	20000125 	.word	0x20000125
   8256c:	00082645 	.word	0x00082645
   82570:	0008266d 	.word	0x0008266d
   82574:	0008268d 	.word	0x0008268d
   82578:	0008267d 	.word	0x0008267d
   8257c:	000826b5 	.word	0x000826b5
   82580:	400e0400 	.word	0x400e0400
   82584:	200f3f01 	.word	0x200f3f01
   82588:	000826c5 	.word	0x000826c5
   8258c:	000825ed 	.word	0x000825ed
   82590:	000836fd 	.word	0x000836fd

00082594 <pmc_switch_mck_to_mainck>:
 */
uint32_t pmc_switch_mck_to_mainck(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   82594:	4914      	ldr	r1, [pc, #80]	; (825e8 <pmc_switch_mck_to_mainck+0x54>)
   82596:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82598:	f023 0303 	bic.w	r3, r3, #3
   8259c:	f043 0301 	orr.w	r3, r3, #1
   825a0:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_MAIN_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   825a2:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   825a4:	071b      	lsls	r3, r3, #28
   825a6:	bf58      	it	pl
   825a8:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   825ac:	d502      	bpl.n	825b4 <pmc_switch_mck_to_mainck+0x20>
   825ae:	e004      	b.n	825ba <pmc_switch_mck_to_mainck+0x26>
			--ul_timeout) {
		if (ul_timeout == 0) {
   825b0:	3b01      	subs	r3, #1
   825b2:	d016      	beq.n	825e2 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   825b4:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   825b6:	0712      	lsls	r2, r2, #28
   825b8:	d5fa      	bpl.n	825b0 <pmc_switch_mck_to_mainck+0x1c>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   825ba:	490b      	ldr	r1, [pc, #44]	; (825e8 <pmc_switch_mck_to_mainck+0x54>)
   825bc:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   825be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   825c2:	4318      	orrs	r0, r3
   825c4:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   825c6:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   825c8:	0718      	lsls	r0, r3, #28
   825ca:	bf58      	it	pl
   825cc:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   825d0:	d502      	bpl.n	825d8 <pmc_switch_mck_to_mainck+0x44>
   825d2:	e004      	b.n	825de <pmc_switch_mck_to_mainck+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   825d4:	3b01      	subs	r3, #1
   825d6:	d004      	beq.n	825e2 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   825d8:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   825da:	0712      	lsls	r2, r2, #28
   825dc:	d5fa      	bpl.n	825d4 <pmc_switch_mck_to_mainck+0x40>
			return 1;
		}
	}

	return 0;
   825de:	2000      	movs	r0, #0
}
   825e0:	4770      	bx	lr
			return 1;
   825e2:	2001      	movs	r0, #1
   825e4:	4770      	bx	lr
   825e6:	bf00      	nop
   825e8:	400e0400 	.word	0x400e0400

000825ec <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   825ec:	4914      	ldr	r1, [pc, #80]	; (82640 <pmc_switch_mck_to_pllack+0x54>)
   825ee:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   825f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   825f4:	4318      	orrs	r0, r3
   825f6:	6308      	str	r0, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   825f8:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   825fa:	0718      	lsls	r0, r3, #28
   825fc:	bf58      	it	pl
   825fe:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   82602:	d502      	bpl.n	8260a <pmc_switch_mck_to_pllack+0x1e>
   82604:	e004      	b.n	82610 <pmc_switch_mck_to_pllack+0x24>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82606:	3b01      	subs	r3, #1
   82608:	d017      	beq.n	8263a <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8260a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8260c:	0712      	lsls	r2, r2, #28
   8260e:	d5fa      	bpl.n	82606 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   82610:	490b      	ldr	r1, [pc, #44]	; (82640 <pmc_switch_mck_to_pllack+0x54>)
   82612:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82614:	f023 0303 	bic.w	r3, r3, #3
   82618:	f043 0302 	orr.w	r3, r3, #2
   8261c:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8261e:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   82620:	0718      	lsls	r0, r3, #28
   82622:	bf58      	it	pl
   82624:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   82628:	d502      	bpl.n	82630 <pmc_switch_mck_to_pllack+0x44>
   8262a:	e004      	b.n	82636 <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8262c:	3b01      	subs	r3, #1
   8262e:	d004      	beq.n	8263a <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82630:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   82632:	0712      	lsls	r2, r2, #28
   82634:	d5fa      	bpl.n	8262c <pmc_switch_mck_to_pllack+0x40>
			return 1;
		}
	}

	return 0;
   82636:	2000      	movs	r0, #0
}
   82638:	4770      	bx	lr
			return 1;
   8263a:	2001      	movs	r0, #1
   8263c:	4770      	bx	lr
   8263e:	bf00      	nop
   82640:	400e0400 	.word	0x400e0400

00082644 <pmc_osc_enable_main_xtal>:
 *
 * \param ul_xtal_startup_time Xtal start-up time, in number of slow clocks.
 */
void pmc_osc_enable_main_xtal(uint32_t ul_xtal_startup_time)
{
	uint32_t mor = PMC->CKGR_MOR;
   82644:	4908      	ldr	r1, [pc, #32]	; (82668 <pmc_osc_enable_main_xtal+0x24>)
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   82646:	0200      	lsls	r0, r0, #8
	PMC->CKGR_MOR = mor;
	/* Wait the main Xtal to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   82648:	460a      	mov	r2, r1
	uint32_t mor = PMC->CKGR_MOR;
   8264a:	6a0b      	ldr	r3, [r1, #32]
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   8264c:	b280      	uxth	r0, r0
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
   8264e:	f023 0303 	bic.w	r3, r3, #3
   82652:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82656:	f043 0301 	orr.w	r3, r3, #1
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   8265a:	4303      	orrs	r3, r0
	PMC->CKGR_MOR = mor;
   8265c:	620b      	str	r3, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   8265e:	6e93      	ldr	r3, [r2, #104]	; 0x68
   82660:	07db      	lsls	r3, r3, #31
   82662:	d5fc      	bpl.n	8265e <pmc_osc_enable_main_xtal+0x1a>
}
   82664:	4770      	bx	lr
   82666:	bf00      	nop
   82668:	400e0400 	.word	0x400e0400

0008266c <pmc_osc_is_ready_main_xtal>:
 *
 * \retval 0 main crystal is not ready, otherwise ready.
 */
uint32_t pmc_osc_is_ready_main_xtal(void)
{
	return (PMC->PMC_SR & PMC_SR_MOSCXTS);
   8266c:	4b02      	ldr	r3, [pc, #8]	; (82678 <pmc_osc_is_ready_main_xtal+0xc>)
   8266e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82670:	f000 0001 	and.w	r0, r0, #1
   82674:	4770      	bx	lr
   82676:	bf00      	nop
   82678:	400e0400 	.word	0x400e0400

0008267c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   8267c:	4b02      	ldr	r3, [pc, #8]	; (82688 <pmc_osc_is_ready_mainck+0xc>)
   8267e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   82680:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   82684:	4770      	bx	lr
   82686:	bf00      	nop
   82688:	400e0400 	.word	0x400e0400

0008268c <pmc_mainck_osc_select>:
 *
 * \param ul_xtal_rc 0 internal RC is selected, otherwise Main Crystal.
 */
void pmc_mainck_osc_select(uint32_t ul_xtal_rc)
{
	uint32_t mor = PMC->CKGR_MOR;
   8268c:	4b08      	ldr	r3, [pc, #32]	; (826b0 <pmc_mainck_osc_select+0x24>)
   8268e:	6a1b      	ldr	r3, [r3, #32]
	if (ul_xtal_rc) {
   82690:	b930      	cbnz	r0, 826a0 <pmc_mainck_osc_select+0x14>
		mor |=  CKGR_MOR_MOSCSEL;
	} else {
		mor &= ~CKGR_MOR_MOSCSEL;
   82692:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	}
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   82696:	4a06      	ldr	r2, [pc, #24]	; (826b0 <pmc_mainck_osc_select+0x24>)
   82698:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   8269c:	6213      	str	r3, [r2, #32]
   8269e:	4770      	bx	lr
		mor |=  CKGR_MOR_MOSCSEL;
   826a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   826a4:	4a02      	ldr	r2, [pc, #8]	; (826b0 <pmc_mainck_osc_select+0x24>)
   826a6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   826aa:	6213      	str	r3, [r2, #32]
   826ac:	4770      	bx	lr
   826ae:	bf00      	nop
   826b0:	400e0400 	.word	0x400e0400

000826b4 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   826b4:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   826b8:	4b01      	ldr	r3, [pc, #4]	; (826c0 <pmc_disable_pllack+0xc>)
   826ba:	629a      	str	r2, [r3, #40]	; 0x28
   826bc:	4770      	bx	lr
   826be:	bf00      	nop
   826c0:	400e0400 	.word	0x400e0400

000826c4 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   826c4:	4b02      	ldr	r3, [pc, #8]	; (826d0 <pmc_is_locked_pllack+0xc>)
   826c6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   826c8:	f000 0002 	and.w	r0, r0, #2
   826cc:	4770      	bx	lr
   826ce:	bf00      	nop
   826d0:	400e0400 	.word	0x400e0400

000826d4 <pmc_disable_upll_clock>:
/**
 * \brief Disable UPLL clock.
 */
void pmc_disable_upll_clock(void)
{
	PMC->CKGR_UCKR &= ~CKGR_UCKR_UPLLEN;
   826d4:	4a02      	ldr	r2, [pc, #8]	; (826e0 <pmc_disable_upll_clock+0xc>)
   826d6:	69d3      	ldr	r3, [r2, #28]
   826d8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   826dc:	61d3      	str	r3, [r2, #28]
   826de:	4770      	bx	lr
   826e0:	400e0400 	.word	0x400e0400

000826e4 <pmc_is_locked_upll>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   826e4:	4b02      	ldr	r3, [pc, #8]	; (826f0 <pmc_is_locked_upll+0xc>)
   826e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   826e8:	f000 0040 	and.w	r0, r0, #64	; 0x40
   826ec:	4770      	bx	lr
   826ee:	bf00      	nop
   826f0:	400e0400 	.word	0x400e0400

000826f4 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   826f4:	281d      	cmp	r0, #29
   826f6:	d80a      	bhi.n	8270e <pmc_enable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   826f8:	2301      	movs	r3, #1
   826fa:	4a07      	ldr	r2, [pc, #28]	; (82718 <pmc_enable_periph_clk+0x24>)
   826fc:	fa03 f000 	lsl.w	r0, r3, r0
   82700:	6993      	ldr	r3, [r2, #24]
   82702:	ea30 0303 	bics.w	r3, r0, r3
   82706:	d004      	beq.n	82712 <pmc_enable_periph_clk+0x1e>
			PMC->PMC_PCER0 = 1 << ul_id;
   82708:	6110      	str	r0, [r2, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   8270a:	2000      	movs	r0, #0
   8270c:	4770      	bx	lr
		return 1;
   8270e:	2001      	movs	r0, #1
   82710:	4770      	bx	lr
	return 0;
   82712:	2000      	movs	r0, #0
}
   82714:	4770      	bx	lr
   82716:	bf00      	nop
   82718:	400e0400 	.word	0x400e0400

0008271c <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   8271c:	281d      	cmp	r0, #29
   8271e:	d809      	bhi.n	82734 <pmc_disable_periph_clk+0x18>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   82720:	2301      	movs	r3, #1
   82722:	4a07      	ldr	r2, [pc, #28]	; (82740 <pmc_disable_periph_clk+0x24>)
   82724:	fa03 f000 	lsl.w	r0, r3, r0
   82728:	6993      	ldr	r3, [r2, #24]
   8272a:	ea30 0303 	bics.w	r3, r0, r3
   8272e:	d003      	beq.n	82738 <pmc_disable_periph_clk+0x1c>
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
   82730:	2000      	movs	r0, #0
}
   82732:	4770      	bx	lr
		return 1;
   82734:	2001      	movs	r0, #1
   82736:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
   82738:	6150      	str	r0, [r2, #20]
	return 0;
   8273a:	2000      	movs	r0, #0
   8273c:	4770      	bx	lr
   8273e:	bf00      	nop
   82740:	400e0400 	.word	0x400e0400

00082744 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   82744:	4b03      	ldr	r3, [pc, #12]	; (82754 <pmc_set_fast_startup_input+0x10>)
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   82746:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   8274a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8274c:	4310      	orrs	r0, r2
   8274e:	6718      	str	r0, [r3, #112]	; 0x70
   82750:	4770      	bx	lr
   82752:	bf00      	nop
   82754:	400e0400 	.word	0x400e0400

00082758 <pmc_enable_waitmode>:
 */
void pmc_enable_waitmode(void)
{
	uint32_t i;

	PMC->PMC_FSMR |= PMC_FSMR_LPM; /* Enter Wait mode */
   82758:	490a      	ldr	r1, [pc, #40]	; (82784 <pmc_enable_waitmode+0x2c>)
	SCB->SCR &= (uint32_t) ~ SCB_SCR_SLEEPDEEP_Msk; /* Deep sleep */
   8275a:	4a0b      	ldr	r2, [pc, #44]	; (82788 <pmc_enable_waitmode+0x30>)
	PMC->PMC_FSMR |= PMC_FSMR_LPM; /* Enter Wait mode */
   8275c:	6f0b      	ldr	r3, [r1, #112]	; 0x70
   8275e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   82762:	670b      	str	r3, [r1, #112]	; 0x70
	SCB->SCR &= (uint32_t) ~ SCB_SCR_SLEEPDEEP_Msk; /* Deep sleep */
   82764:	6913      	ldr	r3, [r2, #16]
   82766:	f023 0304 	bic.w	r3, r3, #4
   8276a:	6113      	str	r3, [r2, #16]
  __ASM volatile ("wfe");
   8276c:	bf20      	wfe
   8276e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
   82772:	bf00      	nop
	__WFE();

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
   82774:	3b01      	subs	r3, #1
   82776:	d1fc      	bne.n	82772 <pmc_enable_waitmode+0x1a>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
   82778:	4a02      	ldr	r2, [pc, #8]	; (82784 <pmc_enable_waitmode+0x2c>)
   8277a:	6a13      	ldr	r3, [r2, #32]
   8277c:	071b      	lsls	r3, r3, #28
   8277e:	d5fc      	bpl.n	8277a <pmc_enable_waitmode+0x22>

}
   82780:	4770      	bx	lr
   82782:	bf00      	nop
   82784:	400e0400 	.word	0x400e0400
   82788:	e000ed00 	.word	0xe000ed00

0008278c <udi_vendor_getsetting>:
	return false; // Not supported request
}

uint8_t udi_vendor_getsetting(void)
{
	return udi_vendor_alternate_setting;
   8278c:	4b01      	ldr	r3, [pc, #4]	; (82794 <udi_vendor_getsetting+0x8>)
}
   8278e:	7818      	ldrb	r0, [r3, #0]
   82790:	4770      	bx	lr
   82792:	bf00      	nop
   82794:	20003534 	.word	0x20003534

00082798 <udi_vendor_disable>:
	if (0 == udi_vendor_alternate_setting) {
   82798:	4b02      	ldr	r3, [pc, #8]	; (827a4 <udi_vendor_disable+0xc>)
   8279a:	781b      	ldrb	r3, [r3, #0]
   8279c:	b103      	cbz	r3, 827a0 <udi_vendor_disable+0x8>
   8279e:	4770      	bx	lr
		UDI_VENDOR_DISABLE_EXT();
   827a0:	4b01      	ldr	r3, [pc, #4]	; (827a8 <udi_vendor_disable+0x10>)
   827a2:	4718      	bx	r3
   827a4:	20003534 	.word	0x20003534
   827a8:	000808cd 	.word	0x000808cd

000827ac <udi_vendor_setup>:
	if (Udd_setup_is_in()) {
   827ac:	4b08      	ldr	r3, [pc, #32]	; (827d0 <udi_vendor_setup+0x24>)
   827ae:	781b      	ldrb	r3, [r3, #0]
   827b0:	f013 0f80 	tst.w	r3, #128	; 0x80
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   827b4:	f003 0360 	and.w	r3, r3, #96	; 0x60
	if (Udd_setup_is_in()) {
   827b8:	d103      	bne.n	827c2 <udi_vendor_setup+0x16>
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   827ba:	2b40      	cmp	r3, #64	; 0x40
   827bc:	d005      	beq.n	827ca <udi_vendor_setup+0x1e>
}
   827be:	2000      	movs	r0, #0
   827c0:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   827c2:	2b40      	cmp	r3, #64	; 0x40
   827c4:	d1fb      	bne.n	827be <udi_vendor_setup+0x12>
			return UDI_VENDOR_SETUP_IN_RECEIVED();
   827c6:	4b03      	ldr	r3, [pc, #12]	; (827d4 <udi_vendor_setup+0x28>)
   827c8:	4718      	bx	r3
			return UDI_VENDOR_SETUP_OUT_RECEIVED();
   827ca:	4b03      	ldr	r3, [pc, #12]	; (827d8 <udi_vendor_setup+0x2c>)
   827cc:	4718      	bx	r3
   827ce:	bf00      	nop
   827d0:	2000358c 	.word	0x2000358c
   827d4:	00080a1d 	.word	0x00080a1d
   827d8:	00080981 	.word	0x00080981

000827dc <udi_vendor_enable>:
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   827dc:	4b06      	ldr	r3, [pc, #24]	; (827f8 <udi_vendor_enable+0x1c>)
{
   827de:	b510      	push	{r4, lr}
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   827e0:	4798      	blx	r3
   827e2:	4a06      	ldr	r2, [pc, #24]	; (827fc <udi_vendor_enable+0x20>)
   827e4:	78c3      	ldrb	r3, [r0, #3]
   827e6:	7013      	strb	r3, [r2, #0]
	if (0 == udi_vendor_alternate_setting) {
   827e8:	b10b      	cbz	r3, 827ee <udi_vendor_enable+0x12>
}
   827ea:	2001      	movs	r0, #1
   827ec:	bd10      	pop	{r4, pc}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   827ee:	4b04      	ldr	r3, [pc, #16]	; (82800 <udi_vendor_enable+0x24>)
}
   827f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   827f4:	4718      	bx	r3
   827f6:	bf00      	nop
   827f8:	00082bf9 	.word	0x00082bf9
   827fc:	20003534 	.word	0x20003534
   82800:	00080899 	.word	0x00080899

00082804 <udi_vendor_bulk_in_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_in_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   82804:	b510      	push	{r4, lr}
   82806:	b082      	sub	sp, #8
	return udd_ep_run(UDI_VENDOR_EP_BULK_IN,
   82808:	9200      	str	r2, [sp, #0]
   8280a:	460b      	mov	r3, r1
   8280c:	4602      	mov	r2, r0
   8280e:	2100      	movs	r1, #0
   82810:	4c02      	ldr	r4, [pc, #8]	; (8281c <udi_vendor_bulk_in_run+0x18>)
   82812:	2081      	movs	r0, #129	; 0x81
   82814:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   82816:	b002      	add	sp, #8
   82818:	bd10      	pop	{r4, pc}
   8281a:	bf00      	nop
   8281c:	0008216d 	.word	0x0008216d

00082820 <udi_vendor_bulk_out_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_out_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   82820:	b510      	push	{r4, lr}
   82822:	b082      	sub	sp, #8
	return udd_ep_run(UDI_VENDOR_EP_BULK_OUT,
   82824:	9200      	str	r2, [sp, #0]
   82826:	460b      	mov	r3, r1
   82828:	4602      	mov	r2, r0
   8282a:	2100      	movs	r1, #0
   8282c:	4c02      	ldr	r4, [pc, #8]	; (82838 <udi_vendor_bulk_out_run+0x18>)
   8282e:	2002      	movs	r0, #2
   82830:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   82832:	b002      	add	sp, #8
   82834:	bd10      	pop	{r4, pc}
   82836:	bf00      	nop
   82838:	0008216d 	.word	0x0008216d

0008283c <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8283c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8283e:	4770      	bx	lr

00082840 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   82840:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   82842:	4770      	bx	lr

00082844 <pio_set_pin_high>:
void pio_set_pin_high(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 1. */
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   82844:	2201      	movs	r2, #1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82846:	0943      	lsrs	r3, r0, #5
   82848:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8284c:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   82850:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82854:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   82856:	fa02 f000 	lsl.w	r0, r2, r0
   8285a:	6318      	str	r0, [r3, #48]	; 0x30
   8285c:	4770      	bx	lr
   8285e:	bf00      	nop

00082860 <pio_set_pin_low>:
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   82860:	2201      	movs	r2, #1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82862:	0943      	lsrs	r3, r0, #5
   82864:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   82868:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   8286c:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82870:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   82872:	fa02 f000 	lsl.w	r0, r2, r0
   82876:	6358      	str	r0, [r3, #52]	; 0x34
   82878:	4770      	bx	lr
   8287a:	bf00      	nop

0008287c <pio_configure_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8287c:	0943      	lsrs	r3, r0, #5
   8287e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
	switch (ul_flags & PIO_TYPE_Msk) {
   82882:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   82886:	f203 7306 	addw	r3, r3, #1798	; 0x706
	switch (ul_flags & PIO_TYPE_Msk) {
   8288a:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8288e:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
   82892:	d04f      	beq.n	82934 <pio_configure_pin+0xb8>
{
   82894:	b430      	push	{r4, r5}
	switch (ul_flags & PIO_TYPE_Msk) {
   82896:	d82a      	bhi.n	828ee <pio_configure_pin+0x72>
   82898:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
   8289c:	d013      	beq.n	828c6 <pio_configure_pin+0x4a>
   8289e:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
   828a2:	d144      	bne.n	8292e <pio_configure_pin+0xb2>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   828a4:	2401      	movs	r4, #1
   828a6:	f000 021f 	and.w	r2, r0, #31
   828aa:	fa04 f202 	lsl.w	r2, r4, r2
	p_pio->PIO_IDR = ul_mask;
   828ae:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   828b0:	6f18      	ldr	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   828b2:	07cd      	lsls	r5, r1, #31
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   828b4:	ea40 0002 	orr.w	r0, r0, r2
   828b8:	6718      	str	r0, [r3, #112]	; 0x70
	p_pio->PIO_PDR = ul_mask;
   828ba:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   828bc:	d413      	bmi.n	828e6 <pio_configure_pin+0x6a>
		p_pio->PIO_PUDR = ul_mask;
   828be:	661a      	str	r2, [r3, #96]	; 0x60
	return 1;
   828c0:	4620      	mov	r0, r4
}
   828c2:	bc30      	pop	{r4, r5}
   828c4:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   828c6:	2401      	movs	r4, #1
   828c8:	f000 021f 	and.w	r2, r0, #31
   828cc:	fa04 f202 	lsl.w	r2, r4, r2
	p_pio->PIO_IDR = ul_mask;
   828d0:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   828d2:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   828d4:	6f1d      	ldr	r5, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   828d6:	07c9      	lsls	r1, r1, #31
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   828d8:	ea00 0005 	and.w	r0, r0, r5
   828dc:	ea20 0002 	bic.w	r0, r0, r2
   828e0:	6718      	str	r0, [r3, #112]	; 0x70
	p_pio->PIO_PDR = ul_mask;
   828e2:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   828e4:	d5eb      	bpl.n	828be <pio_configure_pin+0x42>
		p_pio->PIO_PUER = ul_mask;
   828e6:	665a      	str	r2, [r3, #100]	; 0x64
	return 1;
   828e8:	4620      	mov	r0, r4
}
   828ea:	bc30      	pop	{r4, r5}
   828ec:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   828ee:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
   828f2:	d002      	beq.n	828fa <pio_configure_pin+0x7e>
   828f4:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   828f8:	d119      	bne.n	8292e <pio_configure_pin+0xb2>
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   828fa:	2201      	movs	r2, #1
   828fc:	f000 001f 	and.w	r0, r0, #31
   82900:	4082      	lsls	r2, r0
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
   82902:	f001 0404 	and.w	r4, r1, #4
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   82906:	f001 5060 	and.w	r0, r1, #939524096	; 0x38000000
	if (ul_pull_up_enable) {
   8290a:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
   8290c:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   8290e:	bf4c      	ite	mi
   82910:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82912:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   82914:	2c00      	cmp	r4, #0
   82916:	d12b      	bne.n	82970 <pio_configure_pin+0xf4>
		p_pio->PIO_MDDR = ul_mask;
   82918:	655a      	str	r2, [r3, #84]	; 0x54
	if (ul_default_level) {
   8291a:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   8291e:	bf0c      	ite	eq
   82920:	631a      	streq	r2, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   82922:	635a      	strne	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   82924:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   82926:	601a      	str	r2, [r3, #0]
	return 1;
   82928:	2001      	movs	r0, #1
}
   8292a:	bc30      	pop	{r4, r5}
   8292c:	4770      	bx	lr
		return 0;
   8292e:	2000      	movs	r0, #0
}
   82930:	bc30      	pop	{r4, r5}
   82932:	4770      	bx	lr
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   82934:	2201      	movs	r2, #1
   82936:	f000 001f 	and.w	r0, r0, #31
   8293a:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
   8293c:	07c8      	lsls	r0, r1, #31
	p_pio->PIO_IDR = ul_mask;
   8293e:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   82940:	bf4c      	ite	mi
   82942:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82944:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   82946:	f011 0f0a 	tst.w	r1, #10
		p_pio->PIO_IFER = ul_mask;
   8294a:	bf14      	ite	ne
   8294c:	621a      	strne	r2, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   8294e:	625a      	streq	r2, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   82950:	0788      	lsls	r0, r1, #30
   82952:	d407      	bmi.n	82964 <pio_configure_pin+0xe8>
		if (ul_attribute & PIO_DEBOUNCE) {
   82954:	0708      	lsls	r0, r1, #28
			p_pio->PIO_DIFSR = ul_mask;
   82956:	bf48      	it	mi
   82958:	f8c3 2084 	strmi.w	r2, [r3, #132]	; 0x84
	return 1;
   8295c:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   8295e:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   82960:	601a      	str	r2, [r3, #0]
   82962:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   82964:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	return 1;
   82968:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   8296a:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   8296c:	601a      	str	r2, [r3, #0]
   8296e:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   82970:	651a      	str	r2, [r3, #80]	; 0x50
   82972:	e7d2      	b.n	8291a <pio_configure_pin+0x9e>

00082974 <pio_configure_pin_group>:
{
   82974:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   82976:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   8297a:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
{
   8297e:	4603      	mov	r3, r0
	switch (ul_flags & PIO_TYPE_Msk) {
   82980:	d03f      	beq.n	82a02 <pio_configure_pin_group+0x8e>
   82982:	d820      	bhi.n	829c6 <pio_configure_pin_group+0x52>
   82984:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   82988:	d00e      	beq.n	829a8 <pio_configure_pin_group+0x34>
   8298a:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   8298e:	d135      	bne.n	829fc <pio_configure_pin_group+0x88>
	p_pio->PIO_IDR = ul_mask;
   82990:	6441      	str	r1, [r0, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   82992:	6f00      	ldr	r0, [r0, #112]	; 0x70
	if (ul_pull_up_enable) {
   82994:	07d4      	lsls	r4, r2, #31
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82996:	ea40 0001 	orr.w	r0, r0, r1
   8299a:	6718      	str	r0, [r3, #112]	; 0x70
	p_pio->PIO_PDR = ul_mask;
   8299c:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   8299e:	d40e      	bmi.n	829be <pio_configure_pin_group+0x4a>
		p_pio->PIO_PUDR = ul_mask;
   829a0:	6619      	str	r1, [r3, #96]	; 0x60
	return 1;
   829a2:	2001      	movs	r0, #1
}
   829a4:	bc10      	pop	{r4}
   829a6:	4770      	bx	lr
	p_pio->PIO_IDR = ul_mask;
   829a8:	6441      	str	r1, [r0, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   829aa:	6f00      	ldr	r0, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   829ac:	6f1c      	ldr	r4, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   829ae:	07d2      	lsls	r2, r2, #31
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   829b0:	ea00 0004 	and.w	r0, r0, r4
   829b4:	ea20 0001 	bic.w	r0, r0, r1
   829b8:	6718      	str	r0, [r3, #112]	; 0x70
	p_pio->PIO_PDR = ul_mask;
   829ba:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   829bc:	d5f0      	bpl.n	829a0 <pio_configure_pin_group+0x2c>
		p_pio->PIO_PUER = ul_mask;
   829be:	6659      	str	r1, [r3, #100]	; 0x64
	return 1;
   829c0:	2001      	movs	r0, #1
}
   829c2:	bc10      	pop	{r4}
   829c4:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   829c6:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   829ca:	d002      	beq.n	829d2 <pio_configure_pin_group+0x5e>
   829cc:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   829d0:	d114      	bne.n	829fc <pio_configure_pin_group+0x88>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   829d2:	f002 5060 	and.w	r0, r2, #939524096	; 0x38000000
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
   829d6:	f002 0404 	and.w	r4, r2, #4
	if (ul_pull_up_enable) {
   829da:	07d2      	lsls	r2, r2, #31
	p_pio->PIO_IDR = ul_mask;
   829dc:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   829de:	bf4c      	ite	mi
   829e0:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   829e2:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   829e4:	bb2c      	cbnz	r4, 82a32 <pio_configure_pin_group+0xbe>
		p_pio->PIO_MDDR = ul_mask;
   829e6:	6559      	str	r1, [r3, #84]	; 0x54
	if (ul_default_level) {
   829e8:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   829ec:	bf0c      	ite	eq
   829ee:	6319      	streq	r1, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   829f0:	6359      	strne	r1, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   829f2:	6119      	str	r1, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   829f4:	6019      	str	r1, [r3, #0]
	return 1;
   829f6:	2001      	movs	r0, #1
}
   829f8:	bc10      	pop	{r4}
   829fa:	4770      	bx	lr
		return 0;
   829fc:	2000      	movs	r0, #0
}
   829fe:	bc10      	pop	{r4}
   82a00:	4770      	bx	lr
	p_pio->PIO_IDR = ul_mask;
   82a02:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
   82a04:	07d0      	lsls	r0, r2, #31
		p_pio->PIO_PUER = ul_mask;
   82a06:	bf4c      	ite	mi
   82a08:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   82a0a:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   82a0c:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   82a10:	bf14      	ite	ne
   82a12:	6219      	strne	r1, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   82a14:	6259      	streq	r1, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   82a16:	0794      	lsls	r4, r2, #30
   82a18:	d408      	bmi.n	82a2c <pio_configure_pin_group+0xb8>
		if (ul_attribute & PIO_DEBOUNCE) {
   82a1a:	0710      	lsls	r0, r2, #28
			p_pio->PIO_DIFSR = ul_mask;
   82a1c:	bf48      	it	mi
   82a1e:	f8c3 1084 	strmi.w	r1, [r3, #132]	; 0x84
	p_pio->PIO_ODR = ul_mask;
   82a22:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   82a24:	6019      	str	r1, [r3, #0]
	return 1;
   82a26:	2001      	movs	r0, #1
}
   82a28:	bc10      	pop	{r4}
   82a2a:	4770      	bx	lr
		p_pio->PIO_SCIFSR = ul_mask;
   82a2c:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
   82a30:	e7f7      	b.n	82a22 <pio_configure_pin_group+0xae>
		p_pio->PIO_MDER = ul_mask;
   82a32:	6519      	str	r1, [r3, #80]	; 0x50
   82a34:	e7d8      	b.n	829e8 <pio_configure_pin_group+0x74>
   82a36:	bf00      	nop

00082a38 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   82a38:	e7fe      	b.n	82a38 <Dummy_Handler>
   82a3a:	bf00      	nop

00082a3c <udc_valid_address>:
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   82a3c:	4a02      	ldr	r2, [pc, #8]	; (82a48 <udc_valid_address+0xc>)
   82a3e:	4b03      	ldr	r3, [pc, #12]	; (82a4c <udc_valid_address+0x10>)
   82a40:	7890      	ldrb	r0, [r2, #2]
   82a42:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82a46:	4718      	bx	r3
   82a48:	2000358c 	.word	0x2000358c
   82a4c:	00081b41 	.word	0x00081b41

00082a50 <udc_update_iface_desc.part.0>:
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82a50:	4b13      	ldr	r3, [pc, #76]	; (82aa0 <udc_update_iface_desc.part.0+0x50>)
   82a52:	681b      	ldr	r3, [r3, #0]
   82a54:	681b      	ldr	r3, [r3, #0]
   82a56:	791a      	ldrb	r2, [r3, #4]
   82a58:	4282      	cmp	r2, r0
   82a5a:	d91d      	bls.n	82a98 <udc_update_iface_desc.part.0+0x48>
static bool udc_update_iface_desc(uint8_t iface_num, uint8_t setting_num)
   82a5c:	b470      	push	{r4, r5, r6}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82a5e:	4e11      	ldr	r6, [pc, #68]	; (82aa4 <udc_update_iface_desc.part.0+0x54>)
   82a60:	6033      	str	r3, [r6, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82a62:	885c      	ldrh	r4, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82a64:	441c      	add	r4, r3
	while (ptr_end_desc >
   82a66:	42a3      	cmp	r3, r4
   82a68:	d213      	bcs.n	82a92 <udc_update_iface_desc.part.0+0x42>
   82a6a:	2500      	movs	r5, #0
   82a6c:	e004      	b.n	82a78 <udc_update_iface_desc.part.0+0x28>
				udc_ptr_iface->bLength);
   82a6e:	781a      	ldrb	r2, [r3, #0]
   82a70:	2501      	movs	r5, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82a72:	4413      	add	r3, r2
	while (ptr_end_desc >
   82a74:	429c      	cmp	r4, r3
   82a76:	d90b      	bls.n	82a90 <udc_update_iface_desc.part.0+0x40>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82a78:	785a      	ldrb	r2, [r3, #1]
   82a7a:	2a04      	cmp	r2, #4
   82a7c:	d1f7      	bne.n	82a6e <udc_update_iface_desc.part.0+0x1e>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82a7e:	789a      	ldrb	r2, [r3, #2]
   82a80:	4282      	cmp	r2, r0
   82a82:	d1f4      	bne.n	82a6e <udc_update_iface_desc.part.0+0x1e>
   82a84:	78da      	ldrb	r2, [r3, #3]
   82a86:	428a      	cmp	r2, r1
   82a88:	d1f1      	bne.n	82a6e <udc_update_iface_desc.part.0+0x1e>
   82a8a:	b93d      	cbnz	r5, 82a9c <udc_update_iface_desc.part.0+0x4c>
				return true; // Interface found
   82a8c:	2001      	movs	r0, #1
   82a8e:	e001      	b.n	82a94 <udc_update_iface_desc.part.0+0x44>
   82a90:	6033      	str	r3, [r6, #0]
		return false;
   82a92:	2000      	movs	r0, #0
}
   82a94:	bc70      	pop	{r4, r5, r6}
   82a96:	4770      	bx	lr
		return false;
   82a98:	2000      	movs	r0, #0
}
   82a9a:	4770      	bx	lr
   82a9c:	6033      	str	r3, [r6, #0]
   82a9e:	e7f5      	b.n	82a8c <udc_update_iface_desc.part.0+0x3c>
   82aa0:	2000353c 	.word	0x2000353c
   82aa4:	20003540 	.word	0x20003540

00082aa8 <udc_iface_enable>:
	if (0 == udc_num_configuration) {
   82aa8:	4b26      	ldr	r3, [pc, #152]	; (82b44 <udc_iface_enable+0x9c>)
   82aaa:	781b      	ldrb	r3, [r3, #0]
   82aac:	b90b      	cbnz	r3, 82ab2 <udc_iface_enable+0xa>
}
   82aae:	2000      	movs	r0, #0
   82ab0:	4770      	bx	lr
{
   82ab2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82ab6:	4e24      	ldr	r6, [pc, #144]	; (82b48 <udc_iface_enable+0xa0>)
   82ab8:	460d      	mov	r5, r1
   82aba:	6831      	ldr	r1, [r6, #0]
   82abc:	680b      	ldr	r3, [r1, #0]
   82abe:	791a      	ldrb	r2, [r3, #4]
   82ac0:	4282      	cmp	r2, r0
   82ac2:	d92e      	bls.n	82b22 <udc_iface_enable+0x7a>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82ac4:	f8df e088 	ldr.w	lr, [pc, #136]	; 82b50 <udc_iface_enable+0xa8>
   82ac8:	f8ce 3000 	str.w	r3, [lr]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82acc:	885a      	ldrh	r2, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82ace:	441a      	add	r2, r3
	while (ptr_end_desc >
   82ad0:	4293      	cmp	r3, r2
   82ad2:	d226      	bcs.n	82b22 <udc_iface_enable+0x7a>
   82ad4:	461c      	mov	r4, r3
   82ad6:	2700      	movs	r7, #0
   82ad8:	e004      	b.n	82ae4 <udc_iface_enable+0x3c>
				udc_ptr_iface->bLength);
   82ada:	7823      	ldrb	r3, [r4, #0]
   82adc:	2701      	movs	r7, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82ade:	441c      	add	r4, r3
	while (ptr_end_desc >
   82ae0:	42a2      	cmp	r2, r4
   82ae2:	d91c      	bls.n	82b1e <udc_iface_enable+0x76>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82ae4:	7863      	ldrb	r3, [r4, #1]
   82ae6:	2b04      	cmp	r3, #4
   82ae8:	d1f7      	bne.n	82ada <udc_iface_enable+0x32>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82aea:	78a3      	ldrb	r3, [r4, #2]
   82aec:	4283      	cmp	r3, r0
   82aee:	d1f4      	bne.n	82ada <udc_iface_enable+0x32>
   82af0:	78e3      	ldrb	r3, [r4, #3]
   82af2:	42ab      	cmp	r3, r5
   82af4:	d1f1      	bne.n	82ada <udc_iface_enable+0x32>
   82af6:	bb17      	cbnz	r7, 82b3e <udc_iface_enable+0x96>
   82af8:	4605      	mov	r5, r0
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   82afa:	4f14      	ldr	r7, [pc, #80]	; (82b4c <udc_iface_enable+0xa4>)
   82afc:	e004      	b.n	82b08 <udc_iface_enable+0x60>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   82afe:	7863      	ldrb	r3, [r4, #1]
   82b00:	2b04      	cmp	r3, #4
   82b02:	d005      	beq.n	82b10 <udc_iface_enable+0x68>
		if (desc_id == desc->bDescriptorType) {
   82b04:	2b05      	cmp	r3, #5
   82b06:	d00f      	beq.n	82b28 <udc_iface_enable+0x80>
			desc->bLength);
   82b08:	7823      	ldrb	r3, [r4, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   82b0a:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   82b0c:	42a2      	cmp	r2, r4
   82b0e:	d8f6      	bhi.n	82afe <udc_iface_enable+0x56>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   82b10:	684b      	ldr	r3, [r1, #4]
   82b12:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
}
   82b16:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   82b1a:	681b      	ldr	r3, [r3, #0]
   82b1c:	4718      	bx	r3
   82b1e:	f8ce 4000 	str.w	r4, [lr]
}
   82b22:	2000      	movs	r0, #0
   82b24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   82b28:	88a2      	ldrh	r2, [r4, #4]
   82b2a:	78e1      	ldrb	r1, [r4, #3]
   82b2c:	78a0      	ldrb	r0, [r4, #2]
   82b2e:	47b8      	blx	r7
   82b30:	2800      	cmp	r0, #0
   82b32:	d0f6      	beq.n	82b22 <udc_iface_enable+0x7a>
   82b34:	6831      	ldr	r1, [r6, #0]
   82b36:	680b      	ldr	r3, [r1, #0]
   82b38:	885a      	ldrh	r2, [r3, #2]
   82b3a:	441a      	add	r2, r3
   82b3c:	e7e4      	b.n	82b08 <udc_iface_enable+0x60>
   82b3e:	f8ce 4000 	str.w	r4, [lr]
   82b42:	e7d9      	b.n	82af8 <udc_iface_enable+0x50>
   82b44:	2000353b 	.word	0x2000353b
   82b48:	2000353c 	.word	0x2000353c
   82b4c:	00081b95 	.word	0x00081b95
   82b50:	20003540 	.word	0x20003540

00082b54 <udc_iface_disable.part.1>:
static bool udc_iface_disable(uint8_t iface_num)
   82b54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   82b56:	4f24      	ldr	r7, [pc, #144]	; (82be8 <udc_iface_disable.part.1+0x94>)
static bool udc_iface_disable(uint8_t iface_num)
   82b58:	4606      	mov	r6, r0
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   82b5a:	683b      	ldr	r3, [r7, #0]
   82b5c:	685b      	ldr	r3, [r3, #4]
   82b5e:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   82b62:	68eb      	ldr	r3, [r5, #12]
   82b64:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   82b66:	4b21      	ldr	r3, [pc, #132]	; (82bec <udc_iface_disable.part.1+0x98>)
   82b68:	781b      	ldrb	r3, [r3, #0]
   82b6a:	b90b      	cbnz	r3, 82b70 <udc_iface_disable.part.1+0x1c>
		return false;
   82b6c:	2000      	movs	r0, #0
   82b6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82b70:	683b      	ldr	r3, [r7, #0]
   82b72:	681b      	ldr	r3, [r3, #0]
   82b74:	791a      	ldrb	r2, [r3, #4]
   82b76:	42b2      	cmp	r2, r6
   82b78:	d9f8      	bls.n	82b6c <udc_iface_disable.part.1+0x18>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82b7a:	f8df e078 	ldr.w	lr, [pc, #120]	; 82bf4 <udc_iface_disable.part.1+0xa0>
   82b7e:	f8ce 3000 	str.w	r3, [lr]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82b82:	885a      	ldrh	r2, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82b84:	441a      	add	r2, r3
	while (ptr_end_desc >
   82b86:	4293      	cmp	r3, r2
   82b88:	d2f0      	bcs.n	82b6c <udc_iface_disable.part.1+0x18>
   82b8a:	461c      	mov	r4, r3
   82b8c:	2100      	movs	r1, #0
   82b8e:	e004      	b.n	82b9a <udc_iface_disable.part.1+0x46>
				udc_ptr_iface->bLength);
   82b90:	7823      	ldrb	r3, [r4, #0]
   82b92:	2101      	movs	r1, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82b94:	441c      	add	r4, r3
	while (ptr_end_desc >
   82b96:	42a2      	cmp	r2, r4
   82b98:	d918      	bls.n	82bcc <udc_iface_disable.part.1+0x78>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82b9a:	7863      	ldrb	r3, [r4, #1]
   82b9c:	2b04      	cmp	r3, #4
   82b9e:	d1f7      	bne.n	82b90 <udc_iface_disable.part.1+0x3c>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82ba0:	78a3      	ldrb	r3, [r4, #2]
   82ba2:	42b3      	cmp	r3, r6
   82ba4:	d1f4      	bne.n	82b90 <udc_iface_disable.part.1+0x3c>
   82ba6:	78e3      	ldrb	r3, [r4, #3]
   82ba8:	4283      	cmp	r3, r0
   82baa:	d1f1      	bne.n	82b90 <udc_iface_disable.part.1+0x3c>
   82bac:	b9c9      	cbnz	r1, 82be2 <udc_iface_disable.part.1+0x8e>
			udd_ep_free(ep_desc->bEndpointAddress);
   82bae:	4e10      	ldr	r6, [pc, #64]	; (82bf0 <udc_iface_disable.part.1+0x9c>)
   82bb0:	e004      	b.n	82bbc <udc_iface_disable.part.1+0x68>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   82bb2:	7863      	ldrb	r3, [r4, #1]
   82bb4:	2b04      	cmp	r3, #4
   82bb6:	d005      	beq.n	82bc4 <udc_iface_disable.part.1+0x70>
		if (desc_id == desc->bDescriptorType) {
   82bb8:	2b05      	cmp	r3, #5
   82bba:	d00b      	beq.n	82bd4 <udc_iface_disable.part.1+0x80>
			desc->bLength);
   82bbc:	7823      	ldrb	r3, [r4, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   82bbe:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   82bc0:	42a2      	cmp	r2, r4
   82bc2:	d8f6      	bhi.n	82bb2 <udc_iface_disable.part.1+0x5e>
	udi_api->disable();
   82bc4:	686b      	ldr	r3, [r5, #4]
   82bc6:	4798      	blx	r3
	return true;
   82bc8:	2001      	movs	r0, #1
}
   82bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82bcc:	f8ce 4000 	str.w	r4, [lr]
		return false;
   82bd0:	2000      	movs	r0, #0
   82bd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			udd_ep_free(ep_desc->bEndpointAddress);
   82bd4:	78a0      	ldrb	r0, [r4, #2]
   82bd6:	47b0      	blx	r6
   82bd8:	683b      	ldr	r3, [r7, #0]
   82bda:	681b      	ldr	r3, [r3, #0]
   82bdc:	885a      	ldrh	r2, [r3, #2]
   82bde:	441a      	add	r2, r3
   82be0:	e7ec      	b.n	82bbc <udc_iface_disable.part.1+0x68>
   82be2:	f8ce 4000 	str.w	r4, [lr]
   82be6:	e7e2      	b.n	82bae <udc_iface_disable.part.1+0x5a>
   82be8:	2000353c 	.word	0x2000353c
   82bec:	2000353b 	.word	0x2000353b
   82bf0:	00081f41 	.word	0x00081f41
   82bf4:	20003540 	.word	0x20003540

00082bf8 <udc_get_interface_desc>:
	return udc_ptr_iface;
   82bf8:	4b01      	ldr	r3, [pc, #4]	; (82c00 <udc_get_interface_desc+0x8>)
}
   82bfa:	6818      	ldr	r0, [r3, #0]
   82bfc:	4770      	bx	lr
   82bfe:	bf00      	nop
   82c00:	20003540 	.word	0x20003540

00082c04 <udc_start>:
	udd_enable();
   82c04:	4b00      	ldr	r3, [pc, #0]	; (82c08 <udc_start+0x4>)
   82c06:	4718      	bx	r3
   82c08:	00081a6d 	.word	0x00081a6d

00082c0c <udc_reset>:
{
   82c0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (udc_num_configuration) {
   82c0e:	4e1f      	ldr	r6, [pc, #124]	; (82c8c <udc_reset+0x80>)
   82c10:	7832      	ldrb	r2, [r6, #0]
   82c12:	2a00      	cmp	r2, #0
   82c14:	d02e      	beq.n	82c74 <udc_reset+0x68>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82c16:	4f1e      	ldr	r7, [pc, #120]	; (82c90 <udc_reset+0x84>)
   82c18:	683b      	ldr	r3, [r7, #0]
   82c1a:	681b      	ldr	r3, [r3, #0]
   82c1c:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   82c1e:	b349      	cbz	r1, 82c74 <udc_reset+0x68>
   82c20:	2400      	movs	r4, #0
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82c22:	4d1c      	ldr	r5, [pc, #112]	; (82c94 <udc_reset+0x88>)
	if (0 == udc_num_configuration) {
   82c24:	b932      	cbnz	r2, 82c34 <udc_reset+0x28>
				iface_num++) {
   82c26:	3401      	adds	r4, #1
   82c28:	b2e4      	uxtb	r4, r4
		for (iface_num = 0;
   82c2a:	428c      	cmp	r4, r1
   82c2c:	d222      	bcs.n	82c74 <udc_reset+0x68>
   82c2e:	7832      	ldrb	r2, [r6, #0]
	if (0 == udc_num_configuration) {
   82c30:	2a00      	cmp	r2, #0
   82c32:	d0f8      	beq.n	82c26 <udc_reset+0x1a>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82c34:	602b      	str	r3, [r5, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82c36:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82c38:	4419      	add	r1, r3
	while (ptr_end_desc >
   82c3a:	4299      	cmp	r1, r3
   82c3c:	d913      	bls.n	82c66 <udc_reset+0x5a>
   82c3e:	2000      	movs	r0, #0
   82c40:	e004      	b.n	82c4c <udc_reset+0x40>
				udc_ptr_iface->bLength);
   82c42:	781a      	ldrb	r2, [r3, #0]
   82c44:	2001      	movs	r0, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82c46:	4413      	add	r3, r2
	while (ptr_end_desc >
   82c48:	4299      	cmp	r1, r3
   82c4a:	d918      	bls.n	82c7e <udc_reset+0x72>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82c4c:	785a      	ldrb	r2, [r3, #1]
   82c4e:	2a04      	cmp	r2, #4
   82c50:	d1f7      	bne.n	82c42 <udc_reset+0x36>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82c52:	789a      	ldrb	r2, [r3, #2]
   82c54:	42a2      	cmp	r2, r4
   82c56:	d1f4      	bne.n	82c42 <udc_reset+0x36>
   82c58:	78da      	ldrb	r2, [r3, #3]
   82c5a:	2a00      	cmp	r2, #0
   82c5c:	d1f1      	bne.n	82c42 <udc_reset+0x36>
   82c5e:	b998      	cbnz	r0, 82c88 <udc_reset+0x7c>
   82c60:	4620      	mov	r0, r4
   82c62:	4b0d      	ldr	r3, [pc, #52]	; (82c98 <udc_reset+0x8c>)
   82c64:	4798      	blx	r3
   82c66:	683b      	ldr	r3, [r7, #0]
				iface_num++) {
   82c68:	3401      	adds	r4, #1
   82c6a:	681b      	ldr	r3, [r3, #0]
   82c6c:	b2e4      	uxtb	r4, r4
   82c6e:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   82c70:	428c      	cmp	r4, r1
   82c72:	d3dc      	bcc.n	82c2e <udc_reset+0x22>
	udc_num_configuration = 0;
   82c74:	2300      	movs	r3, #0
	udc_device_status =
   82c76:	4a09      	ldr	r2, [pc, #36]	; (82c9c <udc_reset+0x90>)
	udc_num_configuration = 0;
   82c78:	7033      	strb	r3, [r6, #0]
	udc_device_status =
   82c7a:	8013      	strh	r3, [r2, #0]
}
   82c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   82c7e:	683a      	ldr	r2, [r7, #0]
   82c80:	602b      	str	r3, [r5, #0]
   82c82:	6813      	ldr	r3, [r2, #0]
   82c84:	7919      	ldrb	r1, [r3, #4]
   82c86:	e7ce      	b.n	82c26 <udc_reset+0x1a>
   82c88:	602b      	str	r3, [r5, #0]
   82c8a:	e7e9      	b.n	82c60 <udc_reset+0x54>
   82c8c:	2000353b 	.word	0x2000353b
   82c90:	2000353c 	.word	0x2000353c
   82c94:	20003540 	.word	0x20003540
   82c98:	00082b55 	.word	0x00082b55
   82c9c:	20003536 	.word	0x20003536

00082ca0 <udc_sof_notify>:
{
   82ca0:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   82ca2:	4b0b      	ldr	r3, [pc, #44]	; (82cd0 <udc_sof_notify+0x30>)
   82ca4:	781b      	ldrb	r3, [r3, #0]
   82ca6:	b193      	cbz	r3, 82cce <udc_sof_notify+0x2e>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82ca8:	4d0a      	ldr	r5, [pc, #40]	; (82cd4 <udc_sof_notify+0x34>)
   82caa:	682a      	ldr	r2, [r5, #0]
   82cac:	6813      	ldr	r3, [r2, #0]
   82cae:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   82cb0:	b169      	cbz	r1, 82cce <udc_sof_notify+0x2e>
   82cb2:	2400      	movs	r4, #0
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   82cb4:	6853      	ldr	r3, [r2, #4]
   82cb6:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
   82cba:	691b      	ldr	r3, [r3, #16]
   82cbc:	b11b      	cbz	r3, 82cc6 <udc_sof_notify+0x26>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   82cbe:	4798      	blx	r3
   82cc0:	682a      	ldr	r2, [r5, #0]
   82cc2:	6813      	ldr	r3, [r2, #0]
   82cc4:	7919      	ldrb	r1, [r3, #4]
				iface_num++) {
   82cc6:	3401      	adds	r4, #1
   82cc8:	b2e4      	uxtb	r4, r4
		for (iface_num = 0;
   82cca:	428c      	cmp	r4, r1
   82ccc:	d3f2      	bcc.n	82cb4 <udc_sof_notify+0x14>
   82cce:	bd38      	pop	{r3, r4, r5, pc}
   82cd0:	2000353b 	.word	0x2000353b
   82cd4:	2000353c 	.word	0x2000353c

00082cd8 <udc_process_setup>:
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   82cd8:	2200      	movs	r2, #0
{
   82cda:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	udd_g_ctrlreq.payload_size = 0;
   82cde:	4e95      	ldr	r6, [pc, #596]	; (82f34 <udc_process_setup+0x25c>)
	udd_g_ctrlreq.callback = NULL;
	udd_g_ctrlreq.over_under_run = NULL;

	if (Udd_setup_is_in()) {
   82ce0:	7833      	ldrb	r3, [r6, #0]
	udd_g_ctrlreq.payload_size = 0;
   82ce2:	81b2      	strh	r2, [r6, #12]
	udd_g_ctrlreq.callback = NULL;
   82ce4:	6132      	str	r2, [r6, #16]
	udd_g_ctrlreq.over_under_run = NULL;
   82ce6:	6172      	str	r2, [r6, #20]
	if (Udd_setup_is_in()) {
   82ce8:	061a      	lsls	r2, r3, #24
   82cea:	d40d      	bmi.n	82d08 <udc_process_setup+0x30>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   82cec:	f013 0f60 	tst.w	r3, #96	; 0x60
   82cf0:	d069      	beq.n	82dc6 <udc_process_setup+0xee>
   82cf2:	f003 031f 	and.w	r3, r3, #31
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) {
   82cf6:	2b01      	cmp	r3, #1
   82cf8:	f000 8082 	beq.w	82e00 <udc_process_setup+0x128>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   82cfc:	2b02      	cmp	r3, #2
   82cfe:	d01e      	beq.n	82d3e <udc_process_setup+0x66>
			return false; // Error from USB host
   82d00:	2400      	movs	r4, #0
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
#endif
}
   82d02:	4620      	mov	r0, r4
   82d04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   82d08:	88f4      	ldrh	r4, [r6, #6]
   82d0a:	2c00      	cmp	r4, #0
   82d0c:	d0f8      	beq.n	82d00 <udc_process_setup+0x28>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   82d0e:	f013 0160 	ands.w	r1, r3, #96	; 0x60
   82d12:	d1ee      	bne.n	82cf2 <udc_process_setup+0x1a>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   82d14:	f013 031f 	ands.w	r3, r3, #31
   82d18:	f040 80cb 	bne.w	82eb2 <udc_process_setup+0x1da>
			switch (udd_g_ctrlreq.req.bRequest) {
   82d1c:	7873      	ldrb	r3, [r6, #1]
   82d1e:	2b06      	cmp	r3, #6
   82d20:	f000 81bd 	beq.w	8309e <udc_process_setup+0x3c6>
   82d24:	2b08      	cmp	r3, #8
   82d26:	f000 81b2 	beq.w	8308e <udc_process_setup+0x3b6>
   82d2a:	2b00      	cmp	r3, #0
   82d2c:	d1e8      	bne.n	82d00 <udc_process_setup+0x28>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   82d2e:	2c02      	cmp	r4, #2
   82d30:	d1e6      	bne.n	82d00 <udc_process_setup+0x28>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   82d32:	4621      	mov	r1, r4
   82d34:	4880      	ldr	r0, [pc, #512]	; (82f38 <udc_process_setup+0x260>)
   82d36:	4b81      	ldr	r3, [pc, #516]	; (82f3c <udc_process_setup+0x264>)
   82d38:	4798      	blx	r3
			return true;
   82d3a:	2401      	movs	r4, #1
   82d3c:	e7e1      	b.n	82d02 <udc_process_setup+0x2a>
	if (0 == udc_num_configuration) {
   82d3e:	4d80      	ldr	r5, [pc, #512]	; (82f40 <udc_process_setup+0x268>)
   82d40:	782b      	ldrb	r3, [r5, #0]
   82d42:	2b00      	cmp	r3, #0
   82d44:	d0dc      	beq.n	82d00 <udc_process_setup+0x28>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82d46:	4c7f      	ldr	r4, [pc, #508]	; (82f44 <udc_process_setup+0x26c>)
   82d48:	6823      	ldr	r3, [r4, #0]
   82d4a:	681a      	ldr	r2, [r3, #0]
   82d4c:	7912      	ldrb	r2, [r2, #4]
   82d4e:	2a00      	cmp	r2, #0
   82d50:	d0d6      	beq.n	82d00 <udc_process_setup+0x28>
   82d52:	2700      	movs	r7, #0
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82d54:	4e7c      	ldr	r6, [pc, #496]	; (82f48 <udc_process_setup+0x270>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   82d56:	685b      	ldr	r3, [r3, #4]
   82d58:	f853 8027 	ldr.w	r8, [r3, r7, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   82d5c:	f8d8 300c 	ldr.w	r3, [r8, #12]
   82d60:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   82d62:	782b      	ldrb	r3, [r5, #0]
   82d64:	2b00      	cmp	r3, #0
   82d66:	d0cb      	beq.n	82d00 <udc_process_setup+0x28>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82d68:	6823      	ldr	r3, [r4, #0]
   82d6a:	681b      	ldr	r3, [r3, #0]
   82d6c:	791a      	ldrb	r2, [r3, #4]
   82d6e:	42ba      	cmp	r2, r7
   82d70:	d9c6      	bls.n	82d00 <udc_process_setup+0x28>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82d72:	6033      	str	r3, [r6, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82d74:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82d76:	4419      	add	r1, r3
	while (ptr_end_desc >
   82d78:	428b      	cmp	r3, r1
   82d7a:	d2c1      	bcs.n	82d00 <udc_process_setup+0x28>
   82d7c:	f04f 0e00 	mov.w	lr, #0
   82d80:	e005      	b.n	82d8e <udc_process_setup+0xb6>
				udc_ptr_iface->bLength);
   82d82:	781a      	ldrb	r2, [r3, #0]
   82d84:	f04f 0e01 	mov.w	lr, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82d88:	4413      	add	r3, r2
	while (ptr_end_desc >
   82d8a:	4299      	cmp	r1, r3
   82d8c:	d919      	bls.n	82dc2 <udc_process_setup+0xea>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82d8e:	785a      	ldrb	r2, [r3, #1]
   82d90:	2a04      	cmp	r2, #4
   82d92:	d1f6      	bne.n	82d82 <udc_process_setup+0xaa>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82d94:	789a      	ldrb	r2, [r3, #2]
   82d96:	42ba      	cmp	r2, r7
   82d98:	d1f3      	bne.n	82d82 <udc_process_setup+0xaa>
   82d9a:	78da      	ldrb	r2, [r3, #3]
   82d9c:	4282      	cmp	r2, r0
   82d9e:	d1f0      	bne.n	82d82 <udc_process_setup+0xaa>
   82da0:	f1be 0f00 	cmp.w	lr, #0
   82da4:	f040 828f 	bne.w	832c6 <udc_process_setup+0x5ee>
		if (udi_api->setup()) {
   82da8:	f8d8 3008 	ldr.w	r3, [r8, #8]
   82dac:	4798      	blx	r3
   82dae:	2800      	cmp	r0, #0
   82db0:	d17d      	bne.n	82eae <udc_process_setup+0x1d6>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82db2:	6823      	ldr	r3, [r4, #0]
			iface_num++) {
   82db4:	3701      	adds	r7, #1
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82db6:	681a      	ldr	r2, [r3, #0]
			iface_num++) {
   82db8:	b2ff      	uxtb	r7, r7
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82dba:	7912      	ldrb	r2, [r2, #4]
   82dbc:	42ba      	cmp	r2, r7
   82dbe:	d8ca      	bhi.n	82d56 <udc_process_setup+0x7e>
   82dc0:	e79e      	b.n	82d00 <udc_process_setup+0x28>
   82dc2:	6033      	str	r3, [r6, #0]
   82dc4:	e79c      	b.n	82d00 <udc_process_setup+0x28>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   82dc6:	f013 031f 	ands.w	r3, r3, #31
   82dca:	d153      	bne.n	82e74 <udc_process_setup+0x19c>
			switch (udd_g_ctrlreq.req.bRequest) {
   82dcc:	7873      	ldrb	r3, [r6, #1]
   82dce:	3b01      	subs	r3, #1
   82dd0:	2b08      	cmp	r3, #8
   82dd2:	d895      	bhi.n	82d00 <udc_process_setup+0x28>
   82dd4:	a201      	add	r2, pc, #4	; (adr r2, 82ddc <udc_process_setup+0x104>)
   82dd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   82dda:	bf00      	nop
   82ddc:	00082f17 	.word	0x00082f17
   82de0:	00082d01 	.word	0x00082d01
   82de4:	00082ef3 	.word	0x00082ef3
   82de8:	00082d01 	.word	0x00082d01
   82dec:	00082ee3 	.word	0x00082ee3
   82df0:	00082d01 	.word	0x00082d01
   82df4:	00082d01 	.word	0x00082d01
   82df8:	00082d01 	.word	0x00082d01
   82dfc:	00082f65 	.word	0x00082f65
   82e00:	4d4f      	ldr	r5, [pc, #316]	; (82f40 <udc_process_setup+0x268>)
   82e02:	782b      	ldrb	r3, [r5, #0]
	if (0 == udc_num_configuration) {
   82e04:	2b00      	cmp	r3, #0
   82e06:	f43f af7b 	beq.w	82d00 <udc_process_setup+0x28>
   82e0a:	4c4e      	ldr	r4, [pc, #312]	; (82f44 <udc_process_setup+0x26c>)
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82e0c:	f8d4 e000 	ldr.w	lr, [r4]
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   82e10:	7937      	ldrb	r7, [r6, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   82e12:	f8de 3000 	ldr.w	r3, [lr]
   82e16:	791a      	ldrb	r2, [r3, #4]
   82e18:	42ba      	cmp	r2, r7
   82e1a:	f67f af71 	bls.w	82d00 <udc_process_setup+0x28>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   82e1e:	f8df 8128 	ldr.w	r8, [pc, #296]	; 82f48 <udc_process_setup+0x270>
   82e22:	f8c8 3000 	str.w	r3, [r8]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   82e26:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   82e28:	4419      	add	r1, r3
	while (ptr_end_desc >
   82e2a:	428b      	cmp	r3, r1
   82e2c:	d21e      	bcs.n	82e6c <udc_process_setup+0x194>
   82e2e:	2000      	movs	r0, #0
   82e30:	e005      	b.n	82e3e <udc_process_setup+0x166>
				udc_ptr_iface->bLength);
   82e32:	781a      	ldrb	r2, [r3, #0]
   82e34:	2001      	movs	r0, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   82e36:	4413      	add	r3, r2
	while (ptr_end_desc >
   82e38:	4299      	cmp	r1, r3
   82e3a:	f240 80ee 	bls.w	8301a <udc_process_setup+0x342>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   82e3e:	785a      	ldrb	r2, [r3, #1]
   82e40:	2a04      	cmp	r2, #4
   82e42:	d1f6      	bne.n	82e32 <udc_process_setup+0x15a>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   82e44:	789a      	ldrb	r2, [r3, #2]
   82e46:	42ba      	cmp	r2, r7
   82e48:	d1f3      	bne.n	82e32 <udc_process_setup+0x15a>
   82e4a:	78da      	ldrb	r2, [r3, #3]
   82e4c:	2a00      	cmp	r2, #0
   82e4e:	d1f0      	bne.n	82e32 <udc_process_setup+0x15a>
   82e50:	2800      	cmp	r0, #0
   82e52:	f040 8226 	bne.w	832a2 <udc_process_setup+0x5ca>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   82e56:	f8de 3004 	ldr.w	r3, [lr, #4]
   82e5a:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   82e5e:	f8d9 300c 	ldr.w	r3, [r9, #12]
   82e62:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   82e64:	782b      	ldrb	r3, [r5, #0]
   82e66:	2b00      	cmp	r3, #0
   82e68:	f040 8192 	bne.w	83190 <udc_process_setup+0x4b8>
   82e6c:	7833      	ldrb	r3, [r6, #0]
   82e6e:	f003 031f 	and.w	r3, r3, #31
   82e72:	e743      	b.n	82cfc <udc_process_setup+0x24>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   82e74:	2b01      	cmp	r3, #1
   82e76:	f000 80b0 	beq.w	82fda <udc_process_setup+0x302>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   82e7a:	2b02      	cmp	r3, #2
   82e7c:	f47f af40 	bne.w	82d00 <udc_process_setup+0x28>
			switch (udd_g_ctrlreq.req.bRequest) {
   82e80:	7873      	ldrb	r3, [r6, #1]
   82e82:	2b01      	cmp	r3, #1
   82e84:	f000 80cc 	beq.w	83020 <udc_process_setup+0x348>
   82e88:	2b03      	cmp	r3, #3
   82e8a:	f47f af58 	bne.w	82d3e <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength) {
   82e8e:	88f3      	ldrh	r3, [r6, #6]
   82e90:	2b00      	cmp	r3, #0
   82e92:	f47f af54 	bne.w	82d3e <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   82e96:	8873      	ldrh	r3, [r6, #2]
   82e98:	2b00      	cmp	r3, #0
   82e9a:	f47f af50 	bne.w	82d3e <udc_process_setup+0x66>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   82e9e:	7930      	ldrb	r0, [r6, #4]
   82ea0:	4b2a      	ldr	r3, [pc, #168]	; (82f4c <udc_process_setup+0x274>)
   82ea2:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   82ea4:	7930      	ldrb	r0, [r6, #4]
   82ea6:	4b2a      	ldr	r3, [pc, #168]	; (82f50 <udc_process_setup+0x278>)
   82ea8:	4798      	blx	r3
		if (udc_reqstd()) {
   82eaa:	2800      	cmp	r0, #0
   82eac:	d031      	beq.n	82f12 <udc_process_setup+0x23a>
			return true;
   82eae:	2401      	movs	r4, #1
   82eb0:	e727      	b.n	82d02 <udc_process_setup+0x2a>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   82eb2:	2b01      	cmp	r3, #1
   82eb4:	f000 80c3 	beq.w	8303e <udc_process_setup+0x366>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   82eb8:	2b02      	cmp	r3, #2
   82eba:	f47f af21 	bne.w	82d00 <udc_process_setup+0x28>
			switch (udd_g_ctrlreq.req.bRequest) {
   82ebe:	7873      	ldrb	r3, [r6, #1]
   82ec0:	2b00      	cmp	r3, #0
   82ec2:	f47f af3c 	bne.w	82d3e <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   82ec6:	2c02      	cmp	r4, #2
   82ec8:	f47f af39 	bne.w	82d3e <udc_process_setup+0x66>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   82ecc:	4b21      	ldr	r3, [pc, #132]	; (82f54 <udc_process_setup+0x27c>)
   82ece:	7930      	ldrb	r0, [r6, #4]
   82ed0:	4798      	blx	r3
   82ed2:	4b21      	ldr	r3, [pc, #132]	; (82f58 <udc_process_setup+0x280>)
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   82ed4:	4621      	mov	r1, r4
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   82ed6:	8018      	strh	r0, [r3, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   82ed8:	4a18      	ldr	r2, [pc, #96]	; (82f3c <udc_process_setup+0x264>)
   82eda:	4618      	mov	r0, r3
   82edc:	4790      	blx	r2
			return true;
   82ede:	2401      	movs	r4, #1
   82ee0:	e70f      	b.n	82d02 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wLength) {
   82ee2:	88f3      	ldrh	r3, [r6, #6]
   82ee4:	2b00      	cmp	r3, #0
   82ee6:	f47f af0b 	bne.w	82d00 <udc_process_setup+0x28>
	udd_g_ctrlreq.callback = udc_valid_address;
   82eea:	4b1c      	ldr	r3, [pc, #112]	; (82f5c <udc_process_setup+0x284>)
			return true;
   82eec:	2401      	movs	r4, #1
	udd_g_ctrlreq.callback = udc_valid_address;
   82eee:	6133      	str	r3, [r6, #16]
   82ef0:	e707      	b.n	82d02 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wLength) {
   82ef2:	88f3      	ldrh	r3, [r6, #6]
   82ef4:	2b00      	cmp	r3, #0
   82ef6:	f47f af03 	bne.w	82d00 <udc_process_setup+0x28>
	switch (udd_g_ctrlreq.req.wValue) {
   82efa:	8873      	ldrh	r3, [r6, #2]
   82efc:	2b02      	cmp	r3, #2
   82efe:	f47f aeff 	bne.w	82d00 <udc_process_setup+0x28>
		if (!udd_is_high_speed()) {
   82f02:	4b17      	ldr	r3, [pc, #92]	; (82f60 <udc_process_setup+0x288>)
   82f04:	4798      	blx	r3
   82f06:	4604      	mov	r4, r0
   82f08:	b118      	cbz	r0, 82f12 <udc_process_setup+0x23a>
		if (udd_g_ctrlreq.req.wIndex & 0xff) {
   82f0a:	7933      	ldrb	r3, [r6, #4]
   82f0c:	2b00      	cmp	r3, #0
   82f0e:	f000 8166 	beq.w	831de <udc_process_setup+0x506>
   82f12:	7833      	ldrb	r3, [r6, #0]
   82f14:	e6ed      	b.n	82cf2 <udc_process_setup+0x1a>
	if (udd_g_ctrlreq.req.wLength) {
   82f16:	88f3      	ldrh	r3, [r6, #6]
   82f18:	2b00      	cmp	r3, #0
   82f1a:	f47f aef1 	bne.w	82d00 <udc_process_setup+0x28>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   82f1e:	8874      	ldrh	r4, [r6, #2]
   82f20:	2c01      	cmp	r4, #1
   82f22:	f47f aeed 	bne.w	82d00 <udc_process_setup+0x28>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   82f26:	4a04      	ldr	r2, [pc, #16]	; (82f38 <udc_process_setup+0x260>)
   82f28:	8813      	ldrh	r3, [r2, #0]
   82f2a:	f023 0302 	bic.w	r3, r3, #2
   82f2e:	8013      	strh	r3, [r2, #0]
   82f30:	e6e7      	b.n	82d02 <udc_process_setup+0x2a>
   82f32:	bf00      	nop
   82f34:	2000358c 	.word	0x2000358c
   82f38:	20003536 	.word	0x20003536
   82f3c:	00081b89 	.word	0x00081b89
   82f40:	2000353b 	.word	0x2000353b
   82f44:	2000353c 	.word	0x2000353c
   82f48:	20003540 	.word	0x20003540
   82f4c:	00082249 	.word	0x00082249
   82f50:	00081ff9 	.word	0x00081ff9
   82f54:	00081fc5 	.word	0x00081fc5
   82f58:	20003538 	.word	0x20003538
   82f5c:	00082a3d 	.word	0x00082a3d
   82f60:	00081b31 	.word	0x00081b31
	if (udd_g_ctrlreq.req.wLength) {
   82f64:	88f3      	ldrh	r3, [r6, #6]
   82f66:	2b00      	cmp	r3, #0
   82f68:	f47f aeca 	bne.w	82d00 <udc_process_setup+0x28>
	if (!udd_getaddress()) {
   82f6c:	4ba2      	ldr	r3, [pc, #648]	; (831f8 <udc_process_setup+0x520>)
   82f6e:	4798      	blx	r3
   82f70:	2800      	cmp	r0, #0
   82f72:	d0ce      	beq.n	82f12 <udc_process_setup+0x23a>
	if (udd_is_high_speed()) {
   82f74:	4fa1      	ldr	r7, [pc, #644]	; (831fc <udc_process_setup+0x524>)
   82f76:	47b8      	blx	r7
				udc_config.confdev_hs->bNumConfigurations) {
   82f78:	4da1      	ldr	r5, [pc, #644]	; (83200 <udc_process_setup+0x528>)
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   82f7a:	78b2      	ldrb	r2, [r6, #2]
	if (udd_is_high_speed()) {
   82f7c:	2800      	cmp	r0, #0
   82f7e:	f000 8158 	beq.w	83232 <udc_process_setup+0x55a>
				udc_config.confdev_hs->bNumConfigurations) {
   82f82:	68ab      	ldr	r3, [r5, #8]
   82f84:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   82f86:	429a      	cmp	r2, r3
   82f88:	dcc3      	bgt.n	82f12 <udc_process_setup+0x23a>
	udc_reset();
   82f8a:	4b9e      	ldr	r3, [pc, #632]	; (83204 <udc_process_setup+0x52c>)
   82f8c:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   82f8e:	4c9e      	ldr	r4, [pc, #632]	; (83208 <udc_process_setup+0x530>)
   82f90:	78b3      	ldrb	r3, [r6, #2]
   82f92:	7023      	strb	r3, [r4, #0]
	if (udc_num_configuration == 0) {
   82f94:	2b00      	cmp	r3, #0
   82f96:	d08a      	beq.n	82eae <udc_process_setup+0x1d6>
	if (udd_is_high_speed()) {
   82f98:	47b8      	blx	r7
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   82f9a:	7822      	ldrb	r2, [r4, #0]
	if (udd_is_high_speed()) {
   82f9c:	2800      	cmp	r0, #0
   82f9e:	f000 818b 	beq.w	832b8 <udc_process_setup+0x5e0>
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   82fa2:	692b      	ldr	r3, [r5, #16]
   82fa4:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   82fa8:	3a01      	subs	r2, #1
   82faa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82fae:	681a      	ldr	r2, [r3, #0]
   82fb0:	4c96      	ldr	r4, [pc, #600]	; (8320c <udc_process_setup+0x534>)
   82fb2:	7912      	ldrb	r2, [r2, #4]
   82fb4:	6023      	str	r3, [r4, #0]
   82fb6:	2a00      	cmp	r2, #0
   82fb8:	f43f af79 	beq.w	82eae <udc_process_setup+0x1d6>
   82fbc:	2500      	movs	r5, #0
   82fbe:	4f94      	ldr	r7, [pc, #592]	; (83210 <udc_process_setup+0x538>)
		if (!udc_iface_enable(iface_num, 0)) {
   82fc0:	4628      	mov	r0, r5
   82fc2:	2100      	movs	r1, #0
   82fc4:	47b8      	blx	r7
			iface_num++) {
   82fc6:	3501      	adds	r5, #1
   82fc8:	b2ed      	uxtb	r5, r5
		if (!udc_iface_enable(iface_num, 0)) {
   82fca:	2800      	cmp	r0, #0
   82fcc:	d0a1      	beq.n	82f12 <udc_process_setup+0x23a>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   82fce:	6823      	ldr	r3, [r4, #0]
   82fd0:	681b      	ldr	r3, [r3, #0]
   82fd2:	791b      	ldrb	r3, [r3, #4]
   82fd4:	42ab      	cmp	r3, r5
   82fd6:	d8f3      	bhi.n	82fc0 <udc_process_setup+0x2e8>
   82fd8:	e769      	b.n	82eae <udc_process_setup+0x1d6>
			switch (udd_g_ctrlreq.req.bRequest) {
   82fda:	7873      	ldrb	r3, [r6, #1]
   82fdc:	2b0b      	cmp	r3, #11
   82fde:	d198      	bne.n	82f12 <udc_process_setup+0x23a>
	if (udd_g_ctrlreq.req.wLength) {
   82fe0:	88f1      	ldrh	r1, [r6, #6]
   82fe2:	2900      	cmp	r1, #0
   82fe4:	f47f af0c 	bne.w	82e00 <udc_process_setup+0x128>
	if (!udc_num_configuration) {
   82fe8:	4b87      	ldr	r3, [pc, #540]	; (83208 <udc_process_setup+0x530>)
   82fea:	781b      	ldrb	r3, [r3, #0]
   82fec:	2b00      	cmp	r3, #0
   82fee:	f43f ae87 	beq.w	82d00 <udc_process_setup+0x28>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   82ff2:	7934      	ldrb	r4, [r6, #4]
   82ff4:	4b87      	ldr	r3, [pc, #540]	; (83214 <udc_process_setup+0x53c>)
   82ff6:	4620      	mov	r0, r4
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   82ff8:	78b5      	ldrb	r5, [r6, #2]
   82ffa:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, 0)) {
   82ffc:	2800      	cmp	r0, #0
   82ffe:	d088      	beq.n	82f12 <udc_process_setup+0x23a>
   83000:	4620      	mov	r0, r4
   83002:	4b85      	ldr	r3, [pc, #532]	; (83218 <udc_process_setup+0x540>)
   83004:	4798      	blx	r3
	if (!udc_iface_disable(iface_num)) {
   83006:	2800      	cmp	r0, #0
   83008:	d083      	beq.n	82f12 <udc_process_setup+0x23a>
	return udc_iface_enable(iface_num, setting_num);
   8300a:	4629      	mov	r1, r5
   8300c:	4620      	mov	r0, r4
   8300e:	4b80      	ldr	r3, [pc, #512]	; (83210 <udc_process_setup+0x538>)
   83010:	4798      	blx	r3
		if (udc_reqstd()) {
   83012:	2800      	cmp	r0, #0
   83014:	f47f af4b 	bne.w	82eae <udc_process_setup+0x1d6>
   83018:	e77b      	b.n	82f12 <udc_process_setup+0x23a>
   8301a:	f8c8 3000 	str.w	r3, [r8]
   8301e:	e725      	b.n	82e6c <udc_process_setup+0x194>
	if (udd_g_ctrlreq.req.wLength) {
   83020:	88f3      	ldrh	r3, [r6, #6]
   83022:	2b00      	cmp	r3, #0
   83024:	f47f ae8b 	bne.w	82d3e <udc_process_setup+0x66>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   83028:	8873      	ldrh	r3, [r6, #2]
   8302a:	2b00      	cmp	r3, #0
   8302c:	f47f ae87 	bne.w	82d3e <udc_process_setup+0x66>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   83030:	7930      	ldrb	r0, [r6, #4]
   83032:	4b7a      	ldr	r3, [pc, #488]	; (8321c <udc_process_setup+0x544>)
   83034:	4798      	blx	r3
		if (udc_reqstd()) {
   83036:	2800      	cmp	r0, #0
   83038:	f47f af39 	bne.w	82eae <udc_process_setup+0x1d6>
   8303c:	e769      	b.n	82f12 <udc_process_setup+0x23a>
			switch (udd_g_ctrlreq.req.bRequest) {
   8303e:	7873      	ldrb	r3, [r6, #1]
   83040:	2b0a      	cmp	r3, #10
   83042:	f47f af66 	bne.w	82f12 <udc_process_setup+0x23a>
	if (udd_g_ctrlreq.req.wLength != 1) {
   83046:	2c01      	cmp	r4, #1
   83048:	f47f aeda 	bne.w	82e00 <udc_process_setup+0x128>
	if (!udc_num_configuration) {
   8304c:	4d6e      	ldr	r5, [pc, #440]	; (83208 <udc_process_setup+0x530>)
   8304e:	782b      	ldrb	r3, [r5, #0]
   83050:	2b00      	cmp	r3, #0
   83052:	f43f ae55 	beq.w	82d00 <udc_process_setup+0x28>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   83056:	4c6d      	ldr	r4, [pc, #436]	; (8320c <udc_process_setup+0x534>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   83058:	f896 8004 	ldrb.w	r8, [r6, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   8305c:	6827      	ldr	r7, [r4, #0]
   8305e:	683b      	ldr	r3, [r7, #0]
   83060:	791b      	ldrb	r3, [r3, #4]
   83062:	4543      	cmp	r3, r8
   83064:	f67f aed2 	bls.w	82e0c <udc_process_setup+0x134>
   83068:	4640      	mov	r0, r8
   8306a:	4b6a      	ldr	r3, [pc, #424]	; (83214 <udc_process_setup+0x53c>)
   8306c:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, 0)) {
   8306e:	4604      	mov	r4, r0
   83070:	2800      	cmp	r0, #0
   83072:	f43f af4e 	beq.w	82f12 <udc_process_setup+0x23a>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   83076:	687b      	ldr	r3, [r7, #4]
	udc_iface_setting = udi_api->getsetting();
   83078:	f853 3028 	ldr.w	r3, [r3, r8, lsl #2]
   8307c:	68db      	ldr	r3, [r3, #12]
   8307e:	4798      	blx	r3
   83080:	4b67      	ldr	r3, [pc, #412]	; (83220 <udc_process_setup+0x548>)
	udd_set_setup_payload(&udc_iface_setting,1);
   83082:	2101      	movs	r1, #1
	udc_iface_setting = udi_api->getsetting();
   83084:	7018      	strb	r0, [r3, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   83086:	4a67      	ldr	r2, [pc, #412]	; (83224 <udc_process_setup+0x54c>)
   83088:	4618      	mov	r0, r3
   8308a:	4790      	blx	r2
   8308c:	e639      	b.n	82d02 <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wLength != 1) {
   8308e:	2c01      	cmp	r4, #1
   83090:	f47f ae36 	bne.w	82d00 <udc_process_setup+0x28>
	udd_set_setup_payload(&udc_num_configuration,1);
   83094:	4621      	mov	r1, r4
   83096:	485c      	ldr	r0, [pc, #368]	; (83208 <udc_process_setup+0x530>)
   83098:	4b62      	ldr	r3, [pc, #392]	; (83224 <udc_process_setup+0x54c>)
   8309a:	4798      	blx	r3
   8309c:	e631      	b.n	82d02 <udc_process_setup+0x2a>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   8309e:	8874      	ldrh	r4, [r6, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   830a0:	0a23      	lsrs	r3, r4, #8
   830a2:	3b01      	subs	r3, #1
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   830a4:	b2e4      	uxtb	r4, r4
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   830a6:	2b0e      	cmp	r3, #14
   830a8:	f63f ae2a 	bhi.w	82d00 <udc_process_setup+0x28>
   830ac:	a201      	add	r2, pc, #4	; (adr r2, 830b4 <udc_process_setup+0x3dc>)
   830ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   830b2:	bf00      	nop
   830b4:	0008317b 	.word	0x0008317b
   830b8:	00083151 	.word	0x00083151
   830bc:	00083143 	.word	0x00083143
   830c0:	00082d01 	.word	0x00082d01
   830c4:	00082d01 	.word	0x00082d01
   830c8:	00083137 	.word	0x00083137
   830cc:	0008310d 	.word	0x0008310d
   830d0:	00082d01 	.word	0x00082d01
   830d4:	00082d01 	.word	0x00082d01
   830d8:	00082d01 	.word	0x00082d01
   830dc:	00082d01 	.word	0x00082d01
   830e0:	00082d01 	.word	0x00082d01
   830e4:	00082d01 	.word	0x00082d01
   830e8:	00082d01 	.word	0x00082d01
   830ec:	000830f1 	.word	0x000830f1
		if (udc_config.conf_bos == NULL) {
   830f0:	4b43      	ldr	r3, [pc, #268]	; (83200 <udc_process_setup+0x528>)
   830f2:	6958      	ldr	r0, [r3, #20]
   830f4:	2800      	cmp	r0, #0
   830f6:	f43f ae03 	beq.w	82d00 <udc_process_setup+0x28>
		udd_set_setup_payload( (uint8_t *) udc_config.conf_bos,
   830fa:	8841      	ldrh	r1, [r0, #2]
   830fc:	4b49      	ldr	r3, [pc, #292]	; (83224 <udc_process_setup+0x54c>)
   830fe:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   83100:	88f3      	ldrh	r3, [r6, #6]
   83102:	89b2      	ldrh	r2, [r6, #12]
   83104:	429a      	cmp	r2, r3
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   83106:	bf88      	it	hi
   83108:	81b3      	strhhi	r3, [r6, #12]
   8310a:	e6d0      	b.n	82eae <udc_process_setup+0x1d6>
		if (!udd_is_high_speed()) {
   8310c:	4b3b      	ldr	r3, [pc, #236]	; (831fc <udc_process_setup+0x524>)
   8310e:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   83110:	4b3b      	ldr	r3, [pc, #236]	; (83200 <udc_process_setup+0x528>)
		if (!udd_is_high_speed()) {
   83112:	2800      	cmp	r0, #0
   83114:	f040 80ad 	bne.w	83272 <udc_process_setup+0x59a>
			if (conf_num >= udc_config.confdev_hs->
   83118:	689a      	ldr	r2, [r3, #8]
   8311a:	7c52      	ldrb	r2, [r2, #17]
   8311c:	42a2      	cmp	r2, r4
   8311e:	f67f aef8 	bls.w	82f12 <udc_process_setup+0x23a>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   83122:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   83124:	4b3f      	ldr	r3, [pc, #252]	; (83224 <udc_process_setup+0x54c>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   83126:	f852 0034 	ldr.w	r0, [r2, r4, lsl #3]
			udd_set_setup_payload(
   8312a:	8841      	ldrh	r1, [r0, #2]
   8312c:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   8312e:	2207      	movs	r2, #7
   83130:	68b3      	ldr	r3, [r6, #8]
   83132:	705a      	strb	r2, [r3, #1]
   83134:	e7e4      	b.n	83100 <udc_process_setup+0x428>
		udd_set_setup_payload( (uint8_t *) udc_config.qualifier,
   83136:	4a32      	ldr	r2, [pc, #200]	; (83200 <udc_process_setup+0x528>)
   83138:	4b3a      	ldr	r3, [pc, #232]	; (83224 <udc_process_setup+0x54c>)
   8313a:	68d0      	ldr	r0, [r2, #12]
   8313c:	7801      	ldrb	r1, [r0, #0]
   8313e:	4798      	blx	r3
   83140:	e7de      	b.n	83100 <udc_process_setup+0x428>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   83142:	2c03      	cmp	r4, #3
   83144:	f63f aee5 	bhi.w	82f12 <udc_process_setup+0x23a>
   83148:	e8df f004 	tbb	[pc, r4]
   8314c:	798eb16e 	.word	0x798eb16e
		if (udd_is_high_speed()) {
   83150:	4b2a      	ldr	r3, [pc, #168]	; (831fc <udc_process_setup+0x524>)
   83152:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   83154:	4b2a      	ldr	r3, [pc, #168]	; (83200 <udc_process_setup+0x528>)
		if (udd_is_high_speed()) {
   83156:	2800      	cmp	r0, #0
   83158:	f000 8097 	beq.w	8328a <udc_process_setup+0x5b2>
			if (conf_num >= udc_config.confdev_hs->
   8315c:	689a      	ldr	r2, [r3, #8]
   8315e:	7c52      	ldrb	r2, [r2, #17]
   83160:	42a2      	cmp	r2, r4
   83162:	f67f aed6 	bls.w	82f12 <udc_process_setup+0x23a>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   83166:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   83168:	4b2e      	ldr	r3, [pc, #184]	; (83224 <udc_process_setup+0x54c>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   8316a:	f852 0034 	ldr.w	r0, [r2, r4, lsl #3]
			udd_set_setup_payload(
   8316e:	8841      	ldrh	r1, [r0, #2]
   83170:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   83172:	2202      	movs	r2, #2
   83174:	68b3      	ldr	r3, [r6, #8]
   83176:	705a      	strb	r2, [r3, #1]
   83178:	e7c2      	b.n	83100 <udc_process_setup+0x428>
		if (!udd_is_high_speed()) {
   8317a:	4b20      	ldr	r3, [pc, #128]	; (831fc <udc_process_setup+0x524>)
   8317c:	4798      	blx	r3
				(uint8_t *) udc_config.confdev_hs,
   8317e:	4a20      	ldr	r2, [pc, #128]	; (83200 <udc_process_setup+0x528>)
			udd_set_setup_payload(
   83180:	4b28      	ldr	r3, [pc, #160]	; (83224 <udc_process_setup+0x54c>)
		if (!udd_is_high_speed()) {
   83182:	2800      	cmp	r0, #0
   83184:	f040 80a1 	bne.w	832ca <udc_process_setup+0x5f2>
				(uint8_t *) udc_config.confdev_hs,
   83188:	6890      	ldr	r0, [r2, #8]
			udd_set_setup_payload(
   8318a:	7801      	ldrb	r1, [r0, #0]
   8318c:	4798      	blx	r3
   8318e:	e7b7      	b.n	83100 <udc_process_setup+0x428>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   83190:	6823      	ldr	r3, [r4, #0]
   83192:	681b      	ldr	r3, [r3, #0]
   83194:	791a      	ldrb	r2, [r3, #4]
   83196:	42ba      	cmp	r2, r7
   83198:	f67f ae68 	bls.w	82e6c <udc_process_setup+0x194>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   8319c:	f8c8 3000 	str.w	r3, [r8]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   831a0:	885a      	ldrh	r2, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   831a2:	441a      	add	r2, r3
	while (ptr_end_desc >
   831a4:	4293      	cmp	r3, r2
   831a6:	f4bf ae61 	bcs.w	82e6c <udc_process_setup+0x194>
   831aa:	2400      	movs	r4, #0
   831ac:	e005      	b.n	831ba <udc_process_setup+0x4e2>
				udc_ptr_iface->bLength);
   831ae:	7819      	ldrb	r1, [r3, #0]
   831b0:	2401      	movs	r4, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   831b2:	440b      	add	r3, r1
	while (ptr_end_desc >
   831b4:	429a      	cmp	r2, r3
   831b6:	f67f af30 	bls.w	8301a <udc_process_setup+0x342>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   831ba:	7859      	ldrb	r1, [r3, #1]
   831bc:	2904      	cmp	r1, #4
   831be:	d1f6      	bne.n	831ae <udc_process_setup+0x4d6>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   831c0:	7899      	ldrb	r1, [r3, #2]
   831c2:	42b9      	cmp	r1, r7
   831c4:	d1f3      	bne.n	831ae <udc_process_setup+0x4d6>
   831c6:	78d9      	ldrb	r1, [r3, #3]
   831c8:	4281      	cmp	r1, r0
   831ca:	d1f0      	bne.n	831ae <udc_process_setup+0x4d6>
   831cc:	2c00      	cmp	r4, #0
   831ce:	d16b      	bne.n	832a8 <udc_process_setup+0x5d0>
	return udi_api->setup();
   831d0:	f8d9 3008 	ldr.w	r3, [r9, #8]
   831d4:	4798      	blx	r3
		if (udc_req_iface()) {
   831d6:	2800      	cmp	r0, #0
   831d8:	f47f ae69 	bne.w	82eae <udc_process_setup+0x1d6>
   831dc:	e646      	b.n	82e6c <udc_process_setup+0x194>
		udc_reset();
   831de:	4b09      	ldr	r3, [pc, #36]	; (83204 <udc_process_setup+0x52c>)
   831e0:	4798      	blx	r3
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   831e2:	88b3      	ldrh	r3, [r6, #4]
   831e4:	0a1b      	lsrs	r3, r3, #8
   831e6:	3b01      	subs	r3, #1
   831e8:	2b03      	cmp	r3, #3
   831ea:	f63f ae92 	bhi.w	82f12 <udc_process_setup+0x23a>
   831ee:	e8df f003 	tbb	[pc, r3]
   831f2:	7679      	.short	0x7679
   831f4:	7073      	.short	0x7073
   831f6:	bf00      	nop
   831f8:	00081b69 	.word	0x00081b69
   831fc:	00081b31 	.word	0x00081b31
   83200:	20000248 	.word	0x20000248
   83204:	00082c0d 	.word	0x00082c0d
   83208:	2000353b 	.word	0x2000353b
   8320c:	2000353c 	.word	0x2000353c
   83210:	00082aa9 	.word	0x00082aa9
   83214:	00082a51 	.word	0x00082a51
   83218:	00082b55 	.word	0x00082b55
   8321c:	0008209d 	.word	0x0008209d
   83220:	2000353a 	.word	0x2000353a
   83224:	00081b89 	.word	0x00081b89
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   83228:	2104      	movs	r1, #4
   8322a:	4830      	ldr	r0, [pc, #192]	; (832ec <udc_process_setup+0x614>)
   8322c:	4b30      	ldr	r3, [pc, #192]	; (832f0 <udc_process_setup+0x618>)
   8322e:	4798      	blx	r3
   83230:	e766      	b.n	83100 <udc_process_setup+0x428>
				udc_config.confdev_lsfs->bNumConfigurations) {
   83232:	682b      	ldr	r3, [r5, #0]
   83234:	7c5b      	ldrb	r3, [r3, #17]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   83236:	429a      	cmp	r2, r3
   83238:	f77f aea7 	ble.w	82f8a <udc_process_setup+0x2b2>
   8323c:	e669      	b.n	82f12 <udc_process_setup+0x23a>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   8323e:	2142      	movs	r1, #66	; 0x42
		str_length = USB_DEVICE_SERIAL_NAME_SIZE;
   83240:	2020      	movs	r0, #32
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   83242:	460c      	mov	r4, r1
		str = udc_get_string_serial_name();
   83244:	4b2b      	ldr	r3, [pc, #172]	; (832f4 <udc_process_setup+0x61c>)
   83246:	4f2c      	ldr	r7, [pc, #176]	; (832f8 <udc_process_setup+0x620>)
{
   83248:	2200      	movs	r2, #0
   8324a:	463d      	mov	r5, r7
   8324c:	3b01      	subs	r3, #1
		for(i = 0; i < str_length; i++) {
   8324e:	3201      	adds	r2, #1
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   83250:	f813 ef01 	ldrb.w	lr, [r3, #1]!
		for(i = 0; i < str_length; i++) {
   83254:	b2d2      	uxtb	r2, r2
   83256:	4282      	cmp	r2, r0
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   83258:	f825 ef02 	strh.w	lr, [r5, #2]!
		for(i = 0; i < str_length; i++) {
   8325c:	d3f7      	bcc.n	8324e <udc_process_setup+0x576>
		udd_set_setup_payload(
   8325e:	4826      	ldr	r0, [pc, #152]	; (832f8 <udc_process_setup+0x620>)
   83260:	4b23      	ldr	r3, [pc, #140]	; (832f0 <udc_process_setup+0x618>)
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   83262:	703c      	strb	r4, [r7, #0]
		udd_set_setup_payload(
   83264:	4798      	blx	r3
   83266:	e74b      	b.n	83100 <udc_process_setup+0x428>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   83268:	2128      	movs	r1, #40	; 0x28
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
   8326a:	2013      	movs	r0, #19
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   8326c:	460c      	mov	r4, r1
		str = udc_string_product_name;
   8326e:	4b23      	ldr	r3, [pc, #140]	; (832fc <udc_process_setup+0x624>)
   83270:	e7e9      	b.n	83246 <udc_process_setup+0x56e>
			if (conf_num >= udc_config.confdev_lsfs->
   83272:	681a      	ldr	r2, [r3, #0]
   83274:	7c52      	ldrb	r2, [r2, #17]
   83276:	42a2      	cmp	r2, r4
   83278:	f67f ae4b 	bls.w	82f12 <udc_process_setup+0x23a>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   8327c:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   8327e:	4b1c      	ldr	r3, [pc, #112]	; (832f0 <udc_process_setup+0x618>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   83280:	f852 0034 	ldr.w	r0, [r2, r4, lsl #3]
			udd_set_setup_payload(
   83284:	8841      	ldrh	r1, [r0, #2]
   83286:	4798      	blx	r3
   83288:	e751      	b.n	8312e <udc_process_setup+0x456>
			if (conf_num >= udc_config.confdev_lsfs->
   8328a:	681a      	ldr	r2, [r3, #0]
   8328c:	7c52      	ldrb	r2, [r2, #17]
   8328e:	42a2      	cmp	r2, r4
   83290:	f67f ae3f 	bls.w	82f12 <udc_process_setup+0x23a>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   83294:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   83296:	4b16      	ldr	r3, [pc, #88]	; (832f0 <udc_process_setup+0x618>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   83298:	f852 0034 	ldr.w	r0, [r2, r4, lsl #3]
			udd_set_setup_payload(
   8329c:	8841      	ldrh	r1, [r0, #2]
   8329e:	4798      	blx	r3
   832a0:	e767      	b.n	83172 <udc_process_setup+0x49a>
   832a2:	f8c8 3000 	str.w	r3, [r8]
   832a6:	e5d6      	b.n	82e56 <udc_process_setup+0x17e>
   832a8:	f8c8 3000 	str.w	r3, [r8]
   832ac:	e790      	b.n	831d0 <udc_process_setup+0x4f8>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   832ae:	212c      	movs	r1, #44	; 0x2c
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
   832b0:	2015      	movs	r0, #21
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   832b2:	460c      	mov	r4, r1
		str = udc_string_manufacturer_name;
   832b4:	4b12      	ldr	r3, [pc, #72]	; (83300 <udc_process_setup+0x628>)
   832b6:	e7c6      	b.n	83246 <udc_process_setup+0x56e>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   832b8:	686b      	ldr	r3, [r5, #4]
   832ba:	f102 5200 	add.w	r2, r2, #536870912	; 0x20000000
   832be:	3a01      	subs	r2, #1
   832c0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   832c4:	e673      	b.n	82fae <udc_process_setup+0x2d6>
   832c6:	6033      	str	r3, [r6, #0]
   832c8:	e56e      	b.n	82da8 <udc_process_setup+0xd0>
				(uint8_t *) udc_config.confdev_lsfs,
   832ca:	6810      	ldr	r0, [r2, #0]
			udd_set_setup_payload(
   832cc:	7801      	ldrb	r1, [r0, #0]
   832ce:	4798      	blx	r3
   832d0:	e716      	b.n	83100 <udc_process_setup+0x428>
			udd_g_ctrlreq.callback = udd_test_mode_packet;
   832d2:	4b0c      	ldr	r3, [pc, #48]	; (83304 <udc_process_setup+0x62c>)
   832d4:	6133      	str	r3, [r6, #16]
   832d6:	e514      	b.n	82d02 <udc_process_setup+0x2a>
			udd_g_ctrlreq.callback = udd_test_mode_se0_nak;
   832d8:	4b0b      	ldr	r3, [pc, #44]	; (83308 <udc_process_setup+0x630>)
   832da:	6133      	str	r3, [r6, #16]
   832dc:	e511      	b.n	82d02 <udc_process_setup+0x2a>
			udd_g_ctrlreq.callback = udd_test_mode_k;
   832de:	4b0b      	ldr	r3, [pc, #44]	; (8330c <udc_process_setup+0x634>)
   832e0:	6133      	str	r3, [r6, #16]
   832e2:	e50e      	b.n	82d02 <udc_process_setup+0x2a>
			udd_g_ctrlreq.callback = udd_test_mode_j;
   832e4:	4b0a      	ldr	r3, [pc, #40]	; (83310 <udc_process_setup+0x638>)
   832e6:	6133      	str	r3, [r6, #16]
   832e8:	e50b      	b.n	82d02 <udc_process_setup+0x2a>
   832ea:	bf00      	nop
   832ec:	20000214 	.word	0x20000214
   832f0:	00081b89 	.word	0x00081b89
   832f4:	20000190 	.word	0x20000190
   832f8:	200001d0 	.word	0x200001d0
   832fc:	20000230 	.word	0x20000230
   83300:	20000218 	.word	0x20000218
   83304:	00082331 	.word	0x00082331
   83308:	00082319 	.word	0x00082319
   8330c:	000822f5 	.word	0x000822f5
   83310:	000822d1 	.word	0x000822d1

00083314 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
   83314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	switch (sleep_mode) {
   83318:	1e43      	subs	r3, r0, #1
{
   8331a:	b083      	sub	sp, #12
	switch (sleep_mode) {
   8331c:	2b04      	cmp	r3, #4
   8331e:	f200 80b8 	bhi.w	83492 <pmc_sleep+0x17e>
   83322:	e8df f013 	tbh	[pc, r3, lsl #1]
   83326:	00c8      	.short	0x00c8
   83328:	000500c8 	.word	0x000500c8
   8332c:	00b90005 	.word	0x00b90005
  __ASM volatile ("cpsid i");
   83330:	b672      	cpsid	i
  __ASM volatile ("dmb");
   83332:	f3bf 8f5f 	dmb	sy
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
#endif
		cpu_irq_disable();
   83336:	2100      	movs	r1, #0
		b_is_sleep_clock_used = true;
   83338:	2201      	movs	r2, #1
		cpu_irq_disable();
   8333a:	4c88      	ldr	r4, [pc, #544]	; (8355c <pmc_sleep+0x248>)
		b_is_sleep_clock_used = true;
   8333c:	f8df 824c 	ldr.w	r8, [pc, #588]	; 8358c <pmc_sleep+0x278>
	uint32_t mor  = PMC->CKGR_MOR;
   83340:	4b87      	ldr	r3, [pc, #540]	; (83560 <pmc_sleep+0x24c>)
		cpu_irq_disable();
   83342:	7021      	strb	r1, [r4, #0]
		b_is_sleep_clock_used = true;
   83344:	f888 2000 	strb.w	r2, [r8]
	uint32_t mor  = PMC->CKGR_MOR;
   83348:	6a1f      	ldr	r7, [r3, #32]
	uint32_t fmr  = EFC0->EEFC_FMR;
   8334a:	4a86      	ldr	r2, [pc, #536]	; (83564 <pmc_sleep+0x250>)
	uint32_t mckr = PMC->PMC_MCKR;
   8334c:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
	uint32_t fmr1 = EFC1->EEFC_FMR;
   83350:	4e85      	ldr	r6, [pc, #532]	; (83568 <pmc_sleep+0x254>)
	uint32_t fmr  = EFC0->EEFC_FMR;
   83352:	f8d2 a000 	ldr.w	sl, [r2]
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   83356:	f447 115c 	orr.w	r1, r7, #3604480	; 0x370000
	uint32_t fmr1 = EFC1->EEFC_FMR;
   8335a:	f8d6 9000 	ldr.w	r9, [r6]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
   8335e:	f00b 0503 	and.w	r5, fp, #3
		*p_pll0_setting = PMC->CKGR_PLLAR;
   83362:	6a9e      	ldr	r6, [r3, #40]	; 0x28
		*p_pll1_setting = PMC->CKGR_UCKR;
   83364:	69da      	ldr	r2, [r3, #28]
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   83366:	f041 0108 	orr.w	r1, r1, #8
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
   8336a:	2d01      	cmp	r5, #1
		*p_pll1_setting = PMC->CKGR_UCKR;
   8336c:	9200      	str	r2, [sp, #0]
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
   8336e:	6219      	str	r1, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
   83370:	f200 80b5 	bhi.w	834de <pmc_sleep+0x1ca>
   83374:	46de      	mov	lr, fp
	if (mckr & PMC_MCKR_PRES_Msk) {
   83376:	f01e 0f70 	tst.w	lr, #112	; 0x70
   8337a:	d007      	beq.n	8338c <pmc_sleep+0x78>
		PMC->PMC_MCKR = mckr;
   8337c:	4a78      	ldr	r2, [pc, #480]	; (83560 <pmc_sleep+0x24c>)
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
   8337e:	f02e 0370 	bic.w	r3, lr, #112	; 0x70
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   83382:	4611      	mov	r1, r2
		PMC->PMC_MCKR = mckr;
   83384:	6313      	str	r3, [r2, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   83386:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83388:	071a      	lsls	r2, r3, #28
   8338a:	d5fc      	bpl.n	83386 <pmc_sleep+0x72>
	pmc_disable_pllack();
   8338c:	4b77      	ldr	r3, [pc, #476]	; (8356c <pmc_sleep+0x258>)
   8338e:	9001      	str	r0, [sp, #4]
   83390:	4798      	blx	r3
	pmc_disable_upll_clock();
   83392:	4b77      	ldr	r3, [pc, #476]	; (83570 <pmc_sleep+0x25c>)
   83394:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   83396:	4972      	ldr	r1, [pc, #456]	; (83560 <pmc_sleep+0x24c>)
   83398:	9801      	ldr	r0, [sp, #4]
   8339a:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   8339c:	039b      	lsls	r3, r3, #14
   8339e:	d5fc      	bpl.n	8339a <pmc_sleep+0x86>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
   833a0:	6a0b      	ldr	r3, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   833a2:	4a6f      	ldr	r2, [pc, #444]	; (83560 <pmc_sleep+0x24c>)
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
   833a4:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
   833a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   833ac:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   833b0:	620b      	str	r3, [r1, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   833b2:	6e93      	ldr	r3, [r2, #104]	; 0x68
   833b4:	03d9      	lsls	r1, r3, #15
   833b6:	d5fc      	bpl.n	833b2 <pmc_sleep+0x9e>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
   833b8:	496a      	ldr	r1, [pc, #424]	; (83564 <pmc_sleep+0x250>)
	EFC1->EEFC_FMR = fmr1 & (~EEFC_FMR_FWS_Msk);
   833ba:	4b6b      	ldr	r3, [pc, #428]	; (83568 <pmc_sleep+0x254>)
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
   833bc:	f42a 6c70 	bic.w	ip, sl, #3840	; 0xf00
   833c0:	f8c1 c000 	str.w	ip, [r1]
	if (disable_xtal) {
   833c4:	2804      	cmp	r0, #4
	EFC1->EEFC_FMR = fmr1 & (~EEFC_FMR_FWS_Msk);
   833c6:	f429 6170 	bic.w	r1, r9, #3840	; 0xf00
   833ca:	6019      	str	r1, [r3, #0]
	if (disable_xtal) {
   833cc:	f000 80bd 	beq.w	8354a <pmc_sleep+0x236>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
   833d0:	2301      	movs	r3, #1
   833d2:	7023      	strb	r3, [r4, #0]
   833d4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   833d8:	b662      	cpsie	i

		pmc_enable_waitmode();
   833da:	4b66      	ldr	r3, [pc, #408]	; (83574 <pmc_sleep+0x260>)
   833dc:	4798      	blx	r3
  __ASM volatile ("cpsid i");
   833de:	b672      	cpsid	i
   833e0:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
   833e4:	2300      	movs	r3, #0
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
   833e6:	07ba      	lsls	r2, r7, #30
		cpu_irq_disable();
   833e8:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
   833ea:	f140 8085 	bpl.w	834f8 <pmc_sleep+0x1e4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   833ee:	495c      	ldr	r1, [pc, #368]	; (83560 <pmc_sleep+0x24c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   833f0:	4861      	ldr	r0, [pc, #388]	; (83578 <pmc_sleep+0x264>)
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   833f2:	6a0f      	ldr	r7, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   833f4:	4b61      	ldr	r3, [pc, #388]	; (8357c <pmc_sleep+0x268>)
   833f6:	4038      	ands	r0, r7
   833f8:	4303      	orrs	r3, r0
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   833fa:	620b      	str	r3, [r1, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   833fc:	6a0b      	ldr	r3, [r1, #32]
					| CKGR_MOR_KEY_PASSWD;
   833fe:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   83402:	f023 0378 	bic.w	r3, r3, #120	; 0x78
   83406:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   8340a:	620b      	str	r3, [r1, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
   8340c:	495c      	ldr	r1, [pc, #368]	; (83580 <pmc_sleep+0x26c>)
   8340e:	4031      	ands	r1, r6
   83410:	2900      	cmp	r1, #0
   83412:	d06f      	beq.n	834f4 <pmc_sleep+0x1e0>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
   83414:	4b52      	ldr	r3, [pc, #328]	; (83560 <pmc_sleep+0x24c>)
   83416:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
   8341a:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
   8341c:	2102      	movs	r1, #2
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
   8341e:	2342      	movs	r3, #66	; 0x42
	if (pll1_setting & CKGR_UCKR_UPLLEN) {
   83420:	9800      	ldr	r0, [sp, #0]
   83422:	03c7      	lsls	r7, r0, #15
   83424:	d502      	bpl.n	8342c <pmc_sleep+0x118>
		pll_sr |= PMC_SR_LOCKU;
   83426:	4619      	mov	r1, r3
		PMC->CKGR_UCKR = pll1_setting;
   83428:	4b4d      	ldr	r3, [pc, #308]	; (83560 <pmc_sleep+0x24c>)
   8342a:	61d8      	str	r0, [r3, #28]
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
   8342c:	2d02      	cmp	r5, #2
   8342e:	f000 8087 	beq.w	83540 <pmc_sleep+0x22c>
   83432:	2d03      	cmp	r5, #3
   83434:	d103      	bne.n	8343e <pmc_sleep+0x12a>
		while (!(PMC->PMC_SR & PMC_SR_LOCKU));
   83436:	484a      	ldr	r0, [pc, #296]	; (83560 <pmc_sleep+0x24c>)
   83438:	6e83      	ldr	r3, [r0, #104]	; 0x68
   8343a:	065d      	lsls	r5, r3, #25
   8343c:	d5fc      	bpl.n	83438 <pmc_sleep+0x124>
	mckr = PMC->PMC_MCKR;
   8343e:	4e48      	ldr	r6, [pc, #288]	; (83560 <pmc_sleep+0x24c>)
		| (mck_setting & PMC_MCKR_PRES_Msk);
   83440:	f00b 0370 	and.w	r3, fp, #112	; 0x70
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   83444:	4630      	mov	r0, r6
	mckr = PMC->PMC_MCKR;
   83446:	6b35      	ldr	r5, [r6, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
   83448:	f025 0570 	bic.w	r5, r5, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
   8344c:	432b      	orrs	r3, r5
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
   8344e:	6333      	str	r3, [r6, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   83450:	6e83      	ldr	r3, [r0, #104]	; 0x68
   83452:	071a      	lsls	r2, r3, #28
   83454:	d5fc      	bpl.n	83450 <pmc_sleep+0x13c>
	EFC0->EEFC_FMR = fmr_setting;
   83456:	4d43      	ldr	r5, [pc, #268]	; (83564 <pmc_sleep+0x250>)
	EFC1->EEFC_FMR = fmr_setting1;
   83458:	4b43      	ldr	r3, [pc, #268]	; (83568 <pmc_sleep+0x254>)
	EFC0->EEFC_FMR = fmr_setting;
   8345a:	f8c5 a000 	str.w	sl, [r5]
	EFC1->EEFC_FMR = fmr_setting1;
   8345e:	f8c3 9000 	str.w	r9, [r3]
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   83462:	f5a5 6580 	sub.w	r5, r5, #1024	; 0x400
	PMC->PMC_MCKR = mck_setting;
   83466:	f8c0 b030 	str.w	fp, [r0, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
   8346a:	6eab      	ldr	r3, [r5, #104]	; 0x68
   8346c:	071b      	lsls	r3, r3, #28
   8346e:	d5fc      	bpl.n	8346a <pmc_sleep+0x156>
	while (!(PMC->PMC_SR & pll_sr));
   83470:	4a3b      	ldr	r2, [pc, #236]	; (83560 <pmc_sleep+0x24c>)
   83472:	6e93      	ldr	r3, [r2, #104]	; 0x68
   83474:	420b      	tst	r3, r1
   83476:	d0fc      	beq.n	83472 <pmc_sleep+0x15e>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
   83478:	2600      	movs	r6, #0
		if (callback_clocks_restored) {
   8347a:	4d42      	ldr	r5, [pc, #264]	; (83584 <pmc_sleep+0x270>)
		b_is_sleep_clock_used = false;
   8347c:	f888 6000 	strb.w	r6, [r8]
		if (callback_clocks_restored) {
   83480:	682b      	ldr	r3, [r5, #0]
   83482:	b10b      	cbz	r3, 83488 <pmc_sleep+0x174>
			callback_clocks_restored();
   83484:	4798      	blx	r3
			callback_clocks_restored = NULL;
   83486:	602e      	str	r6, [r5, #0]
		}
		cpu_irq_enable();
   83488:	2301      	movs	r3, #1
   8348a:	7023      	strb	r3, [r4, #0]
   8348c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   83490:	b662      	cpsie	i
		__WFE() ;
#endif
		break;
#endif
	}
}
   83492:	b003      	add	sp, #12
   83494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		cpu_irq_enable();
   83498:	2001      	movs	r0, #1
		SCB->SCR |= SCR_SLEEPDEEP;
   8349a:	4a3b      	ldr	r2, [pc, #236]	; (83588 <pmc_sleep+0x274>)
		cpu_irq_enable();
   8349c:	492f      	ldr	r1, [pc, #188]	; (8355c <pmc_sleep+0x248>)
		SCB->SCR |= SCR_SLEEPDEEP;
   8349e:	6913      	ldr	r3, [r2, #16]
   834a0:	f043 0304 	orr.w	r3, r3, #4
   834a4:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
   834a6:	7008      	strb	r0, [r1, #0]
   834a8:	f3bf 8f5f 	dmb	sy
   834ac:	b662      	cpsie	i
  __ASM volatile ("wfe");
   834ae:	bf20      	wfe
}
   834b0:	b003      	add	sp, #12
   834b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		cpu_irq_enable();
   834b6:	2501      	movs	r5, #1
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
   834b8:	4929      	ldr	r1, [pc, #164]	; (83560 <pmc_sleep+0x24c>)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
   834ba:	4a33      	ldr	r2, [pc, #204]	; (83588 <pmc_sleep+0x274>)
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
   834bc:	6f0b      	ldr	r3, [r1, #112]	; 0x70
		cpu_irq_enable();
   834be:	4c27      	ldr	r4, [pc, #156]	; (8355c <pmc_sleep+0x248>)
		PMC->PMC_FSMR &= (uint32_t)~PMC_FSMR_LPM;
   834c0:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   834c4:	670b      	str	r3, [r1, #112]	; 0x70
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
   834c6:	6913      	ldr	r3, [r2, #16]
   834c8:	f023 0304 	bic.w	r3, r3, #4
   834cc:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
   834ce:	7025      	strb	r5, [r4, #0]
  __ASM volatile ("dmb");
   834d0:	f3bf 8f5f 	dmb	sy
   834d4:	b662      	cpsie	i
		if (sleep_mode == SAM_PM_SMODE_SLEEP_WFI)
   834d6:	2802      	cmp	r0, #2
   834d8:	d1e9      	bne.n	834ae <pmc_sleep+0x19a>
  __ASM volatile ("wfi");
   834da:	bf30      	wfi
   834dc:	e7d9      	b.n	83492 <pmc_sleep+0x17e>
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834de:	4619      	mov	r1, r3
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
   834e0:	f02b 0e03 	bic.w	lr, fp, #3
   834e4:	f04e 0e01 	orr.w	lr, lr, #1
		PMC->PMC_MCKR = mckr;
   834e8:	f8c3 e030 	str.w	lr, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
   834ec:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   834ee:	071b      	lsls	r3, r3, #28
   834f0:	d5fc      	bpl.n	834ec <pmc_sleep+0x1d8>
   834f2:	e740      	b.n	83376 <pmc_sleep+0x62>
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
   834f4:	2340      	movs	r3, #64	; 0x40
   834f6:	e793      	b.n	83420 <pmc_sleep+0x10c>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
   834f8:	07fb      	lsls	r3, r7, #31
   834fa:	d587      	bpl.n	8340c <pmc_sleep+0xf8>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
   834fc:	4818      	ldr	r0, [pc, #96]	; (83560 <pmc_sleep+0x24c>)
   834fe:	6a03      	ldr	r3, [r0, #32]
   83500:	07df      	lsls	r7, r3, #31
   83502:	d40d      	bmi.n	83520 <pmc_sleep+0x20c>
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   83504:	4601      	mov	r1, r0
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   83506:	6a03      	ldr	r3, [r0, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
   83508:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   8350c:	f023 0303 	bic.w	r3, r3, #3
   83510:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83514:	f043 0301 	orr.w	r3, r3, #1
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   83518:	6203      	str	r3, [r0, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   8351a:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   8351c:	07da      	lsls	r2, r3, #31
   8351e:	d5fc      	bpl.n	8351a <pmc_sleep+0x206>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
   83520:	4b0f      	ldr	r3, [pc, #60]	; (83560 <pmc_sleep+0x24c>)
   83522:	6a19      	ldr	r1, [r3, #32]
   83524:	01c9      	lsls	r1, r1, #7
   83526:	d409      	bmi.n	8353c <pmc_sleep+0x228>
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   83528:	4619      	mov	r1, r3
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   8352a:	6a18      	ldr	r0, [r3, #32]
   8352c:	f040 709b 	orr.w	r0, r0, #20316160	; 0x1360000
   83530:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
   83534:	6218      	str	r0, [r3, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
   83536:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83538:	03db      	lsls	r3, r3, #15
   8353a:	d5fc      	bpl.n	83536 <pmc_sleep+0x222>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
   8353c:	4908      	ldr	r1, [pc, #32]	; (83560 <pmc_sleep+0x24c>)
   8353e:	e75d      	b.n	833fc <pmc_sleep+0xe8>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
   83540:	4807      	ldr	r0, [pc, #28]	; (83560 <pmc_sleep+0x24c>)
   83542:	6e83      	ldr	r3, [r0, #104]	; 0x68
   83544:	079e      	lsls	r6, r3, #30
   83546:	d5fc      	bpl.n	83542 <pmc_sleep+0x22e>
   83548:	e779      	b.n	8343e <pmc_sleep+0x12a>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   8354a:	6a13      	ldr	r3, [r2, #32]
   8354c:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   83550:	f023 0301 	bic.w	r3, r3, #1
   83554:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83558:	6213      	str	r3, [r2, #32]
   8355a:	e739      	b.n	833d0 <pmc_sleep+0xbc>
   8355c:	20000244 	.word	0x20000244
   83560:	400e0400 	.word	0x400e0400
   83564:	400e0800 	.word	0x400e0800
   83568:	400e0a00 	.word	0x400e0a00
   8356c:	000826b5 	.word	0x000826b5
   83570:	000826d5 	.word	0x000826d5
   83574:	00082759 	.word	0x00082759
   83578:	fec8fffc 	.word	0xfec8fffc
   8357c:	01370002 	.word	0x01370002
   83580:	07ff0000 	.word	0x07ff0000
   83584:	20003548 	.word	0x20003548
   83588:	e000ed00 	.word	0xe000ed00
   8358c:	20003544 	.word	0x20003544

00083590 <pmc_is_wakeup_clocks_restored>:

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   83590:	4b02      	ldr	r3, [pc, #8]	; (8359c <pmc_is_wakeup_clocks_restored+0xc>)
   83592:	7818      	ldrb	r0, [r3, #0]
}
   83594:	f080 0001 	eor.w	r0, r0, #1
   83598:	4770      	bx	lr
   8359a:	bf00      	nop
   8359c:	20003544 	.word	0x20003544

000835a0 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   835a0:	4a0b      	ldr	r2, [pc, #44]	; (835d0 <_sbrk+0x30>)
	int ramend = (int)&__ram_end__;
   835a2:	490c      	ldr	r1, [pc, #48]	; (835d4 <_sbrk+0x34>)
	if (heap == NULL) {
   835a4:	6813      	ldr	r3, [r2, #0]
   835a6:	b13b      	cbz	r3, 835b8 <_sbrk+0x18>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
   835a8:	4418      	add	r0, r3
   835aa:	4281      	cmp	r1, r0
		return (caddr_t) -1;	
	}

	heap += incr;
   835ac:	bfa6      	itte	ge
   835ae:	6010      	strge	r0, [r2, #0]

	return (caddr_t) prev_heap;
   835b0:	4618      	movge	r0, r3
		return (caddr_t) -1;	
   835b2:	f04f 30ff 	movlt.w	r0, #4294967295
   835b6:	4770      	bx	lr
{
   835b8:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
   835ba:	4c07      	ldr	r4, [pc, #28]	; (835d8 <_sbrk+0x38>)
	if (((int)prev_heap + incr) > ramend) {
   835bc:	4420      	add	r0, r4
   835be:	4281      	cmp	r1, r0
		heap = (unsigned char *)&_end;
   835c0:	6014      	str	r4, [r2, #0]
	heap += incr;
   835c2:	bfaa      	itet	ge
   835c4:	6010      	strge	r0, [r2, #0]
		return (caddr_t) -1;	
   835c6:	f04f 30ff 	movlt.w	r0, #4294967295
	return (caddr_t) prev_heap;
   835ca:	4620      	movge	r0, r4
}
   835cc:	bc10      	pop	{r4}
   835ce:	4770      	bx	lr
   835d0:	2000354c 	.word	0x2000354c
   835d4:	20083ffc 	.word	0x20083ffc
   835d8:	20084000 	.word	0x20084000

000835dc <_close>:
}

extern int _close(int file)
{
	return -1;
}
   835dc:	f04f 30ff 	mov.w	r0, #4294967295
   835e0:	4770      	bx	lr
   835e2:	bf00      	nop

000835e4 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   835e4:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
   835e8:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
   835ea:	604b      	str	r3, [r1, #4]
}
   835ec:	4770      	bx	lr
   835ee:	bf00      	nop

000835f0 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   835f0:	2001      	movs	r0, #1
   835f2:	4770      	bx	lr

000835f4 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   835f4:	2000      	movs	r0, #0
   835f6:	4770      	bx	lr

000835f8 <uart_init>:
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   835f8:	23ac      	movs	r3, #172	; 0xac
{
   835fa:	b430      	push	{r4, r5}
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   835fc:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   835fe:	e891 0018 	ldmia.w	r1, {r3, r4}
   83602:	fbb3 f3f4 	udiv	r3, r3, r4
{
   83606:	4602      	mov	r2, r0
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   83608:	f64f 70fe 	movw	r0, #65534	; 0xfffe
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8360c:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   8360e:	1e5c      	subs	r4, r3, #1
   83610:	4284      	cmp	r4, r0
   83612:	d80b      	bhi.n	8362c <uart_init+0x34>
	p_uart->UART_BRGR = cd;
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   83614:	f240 2502 	movw	r5, #514	; 0x202

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   83618:	2450      	movs	r4, #80	; 0x50
	p_uart->UART_BRGR = cd;
   8361a:	6213      	str	r3, [r2, #32]
	p_uart->UART_MR = p_uart_opt->ul_mode;
   8361c:	688b      	ldr	r3, [r1, #8]

	return 0;
   8361e:	2000      	movs	r0, #0
	p_uart->UART_MR = p_uart_opt->ul_mode;
   83620:	6053      	str	r3, [r2, #4]
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   83622:	f8c2 5120 	str.w	r5, [r2, #288]	; 0x120
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   83626:	6014      	str	r4, [r2, #0]
}
   83628:	bc30      	pop	{r4, r5}
   8362a:	4770      	bx	lr
		return 1;
   8362c:	2001      	movs	r0, #1
}
   8362e:	bc30      	pop	{r4, r5}
   83630:	4770      	bx	lr
   83632:	bf00      	nop

00083634 <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   83634:	6943      	ldr	r3, [r0, #20]
   83636:	079b      	lsls	r3, r3, #30
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
   83638:	bf46      	itte	mi
   8363a:	61c1      	strmi	r1, [r0, #28]
	return 0;
   8363c:	2000      	movmi	r0, #0
		return 1;
   8363e:	2001      	movpl	r0, #1
}
   83640:	4770      	bx	lr
   83642:	bf00      	nop

00083644 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   83644:	6943      	ldr	r3, [r0, #20]
   83646:	07db      	lsls	r3, r3, #31
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   83648:	bf43      	ittte	mi
   8364a:	6983      	ldrmi	r3, [r0, #24]
	return 0;
   8364c:	2000      	movmi	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
   8364e:	700b      	strbmi	r3, [r1, #0]
		return 1;
   83650:	2001      	movpl	r0, #1
}
   83652:	4770      	bx	lr

00083654 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   83654:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   83658:	4b13      	ldr	r3, [pc, #76]	; (836a8 <board_init+0x54>)
{
   8365a:	b510      	push	{r4, lr}
   8365c:	200a      	movs	r0, #10
	WDT->WDT_MR = WDT_MR_WDDIS;
   8365e:	605a      	str	r2, [r3, #4]
   83660:	4c12      	ldr	r4, [pc, #72]	; (836ac <board_init+0x58>)
   83662:	47a0      	blx	r4
   83664:	200b      	movs	r0, #11
   83666:	47a0      	blx	r4
   83668:	200c      	movs	r0, #12
   8366a:	47a0      	blx	r4
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8366c:	4c10      	ldr	r4, [pc, #64]	; (836b0 <board_init+0x5c>)
   8366e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83672:	2011      	movs	r0, #17
   83674:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   83676:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8367a:	2010      	movs	r0, #16
   8367c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8367e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   83682:	204c      	movs	r0, #76	; 0x4c
   83684:	47a0      	blx	r4
	gpio_configure_pin(PIN_PWRON_GPIO, PIN_PWRON_FLAGS);
   83686:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   8368a:	2053      	movs	r0, #83	; 0x53
   8368c:	47a0      	blx	r4
	board_sram_pwron();
   8368e:	2053      	movs	r0, #83	; 0x53
   83690:	4b08      	ldr	r3, [pc, #32]	; (836b4 <board_init+0x60>)
   83692:	4798      	blx	r3
	 */
	ioport_init();

	iopins_normal();

}
   83694:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   83698:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   8369c:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
   836a0:	4805      	ldr	r0, [pc, #20]	; (836b8 <board_init+0x64>)
   836a2:	4b06      	ldr	r3, [pc, #24]	; (836bc <board_init+0x68>)
   836a4:	4718      	bx	r3
   836a6:	bf00      	nop
   836a8:	400e1250 	.word	0x400e1250
   836ac:	000826f5 	.word	0x000826f5
   836b0:	0008287d 	.word	0x0008287d
   836b4:	00082861 	.word	0x00082861
   836b8:	400e0c00 	.word	0x400e0c00
   836bc:	00082975 	.word	0x00082975

000836c0 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   836c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   836c4:	b990      	cbnz	r0, 836ec <_read+0x2c>
		return -1;
	}

	for (; len > 0; --len) {
   836c6:	2a00      	cmp	r2, #0
   836c8:	4690      	mov	r8, r2
   836ca:	dd0d      	ble.n	836e8 <_read+0x28>
   836cc:	460c      	mov	r4, r1
   836ce:	4f09      	ldr	r7, [pc, #36]	; (836f4 <_read+0x34>)
   836d0:	4e09      	ldr	r6, [pc, #36]	; (836f8 <_read+0x38>)
   836d2:	188d      	adds	r5, r1, r2
		ptr_get(stdio_base, ptr);
   836d4:	4621      	mov	r1, r4
   836d6:	6838      	ldr	r0, [r7, #0]
   836d8:	6833      	ldr	r3, [r6, #0]
		ptr++;
   836da:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
   836dc:	4798      	blx	r3
	for (; len > 0; --len) {
   836de:	42ac      	cmp	r4, r5
   836e0:	d1f8      	bne.n	836d4 <_read+0x14>
		nChars++;
	}
	return nChars;
}
   836e2:	4640      	mov	r0, r8
   836e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	for (; len > 0; --len) {
   836e8:	4680      	mov	r8, r0
   836ea:	e7fa      	b.n	836e2 <_read+0x22>
		return -1;
   836ec:	f04f 38ff 	mov.w	r8, #4294967295
   836f0:	e7f7      	b.n	836e2 <_read+0x22>
   836f2:	bf00      	nop
   836f4:	200035a8 	.word	0x200035a8
   836f8:	200035ac 	.word	0x200035ac

000836fc <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   836fc:	4a3b      	ldr	r2, [pc, #236]	; (837ec <SystemCoreClockUpdate+0xf0>)
   836fe:	6b13      	ldr	r3, [r2, #48]	; 0x30
   83700:	f003 0303 	and.w	r3, r3, #3
   83704:	2b01      	cmp	r3, #1
   83706:	d02f      	beq.n	83768 <SystemCoreClockUpdate+0x6c>
   83708:	d318      	bcc.n	8373c <SystemCoreClockUpdate+0x40>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8370a:	6a13      	ldr	r3, [r2, #32]
   8370c:	01d9      	lsls	r1, r3, #7
   8370e:	d53b      	bpl.n	83788 <SystemCoreClockUpdate+0x8c>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   83710:	4937      	ldr	r1, [pc, #220]	; (837f0 <SystemCoreClockUpdate+0xf4>)
   83712:	4b38      	ldr	r3, [pc, #224]	; (837f4 <SystemCoreClockUpdate+0xf8>)
   83714:	600b      	str	r3, [r1, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   83716:	4835      	ldr	r0, [pc, #212]	; (837ec <SystemCoreClockUpdate+0xf0>)
   83718:	6b02      	ldr	r2, [r0, #48]	; 0x30
   8371a:	f002 0203 	and.w	r2, r2, #3
   8371e:	2a02      	cmp	r2, #2
   83720:	d042      	beq.n	837a8 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   83722:	4832      	ldr	r0, [pc, #200]	; (837ec <SystemCoreClockUpdate+0xf0>)
   83724:	4b34      	ldr	r3, [pc, #208]	; (837f8 <SystemCoreClockUpdate+0xfc>)
   83726:	6b02      	ldr	r2, [r0, #48]	; 0x30
   83728:	f002 0270 	and.w	r2, r2, #112	; 0x70
   8372c:	2a70      	cmp	r2, #112	; 0x70
   8372e:	d115      	bne.n	8375c <SystemCoreClockUpdate+0x60>
		SystemCoreClock /= 3U;
   83730:	4a32      	ldr	r2, [pc, #200]	; (837fc <SystemCoreClockUpdate+0x100>)
   83732:	fba2 2303 	umull	r2, r3, r2, r3
   83736:	085b      	lsrs	r3, r3, #1
   83738:	600b      	str	r3, [r1, #0]
   8373a:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   8373c:	4b30      	ldr	r3, [pc, #192]	; (83800 <SystemCoreClockUpdate+0x104>)
   8373e:	492c      	ldr	r1, [pc, #176]	; (837f0 <SystemCoreClockUpdate+0xf4>)
   83740:	695b      	ldr	r3, [r3, #20]
   83742:	f013 0f80 	tst.w	r3, #128	; 0x80
   83746:	bf14      	ite	ne
   83748:	f44f 4300 	movne.w	r3, #32768	; 0x8000
   8374c:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   83750:	4826      	ldr	r0, [pc, #152]	; (837ec <SystemCoreClockUpdate+0xf0>)
   83752:	6b02      	ldr	r2, [r0, #48]	; 0x30
   83754:	f002 0270 	and.w	r2, r2, #112	; 0x70
   83758:	2a70      	cmp	r2, #112	; 0x70
   8375a:	d0e9      	beq.n	83730 <SystemCoreClockUpdate+0x34>
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   8375c:	6b02      	ldr	r2, [r0, #48]	; 0x30
   8375e:	f3c2 1202 	ubfx	r2, r2, #4, #3
   83762:	40d3      	lsrs	r3, r2
   83764:	600b      	str	r3, [r1, #0]
   83766:	4770      	bx	lr
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   83768:	6a13      	ldr	r3, [r2, #32]
   8376a:	01db      	lsls	r3, r3, #7
   8376c:	d419      	bmi.n	837a2 <SystemCoreClockUpdate+0xa6>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   8376e:	4920      	ldr	r1, [pc, #128]	; (837f0 <SystemCoreClockUpdate+0xf4>)
   83770:	4824      	ldr	r0, [pc, #144]	; (83804 <SystemCoreClockUpdate+0x108>)
   83772:	6008      	str	r0, [r1, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   83774:	6a12      	ldr	r2, [r2, #32]
   83776:	f002 0270 	and.w	r2, r2, #112	; 0x70
   8377a:	2a10      	cmp	r2, #16
   8377c:	d033      	beq.n	837e6 <SystemCoreClockUpdate+0xea>
   8377e:	4b1d      	ldr	r3, [pc, #116]	; (837f4 <SystemCoreClockUpdate+0xf8>)
   83780:	2a20      	cmp	r2, #32
   83782:	bf18      	it	ne
   83784:	4603      	movne	r3, r0
   83786:	e7e3      	b.n	83750 <SystemCoreClockUpdate+0x54>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   83788:	4919      	ldr	r1, [pc, #100]	; (837f0 <SystemCoreClockUpdate+0xf4>)
   8378a:	4b1e      	ldr	r3, [pc, #120]	; (83804 <SystemCoreClockUpdate+0x108>)
   8378c:	600b      	str	r3, [r1, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8378e:	6a12      	ldr	r2, [r2, #32]
   83790:	f002 0270 	and.w	r2, r2, #112	; 0x70
   83794:	2a10      	cmp	r2, #16
   83796:	d023      	beq.n	837e0 <SystemCoreClockUpdate+0xe4>
   83798:	2a20      	cmp	r2, #32
   8379a:	d1bc      	bne.n	83716 <SystemCoreClockUpdate+0x1a>
				SystemCoreClock *= 3U;
   8379c:	4b15      	ldr	r3, [pc, #84]	; (837f4 <SystemCoreClockUpdate+0xf8>)
   8379e:	600b      	str	r3, [r1, #0]
				break;
   837a0:	e7b9      	b.n	83716 <SystemCoreClockUpdate+0x1a>
   837a2:	4b14      	ldr	r3, [pc, #80]	; (837f4 <SystemCoreClockUpdate+0xf8>)
   837a4:	4912      	ldr	r1, [pc, #72]	; (837f0 <SystemCoreClockUpdate+0xf4>)
   837a6:	e7d3      	b.n	83750 <SystemCoreClockUpdate+0x54>
{
   837a8:	b410      	push	{r4}
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   837aa:	6a84      	ldr	r4, [r0, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   837ac:	6a82      	ldr	r2, [r0, #40]	; 0x28
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   837ae:	f3c4 400a 	ubfx	r0, r4, #16, #11
   837b2:	fb00 3303 	mla	r3, r0, r3, r3
	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   837b6:	480d      	ldr	r0, [pc, #52]	; (837ec <SystemCoreClockUpdate+0xf0>)
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   837b8:	b2d2      	uxtb	r2, r2
   837ba:	fbb3 f3f2 	udiv	r3, r3, r2
	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   837be:	6b02      	ldr	r2, [r0, #48]	; 0x30
   837c0:	f002 0270 	and.w	r2, r2, #112	; 0x70
   837c4:	2a70      	cmp	r2, #112	; 0x70
   837c6:	d006      	beq.n	837d6 <SystemCoreClockUpdate+0xda>
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   837c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
   837ca:	f3c2 1202 	ubfx	r2, r2, #4, #3
   837ce:	40d3      	lsrs	r3, r2
   837d0:	600b      	str	r3, [r1, #0]
			                           PMC_MCKR_PRES_Pos);
	}
}
   837d2:	bc10      	pop	{r4}
   837d4:	4770      	bx	lr
		SystemCoreClock /= 3U;
   837d6:	4a09      	ldr	r2, [pc, #36]	; (837fc <SystemCoreClockUpdate+0x100>)
   837d8:	fba2 2303 	umull	r2, r3, r2, r3
   837dc:	085b      	lsrs	r3, r3, #1
   837de:	e7f7      	b.n	837d0 <SystemCoreClockUpdate+0xd4>
				SystemCoreClock *= 2U;
   837e0:	4b09      	ldr	r3, [pc, #36]	; (83808 <SystemCoreClockUpdate+0x10c>)
   837e2:	600b      	str	r3, [r1, #0]
				break;
   837e4:	e797      	b.n	83716 <SystemCoreClockUpdate+0x1a>
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   837e6:	4b08      	ldr	r3, [pc, #32]	; (83808 <SystemCoreClockUpdate+0x10c>)
   837e8:	e7b2      	b.n	83750 <SystemCoreClockUpdate+0x54>
   837ea:	bf00      	nop
   837ec:	400e0400 	.word	0x400e0400
   837f0:	200002d4 	.word	0x200002d4
   837f4:	00b71b00 	.word	0x00b71b00
   837f8:	0e4e1c00 	.word	0x0e4e1c00
   837fc:	aaaaaaab 	.word	0xaaaaaaab
   83800:	400e1210 	.word	0x400e1210
   83804:	003d0900 	.word	0x003d0900
   83808:	007a1200 	.word	0x007a1200

0008380c <ui_init>:
#include <asf.h>
#include "ui.h"
#include "tasks.h"

void ui_init(void)
{
   8380c:	b510      	push	{r4, lr}
	// Initialize LEDs
	LED_Off(LED0_GPIO);
   8380e:	2011      	movs	r0, #17
   83810:	4c04      	ldr	r4, [pc, #16]	; (83824 <ui_init+0x18>)
   83812:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   83814:	2010      	movs	r0, #16
   83816:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   83818:	4623      	mov	r3, r4
}
   8381a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	LED_Off(LED2_GPIO);
   8381e:	204c      	movs	r0, #76	; 0x4c
   83820:	4718      	bx	r3
   83822:	bf00      	nop
   83824:	00082419 	.word	0x00082419

00083828 <ui_powerdown>:

void ui_powerdown(void)
{
   83828:	b510      	push	{r4, lr}
	LED_Off(LED0_GPIO);
   8382a:	2011      	movs	r0, #17
   8382c:	4c05      	ldr	r4, [pc, #20]	; (83844 <ui_powerdown+0x1c>)
   8382e:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   83830:	2010      	movs	r0, #16
   83832:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   83834:	204c      	movs	r0, #76	; 0x4c
   83836:	47a0      	blx	r4
	
	// Power off FPGA
	board_sram_pwroff();
		
}
   83838:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwroff();
   8383c:	2053      	movs	r0, #83	; 0x53
   8383e:	4b02      	ldr	r3, [pc, #8]	; (83848 <ui_powerdown+0x20>)
   83840:	4718      	bx	r3
   83842:	bf00      	nop
   83844:	00082419 	.word	0x00082419
   83848:	00082845 	.word	0x00082845

0008384c <ui_wakeup>:

void ui_wakeup(void)
{
   8384c:	b510      	push	{r4, lr}
	LED_On(LED0_GPIO);
   8384e:	2011      	movs	r0, #17
   83850:	4b03      	ldr	r3, [pc, #12]	; (83860 <ui_wakeup+0x14>)
   83852:	4798      	blx	r3
	board_sram_pwron();
}
   83854:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwron();
   83858:	2053      	movs	r0, #83	; 0x53
   8385a:	4b02      	ldr	r3, [pc, #8]	; (83864 <ui_wakeup+0x18>)
   8385c:	4718      	bx	r3
   8385e:	bf00      	nop
   83860:	00082439 	.word	0x00082439
   83864:	00082861 	.word	0x00082861

00083868 <ui_process>:

void ui_process(uint16_t framenumber)
{
	if ((framenumber % 1000) == 0) {
   83868:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
   8386c:	4b10      	ldr	r3, [pc, #64]	; (838b0 <ui_process+0x48>)
{
   8386e:	b510      	push	{r4, lr}
	if ((framenumber % 1000) == 0) {
   83870:	fba3 1300 	umull	r1, r3, r3, r0
   83874:	099b      	lsrs	r3, r3, #6
   83876:	fb02 0313 	mls	r3, r2, r3, r0
   8387a:	b29b      	uxth	r3, r3
{
   8387c:	4604      	mov	r4, r0
	if ((framenumber % 1000) == 0) {
   8387e:	b17b      	cbz	r3, 838a0 <ui_process+0x38>
		LED_On(LED0_GPIO);
	}
	if ((framenumber % 1000) == 500) {
   83880:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   83884:	d010      	beq.n	838a8 <ui_process+0x40>
		LED_Off(LED0_GPIO);
	}
	
	if ((framenumber % 512) == 0) {
   83886:	f3c4 0408 	ubfx	r4, r4, #0, #9
   8388a:	b924      	cbnz	r4, 83896 <ui_process+0x2e>
		LED_Off(LED1_GPIO);
   8388c:	2010      	movs	r0, #16
   8388e:	4c09      	ldr	r4, [pc, #36]	; (838b4 <ui_process+0x4c>)
   83890:	47a0      	blx	r4
		LED_Off(LED2_GPIO);
   83892:	204c      	movs	r0, #76	; 0x4c
   83894:	47a0      	blx	r4
	}
	
	task_tickCnt++;
   83896:	4a08      	ldr	r2, [pc, #32]	; (838b8 <ui_process+0x50>)
   83898:	6813      	ldr	r3, [r2, #0]
   8389a:	3301      	adds	r3, #1
   8389c:	6013      	str	r3, [r2, #0]
   8389e:	bd10      	pop	{r4, pc}
		LED_On(LED0_GPIO);
   838a0:	2011      	movs	r0, #17
   838a2:	4b06      	ldr	r3, [pc, #24]	; (838bc <ui_process+0x54>)
   838a4:	4798      	blx	r3
   838a6:	e7ee      	b.n	83886 <ui_process+0x1e>
		LED_Off(LED0_GPIO);
   838a8:	2011      	movs	r0, #17
   838aa:	4b02      	ldr	r3, [pc, #8]	; (838b4 <ui_process+0x4c>)
   838ac:	4798      	blx	r3
   838ae:	e7ea      	b.n	83886 <ui_process+0x1e>
   838b0:	10624dd3 	.word	0x10624dd3
   838b4:	00082419 	.word	0x00082419
   838b8:	20003588 	.word	0x20003588
   838bc:	00082439 	.word	0x00082439

000838c0 <__libc_init_array>:
   838c0:	b570      	push	{r4, r5, r6, lr}
   838c2:	4e0f      	ldr	r6, [pc, #60]	; (83900 <__libc_init_array+0x40>)
   838c4:	4d0f      	ldr	r5, [pc, #60]	; (83904 <__libc_init_array+0x44>)
   838c6:	1b76      	subs	r6, r6, r5
   838c8:	10b6      	asrs	r6, r6, #2
   838ca:	bf18      	it	ne
   838cc:	2400      	movne	r4, #0
   838ce:	d005      	beq.n	838dc <__libc_init_array+0x1c>
   838d0:	3401      	adds	r4, #1
   838d2:	f855 3b04 	ldr.w	r3, [r5], #4
   838d6:	4798      	blx	r3
   838d8:	42a6      	cmp	r6, r4
   838da:	d1f9      	bne.n	838d0 <__libc_init_array+0x10>
   838dc:	4e0a      	ldr	r6, [pc, #40]	; (83908 <__libc_init_array+0x48>)
   838de:	4d0b      	ldr	r5, [pc, #44]	; (8390c <__libc_init_array+0x4c>)
   838e0:	f006 fb9e 	bl	8a020 <_init>
   838e4:	1b76      	subs	r6, r6, r5
   838e6:	10b6      	asrs	r6, r6, #2
   838e8:	bf18      	it	ne
   838ea:	2400      	movne	r4, #0
   838ec:	d006      	beq.n	838fc <__libc_init_array+0x3c>
   838ee:	3401      	adds	r4, #1
   838f0:	f855 3b04 	ldr.w	r3, [r5], #4
   838f4:	4798      	blx	r3
   838f6:	42a6      	cmp	r6, r4
   838f8:	d1f9      	bne.n	838ee <__libc_init_array+0x2e>
   838fa:	bd70      	pop	{r4, r5, r6, pc}
   838fc:	bd70      	pop	{r4, r5, r6, pc}
   838fe:	bf00      	nop
   83900:	0008a02c 	.word	0x0008a02c
   83904:	0008a02c 	.word	0x0008a02c
   83908:	0008a034 	.word	0x0008a034
   8390c:	0008a02c 	.word	0x0008a02c

00083910 <iprintf>:
   83910:	b40f      	push	{r0, r1, r2, r3}
   83912:	b510      	push	{r4, lr}
   83914:	4b07      	ldr	r3, [pc, #28]	; (83934 <iprintf+0x24>)
   83916:	b082      	sub	sp, #8
   83918:	ac04      	add	r4, sp, #16
   8391a:	f854 2b04 	ldr.w	r2, [r4], #4
   8391e:	6818      	ldr	r0, [r3, #0]
   83920:	4623      	mov	r3, r4
   83922:	6881      	ldr	r1, [r0, #8]
   83924:	9401      	str	r4, [sp, #4]
   83926:	f001 fc81 	bl	8522c <_vfiprintf_r>
   8392a:	b002      	add	sp, #8
   8392c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   83930:	b004      	add	sp, #16
   83932:	4770      	bx	lr
   83934:	200002d8 	.word	0x200002d8

00083938 <memcpy>:
   83938:	4684      	mov	ip, r0
   8393a:	ea41 0300 	orr.w	r3, r1, r0
   8393e:	f013 0303 	ands.w	r3, r3, #3
   83942:	d149      	bne.n	839d8 <memcpy+0xa0>
   83944:	3a40      	subs	r2, #64	; 0x40
   83946:	d323      	bcc.n	83990 <memcpy+0x58>
   83948:	680b      	ldr	r3, [r1, #0]
   8394a:	6003      	str	r3, [r0, #0]
   8394c:	684b      	ldr	r3, [r1, #4]
   8394e:	6043      	str	r3, [r0, #4]
   83950:	688b      	ldr	r3, [r1, #8]
   83952:	6083      	str	r3, [r0, #8]
   83954:	68cb      	ldr	r3, [r1, #12]
   83956:	60c3      	str	r3, [r0, #12]
   83958:	690b      	ldr	r3, [r1, #16]
   8395a:	6103      	str	r3, [r0, #16]
   8395c:	694b      	ldr	r3, [r1, #20]
   8395e:	6143      	str	r3, [r0, #20]
   83960:	698b      	ldr	r3, [r1, #24]
   83962:	6183      	str	r3, [r0, #24]
   83964:	69cb      	ldr	r3, [r1, #28]
   83966:	61c3      	str	r3, [r0, #28]
   83968:	6a0b      	ldr	r3, [r1, #32]
   8396a:	6203      	str	r3, [r0, #32]
   8396c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   8396e:	6243      	str	r3, [r0, #36]	; 0x24
   83970:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83972:	6283      	str	r3, [r0, #40]	; 0x28
   83974:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83976:	62c3      	str	r3, [r0, #44]	; 0x2c
   83978:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8397a:	6303      	str	r3, [r0, #48]	; 0x30
   8397c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   8397e:	6343      	str	r3, [r0, #52]	; 0x34
   83980:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83982:	6383      	str	r3, [r0, #56]	; 0x38
   83984:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83986:	63c3      	str	r3, [r0, #60]	; 0x3c
   83988:	3040      	adds	r0, #64	; 0x40
   8398a:	3140      	adds	r1, #64	; 0x40
   8398c:	3a40      	subs	r2, #64	; 0x40
   8398e:	d2db      	bcs.n	83948 <memcpy+0x10>
   83990:	3230      	adds	r2, #48	; 0x30
   83992:	d30b      	bcc.n	839ac <memcpy+0x74>
   83994:	680b      	ldr	r3, [r1, #0]
   83996:	6003      	str	r3, [r0, #0]
   83998:	684b      	ldr	r3, [r1, #4]
   8399a:	6043      	str	r3, [r0, #4]
   8399c:	688b      	ldr	r3, [r1, #8]
   8399e:	6083      	str	r3, [r0, #8]
   839a0:	68cb      	ldr	r3, [r1, #12]
   839a2:	60c3      	str	r3, [r0, #12]
   839a4:	3010      	adds	r0, #16
   839a6:	3110      	adds	r1, #16
   839a8:	3a10      	subs	r2, #16
   839aa:	d2f3      	bcs.n	83994 <memcpy+0x5c>
   839ac:	320c      	adds	r2, #12
   839ae:	d305      	bcc.n	839bc <memcpy+0x84>
   839b0:	f851 3b04 	ldr.w	r3, [r1], #4
   839b4:	f840 3b04 	str.w	r3, [r0], #4
   839b8:	3a04      	subs	r2, #4
   839ba:	d2f9      	bcs.n	839b0 <memcpy+0x78>
   839bc:	3204      	adds	r2, #4
   839be:	d008      	beq.n	839d2 <memcpy+0x9a>
   839c0:	07d2      	lsls	r2, r2, #31
   839c2:	bf1c      	itt	ne
   839c4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   839c8:	f800 3b01 	strbne.w	r3, [r0], #1
   839cc:	d301      	bcc.n	839d2 <memcpy+0x9a>
   839ce:	880b      	ldrh	r3, [r1, #0]
   839d0:	8003      	strh	r3, [r0, #0]
   839d2:	4660      	mov	r0, ip
   839d4:	4770      	bx	lr
   839d6:	bf00      	nop
   839d8:	2a08      	cmp	r2, #8
   839da:	d313      	bcc.n	83a04 <memcpy+0xcc>
   839dc:	078b      	lsls	r3, r1, #30
   839de:	d0b1      	beq.n	83944 <memcpy+0xc>
   839e0:	f010 0303 	ands.w	r3, r0, #3
   839e4:	d0ae      	beq.n	83944 <memcpy+0xc>
   839e6:	f1c3 0304 	rsb	r3, r3, #4
   839ea:	1ad2      	subs	r2, r2, r3
   839ec:	07db      	lsls	r3, r3, #31
   839ee:	bf1c      	itt	ne
   839f0:	f811 3b01 	ldrbne.w	r3, [r1], #1
   839f4:	f800 3b01 	strbne.w	r3, [r0], #1
   839f8:	d3a4      	bcc.n	83944 <memcpy+0xc>
   839fa:	f831 3b02 	ldrh.w	r3, [r1], #2
   839fe:	f820 3b02 	strh.w	r3, [r0], #2
   83a02:	e79f      	b.n	83944 <memcpy+0xc>
   83a04:	3a04      	subs	r2, #4
   83a06:	d3d9      	bcc.n	839bc <memcpy+0x84>
   83a08:	3a01      	subs	r2, #1
   83a0a:	f811 3b01 	ldrb.w	r3, [r1], #1
   83a0e:	f800 3b01 	strb.w	r3, [r0], #1
   83a12:	d2f9      	bcs.n	83a08 <memcpy+0xd0>
   83a14:	780b      	ldrb	r3, [r1, #0]
   83a16:	7003      	strb	r3, [r0, #0]
   83a18:	784b      	ldrb	r3, [r1, #1]
   83a1a:	7043      	strb	r3, [r0, #1]
   83a1c:	788b      	ldrb	r3, [r1, #2]
   83a1e:	7083      	strb	r3, [r0, #2]
   83a20:	4660      	mov	r0, ip
   83a22:	4770      	bx	lr

00083a24 <memset>:
   83a24:	b470      	push	{r4, r5, r6}
   83a26:	0786      	lsls	r6, r0, #30
   83a28:	d046      	beq.n	83ab8 <memset+0x94>
   83a2a:	1e54      	subs	r4, r2, #1
   83a2c:	2a00      	cmp	r2, #0
   83a2e:	d041      	beq.n	83ab4 <memset+0x90>
   83a30:	b2ca      	uxtb	r2, r1
   83a32:	4603      	mov	r3, r0
   83a34:	e002      	b.n	83a3c <memset+0x18>
   83a36:	f114 34ff 	adds.w	r4, r4, #4294967295
   83a3a:	d33b      	bcc.n	83ab4 <memset+0x90>
   83a3c:	f803 2b01 	strb.w	r2, [r3], #1
   83a40:	079d      	lsls	r5, r3, #30
   83a42:	d1f8      	bne.n	83a36 <memset+0x12>
   83a44:	2c03      	cmp	r4, #3
   83a46:	d92e      	bls.n	83aa6 <memset+0x82>
   83a48:	b2cd      	uxtb	r5, r1
   83a4a:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   83a4e:	2c0f      	cmp	r4, #15
   83a50:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   83a54:	d919      	bls.n	83a8a <memset+0x66>
   83a56:	4626      	mov	r6, r4
   83a58:	f103 0210 	add.w	r2, r3, #16
   83a5c:	3e10      	subs	r6, #16
   83a5e:	2e0f      	cmp	r6, #15
   83a60:	f842 5c10 	str.w	r5, [r2, #-16]
   83a64:	f842 5c0c 	str.w	r5, [r2, #-12]
   83a68:	f842 5c08 	str.w	r5, [r2, #-8]
   83a6c:	f842 5c04 	str.w	r5, [r2, #-4]
   83a70:	f102 0210 	add.w	r2, r2, #16
   83a74:	d8f2      	bhi.n	83a5c <memset+0x38>
   83a76:	f1a4 0210 	sub.w	r2, r4, #16
   83a7a:	f022 020f 	bic.w	r2, r2, #15
   83a7e:	f004 040f 	and.w	r4, r4, #15
   83a82:	3210      	adds	r2, #16
   83a84:	2c03      	cmp	r4, #3
   83a86:	4413      	add	r3, r2
   83a88:	d90d      	bls.n	83aa6 <memset+0x82>
   83a8a:	461e      	mov	r6, r3
   83a8c:	4622      	mov	r2, r4
   83a8e:	3a04      	subs	r2, #4
   83a90:	2a03      	cmp	r2, #3
   83a92:	f846 5b04 	str.w	r5, [r6], #4
   83a96:	d8fa      	bhi.n	83a8e <memset+0x6a>
   83a98:	1f22      	subs	r2, r4, #4
   83a9a:	f022 0203 	bic.w	r2, r2, #3
   83a9e:	3204      	adds	r2, #4
   83aa0:	4413      	add	r3, r2
   83aa2:	f004 0403 	and.w	r4, r4, #3
   83aa6:	b12c      	cbz	r4, 83ab4 <memset+0x90>
   83aa8:	b2c9      	uxtb	r1, r1
   83aaa:	441c      	add	r4, r3
   83aac:	f803 1b01 	strb.w	r1, [r3], #1
   83ab0:	429c      	cmp	r4, r3
   83ab2:	d1fb      	bne.n	83aac <memset+0x88>
   83ab4:	bc70      	pop	{r4, r5, r6}
   83ab6:	4770      	bx	lr
   83ab8:	4614      	mov	r4, r2
   83aba:	4603      	mov	r3, r0
   83abc:	e7c2      	b.n	83a44 <memset+0x20>
   83abe:	bf00      	nop

00083ac0 <setbuf>:
   83ac0:	2900      	cmp	r1, #0
   83ac2:	bf0c      	ite	eq
   83ac4:	2202      	moveq	r2, #2
   83ac6:	2200      	movne	r2, #0
   83ac8:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83acc:	f000 b800 	b.w	83ad0 <setvbuf>

00083ad0 <setvbuf>:
   83ad0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83ad4:	4d61      	ldr	r5, [pc, #388]	; (83c5c <setvbuf+0x18c>)
   83ad6:	b083      	sub	sp, #12
   83ad8:	682d      	ldr	r5, [r5, #0]
   83ada:	4604      	mov	r4, r0
   83adc:	460f      	mov	r7, r1
   83ade:	4690      	mov	r8, r2
   83ae0:	461e      	mov	r6, r3
   83ae2:	b115      	cbz	r5, 83aea <setvbuf+0x1a>
   83ae4:	6bab      	ldr	r3, [r5, #56]	; 0x38
   83ae6:	2b00      	cmp	r3, #0
   83ae8:	d064      	beq.n	83bb4 <setvbuf+0xe4>
   83aea:	f1b8 0f02 	cmp.w	r8, #2
   83aee:	d006      	beq.n	83afe <setvbuf+0x2e>
   83af0:	f1b8 0f01 	cmp.w	r8, #1
   83af4:	f200 809f 	bhi.w	83c36 <setvbuf+0x166>
   83af8:	2e00      	cmp	r6, #0
   83afa:	f2c0 809c 	blt.w	83c36 <setvbuf+0x166>
   83afe:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83b00:	07d8      	lsls	r0, r3, #31
   83b02:	d534      	bpl.n	83b6e <setvbuf+0x9e>
   83b04:	4621      	mov	r1, r4
   83b06:	4628      	mov	r0, r5
   83b08:	f003 fae0 	bl	870cc <_fflush_r>
   83b0c:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83b0e:	b141      	cbz	r1, 83b22 <setvbuf+0x52>
   83b10:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83b14:	4299      	cmp	r1, r3
   83b16:	d002      	beq.n	83b1e <setvbuf+0x4e>
   83b18:	4628      	mov	r0, r5
   83b1a:	f003 fc55 	bl	873c8 <_free_r>
   83b1e:	2300      	movs	r3, #0
   83b20:	6323      	str	r3, [r4, #48]	; 0x30
   83b22:	2200      	movs	r2, #0
   83b24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83b28:	61a2      	str	r2, [r4, #24]
   83b2a:	6062      	str	r2, [r4, #4]
   83b2c:	061a      	lsls	r2, r3, #24
   83b2e:	d43a      	bmi.n	83ba6 <setvbuf+0xd6>
   83b30:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
   83b34:	f023 0303 	bic.w	r3, r3, #3
   83b38:	f1b8 0f02 	cmp.w	r8, #2
   83b3c:	81a3      	strh	r3, [r4, #12]
   83b3e:	d01d      	beq.n	83b7c <setvbuf+0xac>
   83b40:	ab01      	add	r3, sp, #4
   83b42:	466a      	mov	r2, sp
   83b44:	4621      	mov	r1, r4
   83b46:	4628      	mov	r0, r5
   83b48:	f003 feea 	bl	87920 <__swhatbuf_r>
   83b4c:	89a3      	ldrh	r3, [r4, #12]
   83b4e:	4318      	orrs	r0, r3
   83b50:	81a0      	strh	r0, [r4, #12]
   83b52:	2e00      	cmp	r6, #0
   83b54:	d132      	bne.n	83bbc <setvbuf+0xec>
   83b56:	9e00      	ldr	r6, [sp, #0]
   83b58:	4630      	mov	r0, r6
   83b5a:	f003 ff59 	bl	87a10 <malloc>
   83b5e:	4607      	mov	r7, r0
   83b60:	2800      	cmp	r0, #0
   83b62:	d06b      	beq.n	83c3c <setvbuf+0x16c>
   83b64:	89a3      	ldrh	r3, [r4, #12]
   83b66:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   83b6a:	81a3      	strh	r3, [r4, #12]
   83b6c:	e028      	b.n	83bc0 <setvbuf+0xf0>
   83b6e:	89a3      	ldrh	r3, [r4, #12]
   83b70:	0599      	lsls	r1, r3, #22
   83b72:	d4c7      	bmi.n	83b04 <setvbuf+0x34>
   83b74:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83b76:	f003 fecf 	bl	87918 <__retarget_lock_acquire_recursive>
   83b7a:	e7c3      	b.n	83b04 <setvbuf+0x34>
   83b7c:	2500      	movs	r5, #0
   83b7e:	2600      	movs	r6, #0
   83b80:	2001      	movs	r0, #1
   83b82:	6e61      	ldr	r1, [r4, #100]	; 0x64
   83b84:	f104 0243 	add.w	r2, r4, #67	; 0x43
   83b88:	f043 0302 	orr.w	r3, r3, #2
   83b8c:	60a6      	str	r6, [r4, #8]
   83b8e:	07ce      	lsls	r6, r1, #31
   83b90:	81a3      	strh	r3, [r4, #12]
   83b92:	6160      	str	r0, [r4, #20]
   83b94:	6022      	str	r2, [r4, #0]
   83b96:	6122      	str	r2, [r4, #16]
   83b98:	d401      	bmi.n	83b9e <setvbuf+0xce>
   83b9a:	0598      	lsls	r0, r3, #22
   83b9c:	d53e      	bpl.n	83c1c <setvbuf+0x14c>
   83b9e:	4628      	mov	r0, r5
   83ba0:	b003      	add	sp, #12
   83ba2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83ba6:	6921      	ldr	r1, [r4, #16]
   83ba8:	4628      	mov	r0, r5
   83baa:	f003 fc0d 	bl	873c8 <_free_r>
   83bae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83bb2:	e7bd      	b.n	83b30 <setvbuf+0x60>
   83bb4:	4628      	mov	r0, r5
   83bb6:	f003 fae1 	bl	8717c <__sinit>
   83bba:	e796      	b.n	83aea <setvbuf+0x1a>
   83bbc:	2f00      	cmp	r7, #0
   83bbe:	d0cb      	beq.n	83b58 <setvbuf+0x88>
   83bc0:	6bab      	ldr	r3, [r5, #56]	; 0x38
   83bc2:	2b00      	cmp	r3, #0
   83bc4:	d033      	beq.n	83c2e <setvbuf+0x15e>
   83bc6:	9b00      	ldr	r3, [sp, #0]
   83bc8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   83bcc:	429e      	cmp	r6, r3
   83bce:	bf1c      	itt	ne
   83bd0:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
   83bd4:	81a2      	strhne	r2, [r4, #12]
   83bd6:	f1b8 0f01 	cmp.w	r8, #1
   83bda:	bf04      	itt	eq
   83bdc:	f042 0201 	orreq.w	r2, r2, #1
   83be0:	81a2      	strheq	r2, [r4, #12]
   83be2:	b292      	uxth	r2, r2
   83be4:	f012 0308 	ands.w	r3, r2, #8
   83be8:	6027      	str	r7, [r4, #0]
   83bea:	6127      	str	r7, [r4, #16]
   83bec:	6166      	str	r6, [r4, #20]
   83bee:	d00e      	beq.n	83c0e <setvbuf+0x13e>
   83bf0:	07d1      	lsls	r1, r2, #31
   83bf2:	d51a      	bpl.n	83c2a <setvbuf+0x15a>
   83bf4:	2300      	movs	r3, #0
   83bf6:	6e65      	ldr	r5, [r4, #100]	; 0x64
   83bf8:	4276      	negs	r6, r6
   83bfa:	f015 0501 	ands.w	r5, r5, #1
   83bfe:	61a6      	str	r6, [r4, #24]
   83c00:	60a3      	str	r3, [r4, #8]
   83c02:	d009      	beq.n	83c18 <setvbuf+0x148>
   83c04:	2500      	movs	r5, #0
   83c06:	4628      	mov	r0, r5
   83c08:	b003      	add	sp, #12
   83c0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83c0e:	60a3      	str	r3, [r4, #8]
   83c10:	6e65      	ldr	r5, [r4, #100]	; 0x64
   83c12:	f015 0501 	ands.w	r5, r5, #1
   83c16:	d1f5      	bne.n	83c04 <setvbuf+0x134>
   83c18:	0593      	lsls	r3, r2, #22
   83c1a:	d4c0      	bmi.n	83b9e <setvbuf+0xce>
   83c1c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83c1e:	f003 fe7d 	bl	8791c <__retarget_lock_release_recursive>
   83c22:	4628      	mov	r0, r5
   83c24:	b003      	add	sp, #12
   83c26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83c2a:	60a6      	str	r6, [r4, #8]
   83c2c:	e7f0      	b.n	83c10 <setvbuf+0x140>
   83c2e:	4628      	mov	r0, r5
   83c30:	f003 faa4 	bl	8717c <__sinit>
   83c34:	e7c7      	b.n	83bc6 <setvbuf+0xf6>
   83c36:	f04f 35ff 	mov.w	r5, #4294967295
   83c3a:	e7b0      	b.n	83b9e <setvbuf+0xce>
   83c3c:	f8dd 9000 	ldr.w	r9, [sp]
   83c40:	45b1      	cmp	r9, r6
   83c42:	d004      	beq.n	83c4e <setvbuf+0x17e>
   83c44:	4648      	mov	r0, r9
   83c46:	f003 fee3 	bl	87a10 <malloc>
   83c4a:	4607      	mov	r7, r0
   83c4c:	b920      	cbnz	r0, 83c58 <setvbuf+0x188>
   83c4e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83c52:	f04f 35ff 	mov.w	r5, #4294967295
   83c56:	e792      	b.n	83b7e <setvbuf+0xae>
   83c58:	464e      	mov	r6, r9
   83c5a:	e783      	b.n	83b64 <setvbuf+0x94>
   83c5c:	200002d8 	.word	0x200002d8

00083c60 <sprintf>:
   83c60:	b40e      	push	{r1, r2, r3}
   83c62:	4601      	mov	r1, r0
   83c64:	b5f0      	push	{r4, r5, r6, r7, lr}
   83c66:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83c6a:	f44f 7702 	mov.w	r7, #520	; 0x208
   83c6e:	f64f 76ff 	movw	r6, #65535	; 0xffff
   83c72:	b09c      	sub	sp, #112	; 0x70
   83c74:	ac21      	add	r4, sp, #132	; 0x84
   83c76:	f854 2b04 	ldr.w	r2, [r4], #4
   83c7a:	4b0b      	ldr	r3, [pc, #44]	; (83ca8 <sprintf+0x48>)
   83c7c:	9102      	str	r1, [sp, #8]
   83c7e:	9106      	str	r1, [sp, #24]
   83c80:	6818      	ldr	r0, [r3, #0]
   83c82:	a902      	add	r1, sp, #8
   83c84:	4623      	mov	r3, r4
   83c86:	9401      	str	r4, [sp, #4]
   83c88:	f8ad 7014 	strh.w	r7, [sp, #20]
   83c8c:	9504      	str	r5, [sp, #16]
   83c8e:	9507      	str	r5, [sp, #28]
   83c90:	f8ad 6016 	strh.w	r6, [sp, #22]
   83c94:	f000 f80a 	bl	83cac <_svfprintf_r>
   83c98:	2200      	movs	r2, #0
   83c9a:	9b02      	ldr	r3, [sp, #8]
   83c9c:	701a      	strb	r2, [r3, #0]
   83c9e:	b01c      	add	sp, #112	; 0x70
   83ca0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   83ca4:	b003      	add	sp, #12
   83ca6:	4770      	bx	lr
   83ca8:	200002d8 	.word	0x200002d8

00083cac <_svfprintf_r>:
   83cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83cb0:	b0c3      	sub	sp, #268	; 0x10c
   83cb2:	460c      	mov	r4, r1
   83cb4:	910b      	str	r1, [sp, #44]	; 0x2c
   83cb6:	4692      	mov	sl, r2
   83cb8:	930f      	str	r3, [sp, #60]	; 0x3c
   83cba:	900c      	str	r0, [sp, #48]	; 0x30
   83cbc:	f003 fe1a 	bl	878f4 <_localeconv_r>
   83cc0:	6803      	ldr	r3, [r0, #0]
   83cc2:	4618      	mov	r0, r3
   83cc4:	931a      	str	r3, [sp, #104]	; 0x68
   83cc6:	f004 ff21 	bl	88b0c <strlen>
   83cca:	89a3      	ldrh	r3, [r4, #12]
   83ccc:	9019      	str	r0, [sp, #100]	; 0x64
   83cce:	0619      	lsls	r1, r3, #24
   83cd0:	d503      	bpl.n	83cda <_svfprintf_r+0x2e>
   83cd2:	6923      	ldr	r3, [r4, #16]
   83cd4:	2b00      	cmp	r3, #0
   83cd6:	f001 8035 	beq.w	84d44 <_svfprintf_r+0x1098>
   83cda:	2300      	movs	r3, #0
   83cdc:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
   83ce0:	46c8      	mov	r8, r9
   83ce2:	9315      	str	r3, [sp, #84]	; 0x54
   83ce4:	9313      	str	r3, [sp, #76]	; 0x4c
   83ce6:	9314      	str	r3, [sp, #80]	; 0x50
   83ce8:	9318      	str	r3, [sp, #96]	; 0x60
   83cea:	931b      	str	r3, [sp, #108]	; 0x6c
   83cec:	9309      	str	r3, [sp, #36]	; 0x24
   83cee:	9316      	str	r3, [sp, #88]	; 0x58
   83cf0:	9317      	str	r3, [sp, #92]	; 0x5c
   83cf2:	9327      	str	r3, [sp, #156]	; 0x9c
   83cf4:	9326      	str	r3, [sp, #152]	; 0x98
   83cf6:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
   83cfa:	f89a 3000 	ldrb.w	r3, [sl]
   83cfe:	4654      	mov	r4, sl
   83d00:	b1eb      	cbz	r3, 83d3e <_svfprintf_r+0x92>
   83d02:	2b25      	cmp	r3, #37	; 0x25
   83d04:	d102      	bne.n	83d0c <_svfprintf_r+0x60>
   83d06:	e01a      	b.n	83d3e <_svfprintf_r+0x92>
   83d08:	2b25      	cmp	r3, #37	; 0x25
   83d0a:	d003      	beq.n	83d14 <_svfprintf_r+0x68>
   83d0c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   83d10:	2b00      	cmp	r3, #0
   83d12:	d1f9      	bne.n	83d08 <_svfprintf_r+0x5c>
   83d14:	eba4 050a 	sub.w	r5, r4, sl
   83d18:	b18d      	cbz	r5, 83d3e <_svfprintf_r+0x92>
   83d1a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83d1c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   83d1e:	3301      	adds	r3, #1
   83d20:	442a      	add	r2, r5
   83d22:	2b07      	cmp	r3, #7
   83d24:	f8c8 a000 	str.w	sl, [r8]
   83d28:	f8c8 5004 	str.w	r5, [r8, #4]
   83d2c:	9227      	str	r2, [sp, #156]	; 0x9c
   83d2e:	9326      	str	r3, [sp, #152]	; 0x98
   83d30:	f300 808a 	bgt.w	83e48 <_svfprintf_r+0x19c>
   83d34:	f108 0808 	add.w	r8, r8, #8
   83d38:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83d3a:	442b      	add	r3, r5
   83d3c:	9309      	str	r3, [sp, #36]	; 0x24
   83d3e:	7823      	ldrb	r3, [r4, #0]
   83d40:	2b00      	cmp	r3, #0
   83d42:	f000 8089 	beq.w	83e58 <_svfprintf_r+0x1ac>
   83d46:	2300      	movs	r3, #0
   83d48:	f04f 30ff 	mov.w	r0, #4294967295
   83d4c:	461a      	mov	r2, r3
   83d4e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   83d52:	4619      	mov	r1, r3
   83d54:	930d      	str	r3, [sp, #52]	; 0x34
   83d56:	469b      	mov	fp, r3
   83d58:	7863      	ldrb	r3, [r4, #1]
   83d5a:	f104 0a01 	add.w	sl, r4, #1
   83d5e:	900a      	str	r0, [sp, #40]	; 0x28
   83d60:	f10a 0a01 	add.w	sl, sl, #1
   83d64:	f1a3 0020 	sub.w	r0, r3, #32
   83d68:	2858      	cmp	r0, #88	; 0x58
   83d6a:	f200 83b7 	bhi.w	844dc <_svfprintf_r+0x830>
   83d6e:	e8df f010 	tbh	[pc, r0, lsl #1]
   83d72:	034c      	.short	0x034c
   83d74:	03b503b5 	.word	0x03b503b5
   83d78:	03b50354 	.word	0x03b50354
   83d7c:	03b503b5 	.word	0x03b503b5
   83d80:	03b503b5 	.word	0x03b503b5
   83d84:	005903b5 	.word	0x005903b5
   83d88:	03b50359 	.word	0x03b50359
   83d8c:	02140066 	.word	0x02140066
   83d90:	022f03b5 	.word	0x022f03b5
   83d94:	03a503a5 	.word	0x03a503a5
   83d98:	03a503a5 	.word	0x03a503a5
   83d9c:	03a503a5 	.word	0x03a503a5
   83da0:	03a503a5 	.word	0x03a503a5
   83da4:	03b503a5 	.word	0x03b503a5
   83da8:	03b503b5 	.word	0x03b503b5
   83dac:	03b503b5 	.word	0x03b503b5
   83db0:	03b503b5 	.word	0x03b503b5
   83db4:	03b503b5 	.word	0x03b503b5
   83db8:	028b03b5 	.word	0x028b03b5
   83dbc:	03b502d3 	.word	0x03b502d3
   83dc0:	03b502d3 	.word	0x03b502d3
   83dc4:	03b503b5 	.word	0x03b503b5
   83dc8:	031b03b5 	.word	0x031b03b5
   83dcc:	03b503b5 	.word	0x03b503b5
   83dd0:	03b50320 	.word	0x03b50320
   83dd4:	03b503b5 	.word	0x03b503b5
   83dd8:	03b503b5 	.word	0x03b503b5
   83ddc:	03b50234 	.word	0x03b50234
   83de0:	024b03b5 	.word	0x024b03b5
   83de4:	03b503b5 	.word	0x03b503b5
   83de8:	03b503b5 	.word	0x03b503b5
   83dec:	03b503b5 	.word	0x03b503b5
   83df0:	03b503b5 	.word	0x03b503b5
   83df4:	03b503b5 	.word	0x03b503b5
   83df8:	039e0276 	.word	0x039e0276
   83dfc:	02d302d3 	.word	0x02d302d3
   83e00:	036302d3 	.word	0x036302d3
   83e04:	03b5039e 	.word	0x03b5039e
   83e08:	036803b5 	.word	0x036803b5
   83e0c:	037503b5 	.word	0x037503b5
   83e10:	038c01dd 	.word	0x038c01dd
   83e14:	03b5035e 	.word	0x03b5035e
   83e18:	03b501f2 	.word	0x03b501f2
   83e1c:	03b50087 	.word	0x03b50087
   83e20:	033203b5 	.word	0x033203b5
   83e24:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   83e26:	6823      	ldr	r3, [r4, #0]
   83e28:	4618      	mov	r0, r3
   83e2a:	930d      	str	r3, [sp, #52]	; 0x34
   83e2c:	4623      	mov	r3, r4
   83e2e:	2800      	cmp	r0, #0
   83e30:	f103 0304 	add.w	r3, r3, #4
   83e34:	930f      	str	r3, [sp, #60]	; 0x3c
   83e36:	da04      	bge.n	83e42 <_svfprintf_r+0x196>
   83e38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83e3a:	425b      	negs	r3, r3
   83e3c:	930d      	str	r3, [sp, #52]	; 0x34
   83e3e:	f04b 0b04 	orr.w	fp, fp, #4
   83e42:	f89a 3000 	ldrb.w	r3, [sl]
   83e46:	e78b      	b.n	83d60 <_svfprintf_r+0xb4>
   83e48:	aa25      	add	r2, sp, #148	; 0x94
   83e4a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83e4c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83e4e:	f004 fe8b 	bl	88b68 <__ssprint_r>
   83e52:	b940      	cbnz	r0, 83e66 <_svfprintf_r+0x1ba>
   83e54:	46c8      	mov	r8, r9
   83e56:	e76f      	b.n	83d38 <_svfprintf_r+0x8c>
   83e58:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   83e5a:	b123      	cbz	r3, 83e66 <_svfprintf_r+0x1ba>
   83e5c:	980c      	ldr	r0, [sp, #48]	; 0x30
   83e5e:	aa25      	add	r2, sp, #148	; 0x94
   83e60:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83e62:	f004 fe81 	bl	88b68 <__ssprint_r>
   83e66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83e68:	899b      	ldrh	r3, [r3, #12]
   83e6a:	f013 0f40 	tst.w	r3, #64	; 0x40
   83e6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   83e70:	bf18      	it	ne
   83e72:	f04f 33ff 	movne.w	r3, #4294967295
   83e76:	9309      	str	r3, [sp, #36]	; 0x24
   83e78:	9809      	ldr	r0, [sp, #36]	; 0x24
   83e7a:	b043      	add	sp, #268	; 0x10c
   83e7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83e80:	f01b 0f20 	tst.w	fp, #32
   83e84:	9311      	str	r3, [sp, #68]	; 0x44
   83e86:	f040 81af 	bne.w	841e8 <_svfprintf_r+0x53c>
   83e8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   83e8c:	f01b 0f10 	tst.w	fp, #16
   83e90:	4613      	mov	r3, r2
   83e92:	f040 859a 	bne.w	849ca <_svfprintf_r+0xd1e>
   83e96:	f01b 0f40 	tst.w	fp, #64	; 0x40
   83e9a:	f000 8596 	beq.w	849ca <_svfprintf_r+0xd1e>
   83e9e:	2500      	movs	r5, #0
   83ea0:	2301      	movs	r3, #1
   83ea2:	8814      	ldrh	r4, [r2, #0]
   83ea4:	3204      	adds	r2, #4
   83ea6:	920f      	str	r2, [sp, #60]	; 0x3c
   83ea8:	2200      	movs	r2, #0
   83eaa:	4617      	mov	r7, r2
   83eac:	f88d 2077 	strb.w	r2, [sp, #119]	; 0x77
   83eb0:	990a      	ldr	r1, [sp, #40]	; 0x28
   83eb2:	1c4a      	adds	r2, r1, #1
   83eb4:	f000 8210 	beq.w	842d8 <_svfprintf_r+0x62c>
   83eb8:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
   83ebc:	9207      	str	r2, [sp, #28]
   83ebe:	ea54 0205 	orrs.w	r2, r4, r5
   83ec2:	f040 820f 	bne.w	842e4 <_svfprintf_r+0x638>
   83ec6:	2900      	cmp	r1, #0
   83ec8:	f040 8431 	bne.w	8472e <_svfprintf_r+0xa82>
   83ecc:	2b00      	cmp	r3, #0
   83ece:	f040 8539 	bne.w	84944 <_svfprintf_r+0xc98>
   83ed2:	f01b 0301 	ands.w	r3, fp, #1
   83ed6:	930e      	str	r3, [sp, #56]	; 0x38
   83ed8:	f000 8662 	beq.w	84ba0 <_svfprintf_r+0xef4>
   83edc:	2330      	movs	r3, #48	; 0x30
   83ede:	ae42      	add	r6, sp, #264	; 0x108
   83ee0:	f806 3d41 	strb.w	r3, [r6, #-65]!
   83ee4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ee6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83ee8:	4293      	cmp	r3, r2
   83eea:	bfb8      	it	lt
   83eec:	4613      	movlt	r3, r2
   83eee:	9308      	str	r3, [sp, #32]
   83ef0:	2300      	movs	r3, #0
   83ef2:	9312      	str	r3, [sp, #72]	; 0x48
   83ef4:	b117      	cbz	r7, 83efc <_svfprintf_r+0x250>
   83ef6:	9b08      	ldr	r3, [sp, #32]
   83ef8:	3301      	adds	r3, #1
   83efa:	9308      	str	r3, [sp, #32]
   83efc:	9b07      	ldr	r3, [sp, #28]
   83efe:	f013 0302 	ands.w	r3, r3, #2
   83f02:	9310      	str	r3, [sp, #64]	; 0x40
   83f04:	d002      	beq.n	83f0c <_svfprintf_r+0x260>
   83f06:	9b08      	ldr	r3, [sp, #32]
   83f08:	3302      	adds	r3, #2
   83f0a:	9308      	str	r3, [sp, #32]
   83f0c:	9b07      	ldr	r3, [sp, #28]
   83f0e:	f013 0584 	ands.w	r5, r3, #132	; 0x84
   83f12:	f040 8310 	bne.w	84536 <_svfprintf_r+0x88a>
   83f16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83f18:	9a08      	ldr	r2, [sp, #32]
   83f1a:	eba3 0b02 	sub.w	fp, r3, r2
   83f1e:	f1bb 0f00 	cmp.w	fp, #0
   83f22:	f340 8308 	ble.w	84536 <_svfprintf_r+0x88a>
   83f26:	f1bb 0f10 	cmp.w	fp, #16
   83f2a:	f340 87b2 	ble.w	84e92 <_svfprintf_r+0x11e6>
   83f2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   83f30:	4643      	mov	r3, r8
   83f32:	4621      	mov	r1, r4
   83f34:	46a8      	mov	r8, r5
   83f36:	2710      	movs	r7, #16
   83f38:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83f3a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83f3c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   83f3e:	e006      	b.n	83f4e <_svfprintf_r+0x2a2>
   83f40:	f1ab 0b10 	sub.w	fp, fp, #16
   83f44:	f1bb 0f10 	cmp.w	fp, #16
   83f48:	f103 0308 	add.w	r3, r3, #8
   83f4c:	dd18      	ble.n	83f80 <_svfprintf_r+0x2d4>
   83f4e:	3201      	adds	r2, #1
   83f50:	48ab      	ldr	r0, [pc, #684]	; (84200 <_svfprintf_r+0x554>)
   83f52:	3110      	adds	r1, #16
   83f54:	2a07      	cmp	r2, #7
   83f56:	9127      	str	r1, [sp, #156]	; 0x9c
   83f58:	9226      	str	r2, [sp, #152]	; 0x98
   83f5a:	e883 0081 	stmia.w	r3, {r0, r7}
   83f5e:	ddef      	ble.n	83f40 <_svfprintf_r+0x294>
   83f60:	aa25      	add	r2, sp, #148	; 0x94
   83f62:	4629      	mov	r1, r5
   83f64:	4620      	mov	r0, r4
   83f66:	f004 fdff 	bl	88b68 <__ssprint_r>
   83f6a:	2800      	cmp	r0, #0
   83f6c:	f47f af7b 	bne.w	83e66 <_svfprintf_r+0x1ba>
   83f70:	f1ab 0b10 	sub.w	fp, fp, #16
   83f74:	f1bb 0f10 	cmp.w	fp, #16
   83f78:	464b      	mov	r3, r9
   83f7a:	9927      	ldr	r1, [sp, #156]	; 0x9c
   83f7c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   83f7e:	dce6      	bgt.n	83f4e <_svfprintf_r+0x2a2>
   83f80:	4645      	mov	r5, r8
   83f82:	460c      	mov	r4, r1
   83f84:	4698      	mov	r8, r3
   83f86:	3201      	adds	r2, #1
   83f88:	4b9d      	ldr	r3, [pc, #628]	; (84200 <_svfprintf_r+0x554>)
   83f8a:	445c      	add	r4, fp
   83f8c:	2a07      	cmp	r2, #7
   83f8e:	9427      	str	r4, [sp, #156]	; 0x9c
   83f90:	9226      	str	r2, [sp, #152]	; 0x98
   83f92:	e888 0808 	stmia.w	r8, {r3, fp}
   83f96:	f300 82c3 	bgt.w	84520 <_svfprintf_r+0x874>
   83f9a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   83f9e:	f108 0808 	add.w	r8, r8, #8
   83fa2:	b187      	cbz	r7, 83fc6 <_svfprintf_r+0x31a>
   83fa4:	2101      	movs	r1, #1
   83fa6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83fa8:	440c      	add	r4, r1
   83faa:	440b      	add	r3, r1
   83fac:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   83fb0:	2b07      	cmp	r3, #7
   83fb2:	9427      	str	r4, [sp, #156]	; 0x9c
   83fb4:	9326      	str	r3, [sp, #152]	; 0x98
   83fb6:	f8c8 1004 	str.w	r1, [r8, #4]
   83fba:	f8c8 2000 	str.w	r2, [r8]
   83fbe:	f300 83cd 	bgt.w	8475c <_svfprintf_r+0xab0>
   83fc2:	f108 0808 	add.w	r8, r8, #8
   83fc6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   83fc8:	b17b      	cbz	r3, 83fea <_svfprintf_r+0x33e>
   83fca:	2102      	movs	r1, #2
   83fcc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   83fce:	440c      	add	r4, r1
   83fd0:	3301      	adds	r3, #1
   83fd2:	aa1e      	add	r2, sp, #120	; 0x78
   83fd4:	2b07      	cmp	r3, #7
   83fd6:	9427      	str	r4, [sp, #156]	; 0x9c
   83fd8:	9326      	str	r3, [sp, #152]	; 0x98
   83fda:	f8c8 1004 	str.w	r1, [r8, #4]
   83fde:	f8c8 2000 	str.w	r2, [r8]
   83fe2:	f300 8411 	bgt.w	84808 <_svfprintf_r+0xb5c>
   83fe6:	f108 0808 	add.w	r8, r8, #8
   83fea:	2d80      	cmp	r5, #128	; 0x80
   83fec:	f000 8304 	beq.w	845f8 <_svfprintf_r+0x94c>
   83ff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   83ff2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   83ff4:	1a9f      	subs	r7, r3, r2
   83ff6:	2f00      	cmp	r7, #0
   83ff8:	dd37      	ble.n	8406a <_svfprintf_r+0x3be>
   83ffa:	2f10      	cmp	r7, #16
   83ffc:	f340 8679 	ble.w	84cf2 <_svfprintf_r+0x1046>
   84000:	4d80      	ldr	r5, [pc, #512]	; (84204 <_svfprintf_r+0x558>)
   84002:	4642      	mov	r2, r8
   84004:	4621      	mov	r1, r4
   84006:	46b0      	mov	r8, r6
   84008:	f04f 0b10 	mov.w	fp, #16
   8400c:	462e      	mov	r6, r5
   8400e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84010:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84012:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   84014:	e004      	b.n	84020 <_svfprintf_r+0x374>
   84016:	3f10      	subs	r7, #16
   84018:	2f10      	cmp	r7, #16
   8401a:	f102 0208 	add.w	r2, r2, #8
   8401e:	dd15      	ble.n	8404c <_svfprintf_r+0x3a0>
   84020:	3301      	adds	r3, #1
   84022:	3110      	adds	r1, #16
   84024:	2b07      	cmp	r3, #7
   84026:	9127      	str	r1, [sp, #156]	; 0x9c
   84028:	9326      	str	r3, [sp, #152]	; 0x98
   8402a:	e882 0840 	stmia.w	r2, {r6, fp}
   8402e:	ddf2      	ble.n	84016 <_svfprintf_r+0x36a>
   84030:	aa25      	add	r2, sp, #148	; 0x94
   84032:	4629      	mov	r1, r5
   84034:	4620      	mov	r0, r4
   84036:	f004 fd97 	bl	88b68 <__ssprint_r>
   8403a:	2800      	cmp	r0, #0
   8403c:	f47f af13 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84040:	3f10      	subs	r7, #16
   84042:	2f10      	cmp	r7, #16
   84044:	464a      	mov	r2, r9
   84046:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84048:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8404a:	dce9      	bgt.n	84020 <_svfprintf_r+0x374>
   8404c:	4635      	mov	r5, r6
   8404e:	460c      	mov	r4, r1
   84050:	4646      	mov	r6, r8
   84052:	4690      	mov	r8, r2
   84054:	3301      	adds	r3, #1
   84056:	443c      	add	r4, r7
   84058:	2b07      	cmp	r3, #7
   8405a:	9427      	str	r4, [sp, #156]	; 0x9c
   8405c:	9326      	str	r3, [sp, #152]	; 0x98
   8405e:	e888 00a0 	stmia.w	r8, {r5, r7}
   84062:	f300 8370 	bgt.w	84746 <_svfprintf_r+0xa9a>
   84066:	f108 0808 	add.w	r8, r8, #8
   8406a:	9b07      	ldr	r3, [sp, #28]
   8406c:	05df      	lsls	r7, r3, #23
   8406e:	f100 8264 	bmi.w	8453a <_svfprintf_r+0x88e>
   84072:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84074:	990e      	ldr	r1, [sp, #56]	; 0x38
   84076:	3301      	adds	r3, #1
   84078:	440c      	add	r4, r1
   8407a:	2b07      	cmp	r3, #7
   8407c:	9427      	str	r4, [sp, #156]	; 0x9c
   8407e:	f8c8 6000 	str.w	r6, [r8]
   84082:	f8c8 1004 	str.w	r1, [r8, #4]
   84086:	9326      	str	r3, [sp, #152]	; 0x98
   84088:	f300 83b3 	bgt.w	847f2 <_svfprintf_r+0xb46>
   8408c:	f108 0808 	add.w	r8, r8, #8
   84090:	9b07      	ldr	r3, [sp, #28]
   84092:	075b      	lsls	r3, r3, #29
   84094:	d53b      	bpl.n	8410e <_svfprintf_r+0x462>
   84096:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84098:	9a08      	ldr	r2, [sp, #32]
   8409a:	1a9d      	subs	r5, r3, r2
   8409c:	2d00      	cmp	r5, #0
   8409e:	dd36      	ble.n	8410e <_svfprintf_r+0x462>
   840a0:	2d10      	cmp	r5, #16
   840a2:	f340 8721 	ble.w	84ee8 <_svfprintf_r+0x123c>
   840a6:	2610      	movs	r6, #16
   840a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   840aa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   840ac:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
   840b0:	e004      	b.n	840bc <_svfprintf_r+0x410>
   840b2:	3d10      	subs	r5, #16
   840b4:	2d10      	cmp	r5, #16
   840b6:	f108 0808 	add.w	r8, r8, #8
   840ba:	dd16      	ble.n	840ea <_svfprintf_r+0x43e>
   840bc:	3301      	adds	r3, #1
   840be:	4a50      	ldr	r2, [pc, #320]	; (84200 <_svfprintf_r+0x554>)
   840c0:	3410      	adds	r4, #16
   840c2:	2b07      	cmp	r3, #7
   840c4:	9427      	str	r4, [sp, #156]	; 0x9c
   840c6:	9326      	str	r3, [sp, #152]	; 0x98
   840c8:	e888 0044 	stmia.w	r8, {r2, r6}
   840cc:	ddf1      	ble.n	840b2 <_svfprintf_r+0x406>
   840ce:	aa25      	add	r2, sp, #148	; 0x94
   840d0:	4659      	mov	r1, fp
   840d2:	4638      	mov	r0, r7
   840d4:	f004 fd48 	bl	88b68 <__ssprint_r>
   840d8:	2800      	cmp	r0, #0
   840da:	f47f aec4 	bne.w	83e66 <_svfprintf_r+0x1ba>
   840de:	3d10      	subs	r5, #16
   840e0:	2d10      	cmp	r5, #16
   840e2:	46c8      	mov	r8, r9
   840e4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   840e6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   840e8:	dce8      	bgt.n	840bc <_svfprintf_r+0x410>
   840ea:	3301      	adds	r3, #1
   840ec:	4a44      	ldr	r2, [pc, #272]	; (84200 <_svfprintf_r+0x554>)
   840ee:	442c      	add	r4, r5
   840f0:	2b07      	cmp	r3, #7
   840f2:	9427      	str	r4, [sp, #156]	; 0x9c
   840f4:	9326      	str	r3, [sp, #152]	; 0x98
   840f6:	e888 0024 	stmia.w	r8, {r2, r5}
   840fa:	dd08      	ble.n	8410e <_svfprintf_r+0x462>
   840fc:	aa25      	add	r2, sp, #148	; 0x94
   840fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84100:	980c      	ldr	r0, [sp, #48]	; 0x30
   84102:	f004 fd31 	bl	88b68 <__ssprint_r>
   84106:	2800      	cmp	r0, #0
   84108:	f47f aead 	bne.w	83e66 <_svfprintf_r+0x1ba>
   8410c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8410e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84110:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   84112:	9908      	ldr	r1, [sp, #32]
   84114:	428a      	cmp	r2, r1
   84116:	bfac      	ite	ge
   84118:	189b      	addge	r3, r3, r2
   8411a:	185b      	addlt	r3, r3, r1
   8411c:	9309      	str	r3, [sp, #36]	; 0x24
   8411e:	2c00      	cmp	r4, #0
   84120:	f040 82fb 	bne.w	8471a <_svfprintf_r+0xa6e>
   84124:	2300      	movs	r3, #0
   84126:	46c8      	mov	r8, r9
   84128:	9326      	str	r3, [sp, #152]	; 0x98
   8412a:	e5e6      	b.n	83cfa <_svfprintf_r+0x4e>
   8412c:	9311      	str	r3, [sp, #68]	; 0x44
   8412e:	f01b 0320 	ands.w	r3, fp, #32
   84132:	f040 8145 	bne.w	843c0 <_svfprintf_r+0x714>
   84136:	f01b 0210 	ands.w	r2, fp, #16
   8413a:	f040 8466 	bne.w	84a0a <_svfprintf_r+0xd5e>
   8413e:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
   84142:	f000 8462 	beq.w	84a0a <_svfprintf_r+0xd5e>
   84146:	990f      	ldr	r1, [sp, #60]	; 0x3c
   84148:	4613      	mov	r3, r2
   8414a:	460a      	mov	r2, r1
   8414c:	3204      	adds	r2, #4
   8414e:	880c      	ldrh	r4, [r1, #0]
   84150:	2500      	movs	r5, #0
   84152:	920f      	str	r2, [sp, #60]	; 0x3c
   84154:	e6a8      	b.n	83ea8 <_svfprintf_r+0x1fc>
   84156:	2500      	movs	r5, #0
   84158:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8415a:	9311      	str	r3, [sp, #68]	; 0x44
   8415c:	6816      	ldr	r6, [r2, #0]
   8415e:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   84162:	1d14      	adds	r4, r2, #4
   84164:	2e00      	cmp	r6, #0
   84166:	f000 86cd 	beq.w	84f04 <_svfprintf_r+0x1258>
   8416a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8416c:	1c53      	adds	r3, r2, #1
   8416e:	f000 861b 	beq.w	84da8 <_svfprintf_r+0x10fc>
   84172:	4629      	mov	r1, r5
   84174:	4630      	mov	r0, r6
   84176:	f003 ff0b 	bl	87f90 <memchr>
   8417a:	2800      	cmp	r0, #0
   8417c:	f000 870d 	beq.w	84f9a <_svfprintf_r+0x12ee>
   84180:	1b83      	subs	r3, r0, r6
   84182:	950a      	str	r5, [sp, #40]	; 0x28
   84184:	930e      	str	r3, [sp, #56]	; 0x38
   84186:	940f      	str	r4, [sp, #60]	; 0x3c
   84188:	f8cd b01c 	str.w	fp, [sp, #28]
   8418c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84190:	9308      	str	r3, [sp, #32]
   84192:	9512      	str	r5, [sp, #72]	; 0x48
   84194:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84198:	e6ac      	b.n	83ef4 <_svfprintf_r+0x248>
   8419a:	f89a 3000 	ldrb.w	r3, [sl]
   8419e:	f10a 0401 	add.w	r4, sl, #1
   841a2:	2b2a      	cmp	r3, #42	; 0x2a
   841a4:	f000 87c2 	beq.w	8512c <_svfprintf_r+0x1480>
   841a8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   841ac:	2809      	cmp	r0, #9
   841ae:	46a2      	mov	sl, r4
   841b0:	f200 8718 	bhi.w	84fe4 <_svfprintf_r+0x1338>
   841b4:	2300      	movs	r3, #0
   841b6:	461c      	mov	r4, r3
   841b8:	f81a 3b01 	ldrb.w	r3, [sl], #1
   841bc:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   841c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   841c4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   841c8:	2809      	cmp	r0, #9
   841ca:	d9f5      	bls.n	841b8 <_svfprintf_r+0x50c>
   841cc:	940a      	str	r4, [sp, #40]	; 0x28
   841ce:	e5c9      	b.n	83d64 <_svfprintf_r+0xb8>
   841d0:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
   841d4:	f89a 3000 	ldrb.w	r3, [sl]
   841d8:	e5c2      	b.n	83d60 <_svfprintf_r+0xb4>
   841da:	f04b 0b10 	orr.w	fp, fp, #16
   841de:	f01b 0f20 	tst.w	fp, #32
   841e2:	9311      	str	r3, [sp, #68]	; 0x44
   841e4:	f43f ae51 	beq.w	83e8a <_svfprintf_r+0x1de>
   841e8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   841ea:	3407      	adds	r4, #7
   841ec:	f024 0307 	bic.w	r3, r4, #7
   841f0:	f103 0208 	add.w	r2, r3, #8
   841f4:	e9d3 4500 	ldrd	r4, r5, [r3]
   841f8:	920f      	str	r2, [sp, #60]	; 0x3c
   841fa:	2301      	movs	r3, #1
   841fc:	e654      	b.n	83ea8 <_svfprintf_r+0x1fc>
   841fe:	bf00      	nop
   84200:	00089dc0 	.word	0x00089dc0
   84204:	00089dd0 	.word	0x00089dd0
   84208:	9311      	str	r3, [sp, #68]	; 0x44
   8420a:	2a00      	cmp	r2, #0
   8420c:	f040 87ad 	bne.w	8516a <_svfprintf_r+0x14be>
   84210:	4bbe      	ldr	r3, [pc, #760]	; (8450c <_svfprintf_r+0x860>)
   84212:	f01b 0f20 	tst.w	fp, #32
   84216:	9318      	str	r3, [sp, #96]	; 0x60
   84218:	f040 80e7 	bne.w	843ea <_svfprintf_r+0x73e>
   8421c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8421e:	f01b 0f10 	tst.w	fp, #16
   84222:	4613      	mov	r3, r2
   84224:	f040 83d8 	bne.w	849d8 <_svfprintf_r+0xd2c>
   84228:	f01b 0f40 	tst.w	fp, #64	; 0x40
   8422c:	f000 83d4 	beq.w	849d8 <_svfprintf_r+0xd2c>
   84230:	2500      	movs	r5, #0
   84232:	3304      	adds	r3, #4
   84234:	8814      	ldrh	r4, [r2, #0]
   84236:	930f      	str	r3, [sp, #60]	; 0x3c
   84238:	f01b 0f01 	tst.w	fp, #1
   8423c:	f000 80e3 	beq.w	84406 <_svfprintf_r+0x75a>
   84240:	ea54 0305 	orrs.w	r3, r4, r5
   84244:	f000 80df 	beq.w	84406 <_svfprintf_r+0x75a>
   84248:	2330      	movs	r3, #48	; 0x30
   8424a:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   8424e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   84252:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
   84256:	f04b 0b02 	orr.w	fp, fp, #2
   8425a:	2302      	movs	r3, #2
   8425c:	e624      	b.n	83ea8 <_svfprintf_r+0x1fc>
   8425e:	2201      	movs	r2, #1
   84260:	9311      	str	r3, [sp, #68]	; 0x44
   84262:	2300      	movs	r3, #0
   84264:	4611      	mov	r1, r2
   84266:	980f      	ldr	r0, [sp, #60]	; 0x3c
   84268:	9208      	str	r2, [sp, #32]
   8426a:	6802      	ldr	r2, [r0, #0]
   8426c:	461f      	mov	r7, r3
   8426e:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84272:	930a      	str	r3, [sp, #40]	; 0x28
   84274:	9312      	str	r3, [sp, #72]	; 0x48
   84276:	1d03      	adds	r3, r0, #4
   84278:	f8cd b01c 	str.w	fp, [sp, #28]
   8427c:	910e      	str	r1, [sp, #56]	; 0x38
   8427e:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   84282:	930f      	str	r3, [sp, #60]	; 0x3c
   84284:	ae28      	add	r6, sp, #160	; 0xa0
   84286:	e639      	b.n	83efc <_svfprintf_r+0x250>
   84288:	9311      	str	r3, [sp, #68]	; 0x44
   8428a:	2a00      	cmp	r2, #0
   8428c:	f040 8784 	bne.w	85198 <_svfprintf_r+0x14ec>
   84290:	f04b 0b10 	orr.w	fp, fp, #16
   84294:	f01b 0f20 	tst.w	fp, #32
   84298:	f040 8475 	bne.w	84b86 <_svfprintf_r+0xeda>
   8429c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8429e:	f01b 0f10 	tst.w	fp, #16
   842a2:	4613      	mov	r3, r2
   842a4:	f040 839d 	bne.w	849e2 <_svfprintf_r+0xd36>
   842a8:	f01b 0f40 	tst.w	fp, #64	; 0x40
   842ac:	f000 8399 	beq.w	849e2 <_svfprintf_r+0xd36>
   842b0:	f9b2 4000 	ldrsh.w	r4, [r2]
   842b4:	3304      	adds	r3, #4
   842b6:	17e5      	asrs	r5, r4, #31
   842b8:	930f      	str	r3, [sp, #60]	; 0x3c
   842ba:	4622      	mov	r2, r4
   842bc:	462b      	mov	r3, r5
   842be:	2a00      	cmp	r2, #0
   842c0:	f173 0300 	sbcs.w	r3, r3, #0
   842c4:	f2c0 8398 	blt.w	849f8 <_svfprintf_r+0xd4c>
   842c8:	990a      	ldr	r1, [sp, #40]	; 0x28
   842ca:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   842ce:	1c4a      	adds	r2, r1, #1
   842d0:	f04f 0301 	mov.w	r3, #1
   842d4:	f47f adf0 	bne.w	83eb8 <_svfprintf_r+0x20c>
   842d8:	ea54 0205 	orrs.w	r2, r4, r5
   842dc:	f000 8229 	beq.w	84732 <_svfprintf_r+0xa86>
   842e0:	f8cd b01c 	str.w	fp, [sp, #28]
   842e4:	2b01      	cmp	r3, #1
   842e6:	f000 830e 	beq.w	84906 <_svfprintf_r+0xc5a>
   842ea:	2b02      	cmp	r3, #2
   842ec:	f040 829c 	bne.w	84828 <_svfprintf_r+0xb7c>
   842f0:	464e      	mov	r6, r9
   842f2:	9818      	ldr	r0, [sp, #96]	; 0x60
   842f4:	0923      	lsrs	r3, r4, #4
   842f6:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   842fa:	0929      	lsrs	r1, r5, #4
   842fc:	f004 020f 	and.w	r2, r4, #15
   84300:	460d      	mov	r5, r1
   84302:	461c      	mov	r4, r3
   84304:	5c83      	ldrb	r3, [r0, r2]
   84306:	f806 3d01 	strb.w	r3, [r6, #-1]!
   8430a:	ea54 0305 	orrs.w	r3, r4, r5
   8430e:	d1f1      	bne.n	842f4 <_svfprintf_r+0x648>
   84310:	eba9 0306 	sub.w	r3, r9, r6
   84314:	930e      	str	r3, [sp, #56]	; 0x38
   84316:	e5e5      	b.n	83ee4 <_svfprintf_r+0x238>
   84318:	9311      	str	r3, [sp, #68]	; 0x44
   8431a:	2a00      	cmp	r2, #0
   8431c:	f040 8738 	bne.w	85190 <_svfprintf_r+0x14e4>
   84320:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84322:	f01b 0f08 	tst.w	fp, #8
   84326:	f104 0407 	add.w	r4, r4, #7
   8432a:	f000 84cf 	beq.w	84ccc <_svfprintf_r+0x1020>
   8432e:	f024 0307 	bic.w	r3, r4, #7
   84332:	f103 0208 	add.w	r2, r3, #8
   84336:	920f      	str	r2, [sp, #60]	; 0x3c
   84338:	681a      	ldr	r2, [r3, #0]
   8433a:	685b      	ldr	r3, [r3, #4]
   8433c:	9215      	str	r2, [sp, #84]	; 0x54
   8433e:	9314      	str	r3, [sp, #80]	; 0x50
   84340:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84342:	9d15      	ldr	r5, [sp, #84]	; 0x54
   84344:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   84348:	4628      	mov	r0, r5
   8434a:	4621      	mov	r1, r4
   8434c:	f04f 32ff 	mov.w	r2, #4294967295
   84350:	4b6f      	ldr	r3, [pc, #444]	; (84510 <_svfprintf_r+0x864>)
   84352:	f005 fad5 	bl	89900 <__aeabi_dcmpun>
   84356:	2800      	cmp	r0, #0
   84358:	f040 8434 	bne.w	84bc4 <_svfprintf_r+0xf18>
   8435c:	4628      	mov	r0, r5
   8435e:	4621      	mov	r1, r4
   84360:	f04f 32ff 	mov.w	r2, #4294967295
   84364:	4b6a      	ldr	r3, [pc, #424]	; (84510 <_svfprintf_r+0x864>)
   84366:	f005 faad 	bl	898c4 <__aeabi_dcmple>
   8436a:	2800      	cmp	r0, #0
   8436c:	f040 842a 	bne.w	84bc4 <_svfprintf_r+0xf18>
   84370:	a815      	add	r0, sp, #84	; 0x54
   84372:	c80d      	ldmia	r0, {r0, r2, r3}
   84374:	9914      	ldr	r1, [sp, #80]	; 0x50
   84376:	f005 fa9b 	bl	898b0 <__aeabi_dcmplt>
   8437a:	2800      	cmp	r0, #0
   8437c:	f040 85d4 	bne.w	84f28 <_svfprintf_r+0x127c>
   84380:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84384:	2303      	movs	r3, #3
   84386:	461a      	mov	r2, r3
   84388:	9308      	str	r3, [sp, #32]
   8438a:	2300      	movs	r3, #0
   8438c:	4e61      	ldr	r6, [pc, #388]	; (84514 <_svfprintf_r+0x868>)
   8438e:	4619      	mov	r1, r3
   84390:	930a      	str	r3, [sp, #40]	; 0x28
   84392:	4b61      	ldr	r3, [pc, #388]	; (84518 <_svfprintf_r+0x86c>)
   84394:	920e      	str	r2, [sp, #56]	; 0x38
   84396:	9a11      	ldr	r2, [sp, #68]	; 0x44
   84398:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
   8439c:	9007      	str	r0, [sp, #28]
   8439e:	9112      	str	r1, [sp, #72]	; 0x48
   843a0:	2a47      	cmp	r2, #71	; 0x47
   843a2:	bfd8      	it	le
   843a4:	461e      	movle	r6, r3
   843a6:	e5a5      	b.n	83ef4 <_svfprintf_r+0x248>
   843a8:	f04b 0b08 	orr.w	fp, fp, #8
   843ac:	f89a 3000 	ldrb.w	r3, [sl]
   843b0:	e4d6      	b.n	83d60 <_svfprintf_r+0xb4>
   843b2:	f04b 0b10 	orr.w	fp, fp, #16
   843b6:	9311      	str	r3, [sp, #68]	; 0x44
   843b8:	f01b 0320 	ands.w	r3, fp, #32
   843bc:	f43f aebb 	beq.w	84136 <_svfprintf_r+0x48a>
   843c0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   843c2:	3407      	adds	r4, #7
   843c4:	f024 0307 	bic.w	r3, r4, #7
   843c8:	f103 0208 	add.w	r2, r3, #8
   843cc:	e9d3 4500 	ldrd	r4, r5, [r3]
   843d0:	920f      	str	r2, [sp, #60]	; 0x3c
   843d2:	2300      	movs	r3, #0
   843d4:	e568      	b.n	83ea8 <_svfprintf_r+0x1fc>
   843d6:	9311      	str	r3, [sp, #68]	; 0x44
   843d8:	2a00      	cmp	r2, #0
   843da:	f040 86c2 	bne.w	85162 <_svfprintf_r+0x14b6>
   843de:	4b4f      	ldr	r3, [pc, #316]	; (8451c <_svfprintf_r+0x870>)
   843e0:	f01b 0f20 	tst.w	fp, #32
   843e4:	9318      	str	r3, [sp, #96]	; 0x60
   843e6:	f43f af19 	beq.w	8421c <_svfprintf_r+0x570>
   843ea:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   843ec:	f01b 0f01 	tst.w	fp, #1
   843f0:	f104 0407 	add.w	r4, r4, #7
   843f4:	f024 0307 	bic.w	r3, r4, #7
   843f8:	f103 0208 	add.w	r2, r3, #8
   843fc:	920f      	str	r2, [sp, #60]	; 0x3c
   843fe:	e9d3 4500 	ldrd	r4, r5, [r3]
   84402:	f47f af1d 	bne.w	84240 <_svfprintf_r+0x594>
   84406:	2302      	movs	r3, #2
   84408:	e54e      	b.n	83ea8 <_svfprintf_r+0x1fc>
   8440a:	f89a 3000 	ldrb.w	r3, [sl]
   8440e:	2900      	cmp	r1, #0
   84410:	f47f aca6 	bne.w	83d60 <_svfprintf_r+0xb4>
   84414:	2201      	movs	r2, #1
   84416:	2120      	movs	r1, #32
   84418:	e4a2      	b.n	83d60 <_svfprintf_r+0xb4>
   8441a:	f04b 0b01 	orr.w	fp, fp, #1
   8441e:	f89a 3000 	ldrb.w	r3, [sl]
   84422:	e49d      	b.n	83d60 <_svfprintf_r+0xb4>
   84424:	f89a 3000 	ldrb.w	r3, [sl]
   84428:	2201      	movs	r2, #1
   8442a:	212b      	movs	r1, #43	; 0x2b
   8442c:	e498      	b.n	83d60 <_svfprintf_r+0xb4>
   8442e:	f04b 0b20 	orr.w	fp, fp, #32
   84432:	f89a 3000 	ldrb.w	r3, [sl]
   84436:	e493      	b.n	83d60 <_svfprintf_r+0xb4>
   84438:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
   8443c:	f89a 3000 	ldrb.w	r3, [sl]
   84440:	e48e      	b.n	83d60 <_svfprintf_r+0xb4>
   84442:	f89a 3000 	ldrb.w	r3, [sl]
   84446:	2b6c      	cmp	r3, #108	; 0x6c
   84448:	bf03      	ittte	eq
   8444a:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
   8444e:	f04b 0b20 	orreq.w	fp, fp, #32
   84452:	f10a 0a01 	addeq.w	sl, sl, #1
   84456:	f04b 0b10 	orrne.w	fp, fp, #16
   8445a:	e481      	b.n	83d60 <_svfprintf_r+0xb4>
   8445c:	2a00      	cmp	r2, #0
   8445e:	f040 867c 	bne.w	8515a <_svfprintf_r+0x14ae>
   84462:	f01b 0f20 	tst.w	fp, #32
   84466:	f040 8452 	bne.w	84d0e <_svfprintf_r+0x1062>
   8446a:	f01b 0f10 	tst.w	fp, #16
   8446e:	f040 8438 	bne.w	84ce2 <_svfprintf_r+0x1036>
   84472:	f01b 0f40 	tst.w	fp, #64	; 0x40
   84476:	f000 8434 	beq.w	84ce2 <_svfprintf_r+0x1036>
   8447a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8447c:	6813      	ldr	r3, [r2, #0]
   8447e:	3204      	adds	r2, #4
   84480:	920f      	str	r2, [sp, #60]	; 0x3c
   84482:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
   84486:	801a      	strh	r2, [r3, #0]
   84488:	e437      	b.n	83cfa <_svfprintf_r+0x4e>
   8448a:	2378      	movs	r3, #120	; 0x78
   8448c:	2230      	movs	r2, #48	; 0x30
   8448e:	980f      	ldr	r0, [sp, #60]	; 0x3c
   84490:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
   84494:	9311      	str	r3, [sp, #68]	; 0x44
   84496:	1d03      	adds	r3, r0, #4
   84498:	930f      	str	r3, [sp, #60]	; 0x3c
   8449a:	4b20      	ldr	r3, [pc, #128]	; (8451c <_svfprintf_r+0x870>)
   8449c:	6804      	ldr	r4, [r0, #0]
   8449e:	9318      	str	r3, [sp, #96]	; 0x60
   844a0:	f04b 0b02 	orr.w	fp, fp, #2
   844a4:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
   844a8:	2500      	movs	r5, #0
   844aa:	2302      	movs	r3, #2
   844ac:	e4fc      	b.n	83ea8 <_svfprintf_r+0x1fc>
   844ae:	9311      	str	r3, [sp, #68]	; 0x44
   844b0:	2a00      	cmp	r2, #0
   844b2:	f43f aeef 	beq.w	84294 <_svfprintf_r+0x5e8>
   844b6:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   844ba:	e6eb      	b.n	84294 <_svfprintf_r+0x5e8>
   844bc:	2000      	movs	r0, #0
   844be:	4604      	mov	r4, r0
   844c0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   844c4:	f81a 3b01 	ldrb.w	r3, [sl], #1
   844c8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   844cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
   844d0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
   844d4:	2809      	cmp	r0, #9
   844d6:	d9f5      	bls.n	844c4 <_svfprintf_r+0x818>
   844d8:	940d      	str	r4, [sp, #52]	; 0x34
   844da:	e443      	b.n	83d64 <_svfprintf_r+0xb8>
   844dc:	9311      	str	r3, [sp, #68]	; 0x44
   844de:	2a00      	cmp	r2, #0
   844e0:	f040 864a 	bne.w	85178 <_svfprintf_r+0x14cc>
   844e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   844e6:	2a00      	cmp	r2, #0
   844e8:	f43f acb6 	beq.w	83e58 <_svfprintf_r+0x1ac>
   844ec:	2300      	movs	r3, #0
   844ee:	2101      	movs	r1, #1
   844f0:	461f      	mov	r7, r3
   844f2:	9108      	str	r1, [sp, #32]
   844f4:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   844f8:	f8cd b01c 	str.w	fp, [sp, #28]
   844fc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84500:	930a      	str	r3, [sp, #40]	; 0x28
   84502:	9312      	str	r3, [sp, #72]	; 0x48
   84504:	910e      	str	r1, [sp, #56]	; 0x38
   84506:	ae28      	add	r6, sp, #160	; 0xa0
   84508:	e4f8      	b.n	83efc <_svfprintf_r+0x250>
   8450a:	bf00      	nop
   8450c:	00089d8c 	.word	0x00089d8c
   84510:	7fefffff 	.word	0x7fefffff
   84514:	00089d80 	.word	0x00089d80
   84518:	00089d7c 	.word	0x00089d7c
   8451c:	00089da0 	.word	0x00089da0
   84520:	aa25      	add	r2, sp, #148	; 0x94
   84522:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84524:	980c      	ldr	r0, [sp, #48]	; 0x30
   84526:	f004 fb1f 	bl	88b68 <__ssprint_r>
   8452a:	2800      	cmp	r0, #0
   8452c:	f47f ac9b 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84530:	46c8      	mov	r8, r9
   84532:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84536:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84538:	e533      	b.n	83fa2 <_svfprintf_r+0x2f6>
   8453a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8453c:	2b65      	cmp	r3, #101	; 0x65
   8453e:	f340 809a 	ble.w	84676 <_svfprintf_r+0x9ca>
   84542:	a815      	add	r0, sp, #84	; 0x54
   84544:	c80d      	ldmia	r0, {r0, r2, r3}
   84546:	9914      	ldr	r1, [sp, #80]	; 0x50
   84548:	f005 f9a8 	bl	8989c <__aeabi_dcmpeq>
   8454c:	2800      	cmp	r0, #0
   8454e:	f000 8193 	beq.w	84878 <_svfprintf_r+0xbcc>
   84552:	2101      	movs	r1, #1
   84554:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84556:	4ab5      	ldr	r2, [pc, #724]	; (8482c <_svfprintf_r+0xb80>)
   84558:	440b      	add	r3, r1
   8455a:	440c      	add	r4, r1
   8455c:	2b07      	cmp	r3, #7
   8455e:	9427      	str	r4, [sp, #156]	; 0x9c
   84560:	9326      	str	r3, [sp, #152]	; 0x98
   84562:	f8c8 1004 	str.w	r1, [r8, #4]
   84566:	f8c8 2000 	str.w	r2, [r8]
   8456a:	f300 83c6 	bgt.w	84cfa <_svfprintf_r+0x104e>
   8456e:	f108 0808 	add.w	r8, r8, #8
   84572:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84574:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84576:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84578:	4293      	cmp	r3, r2
   8457a:	db03      	blt.n	84584 <_svfprintf_r+0x8d8>
   8457c:	9b07      	ldr	r3, [sp, #28]
   8457e:	07dd      	lsls	r5, r3, #31
   84580:	f57f ad86 	bpl.w	84090 <_svfprintf_r+0x3e4>
   84584:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84586:	9919      	ldr	r1, [sp, #100]	; 0x64
   84588:	3301      	adds	r3, #1
   8458a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   8458c:	440c      	add	r4, r1
   8458e:	2b07      	cmp	r3, #7
   84590:	f8c8 2000 	str.w	r2, [r8]
   84594:	f8c8 1004 	str.w	r1, [r8, #4]
   84598:	9427      	str	r4, [sp, #156]	; 0x9c
   8459a:	9326      	str	r3, [sp, #152]	; 0x98
   8459c:	f300 83c4 	bgt.w	84d28 <_svfprintf_r+0x107c>
   845a0:	f108 0808 	add.w	r8, r8, #8
   845a4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   845a6:	1e5e      	subs	r6, r3, #1
   845a8:	2e00      	cmp	r6, #0
   845aa:	f77f ad71 	ble.w	84090 <_svfprintf_r+0x3e4>
   845ae:	2e10      	cmp	r6, #16
   845b0:	f340 8575 	ble.w	8509e <_svfprintf_r+0x13f2>
   845b4:	4622      	mov	r2, r4
   845b6:	2710      	movs	r7, #16
   845b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   845ba:	4d9d      	ldr	r5, [pc, #628]	; (84830 <_svfprintf_r+0xb84>)
   845bc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   845c0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   845c2:	e005      	b.n	845d0 <_svfprintf_r+0x924>
   845c4:	f108 0808 	add.w	r8, r8, #8
   845c8:	3e10      	subs	r6, #16
   845ca:	2e10      	cmp	r6, #16
   845cc:	f340 8225 	ble.w	84a1a <_svfprintf_r+0xd6e>
   845d0:	3301      	adds	r3, #1
   845d2:	3210      	adds	r2, #16
   845d4:	2b07      	cmp	r3, #7
   845d6:	9227      	str	r2, [sp, #156]	; 0x9c
   845d8:	9326      	str	r3, [sp, #152]	; 0x98
   845da:	e888 00a0 	stmia.w	r8, {r5, r7}
   845de:	ddf1      	ble.n	845c4 <_svfprintf_r+0x918>
   845e0:	aa25      	add	r2, sp, #148	; 0x94
   845e2:	4621      	mov	r1, r4
   845e4:	4658      	mov	r0, fp
   845e6:	f004 fabf 	bl	88b68 <__ssprint_r>
   845ea:	2800      	cmp	r0, #0
   845ec:	f47f ac3b 	bne.w	83e66 <_svfprintf_r+0x1ba>
   845f0:	46c8      	mov	r8, r9
   845f2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   845f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   845f6:	e7e7      	b.n	845c8 <_svfprintf_r+0x91c>
   845f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   845fa:	9a08      	ldr	r2, [sp, #32]
   845fc:	1a9f      	subs	r7, r3, r2
   845fe:	2f00      	cmp	r7, #0
   84600:	f77f acf6 	ble.w	83ff0 <_svfprintf_r+0x344>
   84604:	2f10      	cmp	r7, #16
   84606:	f340 84a8 	ble.w	84f5a <_svfprintf_r+0x12ae>
   8460a:	4d89      	ldr	r5, [pc, #548]	; (84830 <_svfprintf_r+0xb84>)
   8460c:	4642      	mov	r2, r8
   8460e:	4621      	mov	r1, r4
   84610:	46b0      	mov	r8, r6
   84612:	f04f 0b10 	mov.w	fp, #16
   84616:	462e      	mov	r6, r5
   84618:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8461a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8461c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   8461e:	e004      	b.n	8462a <_svfprintf_r+0x97e>
   84620:	3f10      	subs	r7, #16
   84622:	2f10      	cmp	r7, #16
   84624:	f102 0208 	add.w	r2, r2, #8
   84628:	dd15      	ble.n	84656 <_svfprintf_r+0x9aa>
   8462a:	3301      	adds	r3, #1
   8462c:	3110      	adds	r1, #16
   8462e:	2b07      	cmp	r3, #7
   84630:	9127      	str	r1, [sp, #156]	; 0x9c
   84632:	9326      	str	r3, [sp, #152]	; 0x98
   84634:	e882 0840 	stmia.w	r2, {r6, fp}
   84638:	ddf2      	ble.n	84620 <_svfprintf_r+0x974>
   8463a:	aa25      	add	r2, sp, #148	; 0x94
   8463c:	4629      	mov	r1, r5
   8463e:	4620      	mov	r0, r4
   84640:	f004 fa92 	bl	88b68 <__ssprint_r>
   84644:	2800      	cmp	r0, #0
   84646:	f47f ac0e 	bne.w	83e66 <_svfprintf_r+0x1ba>
   8464a:	3f10      	subs	r7, #16
   8464c:	2f10      	cmp	r7, #16
   8464e:	464a      	mov	r2, r9
   84650:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84652:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84654:	dce9      	bgt.n	8462a <_svfprintf_r+0x97e>
   84656:	4635      	mov	r5, r6
   84658:	460c      	mov	r4, r1
   8465a:	4646      	mov	r6, r8
   8465c:	4690      	mov	r8, r2
   8465e:	3301      	adds	r3, #1
   84660:	443c      	add	r4, r7
   84662:	2b07      	cmp	r3, #7
   84664:	9427      	str	r4, [sp, #156]	; 0x9c
   84666:	9326      	str	r3, [sp, #152]	; 0x98
   84668:	e888 00a0 	stmia.w	r8, {r5, r7}
   8466c:	f300 829e 	bgt.w	84bac <_svfprintf_r+0xf00>
   84670:	f108 0808 	add.w	r8, r8, #8
   84674:	e4bc      	b.n	83ff0 <_svfprintf_r+0x344>
   84676:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84678:	2b01      	cmp	r3, #1
   8467a:	f340 824f 	ble.w	84b1c <_svfprintf_r+0xe70>
   8467e:	2301      	movs	r3, #1
   84680:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84682:	441c      	add	r4, r3
   84684:	441f      	add	r7, r3
   84686:	2f07      	cmp	r7, #7
   84688:	9427      	str	r4, [sp, #156]	; 0x9c
   8468a:	f8c8 6000 	str.w	r6, [r8]
   8468e:	9726      	str	r7, [sp, #152]	; 0x98
   84690:	f8c8 3004 	str.w	r3, [r8, #4]
   84694:	f300 825f 	bgt.w	84b56 <_svfprintf_r+0xeaa>
   84698:	f108 0808 	add.w	r8, r8, #8
   8469c:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8469e:	3701      	adds	r7, #1
   846a0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   846a2:	4414      	add	r4, r2
   846a4:	2f07      	cmp	r7, #7
   846a6:	9427      	str	r4, [sp, #156]	; 0x9c
   846a8:	9726      	str	r7, [sp, #152]	; 0x98
   846aa:	f8c8 3000 	str.w	r3, [r8]
   846ae:	f8c8 2004 	str.w	r2, [r8, #4]
   846b2:	f300 825c 	bgt.w	84b6e <_svfprintf_r+0xec2>
   846b6:	f108 0808 	add.w	r8, r8, #8
   846ba:	a815      	add	r0, sp, #84	; 0x54
   846bc:	c80d      	ldmia	r0, {r0, r2, r3}
   846be:	9914      	ldr	r1, [sp, #80]	; 0x50
   846c0:	f005 f8ec 	bl	8989c <__aeabi_dcmpeq>
   846c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   846c6:	2800      	cmp	r0, #0
   846c8:	f040 8141 	bne.w	8494e <_svfprintf_r+0xca2>
   846cc:	3b01      	subs	r3, #1
   846ce:	3701      	adds	r7, #1
   846d0:	3601      	adds	r6, #1
   846d2:	441c      	add	r4, r3
   846d4:	2f07      	cmp	r7, #7
   846d6:	f8c8 6000 	str.w	r6, [r8]
   846da:	9726      	str	r7, [sp, #152]	; 0x98
   846dc:	9427      	str	r4, [sp, #156]	; 0x9c
   846de:	f8c8 3004 	str.w	r3, [r8, #4]
   846e2:	f300 8166 	bgt.w	849b2 <_svfprintf_r+0xd06>
   846e6:	f108 0808 	add.w	r8, r8, #8
   846ea:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   846ec:	3701      	adds	r7, #1
   846ee:	4414      	add	r4, r2
   846f0:	ab21      	add	r3, sp, #132	; 0x84
   846f2:	2f07      	cmp	r7, #7
   846f4:	9427      	str	r4, [sp, #156]	; 0x9c
   846f6:	9726      	str	r7, [sp, #152]	; 0x98
   846f8:	f8c8 2004 	str.w	r2, [r8, #4]
   846fc:	f8c8 3000 	str.w	r3, [r8]
   84700:	f77f acc4 	ble.w	8408c <_svfprintf_r+0x3e0>
   84704:	aa25      	add	r2, sp, #148	; 0x94
   84706:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84708:	980c      	ldr	r0, [sp, #48]	; 0x30
   8470a:	f004 fa2d 	bl	88b68 <__ssprint_r>
   8470e:	2800      	cmp	r0, #0
   84710:	f47f aba9 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84714:	46c8      	mov	r8, r9
   84716:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84718:	e4ba      	b.n	84090 <_svfprintf_r+0x3e4>
   8471a:	aa25      	add	r2, sp, #148	; 0x94
   8471c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8471e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84720:	f004 fa22 	bl	88b68 <__ssprint_r>
   84724:	2800      	cmp	r0, #0
   84726:	f43f acfd 	beq.w	84124 <_svfprintf_r+0x478>
   8472a:	f7ff bb9c 	b.w	83e66 <_svfprintf_r+0x1ba>
   8472e:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84732:	2b01      	cmp	r3, #1
   84734:	f000 817e 	beq.w	84a34 <_svfprintf_r+0xd88>
   84738:	2b02      	cmp	r3, #2
   8473a:	d171      	bne.n	84820 <_svfprintf_r+0xb74>
   8473c:	f8cd b01c 	str.w	fp, [sp, #28]
   84740:	2400      	movs	r4, #0
   84742:	2500      	movs	r5, #0
   84744:	e5d4      	b.n	842f0 <_svfprintf_r+0x644>
   84746:	aa25      	add	r2, sp, #148	; 0x94
   84748:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8474a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8474c:	f004 fa0c 	bl	88b68 <__ssprint_r>
   84750:	2800      	cmp	r0, #0
   84752:	f47f ab88 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84756:	46c8      	mov	r8, r9
   84758:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8475a:	e486      	b.n	8406a <_svfprintf_r+0x3be>
   8475c:	aa25      	add	r2, sp, #148	; 0x94
   8475e:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84760:	980c      	ldr	r0, [sp, #48]	; 0x30
   84762:	f004 fa01 	bl	88b68 <__ssprint_r>
   84766:	2800      	cmp	r0, #0
   84768:	f47f ab7d 	bne.w	83e66 <_svfprintf_r+0x1ba>
   8476c:	46c8      	mov	r8, r9
   8476e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84770:	e429      	b.n	83fc6 <_svfprintf_r+0x31a>
   84772:	2001      	movs	r0, #1
   84774:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84776:	4a2d      	ldr	r2, [pc, #180]	; (8482c <_svfprintf_r+0xb80>)
   84778:	4403      	add	r3, r0
   8477a:	4404      	add	r4, r0
   8477c:	2b07      	cmp	r3, #7
   8477e:	9427      	str	r4, [sp, #156]	; 0x9c
   84780:	9326      	str	r3, [sp, #152]	; 0x98
   84782:	f8c8 0004 	str.w	r0, [r8, #4]
   84786:	f8c8 2000 	str.w	r2, [r8]
   8478a:	f340 82d8 	ble.w	84d3e <_svfprintf_r+0x1092>
   8478e:	aa25      	add	r2, sp, #148	; 0x94
   84790:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84792:	980c      	ldr	r0, [sp, #48]	; 0x30
   84794:	f004 f9e8 	bl	88b68 <__ssprint_r>
   84798:	2800      	cmp	r0, #0
   8479a:	f47f ab64 	bne.w	83e66 <_svfprintf_r+0x1ba>
   8479e:	46c8      	mov	r8, r9
   847a0:	991f      	ldr	r1, [sp, #124]	; 0x7c
   847a2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   847a4:	b929      	cbnz	r1, 847b2 <_svfprintf_r+0xb06>
   847a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   847a8:	b91b      	cbnz	r3, 847b2 <_svfprintf_r+0xb06>
   847aa:	9b07      	ldr	r3, [sp, #28]
   847ac:	07d8      	lsls	r0, r3, #31
   847ae:	f57f ac6f 	bpl.w	84090 <_svfprintf_r+0x3e4>
   847b2:	9819      	ldr	r0, [sp, #100]	; 0x64
   847b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
   847b6:	4602      	mov	r2, r0
   847b8:	3301      	adds	r3, #1
   847ba:	4422      	add	r2, r4
   847bc:	9c1a      	ldr	r4, [sp, #104]	; 0x68
   847be:	2b07      	cmp	r3, #7
   847c0:	9227      	str	r2, [sp, #156]	; 0x9c
   847c2:	f8c8 4000 	str.w	r4, [r8]
   847c6:	f8c8 0004 	str.w	r0, [r8, #4]
   847ca:	9326      	str	r3, [sp, #152]	; 0x98
   847cc:	f300 8431 	bgt.w	85032 <_svfprintf_r+0x1386>
   847d0:	f108 0808 	add.w	r8, r8, #8
   847d4:	2900      	cmp	r1, #0
   847d6:	f2c0 8409 	blt.w	84fec <_svfprintf_r+0x1340>
   847da:	9913      	ldr	r1, [sp, #76]	; 0x4c
   847dc:	3301      	adds	r3, #1
   847de:	188c      	adds	r4, r1, r2
   847e0:	2b07      	cmp	r3, #7
   847e2:	9427      	str	r4, [sp, #156]	; 0x9c
   847e4:	9326      	str	r3, [sp, #152]	; 0x98
   847e6:	f8c8 6000 	str.w	r6, [r8]
   847ea:	f8c8 1004 	str.w	r1, [r8, #4]
   847ee:	f77f ac4d 	ble.w	8408c <_svfprintf_r+0x3e0>
   847f2:	aa25      	add	r2, sp, #148	; 0x94
   847f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   847f6:	980c      	ldr	r0, [sp, #48]	; 0x30
   847f8:	f004 f9b6 	bl	88b68 <__ssprint_r>
   847fc:	2800      	cmp	r0, #0
   847fe:	f47f ab32 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84802:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84804:	46c8      	mov	r8, r9
   84806:	e443      	b.n	84090 <_svfprintf_r+0x3e4>
   84808:	aa25      	add	r2, sp, #148	; 0x94
   8480a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8480c:	980c      	ldr	r0, [sp, #48]	; 0x30
   8480e:	f004 f9ab 	bl	88b68 <__ssprint_r>
   84812:	2800      	cmp	r0, #0
   84814:	f47f ab27 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84818:	46c8      	mov	r8, r9
   8481a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8481c:	f7ff bbe5 	b.w	83fea <_svfprintf_r+0x33e>
   84820:	2400      	movs	r4, #0
   84822:	2500      	movs	r5, #0
   84824:	f8cd b01c 	str.w	fp, [sp, #28]
   84828:	4649      	mov	r1, r9
   8482a:	e004      	b.n	84836 <_svfprintf_r+0xb8a>
   8482c:	00089dbc 	.word	0x00089dbc
   84830:	00089dd0 	.word	0x00089dd0
   84834:	4631      	mov	r1, r6
   84836:	08e2      	lsrs	r2, r4, #3
   84838:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   8483c:	08e8      	lsrs	r0, r5, #3
   8483e:	f004 0307 	and.w	r3, r4, #7
   84842:	4605      	mov	r5, r0
   84844:	4614      	mov	r4, r2
   84846:	3330      	adds	r3, #48	; 0x30
   84848:	ea54 0205 	orrs.w	r2, r4, r5
   8484c:	f801 3c01 	strb.w	r3, [r1, #-1]
   84850:	f101 36ff 	add.w	r6, r1, #4294967295
   84854:	d1ee      	bne.n	84834 <_svfprintf_r+0xb88>
   84856:	9a07      	ldr	r2, [sp, #28]
   84858:	07d2      	lsls	r2, r2, #31
   8485a:	f57f ad59 	bpl.w	84310 <_svfprintf_r+0x664>
   8485e:	2b30      	cmp	r3, #48	; 0x30
   84860:	f43f ad56 	beq.w	84310 <_svfprintf_r+0x664>
   84864:	2330      	movs	r3, #48	; 0x30
   84866:	3902      	subs	r1, #2
   84868:	f806 3c01 	strb.w	r3, [r6, #-1]
   8486c:	eba9 0301 	sub.w	r3, r9, r1
   84870:	930e      	str	r3, [sp, #56]	; 0x38
   84872:	460e      	mov	r6, r1
   84874:	f7ff bb36 	b.w	83ee4 <_svfprintf_r+0x238>
   84878:	991f      	ldr	r1, [sp, #124]	; 0x7c
   8487a:	2900      	cmp	r1, #0
   8487c:	f77f af79 	ble.w	84772 <_svfprintf_r+0xac6>
   84880:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84882:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84884:	4293      	cmp	r3, r2
   84886:	bfa8      	it	ge
   84888:	4613      	movge	r3, r2
   8488a:	2b00      	cmp	r3, #0
   8488c:	461f      	mov	r7, r3
   8488e:	dd0b      	ble.n	848a8 <_svfprintf_r+0xbfc>
   84890:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84892:	443c      	add	r4, r7
   84894:	3301      	adds	r3, #1
   84896:	2b07      	cmp	r3, #7
   84898:	9427      	str	r4, [sp, #156]	; 0x9c
   8489a:	e888 00c0 	stmia.w	r8, {r6, r7}
   8489e:	9326      	str	r3, [sp, #152]	; 0x98
   848a0:	f300 82fb 	bgt.w	84e9a <_svfprintf_r+0x11ee>
   848a4:	f108 0808 	add.w	r8, r8, #8
   848a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   848aa:	2f00      	cmp	r7, #0
   848ac:	bfa8      	it	ge
   848ae:	1bdb      	subge	r3, r3, r7
   848b0:	2b00      	cmp	r3, #0
   848b2:	461f      	mov	r7, r3
   848b4:	f340 80d7 	ble.w	84a66 <_svfprintf_r+0xdba>
   848b8:	2b10      	cmp	r3, #16
   848ba:	f340 8434 	ble.w	85126 <_svfprintf_r+0x147a>
   848be:	4dba      	ldr	r5, [pc, #744]	; (84ba8 <_svfprintf_r+0xefc>)
   848c0:	4642      	mov	r2, r8
   848c2:	4621      	mov	r1, r4
   848c4:	46b0      	mov	r8, r6
   848c6:	f04f 0b10 	mov.w	fp, #16
   848ca:	462e      	mov	r6, r5
   848cc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   848ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   848d0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   848d2:	e004      	b.n	848de <_svfprintf_r+0xc32>
   848d4:	3208      	adds	r2, #8
   848d6:	3f10      	subs	r7, #16
   848d8:	2f10      	cmp	r7, #16
   848da:	f340 80b5 	ble.w	84a48 <_svfprintf_r+0xd9c>
   848de:	3301      	adds	r3, #1
   848e0:	3110      	adds	r1, #16
   848e2:	2b07      	cmp	r3, #7
   848e4:	9127      	str	r1, [sp, #156]	; 0x9c
   848e6:	9326      	str	r3, [sp, #152]	; 0x98
   848e8:	e882 0840 	stmia.w	r2, {r6, fp}
   848ec:	ddf2      	ble.n	848d4 <_svfprintf_r+0xc28>
   848ee:	aa25      	add	r2, sp, #148	; 0x94
   848f0:	4629      	mov	r1, r5
   848f2:	4620      	mov	r0, r4
   848f4:	f004 f938 	bl	88b68 <__ssprint_r>
   848f8:	2800      	cmp	r0, #0
   848fa:	f47f aab4 	bne.w	83e66 <_svfprintf_r+0x1ba>
   848fe:	464a      	mov	r2, r9
   84900:	9927      	ldr	r1, [sp, #156]	; 0x9c
   84902:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84904:	e7e7      	b.n	848d6 <_svfprintf_r+0xc2a>
   84906:	2d00      	cmp	r5, #0
   84908:	bf08      	it	eq
   8490a:	2c0a      	cmpeq	r4, #10
   8490c:	f0c0 8090 	bcc.w	84a30 <_svfprintf_r+0xd84>
   84910:	464e      	mov	r6, r9
   84912:	4620      	mov	r0, r4
   84914:	4629      	mov	r1, r5
   84916:	220a      	movs	r2, #10
   84918:	2300      	movs	r3, #0
   8491a:	f005 f82f 	bl	8997c <__aeabi_uldivmod>
   8491e:	3230      	adds	r2, #48	; 0x30
   84920:	f806 2d01 	strb.w	r2, [r6, #-1]!
   84924:	4620      	mov	r0, r4
   84926:	4629      	mov	r1, r5
   84928:	2300      	movs	r3, #0
   8492a:	220a      	movs	r2, #10
   8492c:	f005 f826 	bl	8997c <__aeabi_uldivmod>
   84930:	4604      	mov	r4, r0
   84932:	460d      	mov	r5, r1
   84934:	ea54 0305 	orrs.w	r3, r4, r5
   84938:	d1eb      	bne.n	84912 <_svfprintf_r+0xc66>
   8493a:	eba9 0306 	sub.w	r3, r9, r6
   8493e:	930e      	str	r3, [sp, #56]	; 0x38
   84940:	f7ff bad0 	b.w	83ee4 <_svfprintf_r+0x238>
   84944:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84946:	464e      	mov	r6, r9
   84948:	930e      	str	r3, [sp, #56]	; 0x38
   8494a:	f7ff bacb 	b.w	83ee4 <_svfprintf_r+0x238>
   8494e:	1e5e      	subs	r6, r3, #1
   84950:	2e00      	cmp	r6, #0
   84952:	f77f aeca 	ble.w	846ea <_svfprintf_r+0xa3e>
   84956:	2e10      	cmp	r6, #16
   84958:	f340 83e3 	ble.w	85122 <_svfprintf_r+0x1476>
   8495c:	4622      	mov	r2, r4
   8495e:	f04f 0b10 	mov.w	fp, #16
   84962:	4d91      	ldr	r5, [pc, #580]	; (84ba8 <_svfprintf_r+0xefc>)
   84964:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84966:	e004      	b.n	84972 <_svfprintf_r+0xcc6>
   84968:	3e10      	subs	r6, #16
   8496a:	2e10      	cmp	r6, #16
   8496c:	f108 0808 	add.w	r8, r8, #8
   84970:	dd15      	ble.n	8499e <_svfprintf_r+0xcf2>
   84972:	3701      	adds	r7, #1
   84974:	3210      	adds	r2, #16
   84976:	2f07      	cmp	r7, #7
   84978:	9227      	str	r2, [sp, #156]	; 0x9c
   8497a:	9726      	str	r7, [sp, #152]	; 0x98
   8497c:	e888 0820 	stmia.w	r8, {r5, fp}
   84980:	ddf2      	ble.n	84968 <_svfprintf_r+0xcbc>
   84982:	aa25      	add	r2, sp, #148	; 0x94
   84984:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84986:	4620      	mov	r0, r4
   84988:	f004 f8ee 	bl	88b68 <__ssprint_r>
   8498c:	2800      	cmp	r0, #0
   8498e:	f47f aa6a 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84992:	3e10      	subs	r6, #16
   84994:	2e10      	cmp	r6, #16
   84996:	46c8      	mov	r8, r9
   84998:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8499a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   8499c:	dce9      	bgt.n	84972 <_svfprintf_r+0xcc6>
   8499e:	4614      	mov	r4, r2
   849a0:	3701      	adds	r7, #1
   849a2:	4434      	add	r4, r6
   849a4:	2f07      	cmp	r7, #7
   849a6:	9427      	str	r4, [sp, #156]	; 0x9c
   849a8:	9726      	str	r7, [sp, #152]	; 0x98
   849aa:	e888 0060 	stmia.w	r8, {r5, r6}
   849ae:	f77f ae9a 	ble.w	846e6 <_svfprintf_r+0xa3a>
   849b2:	aa25      	add	r2, sp, #148	; 0x94
   849b4:	990b      	ldr	r1, [sp, #44]	; 0x2c
   849b6:	980c      	ldr	r0, [sp, #48]	; 0x30
   849b8:	f004 f8d6 	bl	88b68 <__ssprint_r>
   849bc:	2800      	cmp	r0, #0
   849be:	f47f aa52 	bne.w	83e66 <_svfprintf_r+0x1ba>
   849c2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   849c4:	9f26      	ldr	r7, [sp, #152]	; 0x98
   849c6:	46c8      	mov	r8, r9
   849c8:	e68f      	b.n	846ea <_svfprintf_r+0xa3e>
   849ca:	3204      	adds	r2, #4
   849cc:	681c      	ldr	r4, [r3, #0]
   849ce:	2500      	movs	r5, #0
   849d0:	2301      	movs	r3, #1
   849d2:	920f      	str	r2, [sp, #60]	; 0x3c
   849d4:	f7ff ba68 	b.w	83ea8 <_svfprintf_r+0x1fc>
   849d8:	681c      	ldr	r4, [r3, #0]
   849da:	3304      	adds	r3, #4
   849dc:	930f      	str	r3, [sp, #60]	; 0x3c
   849de:	2500      	movs	r5, #0
   849e0:	e42a      	b.n	84238 <_svfprintf_r+0x58c>
   849e2:	681c      	ldr	r4, [r3, #0]
   849e4:	3304      	adds	r3, #4
   849e6:	17e5      	asrs	r5, r4, #31
   849e8:	4622      	mov	r2, r4
   849ea:	930f      	str	r3, [sp, #60]	; 0x3c
   849ec:	462b      	mov	r3, r5
   849ee:	2a00      	cmp	r2, #0
   849f0:	f173 0300 	sbcs.w	r3, r3, #0
   849f4:	f6bf ac68 	bge.w	842c8 <_svfprintf_r+0x61c>
   849f8:	272d      	movs	r7, #45	; 0x2d
   849fa:	4264      	negs	r4, r4
   849fc:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   84a00:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   84a04:	2301      	movs	r3, #1
   84a06:	f7ff ba53 	b.w	83eb0 <_svfprintf_r+0x204>
   84a0a:	990f      	ldr	r1, [sp, #60]	; 0x3c
   84a0c:	2500      	movs	r5, #0
   84a0e:	460a      	mov	r2, r1
   84a10:	3204      	adds	r2, #4
   84a12:	680c      	ldr	r4, [r1, #0]
   84a14:	920f      	str	r2, [sp, #60]	; 0x3c
   84a16:	f7ff ba47 	b.w	83ea8 <_svfprintf_r+0x1fc>
   84a1a:	4614      	mov	r4, r2
   84a1c:	3301      	adds	r3, #1
   84a1e:	4434      	add	r4, r6
   84a20:	2b07      	cmp	r3, #7
   84a22:	9427      	str	r4, [sp, #156]	; 0x9c
   84a24:	9326      	str	r3, [sp, #152]	; 0x98
   84a26:	e888 0060 	stmia.w	r8, {r5, r6}
   84a2a:	f77f ab2f 	ble.w	8408c <_svfprintf_r+0x3e0>
   84a2e:	e6e0      	b.n	847f2 <_svfprintf_r+0xb46>
   84a30:	f8dd b01c 	ldr.w	fp, [sp, #28]
   84a34:	2301      	movs	r3, #1
   84a36:	ae42      	add	r6, sp, #264	; 0x108
   84a38:	3430      	adds	r4, #48	; 0x30
   84a3a:	f8cd b01c 	str.w	fp, [sp, #28]
   84a3e:	f806 4d41 	strb.w	r4, [r6, #-65]!
   84a42:	930e      	str	r3, [sp, #56]	; 0x38
   84a44:	f7ff ba4e 	b.w	83ee4 <_svfprintf_r+0x238>
   84a48:	4635      	mov	r5, r6
   84a4a:	460c      	mov	r4, r1
   84a4c:	4646      	mov	r6, r8
   84a4e:	4690      	mov	r8, r2
   84a50:	3301      	adds	r3, #1
   84a52:	443c      	add	r4, r7
   84a54:	2b07      	cmp	r3, #7
   84a56:	9427      	str	r4, [sp, #156]	; 0x9c
   84a58:	9326      	str	r3, [sp, #152]	; 0x98
   84a5a:	e888 00a0 	stmia.w	r8, {r5, r7}
   84a5e:	f300 8246 	bgt.w	84eee <_svfprintf_r+0x1242>
   84a62:	f108 0808 	add.w	r8, r8, #8
   84a66:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84a68:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84a6a:	429a      	cmp	r2, r3
   84a6c:	db45      	blt.n	84afa <_svfprintf_r+0xe4e>
   84a6e:	9b07      	ldr	r3, [sp, #28]
   84a70:	07d9      	lsls	r1, r3, #31
   84a72:	d442      	bmi.n	84afa <_svfprintf_r+0xe4e>
   84a74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84a76:	9812      	ldr	r0, [sp, #72]	; 0x48
   84a78:	1a9a      	subs	r2, r3, r2
   84a7a:	1a1d      	subs	r5, r3, r0
   84a7c:	4295      	cmp	r5, r2
   84a7e:	bfa8      	it	ge
   84a80:	4615      	movge	r5, r2
   84a82:	2d00      	cmp	r5, #0
   84a84:	dd0e      	ble.n	84aa4 <_svfprintf_r+0xdf8>
   84a86:	9926      	ldr	r1, [sp, #152]	; 0x98
   84a88:	4406      	add	r6, r0
   84a8a:	3101      	adds	r1, #1
   84a8c:	442c      	add	r4, r5
   84a8e:	2907      	cmp	r1, #7
   84a90:	f8c8 6000 	str.w	r6, [r8]
   84a94:	9427      	str	r4, [sp, #156]	; 0x9c
   84a96:	f8c8 5004 	str.w	r5, [r8, #4]
   84a9a:	9126      	str	r1, [sp, #152]	; 0x98
   84a9c:	f300 8216 	bgt.w	84ecc <_svfprintf_r+0x1220>
   84aa0:	f108 0808 	add.w	r8, r8, #8
   84aa4:	2d00      	cmp	r5, #0
   84aa6:	bfb4      	ite	lt
   84aa8:	4616      	movlt	r6, r2
   84aaa:	1b56      	subge	r6, r2, r5
   84aac:	2e00      	cmp	r6, #0
   84aae:	f77f aaef 	ble.w	84090 <_svfprintf_r+0x3e4>
   84ab2:	2e10      	cmp	r6, #16
   84ab4:	f340 82f3 	ble.w	8509e <_svfprintf_r+0x13f2>
   84ab8:	4622      	mov	r2, r4
   84aba:	2710      	movs	r7, #16
   84abc:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84abe:	4d3a      	ldr	r5, [pc, #232]	; (84ba8 <_svfprintf_r+0xefc>)
   84ac0:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84ac4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   84ac6:	e004      	b.n	84ad2 <_svfprintf_r+0xe26>
   84ac8:	f108 0808 	add.w	r8, r8, #8
   84acc:	3e10      	subs	r6, #16
   84ace:	2e10      	cmp	r6, #16
   84ad0:	dda3      	ble.n	84a1a <_svfprintf_r+0xd6e>
   84ad2:	3301      	adds	r3, #1
   84ad4:	3210      	adds	r2, #16
   84ad6:	2b07      	cmp	r3, #7
   84ad8:	9227      	str	r2, [sp, #156]	; 0x9c
   84ada:	9326      	str	r3, [sp, #152]	; 0x98
   84adc:	e888 00a0 	stmia.w	r8, {r5, r7}
   84ae0:	ddf2      	ble.n	84ac8 <_svfprintf_r+0xe1c>
   84ae2:	aa25      	add	r2, sp, #148	; 0x94
   84ae4:	4621      	mov	r1, r4
   84ae6:	4658      	mov	r0, fp
   84ae8:	f004 f83e 	bl	88b68 <__ssprint_r>
   84aec:	2800      	cmp	r0, #0
   84aee:	f47f a9ba 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84af2:	46c8      	mov	r8, r9
   84af4:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   84af6:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84af8:	e7e8      	b.n	84acc <_svfprintf_r+0xe20>
   84afa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84afc:	9819      	ldr	r0, [sp, #100]	; 0x64
   84afe:	3301      	adds	r3, #1
   84b00:	991a      	ldr	r1, [sp, #104]	; 0x68
   84b02:	4404      	add	r4, r0
   84b04:	2b07      	cmp	r3, #7
   84b06:	9427      	str	r4, [sp, #156]	; 0x9c
   84b08:	f8c8 1000 	str.w	r1, [r8]
   84b0c:	f8c8 0004 	str.w	r0, [r8, #4]
   84b10:	9326      	str	r3, [sp, #152]	; 0x98
   84b12:	f300 81cf 	bgt.w	84eb4 <_svfprintf_r+0x1208>
   84b16:	f108 0808 	add.w	r8, r8, #8
   84b1a:	e7ab      	b.n	84a74 <_svfprintf_r+0xdc8>
   84b1c:	9b07      	ldr	r3, [sp, #28]
   84b1e:	07da      	lsls	r2, r3, #31
   84b20:	f53f adad 	bmi.w	8467e <_svfprintf_r+0x9d2>
   84b24:	2301      	movs	r3, #1
   84b26:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84b28:	441c      	add	r4, r3
   84b2a:	441f      	add	r7, r3
   84b2c:	2f07      	cmp	r7, #7
   84b2e:	9427      	str	r4, [sp, #156]	; 0x9c
   84b30:	f8c8 6000 	str.w	r6, [r8]
   84b34:	9726      	str	r7, [sp, #152]	; 0x98
   84b36:	f8c8 3004 	str.w	r3, [r8, #4]
   84b3a:	f77f add4 	ble.w	846e6 <_svfprintf_r+0xa3a>
   84b3e:	aa25      	add	r2, sp, #148	; 0x94
   84b40:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b42:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b44:	f004 f810 	bl	88b68 <__ssprint_r>
   84b48:	2800      	cmp	r0, #0
   84b4a:	f47f a98c 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84b4e:	46c8      	mov	r8, r9
   84b50:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b52:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84b54:	e5c9      	b.n	846ea <_svfprintf_r+0xa3e>
   84b56:	aa25      	add	r2, sp, #148	; 0x94
   84b58:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b5a:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b5c:	f004 f804 	bl	88b68 <__ssprint_r>
   84b60:	2800      	cmp	r0, #0
   84b62:	f47f a980 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84b66:	46c8      	mov	r8, r9
   84b68:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b6a:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84b6c:	e596      	b.n	8469c <_svfprintf_r+0x9f0>
   84b6e:	aa25      	add	r2, sp, #148	; 0x94
   84b70:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84b72:	980c      	ldr	r0, [sp, #48]	; 0x30
   84b74:	f003 fff8 	bl	88b68 <__ssprint_r>
   84b78:	2800      	cmp	r0, #0
   84b7a:	f47f a974 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84b7e:	46c8      	mov	r8, r9
   84b80:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84b82:	9f26      	ldr	r7, [sp, #152]	; 0x98
   84b84:	e599      	b.n	846ba <_svfprintf_r+0xa0e>
   84b86:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   84b88:	3407      	adds	r4, #7
   84b8a:	f024 0407 	bic.w	r4, r4, #7
   84b8e:	f104 0108 	add.w	r1, r4, #8
   84b92:	e9d4 2300 	ldrd	r2, r3, [r4]
   84b96:	910f      	str	r1, [sp, #60]	; 0x3c
   84b98:	4614      	mov	r4, r2
   84b9a:	461d      	mov	r5, r3
   84b9c:	f7ff bb8f 	b.w	842be <_svfprintf_r+0x612>
   84ba0:	464e      	mov	r6, r9
   84ba2:	f7ff b99f 	b.w	83ee4 <_svfprintf_r+0x238>
   84ba6:	bf00      	nop
   84ba8:	00089dd0 	.word	0x00089dd0
   84bac:	aa25      	add	r2, sp, #148	; 0x94
   84bae:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84bb0:	980c      	ldr	r0, [sp, #48]	; 0x30
   84bb2:	f003 ffd9 	bl	88b68 <__ssprint_r>
   84bb6:	2800      	cmp	r0, #0
   84bb8:	f47f a955 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84bbc:	46c8      	mov	r8, r9
   84bbe:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84bc0:	f7ff ba16 	b.w	83ff0 <_svfprintf_r+0x344>
   84bc4:	9c15      	ldr	r4, [sp, #84]	; 0x54
   84bc6:	4622      	mov	r2, r4
   84bc8:	4620      	mov	r0, r4
   84bca:	9c14      	ldr	r4, [sp, #80]	; 0x50
   84bcc:	4623      	mov	r3, r4
   84bce:	4621      	mov	r1, r4
   84bd0:	f004 fe96 	bl	89900 <__aeabi_dcmpun>
   84bd4:	2800      	cmp	r0, #0
   84bd6:	f040 8273 	bne.w	850c0 <_svfprintf_r+0x1414>
   84bda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84bdc:	3301      	adds	r3, #1
   84bde:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84be0:	f023 0320 	bic.w	r3, r3, #32
   84be4:	930e      	str	r3, [sp, #56]	; 0x38
   84be6:	f000 819c 	beq.w	84f22 <_svfprintf_r+0x1276>
   84bea:	2b47      	cmp	r3, #71	; 0x47
   84bec:	f000 80d6 	beq.w	84d9c <_svfprintf_r+0x10f0>
   84bf0:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
   84bf4:	9307      	str	r3, [sp, #28]
   84bf6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   84bf8:	1e1f      	subs	r7, r3, #0
   84bfa:	9b15      	ldr	r3, [sp, #84]	; 0x54
   84bfc:	9308      	str	r3, [sp, #32]
   84bfe:	bfb7      	itett	lt
   84c00:	463b      	movlt	r3, r7
   84c02:	2300      	movge	r3, #0
   84c04:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
   84c08:	232d      	movlt	r3, #45	; 0x2d
   84c0a:	9310      	str	r3, [sp, #64]	; 0x40
   84c0c:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84c0e:	2b66      	cmp	r3, #102	; 0x66
   84c10:	f000 8190 	beq.w	84f34 <_svfprintf_r+0x1288>
   84c14:	2b46      	cmp	r3, #70	; 0x46
   84c16:	f000 80a4 	beq.w	84d62 <_svfprintf_r+0x10b6>
   84c1a:	2002      	movs	r0, #2
   84c1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84c1e:	a923      	add	r1, sp, #140	; 0x8c
   84c20:	2b45      	cmp	r3, #69	; 0x45
   84c22:	bf0a      	itet	eq
   84c24:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
   84c26:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   84c28:	1c5d      	addeq	r5, r3, #1
   84c2a:	e88d 0021 	stmia.w	sp, {r0, r5}
   84c2e:	9104      	str	r1, [sp, #16]
   84c30:	a820      	add	r0, sp, #128	; 0x80
   84c32:	a91f      	add	r1, sp, #124	; 0x7c
   84c34:	463b      	mov	r3, r7
   84c36:	9003      	str	r0, [sp, #12]
   84c38:	9a08      	ldr	r2, [sp, #32]
   84c3a:	9102      	str	r1, [sp, #8]
   84c3c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84c3e:	f001 fa87 	bl	86150 <_dtoa_r>
   84c42:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84c44:	4606      	mov	r6, r0
   84c46:	2b67      	cmp	r3, #103	; 0x67
   84c48:	f040 81ba 	bne.w	84fc0 <_svfprintf_r+0x1314>
   84c4c:	f01b 0f01 	tst.w	fp, #1
   84c50:	f000 8223 	beq.w	8509a <_svfprintf_r+0x13ee>
   84c54:	1974      	adds	r4, r6, r5
   84c56:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84c58:	9808      	ldr	r0, [sp, #32]
   84c5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   84c5c:	4639      	mov	r1, r7
   84c5e:	f004 fe1d 	bl	8989c <__aeabi_dcmpeq>
   84c62:	2800      	cmp	r0, #0
   84c64:	f040 8124 	bne.w	84eb0 <_svfprintf_r+0x1204>
   84c68:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84c6a:	42a3      	cmp	r3, r4
   84c6c:	d206      	bcs.n	84c7c <_svfprintf_r+0xfd0>
   84c6e:	2130      	movs	r1, #48	; 0x30
   84c70:	1c5a      	adds	r2, r3, #1
   84c72:	9223      	str	r2, [sp, #140]	; 0x8c
   84c74:	7019      	strb	r1, [r3, #0]
   84c76:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84c78:	429c      	cmp	r4, r3
   84c7a:	d8f9      	bhi.n	84c70 <_svfprintf_r+0xfc4>
   84c7c:	1b9b      	subs	r3, r3, r6
   84c7e:	9313      	str	r3, [sp, #76]	; 0x4c
   84c80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84c82:	2b47      	cmp	r3, #71	; 0x47
   84c84:	f000 80a2 	beq.w	84dcc <_svfprintf_r+0x1120>
   84c88:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84c8a:	2b65      	cmp	r3, #101	; 0x65
   84c8c:	f340 81a7 	ble.w	84fde <_svfprintf_r+0x1332>
   84c90:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84c92:	2b66      	cmp	r3, #102	; 0x66
   84c94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84c96:	9312      	str	r3, [sp, #72]	; 0x48
   84c98:	f000 8171 	beq.w	84f7e <_svfprintf_r+0x12d2>
   84c9c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84c9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84ca0:	4619      	mov	r1, r3
   84ca2:	4291      	cmp	r1, r2
   84ca4:	f300 815d 	bgt.w	84f62 <_svfprintf_r+0x12b6>
   84ca8:	f01b 0f01 	tst.w	fp, #1
   84cac:	f040 81f0 	bne.w	85090 <_svfprintf_r+0x13e4>
   84cb0:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   84cb4:	9308      	str	r3, [sp, #32]
   84cb6:	2367      	movs	r3, #103	; 0x67
   84cb8:	920e      	str	r2, [sp, #56]	; 0x38
   84cba:	9311      	str	r3, [sp, #68]	; 0x44
   84cbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84cbe:	2b00      	cmp	r3, #0
   84cc0:	d17d      	bne.n	84dbe <_svfprintf_r+0x1112>
   84cc2:	930a      	str	r3, [sp, #40]	; 0x28
   84cc4:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84cc8:	f7ff b914 	b.w	83ef4 <_svfprintf_r+0x248>
   84ccc:	f024 0407 	bic.w	r4, r4, #7
   84cd0:	6823      	ldr	r3, [r4, #0]
   84cd2:	9315      	str	r3, [sp, #84]	; 0x54
   84cd4:	6863      	ldr	r3, [r4, #4]
   84cd6:	9314      	str	r3, [sp, #80]	; 0x50
   84cd8:	f104 0308 	add.w	r3, r4, #8
   84cdc:	930f      	str	r3, [sp, #60]	; 0x3c
   84cde:	f7ff bb2f 	b.w	84340 <_svfprintf_r+0x694>
   84ce2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84ce4:	6813      	ldr	r3, [r2, #0]
   84ce6:	3204      	adds	r2, #4
   84ce8:	920f      	str	r2, [sp, #60]	; 0x3c
   84cea:	9a09      	ldr	r2, [sp, #36]	; 0x24
   84cec:	601a      	str	r2, [r3, #0]
   84cee:	f7ff b804 	b.w	83cfa <_svfprintf_r+0x4e>
   84cf2:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84cf4:	4daf      	ldr	r5, [pc, #700]	; (84fb4 <_svfprintf_r+0x1308>)
   84cf6:	f7ff b9ad 	b.w	84054 <_svfprintf_r+0x3a8>
   84cfa:	aa25      	add	r2, sp, #148	; 0x94
   84cfc:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84cfe:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d00:	f003 ff32 	bl	88b68 <__ssprint_r>
   84d04:	2800      	cmp	r0, #0
   84d06:	f47f a8ae 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84d0a:	46c8      	mov	r8, r9
   84d0c:	e431      	b.n	84572 <_svfprintf_r+0x8c6>
   84d0e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   84d10:	4613      	mov	r3, r2
   84d12:	3304      	adds	r3, #4
   84d14:	930f      	str	r3, [sp, #60]	; 0x3c
   84d16:	9b09      	ldr	r3, [sp, #36]	; 0x24
   84d18:	6811      	ldr	r1, [r2, #0]
   84d1a:	17dd      	asrs	r5, r3, #31
   84d1c:	461a      	mov	r2, r3
   84d1e:	462b      	mov	r3, r5
   84d20:	e9c1 2300 	strd	r2, r3, [r1]
   84d24:	f7fe bfe9 	b.w	83cfa <_svfprintf_r+0x4e>
   84d28:	aa25      	add	r2, sp, #148	; 0x94
   84d2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84d2c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d2e:	f003 ff1b 	bl	88b68 <__ssprint_r>
   84d32:	2800      	cmp	r0, #0
   84d34:	f47f a897 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84d38:	46c8      	mov	r8, r9
   84d3a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84d3c:	e432      	b.n	845a4 <_svfprintf_r+0x8f8>
   84d3e:	f108 0808 	add.w	r8, r8, #8
   84d42:	e52f      	b.n	847a4 <_svfprintf_r+0xaf8>
   84d44:	2140      	movs	r1, #64	; 0x40
   84d46:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d48:	f002 fe6a 	bl	87a20 <_malloc_r>
   84d4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84d4e:	6010      	str	r0, [r2, #0]
   84d50:	6110      	str	r0, [r2, #16]
   84d52:	2800      	cmp	r0, #0
   84d54:	f000 8214 	beq.w	85180 <_svfprintf_r+0x14d4>
   84d58:	2340      	movs	r3, #64	; 0x40
   84d5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84d5c:	6153      	str	r3, [r2, #20]
   84d5e:	f7fe bfbc 	b.w	83cda <_svfprintf_r+0x2e>
   84d62:	2003      	movs	r0, #3
   84d64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84d66:	a923      	add	r1, sp, #140	; 0x8c
   84d68:	e88d 0011 	stmia.w	sp, {r0, r4}
   84d6c:	9104      	str	r1, [sp, #16]
   84d6e:	a820      	add	r0, sp, #128	; 0x80
   84d70:	a91f      	add	r1, sp, #124	; 0x7c
   84d72:	9003      	str	r0, [sp, #12]
   84d74:	9a08      	ldr	r2, [sp, #32]
   84d76:	463b      	mov	r3, r7
   84d78:	9102      	str	r1, [sp, #8]
   84d7a:	980c      	ldr	r0, [sp, #48]	; 0x30
   84d7c:	f001 f9e8 	bl	86150 <_dtoa_r>
   84d80:	4625      	mov	r5, r4
   84d82:	4606      	mov	r6, r0
   84d84:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84d86:	1974      	adds	r4, r6, r5
   84d88:	2b46      	cmp	r3, #70	; 0x46
   84d8a:	f47f af64 	bne.w	84c56 <_svfprintf_r+0xfaa>
   84d8e:	7833      	ldrb	r3, [r6, #0]
   84d90:	2b30      	cmp	r3, #48	; 0x30
   84d92:	f000 8187 	beq.w	850a4 <_svfprintf_r+0x13f8>
   84d96:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
   84d98:	442c      	add	r4, r5
   84d9a:	e75c      	b.n	84c56 <_svfprintf_r+0xfaa>
   84d9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84d9e:	2b00      	cmp	r3, #0
   84da0:	bf08      	it	eq
   84da2:	2301      	moveq	r3, #1
   84da4:	930a      	str	r3, [sp, #40]	; 0x28
   84da6:	e723      	b.n	84bf0 <_svfprintf_r+0xf44>
   84da8:	4630      	mov	r0, r6
   84daa:	950a      	str	r5, [sp, #40]	; 0x28
   84dac:	f003 feae 	bl	88b0c <strlen>
   84db0:	940f      	str	r4, [sp, #60]	; 0x3c
   84db2:	900e      	str	r0, [sp, #56]	; 0x38
   84db4:	f8cd b01c 	str.w	fp, [sp, #28]
   84db8:	4603      	mov	r3, r0
   84dba:	f7ff b9e7 	b.w	8418c <_svfprintf_r+0x4e0>
   84dbe:	272d      	movs	r7, #45	; 0x2d
   84dc0:	2300      	movs	r3, #0
   84dc2:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
   84dc6:	930a      	str	r3, [sp, #40]	; 0x28
   84dc8:	f7ff b895 	b.w	83ef6 <_svfprintf_r+0x24a>
   84dcc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84dce:	461a      	mov	r2, r3
   84dd0:	9312      	str	r3, [sp, #72]	; 0x48
   84dd2:	3303      	adds	r3, #3
   84dd4:	db04      	blt.n	84de0 <_svfprintf_r+0x1134>
   84dd6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84dd8:	4619      	mov	r1, r3
   84dda:	4291      	cmp	r1, r2
   84ddc:	f6bf af5e 	bge.w	84c9c <_svfprintf_r+0xff0>
   84de0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84de2:	3b02      	subs	r3, #2
   84de4:	9311      	str	r3, [sp, #68]	; 0x44
   84de6:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84de8:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
   84dec:	3b01      	subs	r3, #1
   84dee:	2b00      	cmp	r3, #0
   84df0:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   84df4:	bfb4      	ite	lt
   84df6:	222d      	movlt	r2, #45	; 0x2d
   84df8:	222b      	movge	r2, #43	; 0x2b
   84dfa:	931f      	str	r3, [sp, #124]	; 0x7c
   84dfc:	bfb8      	it	lt
   84dfe:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   84e00:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   84e04:	bfb8      	it	lt
   84e06:	f1c3 0301 	rsblt	r3, r3, #1
   84e0a:	2b09      	cmp	r3, #9
   84e0c:	f340 811f 	ble.w	8504e <_svfprintf_r+0x13a2>
   84e10:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   84e14:	4601      	mov	r1, r0
   84e16:	4c68      	ldr	r4, [pc, #416]	; (84fb8 <_svfprintf_r+0x130c>)
   84e18:	e000      	b.n	84e1c <_svfprintf_r+0x1170>
   84e1a:	4611      	mov	r1, r2
   84e1c:	fb84 5203 	smull	r5, r2, r4, r3
   84e20:	17dd      	asrs	r5, r3, #31
   84e22:	ebc5 05a2 	rsb	r5, r5, r2, asr #2
   84e26:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   84e2a:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   84e2e:	3230      	adds	r2, #48	; 0x30
   84e30:	2d09      	cmp	r5, #9
   84e32:	f801 2c01 	strb.w	r2, [r1, #-1]
   84e36:	462b      	mov	r3, r5
   84e38:	f101 32ff 	add.w	r2, r1, #4294967295
   84e3c:	dced      	bgt.n	84e1a <_svfprintf_r+0x116e>
   84e3e:	3330      	adds	r3, #48	; 0x30
   84e40:	3902      	subs	r1, #2
   84e42:	b2dc      	uxtb	r4, r3
   84e44:	4288      	cmp	r0, r1
   84e46:	f802 4c01 	strb.w	r4, [r2, #-1]
   84e4a:	f240 8192 	bls.w	85172 <_svfprintf_r+0x14c6>
   84e4e:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   84e52:	4613      	mov	r3, r2
   84e54:	e001      	b.n	84e5a <_svfprintf_r+0x11ae>
   84e56:	f813 4b01 	ldrb.w	r4, [r3], #1
   84e5a:	4283      	cmp	r3, r0
   84e5c:	f801 4b01 	strb.w	r4, [r1], #1
   84e60:	d1f9      	bne.n	84e56 <_svfprintf_r+0x11aa>
   84e62:	3301      	adds	r3, #1
   84e64:	1a9b      	subs	r3, r3, r2
   84e66:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   84e6a:	4413      	add	r3, r2
   84e6c:	aa21      	add	r2, sp, #132	; 0x84
   84e6e:	1a9b      	subs	r3, r3, r2
   84e70:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   84e72:	931b      	str	r3, [sp, #108]	; 0x6c
   84e74:	2a01      	cmp	r2, #1
   84e76:	4413      	add	r3, r2
   84e78:	930e      	str	r3, [sp, #56]	; 0x38
   84e7a:	f340 8148 	ble.w	8510e <_svfprintf_r+0x1462>
   84e7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84e80:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84e82:	4413      	add	r3, r2
   84e84:	930e      	str	r3, [sp, #56]	; 0x38
   84e86:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84e8a:	9308      	str	r3, [sp, #32]
   84e8c:	2300      	movs	r3, #0
   84e8e:	9312      	str	r3, [sp, #72]	; 0x48
   84e90:	e714      	b.n	84cbc <_svfprintf_r+0x1010>
   84e92:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84e94:	9a26      	ldr	r2, [sp, #152]	; 0x98
   84e96:	f7ff b876 	b.w	83f86 <_svfprintf_r+0x2da>
   84e9a:	aa25      	add	r2, sp, #148	; 0x94
   84e9c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84e9e:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ea0:	f003 fe62 	bl	88b68 <__ssprint_r>
   84ea4:	2800      	cmp	r0, #0
   84ea6:	f47e afde 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84eaa:	46c8      	mov	r8, r9
   84eac:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84eae:	e4fb      	b.n	848a8 <_svfprintf_r+0xbfc>
   84eb0:	4623      	mov	r3, r4
   84eb2:	e6e3      	b.n	84c7c <_svfprintf_r+0xfd0>
   84eb4:	aa25      	add	r2, sp, #148	; 0x94
   84eb6:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84eb8:	980c      	ldr	r0, [sp, #48]	; 0x30
   84eba:	f003 fe55 	bl	88b68 <__ssprint_r>
   84ebe:	2800      	cmp	r0, #0
   84ec0:	f47e afd1 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84ec4:	46c8      	mov	r8, r9
   84ec6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84ec8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84eca:	e5d3      	b.n	84a74 <_svfprintf_r+0xdc8>
   84ecc:	aa25      	add	r2, sp, #148	; 0x94
   84ece:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84ed0:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ed2:	f003 fe49 	bl	88b68 <__ssprint_r>
   84ed6:	2800      	cmp	r0, #0
   84ed8:	f47e afc5 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84edc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   84ede:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84ee0:	46c8      	mov	r8, r9
   84ee2:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84ee4:	1a9a      	subs	r2, r3, r2
   84ee6:	e5dd      	b.n	84aa4 <_svfprintf_r+0xdf8>
   84ee8:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84eea:	f7ff b8fe 	b.w	840ea <_svfprintf_r+0x43e>
   84eee:	aa25      	add	r2, sp, #148	; 0x94
   84ef0:	990b      	ldr	r1, [sp, #44]	; 0x2c
   84ef2:	980c      	ldr	r0, [sp, #48]	; 0x30
   84ef4:	f003 fe38 	bl	88b68 <__ssprint_r>
   84ef8:	2800      	cmp	r0, #0
   84efa:	f47e afb4 	bne.w	83e66 <_svfprintf_r+0x1ba>
   84efe:	46c8      	mov	r8, r9
   84f00:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   84f02:	e5b0      	b.n	84a66 <_svfprintf_r+0xdba>
   84f04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84f06:	4637      	mov	r7, r6
   84f08:	2b06      	cmp	r3, #6
   84f0a:	bf28      	it	cs
   84f0c:	2306      	movcs	r3, #6
   84f0e:	960a      	str	r6, [sp, #40]	; 0x28
   84f10:	9612      	str	r6, [sp, #72]	; 0x48
   84f12:	9308      	str	r3, [sp, #32]
   84f14:	940f      	str	r4, [sp, #60]	; 0x3c
   84f16:	f8cd b01c 	str.w	fp, [sp, #28]
   84f1a:	930e      	str	r3, [sp, #56]	; 0x38
   84f1c:	4e27      	ldr	r6, [pc, #156]	; (84fbc <_svfprintf_r+0x1310>)
   84f1e:	f7fe bfe9 	b.w	83ef4 <_svfprintf_r+0x248>
   84f22:	2306      	movs	r3, #6
   84f24:	930a      	str	r3, [sp, #40]	; 0x28
   84f26:	e663      	b.n	84bf0 <_svfprintf_r+0xf44>
   84f28:	232d      	movs	r3, #45	; 0x2d
   84f2a:	461f      	mov	r7, r3
   84f2c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   84f30:	f7ff ba28 	b.w	84384 <_svfprintf_r+0x6d8>
   84f34:	2003      	movs	r0, #3
   84f36:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84f38:	a923      	add	r1, sp, #140	; 0x8c
   84f3a:	e88d 0011 	stmia.w	sp, {r0, r4}
   84f3e:	9104      	str	r1, [sp, #16]
   84f40:	a820      	add	r0, sp, #128	; 0x80
   84f42:	a91f      	add	r1, sp, #124	; 0x7c
   84f44:	9003      	str	r0, [sp, #12]
   84f46:	9a08      	ldr	r2, [sp, #32]
   84f48:	463b      	mov	r3, r7
   84f4a:	9102      	str	r1, [sp, #8]
   84f4c:	980c      	ldr	r0, [sp, #48]	; 0x30
   84f4e:	f001 f8ff 	bl	86150 <_dtoa_r>
   84f52:	4625      	mov	r5, r4
   84f54:	4606      	mov	r6, r0
   84f56:	1904      	adds	r4, r0, r4
   84f58:	e719      	b.n	84d8e <_svfprintf_r+0x10e2>
   84f5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84f5c:	4d15      	ldr	r5, [pc, #84]	; (84fb4 <_svfprintf_r+0x1308>)
   84f5e:	f7ff bb7e 	b.w	8465e <_svfprintf_r+0x9b2>
   84f62:	9a19      	ldr	r2, [sp, #100]	; 0x64
   84f64:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   84f66:	4413      	add	r3, r2
   84f68:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84f6a:	930e      	str	r3, [sp, #56]	; 0x38
   84f6c:	2a00      	cmp	r2, #0
   84f6e:	f340 80c7 	ble.w	85100 <_svfprintf_r+0x1454>
   84f72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   84f76:	9308      	str	r3, [sp, #32]
   84f78:	2367      	movs	r3, #103	; 0x67
   84f7a:	9311      	str	r3, [sp, #68]	; 0x44
   84f7c:	e69e      	b.n	84cbc <_svfprintf_r+0x1010>
   84f7e:	2b00      	cmp	r3, #0
   84f80:	f340 80e1 	ble.w	85146 <_svfprintf_r+0x149a>
   84f84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   84f86:	2a00      	cmp	r2, #0
   84f88:	f040 80b0 	bne.w	850ec <_svfprintf_r+0x1440>
   84f8c:	f01b 0f01 	tst.w	fp, #1
   84f90:	f040 80ac 	bne.w	850ec <_svfprintf_r+0x1440>
   84f94:	9308      	str	r3, [sp, #32]
   84f96:	930e      	str	r3, [sp, #56]	; 0x38
   84f98:	e690      	b.n	84cbc <_svfprintf_r+0x1010>
   84f9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   84f9c:	940f      	str	r4, [sp, #60]	; 0x3c
   84f9e:	9308      	str	r3, [sp, #32]
   84fa0:	930e      	str	r3, [sp, #56]	; 0x38
   84fa2:	900a      	str	r0, [sp, #40]	; 0x28
   84fa4:	f8cd b01c 	str.w	fp, [sp, #28]
   84fa8:	9012      	str	r0, [sp, #72]	; 0x48
   84faa:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
   84fae:	f7fe bfa1 	b.w	83ef4 <_svfprintf_r+0x248>
   84fb2:	bf00      	nop
   84fb4:	00089dd0 	.word	0x00089dd0
   84fb8:	66666667 	.word	0x66666667
   84fbc:	00089db4 	.word	0x00089db4
   84fc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   84fc2:	2b47      	cmp	r3, #71	; 0x47
   84fc4:	f47f ae46 	bne.w	84c54 <_svfprintf_r+0xfa8>
   84fc8:	f01b 0f01 	tst.w	fp, #1
   84fcc:	f47f aeda 	bne.w	84d84 <_svfprintf_r+0x10d8>
   84fd0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   84fd2:	1b9b      	subs	r3, r3, r6
   84fd4:	9313      	str	r3, [sp, #76]	; 0x4c
   84fd6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84fd8:	2b47      	cmp	r3, #71	; 0x47
   84fda:	f43f aef7 	beq.w	84dcc <_svfprintf_r+0x1120>
   84fde:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   84fe0:	9312      	str	r3, [sp, #72]	; 0x48
   84fe2:	e700      	b.n	84de6 <_svfprintf_r+0x113a>
   84fe4:	2000      	movs	r0, #0
   84fe6:	900a      	str	r0, [sp, #40]	; 0x28
   84fe8:	f7fe bebc 	b.w	83d64 <_svfprintf_r+0xb8>
   84fec:	424f      	negs	r7, r1
   84fee:	3110      	adds	r1, #16
   84ff0:	da35      	bge.n	8505e <_svfprintf_r+0x13b2>
   84ff2:	2410      	movs	r4, #16
   84ff4:	4d6a      	ldr	r5, [pc, #424]	; (851a0 <_svfprintf_r+0x14f4>)
   84ff6:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84ffa:	e004      	b.n	85006 <_svfprintf_r+0x135a>
   84ffc:	f108 0808 	add.w	r8, r8, #8
   85000:	3f10      	subs	r7, #16
   85002:	2f10      	cmp	r7, #16
   85004:	dd2c      	ble.n	85060 <_svfprintf_r+0x13b4>
   85006:	3301      	adds	r3, #1
   85008:	3210      	adds	r2, #16
   8500a:	2b07      	cmp	r3, #7
   8500c:	9227      	str	r2, [sp, #156]	; 0x9c
   8500e:	9326      	str	r3, [sp, #152]	; 0x98
   85010:	f8c8 5000 	str.w	r5, [r8]
   85014:	f8c8 4004 	str.w	r4, [r8, #4]
   85018:	ddf0      	ble.n	84ffc <_svfprintf_r+0x1350>
   8501a:	aa25      	add	r2, sp, #148	; 0x94
   8501c:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8501e:	4658      	mov	r0, fp
   85020:	f003 fda2 	bl	88b68 <__ssprint_r>
   85024:	2800      	cmp	r0, #0
   85026:	f47e af1e 	bne.w	83e66 <_svfprintf_r+0x1ba>
   8502a:	46c8      	mov	r8, r9
   8502c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8502e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85030:	e7e6      	b.n	85000 <_svfprintf_r+0x1354>
   85032:	aa25      	add	r2, sp, #148	; 0x94
   85034:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85036:	980c      	ldr	r0, [sp, #48]	; 0x30
   85038:	f003 fd96 	bl	88b68 <__ssprint_r>
   8503c:	2800      	cmp	r0, #0
   8503e:	f47e af12 	bne.w	83e66 <_svfprintf_r+0x1ba>
   85042:	46c8      	mov	r8, r9
   85044:	991f      	ldr	r1, [sp, #124]	; 0x7c
   85046:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   85048:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8504a:	f7ff bbc3 	b.w	847d4 <_svfprintf_r+0xb28>
   8504e:	2230      	movs	r2, #48	; 0x30
   85050:	4413      	add	r3, r2
   85052:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   85056:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   8505a:	ab22      	add	r3, sp, #136	; 0x88
   8505c:	e706      	b.n	84e6c <_svfprintf_r+0x11c0>
   8505e:	4d50      	ldr	r5, [pc, #320]	; (851a0 <_svfprintf_r+0x14f4>)
   85060:	3301      	adds	r3, #1
   85062:	443a      	add	r2, r7
   85064:	2b07      	cmp	r3, #7
   85066:	e888 00a0 	stmia.w	r8, {r5, r7}
   8506a:	9227      	str	r2, [sp, #156]	; 0x9c
   8506c:	9326      	str	r3, [sp, #152]	; 0x98
   8506e:	f108 0808 	add.w	r8, r8, #8
   85072:	f77f abb2 	ble.w	847da <_svfprintf_r+0xb2e>
   85076:	aa25      	add	r2, sp, #148	; 0x94
   85078:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8507a:	980c      	ldr	r0, [sp, #48]	; 0x30
   8507c:	f003 fd74 	bl	88b68 <__ssprint_r>
   85080:	2800      	cmp	r0, #0
   85082:	f47e aef0 	bne.w	83e66 <_svfprintf_r+0x1ba>
   85086:	46c8      	mov	r8, r9
   85088:	9a27      	ldr	r2, [sp, #156]	; 0x9c
   8508a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8508c:	f7ff bba5 	b.w	847da <_svfprintf_r+0xb2e>
   85090:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85092:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85094:	4413      	add	r3, r2
   85096:	930e      	str	r3, [sp, #56]	; 0x38
   85098:	e76b      	b.n	84f72 <_svfprintf_r+0x12c6>
   8509a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8509c:	e5ee      	b.n	84c7c <_svfprintf_r+0xfd0>
   8509e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   850a0:	4d3f      	ldr	r5, [pc, #252]	; (851a0 <_svfprintf_r+0x14f4>)
   850a2:	e4bb      	b.n	84a1c <_svfprintf_r+0xd70>
   850a4:	9a16      	ldr	r2, [sp, #88]	; 0x58
   850a6:	9808      	ldr	r0, [sp, #32]
   850a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   850aa:	4639      	mov	r1, r7
   850ac:	f004 fbf6 	bl	8989c <__aeabi_dcmpeq>
   850b0:	2800      	cmp	r0, #0
   850b2:	f47f ae70 	bne.w	84d96 <_svfprintf_r+0x10ea>
   850b6:	f1c5 0501 	rsb	r5, r5, #1
   850ba:	951f      	str	r5, [sp, #124]	; 0x7c
   850bc:	442c      	add	r4, r5
   850be:	e5ca      	b.n	84c56 <_svfprintf_r+0xfaa>
   850c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   850c2:	4e38      	ldr	r6, [pc, #224]	; (851a4 <_svfprintf_r+0x14f8>)
   850c4:	2b00      	cmp	r3, #0
   850c6:	bfbe      	ittt	lt
   850c8:	232d      	movlt	r3, #45	; 0x2d
   850ca:	461f      	movlt	r7, r3
   850cc:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   850d0:	f04f 0303 	mov.w	r3, #3
   850d4:	461a      	mov	r2, r3
   850d6:	9308      	str	r3, [sp, #32]
   850d8:	f04f 0300 	mov.w	r3, #0
   850dc:	bfa8      	it	ge
   850de:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
   850e2:	4619      	mov	r1, r3
   850e4:	930a      	str	r3, [sp, #40]	; 0x28
   850e6:	4b30      	ldr	r3, [pc, #192]	; (851a8 <_svfprintf_r+0x14fc>)
   850e8:	f7ff b954 	b.w	84394 <_svfprintf_r+0x6e8>
   850ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   850ee:	9a19      	ldr	r2, [sp, #100]	; 0x64
   850f0:	4413      	add	r3, r2
   850f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   850f4:	441a      	add	r2, r3
   850f6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   850fa:	920e      	str	r2, [sp, #56]	; 0x38
   850fc:	9308      	str	r3, [sp, #32]
   850fe:	e5dd      	b.n	84cbc <_svfprintf_r+0x1010>
   85100:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85102:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   85104:	f1c3 0301 	rsb	r3, r3, #1
   85108:	441a      	add	r2, r3
   8510a:	4613      	mov	r3, r2
   8510c:	e7c3      	b.n	85096 <_svfprintf_r+0x13ea>
   8510e:	f01b 0301 	ands.w	r3, fp, #1
   85112:	9312      	str	r3, [sp, #72]	; 0x48
   85114:	f47f aeb3 	bne.w	84e7e <_svfprintf_r+0x11d2>
   85118:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8511a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8511e:	9308      	str	r3, [sp, #32]
   85120:	e5cc      	b.n	84cbc <_svfprintf_r+0x1010>
   85122:	4d1f      	ldr	r5, [pc, #124]	; (851a0 <_svfprintf_r+0x14f4>)
   85124:	e43c      	b.n	849a0 <_svfprintf_r+0xcf4>
   85126:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85128:	4d1d      	ldr	r5, [pc, #116]	; (851a0 <_svfprintf_r+0x14f4>)
   8512a:	e491      	b.n	84a50 <_svfprintf_r+0xda4>
   8512c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8512e:	f89a 3001 	ldrb.w	r3, [sl, #1]
   85132:	6828      	ldr	r0, [r5, #0]
   85134:	46a2      	mov	sl, r4
   85136:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
   8513a:	900a      	str	r0, [sp, #40]	; 0x28
   8513c:	4628      	mov	r0, r5
   8513e:	3004      	adds	r0, #4
   85140:	900f      	str	r0, [sp, #60]	; 0x3c
   85142:	f7fe be0d 	b.w	83d60 <_svfprintf_r+0xb4>
   85146:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85148:	b913      	cbnz	r3, 85150 <_svfprintf_r+0x14a4>
   8514a:	f01b 0f01 	tst.w	fp, #1
   8514e:	d002      	beq.n	85156 <_svfprintf_r+0x14aa>
   85150:	9b19      	ldr	r3, [sp, #100]	; 0x64
   85152:	3301      	adds	r3, #1
   85154:	e7cd      	b.n	850f2 <_svfprintf_r+0x1446>
   85156:	2301      	movs	r3, #1
   85158:	e71c      	b.n	84f94 <_svfprintf_r+0x12e8>
   8515a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8515e:	f7ff b980 	b.w	84462 <_svfprintf_r+0x7b6>
   85162:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85166:	f7ff b93a 	b.w	843de <_svfprintf_r+0x732>
   8516a:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8516e:	f7ff b84f 	b.w	84210 <_svfprintf_r+0x564>
   85172:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   85176:	e679      	b.n	84e6c <_svfprintf_r+0x11c0>
   85178:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8517c:	f7ff b9b2 	b.w	844e4 <_svfprintf_r+0x838>
   85180:	f04f 32ff 	mov.w	r2, #4294967295
   85184:	230c      	movs	r3, #12
   85186:	9209      	str	r2, [sp, #36]	; 0x24
   85188:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8518a:	6013      	str	r3, [r2, #0]
   8518c:	f7fe be74 	b.w	83e78 <_svfprintf_r+0x1cc>
   85190:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   85194:	f7ff b8c4 	b.w	84320 <_svfprintf_r+0x674>
   85198:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   8519c:	f7ff b878 	b.w	84290 <_svfprintf_r+0x5e4>
   851a0:	00089dd0 	.word	0x00089dd0
   851a4:	00089d88 	.word	0x00089d88
   851a8:	00089d84 	.word	0x00089d84

000851ac <__sprint_r.part.0>:
   851ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   851b0:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   851b2:	4693      	mov	fp, r2
   851b4:	049c      	lsls	r4, r3, #18
   851b6:	d52f      	bpl.n	85218 <__sprint_r.part.0+0x6c>
   851b8:	6893      	ldr	r3, [r2, #8]
   851ba:	6812      	ldr	r2, [r2, #0]
   851bc:	b353      	cbz	r3, 85214 <__sprint_r.part.0+0x68>
   851be:	460e      	mov	r6, r1
   851c0:	4607      	mov	r7, r0
   851c2:	f102 0908 	add.w	r9, r2, #8
   851c6:	e919 0420 	ldmdb	r9, {r5, sl}
   851ca:	ea5f 089a 	movs.w	r8, sl, lsr #2
   851ce:	d017      	beq.n	85200 <__sprint_r.part.0+0x54>
   851d0:	2400      	movs	r4, #0
   851d2:	3d04      	subs	r5, #4
   851d4:	e001      	b.n	851da <__sprint_r.part.0+0x2e>
   851d6:	45a0      	cmp	r8, r4
   851d8:	d010      	beq.n	851fc <__sprint_r.part.0+0x50>
   851da:	4632      	mov	r2, r6
   851dc:	f855 1f04 	ldr.w	r1, [r5, #4]!
   851e0:	4638      	mov	r0, r7
   851e2:	f002 f86d 	bl	872c0 <_fputwc_r>
   851e6:	1c43      	adds	r3, r0, #1
   851e8:	f104 0401 	add.w	r4, r4, #1
   851ec:	d1f3      	bne.n	851d6 <__sprint_r.part.0+0x2a>
   851ee:	2300      	movs	r3, #0
   851f0:	f8cb 3008 	str.w	r3, [fp, #8]
   851f4:	f8cb 3004 	str.w	r3, [fp, #4]
   851f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   851fc:	f8db 3008 	ldr.w	r3, [fp, #8]
   85200:	f02a 0a03 	bic.w	sl, sl, #3
   85204:	eba3 030a 	sub.w	r3, r3, sl
   85208:	f8cb 3008 	str.w	r3, [fp, #8]
   8520c:	f109 0908 	add.w	r9, r9, #8
   85210:	2b00      	cmp	r3, #0
   85212:	d1d8      	bne.n	851c6 <__sprint_r.part.0+0x1a>
   85214:	2000      	movs	r0, #0
   85216:	e7ea      	b.n	851ee <__sprint_r.part.0+0x42>
   85218:	f002 f9bc 	bl	87594 <__sfvwrite_r>
   8521c:	2300      	movs	r3, #0
   8521e:	f8cb 3008 	str.w	r3, [fp, #8]
   85222:	f8cb 3004 	str.w	r3, [fp, #4]
   85226:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8522a:	bf00      	nop

0008522c <_vfiprintf_r>:
   8522c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85230:	b0ad      	sub	sp, #180	; 0xb4
   85232:	461d      	mov	r5, r3
   85234:	468b      	mov	fp, r1
   85236:	4690      	mov	r8, r2
   85238:	9307      	str	r3, [sp, #28]
   8523a:	9006      	str	r0, [sp, #24]
   8523c:	b118      	cbz	r0, 85246 <_vfiprintf_r+0x1a>
   8523e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   85240:	2b00      	cmp	r3, #0
   85242:	f000 80f3 	beq.w	8542c <_vfiprintf_r+0x200>
   85246:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   8524a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   8524e:	07df      	lsls	r7, r3, #31
   85250:	b281      	uxth	r1, r0
   85252:	d402      	bmi.n	8525a <_vfiprintf_r+0x2e>
   85254:	058e      	lsls	r6, r1, #22
   85256:	f140 80fc 	bpl.w	85452 <_vfiprintf_r+0x226>
   8525a:	048c      	lsls	r4, r1, #18
   8525c:	d40a      	bmi.n	85274 <_vfiprintf_r+0x48>
   8525e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   85262:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
   85266:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   8526a:	f8ab 100c 	strh.w	r1, [fp, #12]
   8526e:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
   85272:	b289      	uxth	r1, r1
   85274:	0708      	lsls	r0, r1, #28
   85276:	f140 80b3 	bpl.w	853e0 <_vfiprintf_r+0x1b4>
   8527a:	f8db 3010 	ldr.w	r3, [fp, #16]
   8527e:	2b00      	cmp	r3, #0
   85280:	f000 80ae 	beq.w	853e0 <_vfiprintf_r+0x1b4>
   85284:	f001 031a 	and.w	r3, r1, #26
   85288:	2b0a      	cmp	r3, #10
   8528a:	f000 80b5 	beq.w	853f8 <_vfiprintf_r+0x1cc>
   8528e:	2300      	movs	r3, #0
   85290:	f10d 0a70 	add.w	sl, sp, #112	; 0x70
   85294:	46d1      	mov	r9, sl
   85296:	930b      	str	r3, [sp, #44]	; 0x2c
   85298:	9303      	str	r3, [sp, #12]
   8529a:	9311      	str	r3, [sp, #68]	; 0x44
   8529c:	9310      	str	r3, [sp, #64]	; 0x40
   8529e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
   852a2:	f8cd b010 	str.w	fp, [sp, #16]
   852a6:	f898 3000 	ldrb.w	r3, [r8]
   852aa:	4644      	mov	r4, r8
   852ac:	b1fb      	cbz	r3, 852ee <_vfiprintf_r+0xc2>
   852ae:	2b25      	cmp	r3, #37	; 0x25
   852b0:	d102      	bne.n	852b8 <_vfiprintf_r+0x8c>
   852b2:	e01c      	b.n	852ee <_vfiprintf_r+0xc2>
   852b4:	2b25      	cmp	r3, #37	; 0x25
   852b6:	d003      	beq.n	852c0 <_vfiprintf_r+0x94>
   852b8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   852bc:	2b00      	cmp	r3, #0
   852be:	d1f9      	bne.n	852b4 <_vfiprintf_r+0x88>
   852c0:	eba4 0508 	sub.w	r5, r4, r8
   852c4:	b19d      	cbz	r5, 852ee <_vfiprintf_r+0xc2>
   852c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   852c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
   852ca:	3301      	adds	r3, #1
   852cc:	442a      	add	r2, r5
   852ce:	2b07      	cmp	r3, #7
   852d0:	f8c9 8000 	str.w	r8, [r9]
   852d4:	f8c9 5004 	str.w	r5, [r9, #4]
   852d8:	9211      	str	r2, [sp, #68]	; 0x44
   852da:	9310      	str	r3, [sp, #64]	; 0x40
   852dc:	dd7a      	ble.n	853d4 <_vfiprintf_r+0x1a8>
   852de:	2a00      	cmp	r2, #0
   852e0:	f040 84b5 	bne.w	85c4e <_vfiprintf_r+0xa22>
   852e4:	46d1      	mov	r9, sl
   852e6:	9b03      	ldr	r3, [sp, #12]
   852e8:	9210      	str	r2, [sp, #64]	; 0x40
   852ea:	442b      	add	r3, r5
   852ec:	9303      	str	r3, [sp, #12]
   852ee:	7823      	ldrb	r3, [r4, #0]
   852f0:	2b00      	cmp	r3, #0
   852f2:	f000 83e5 	beq.w	85ac0 <_vfiprintf_r+0x894>
   852f6:	2000      	movs	r0, #0
   852f8:	f04f 0300 	mov.w	r3, #0
   852fc:	f104 0801 	add.w	r8, r4, #1
   85300:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
   85304:	7862      	ldrb	r2, [r4, #1]
   85306:	4606      	mov	r6, r0
   85308:	4605      	mov	r5, r0
   8530a:	4603      	mov	r3, r0
   8530c:	f04f 34ff 	mov.w	r4, #4294967295
   85310:	f108 0801 	add.w	r8, r8, #1
   85314:	f1a2 0120 	sub.w	r1, r2, #32
   85318:	2958      	cmp	r1, #88	; 0x58
   8531a:	f200 82d9 	bhi.w	858d0 <_vfiprintf_r+0x6a4>
   8531e:	e8df f011 	tbh	[pc, r1, lsl #1]
   85322:	0228      	.short	0x0228
   85324:	02d702d7 	.word	0x02d702d7
   85328:	02d70230 	.word	0x02d70230
   8532c:	02d702d7 	.word	0x02d702d7
   85330:	02d702d7 	.word	0x02d702d7
   85334:	00a002d7 	.word	0x00a002d7
   85338:	02d70288 	.word	0x02d70288
   8533c:	02b800a8 	.word	0x02b800a8
   85340:	01a602d7 	.word	0x01a602d7
   85344:	01ab01ab 	.word	0x01ab01ab
   85348:	01ab01ab 	.word	0x01ab01ab
   8534c:	01ab01ab 	.word	0x01ab01ab
   85350:	01ab01ab 	.word	0x01ab01ab
   85354:	02d701ab 	.word	0x02d701ab
   85358:	02d702d7 	.word	0x02d702d7
   8535c:	02d702d7 	.word	0x02d702d7
   85360:	02d702d7 	.word	0x02d702d7
   85364:	02d702d7 	.word	0x02d702d7
   85368:	01b902d7 	.word	0x01b902d7
   8536c:	02d702d7 	.word	0x02d702d7
   85370:	02d702d7 	.word	0x02d702d7
   85374:	02d702d7 	.word	0x02d702d7
   85378:	02d702d7 	.word	0x02d702d7
   8537c:	02d702d7 	.word	0x02d702d7
   85380:	02d7019e 	.word	0x02d7019e
   85384:	02d702d7 	.word	0x02d702d7
   85388:	02d702d7 	.word	0x02d702d7
   8538c:	02d701a2 	.word	0x02d701a2
   85390:	025a02d7 	.word	0x025a02d7
   85394:	02d702d7 	.word	0x02d702d7
   85398:	02d702d7 	.word	0x02d702d7
   8539c:	02d702d7 	.word	0x02d702d7
   853a0:	02d702d7 	.word	0x02d702d7
   853a4:	02d702d7 	.word	0x02d702d7
   853a8:	02220261 	.word	0x02220261
   853ac:	02d702d7 	.word	0x02d702d7
   853b0:	027602d7 	.word	0x027602d7
   853b4:	02d70222 	.word	0x02d70222
   853b8:	027b02d7 	.word	0x027b02d7
   853bc:	01fc02d7 	.word	0x01fc02d7
   853c0:	02100189 	.word	0x02100189
   853c4:	02d702d2 	.word	0x02d702d2
   853c8:	02d70295 	.word	0x02d70295
   853cc:	02d700ad 	.word	0x02d700ad
   853d0:	023502d7 	.word	0x023502d7
   853d4:	f109 0908 	add.w	r9, r9, #8
   853d8:	9b03      	ldr	r3, [sp, #12]
   853da:	442b      	add	r3, r5
   853dc:	9303      	str	r3, [sp, #12]
   853de:	e786      	b.n	852ee <_vfiprintf_r+0xc2>
   853e0:	4659      	mov	r1, fp
   853e2:	9806      	ldr	r0, [sp, #24]
   853e4:	f000 fdaa 	bl	85f3c <__swsetup_r>
   853e8:	bb18      	cbnz	r0, 85432 <_vfiprintf_r+0x206>
   853ea:	f8bb 100c 	ldrh.w	r1, [fp, #12]
   853ee:	f001 031a 	and.w	r3, r1, #26
   853f2:	2b0a      	cmp	r3, #10
   853f4:	f47f af4b 	bne.w	8528e <_vfiprintf_r+0x62>
   853f8:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
   853fc:	2b00      	cmp	r3, #0
   853fe:	f6ff af46 	blt.w	8528e <_vfiprintf_r+0x62>
   85402:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   85406:	07db      	lsls	r3, r3, #31
   85408:	d405      	bmi.n	85416 <_vfiprintf_r+0x1ea>
   8540a:	058f      	lsls	r7, r1, #22
   8540c:	d403      	bmi.n	85416 <_vfiprintf_r+0x1ea>
   8540e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   85412:	f002 fa83 	bl	8791c <__retarget_lock_release_recursive>
   85416:	462b      	mov	r3, r5
   85418:	4642      	mov	r2, r8
   8541a:	4659      	mov	r1, fp
   8541c:	9806      	ldr	r0, [sp, #24]
   8541e:	f000 fd49 	bl	85eb4 <__sbprintf>
   85422:	9003      	str	r0, [sp, #12]
   85424:	9803      	ldr	r0, [sp, #12]
   85426:	b02d      	add	sp, #180	; 0xb4
   85428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8542c:	f001 fea6 	bl	8717c <__sinit>
   85430:	e709      	b.n	85246 <_vfiprintf_r+0x1a>
   85432:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   85436:	07d9      	lsls	r1, r3, #31
   85438:	d404      	bmi.n	85444 <_vfiprintf_r+0x218>
   8543a:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   8543e:	059a      	lsls	r2, r3, #22
   85440:	f140 84ae 	bpl.w	85da0 <_vfiprintf_r+0xb74>
   85444:	f04f 33ff 	mov.w	r3, #4294967295
   85448:	9303      	str	r3, [sp, #12]
   8544a:	9803      	ldr	r0, [sp, #12]
   8544c:	b02d      	add	sp, #180	; 0xb4
   8544e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85452:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   85456:	f002 fa5f 	bl	87918 <__retarget_lock_acquire_recursive>
   8545a:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
   8545e:	b281      	uxth	r1, r0
   85460:	e6fb      	b.n	8525a <_vfiprintf_r+0x2e>
   85462:	9907      	ldr	r1, [sp, #28]
   85464:	460a      	mov	r2, r1
   85466:	680d      	ldr	r5, [r1, #0]
   85468:	3204      	adds	r2, #4
   8546a:	2d00      	cmp	r5, #0
   8546c:	9207      	str	r2, [sp, #28]
   8546e:	da02      	bge.n	85476 <_vfiprintf_r+0x24a>
   85470:	426d      	negs	r5, r5
   85472:	f043 0304 	orr.w	r3, r3, #4
   85476:	f898 2000 	ldrb.w	r2, [r8]
   8547a:	e749      	b.n	85310 <_vfiprintf_r+0xe4>
   8547c:	9508      	str	r5, [sp, #32]
   8547e:	069e      	lsls	r6, r3, #26
   85480:	f100 845a 	bmi.w	85d38 <_vfiprintf_r+0xb0c>
   85484:	9907      	ldr	r1, [sp, #28]
   85486:	06dd      	lsls	r5, r3, #27
   85488:	460a      	mov	r2, r1
   8548a:	f100 83ef 	bmi.w	85c6c <_vfiprintf_r+0xa40>
   8548e:	0658      	lsls	r0, r3, #25
   85490:	f140 83ec 	bpl.w	85c6c <_vfiprintf_r+0xa40>
   85494:	2700      	movs	r7, #0
   85496:	2201      	movs	r2, #1
   85498:	880e      	ldrh	r6, [r1, #0]
   8549a:	3104      	adds	r1, #4
   8549c:	9107      	str	r1, [sp, #28]
   8549e:	f04f 0100 	mov.w	r1, #0
   854a2:	2500      	movs	r5, #0
   854a4:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
   854a8:	1c61      	adds	r1, r4, #1
   854aa:	f000 8117 	beq.w	856dc <_vfiprintf_r+0x4b0>
   854ae:	f023 0180 	bic.w	r1, r3, #128	; 0x80
   854b2:	9102      	str	r1, [sp, #8]
   854b4:	ea56 0107 	orrs.w	r1, r6, r7
   854b8:	f040 8115 	bne.w	856e6 <_vfiprintf_r+0x4ba>
   854bc:	2c00      	cmp	r4, #0
   854be:	f040 835b 	bne.w	85b78 <_vfiprintf_r+0x94c>
   854c2:	2a00      	cmp	r2, #0
   854c4:	f040 83b6 	bne.w	85c34 <_vfiprintf_r+0xa08>
   854c8:	f013 0301 	ands.w	r3, r3, #1
   854cc:	9305      	str	r3, [sp, #20]
   854ce:	f000 8455 	beq.w	85d7c <_vfiprintf_r+0xb50>
   854d2:	2330      	movs	r3, #48	; 0x30
   854d4:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   854d8:	f80b 3d41 	strb.w	r3, [fp, #-65]!
   854dc:	9b05      	ldr	r3, [sp, #20]
   854de:	42a3      	cmp	r3, r4
   854e0:	bfb8      	it	lt
   854e2:	4623      	movlt	r3, r4
   854e4:	9301      	str	r3, [sp, #4]
   854e6:	b10d      	cbz	r5, 854ec <_vfiprintf_r+0x2c0>
   854e8:	3301      	adds	r3, #1
   854ea:	9301      	str	r3, [sp, #4]
   854ec:	9b02      	ldr	r3, [sp, #8]
   854ee:	f013 0302 	ands.w	r3, r3, #2
   854f2:	9309      	str	r3, [sp, #36]	; 0x24
   854f4:	d002      	beq.n	854fc <_vfiprintf_r+0x2d0>
   854f6:	9b01      	ldr	r3, [sp, #4]
   854f8:	3302      	adds	r3, #2
   854fa:	9301      	str	r3, [sp, #4]
   854fc:	9b02      	ldr	r3, [sp, #8]
   854fe:	f013 0384 	ands.w	r3, r3, #132	; 0x84
   85502:	930a      	str	r3, [sp, #40]	; 0x28
   85504:	f040 8215 	bne.w	85932 <_vfiprintf_r+0x706>
   85508:	9b08      	ldr	r3, [sp, #32]
   8550a:	9a01      	ldr	r2, [sp, #4]
   8550c:	1a9d      	subs	r5, r3, r2
   8550e:	2d00      	cmp	r5, #0
   85510:	f340 820f 	ble.w	85932 <_vfiprintf_r+0x706>
   85514:	2d10      	cmp	r5, #16
   85516:	f340 8484 	ble.w	85e22 <_vfiprintf_r+0xbf6>
   8551a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8551c:	46ce      	mov	lr, r9
   8551e:	2710      	movs	r7, #16
   85520:	46a1      	mov	r9, r4
   85522:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85524:	4ec5      	ldr	r6, [pc, #788]	; (8583c <_vfiprintf_r+0x610>)
   85526:	4619      	mov	r1, r3
   85528:	9c06      	ldr	r4, [sp, #24]
   8552a:	e007      	b.n	8553c <_vfiprintf_r+0x310>
   8552c:	f101 0c02 	add.w	ip, r1, #2
   85530:	4601      	mov	r1, r0
   85532:	f10e 0e08 	add.w	lr, lr, #8
   85536:	3d10      	subs	r5, #16
   85538:	2d10      	cmp	r5, #16
   8553a:	dd11      	ble.n	85560 <_vfiprintf_r+0x334>
   8553c:	1c48      	adds	r0, r1, #1
   8553e:	3210      	adds	r2, #16
   85540:	2807      	cmp	r0, #7
   85542:	9211      	str	r2, [sp, #68]	; 0x44
   85544:	e88e 00c0 	stmia.w	lr, {r6, r7}
   85548:	9010      	str	r0, [sp, #64]	; 0x40
   8554a:	ddef      	ble.n	8552c <_vfiprintf_r+0x300>
   8554c:	2a00      	cmp	r2, #0
   8554e:	f040 81d9 	bne.w	85904 <_vfiprintf_r+0x6d8>
   85552:	3d10      	subs	r5, #16
   85554:	2d10      	cmp	r5, #16
   85556:	4611      	mov	r1, r2
   85558:	f04f 0c01 	mov.w	ip, #1
   8555c:	46d6      	mov	lr, sl
   8555e:	dced      	bgt.n	8553c <_vfiprintf_r+0x310>
   85560:	464c      	mov	r4, r9
   85562:	4661      	mov	r1, ip
   85564:	46f1      	mov	r9, lr
   85566:	442a      	add	r2, r5
   85568:	2907      	cmp	r1, #7
   8556a:	9211      	str	r2, [sp, #68]	; 0x44
   8556c:	f8c9 6000 	str.w	r6, [r9]
   85570:	f8c9 5004 	str.w	r5, [r9, #4]
   85574:	9110      	str	r1, [sp, #64]	; 0x40
   85576:	f300 82eb 	bgt.w	85b50 <_vfiprintf_r+0x924>
   8557a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   8557e:	f109 0908 	add.w	r9, r9, #8
   85582:	1c48      	adds	r0, r1, #1
   85584:	2d00      	cmp	r5, #0
   85586:	f040 81dc 	bne.w	85942 <_vfiprintf_r+0x716>
   8558a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8558c:	2b00      	cmp	r3, #0
   8558e:	f000 81f6 	beq.w	8597e <_vfiprintf_r+0x752>
   85592:	2102      	movs	r1, #2
   85594:	ab0e      	add	r3, sp, #56	; 0x38
   85596:	440a      	add	r2, r1
   85598:	2807      	cmp	r0, #7
   8559a:	9211      	str	r2, [sp, #68]	; 0x44
   8559c:	9010      	str	r0, [sp, #64]	; 0x40
   8559e:	f8c9 1004 	str.w	r1, [r9, #4]
   855a2:	f8c9 3000 	str.w	r3, [r9]
   855a6:	f340 81e6 	ble.w	85976 <_vfiprintf_r+0x74a>
   855aa:	2a00      	cmp	r2, #0
   855ac:	f040 8395 	bne.w	85cda <_vfiprintf_r+0xaae>
   855b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   855b2:	2001      	movs	r0, #1
   855b4:	2b80      	cmp	r3, #128	; 0x80
   855b6:	4611      	mov	r1, r2
   855b8:	46d1      	mov	r9, sl
   855ba:	f040 81e4 	bne.w	85986 <_vfiprintf_r+0x75a>
   855be:	9b08      	ldr	r3, [sp, #32]
   855c0:	9d01      	ldr	r5, [sp, #4]
   855c2:	1b5e      	subs	r6, r3, r5
   855c4:	2e00      	cmp	r6, #0
   855c6:	f340 81de 	ble.w	85986 <_vfiprintf_r+0x75a>
   855ca:	2e10      	cmp	r6, #16
   855cc:	f340 843c 	ble.w	85e48 <_vfiprintf_r+0xc1c>
   855d0:	46cc      	mov	ip, r9
   855d2:	2710      	movs	r7, #16
   855d4:	46a1      	mov	r9, r4
   855d6:	4d9a      	ldr	r5, [pc, #616]	; (85840 <_vfiprintf_r+0x614>)
   855d8:	9c06      	ldr	r4, [sp, #24]
   855da:	e007      	b.n	855ec <_vfiprintf_r+0x3c0>
   855dc:	f101 0e02 	add.w	lr, r1, #2
   855e0:	4601      	mov	r1, r0
   855e2:	f10c 0c08 	add.w	ip, ip, #8
   855e6:	3e10      	subs	r6, #16
   855e8:	2e10      	cmp	r6, #16
   855ea:	dd11      	ble.n	85610 <_vfiprintf_r+0x3e4>
   855ec:	1c48      	adds	r0, r1, #1
   855ee:	3210      	adds	r2, #16
   855f0:	2807      	cmp	r0, #7
   855f2:	9211      	str	r2, [sp, #68]	; 0x44
   855f4:	e88c 00a0 	stmia.w	ip, {r5, r7}
   855f8:	9010      	str	r0, [sp, #64]	; 0x40
   855fa:	ddef      	ble.n	855dc <_vfiprintf_r+0x3b0>
   855fc:	2a00      	cmp	r2, #0
   855fe:	f040 829b 	bne.w	85b38 <_vfiprintf_r+0x90c>
   85602:	3e10      	subs	r6, #16
   85604:	2e10      	cmp	r6, #16
   85606:	f04f 0e01 	mov.w	lr, #1
   8560a:	4611      	mov	r1, r2
   8560c:	46d4      	mov	ip, sl
   8560e:	dced      	bgt.n	855ec <_vfiprintf_r+0x3c0>
   85610:	464c      	mov	r4, r9
   85612:	46e1      	mov	r9, ip
   85614:	4432      	add	r2, r6
   85616:	f1be 0f07 	cmp.w	lr, #7
   8561a:	9211      	str	r2, [sp, #68]	; 0x44
   8561c:	e889 0060 	stmia.w	r9, {r5, r6}
   85620:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
   85624:	f300 8366 	bgt.w	85cf4 <_vfiprintf_r+0xac8>
   85628:	f109 0908 	add.w	r9, r9, #8
   8562c:	f10e 0001 	add.w	r0, lr, #1
   85630:	4671      	mov	r1, lr
   85632:	e1a8      	b.n	85986 <_vfiprintf_r+0x75a>
   85634:	9508      	str	r5, [sp, #32]
   85636:	f013 0220 	ands.w	r2, r3, #32
   8563a:	f040 8389 	bne.w	85d50 <_vfiprintf_r+0xb24>
   8563e:	f013 0110 	ands.w	r1, r3, #16
   85642:	f040 8319 	bne.w	85c78 <_vfiprintf_r+0xa4c>
   85646:	f013 0240 	ands.w	r2, r3, #64	; 0x40
   8564a:	f000 8315 	beq.w	85c78 <_vfiprintf_r+0xa4c>
   8564e:	9807      	ldr	r0, [sp, #28]
   85650:	460a      	mov	r2, r1
   85652:	4601      	mov	r1, r0
   85654:	3104      	adds	r1, #4
   85656:	8806      	ldrh	r6, [r0, #0]
   85658:	2700      	movs	r7, #0
   8565a:	9107      	str	r1, [sp, #28]
   8565c:	e71f      	b.n	8549e <_vfiprintf_r+0x272>
   8565e:	9508      	str	r5, [sp, #32]
   85660:	f043 0310 	orr.w	r3, r3, #16
   85664:	e7e7      	b.n	85636 <_vfiprintf_r+0x40a>
   85666:	9508      	str	r5, [sp, #32]
   85668:	f043 0310 	orr.w	r3, r3, #16
   8566c:	e707      	b.n	8547e <_vfiprintf_r+0x252>
   8566e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   85672:	f898 2000 	ldrb.w	r2, [r8]
   85676:	e64b      	b.n	85310 <_vfiprintf_r+0xe4>
   85678:	2500      	movs	r5, #0
   8567a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8567e:	f818 2b01 	ldrb.w	r2, [r8], #1
   85682:	eb05 0585 	add.w	r5, r5, r5, lsl #2
   85686:	eb01 0545 	add.w	r5, r1, r5, lsl #1
   8568a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   8568e:	2909      	cmp	r1, #9
   85690:	d9f5      	bls.n	8567e <_vfiprintf_r+0x452>
   85692:	e63f      	b.n	85314 <_vfiprintf_r+0xe8>
   85694:	9508      	str	r5, [sp, #32]
   85696:	2800      	cmp	r0, #0
   85698:	f040 8402 	bne.w	85ea0 <_vfiprintf_r+0xc74>
   8569c:	f043 0310 	orr.w	r3, r3, #16
   856a0:	069e      	lsls	r6, r3, #26
   856a2:	f100 833d 	bmi.w	85d20 <_vfiprintf_r+0xaf4>
   856a6:	9907      	ldr	r1, [sp, #28]
   856a8:	06dd      	lsls	r5, r3, #27
   856aa:	460a      	mov	r2, r1
   856ac:	f100 82f0 	bmi.w	85c90 <_vfiprintf_r+0xa64>
   856b0:	0658      	lsls	r0, r3, #25
   856b2:	f140 82ed 	bpl.w	85c90 <_vfiprintf_r+0xa64>
   856b6:	f9b1 6000 	ldrsh.w	r6, [r1]
   856ba:	3204      	adds	r2, #4
   856bc:	17f7      	asrs	r7, r6, #31
   856be:	4630      	mov	r0, r6
   856c0:	4639      	mov	r1, r7
   856c2:	9207      	str	r2, [sp, #28]
   856c4:	2800      	cmp	r0, #0
   856c6:	f171 0200 	sbcs.w	r2, r1, #0
   856ca:	f2c0 835a 	blt.w	85d82 <_vfiprintf_r+0xb56>
   856ce:	1c61      	adds	r1, r4, #1
   856d0:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   856d4:	f04f 0201 	mov.w	r2, #1
   856d8:	f47f aee9 	bne.w	854ae <_vfiprintf_r+0x282>
   856dc:	ea56 0107 	orrs.w	r1, r6, r7
   856e0:	f000 824b 	beq.w	85b7a <_vfiprintf_r+0x94e>
   856e4:	9302      	str	r3, [sp, #8]
   856e6:	2a01      	cmp	r2, #1
   856e8:	f000 828a 	beq.w	85c00 <_vfiprintf_r+0x9d4>
   856ec:	2a02      	cmp	r2, #2
   856ee:	f040 825a 	bne.w	85ba6 <_vfiprintf_r+0x97a>
   856f2:	46d3      	mov	fp, sl
   856f4:	980b      	ldr	r0, [sp, #44]	; 0x2c
   856f6:	0933      	lsrs	r3, r6, #4
   856f8:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   856fc:	0939      	lsrs	r1, r7, #4
   856fe:	f006 020f 	and.w	r2, r6, #15
   85702:	460f      	mov	r7, r1
   85704:	461e      	mov	r6, r3
   85706:	5c83      	ldrb	r3, [r0, r2]
   85708:	f80b 3d01 	strb.w	r3, [fp, #-1]!
   8570c:	ea56 0307 	orrs.w	r3, r6, r7
   85710:	d1f1      	bne.n	856f6 <_vfiprintf_r+0x4ca>
   85712:	ebaa 030b 	sub.w	r3, sl, fp
   85716:	9305      	str	r3, [sp, #20]
   85718:	e6e0      	b.n	854dc <_vfiprintf_r+0x2b0>
   8571a:	2800      	cmp	r0, #0
   8571c:	f040 83bd 	bne.w	85e9a <_vfiprintf_r+0xc6e>
   85720:	0699      	lsls	r1, r3, #26
   85722:	f100 8359 	bmi.w	85dd8 <_vfiprintf_r+0xbac>
   85726:	06da      	lsls	r2, r3, #27
   85728:	f100 80e5 	bmi.w	858f6 <_vfiprintf_r+0x6ca>
   8572c:	065b      	lsls	r3, r3, #25
   8572e:	f140 80e2 	bpl.w	858f6 <_vfiprintf_r+0x6ca>
   85732:	9a07      	ldr	r2, [sp, #28]
   85734:	6813      	ldr	r3, [r2, #0]
   85736:	3204      	adds	r2, #4
   85738:	9207      	str	r2, [sp, #28]
   8573a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
   8573e:	801a      	strh	r2, [r3, #0]
   85740:	e5b1      	b.n	852a6 <_vfiprintf_r+0x7a>
   85742:	2278      	movs	r2, #120	; 0x78
   85744:	2130      	movs	r1, #48	; 0x30
   85746:	9508      	str	r5, [sp, #32]
   85748:	9d07      	ldr	r5, [sp, #28]
   8574a:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   8574e:	1d2a      	adds	r2, r5, #4
   85750:	9207      	str	r2, [sp, #28]
   85752:	4a3c      	ldr	r2, [pc, #240]	; (85844 <_vfiprintf_r+0x618>)
   85754:	682e      	ldr	r6, [r5, #0]
   85756:	920b      	str	r2, [sp, #44]	; 0x2c
   85758:	f043 0302 	orr.w	r3, r3, #2
   8575c:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   85760:	2700      	movs	r7, #0
   85762:	2202      	movs	r2, #2
   85764:	e69b      	b.n	8549e <_vfiprintf_r+0x272>
   85766:	9508      	str	r5, [sp, #32]
   85768:	2800      	cmp	r0, #0
   8576a:	d099      	beq.n	856a0 <_vfiprintf_r+0x474>
   8576c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85770:	e796      	b.n	856a0 <_vfiprintf_r+0x474>
   85772:	f898 2000 	ldrb.w	r2, [r8]
   85776:	2e00      	cmp	r6, #0
   85778:	f47f adca 	bne.w	85310 <_vfiprintf_r+0xe4>
   8577c:	2001      	movs	r0, #1
   8577e:	2620      	movs	r6, #32
   85780:	e5c6      	b.n	85310 <_vfiprintf_r+0xe4>
   85782:	f043 0301 	orr.w	r3, r3, #1
   85786:	f898 2000 	ldrb.w	r2, [r8]
   8578a:	e5c1      	b.n	85310 <_vfiprintf_r+0xe4>
   8578c:	9508      	str	r5, [sp, #32]
   8578e:	2800      	cmp	r0, #0
   85790:	f040 8380 	bne.w	85e94 <_vfiprintf_r+0xc68>
   85794:	492b      	ldr	r1, [pc, #172]	; (85844 <_vfiprintf_r+0x618>)
   85796:	910b      	str	r1, [sp, #44]	; 0x2c
   85798:	069f      	lsls	r7, r3, #26
   8579a:	f100 82e5 	bmi.w	85d68 <_vfiprintf_r+0xb3c>
   8579e:	9807      	ldr	r0, [sp, #28]
   857a0:	06de      	lsls	r6, r3, #27
   857a2:	4601      	mov	r1, r0
   857a4:	f100 826f 	bmi.w	85c86 <_vfiprintf_r+0xa5a>
   857a8:	065d      	lsls	r5, r3, #25
   857aa:	f140 826c 	bpl.w	85c86 <_vfiprintf_r+0xa5a>
   857ae:	2700      	movs	r7, #0
   857b0:	3104      	adds	r1, #4
   857b2:	8806      	ldrh	r6, [r0, #0]
   857b4:	9107      	str	r1, [sp, #28]
   857b6:	07d8      	lsls	r0, r3, #31
   857b8:	f140 8220 	bpl.w	85bfc <_vfiprintf_r+0x9d0>
   857bc:	ea56 0107 	orrs.w	r1, r6, r7
   857c0:	f000 821c 	beq.w	85bfc <_vfiprintf_r+0x9d0>
   857c4:	2130      	movs	r1, #48	; 0x30
   857c6:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
   857ca:	f043 0302 	orr.w	r3, r3, #2
   857ce:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
   857d2:	2202      	movs	r2, #2
   857d4:	e663      	b.n	8549e <_vfiprintf_r+0x272>
   857d6:	9508      	str	r5, [sp, #32]
   857d8:	2800      	cmp	r0, #0
   857da:	f040 8355 	bne.w	85e88 <_vfiprintf_r+0xc5c>
   857de:	491a      	ldr	r1, [pc, #104]	; (85848 <_vfiprintf_r+0x61c>)
   857e0:	910b      	str	r1, [sp, #44]	; 0x2c
   857e2:	e7d9      	b.n	85798 <_vfiprintf_r+0x56c>
   857e4:	2201      	movs	r2, #1
   857e6:	9807      	ldr	r0, [sp, #28]
   857e8:	4611      	mov	r1, r2
   857ea:	9201      	str	r2, [sp, #4]
   857ec:	6802      	ldr	r2, [r0, #0]
   857ee:	f04f 0400 	mov.w	r4, #0
   857f2:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   857f6:	4602      	mov	r2, r0
   857f8:	3204      	adds	r2, #4
   857fa:	9508      	str	r5, [sp, #32]
   857fc:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
   85800:	9105      	str	r1, [sp, #20]
   85802:	9207      	str	r2, [sp, #28]
   85804:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   85808:	9302      	str	r3, [sp, #8]
   8580a:	2400      	movs	r4, #0
   8580c:	e66e      	b.n	854ec <_vfiprintf_r+0x2c0>
   8580e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85812:	f898 2000 	ldrb.w	r2, [r8]
   85816:	e57b      	b.n	85310 <_vfiprintf_r+0xe4>
   85818:	f898 2000 	ldrb.w	r2, [r8]
   8581c:	2a6c      	cmp	r2, #108	; 0x6c
   8581e:	bf03      	ittte	eq
   85820:	f898 2001 	ldrbeq.w	r2, [r8, #1]
   85824:	f043 0320 	orreq.w	r3, r3, #32
   85828:	f108 0801 	addeq.w	r8, r8, #1
   8582c:	f043 0310 	orrne.w	r3, r3, #16
   85830:	e56e      	b.n	85310 <_vfiprintf_r+0xe4>
   85832:	f898 2000 	ldrb.w	r2, [r8]
   85836:	2001      	movs	r0, #1
   85838:	262b      	movs	r6, #43	; 0x2b
   8583a:	e569      	b.n	85310 <_vfiprintf_r+0xe4>
   8583c:	00089de0 	.word	0x00089de0
   85840:	00089df0 	.word	0x00089df0
   85844:	00089da0 	.word	0x00089da0
   85848:	00089d8c 	.word	0x00089d8c
   8584c:	f04f 0200 	mov.w	r2, #0
   85850:	9907      	ldr	r1, [sp, #28]
   85852:	9508      	str	r5, [sp, #32]
   85854:	f8d1 b000 	ldr.w	fp, [r1]
   85858:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   8585c:	1d0d      	adds	r5, r1, #4
   8585e:	f1bb 0f00 	cmp.w	fp, #0
   85862:	f000 82e4 	beq.w	85e2e <_vfiprintf_r+0xc02>
   85866:	1c67      	adds	r7, r4, #1
   85868:	f000 82c3 	beq.w	85df2 <_vfiprintf_r+0xbc6>
   8586c:	4622      	mov	r2, r4
   8586e:	2100      	movs	r1, #0
   85870:	4658      	mov	r0, fp
   85872:	9301      	str	r3, [sp, #4]
   85874:	f002 fb8c 	bl	87f90 <memchr>
   85878:	9b01      	ldr	r3, [sp, #4]
   8587a:	2800      	cmp	r0, #0
   8587c:	f000 82e8 	beq.w	85e50 <_vfiprintf_r+0xc24>
   85880:	eba0 020b 	sub.w	r2, r0, fp
   85884:	9507      	str	r5, [sp, #28]
   85886:	9205      	str	r2, [sp, #20]
   85888:	9302      	str	r3, [sp, #8]
   8588a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   8588e:	2400      	movs	r4, #0
   85890:	e624      	b.n	854dc <_vfiprintf_r+0x2b0>
   85892:	f898 2000 	ldrb.w	r2, [r8]
   85896:	f108 0701 	add.w	r7, r8, #1
   8589a:	2a2a      	cmp	r2, #42	; 0x2a
   8589c:	f000 82e9 	beq.w	85e72 <_vfiprintf_r+0xc46>
   858a0:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   858a4:	2909      	cmp	r1, #9
   858a6:	46b8      	mov	r8, r7
   858a8:	f04f 0400 	mov.w	r4, #0
   858ac:	f63f ad32 	bhi.w	85314 <_vfiprintf_r+0xe8>
   858b0:	f818 2b01 	ldrb.w	r2, [r8], #1
   858b4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   858b8:	eb01 0444 	add.w	r4, r1, r4, lsl #1
   858bc:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
   858c0:	2909      	cmp	r1, #9
   858c2:	d9f5      	bls.n	858b0 <_vfiprintf_r+0x684>
   858c4:	e526      	b.n	85314 <_vfiprintf_r+0xe8>
   858c6:	f043 0320 	orr.w	r3, r3, #32
   858ca:	f898 2000 	ldrb.w	r2, [r8]
   858ce:	e51f      	b.n	85310 <_vfiprintf_r+0xe4>
   858d0:	9508      	str	r5, [sp, #32]
   858d2:	2800      	cmp	r0, #0
   858d4:	f040 82db 	bne.w	85e8e <_vfiprintf_r+0xc62>
   858d8:	2a00      	cmp	r2, #0
   858da:	f000 80f1 	beq.w	85ac0 <_vfiprintf_r+0x894>
   858de:	2101      	movs	r1, #1
   858e0:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
   858e4:	f04f 0200 	mov.w	r2, #0
   858e8:	9101      	str	r1, [sp, #4]
   858ea:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
   858ee:	9105      	str	r1, [sp, #20]
   858f0:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
   858f4:	e788      	b.n	85808 <_vfiprintf_r+0x5dc>
   858f6:	9a07      	ldr	r2, [sp, #28]
   858f8:	6813      	ldr	r3, [r2, #0]
   858fa:	3204      	adds	r2, #4
   858fc:	9207      	str	r2, [sp, #28]
   858fe:	9a03      	ldr	r2, [sp, #12]
   85900:	601a      	str	r2, [r3, #0]
   85902:	e4d0      	b.n	852a6 <_vfiprintf_r+0x7a>
   85904:	aa0f      	add	r2, sp, #60	; 0x3c
   85906:	9904      	ldr	r1, [sp, #16]
   85908:	4620      	mov	r0, r4
   8590a:	f7ff fc4f 	bl	851ac <__sprint_r.part.0>
   8590e:	2800      	cmp	r0, #0
   85910:	f040 8143 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85914:	9910      	ldr	r1, [sp, #64]	; 0x40
   85916:	46d6      	mov	lr, sl
   85918:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8591a:	f101 0c01 	add.w	ip, r1, #1
   8591e:	e60a      	b.n	85536 <_vfiprintf_r+0x30a>
   85920:	aa0f      	add	r2, sp, #60	; 0x3c
   85922:	9904      	ldr	r1, [sp, #16]
   85924:	9806      	ldr	r0, [sp, #24]
   85926:	f7ff fc41 	bl	851ac <__sprint_r.part.0>
   8592a:	2800      	cmp	r0, #0
   8592c:	f040 8135 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85930:	46d1      	mov	r9, sl
   85932:	9910      	ldr	r1, [sp, #64]	; 0x40
   85934:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   85938:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8593a:	1c48      	adds	r0, r1, #1
   8593c:	2d00      	cmp	r5, #0
   8593e:	f43f ae24 	beq.w	8558a <_vfiprintf_r+0x35e>
   85942:	2101      	movs	r1, #1
   85944:	f10d 0537 	add.w	r5, sp, #55	; 0x37
   85948:	440a      	add	r2, r1
   8594a:	2807      	cmp	r0, #7
   8594c:	9211      	str	r2, [sp, #68]	; 0x44
   8594e:	9010      	str	r0, [sp, #64]	; 0x40
   85950:	f8c9 1004 	str.w	r1, [r9, #4]
   85954:	f8c9 5000 	str.w	r5, [r9]
   85958:	f340 8109 	ble.w	85b6e <_vfiprintf_r+0x942>
   8595c:	2a00      	cmp	r2, #0
   8595e:	f040 81af 	bne.w	85cc0 <_vfiprintf_r+0xa94>
   85962:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85964:	2b00      	cmp	r3, #0
   85966:	f43f ae23 	beq.w	855b0 <_vfiprintf_r+0x384>
   8596a:	2202      	movs	r2, #2
   8596c:	4608      	mov	r0, r1
   8596e:	46d1      	mov	r9, sl
   85970:	ab0e      	add	r3, sp, #56	; 0x38
   85972:	921d      	str	r2, [sp, #116]	; 0x74
   85974:	931c      	str	r3, [sp, #112]	; 0x70
   85976:	4601      	mov	r1, r0
   85978:	f109 0908 	add.w	r9, r9, #8
   8597c:	3001      	adds	r0, #1
   8597e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85980:	2b80      	cmp	r3, #128	; 0x80
   85982:	f43f ae1c 	beq.w	855be <_vfiprintf_r+0x392>
   85986:	9b05      	ldr	r3, [sp, #20]
   85988:	1ae4      	subs	r4, r4, r3
   8598a:	2c00      	cmp	r4, #0
   8598c:	dd2f      	ble.n	859ee <_vfiprintf_r+0x7c2>
   8598e:	2c10      	cmp	r4, #16
   85990:	f340 8220 	ble.w	85dd4 <_vfiprintf_r+0xba8>
   85994:	46ce      	mov	lr, r9
   85996:	2610      	movs	r6, #16
   85998:	4db2      	ldr	r5, [pc, #712]	; (85c64 <_vfiprintf_r+0xa38>)
   8599a:	9f06      	ldr	r7, [sp, #24]
   8599c:	f8dd 9010 	ldr.w	r9, [sp, #16]
   859a0:	e006      	b.n	859b0 <_vfiprintf_r+0x784>
   859a2:	1c88      	adds	r0, r1, #2
   859a4:	4619      	mov	r1, r3
   859a6:	f10e 0e08 	add.w	lr, lr, #8
   859aa:	3c10      	subs	r4, #16
   859ac:	2c10      	cmp	r4, #16
   859ae:	dd10      	ble.n	859d2 <_vfiprintf_r+0x7a6>
   859b0:	1c4b      	adds	r3, r1, #1
   859b2:	3210      	adds	r2, #16
   859b4:	2b07      	cmp	r3, #7
   859b6:	9211      	str	r2, [sp, #68]	; 0x44
   859b8:	e88e 0060 	stmia.w	lr, {r5, r6}
   859bc:	9310      	str	r3, [sp, #64]	; 0x40
   859be:	ddf0      	ble.n	859a2 <_vfiprintf_r+0x776>
   859c0:	2a00      	cmp	r2, #0
   859c2:	d165      	bne.n	85a90 <_vfiprintf_r+0x864>
   859c4:	3c10      	subs	r4, #16
   859c6:	2c10      	cmp	r4, #16
   859c8:	f04f 0001 	mov.w	r0, #1
   859cc:	4611      	mov	r1, r2
   859ce:	46d6      	mov	lr, sl
   859d0:	dcee      	bgt.n	859b0 <_vfiprintf_r+0x784>
   859d2:	46f1      	mov	r9, lr
   859d4:	4422      	add	r2, r4
   859d6:	2807      	cmp	r0, #7
   859d8:	9211      	str	r2, [sp, #68]	; 0x44
   859da:	f8c9 5000 	str.w	r5, [r9]
   859de:	f8c9 4004 	str.w	r4, [r9, #4]
   859e2:	9010      	str	r0, [sp, #64]	; 0x40
   859e4:	f300 8085 	bgt.w	85af2 <_vfiprintf_r+0x8c6>
   859e8:	f109 0908 	add.w	r9, r9, #8
   859ec:	3001      	adds	r0, #1
   859ee:	9905      	ldr	r1, [sp, #20]
   859f0:	2807      	cmp	r0, #7
   859f2:	440a      	add	r2, r1
   859f4:	9211      	str	r2, [sp, #68]	; 0x44
   859f6:	f8c9 b000 	str.w	fp, [r9]
   859fa:	f8c9 1004 	str.w	r1, [r9, #4]
   859fe:	9010      	str	r0, [sp, #64]	; 0x40
   85a00:	f340 8082 	ble.w	85b08 <_vfiprintf_r+0x8dc>
   85a04:	2a00      	cmp	r2, #0
   85a06:	f040 8118 	bne.w	85c3a <_vfiprintf_r+0xa0e>
   85a0a:	9b02      	ldr	r3, [sp, #8]
   85a0c:	9210      	str	r2, [sp, #64]	; 0x40
   85a0e:	0758      	lsls	r0, r3, #29
   85a10:	d535      	bpl.n	85a7e <_vfiprintf_r+0x852>
   85a12:	9b08      	ldr	r3, [sp, #32]
   85a14:	9901      	ldr	r1, [sp, #4]
   85a16:	1a5c      	subs	r4, r3, r1
   85a18:	2c00      	cmp	r4, #0
   85a1a:	f340 80e7 	ble.w	85bec <_vfiprintf_r+0x9c0>
   85a1e:	46d1      	mov	r9, sl
   85a20:	2c10      	cmp	r4, #16
   85a22:	f340 820d 	ble.w	85e40 <_vfiprintf_r+0xc14>
   85a26:	2510      	movs	r5, #16
   85a28:	9910      	ldr	r1, [sp, #64]	; 0x40
   85a2a:	4e8f      	ldr	r6, [pc, #572]	; (85c68 <_vfiprintf_r+0xa3c>)
   85a2c:	9f06      	ldr	r7, [sp, #24]
   85a2e:	f8dd b010 	ldr.w	fp, [sp, #16]
   85a32:	e006      	b.n	85a42 <_vfiprintf_r+0x816>
   85a34:	1c88      	adds	r0, r1, #2
   85a36:	4619      	mov	r1, r3
   85a38:	f109 0908 	add.w	r9, r9, #8
   85a3c:	3c10      	subs	r4, #16
   85a3e:	2c10      	cmp	r4, #16
   85a40:	dd11      	ble.n	85a66 <_vfiprintf_r+0x83a>
   85a42:	1c4b      	adds	r3, r1, #1
   85a44:	3210      	adds	r2, #16
   85a46:	2b07      	cmp	r3, #7
   85a48:	9211      	str	r2, [sp, #68]	; 0x44
   85a4a:	f8c9 6000 	str.w	r6, [r9]
   85a4e:	f8c9 5004 	str.w	r5, [r9, #4]
   85a52:	9310      	str	r3, [sp, #64]	; 0x40
   85a54:	ddee      	ble.n	85a34 <_vfiprintf_r+0x808>
   85a56:	bb42      	cbnz	r2, 85aaa <_vfiprintf_r+0x87e>
   85a58:	3c10      	subs	r4, #16
   85a5a:	2c10      	cmp	r4, #16
   85a5c:	f04f 0001 	mov.w	r0, #1
   85a60:	4611      	mov	r1, r2
   85a62:	46d1      	mov	r9, sl
   85a64:	dced      	bgt.n	85a42 <_vfiprintf_r+0x816>
   85a66:	4422      	add	r2, r4
   85a68:	2807      	cmp	r0, #7
   85a6a:	9211      	str	r2, [sp, #68]	; 0x44
   85a6c:	f8c9 6000 	str.w	r6, [r9]
   85a70:	f8c9 4004 	str.w	r4, [r9, #4]
   85a74:	9010      	str	r0, [sp, #64]	; 0x40
   85a76:	dd51      	ble.n	85b1c <_vfiprintf_r+0x8f0>
   85a78:	2a00      	cmp	r2, #0
   85a7a:	f040 819a 	bne.w	85db2 <_vfiprintf_r+0xb86>
   85a7e:	9b03      	ldr	r3, [sp, #12]
   85a80:	9a08      	ldr	r2, [sp, #32]
   85a82:	9901      	ldr	r1, [sp, #4]
   85a84:	428a      	cmp	r2, r1
   85a86:	bfac      	ite	ge
   85a88:	189b      	addge	r3, r3, r2
   85a8a:	185b      	addlt	r3, r3, r1
   85a8c:	9303      	str	r3, [sp, #12]
   85a8e:	e04e      	b.n	85b2e <_vfiprintf_r+0x902>
   85a90:	aa0f      	add	r2, sp, #60	; 0x3c
   85a92:	4649      	mov	r1, r9
   85a94:	4638      	mov	r0, r7
   85a96:	f7ff fb89 	bl	851ac <__sprint_r.part.0>
   85a9a:	2800      	cmp	r0, #0
   85a9c:	f040 813e 	bne.w	85d1c <_vfiprintf_r+0xaf0>
   85aa0:	9910      	ldr	r1, [sp, #64]	; 0x40
   85aa2:	46d6      	mov	lr, sl
   85aa4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85aa6:	1c48      	adds	r0, r1, #1
   85aa8:	e77f      	b.n	859aa <_vfiprintf_r+0x77e>
   85aaa:	aa0f      	add	r2, sp, #60	; 0x3c
   85aac:	4659      	mov	r1, fp
   85aae:	4638      	mov	r0, r7
   85ab0:	f7ff fb7c 	bl	851ac <__sprint_r.part.0>
   85ab4:	b960      	cbnz	r0, 85ad0 <_vfiprintf_r+0x8a4>
   85ab6:	9910      	ldr	r1, [sp, #64]	; 0x40
   85ab8:	46d1      	mov	r9, sl
   85aba:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85abc:	1c48      	adds	r0, r1, #1
   85abe:	e7bd      	b.n	85a3c <_vfiprintf_r+0x810>
   85ac0:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85ac2:	f8dd b010 	ldr.w	fp, [sp, #16]
   85ac6:	2b00      	cmp	r3, #0
   85ac8:	f040 81ca 	bne.w	85e60 <_vfiprintf_r+0xc34>
   85acc:	2300      	movs	r3, #0
   85ace:	9310      	str	r3, [sp, #64]	; 0x40
   85ad0:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
   85ad4:	f013 0f01 	tst.w	r3, #1
   85ad8:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   85adc:	d102      	bne.n	85ae4 <_vfiprintf_r+0x8b8>
   85ade:	059a      	lsls	r2, r3, #22
   85ae0:	f140 80dd 	bpl.w	85c9e <_vfiprintf_r+0xa72>
   85ae4:	065b      	lsls	r3, r3, #25
   85ae6:	f53f acad 	bmi.w	85444 <_vfiprintf_r+0x218>
   85aea:	9803      	ldr	r0, [sp, #12]
   85aec:	b02d      	add	sp, #180	; 0xb4
   85aee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85af2:	2a00      	cmp	r2, #0
   85af4:	f040 8105 	bne.w	85d02 <_vfiprintf_r+0xad6>
   85af8:	2301      	movs	r3, #1
   85afa:	46d1      	mov	r9, sl
   85afc:	9a05      	ldr	r2, [sp, #20]
   85afe:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
   85b02:	921d      	str	r2, [sp, #116]	; 0x74
   85b04:	9211      	str	r2, [sp, #68]	; 0x44
   85b06:	9310      	str	r3, [sp, #64]	; 0x40
   85b08:	f109 0908 	add.w	r9, r9, #8
   85b0c:	9b02      	ldr	r3, [sp, #8]
   85b0e:	0759      	lsls	r1, r3, #29
   85b10:	d504      	bpl.n	85b1c <_vfiprintf_r+0x8f0>
   85b12:	9b08      	ldr	r3, [sp, #32]
   85b14:	9901      	ldr	r1, [sp, #4]
   85b16:	1a5c      	subs	r4, r3, r1
   85b18:	2c00      	cmp	r4, #0
   85b1a:	dc81      	bgt.n	85a20 <_vfiprintf_r+0x7f4>
   85b1c:	9b03      	ldr	r3, [sp, #12]
   85b1e:	9908      	ldr	r1, [sp, #32]
   85b20:	9801      	ldr	r0, [sp, #4]
   85b22:	4281      	cmp	r1, r0
   85b24:	bfac      	ite	ge
   85b26:	185b      	addge	r3, r3, r1
   85b28:	181b      	addlt	r3, r3, r0
   85b2a:	9303      	str	r3, [sp, #12]
   85b2c:	bb72      	cbnz	r2, 85b8c <_vfiprintf_r+0x960>
   85b2e:	2300      	movs	r3, #0
   85b30:	46d1      	mov	r9, sl
   85b32:	9310      	str	r3, [sp, #64]	; 0x40
   85b34:	f7ff bbb7 	b.w	852a6 <_vfiprintf_r+0x7a>
   85b38:	aa0f      	add	r2, sp, #60	; 0x3c
   85b3a:	9904      	ldr	r1, [sp, #16]
   85b3c:	4620      	mov	r0, r4
   85b3e:	f7ff fb35 	bl	851ac <__sprint_r.part.0>
   85b42:	bb50      	cbnz	r0, 85b9a <_vfiprintf_r+0x96e>
   85b44:	9910      	ldr	r1, [sp, #64]	; 0x40
   85b46:	46d4      	mov	ip, sl
   85b48:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85b4a:	f101 0e01 	add.w	lr, r1, #1
   85b4e:	e54a      	b.n	855e6 <_vfiprintf_r+0x3ba>
   85b50:	2a00      	cmp	r2, #0
   85b52:	f47f aee5 	bne.w	85920 <_vfiprintf_r+0x6f4>
   85b56:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
   85b5a:	2900      	cmp	r1, #0
   85b5c:	f000 811a 	beq.w	85d94 <_vfiprintf_r+0xb68>
   85b60:	2201      	movs	r2, #1
   85b62:	46d1      	mov	r9, sl
   85b64:	4610      	mov	r0, r2
   85b66:	f10d 0137 	add.w	r1, sp, #55	; 0x37
   85b6a:	921d      	str	r2, [sp, #116]	; 0x74
   85b6c:	911c      	str	r1, [sp, #112]	; 0x70
   85b6e:	4601      	mov	r1, r0
   85b70:	f109 0908 	add.w	r9, r9, #8
   85b74:	3001      	adds	r0, #1
   85b76:	e508      	b.n	8558a <_vfiprintf_r+0x35e>
   85b78:	9b02      	ldr	r3, [sp, #8]
   85b7a:	2a01      	cmp	r2, #1
   85b7c:	f000 8097 	beq.w	85cae <_vfiprintf_r+0xa82>
   85b80:	2a02      	cmp	r2, #2
   85b82:	d10d      	bne.n	85ba0 <_vfiprintf_r+0x974>
   85b84:	9302      	str	r3, [sp, #8]
   85b86:	2600      	movs	r6, #0
   85b88:	2700      	movs	r7, #0
   85b8a:	e5b2      	b.n	856f2 <_vfiprintf_r+0x4c6>
   85b8c:	aa0f      	add	r2, sp, #60	; 0x3c
   85b8e:	9904      	ldr	r1, [sp, #16]
   85b90:	9806      	ldr	r0, [sp, #24]
   85b92:	f7ff fb0b 	bl	851ac <__sprint_r.part.0>
   85b96:	2800      	cmp	r0, #0
   85b98:	d0c9      	beq.n	85b2e <_vfiprintf_r+0x902>
   85b9a:	f8dd b010 	ldr.w	fp, [sp, #16]
   85b9e:	e797      	b.n	85ad0 <_vfiprintf_r+0x8a4>
   85ba0:	2600      	movs	r6, #0
   85ba2:	2700      	movs	r7, #0
   85ba4:	9302      	str	r3, [sp, #8]
   85ba6:	4651      	mov	r1, sl
   85ba8:	e000      	b.n	85bac <_vfiprintf_r+0x980>
   85baa:	4659      	mov	r1, fp
   85bac:	08f2      	lsrs	r2, r6, #3
   85bae:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   85bb2:	08f8      	lsrs	r0, r7, #3
   85bb4:	f006 0307 	and.w	r3, r6, #7
   85bb8:	4607      	mov	r7, r0
   85bba:	4616      	mov	r6, r2
   85bbc:	3330      	adds	r3, #48	; 0x30
   85bbe:	ea56 0207 	orrs.w	r2, r6, r7
   85bc2:	f801 3c01 	strb.w	r3, [r1, #-1]
   85bc6:	f101 3bff 	add.w	fp, r1, #4294967295
   85bca:	d1ee      	bne.n	85baa <_vfiprintf_r+0x97e>
   85bcc:	9a02      	ldr	r2, [sp, #8]
   85bce:	07d6      	lsls	r6, r2, #31
   85bd0:	f57f ad9f 	bpl.w	85712 <_vfiprintf_r+0x4e6>
   85bd4:	2b30      	cmp	r3, #48	; 0x30
   85bd6:	f43f ad9c 	beq.w	85712 <_vfiprintf_r+0x4e6>
   85bda:	2330      	movs	r3, #48	; 0x30
   85bdc:	3902      	subs	r1, #2
   85bde:	f80b 3c01 	strb.w	r3, [fp, #-1]
   85be2:	ebaa 0301 	sub.w	r3, sl, r1
   85be6:	9305      	str	r3, [sp, #20]
   85be8:	468b      	mov	fp, r1
   85bea:	e477      	b.n	854dc <_vfiprintf_r+0x2b0>
   85bec:	9b03      	ldr	r3, [sp, #12]
   85bee:	9a08      	ldr	r2, [sp, #32]
   85bf0:	428a      	cmp	r2, r1
   85bf2:	bfac      	ite	ge
   85bf4:	189b      	addge	r3, r3, r2
   85bf6:	185b      	addlt	r3, r3, r1
   85bf8:	9303      	str	r3, [sp, #12]
   85bfa:	e798      	b.n	85b2e <_vfiprintf_r+0x902>
   85bfc:	2202      	movs	r2, #2
   85bfe:	e44e      	b.n	8549e <_vfiprintf_r+0x272>
   85c00:	2f00      	cmp	r7, #0
   85c02:	bf08      	it	eq
   85c04:	2e0a      	cmpeq	r6, #10
   85c06:	d351      	bcc.n	85cac <_vfiprintf_r+0xa80>
   85c08:	46d3      	mov	fp, sl
   85c0a:	4630      	mov	r0, r6
   85c0c:	4639      	mov	r1, r7
   85c0e:	220a      	movs	r2, #10
   85c10:	2300      	movs	r3, #0
   85c12:	f003 feb3 	bl	8997c <__aeabi_uldivmod>
   85c16:	3230      	adds	r2, #48	; 0x30
   85c18:	f80b 2d01 	strb.w	r2, [fp, #-1]!
   85c1c:	4630      	mov	r0, r6
   85c1e:	4639      	mov	r1, r7
   85c20:	2300      	movs	r3, #0
   85c22:	220a      	movs	r2, #10
   85c24:	f003 feaa 	bl	8997c <__aeabi_uldivmod>
   85c28:	4606      	mov	r6, r0
   85c2a:	460f      	mov	r7, r1
   85c2c:	ea56 0307 	orrs.w	r3, r6, r7
   85c30:	d1eb      	bne.n	85c0a <_vfiprintf_r+0x9de>
   85c32:	e56e      	b.n	85712 <_vfiprintf_r+0x4e6>
   85c34:	9405      	str	r4, [sp, #20]
   85c36:	46d3      	mov	fp, sl
   85c38:	e450      	b.n	854dc <_vfiprintf_r+0x2b0>
   85c3a:	aa0f      	add	r2, sp, #60	; 0x3c
   85c3c:	9904      	ldr	r1, [sp, #16]
   85c3e:	9806      	ldr	r0, [sp, #24]
   85c40:	f7ff fab4 	bl	851ac <__sprint_r.part.0>
   85c44:	2800      	cmp	r0, #0
   85c46:	d1a8      	bne.n	85b9a <_vfiprintf_r+0x96e>
   85c48:	46d1      	mov	r9, sl
   85c4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85c4c:	e75e      	b.n	85b0c <_vfiprintf_r+0x8e0>
   85c4e:	aa0f      	add	r2, sp, #60	; 0x3c
   85c50:	9904      	ldr	r1, [sp, #16]
   85c52:	9806      	ldr	r0, [sp, #24]
   85c54:	f7ff faaa 	bl	851ac <__sprint_r.part.0>
   85c58:	2800      	cmp	r0, #0
   85c5a:	d19e      	bne.n	85b9a <_vfiprintf_r+0x96e>
   85c5c:	46d1      	mov	r9, sl
   85c5e:	f7ff bbbb 	b.w	853d8 <_vfiprintf_r+0x1ac>
   85c62:	bf00      	nop
   85c64:	00089df0 	.word	0x00089df0
   85c68:	00089de0 	.word	0x00089de0
   85c6c:	3104      	adds	r1, #4
   85c6e:	6816      	ldr	r6, [r2, #0]
   85c70:	2700      	movs	r7, #0
   85c72:	2201      	movs	r2, #1
   85c74:	9107      	str	r1, [sp, #28]
   85c76:	e412      	b.n	8549e <_vfiprintf_r+0x272>
   85c78:	9807      	ldr	r0, [sp, #28]
   85c7a:	2700      	movs	r7, #0
   85c7c:	4601      	mov	r1, r0
   85c7e:	3104      	adds	r1, #4
   85c80:	6806      	ldr	r6, [r0, #0]
   85c82:	9107      	str	r1, [sp, #28]
   85c84:	e40b      	b.n	8549e <_vfiprintf_r+0x272>
   85c86:	680e      	ldr	r6, [r1, #0]
   85c88:	3104      	adds	r1, #4
   85c8a:	9107      	str	r1, [sp, #28]
   85c8c:	2700      	movs	r7, #0
   85c8e:	e592      	b.n	857b6 <_vfiprintf_r+0x58a>
   85c90:	6816      	ldr	r6, [r2, #0]
   85c92:	3204      	adds	r2, #4
   85c94:	17f7      	asrs	r7, r6, #31
   85c96:	9207      	str	r2, [sp, #28]
   85c98:	4630      	mov	r0, r6
   85c9a:	4639      	mov	r1, r7
   85c9c:	e512      	b.n	856c4 <_vfiprintf_r+0x498>
   85c9e:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   85ca2:	f001 fe3b 	bl	8791c <__retarget_lock_release_recursive>
   85ca6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
   85caa:	e71b      	b.n	85ae4 <_vfiprintf_r+0x8b8>
   85cac:	9b02      	ldr	r3, [sp, #8]
   85cae:	9302      	str	r3, [sp, #8]
   85cb0:	2301      	movs	r3, #1
   85cb2:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
   85cb6:	3630      	adds	r6, #48	; 0x30
   85cb8:	f80b 6d41 	strb.w	r6, [fp, #-65]!
   85cbc:	9305      	str	r3, [sp, #20]
   85cbe:	e40d      	b.n	854dc <_vfiprintf_r+0x2b0>
   85cc0:	aa0f      	add	r2, sp, #60	; 0x3c
   85cc2:	9904      	ldr	r1, [sp, #16]
   85cc4:	9806      	ldr	r0, [sp, #24]
   85cc6:	f7ff fa71 	bl	851ac <__sprint_r.part.0>
   85cca:	2800      	cmp	r0, #0
   85ccc:	f47f af65 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85cd0:	9910      	ldr	r1, [sp, #64]	; 0x40
   85cd2:	46d1      	mov	r9, sl
   85cd4:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85cd6:	1c48      	adds	r0, r1, #1
   85cd8:	e457      	b.n	8558a <_vfiprintf_r+0x35e>
   85cda:	aa0f      	add	r2, sp, #60	; 0x3c
   85cdc:	9904      	ldr	r1, [sp, #16]
   85cde:	9806      	ldr	r0, [sp, #24]
   85ce0:	f7ff fa64 	bl	851ac <__sprint_r.part.0>
   85ce4:	2800      	cmp	r0, #0
   85ce6:	f47f af58 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85cea:	9910      	ldr	r1, [sp, #64]	; 0x40
   85cec:	46d1      	mov	r9, sl
   85cee:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85cf0:	1c48      	adds	r0, r1, #1
   85cf2:	e644      	b.n	8597e <_vfiprintf_r+0x752>
   85cf4:	2a00      	cmp	r2, #0
   85cf6:	f040 8087 	bne.w	85e08 <_vfiprintf_r+0xbdc>
   85cfa:	2001      	movs	r0, #1
   85cfc:	4611      	mov	r1, r2
   85cfe:	46d1      	mov	r9, sl
   85d00:	e641      	b.n	85986 <_vfiprintf_r+0x75a>
   85d02:	aa0f      	add	r2, sp, #60	; 0x3c
   85d04:	9904      	ldr	r1, [sp, #16]
   85d06:	9806      	ldr	r0, [sp, #24]
   85d08:	f7ff fa50 	bl	851ac <__sprint_r.part.0>
   85d0c:	2800      	cmp	r0, #0
   85d0e:	f47f af44 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85d12:	9810      	ldr	r0, [sp, #64]	; 0x40
   85d14:	46d1      	mov	r9, sl
   85d16:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85d18:	3001      	adds	r0, #1
   85d1a:	e668      	b.n	859ee <_vfiprintf_r+0x7c2>
   85d1c:	46cb      	mov	fp, r9
   85d1e:	e6d7      	b.n	85ad0 <_vfiprintf_r+0x8a4>
   85d20:	9d07      	ldr	r5, [sp, #28]
   85d22:	3507      	adds	r5, #7
   85d24:	f025 0507 	bic.w	r5, r5, #7
   85d28:	f105 0208 	add.w	r2, r5, #8
   85d2c:	e9d5 0100 	ldrd	r0, r1, [r5]
   85d30:	9207      	str	r2, [sp, #28]
   85d32:	4606      	mov	r6, r0
   85d34:	460f      	mov	r7, r1
   85d36:	e4c5      	b.n	856c4 <_vfiprintf_r+0x498>
   85d38:	9d07      	ldr	r5, [sp, #28]
   85d3a:	3507      	adds	r5, #7
   85d3c:	f025 0207 	bic.w	r2, r5, #7
   85d40:	f102 0108 	add.w	r1, r2, #8
   85d44:	e9d2 6700 	ldrd	r6, r7, [r2]
   85d48:	9107      	str	r1, [sp, #28]
   85d4a:	2201      	movs	r2, #1
   85d4c:	f7ff bba7 	b.w	8549e <_vfiprintf_r+0x272>
   85d50:	9d07      	ldr	r5, [sp, #28]
   85d52:	3507      	adds	r5, #7
   85d54:	f025 0207 	bic.w	r2, r5, #7
   85d58:	f102 0108 	add.w	r1, r2, #8
   85d5c:	e9d2 6700 	ldrd	r6, r7, [r2]
   85d60:	9107      	str	r1, [sp, #28]
   85d62:	2200      	movs	r2, #0
   85d64:	f7ff bb9b 	b.w	8549e <_vfiprintf_r+0x272>
   85d68:	9d07      	ldr	r5, [sp, #28]
   85d6a:	3507      	adds	r5, #7
   85d6c:	f025 0107 	bic.w	r1, r5, #7
   85d70:	f101 0008 	add.w	r0, r1, #8
   85d74:	9007      	str	r0, [sp, #28]
   85d76:	e9d1 6700 	ldrd	r6, r7, [r1]
   85d7a:	e51c      	b.n	857b6 <_vfiprintf_r+0x58a>
   85d7c:	46d3      	mov	fp, sl
   85d7e:	f7ff bbad 	b.w	854dc <_vfiprintf_r+0x2b0>
   85d82:	252d      	movs	r5, #45	; 0x2d
   85d84:	4276      	negs	r6, r6
   85d86:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   85d8a:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
   85d8e:	2201      	movs	r2, #1
   85d90:	f7ff bb8a 	b.w	854a8 <_vfiprintf_r+0x27c>
   85d94:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85d96:	b9b3      	cbnz	r3, 85dc6 <_vfiprintf_r+0xb9a>
   85d98:	4611      	mov	r1, r2
   85d9a:	2001      	movs	r0, #1
   85d9c:	46d1      	mov	r9, sl
   85d9e:	e5f2      	b.n	85986 <_vfiprintf_r+0x75a>
   85da0:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
   85da4:	f001 fdba 	bl	8791c <__retarget_lock_release_recursive>
   85da8:	f04f 33ff 	mov.w	r3, #4294967295
   85dac:	9303      	str	r3, [sp, #12]
   85dae:	f7ff bb4c 	b.w	8544a <_vfiprintf_r+0x21e>
   85db2:	aa0f      	add	r2, sp, #60	; 0x3c
   85db4:	9904      	ldr	r1, [sp, #16]
   85db6:	9806      	ldr	r0, [sp, #24]
   85db8:	f7ff f9f8 	bl	851ac <__sprint_r.part.0>
   85dbc:	2800      	cmp	r0, #0
   85dbe:	f47f aeec 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85dc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85dc4:	e6aa      	b.n	85b1c <_vfiprintf_r+0x8f0>
   85dc6:	2202      	movs	r2, #2
   85dc8:	ab0e      	add	r3, sp, #56	; 0x38
   85dca:	921d      	str	r2, [sp, #116]	; 0x74
   85dcc:	931c      	str	r3, [sp, #112]	; 0x70
   85dce:	2001      	movs	r0, #1
   85dd0:	46d1      	mov	r9, sl
   85dd2:	e5d0      	b.n	85976 <_vfiprintf_r+0x74a>
   85dd4:	4d34      	ldr	r5, [pc, #208]	; (85ea8 <_vfiprintf_r+0xc7c>)
   85dd6:	e5fd      	b.n	859d4 <_vfiprintf_r+0x7a8>
   85dd8:	9a07      	ldr	r2, [sp, #28]
   85dda:	4613      	mov	r3, r2
   85ddc:	3304      	adds	r3, #4
   85dde:	9307      	str	r3, [sp, #28]
   85de0:	9b03      	ldr	r3, [sp, #12]
   85de2:	6811      	ldr	r1, [r2, #0]
   85de4:	17dd      	asrs	r5, r3, #31
   85de6:	461a      	mov	r2, r3
   85de8:	462b      	mov	r3, r5
   85dea:	e9c1 2300 	strd	r2, r3, [r1]
   85dee:	f7ff ba5a 	b.w	852a6 <_vfiprintf_r+0x7a>
   85df2:	4658      	mov	r0, fp
   85df4:	9507      	str	r5, [sp, #28]
   85df6:	9302      	str	r3, [sp, #8]
   85df8:	f002 fe88 	bl	88b0c <strlen>
   85dfc:	2400      	movs	r4, #0
   85dfe:	9005      	str	r0, [sp, #20]
   85e00:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   85e04:	f7ff bb6a 	b.w	854dc <_vfiprintf_r+0x2b0>
   85e08:	aa0f      	add	r2, sp, #60	; 0x3c
   85e0a:	9904      	ldr	r1, [sp, #16]
   85e0c:	9806      	ldr	r0, [sp, #24]
   85e0e:	f7ff f9cd 	bl	851ac <__sprint_r.part.0>
   85e12:	2800      	cmp	r0, #0
   85e14:	f47f aec1 	bne.w	85b9a <_vfiprintf_r+0x96e>
   85e18:	9910      	ldr	r1, [sp, #64]	; 0x40
   85e1a:	46d1      	mov	r9, sl
   85e1c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85e1e:	1c48      	adds	r0, r1, #1
   85e20:	e5b1      	b.n	85986 <_vfiprintf_r+0x75a>
   85e22:	9910      	ldr	r1, [sp, #64]	; 0x40
   85e24:	9a11      	ldr	r2, [sp, #68]	; 0x44
   85e26:	3101      	adds	r1, #1
   85e28:	4e20      	ldr	r6, [pc, #128]	; (85eac <_vfiprintf_r+0xc80>)
   85e2a:	f7ff bb9c 	b.w	85566 <_vfiprintf_r+0x33a>
   85e2e:	2c06      	cmp	r4, #6
   85e30:	bf28      	it	cs
   85e32:	2406      	movcs	r4, #6
   85e34:	9507      	str	r5, [sp, #28]
   85e36:	9405      	str	r4, [sp, #20]
   85e38:	9401      	str	r4, [sp, #4]
   85e3a:	f8df b074 	ldr.w	fp, [pc, #116]	; 85eb0 <_vfiprintf_r+0xc84>
   85e3e:	e4e3      	b.n	85808 <_vfiprintf_r+0x5dc>
   85e40:	9810      	ldr	r0, [sp, #64]	; 0x40
   85e42:	4e1a      	ldr	r6, [pc, #104]	; (85eac <_vfiprintf_r+0xc80>)
   85e44:	3001      	adds	r0, #1
   85e46:	e60e      	b.n	85a66 <_vfiprintf_r+0x83a>
   85e48:	4686      	mov	lr, r0
   85e4a:	4d17      	ldr	r5, [pc, #92]	; (85ea8 <_vfiprintf_r+0xc7c>)
   85e4c:	f7ff bbe2 	b.w	85614 <_vfiprintf_r+0x3e8>
   85e50:	9405      	str	r4, [sp, #20]
   85e52:	9507      	str	r5, [sp, #28]
   85e54:	9302      	str	r3, [sp, #8]
   85e56:	4604      	mov	r4, r0
   85e58:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
   85e5c:	f7ff bb3e 	b.w	854dc <_vfiprintf_r+0x2b0>
   85e60:	9806      	ldr	r0, [sp, #24]
   85e62:	aa0f      	add	r2, sp, #60	; 0x3c
   85e64:	4659      	mov	r1, fp
   85e66:	f7ff f9a1 	bl	851ac <__sprint_r.part.0>
   85e6a:	2800      	cmp	r0, #0
   85e6c:	f43f ae2e 	beq.w	85acc <_vfiprintf_r+0x8a0>
   85e70:	e62e      	b.n	85ad0 <_vfiprintf_r+0x8a4>
   85e72:	9907      	ldr	r1, [sp, #28]
   85e74:	f898 2001 	ldrb.w	r2, [r8, #1]
   85e78:	680c      	ldr	r4, [r1, #0]
   85e7a:	3104      	adds	r1, #4
   85e7c:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   85e80:	46b8      	mov	r8, r7
   85e82:	9107      	str	r1, [sp, #28]
   85e84:	f7ff ba44 	b.w	85310 <_vfiprintf_r+0xe4>
   85e88:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85e8c:	e4a7      	b.n	857de <_vfiprintf_r+0x5b2>
   85e8e:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85e92:	e521      	b.n	858d8 <_vfiprintf_r+0x6ac>
   85e94:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85e98:	e47c      	b.n	85794 <_vfiprintf_r+0x568>
   85e9a:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85e9e:	e43f      	b.n	85720 <_vfiprintf_r+0x4f4>
   85ea0:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
   85ea4:	f7ff bbfa 	b.w	8569c <_vfiprintf_r+0x470>
   85ea8:	00089df0 	.word	0x00089df0
   85eac:	00089de0 	.word	0x00089de0
   85eb0:	00089db4 	.word	0x00089db4

00085eb4 <__sbprintf>:
   85eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   85eb8:	460c      	mov	r4, r1
   85eba:	f04f 0e00 	mov.w	lr, #0
   85ebe:	f44f 6580 	mov.w	r5, #1024	; 0x400
   85ec2:	4606      	mov	r6, r0
   85ec4:	4617      	mov	r7, r2
   85ec6:	4698      	mov	r8, r3
   85ec8:	6e62      	ldr	r2, [r4, #100]	; 0x64
   85eca:	89e3      	ldrh	r3, [r4, #14]
   85ecc:	8989      	ldrh	r1, [r1, #12]
   85ece:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
   85ed2:	f021 0102 	bic.w	r1, r1, #2
   85ed6:	9219      	str	r2, [sp, #100]	; 0x64
   85ed8:	f8ad 300e 	strh.w	r3, [sp, #14]
   85edc:	69e2      	ldr	r2, [r4, #28]
   85ede:	6a63      	ldr	r3, [r4, #36]	; 0x24
   85ee0:	f8ad 100c 	strh.w	r1, [sp, #12]
   85ee4:	a816      	add	r0, sp, #88	; 0x58
   85ee6:	a91a      	add	r1, sp, #104	; 0x68
   85ee8:	f8cd e018 	str.w	lr, [sp, #24]
   85eec:	9207      	str	r2, [sp, #28]
   85eee:	9309      	str	r3, [sp, #36]	; 0x24
   85ef0:	9100      	str	r1, [sp, #0]
   85ef2:	9104      	str	r1, [sp, #16]
   85ef4:	9502      	str	r5, [sp, #8]
   85ef6:	9505      	str	r5, [sp, #20]
   85ef8:	f001 fd0a 	bl	87910 <__retarget_lock_init_recursive>
   85efc:	4643      	mov	r3, r8
   85efe:	463a      	mov	r2, r7
   85f00:	4669      	mov	r1, sp
   85f02:	4630      	mov	r0, r6
   85f04:	f7ff f992 	bl	8522c <_vfiprintf_r>
   85f08:	1e05      	subs	r5, r0, #0
   85f0a:	db07      	blt.n	85f1c <__sbprintf+0x68>
   85f0c:	4630      	mov	r0, r6
   85f0e:	4669      	mov	r1, sp
   85f10:	f001 f8dc 	bl	870cc <_fflush_r>
   85f14:	2800      	cmp	r0, #0
   85f16:	bf18      	it	ne
   85f18:	f04f 35ff 	movne.w	r5, #4294967295
   85f1c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   85f20:	065b      	lsls	r3, r3, #25
   85f22:	d503      	bpl.n	85f2c <__sbprintf+0x78>
   85f24:	89a3      	ldrh	r3, [r4, #12]
   85f26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85f2a:	81a3      	strh	r3, [r4, #12]
   85f2c:	9816      	ldr	r0, [sp, #88]	; 0x58
   85f2e:	f001 fcf1 	bl	87914 <__retarget_lock_close_recursive>
   85f32:	4628      	mov	r0, r5
   85f34:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
   85f38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00085f3c <__swsetup_r>:
   85f3c:	b538      	push	{r3, r4, r5, lr}
   85f3e:	4b30      	ldr	r3, [pc, #192]	; (86000 <__swsetup_r+0xc4>)
   85f40:	4605      	mov	r5, r0
   85f42:	6818      	ldr	r0, [r3, #0]
   85f44:	460c      	mov	r4, r1
   85f46:	b110      	cbz	r0, 85f4e <__swsetup_r+0x12>
   85f48:	6b83      	ldr	r3, [r0, #56]	; 0x38
   85f4a:	2b00      	cmp	r3, #0
   85f4c:	d038      	beq.n	85fc0 <__swsetup_r+0x84>
   85f4e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   85f52:	b293      	uxth	r3, r2
   85f54:	0718      	lsls	r0, r3, #28
   85f56:	d50c      	bpl.n	85f72 <__swsetup_r+0x36>
   85f58:	6920      	ldr	r0, [r4, #16]
   85f5a:	b1a8      	cbz	r0, 85f88 <__swsetup_r+0x4c>
   85f5c:	f013 0201 	ands.w	r2, r3, #1
   85f60:	d01e      	beq.n	85fa0 <__swsetup_r+0x64>
   85f62:	2200      	movs	r2, #0
   85f64:	6963      	ldr	r3, [r4, #20]
   85f66:	60a2      	str	r2, [r4, #8]
   85f68:	425b      	negs	r3, r3
   85f6a:	61a3      	str	r3, [r4, #24]
   85f6c:	b1f0      	cbz	r0, 85fac <__swsetup_r+0x70>
   85f6e:	2000      	movs	r0, #0
   85f70:	bd38      	pop	{r3, r4, r5, pc}
   85f72:	06d9      	lsls	r1, r3, #27
   85f74:	d53b      	bpl.n	85fee <__swsetup_r+0xb2>
   85f76:	0758      	lsls	r0, r3, #29
   85f78:	d425      	bmi.n	85fc6 <__swsetup_r+0x8a>
   85f7a:	6920      	ldr	r0, [r4, #16]
   85f7c:	f042 0308 	orr.w	r3, r2, #8
   85f80:	81a3      	strh	r3, [r4, #12]
   85f82:	b29b      	uxth	r3, r3
   85f84:	2800      	cmp	r0, #0
   85f86:	d1e9      	bne.n	85f5c <__swsetup_r+0x20>
   85f88:	f403 7220 	and.w	r2, r3, #640	; 0x280
   85f8c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   85f90:	d0e4      	beq.n	85f5c <__swsetup_r+0x20>
   85f92:	4628      	mov	r0, r5
   85f94:	4621      	mov	r1, r4
   85f96:	f001 fcf1 	bl	8797c <__smakebuf_r>
   85f9a:	89a3      	ldrh	r3, [r4, #12]
   85f9c:	6920      	ldr	r0, [r4, #16]
   85f9e:	e7dd      	b.n	85f5c <__swsetup_r+0x20>
   85fa0:	0799      	lsls	r1, r3, #30
   85fa2:	bf58      	it	pl
   85fa4:	6962      	ldrpl	r2, [r4, #20]
   85fa6:	60a2      	str	r2, [r4, #8]
   85fa8:	2800      	cmp	r0, #0
   85faa:	d1e0      	bne.n	85f6e <__swsetup_r+0x32>
   85fac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   85fb0:	061a      	lsls	r2, r3, #24
   85fb2:	d5dd      	bpl.n	85f70 <__swsetup_r+0x34>
   85fb4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   85fb8:	81a3      	strh	r3, [r4, #12]
   85fba:	f04f 30ff 	mov.w	r0, #4294967295
   85fbe:	bd38      	pop	{r3, r4, r5, pc}
   85fc0:	f001 f8dc 	bl	8717c <__sinit>
   85fc4:	e7c3      	b.n	85f4e <__swsetup_r+0x12>
   85fc6:	6b21      	ldr	r1, [r4, #48]	; 0x30
   85fc8:	b151      	cbz	r1, 85fe0 <__swsetup_r+0xa4>
   85fca:	f104 0340 	add.w	r3, r4, #64	; 0x40
   85fce:	4299      	cmp	r1, r3
   85fd0:	d004      	beq.n	85fdc <__swsetup_r+0xa0>
   85fd2:	4628      	mov	r0, r5
   85fd4:	f001 f9f8 	bl	873c8 <_free_r>
   85fd8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   85fdc:	2300      	movs	r3, #0
   85fde:	6323      	str	r3, [r4, #48]	; 0x30
   85fe0:	2300      	movs	r3, #0
   85fe2:	6920      	ldr	r0, [r4, #16]
   85fe4:	f022 0224 	bic.w	r2, r2, #36	; 0x24
   85fe8:	e884 0009 	stmia.w	r4, {r0, r3}
   85fec:	e7c6      	b.n	85f7c <__swsetup_r+0x40>
   85fee:	2309      	movs	r3, #9
   85ff0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   85ff4:	602b      	str	r3, [r5, #0]
   85ff6:	f04f 30ff 	mov.w	r0, #4294967295
   85ffa:	81a2      	strh	r2, [r4, #12]
   85ffc:	bd38      	pop	{r3, r4, r5, pc}
   85ffe:	bf00      	nop
   86000:	200002d8 	.word	0x200002d8

00086004 <register_fini>:
   86004:	4b02      	ldr	r3, [pc, #8]	; (86010 <register_fini+0xc>)
   86006:	b113      	cbz	r3, 8600e <register_fini+0xa>
   86008:	4802      	ldr	r0, [pc, #8]	; (86014 <register_fini+0x10>)
   8600a:	f000 b805 	b.w	86018 <atexit>
   8600e:	4770      	bx	lr
   86010:	00000000 	.word	0x00000000
   86014:	000871f5 	.word	0x000871f5

00086018 <atexit>:
   86018:	2300      	movs	r3, #0
   8601a:	4601      	mov	r1, r0
   8601c:	461a      	mov	r2, r3
   8601e:	4618      	mov	r0, r3
   86020:	f002 bec4 	b.w	88dac <__register_exitproc>

00086024 <quorem>:
   86024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86028:	6903      	ldr	r3, [r0, #16]
   8602a:	690f      	ldr	r7, [r1, #16]
   8602c:	b083      	sub	sp, #12
   8602e:	429f      	cmp	r7, r3
   86030:	f300 8088 	bgt.w	86144 <quorem+0x120>
   86034:	3f01      	subs	r7, #1
   86036:	f101 0614 	add.w	r6, r1, #20
   8603a:	f100 0a14 	add.w	sl, r0, #20
   8603e:	f856 3027 	ldr.w	r3, [r6, r7, lsl #2]
   86042:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   86046:	3301      	adds	r3, #1
   86048:	fbb2 f8f3 	udiv	r8, r2, r3
   8604c:	00bb      	lsls	r3, r7, #2
   8604e:	9300      	str	r3, [sp, #0]
   86050:	eb06 0903 	add.w	r9, r6, r3
   86054:	4453      	add	r3, sl
   86056:	9301      	str	r3, [sp, #4]
   86058:	f1b8 0f00 	cmp.w	r8, #0
   8605c:	d03b      	beq.n	860d6 <quorem+0xb2>
   8605e:	2300      	movs	r3, #0
   86060:	46b4      	mov	ip, r6
   86062:	461c      	mov	r4, r3
   86064:	46d6      	mov	lr, sl
   86066:	f85c 2b04 	ldr.w	r2, [ip], #4
   8606a:	f8de 5000 	ldr.w	r5, [lr]
   8606e:	fa1f fb82 	uxth.w	fp, r2
   86072:	fb08 330b 	mla	r3, r8, fp, r3
   86076:	0c12      	lsrs	r2, r2, #16
   86078:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   8607c:	fb08 bb02 	mla	fp, r8, r2, fp
   86080:	b29a      	uxth	r2, r3
   86082:	1aa2      	subs	r2, r4, r2
   86084:	b2ab      	uxth	r3, r5
   86086:	fa1f f48b 	uxth.w	r4, fp
   8608a:	441a      	add	r2, r3
   8608c:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   86090:	eb04 4422 	add.w	r4, r4, r2, asr #16
   86094:	b292      	uxth	r2, r2
   86096:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   8609a:	45e1      	cmp	r9, ip
   8609c:	f84e 2b04 	str.w	r2, [lr], #4
   860a0:	ea4f 4424 	mov.w	r4, r4, asr #16
   860a4:	ea4f 431b 	mov.w	r3, fp, lsr #16
   860a8:	d2dd      	bcs.n	86066 <quorem+0x42>
   860aa:	9b00      	ldr	r3, [sp, #0]
   860ac:	f85a 3003 	ldr.w	r3, [sl, r3]
   860b0:	b98b      	cbnz	r3, 860d6 <quorem+0xb2>
   860b2:	9c01      	ldr	r4, [sp, #4]
   860b4:	1f23      	subs	r3, r4, #4
   860b6:	459a      	cmp	sl, r3
   860b8:	d20c      	bcs.n	860d4 <quorem+0xb0>
   860ba:	f854 3c04 	ldr.w	r3, [r4, #-4]
   860be:	b94b      	cbnz	r3, 860d4 <quorem+0xb0>
   860c0:	f1a4 0308 	sub.w	r3, r4, #8
   860c4:	e002      	b.n	860cc <quorem+0xa8>
   860c6:	681a      	ldr	r2, [r3, #0]
   860c8:	3b04      	subs	r3, #4
   860ca:	b91a      	cbnz	r2, 860d4 <quorem+0xb0>
   860cc:	459a      	cmp	sl, r3
   860ce:	f107 37ff 	add.w	r7, r7, #4294967295
   860d2:	d3f8      	bcc.n	860c6 <quorem+0xa2>
   860d4:	6107      	str	r7, [r0, #16]
   860d6:	4604      	mov	r4, r0
   860d8:	f002 fa0e 	bl	884f8 <__mcmp>
   860dc:	2800      	cmp	r0, #0
   860de:	db2d      	blt.n	8613c <quorem+0x118>
   860e0:	4655      	mov	r5, sl
   860e2:	2300      	movs	r3, #0
   860e4:	f108 0801 	add.w	r8, r8, #1
   860e8:	f856 1b04 	ldr.w	r1, [r6], #4
   860ec:	6828      	ldr	r0, [r5, #0]
   860ee:	b28a      	uxth	r2, r1
   860f0:	1a9a      	subs	r2, r3, r2
   860f2:	0c0b      	lsrs	r3, r1, #16
   860f4:	b281      	uxth	r1, r0
   860f6:	440a      	add	r2, r1
   860f8:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   860fc:	eb03 4322 	add.w	r3, r3, r2, asr #16
   86100:	b292      	uxth	r2, r2
   86102:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86106:	45b1      	cmp	r9, r6
   86108:	f845 2b04 	str.w	r2, [r5], #4
   8610c:	ea4f 4323 	mov.w	r3, r3, asr #16
   86110:	d2ea      	bcs.n	860e8 <quorem+0xc4>
   86112:	f85a 2027 	ldr.w	r2, [sl, r7, lsl #2]
   86116:	eb0a 0387 	add.w	r3, sl, r7, lsl #2
   8611a:	b97a      	cbnz	r2, 8613c <quorem+0x118>
   8611c:	1f1a      	subs	r2, r3, #4
   8611e:	4592      	cmp	sl, r2
   86120:	d20b      	bcs.n	8613a <quorem+0x116>
   86122:	f853 2c04 	ldr.w	r2, [r3, #-4]
   86126:	b942      	cbnz	r2, 8613a <quorem+0x116>
   86128:	3b08      	subs	r3, #8
   8612a:	e002      	b.n	86132 <quorem+0x10e>
   8612c:	681a      	ldr	r2, [r3, #0]
   8612e:	3b04      	subs	r3, #4
   86130:	b91a      	cbnz	r2, 8613a <quorem+0x116>
   86132:	459a      	cmp	sl, r3
   86134:	f107 37ff 	add.w	r7, r7, #4294967295
   86138:	d3f8      	bcc.n	8612c <quorem+0x108>
   8613a:	6127      	str	r7, [r4, #16]
   8613c:	4640      	mov	r0, r8
   8613e:	b003      	add	sp, #12
   86140:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86144:	2000      	movs	r0, #0
   86146:	b003      	add	sp, #12
   86148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8614c:	0000      	movs	r0, r0
   8614e:	0000      	movs	r0, r0

00086150 <_dtoa_r>:
   86150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86154:	6c05      	ldr	r5, [r0, #64]	; 0x40
   86156:	b09b      	sub	sp, #108	; 0x6c
   86158:	4604      	mov	r4, r0
   8615a:	4692      	mov	sl, r2
   8615c:	469b      	mov	fp, r3
   8615e:	9e27      	ldr	r6, [sp, #156]	; 0x9c
   86160:	b14d      	cbz	r5, 86176 <_dtoa_r+0x26>
   86162:	2301      	movs	r3, #1
   86164:	6c42      	ldr	r2, [r0, #68]	; 0x44
   86166:	4629      	mov	r1, r5
   86168:	4093      	lsls	r3, r2
   8616a:	60ab      	str	r3, [r5, #8]
   8616c:	606a      	str	r2, [r5, #4]
   8616e:	f001 ffeb 	bl	88148 <_Bfree>
   86172:	2300      	movs	r3, #0
   86174:	6423      	str	r3, [r4, #64]	; 0x40
   86176:	f1bb 0f00 	cmp.w	fp, #0
   8617a:	465d      	mov	r5, fp
   8617c:	db35      	blt.n	861ea <_dtoa_r+0x9a>
   8617e:	2300      	movs	r3, #0
   86180:	6033      	str	r3, [r6, #0]
   86182:	4b9d      	ldr	r3, [pc, #628]	; (863f8 <_dtoa_r+0x2a8>)
   86184:	43ab      	bics	r3, r5
   86186:	d015      	beq.n	861b4 <_dtoa_r+0x64>
   86188:	2200      	movs	r2, #0
   8618a:	2300      	movs	r3, #0
   8618c:	4650      	mov	r0, sl
   8618e:	4659      	mov	r1, fp
   86190:	f003 fb84 	bl	8989c <__aeabi_dcmpeq>
   86194:	4680      	mov	r8, r0
   86196:	2800      	cmp	r0, #0
   86198:	d02d      	beq.n	861f6 <_dtoa_r+0xa6>
   8619a:	2301      	movs	r3, #1
   8619c:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8619e:	6013      	str	r3, [r2, #0]
   861a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   861a2:	2b00      	cmp	r3, #0
   861a4:	f000 80bd 	beq.w	86322 <_dtoa_r+0x1d2>
   861a8:	4894      	ldr	r0, [pc, #592]	; (863fc <_dtoa_r+0x2ac>)
   861aa:	6018      	str	r0, [r3, #0]
   861ac:	3801      	subs	r0, #1
   861ae:	b01b      	add	sp, #108	; 0x6c
   861b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   861b4:	f242 730f 	movw	r3, #9999	; 0x270f
   861b8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   861ba:	6013      	str	r3, [r2, #0]
   861bc:	f1ba 0f00 	cmp.w	sl, #0
   861c0:	d10d      	bne.n	861de <_dtoa_r+0x8e>
   861c2:	f3c5 0513 	ubfx	r5, r5, #0, #20
   861c6:	b955      	cbnz	r5, 861de <_dtoa_r+0x8e>
   861c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   861ca:	488d      	ldr	r0, [pc, #564]	; (86400 <_dtoa_r+0x2b0>)
   861cc:	2b00      	cmp	r3, #0
   861ce:	d0ee      	beq.n	861ae <_dtoa_r+0x5e>
   861d0:	f100 0308 	add.w	r3, r0, #8
   861d4:	9a28      	ldr	r2, [sp, #160]	; 0xa0
   861d6:	6013      	str	r3, [r2, #0]
   861d8:	b01b      	add	sp, #108	; 0x6c
   861da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   861de:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   861e0:	4888      	ldr	r0, [pc, #544]	; (86404 <_dtoa_r+0x2b4>)
   861e2:	2b00      	cmp	r3, #0
   861e4:	d0e3      	beq.n	861ae <_dtoa_r+0x5e>
   861e6:	1cc3      	adds	r3, r0, #3
   861e8:	e7f4      	b.n	861d4 <_dtoa_r+0x84>
   861ea:	2301      	movs	r3, #1
   861ec:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
   861f0:	6033      	str	r3, [r6, #0]
   861f2:	46ab      	mov	fp, r5
   861f4:	e7c5      	b.n	86182 <_dtoa_r+0x32>
   861f6:	aa18      	add	r2, sp, #96	; 0x60
   861f8:	ab19      	add	r3, sp, #100	; 0x64
   861fa:	9201      	str	r2, [sp, #4]
   861fc:	9300      	str	r3, [sp, #0]
   861fe:	4652      	mov	r2, sl
   86200:	465b      	mov	r3, fp
   86202:	4620      	mov	r0, r4
   86204:	f002 fa22 	bl	8864c <__d2b>
   86208:	0d2b      	lsrs	r3, r5, #20
   8620a:	4681      	mov	r9, r0
   8620c:	d071      	beq.n	862f2 <_dtoa_r+0x1a2>
   8620e:	4650      	mov	r0, sl
   86210:	f3cb 0213 	ubfx	r2, fp, #0, #20
   86214:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
   86218:	9f18      	ldr	r7, [sp, #96]	; 0x60
   8621a:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
   8621e:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
   86222:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86226:	2200      	movs	r2, #0
   86228:	4b77      	ldr	r3, [pc, #476]	; (86408 <_dtoa_r+0x2b8>)
   8622a:	f002 ff1b 	bl	89064 <__aeabi_dsub>
   8622e:	a36c      	add	r3, pc, #432	; (adr r3, 863e0 <_dtoa_r+0x290>)
   86230:	e9d3 2300 	ldrd	r2, r3, [r3]
   86234:	f003 f8ca 	bl	893cc <__aeabi_dmul>
   86238:	a36b      	add	r3, pc, #428	; (adr r3, 863e8 <_dtoa_r+0x298>)
   8623a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8623e:	f002 ff13 	bl	89068 <__adddf3>
   86242:	e9cd 0102 	strd	r0, r1, [sp, #8]
   86246:	4630      	mov	r0, r6
   86248:	f003 f85a 	bl	89300 <__aeabi_i2d>
   8624c:	a368      	add	r3, pc, #416	; (adr r3, 863f0 <_dtoa_r+0x2a0>)
   8624e:	e9d3 2300 	ldrd	r2, r3, [r3]
   86252:	f003 f8bb 	bl	893cc <__aeabi_dmul>
   86256:	4602      	mov	r2, r0
   86258:	460b      	mov	r3, r1
   8625a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8625e:	f002 ff03 	bl	89068 <__adddf3>
   86262:	e9cd 0104 	strd	r0, r1, [sp, #16]
   86266:	f003 fb61 	bl	8992c <__aeabi_d2iz>
   8626a:	2200      	movs	r2, #0
   8626c:	9002      	str	r0, [sp, #8]
   8626e:	2300      	movs	r3, #0
   86270:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   86274:	f003 fb1c 	bl	898b0 <__aeabi_dcmplt>
   86278:	2800      	cmp	r0, #0
   8627a:	f040 816d 	bne.w	86558 <_dtoa_r+0x408>
   8627e:	9d02      	ldr	r5, [sp, #8]
   86280:	2d16      	cmp	r5, #22
   86282:	f200 8157 	bhi.w	86534 <_dtoa_r+0x3e4>
   86286:	4961      	ldr	r1, [pc, #388]	; (8640c <_dtoa_r+0x2bc>)
   86288:	4652      	mov	r2, sl
   8628a:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   8628e:	465b      	mov	r3, fp
   86290:	e9d1 0100 	ldrd	r0, r1, [r1]
   86294:	f003 fb2a 	bl	898ec <__aeabi_dcmpgt>
   86298:	2800      	cmp	r0, #0
   8629a:	f000 81be 	beq.w	8661a <_dtoa_r+0x4ca>
   8629e:	1e6b      	subs	r3, r5, #1
   862a0:	9302      	str	r3, [sp, #8]
   862a2:	2300      	movs	r3, #0
   862a4:	930e      	str	r3, [sp, #56]	; 0x38
   862a6:	1bbf      	subs	r7, r7, r6
   862a8:	1e7b      	subs	r3, r7, #1
   862aa:	9308      	str	r3, [sp, #32]
   862ac:	f100 814e 	bmi.w	8654c <_dtoa_r+0x3fc>
   862b0:	2300      	movs	r3, #0
   862b2:	930a      	str	r3, [sp, #40]	; 0x28
   862b4:	9b02      	ldr	r3, [sp, #8]
   862b6:	2b00      	cmp	r3, #0
   862b8:	f2c0 813f 	blt.w	8653a <_dtoa_r+0x3ea>
   862bc:	9a08      	ldr	r2, [sp, #32]
   862be:	930d      	str	r3, [sp, #52]	; 0x34
   862c0:	4611      	mov	r1, r2
   862c2:	4419      	add	r1, r3
   862c4:	2300      	movs	r3, #0
   862c6:	9108      	str	r1, [sp, #32]
   862c8:	930c      	str	r3, [sp, #48]	; 0x30
   862ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
   862cc:	2b09      	cmp	r3, #9
   862ce:	d82a      	bhi.n	86326 <_dtoa_r+0x1d6>
   862d0:	2b05      	cmp	r3, #5
   862d2:	f340 8658 	ble.w	86f86 <_dtoa_r+0xe36>
   862d6:	2500      	movs	r5, #0
   862d8:	3b04      	subs	r3, #4
   862da:	9324      	str	r3, [sp, #144]	; 0x90
   862dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
   862de:	3b02      	subs	r3, #2
   862e0:	2b03      	cmp	r3, #3
   862e2:	f200 863f 	bhi.w	86f64 <_dtoa_r+0xe14>
   862e6:	e8df f013 	tbh	[pc, r3, lsl #1]
   862ea:	03ce      	.short	0x03ce
   862ec:	03d902c3 	.word	0x03d902c3
   862f0:	045b      	.short	0x045b
   862f2:	9f18      	ldr	r7, [sp, #96]	; 0x60
   862f4:	9e19      	ldr	r6, [sp, #100]	; 0x64
   862f6:	443e      	add	r6, r7
   862f8:	f206 4332 	addw	r3, r6, #1074	; 0x432
   862fc:	2b20      	cmp	r3, #32
   862fe:	f340 8187 	ble.w	86610 <_dtoa_r+0x4c0>
   86302:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   86306:	f206 4012 	addw	r0, r6, #1042	; 0x412
   8630a:	409d      	lsls	r5, r3
   8630c:	fa2a f000 	lsr.w	r0, sl, r0
   86310:	4328      	orrs	r0, r5
   86312:	f002 ffe5 	bl	892e0 <__aeabi_ui2d>
   86316:	2301      	movs	r3, #1
   86318:	3e01      	subs	r6, #1
   8631a:	9314      	str	r3, [sp, #80]	; 0x50
   8631c:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   86320:	e781      	b.n	86226 <_dtoa_r+0xd6>
   86322:	483b      	ldr	r0, [pc, #236]	; (86410 <_dtoa_r+0x2c0>)
   86324:	e743      	b.n	861ae <_dtoa_r+0x5e>
   86326:	2100      	movs	r1, #0
   86328:	4620      	mov	r0, r4
   8632a:	6461      	str	r1, [r4, #68]	; 0x44
   8632c:	9125      	str	r1, [sp, #148]	; 0x94
   8632e:	f001 fee5 	bl	880fc <_Balloc>
   86332:	f04f 33ff 	mov.w	r3, #4294967295
   86336:	9307      	str	r3, [sp, #28]
   86338:	930f      	str	r3, [sp, #60]	; 0x3c
   8633a:	2301      	movs	r3, #1
   8633c:	9a25      	ldr	r2, [sp, #148]	; 0x94
   8633e:	9004      	str	r0, [sp, #16]
   86340:	6420      	str	r0, [r4, #64]	; 0x40
   86342:	9224      	str	r2, [sp, #144]	; 0x90
   86344:	930b      	str	r3, [sp, #44]	; 0x2c
   86346:	9b19      	ldr	r3, [sp, #100]	; 0x64
   86348:	2b00      	cmp	r3, #0
   8634a:	f2c0 80d3 	blt.w	864f4 <_dtoa_r+0x3a4>
   8634e:	9a02      	ldr	r2, [sp, #8]
   86350:	2a0e      	cmp	r2, #14
   86352:	f300 80cf 	bgt.w	864f4 <_dtoa_r+0x3a4>
   86356:	4b2d      	ldr	r3, [pc, #180]	; (8640c <_dtoa_r+0x2bc>)
   86358:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   8635c:	e9d3 2300 	ldrd	r2, r3, [r3]
   86360:	e9cd 2308 	strd	r2, r3, [sp, #32]
   86364:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86366:	2b00      	cmp	r3, #0
   86368:	f2c0 83b4 	blt.w	86ad4 <_dtoa_r+0x984>
   8636c:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
   86370:	4650      	mov	r0, sl
   86372:	462a      	mov	r2, r5
   86374:	4633      	mov	r3, r6
   86376:	4659      	mov	r1, fp
   86378:	f003 f952 	bl	89620 <__aeabi_ddiv>
   8637c:	f003 fad6 	bl	8992c <__aeabi_d2iz>
   86380:	4680      	mov	r8, r0
   86382:	f002 ffbd 	bl	89300 <__aeabi_i2d>
   86386:	462a      	mov	r2, r5
   86388:	4633      	mov	r3, r6
   8638a:	f003 f81f 	bl	893cc <__aeabi_dmul>
   8638e:	4602      	mov	r2, r0
   86390:	460b      	mov	r3, r1
   86392:	4650      	mov	r0, sl
   86394:	4659      	mov	r1, fp
   86396:	f002 fe65 	bl	89064 <__aeabi_dsub>
   8639a:	9e07      	ldr	r6, [sp, #28]
   8639c:	9f04      	ldr	r7, [sp, #16]
   8639e:	f108 0530 	add.w	r5, r8, #48	; 0x30
   863a2:	2e01      	cmp	r6, #1
   863a4:	703d      	strb	r5, [r7, #0]
   863a6:	4602      	mov	r2, r0
   863a8:	460b      	mov	r3, r1
   863aa:	f107 0501 	add.w	r5, r7, #1
   863ae:	d064      	beq.n	8647a <_dtoa_r+0x32a>
   863b0:	2200      	movs	r2, #0
   863b2:	4b18      	ldr	r3, [pc, #96]	; (86414 <_dtoa_r+0x2c4>)
   863b4:	f003 f80a 	bl	893cc <__aeabi_dmul>
   863b8:	2200      	movs	r2, #0
   863ba:	2300      	movs	r3, #0
   863bc:	4606      	mov	r6, r0
   863be:	460f      	mov	r7, r1
   863c0:	f003 fa6c 	bl	8989c <__aeabi_dcmpeq>
   863c4:	2800      	cmp	r0, #0
   863c6:	f040 8082 	bne.w	864ce <_dtoa_r+0x37e>
   863ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   863ce:	f04f 0a00 	mov.w	sl, #0
   863d2:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
   863d6:	f04f 0b00 	mov.w	fp, #0
   863da:	940b      	str	r4, [sp, #44]	; 0x2c
   863dc:	e029      	b.n	86432 <_dtoa_r+0x2e2>
   863de:	bf00      	nop
   863e0:	636f4361 	.word	0x636f4361
   863e4:	3fd287a7 	.word	0x3fd287a7
   863e8:	8b60c8b3 	.word	0x8b60c8b3
   863ec:	3fc68a28 	.word	0x3fc68a28
   863f0:	509f79fb 	.word	0x509f79fb
   863f4:	3fd34413 	.word	0x3fd34413
   863f8:	7ff00000 	.word	0x7ff00000
   863fc:	00089dbd 	.word	0x00089dbd
   86400:	00089e00 	.word	0x00089e00
   86404:	00089e0c 	.word	0x00089e0c
   86408:	3ff80000 	.word	0x3ff80000
   8640c:	00089e48 	.word	0x00089e48
   86410:	00089dbc 	.word	0x00089dbc
   86414:	40240000 	.word	0x40240000
   86418:	2200      	movs	r2, #0
   8641a:	4b81      	ldr	r3, [pc, #516]	; (86620 <_dtoa_r+0x4d0>)
   8641c:	f002 ffd6 	bl	893cc <__aeabi_dmul>
   86420:	4652      	mov	r2, sl
   86422:	465b      	mov	r3, fp
   86424:	4606      	mov	r6, r0
   86426:	460f      	mov	r7, r1
   86428:	f003 fa38 	bl	8989c <__aeabi_dcmpeq>
   8642c:	2800      	cmp	r0, #0
   8642e:	f040 83ba 	bne.w	86ba6 <_dtoa_r+0xa56>
   86432:	4642      	mov	r2, r8
   86434:	464b      	mov	r3, r9
   86436:	4630      	mov	r0, r6
   86438:	4639      	mov	r1, r7
   8643a:	f003 f8f1 	bl	89620 <__aeabi_ddiv>
   8643e:	f003 fa75 	bl	8992c <__aeabi_d2iz>
   86442:	4604      	mov	r4, r0
   86444:	f002 ff5c 	bl	89300 <__aeabi_i2d>
   86448:	4642      	mov	r2, r8
   8644a:	464b      	mov	r3, r9
   8644c:	f002 ffbe 	bl	893cc <__aeabi_dmul>
   86450:	4602      	mov	r2, r0
   86452:	460b      	mov	r3, r1
   86454:	4630      	mov	r0, r6
   86456:	4639      	mov	r1, r7
   86458:	f002 fe04 	bl	89064 <__aeabi_dsub>
   8645c:	f104 0630 	add.w	r6, r4, #48	; 0x30
   86460:	f805 6b01 	strb.w	r6, [r5], #1
   86464:	9e04      	ldr	r6, [sp, #16]
   86466:	9f07      	ldr	r7, [sp, #28]
   86468:	1bae      	subs	r6, r5, r6
   8646a:	42be      	cmp	r6, r7
   8646c:	4602      	mov	r2, r0
   8646e:	460b      	mov	r3, r1
   86470:	d1d2      	bne.n	86418 <_dtoa_r+0x2c8>
   86472:	46a0      	mov	r8, r4
   86474:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   86478:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   8647a:	4610      	mov	r0, r2
   8647c:	4619      	mov	r1, r3
   8647e:	f002 fdf3 	bl	89068 <__adddf3>
   86482:	4606      	mov	r6, r0
   86484:	460f      	mov	r7, r1
   86486:	4602      	mov	r2, r0
   86488:	460b      	mov	r3, r1
   8648a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   8648e:	f003 fa0f 	bl	898b0 <__aeabi_dcmplt>
   86492:	b948      	cbnz	r0, 864a8 <_dtoa_r+0x358>
   86494:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   86498:	4632      	mov	r2, r6
   8649a:	463b      	mov	r3, r7
   8649c:	f003 f9fe 	bl	8989c <__aeabi_dcmpeq>
   864a0:	b1a8      	cbz	r0, 864ce <_dtoa_r+0x37e>
   864a2:	f018 0f01 	tst.w	r8, #1
   864a6:	d012      	beq.n	864ce <_dtoa_r+0x37e>
   864a8:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   864ac:	1e6b      	subs	r3, r5, #1
   864ae:	9a04      	ldr	r2, [sp, #16]
   864b0:	e004      	b.n	864bc <_dtoa_r+0x36c>
   864b2:	429a      	cmp	r2, r3
   864b4:	f000 8402 	beq.w	86cbc <_dtoa_r+0xb6c>
   864b8:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
   864bc:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   864c0:	f103 0501 	add.w	r5, r3, #1
   864c4:	d0f5      	beq.n	864b2 <_dtoa_r+0x362>
   864c6:	f108 0801 	add.w	r8, r8, #1
   864ca:	f883 8000 	strb.w	r8, [r3]
   864ce:	4649      	mov	r1, r9
   864d0:	4620      	mov	r0, r4
   864d2:	f001 fe39 	bl	88148 <_Bfree>
   864d6:	2200      	movs	r2, #0
   864d8:	9b02      	ldr	r3, [sp, #8]
   864da:	702a      	strb	r2, [r5, #0]
   864dc:	9a26      	ldr	r2, [sp, #152]	; 0x98
   864de:	3301      	adds	r3, #1
   864e0:	6013      	str	r3, [r2, #0]
   864e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
   864e4:	2b00      	cmp	r3, #0
   864e6:	f000 839f 	beq.w	86c28 <_dtoa_r+0xad8>
   864ea:	9804      	ldr	r0, [sp, #16]
   864ec:	601d      	str	r5, [r3, #0]
   864ee:	b01b      	add	sp, #108	; 0x6c
   864f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   864f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   864f6:	2a00      	cmp	r2, #0
   864f8:	d03e      	beq.n	86578 <_dtoa_r+0x428>
   864fa:	9a24      	ldr	r2, [sp, #144]	; 0x90
   864fc:	2a01      	cmp	r2, #1
   864fe:	f340 8311 	ble.w	86b24 <_dtoa_r+0x9d4>
   86502:	9b07      	ldr	r3, [sp, #28]
   86504:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86506:	1e5f      	subs	r7, r3, #1
   86508:	42ba      	cmp	r2, r7
   8650a:	f2c0 8390 	blt.w	86c2e <_dtoa_r+0xade>
   8650e:	1bd7      	subs	r7, r2, r7
   86510:	9b07      	ldr	r3, [sp, #28]
   86512:	2b00      	cmp	r3, #0
   86514:	f2c0 848c 	blt.w	86e30 <_dtoa_r+0xce0>
   86518:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8651a:	9b07      	ldr	r3, [sp, #28]
   8651c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8651e:	2101      	movs	r1, #1
   86520:	441a      	add	r2, r3
   86522:	920a      	str	r2, [sp, #40]	; 0x28
   86524:	9a08      	ldr	r2, [sp, #32]
   86526:	4620      	mov	r0, r4
   86528:	441a      	add	r2, r3
   8652a:	9208      	str	r2, [sp, #32]
   8652c:	f001 fea8 	bl	88280 <__i2b>
   86530:	4606      	mov	r6, r0
   86532:	e023      	b.n	8657c <_dtoa_r+0x42c>
   86534:	2301      	movs	r3, #1
   86536:	930e      	str	r3, [sp, #56]	; 0x38
   86538:	e6b5      	b.n	862a6 <_dtoa_r+0x156>
   8653a:	2300      	movs	r3, #0
   8653c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8653e:	930d      	str	r3, [sp, #52]	; 0x34
   86540:	9b02      	ldr	r3, [sp, #8]
   86542:	1ad2      	subs	r2, r2, r3
   86544:	425b      	negs	r3, r3
   86546:	920a      	str	r2, [sp, #40]	; 0x28
   86548:	930c      	str	r3, [sp, #48]	; 0x30
   8654a:	e6be      	b.n	862ca <_dtoa_r+0x17a>
   8654c:	f1c7 0301 	rsb	r3, r7, #1
   86550:	930a      	str	r3, [sp, #40]	; 0x28
   86552:	2300      	movs	r3, #0
   86554:	9308      	str	r3, [sp, #32]
   86556:	e6ad      	b.n	862b4 <_dtoa_r+0x164>
   86558:	9d02      	ldr	r5, [sp, #8]
   8655a:	4628      	mov	r0, r5
   8655c:	f002 fed0 	bl	89300 <__aeabi_i2d>
   86560:	4602      	mov	r2, r0
   86562:	460b      	mov	r3, r1
   86564:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   86568:	f003 f998 	bl	8989c <__aeabi_dcmpeq>
   8656c:	2800      	cmp	r0, #0
   8656e:	f47f ae86 	bne.w	8627e <_dtoa_r+0x12e>
   86572:	1e6b      	subs	r3, r5, #1
   86574:	9302      	str	r3, [sp, #8]
   86576:	e682      	b.n	8627e <_dtoa_r+0x12e>
   86578:	ad0a      	add	r5, sp, #40	; 0x28
   8657a:	cde0      	ldmia	r5, {r5, r6, r7}
   8657c:	2d00      	cmp	r5, #0
   8657e:	dd0c      	ble.n	8659a <_dtoa_r+0x44a>
   86580:	9908      	ldr	r1, [sp, #32]
   86582:	2900      	cmp	r1, #0
   86584:	460b      	mov	r3, r1
   86586:	dd08      	ble.n	8659a <_dtoa_r+0x44a>
   86588:	42a9      	cmp	r1, r5
   8658a:	bfa8      	it	ge
   8658c:	462b      	movge	r3, r5
   8658e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   86590:	1aed      	subs	r5, r5, r3
   86592:	1ad2      	subs	r2, r2, r3
   86594:	1acb      	subs	r3, r1, r3
   86596:	920a      	str	r2, [sp, #40]	; 0x28
   86598:	9308      	str	r3, [sp, #32]
   8659a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   8659c:	b1d3      	cbz	r3, 865d4 <_dtoa_r+0x484>
   8659e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   865a0:	2b00      	cmp	r3, #0
   865a2:	f000 82b8 	beq.w	86b16 <_dtoa_r+0x9c6>
   865a6:	2f00      	cmp	r7, #0
   865a8:	dd10      	ble.n	865cc <_dtoa_r+0x47c>
   865aa:	4631      	mov	r1, r6
   865ac:	463a      	mov	r2, r7
   865ae:	4620      	mov	r0, r4
   865b0:	f001 ff02 	bl	883b8 <__pow5mult>
   865b4:	464a      	mov	r2, r9
   865b6:	4601      	mov	r1, r0
   865b8:	4606      	mov	r6, r0
   865ba:	4620      	mov	r0, r4
   865bc:	f001 fe6a 	bl	88294 <__multiply>
   865c0:	4603      	mov	r3, r0
   865c2:	4649      	mov	r1, r9
   865c4:	4620      	mov	r0, r4
   865c6:	4699      	mov	r9, r3
   865c8:	f001 fdbe 	bl	88148 <_Bfree>
   865cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   865ce:	1bda      	subs	r2, r3, r7
   865d0:	f040 82a2 	bne.w	86b18 <_dtoa_r+0x9c8>
   865d4:	2101      	movs	r1, #1
   865d6:	4620      	mov	r0, r4
   865d8:	f001 fe52 	bl	88280 <__i2b>
   865dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   865de:	4680      	mov	r8, r0
   865e0:	2b00      	cmp	r3, #0
   865e2:	dd1f      	ble.n	86624 <_dtoa_r+0x4d4>
   865e4:	4601      	mov	r1, r0
   865e6:	461a      	mov	r2, r3
   865e8:	4620      	mov	r0, r4
   865ea:	f001 fee5 	bl	883b8 <__pow5mult>
   865ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
   865f0:	4680      	mov	r8, r0
   865f2:	2b01      	cmp	r3, #1
   865f4:	f340 8255 	ble.w	86aa2 <_dtoa_r+0x952>
   865f8:	2300      	movs	r3, #0
   865fa:	930c      	str	r3, [sp, #48]	; 0x30
   865fc:	f8d8 3010 	ldr.w	r3, [r8, #16]
   86600:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   86604:	6918      	ldr	r0, [r3, #16]
   86606:	f001 fdeb 	bl	881e0 <__hi0bits>
   8660a:	f1c0 0020 	rsb	r0, r0, #32
   8660e:	e013      	b.n	86638 <_dtoa_r+0x4e8>
   86610:	f1c3 0520 	rsb	r5, r3, #32
   86614:	fa0a f005 	lsl.w	r0, sl, r5
   86618:	e67b      	b.n	86312 <_dtoa_r+0x1c2>
   8661a:	900e      	str	r0, [sp, #56]	; 0x38
   8661c:	e643      	b.n	862a6 <_dtoa_r+0x156>
   8661e:	bf00      	nop
   86620:	40240000 	.word	0x40240000
   86624:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86626:	2b01      	cmp	r3, #1
   86628:	f340 8285 	ble.w	86b36 <_dtoa_r+0x9e6>
   8662c:	2300      	movs	r3, #0
   8662e:	930c      	str	r3, [sp, #48]	; 0x30
   86630:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86632:	2001      	movs	r0, #1
   86634:	2b00      	cmp	r3, #0
   86636:	d1e1      	bne.n	865fc <_dtoa_r+0x4ac>
   86638:	9a08      	ldr	r2, [sp, #32]
   8663a:	4410      	add	r0, r2
   8663c:	f010 001f 	ands.w	r0, r0, #31
   86640:	f000 80a1 	beq.w	86786 <_dtoa_r+0x636>
   86644:	f1c0 0320 	rsb	r3, r0, #32
   86648:	2b04      	cmp	r3, #4
   8664a:	f340 8486 	ble.w	86f5a <_dtoa_r+0xe0a>
   8664e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86650:	f1c0 001c 	rsb	r0, r0, #28
   86654:	4403      	add	r3, r0
   86656:	930a      	str	r3, [sp, #40]	; 0x28
   86658:	4613      	mov	r3, r2
   8665a:	4403      	add	r3, r0
   8665c:	4405      	add	r5, r0
   8665e:	9308      	str	r3, [sp, #32]
   86660:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86662:	2b00      	cmp	r3, #0
   86664:	dd05      	ble.n	86672 <_dtoa_r+0x522>
   86666:	4649      	mov	r1, r9
   86668:	461a      	mov	r2, r3
   8666a:	4620      	mov	r0, r4
   8666c:	f001 fef4 	bl	88458 <__lshift>
   86670:	4681      	mov	r9, r0
   86672:	9b08      	ldr	r3, [sp, #32]
   86674:	2b00      	cmp	r3, #0
   86676:	dd05      	ble.n	86684 <_dtoa_r+0x534>
   86678:	4641      	mov	r1, r8
   8667a:	461a      	mov	r2, r3
   8667c:	4620      	mov	r0, r4
   8667e:	f001 feeb 	bl	88458 <__lshift>
   86682:	4680      	mov	r8, r0
   86684:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86686:	2b00      	cmp	r3, #0
   86688:	f040 8086 	bne.w	86798 <_dtoa_r+0x648>
   8668c:	9b07      	ldr	r3, [sp, #28]
   8668e:	2b00      	cmp	r3, #0
   86690:	f340 8264 	ble.w	86b5c <_dtoa_r+0xa0c>
   86694:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   86696:	2b00      	cmp	r3, #0
   86698:	f000 8098 	beq.w	867cc <_dtoa_r+0x67c>
   8669c:	2d00      	cmp	r5, #0
   8669e:	dd05      	ble.n	866ac <_dtoa_r+0x55c>
   866a0:	4631      	mov	r1, r6
   866a2:	462a      	mov	r2, r5
   866a4:	4620      	mov	r0, r4
   866a6:	f001 fed7 	bl	88458 <__lshift>
   866aa:	4606      	mov	r6, r0
   866ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   866ae:	2b00      	cmp	r3, #0
   866b0:	f040 8336 	bne.w	86d20 <_dtoa_r+0xbd0>
   866b4:	9608      	str	r6, [sp, #32]
   866b6:	9b07      	ldr	r3, [sp, #28]
   866b8:	9a04      	ldr	r2, [sp, #16]
   866ba:	3b01      	subs	r3, #1
   866bc:	18d3      	adds	r3, r2, r3
   866be:	930b      	str	r3, [sp, #44]	; 0x2c
   866c0:	4617      	mov	r7, r2
   866c2:	f00a 0301 	and.w	r3, sl, #1
   866c6:	46c2      	mov	sl, r8
   866c8:	f8dd b020 	ldr.w	fp, [sp, #32]
   866cc:	930c      	str	r3, [sp, #48]	; 0x30
   866ce:	4651      	mov	r1, sl
   866d0:	4648      	mov	r0, r9
   866d2:	f7ff fca7 	bl	86024 <quorem>
   866d6:	4631      	mov	r1, r6
   866d8:	4605      	mov	r5, r0
   866da:	4648      	mov	r0, r9
   866dc:	f001 ff0c 	bl	884f8 <__mcmp>
   866e0:	465a      	mov	r2, fp
   866e2:	9007      	str	r0, [sp, #28]
   866e4:	4651      	mov	r1, sl
   866e6:	4620      	mov	r0, r4
   866e8:	f001 ff22 	bl	88530 <__mdiff>
   866ec:	68c2      	ldr	r2, [r0, #12]
   866ee:	4680      	mov	r8, r0
   866f0:	f105 0330 	add.w	r3, r5, #48	; 0x30
   866f4:	2a00      	cmp	r2, #0
   866f6:	f040 8229 	bne.w	86b4c <_dtoa_r+0x9fc>
   866fa:	4601      	mov	r1, r0
   866fc:	4648      	mov	r0, r9
   866fe:	930a      	str	r3, [sp, #40]	; 0x28
   86700:	f001 fefa 	bl	884f8 <__mcmp>
   86704:	4641      	mov	r1, r8
   86706:	9008      	str	r0, [sp, #32]
   86708:	4620      	mov	r0, r4
   8670a:	f001 fd1d 	bl	88148 <_Bfree>
   8670e:	9a08      	ldr	r2, [sp, #32]
   86710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86712:	b932      	cbnz	r2, 86722 <_dtoa_r+0x5d2>
   86714:	9924      	ldr	r1, [sp, #144]	; 0x90
   86716:	b921      	cbnz	r1, 86722 <_dtoa_r+0x5d2>
   86718:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8671a:	2a00      	cmp	r2, #0
   8671c:	f000 83ee 	beq.w	86efc <_dtoa_r+0xdac>
   86720:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86722:	9907      	ldr	r1, [sp, #28]
   86724:	2900      	cmp	r1, #0
   86726:	f2c0 829f 	blt.w	86c68 <_dtoa_r+0xb18>
   8672a:	d105      	bne.n	86738 <_dtoa_r+0x5e8>
   8672c:	9924      	ldr	r1, [sp, #144]	; 0x90
   8672e:	b919      	cbnz	r1, 86738 <_dtoa_r+0x5e8>
   86730:	990c      	ldr	r1, [sp, #48]	; 0x30
   86732:	2900      	cmp	r1, #0
   86734:	f000 8298 	beq.w	86c68 <_dtoa_r+0xb18>
   86738:	2a00      	cmp	r2, #0
   8673a:	f300 8305 	bgt.w	86d48 <_dtoa_r+0xbf8>
   8673e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   86740:	f107 0801 	add.w	r8, r7, #1
   86744:	4297      	cmp	r7, r2
   86746:	703b      	strb	r3, [r7, #0]
   86748:	4645      	mov	r5, r8
   8674a:	f000 830b 	beq.w	86d64 <_dtoa_r+0xc14>
   8674e:	4649      	mov	r1, r9
   86750:	2300      	movs	r3, #0
   86752:	220a      	movs	r2, #10
   86754:	4620      	mov	r0, r4
   86756:	f001 fd01 	bl	8815c <__multadd>
   8675a:	455e      	cmp	r6, fp
   8675c:	4681      	mov	r9, r0
   8675e:	4631      	mov	r1, r6
   86760:	f04f 0300 	mov.w	r3, #0
   86764:	f04f 020a 	mov.w	r2, #10
   86768:	4620      	mov	r0, r4
   8676a:	f000 81e9 	beq.w	86b40 <_dtoa_r+0x9f0>
   8676e:	f001 fcf5 	bl	8815c <__multadd>
   86772:	4659      	mov	r1, fp
   86774:	4606      	mov	r6, r0
   86776:	2300      	movs	r3, #0
   86778:	220a      	movs	r2, #10
   8677a:	4620      	mov	r0, r4
   8677c:	f001 fcee 	bl	8815c <__multadd>
   86780:	4647      	mov	r7, r8
   86782:	4683      	mov	fp, r0
   86784:	e7a3      	b.n	866ce <_dtoa_r+0x57e>
   86786:	201c      	movs	r0, #28
   86788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8678a:	4405      	add	r5, r0
   8678c:	4403      	add	r3, r0
   8678e:	930a      	str	r3, [sp, #40]	; 0x28
   86790:	9b08      	ldr	r3, [sp, #32]
   86792:	4403      	add	r3, r0
   86794:	9308      	str	r3, [sp, #32]
   86796:	e763      	b.n	86660 <_dtoa_r+0x510>
   86798:	4641      	mov	r1, r8
   8679a:	4648      	mov	r0, r9
   8679c:	f001 feac 	bl	884f8 <__mcmp>
   867a0:	2800      	cmp	r0, #0
   867a2:	f6bf af73 	bge.w	8668c <_dtoa_r+0x53c>
   867a6:	9f02      	ldr	r7, [sp, #8]
   867a8:	4649      	mov	r1, r9
   867aa:	2300      	movs	r3, #0
   867ac:	220a      	movs	r2, #10
   867ae:	4620      	mov	r0, r4
   867b0:	3f01      	subs	r7, #1
   867b2:	9702      	str	r7, [sp, #8]
   867b4:	f001 fcd2 	bl	8815c <__multadd>
   867b8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   867ba:	4681      	mov	r9, r0
   867bc:	2b00      	cmp	r3, #0
   867be:	f040 83b5 	bne.w	86f2c <_dtoa_r+0xddc>
   867c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   867c4:	2b00      	cmp	r3, #0
   867c6:	f340 83be 	ble.w	86f46 <_dtoa_r+0xdf6>
   867ca:	9307      	str	r3, [sp, #28]
   867cc:	f8dd a010 	ldr.w	sl, [sp, #16]
   867d0:	9f07      	ldr	r7, [sp, #28]
   867d2:	4655      	mov	r5, sl
   867d4:	e006      	b.n	867e4 <_dtoa_r+0x694>
   867d6:	4649      	mov	r1, r9
   867d8:	2300      	movs	r3, #0
   867da:	220a      	movs	r2, #10
   867dc:	4620      	mov	r0, r4
   867de:	f001 fcbd 	bl	8815c <__multadd>
   867e2:	4681      	mov	r9, r0
   867e4:	4641      	mov	r1, r8
   867e6:	4648      	mov	r0, r9
   867e8:	f7ff fc1c 	bl	86024 <quorem>
   867ec:	3030      	adds	r0, #48	; 0x30
   867ee:	f805 0b01 	strb.w	r0, [r5], #1
   867f2:	eba5 030a 	sub.w	r3, r5, sl
   867f6:	42bb      	cmp	r3, r7
   867f8:	dbed      	blt.n	867d6 <_dtoa_r+0x686>
   867fa:	9b04      	ldr	r3, [sp, #16]
   867fc:	9a07      	ldr	r2, [sp, #28]
   867fe:	4682      	mov	sl, r0
   86800:	2a01      	cmp	r2, #1
   86802:	bfac      	ite	ge
   86804:	189b      	addge	r3, r3, r2
   86806:	3301      	addlt	r3, #1
   86808:	f04f 0b00 	mov.w	fp, #0
   8680c:	461d      	mov	r5, r3
   8680e:	4649      	mov	r1, r9
   86810:	2201      	movs	r2, #1
   86812:	4620      	mov	r0, r4
   86814:	f001 fe20 	bl	88458 <__lshift>
   86818:	4641      	mov	r1, r8
   8681a:	4681      	mov	r9, r0
   8681c:	f001 fe6c 	bl	884f8 <__mcmp>
   86820:	2800      	cmp	r0, #0
   86822:	f340 823f 	ble.w	86ca4 <_dtoa_r+0xb54>
   86826:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   8682a:	1e6b      	subs	r3, r5, #1
   8682c:	9904      	ldr	r1, [sp, #16]
   8682e:	e004      	b.n	8683a <_dtoa_r+0x6ea>
   86830:	428b      	cmp	r3, r1
   86832:	f000 81ae 	beq.w	86b92 <_dtoa_r+0xa42>
   86836:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
   8683a:	2a39      	cmp	r2, #57	; 0x39
   8683c:	f103 0501 	add.w	r5, r3, #1
   86840:	d0f6      	beq.n	86830 <_dtoa_r+0x6e0>
   86842:	3201      	adds	r2, #1
   86844:	701a      	strb	r2, [r3, #0]
   86846:	4641      	mov	r1, r8
   86848:	4620      	mov	r0, r4
   8684a:	f001 fc7d 	bl	88148 <_Bfree>
   8684e:	2e00      	cmp	r6, #0
   86850:	f43f ae3d 	beq.w	864ce <_dtoa_r+0x37e>
   86854:	f1bb 0f00 	cmp.w	fp, #0
   86858:	d005      	beq.n	86866 <_dtoa_r+0x716>
   8685a:	45b3      	cmp	fp, r6
   8685c:	d003      	beq.n	86866 <_dtoa_r+0x716>
   8685e:	4659      	mov	r1, fp
   86860:	4620      	mov	r0, r4
   86862:	f001 fc71 	bl	88148 <_Bfree>
   86866:	4631      	mov	r1, r6
   86868:	4620      	mov	r0, r4
   8686a:	f001 fc6d 	bl	88148 <_Bfree>
   8686e:	e62e      	b.n	864ce <_dtoa_r+0x37e>
   86870:	2300      	movs	r3, #0
   86872:	930b      	str	r3, [sp, #44]	; 0x2c
   86874:	9b02      	ldr	r3, [sp, #8]
   86876:	9a25      	ldr	r2, [sp, #148]	; 0x94
   86878:	4413      	add	r3, r2
   8687a:	930f      	str	r3, [sp, #60]	; 0x3c
   8687c:	3301      	adds	r3, #1
   8687e:	2b01      	cmp	r3, #1
   86880:	461f      	mov	r7, r3
   86882:	461e      	mov	r6, r3
   86884:	bfb8      	it	lt
   86886:	2701      	movlt	r7, #1
   86888:	9307      	str	r3, [sp, #28]
   8688a:	2100      	movs	r1, #0
   8688c:	2f17      	cmp	r7, #23
   8688e:	6461      	str	r1, [r4, #68]	; 0x44
   86890:	d90a      	bls.n	868a8 <_dtoa_r+0x758>
   86892:	2201      	movs	r2, #1
   86894:	2304      	movs	r3, #4
   86896:	005b      	lsls	r3, r3, #1
   86898:	f103 0014 	add.w	r0, r3, #20
   8689c:	4287      	cmp	r7, r0
   8689e:	4611      	mov	r1, r2
   868a0:	f102 0201 	add.w	r2, r2, #1
   868a4:	d2f7      	bcs.n	86896 <_dtoa_r+0x746>
   868a6:	6461      	str	r1, [r4, #68]	; 0x44
   868a8:	4620      	mov	r0, r4
   868aa:	f001 fc27 	bl	880fc <_Balloc>
   868ae:	2e0e      	cmp	r6, #14
   868b0:	9004      	str	r0, [sp, #16]
   868b2:	6420      	str	r0, [r4, #64]	; 0x40
   868b4:	f63f ad47 	bhi.w	86346 <_dtoa_r+0x1f6>
   868b8:	2d00      	cmp	r5, #0
   868ba:	f43f ad44 	beq.w	86346 <_dtoa_r+0x1f6>
   868be:	9902      	ldr	r1, [sp, #8]
   868c0:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
   868c4:	2900      	cmp	r1, #0
   868c6:	f340 8203 	ble.w	86cd0 <_dtoa_r+0xb80>
   868ca:	4bb9      	ldr	r3, [pc, #740]	; (86bb0 <_dtoa_r+0xa60>)
   868cc:	f001 020f 	and.w	r2, r1, #15
   868d0:	110d      	asrs	r5, r1, #4
   868d2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   868d6:	06e9      	lsls	r1, r5, #27
   868d8:	e9d3 6700 	ldrd	r6, r7, [r3]
   868dc:	f140 81af 	bpl.w	86c3e <_dtoa_r+0xaee>
   868e0:	4bb4      	ldr	r3, [pc, #720]	; (86bb4 <_dtoa_r+0xa64>)
   868e2:	4650      	mov	r0, sl
   868e4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   868e8:	4659      	mov	r1, fp
   868ea:	f002 fe99 	bl	89620 <__aeabi_ddiv>
   868ee:	f04f 0a03 	mov.w	sl, #3
   868f2:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
   868f6:	f005 050f 	and.w	r5, r5, #15
   868fa:	b18d      	cbz	r5, 86920 <_dtoa_r+0x7d0>
   868fc:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 86bb4 <_dtoa_r+0xa64>
   86900:	07ea      	lsls	r2, r5, #31
   86902:	d509      	bpl.n	86918 <_dtoa_r+0x7c8>
   86904:	e9d8 2300 	ldrd	r2, r3, [r8]
   86908:	4630      	mov	r0, r6
   8690a:	4639      	mov	r1, r7
   8690c:	f002 fd5e 	bl	893cc <__aeabi_dmul>
   86910:	4606      	mov	r6, r0
   86912:	460f      	mov	r7, r1
   86914:	f10a 0a01 	add.w	sl, sl, #1
   86918:	106d      	asrs	r5, r5, #1
   8691a:	f108 0808 	add.w	r8, r8, #8
   8691e:	d1ef      	bne.n	86900 <_dtoa_r+0x7b0>
   86920:	463b      	mov	r3, r7
   86922:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   86926:	4632      	mov	r2, r6
   86928:	f002 fe7a 	bl	89620 <__aeabi_ddiv>
   8692c:	4607      	mov	r7, r0
   8692e:	4688      	mov	r8, r1
   86930:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86932:	b143      	cbz	r3, 86946 <_dtoa_r+0x7f6>
   86934:	2200      	movs	r2, #0
   86936:	4ba0      	ldr	r3, [pc, #640]	; (86bb8 <_dtoa_r+0xa68>)
   86938:	4638      	mov	r0, r7
   8693a:	4641      	mov	r1, r8
   8693c:	f002 ffb8 	bl	898b0 <__aeabi_dcmplt>
   86940:	2800      	cmp	r0, #0
   86942:	f040 8287 	bne.w	86e54 <_dtoa_r+0xd04>
   86946:	4650      	mov	r0, sl
   86948:	f002 fcda 	bl	89300 <__aeabi_i2d>
   8694c:	463a      	mov	r2, r7
   8694e:	4643      	mov	r3, r8
   86950:	f002 fd3c 	bl	893cc <__aeabi_dmul>
   86954:	4b99      	ldr	r3, [pc, #612]	; (86bbc <_dtoa_r+0xa6c>)
   86956:	2200      	movs	r2, #0
   86958:	f002 fb86 	bl	89068 <__adddf3>
   8695c:	9b07      	ldr	r3, [sp, #28]
   8695e:	4605      	mov	r5, r0
   86960:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   86964:	2b00      	cmp	r3, #0
   86966:	f000 813f 	beq.w	86be8 <_dtoa_r+0xa98>
   8696a:	9b02      	ldr	r3, [sp, #8]
   8696c:	9315      	str	r3, [sp, #84]	; 0x54
   8696e:	9b07      	ldr	r3, [sp, #28]
   86970:	9312      	str	r3, [sp, #72]	; 0x48
   86972:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   86974:	2b00      	cmp	r3, #0
   86976:	f000 81fb 	beq.w	86d70 <_dtoa_r+0xc20>
   8697a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8697c:	4b8c      	ldr	r3, [pc, #560]	; (86bb0 <_dtoa_r+0xa60>)
   8697e:	2000      	movs	r0, #0
   86980:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86984:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   86988:	498d      	ldr	r1, [pc, #564]	; (86bc0 <_dtoa_r+0xa70>)
   8698a:	f002 fe49 	bl	89620 <__aeabi_ddiv>
   8698e:	462a      	mov	r2, r5
   86990:	4633      	mov	r3, r6
   86992:	f002 fb67 	bl	89064 <__aeabi_dsub>
   86996:	4682      	mov	sl, r0
   86998:	468b      	mov	fp, r1
   8699a:	4638      	mov	r0, r7
   8699c:	4641      	mov	r1, r8
   8699e:	f002 ffc5 	bl	8992c <__aeabi_d2iz>
   869a2:	4605      	mov	r5, r0
   869a4:	f002 fcac 	bl	89300 <__aeabi_i2d>
   869a8:	4602      	mov	r2, r0
   869aa:	460b      	mov	r3, r1
   869ac:	4638      	mov	r0, r7
   869ae:	4641      	mov	r1, r8
   869b0:	f002 fb58 	bl	89064 <__aeabi_dsub>
   869b4:	3530      	adds	r5, #48	; 0x30
   869b6:	fa5f f885 	uxtb.w	r8, r5
   869ba:	9d04      	ldr	r5, [sp, #16]
   869bc:	4606      	mov	r6, r0
   869be:	460f      	mov	r7, r1
   869c0:	f885 8000 	strb.w	r8, [r5]
   869c4:	4602      	mov	r2, r0
   869c6:	460b      	mov	r3, r1
   869c8:	4650      	mov	r0, sl
   869ca:	4659      	mov	r1, fp
   869cc:	3501      	adds	r5, #1
   869ce:	f002 ff8d 	bl	898ec <__aeabi_dcmpgt>
   869d2:	2800      	cmp	r0, #0
   869d4:	d154      	bne.n	86a80 <_dtoa_r+0x930>
   869d6:	4632      	mov	r2, r6
   869d8:	463b      	mov	r3, r7
   869da:	2000      	movs	r0, #0
   869dc:	4976      	ldr	r1, [pc, #472]	; (86bb8 <_dtoa_r+0xa68>)
   869de:	f002 fb41 	bl	89064 <__aeabi_dsub>
   869e2:	4602      	mov	r2, r0
   869e4:	460b      	mov	r3, r1
   869e6:	4650      	mov	r0, sl
   869e8:	4659      	mov	r1, fp
   869ea:	f002 ff7f 	bl	898ec <__aeabi_dcmpgt>
   869ee:	2800      	cmp	r0, #0
   869f0:	f040 8270 	bne.w	86ed4 <_dtoa_r+0xd84>
   869f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
   869f6:	2a01      	cmp	r2, #1
   869f8:	f000 8112 	beq.w	86c20 <_dtoa_r+0xad0>
   869fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   869fe:	9a04      	ldr	r2, [sp, #16]
   86a00:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   86a04:	4413      	add	r3, r2
   86a06:	4699      	mov	r9, r3
   86a08:	e00f      	b.n	86a2a <_dtoa_r+0x8da>
   86a0a:	4632      	mov	r2, r6
   86a0c:	463b      	mov	r3, r7
   86a0e:	2000      	movs	r0, #0
   86a10:	4969      	ldr	r1, [pc, #420]	; (86bb8 <_dtoa_r+0xa68>)
   86a12:	f002 fb27 	bl	89064 <__aeabi_dsub>
   86a16:	4652      	mov	r2, sl
   86a18:	465b      	mov	r3, fp
   86a1a:	f002 ff49 	bl	898b0 <__aeabi_dcmplt>
   86a1e:	2800      	cmp	r0, #0
   86a20:	f040 8256 	bne.w	86ed0 <_dtoa_r+0xd80>
   86a24:	454d      	cmp	r5, r9
   86a26:	f000 80f9 	beq.w	86c1c <_dtoa_r+0xacc>
   86a2a:	4650      	mov	r0, sl
   86a2c:	4659      	mov	r1, fp
   86a2e:	2200      	movs	r2, #0
   86a30:	4b64      	ldr	r3, [pc, #400]	; (86bc4 <_dtoa_r+0xa74>)
   86a32:	f002 fccb 	bl	893cc <__aeabi_dmul>
   86a36:	2200      	movs	r2, #0
   86a38:	4b62      	ldr	r3, [pc, #392]	; (86bc4 <_dtoa_r+0xa74>)
   86a3a:	4682      	mov	sl, r0
   86a3c:	468b      	mov	fp, r1
   86a3e:	4630      	mov	r0, r6
   86a40:	4639      	mov	r1, r7
   86a42:	f002 fcc3 	bl	893cc <__aeabi_dmul>
   86a46:	460f      	mov	r7, r1
   86a48:	4606      	mov	r6, r0
   86a4a:	f002 ff6f 	bl	8992c <__aeabi_d2iz>
   86a4e:	4680      	mov	r8, r0
   86a50:	f002 fc56 	bl	89300 <__aeabi_i2d>
   86a54:	4602      	mov	r2, r0
   86a56:	460b      	mov	r3, r1
   86a58:	4630      	mov	r0, r6
   86a5a:	4639      	mov	r1, r7
   86a5c:	f002 fb02 	bl	89064 <__aeabi_dsub>
   86a60:	f108 0830 	add.w	r8, r8, #48	; 0x30
   86a64:	fa5f f888 	uxtb.w	r8, r8
   86a68:	f805 8b01 	strb.w	r8, [r5], #1
   86a6c:	4652      	mov	r2, sl
   86a6e:	465b      	mov	r3, fp
   86a70:	4606      	mov	r6, r0
   86a72:	460f      	mov	r7, r1
   86a74:	f002 ff1c 	bl	898b0 <__aeabi_dcmplt>
   86a78:	2800      	cmp	r0, #0
   86a7a:	d0c6      	beq.n	86a0a <_dtoa_r+0x8ba>
   86a7c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86a80:	9b15      	ldr	r3, [sp, #84]	; 0x54
   86a82:	9302      	str	r3, [sp, #8]
   86a84:	e523      	b.n	864ce <_dtoa_r+0x37e>
   86a86:	2300      	movs	r3, #0
   86a88:	930b      	str	r3, [sp, #44]	; 0x2c
   86a8a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86a8c:	2b00      	cmp	r3, #0
   86a8e:	f340 80dd 	ble.w	86c4c <_dtoa_r+0xafc>
   86a92:	461f      	mov	r7, r3
   86a94:	461e      	mov	r6, r3
   86a96:	930f      	str	r3, [sp, #60]	; 0x3c
   86a98:	9307      	str	r3, [sp, #28]
   86a9a:	e6f6      	b.n	8688a <_dtoa_r+0x73a>
   86a9c:	2301      	movs	r3, #1
   86a9e:	930b      	str	r3, [sp, #44]	; 0x2c
   86aa0:	e7f3      	b.n	86a8a <_dtoa_r+0x93a>
   86aa2:	f1ba 0f00 	cmp.w	sl, #0
   86aa6:	f47f ada7 	bne.w	865f8 <_dtoa_r+0x4a8>
   86aaa:	f3cb 0313 	ubfx	r3, fp, #0, #20
   86aae:	2b00      	cmp	r3, #0
   86ab0:	f47f adbc 	bne.w	8662c <_dtoa_r+0x4dc>
   86ab4:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   86ab8:	0d3f      	lsrs	r7, r7, #20
   86aba:	053f      	lsls	r7, r7, #20
   86abc:	2f00      	cmp	r7, #0
   86abe:	f000 820d 	beq.w	86edc <_dtoa_r+0xd8c>
   86ac2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86ac4:	3301      	adds	r3, #1
   86ac6:	930a      	str	r3, [sp, #40]	; 0x28
   86ac8:	9b08      	ldr	r3, [sp, #32]
   86aca:	3301      	adds	r3, #1
   86acc:	9308      	str	r3, [sp, #32]
   86ace:	2301      	movs	r3, #1
   86ad0:	930c      	str	r3, [sp, #48]	; 0x30
   86ad2:	e5ad      	b.n	86630 <_dtoa_r+0x4e0>
   86ad4:	9b07      	ldr	r3, [sp, #28]
   86ad6:	2b00      	cmp	r3, #0
   86ad8:	f73f ac48 	bgt.w	8636c <_dtoa_r+0x21c>
   86adc:	f040 8222 	bne.w	86f24 <_dtoa_r+0xdd4>
   86ae0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
   86ae4:	2200      	movs	r2, #0
   86ae6:	4b38      	ldr	r3, [pc, #224]	; (86bc8 <_dtoa_r+0xa78>)
   86ae8:	f002 fc70 	bl	893cc <__aeabi_dmul>
   86aec:	4652      	mov	r2, sl
   86aee:	465b      	mov	r3, fp
   86af0:	f002 fef2 	bl	898d8 <__aeabi_dcmpge>
   86af4:	f8dd 801c 	ldr.w	r8, [sp, #28]
   86af8:	4646      	mov	r6, r8
   86afa:	2800      	cmp	r0, #0
   86afc:	d041      	beq.n	86b82 <_dtoa_r+0xa32>
   86afe:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86b00:	9d04      	ldr	r5, [sp, #16]
   86b02:	43db      	mvns	r3, r3
   86b04:	9302      	str	r3, [sp, #8]
   86b06:	4641      	mov	r1, r8
   86b08:	4620      	mov	r0, r4
   86b0a:	f001 fb1d 	bl	88148 <_Bfree>
   86b0e:	2e00      	cmp	r6, #0
   86b10:	f43f acdd 	beq.w	864ce <_dtoa_r+0x37e>
   86b14:	e6a7      	b.n	86866 <_dtoa_r+0x716>
   86b16:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86b18:	4649      	mov	r1, r9
   86b1a:	4620      	mov	r0, r4
   86b1c:	f001 fc4c 	bl	883b8 <__pow5mult>
   86b20:	4681      	mov	r9, r0
   86b22:	e557      	b.n	865d4 <_dtoa_r+0x484>
   86b24:	9a14      	ldr	r2, [sp, #80]	; 0x50
   86b26:	2a00      	cmp	r2, #0
   86b28:	f000 8188 	beq.w	86e3c <_dtoa_r+0xcec>
   86b2c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   86b30:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   86b32:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   86b34:	e4f2      	b.n	8651c <_dtoa_r+0x3cc>
   86b36:	f1ba 0f00 	cmp.w	sl, #0
   86b3a:	f47f ad77 	bne.w	8662c <_dtoa_r+0x4dc>
   86b3e:	e7b4      	b.n	86aaa <_dtoa_r+0x95a>
   86b40:	f001 fb0c 	bl	8815c <__multadd>
   86b44:	4647      	mov	r7, r8
   86b46:	4606      	mov	r6, r0
   86b48:	4683      	mov	fp, r0
   86b4a:	e5c0      	b.n	866ce <_dtoa_r+0x57e>
   86b4c:	4601      	mov	r1, r0
   86b4e:	4620      	mov	r0, r4
   86b50:	9308      	str	r3, [sp, #32]
   86b52:	f001 faf9 	bl	88148 <_Bfree>
   86b56:	2201      	movs	r2, #1
   86b58:	9b08      	ldr	r3, [sp, #32]
   86b5a:	e5e2      	b.n	86722 <_dtoa_r+0x5d2>
   86b5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86b5e:	2b02      	cmp	r3, #2
   86b60:	f77f ad98 	ble.w	86694 <_dtoa_r+0x544>
   86b64:	9b07      	ldr	r3, [sp, #28]
   86b66:	2b00      	cmp	r3, #0
   86b68:	d1c9      	bne.n	86afe <_dtoa_r+0x9ae>
   86b6a:	4641      	mov	r1, r8
   86b6c:	2205      	movs	r2, #5
   86b6e:	4620      	mov	r0, r4
   86b70:	f001 faf4 	bl	8815c <__multadd>
   86b74:	4601      	mov	r1, r0
   86b76:	4680      	mov	r8, r0
   86b78:	4648      	mov	r0, r9
   86b7a:	f001 fcbd 	bl	884f8 <__mcmp>
   86b7e:	2800      	cmp	r0, #0
   86b80:	ddbd      	ble.n	86afe <_dtoa_r+0x9ae>
   86b82:	2331      	movs	r3, #49	; 0x31
   86b84:	9a02      	ldr	r2, [sp, #8]
   86b86:	9904      	ldr	r1, [sp, #16]
   86b88:	3201      	adds	r2, #1
   86b8a:	9202      	str	r2, [sp, #8]
   86b8c:	700b      	strb	r3, [r1, #0]
   86b8e:	1c4d      	adds	r5, r1, #1
   86b90:	e7b9      	b.n	86b06 <_dtoa_r+0x9b6>
   86b92:	2331      	movs	r3, #49	; 0x31
   86b94:	9a02      	ldr	r2, [sp, #8]
   86b96:	3201      	adds	r2, #1
   86b98:	9202      	str	r2, [sp, #8]
   86b9a:	9a04      	ldr	r2, [sp, #16]
   86b9c:	7013      	strb	r3, [r2, #0]
   86b9e:	e652      	b.n	86846 <_dtoa_r+0x6f6>
   86ba0:	2301      	movs	r3, #1
   86ba2:	930b      	str	r3, [sp, #44]	; 0x2c
   86ba4:	e666      	b.n	86874 <_dtoa_r+0x724>
   86ba6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   86baa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   86bac:	e48f      	b.n	864ce <_dtoa_r+0x37e>
   86bae:	bf00      	nop
   86bb0:	00089e48 	.word	0x00089e48
   86bb4:	00089e20 	.word	0x00089e20
   86bb8:	3ff00000 	.word	0x3ff00000
   86bbc:	401c0000 	.word	0x401c0000
   86bc0:	3fe00000 	.word	0x3fe00000
   86bc4:	40240000 	.word	0x40240000
   86bc8:	40140000 	.word	0x40140000
   86bcc:	4650      	mov	r0, sl
   86bce:	f002 fb97 	bl	89300 <__aeabi_i2d>
   86bd2:	463a      	mov	r2, r7
   86bd4:	4643      	mov	r3, r8
   86bd6:	f002 fbf9 	bl	893cc <__aeabi_dmul>
   86bda:	2200      	movs	r2, #0
   86bdc:	4bc1      	ldr	r3, [pc, #772]	; (86ee4 <_dtoa_r+0xd94>)
   86bde:	f002 fa43 	bl	89068 <__adddf3>
   86be2:	4605      	mov	r5, r0
   86be4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   86be8:	4641      	mov	r1, r8
   86bea:	2200      	movs	r2, #0
   86bec:	4bbe      	ldr	r3, [pc, #760]	; (86ee8 <_dtoa_r+0xd98>)
   86bee:	4638      	mov	r0, r7
   86bf0:	f002 fa38 	bl	89064 <__aeabi_dsub>
   86bf4:	462a      	mov	r2, r5
   86bf6:	4633      	mov	r3, r6
   86bf8:	4682      	mov	sl, r0
   86bfa:	468b      	mov	fp, r1
   86bfc:	f002 fe76 	bl	898ec <__aeabi_dcmpgt>
   86c00:	4680      	mov	r8, r0
   86c02:	2800      	cmp	r0, #0
   86c04:	f040 8110 	bne.w	86e28 <_dtoa_r+0xcd8>
   86c08:	462a      	mov	r2, r5
   86c0a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   86c0e:	4650      	mov	r0, sl
   86c10:	4659      	mov	r1, fp
   86c12:	f002 fe4d 	bl	898b0 <__aeabi_dcmplt>
   86c16:	b118      	cbz	r0, 86c20 <_dtoa_r+0xad0>
   86c18:	4646      	mov	r6, r8
   86c1a:	e770      	b.n	86afe <_dtoa_r+0x9ae>
   86c1c:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86c20:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   86c24:	f7ff bb8f 	b.w	86346 <_dtoa_r+0x1f6>
   86c28:	9804      	ldr	r0, [sp, #16]
   86c2a:	f7ff bac0 	b.w	861ae <_dtoa_r+0x5e>
   86c2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86c30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   86c32:	1afb      	subs	r3, r7, r3
   86c34:	441a      	add	r2, r3
   86c36:	970c      	str	r7, [sp, #48]	; 0x30
   86c38:	920d      	str	r2, [sp, #52]	; 0x34
   86c3a:	2700      	movs	r7, #0
   86c3c:	e468      	b.n	86510 <_dtoa_r+0x3c0>
   86c3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86c42:	f04f 0a02 	mov.w	sl, #2
   86c46:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
   86c4a:	e656      	b.n	868fa <_dtoa_r+0x7aa>
   86c4c:	2100      	movs	r1, #0
   86c4e:	2301      	movs	r3, #1
   86c50:	4620      	mov	r0, r4
   86c52:	6461      	str	r1, [r4, #68]	; 0x44
   86c54:	9325      	str	r3, [sp, #148]	; 0x94
   86c56:	f001 fa51 	bl	880fc <_Balloc>
   86c5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86c5c:	9004      	str	r0, [sp, #16]
   86c5e:	9307      	str	r3, [sp, #28]
   86c60:	9b25      	ldr	r3, [sp, #148]	; 0x94
   86c62:	6420      	str	r0, [r4, #64]	; 0x40
   86c64:	930f      	str	r3, [sp, #60]	; 0x3c
   86c66:	e627      	b.n	868b8 <_dtoa_r+0x768>
   86c68:	2a00      	cmp	r2, #0
   86c6a:	46d0      	mov	r8, sl
   86c6c:	f8cd b020 	str.w	fp, [sp, #32]
   86c70:	469a      	mov	sl, r3
   86c72:	dd11      	ble.n	86c98 <_dtoa_r+0xb48>
   86c74:	4649      	mov	r1, r9
   86c76:	2201      	movs	r2, #1
   86c78:	4620      	mov	r0, r4
   86c7a:	f001 fbed 	bl	88458 <__lshift>
   86c7e:	4641      	mov	r1, r8
   86c80:	4681      	mov	r9, r0
   86c82:	f001 fc39 	bl	884f8 <__mcmp>
   86c86:	2800      	cmp	r0, #0
   86c88:	f340 8145 	ble.w	86f16 <_dtoa_r+0xdc6>
   86c8c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   86c90:	f000 8105 	beq.w	86e9e <_dtoa_r+0xd4e>
   86c94:	f105 0a31 	add.w	sl, r5, #49	; 0x31
   86c98:	46b3      	mov	fp, r6
   86c9a:	f887 a000 	strb.w	sl, [r7]
   86c9e:	1c7d      	adds	r5, r7, #1
   86ca0:	9e08      	ldr	r6, [sp, #32]
   86ca2:	e5d0      	b.n	86846 <_dtoa_r+0x6f6>
   86ca4:	d104      	bne.n	86cb0 <_dtoa_r+0xb60>
   86ca6:	f01a 0f01 	tst.w	sl, #1
   86caa:	d001      	beq.n	86cb0 <_dtoa_r+0xb60>
   86cac:	e5bb      	b.n	86826 <_dtoa_r+0x6d6>
   86cae:	4615      	mov	r5, r2
   86cb0:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   86cb4:	1e6a      	subs	r2, r5, #1
   86cb6:	2b30      	cmp	r3, #48	; 0x30
   86cb8:	d0f9      	beq.n	86cae <_dtoa_r+0xb5e>
   86cba:	e5c4      	b.n	86846 <_dtoa_r+0x6f6>
   86cbc:	2230      	movs	r2, #48	; 0x30
   86cbe:	9904      	ldr	r1, [sp, #16]
   86cc0:	700a      	strb	r2, [r1, #0]
   86cc2:	9a02      	ldr	r2, [sp, #8]
   86cc4:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   86cc8:	3201      	adds	r2, #1
   86cca:	9202      	str	r2, [sp, #8]
   86ccc:	f7ff bbfb 	b.w	864c6 <_dtoa_r+0x376>
   86cd0:	f000 80bb 	beq.w	86e4a <_dtoa_r+0xcfa>
   86cd4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86cd8:	9b02      	ldr	r3, [sp, #8]
   86cda:	f04f 0a02 	mov.w	sl, #2
   86cde:	425d      	negs	r5, r3
   86ce0:	4b82      	ldr	r3, [pc, #520]	; (86eec <_dtoa_r+0xd9c>)
   86ce2:	f005 020f 	and.w	r2, r5, #15
   86ce6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86cea:	e9d3 2300 	ldrd	r2, r3, [r3]
   86cee:	f002 fb6d 	bl	893cc <__aeabi_dmul>
   86cf2:	112d      	asrs	r5, r5, #4
   86cf4:	4607      	mov	r7, r0
   86cf6:	4688      	mov	r8, r1
   86cf8:	f43f ae1a 	beq.w	86930 <_dtoa_r+0x7e0>
   86cfc:	4e7c      	ldr	r6, [pc, #496]	; (86ef0 <_dtoa_r+0xda0>)
   86cfe:	07eb      	lsls	r3, r5, #31
   86d00:	d509      	bpl.n	86d16 <_dtoa_r+0xbc6>
   86d02:	e9d6 2300 	ldrd	r2, r3, [r6]
   86d06:	4638      	mov	r0, r7
   86d08:	4641      	mov	r1, r8
   86d0a:	f002 fb5f 	bl	893cc <__aeabi_dmul>
   86d0e:	4607      	mov	r7, r0
   86d10:	4688      	mov	r8, r1
   86d12:	f10a 0a01 	add.w	sl, sl, #1
   86d16:	106d      	asrs	r5, r5, #1
   86d18:	f106 0608 	add.w	r6, r6, #8
   86d1c:	d1ef      	bne.n	86cfe <_dtoa_r+0xbae>
   86d1e:	e607      	b.n	86930 <_dtoa_r+0x7e0>
   86d20:	6871      	ldr	r1, [r6, #4]
   86d22:	4620      	mov	r0, r4
   86d24:	f001 f9ea 	bl	880fc <_Balloc>
   86d28:	4605      	mov	r5, r0
   86d2a:	6933      	ldr	r3, [r6, #16]
   86d2c:	f106 010c 	add.w	r1, r6, #12
   86d30:	3302      	adds	r3, #2
   86d32:	009a      	lsls	r2, r3, #2
   86d34:	300c      	adds	r0, #12
   86d36:	f7fc fdff 	bl	83938 <memcpy>
   86d3a:	4629      	mov	r1, r5
   86d3c:	2201      	movs	r2, #1
   86d3e:	4620      	mov	r0, r4
   86d40:	f001 fb8a 	bl	88458 <__lshift>
   86d44:	9008      	str	r0, [sp, #32]
   86d46:	e4b6      	b.n	866b6 <_dtoa_r+0x566>
   86d48:	2b39      	cmp	r3, #57	; 0x39
   86d4a:	f8cd b020 	str.w	fp, [sp, #32]
   86d4e:	46d0      	mov	r8, sl
   86d50:	f000 80a5 	beq.w	86e9e <_dtoa_r+0xd4e>
   86d54:	f103 0a01 	add.w	sl, r3, #1
   86d58:	46b3      	mov	fp, r6
   86d5a:	f887 a000 	strb.w	sl, [r7]
   86d5e:	1c7d      	adds	r5, r7, #1
   86d60:	9e08      	ldr	r6, [sp, #32]
   86d62:	e570      	b.n	86846 <_dtoa_r+0x6f6>
   86d64:	465a      	mov	r2, fp
   86d66:	46d0      	mov	r8, sl
   86d68:	46b3      	mov	fp, r6
   86d6a:	469a      	mov	sl, r3
   86d6c:	4616      	mov	r6, r2
   86d6e:	e54e      	b.n	8680e <_dtoa_r+0x6be>
   86d70:	9812      	ldr	r0, [sp, #72]	; 0x48
   86d72:	495e      	ldr	r1, [pc, #376]	; (86eec <_dtoa_r+0xd9c>)
   86d74:	462a      	mov	r2, r5
   86d76:	eb01 01c0 	add.w	r1, r1, r0, lsl #3
   86d7a:	4633      	mov	r3, r6
   86d7c:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   86d80:	f002 fb24 	bl	893cc <__aeabi_dmul>
   86d84:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
   86d88:	4638      	mov	r0, r7
   86d8a:	4641      	mov	r1, r8
   86d8c:	f002 fdce 	bl	8992c <__aeabi_d2iz>
   86d90:	4605      	mov	r5, r0
   86d92:	f002 fab5 	bl	89300 <__aeabi_i2d>
   86d96:	4602      	mov	r2, r0
   86d98:	460b      	mov	r3, r1
   86d9a:	4638      	mov	r0, r7
   86d9c:	4641      	mov	r1, r8
   86d9e:	f002 f961 	bl	89064 <__aeabi_dsub>
   86da2:	4606      	mov	r6, r0
   86da4:	9812      	ldr	r0, [sp, #72]	; 0x48
   86da6:	9a04      	ldr	r2, [sp, #16]
   86da8:	3530      	adds	r5, #48	; 0x30
   86daa:	2801      	cmp	r0, #1
   86dac:	7015      	strb	r5, [r2, #0]
   86dae:	460f      	mov	r7, r1
   86db0:	f102 0501 	add.w	r5, r2, #1
   86db4:	d026      	beq.n	86e04 <_dtoa_r+0xcb4>
   86db6:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86db8:	9a04      	ldr	r2, [sp, #16]
   86dba:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
   86dbe:	4413      	add	r3, r2
   86dc0:	f04f 0a00 	mov.w	sl, #0
   86dc4:	4699      	mov	r9, r3
   86dc6:	f8df b130 	ldr.w	fp, [pc, #304]	; 86ef8 <_dtoa_r+0xda8>
   86dca:	4652      	mov	r2, sl
   86dcc:	465b      	mov	r3, fp
   86dce:	4630      	mov	r0, r6
   86dd0:	4639      	mov	r1, r7
   86dd2:	f002 fafb 	bl	893cc <__aeabi_dmul>
   86dd6:	460f      	mov	r7, r1
   86dd8:	4606      	mov	r6, r0
   86dda:	f002 fda7 	bl	8992c <__aeabi_d2iz>
   86dde:	4680      	mov	r8, r0
   86de0:	f002 fa8e 	bl	89300 <__aeabi_i2d>
   86de4:	4602      	mov	r2, r0
   86de6:	460b      	mov	r3, r1
   86de8:	4630      	mov	r0, r6
   86dea:	4639      	mov	r1, r7
   86dec:	f002 f93a 	bl	89064 <__aeabi_dsub>
   86df0:	f108 0830 	add.w	r8, r8, #48	; 0x30
   86df4:	f805 8b01 	strb.w	r8, [r5], #1
   86df8:	454d      	cmp	r5, r9
   86dfa:	4606      	mov	r6, r0
   86dfc:	460f      	mov	r7, r1
   86dfe:	d1e4      	bne.n	86dca <_dtoa_r+0xc7a>
   86e00:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86e04:	2200      	movs	r2, #0
   86e06:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   86e0a:	4b3a      	ldr	r3, [pc, #232]	; (86ef4 <_dtoa_r+0xda4>)
   86e0c:	f002 f92c 	bl	89068 <__adddf3>
   86e10:	4632      	mov	r2, r6
   86e12:	463b      	mov	r3, r7
   86e14:	f002 fd4c 	bl	898b0 <__aeabi_dcmplt>
   86e18:	2800      	cmp	r0, #0
   86e1a:	d046      	beq.n	86eaa <_dtoa_r+0xd5a>
   86e1c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   86e1e:	9302      	str	r3, [sp, #8]
   86e20:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   86e24:	f7ff bb42 	b.w	864ac <_dtoa_r+0x35c>
   86e28:	f04f 0800 	mov.w	r8, #0
   86e2c:	4646      	mov	r6, r8
   86e2e:	e6a8      	b.n	86b82 <_dtoa_r+0xa32>
   86e30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   86e32:	9a07      	ldr	r2, [sp, #28]
   86e34:	1a9d      	subs	r5, r3, r2
   86e36:	2300      	movs	r3, #0
   86e38:	f7ff bb70 	b.w	8651c <_dtoa_r+0x3cc>
   86e3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
   86e3e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   86e40:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   86e44:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   86e46:	f7ff bb69 	b.w	8651c <_dtoa_r+0x3cc>
   86e4a:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
   86e4e:	f04f 0a02 	mov.w	sl, #2
   86e52:	e56d      	b.n	86930 <_dtoa_r+0x7e0>
   86e54:	9b07      	ldr	r3, [sp, #28]
   86e56:	2b00      	cmp	r3, #0
   86e58:	f43f aeb8 	beq.w	86bcc <_dtoa_r+0xa7c>
   86e5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86e5e:	2b00      	cmp	r3, #0
   86e60:	f77f aede 	ble.w	86c20 <_dtoa_r+0xad0>
   86e64:	2200      	movs	r2, #0
   86e66:	4b24      	ldr	r3, [pc, #144]	; (86ef8 <_dtoa_r+0xda8>)
   86e68:	4638      	mov	r0, r7
   86e6a:	4641      	mov	r1, r8
   86e6c:	f002 faae 	bl	893cc <__aeabi_dmul>
   86e70:	4607      	mov	r7, r0
   86e72:	4688      	mov	r8, r1
   86e74:	f10a 0001 	add.w	r0, sl, #1
   86e78:	f002 fa42 	bl	89300 <__aeabi_i2d>
   86e7c:	463a      	mov	r2, r7
   86e7e:	4643      	mov	r3, r8
   86e80:	f002 faa4 	bl	893cc <__aeabi_dmul>
   86e84:	2200      	movs	r2, #0
   86e86:	4b17      	ldr	r3, [pc, #92]	; (86ee4 <_dtoa_r+0xd94>)
   86e88:	f002 f8ee 	bl	89068 <__adddf3>
   86e8c:	9a02      	ldr	r2, [sp, #8]
   86e8e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86e90:	3a01      	subs	r2, #1
   86e92:	4605      	mov	r5, r0
   86e94:	9215      	str	r2, [sp, #84]	; 0x54
   86e96:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   86e9a:	9312      	str	r3, [sp, #72]	; 0x48
   86e9c:	e569      	b.n	86972 <_dtoa_r+0x822>
   86e9e:	2239      	movs	r2, #57	; 0x39
   86ea0:	46b3      	mov	fp, r6
   86ea2:	703a      	strb	r2, [r7, #0]
   86ea4:	9e08      	ldr	r6, [sp, #32]
   86ea6:	1c7d      	adds	r5, r7, #1
   86ea8:	e4bf      	b.n	8682a <_dtoa_r+0x6da>
   86eaa:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   86eae:	2000      	movs	r0, #0
   86eb0:	4910      	ldr	r1, [pc, #64]	; (86ef4 <_dtoa_r+0xda4>)
   86eb2:	f002 f8d7 	bl	89064 <__aeabi_dsub>
   86eb6:	4632      	mov	r2, r6
   86eb8:	463b      	mov	r3, r7
   86eba:	f002 fd17 	bl	898ec <__aeabi_dcmpgt>
   86ebe:	b908      	cbnz	r0, 86ec4 <_dtoa_r+0xd74>
   86ec0:	e6ae      	b.n	86c20 <_dtoa_r+0xad0>
   86ec2:	4615      	mov	r5, r2
   86ec4:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   86ec8:	1e6a      	subs	r2, r5, #1
   86eca:	2b30      	cmp	r3, #48	; 0x30
   86ecc:	d0f9      	beq.n	86ec2 <_dtoa_r+0xd72>
   86ece:	e5d7      	b.n	86a80 <_dtoa_r+0x930>
   86ed0:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
   86ed4:	9b15      	ldr	r3, [sp, #84]	; 0x54
   86ed6:	9302      	str	r3, [sp, #8]
   86ed8:	f7ff bae8 	b.w	864ac <_dtoa_r+0x35c>
   86edc:	970c      	str	r7, [sp, #48]	; 0x30
   86ede:	f7ff bba7 	b.w	86630 <_dtoa_r+0x4e0>
   86ee2:	bf00      	nop
   86ee4:	401c0000 	.word	0x401c0000
   86ee8:	40140000 	.word	0x40140000
   86eec:	00089e48 	.word	0x00089e48
   86ef0:	00089e20 	.word	0x00089e20
   86ef4:	3fe00000 	.word	0x3fe00000
   86ef8:	40240000 	.word	0x40240000
   86efc:	2b39      	cmp	r3, #57	; 0x39
   86efe:	f8cd b020 	str.w	fp, [sp, #32]
   86f02:	46d0      	mov	r8, sl
   86f04:	f8dd b01c 	ldr.w	fp, [sp, #28]
   86f08:	469a      	mov	sl, r3
   86f0a:	d0c8      	beq.n	86e9e <_dtoa_r+0xd4e>
   86f0c:	f1bb 0f00 	cmp.w	fp, #0
   86f10:	f73f aec0 	bgt.w	86c94 <_dtoa_r+0xb44>
   86f14:	e6c0      	b.n	86c98 <_dtoa_r+0xb48>
   86f16:	f47f aebf 	bne.w	86c98 <_dtoa_r+0xb48>
   86f1a:	f01a 0f01 	tst.w	sl, #1
   86f1e:	f43f aebb 	beq.w	86c98 <_dtoa_r+0xb48>
   86f22:	e6b3      	b.n	86c8c <_dtoa_r+0xb3c>
   86f24:	f04f 0800 	mov.w	r8, #0
   86f28:	4646      	mov	r6, r8
   86f2a:	e5e8      	b.n	86afe <_dtoa_r+0x9ae>
   86f2c:	4631      	mov	r1, r6
   86f2e:	2300      	movs	r3, #0
   86f30:	220a      	movs	r2, #10
   86f32:	4620      	mov	r0, r4
   86f34:	f001 f912 	bl	8815c <__multadd>
   86f38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86f3a:	4606      	mov	r6, r0
   86f3c:	2b00      	cmp	r3, #0
   86f3e:	dd07      	ble.n	86f50 <_dtoa_r+0xe00>
   86f40:	9307      	str	r3, [sp, #28]
   86f42:	f7ff bbab 	b.w	8669c <_dtoa_r+0x54c>
   86f46:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86f48:	2b02      	cmp	r3, #2
   86f4a:	dc1f      	bgt.n	86f8c <_dtoa_r+0xe3c>
   86f4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86f4e:	e43c      	b.n	867ca <_dtoa_r+0x67a>
   86f50:	9b24      	ldr	r3, [sp, #144]	; 0x90
   86f52:	2b02      	cmp	r3, #2
   86f54:	dc1a      	bgt.n	86f8c <_dtoa_r+0xe3c>
   86f56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86f58:	e7f2      	b.n	86f40 <_dtoa_r+0xdf0>
   86f5a:	f43f ab81 	beq.w	86660 <_dtoa_r+0x510>
   86f5e:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   86f62:	e411      	b.n	86788 <_dtoa_r+0x638>
   86f64:	2500      	movs	r5, #0
   86f66:	4620      	mov	r0, r4
   86f68:	6465      	str	r5, [r4, #68]	; 0x44
   86f6a:	4629      	mov	r1, r5
   86f6c:	f001 f8c6 	bl	880fc <_Balloc>
   86f70:	f04f 33ff 	mov.w	r3, #4294967295
   86f74:	9307      	str	r3, [sp, #28]
   86f76:	930f      	str	r3, [sp, #60]	; 0x3c
   86f78:	2301      	movs	r3, #1
   86f7a:	9004      	str	r0, [sp, #16]
   86f7c:	9525      	str	r5, [sp, #148]	; 0x94
   86f7e:	6420      	str	r0, [r4, #64]	; 0x40
   86f80:	930b      	str	r3, [sp, #44]	; 0x2c
   86f82:	f7ff b9e0 	b.w	86346 <_dtoa_r+0x1f6>
   86f86:	2501      	movs	r5, #1
   86f88:	f7ff b9a8 	b.w	862dc <_dtoa_r+0x18c>
   86f8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   86f8e:	9307      	str	r3, [sp, #28]
   86f90:	e5e8      	b.n	86b64 <_dtoa_r+0xa14>
   86f92:	bf00      	nop

00086f94 <__sflush_r>:
   86f94:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   86f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   86f9c:	b29a      	uxth	r2, r3
   86f9e:	460d      	mov	r5, r1
   86fa0:	0711      	lsls	r1, r2, #28
   86fa2:	4680      	mov	r8, r0
   86fa4:	d43a      	bmi.n	8701c <__sflush_r+0x88>
   86fa6:	686a      	ldr	r2, [r5, #4]
   86fa8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
   86fac:	2a00      	cmp	r2, #0
   86fae:	81ab      	strh	r3, [r5, #12]
   86fb0:	dd70      	ble.n	87094 <__sflush_r+0x100>
   86fb2:	6aac      	ldr	r4, [r5, #40]	; 0x28
   86fb4:	2c00      	cmp	r4, #0
   86fb6:	d04a      	beq.n	8704e <__sflush_r+0xba>
   86fb8:	2200      	movs	r2, #0
   86fba:	b29b      	uxth	r3, r3
   86fbc:	f8d8 6000 	ldr.w	r6, [r8]
   86fc0:	f8c8 2000 	str.w	r2, [r8]
   86fc4:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
   86fc8:	d068      	beq.n	8709c <__sflush_r+0x108>
   86fca:	6d2a      	ldr	r2, [r5, #80]	; 0x50
   86fcc:	075f      	lsls	r7, r3, #29
   86fce:	d505      	bpl.n	86fdc <__sflush_r+0x48>
   86fd0:	6869      	ldr	r1, [r5, #4]
   86fd2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
   86fd4:	1a52      	subs	r2, r2, r1
   86fd6:	b10b      	cbz	r3, 86fdc <__sflush_r+0x48>
   86fd8:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   86fda:	1ad2      	subs	r2, r2, r3
   86fdc:	2300      	movs	r3, #0
   86fde:	69e9      	ldr	r1, [r5, #28]
   86fe0:	4640      	mov	r0, r8
   86fe2:	47a0      	blx	r4
   86fe4:	1c44      	adds	r4, r0, #1
   86fe6:	d03d      	beq.n	87064 <__sflush_r+0xd0>
   86fe8:	2100      	movs	r1, #0
   86fea:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
   86fee:	692a      	ldr	r2, [r5, #16]
   86ff0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   86ff4:	81ab      	strh	r3, [r5, #12]
   86ff6:	04db      	lsls	r3, r3, #19
   86ff8:	6069      	str	r1, [r5, #4]
   86ffa:	602a      	str	r2, [r5, #0]
   86ffc:	d448      	bmi.n	87090 <__sflush_r+0xfc>
   86ffe:	6b29      	ldr	r1, [r5, #48]	; 0x30
   87000:	f8c8 6000 	str.w	r6, [r8]
   87004:	b319      	cbz	r1, 8704e <__sflush_r+0xba>
   87006:	f105 0340 	add.w	r3, r5, #64	; 0x40
   8700a:	4299      	cmp	r1, r3
   8700c:	d002      	beq.n	87014 <__sflush_r+0x80>
   8700e:	4640      	mov	r0, r8
   87010:	f000 f9da 	bl	873c8 <_free_r>
   87014:	2000      	movs	r0, #0
   87016:	6328      	str	r0, [r5, #48]	; 0x30
   87018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8701c:	692e      	ldr	r6, [r5, #16]
   8701e:	b1b6      	cbz	r6, 8704e <__sflush_r+0xba>
   87020:	0791      	lsls	r1, r2, #30
   87022:	bf18      	it	ne
   87024:	2300      	movne	r3, #0
   87026:	682c      	ldr	r4, [r5, #0]
   87028:	bf08      	it	eq
   8702a:	696b      	ldreq	r3, [r5, #20]
   8702c:	602e      	str	r6, [r5, #0]
   8702e:	1ba4      	subs	r4, r4, r6
   87030:	60ab      	str	r3, [r5, #8]
   87032:	e00a      	b.n	8704a <__sflush_r+0xb6>
   87034:	4623      	mov	r3, r4
   87036:	4632      	mov	r2, r6
   87038:	6a6f      	ldr	r7, [r5, #36]	; 0x24
   8703a:	69e9      	ldr	r1, [r5, #28]
   8703c:	4640      	mov	r0, r8
   8703e:	47b8      	blx	r7
   87040:	2800      	cmp	r0, #0
   87042:	eba4 0400 	sub.w	r4, r4, r0
   87046:	4406      	add	r6, r0
   87048:	dd04      	ble.n	87054 <__sflush_r+0xc0>
   8704a:	2c00      	cmp	r4, #0
   8704c:	dcf2      	bgt.n	87034 <__sflush_r+0xa0>
   8704e:	2000      	movs	r0, #0
   87050:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87054:	89ab      	ldrh	r3, [r5, #12]
   87056:	f04f 30ff 	mov.w	r0, #4294967295
   8705a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8705e:	81ab      	strh	r3, [r5, #12]
   87060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   87064:	f8d8 4000 	ldr.w	r4, [r8]
   87068:	2c1d      	cmp	r4, #29
   8706a:	d8f3      	bhi.n	87054 <__sflush_r+0xc0>
   8706c:	4b16      	ldr	r3, [pc, #88]	; (870c8 <__sflush_r+0x134>)
   8706e:	40e3      	lsrs	r3, r4
   87070:	43db      	mvns	r3, r3
   87072:	f013 0301 	ands.w	r3, r3, #1
   87076:	d1ed      	bne.n	87054 <__sflush_r+0xc0>
   87078:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
   8707c:	6929      	ldr	r1, [r5, #16]
   8707e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   87082:	81aa      	strh	r2, [r5, #12]
   87084:	04d2      	lsls	r2, r2, #19
   87086:	606b      	str	r3, [r5, #4]
   87088:	6029      	str	r1, [r5, #0]
   8708a:	d5b8      	bpl.n	86ffe <__sflush_r+0x6a>
   8708c:	2c00      	cmp	r4, #0
   8708e:	d1b6      	bne.n	86ffe <__sflush_r+0x6a>
   87090:	6528      	str	r0, [r5, #80]	; 0x50
   87092:	e7b4      	b.n	86ffe <__sflush_r+0x6a>
   87094:	6bea      	ldr	r2, [r5, #60]	; 0x3c
   87096:	2a00      	cmp	r2, #0
   87098:	dc8b      	bgt.n	86fb2 <__sflush_r+0x1e>
   8709a:	e7d8      	b.n	8704e <__sflush_r+0xba>
   8709c:	2301      	movs	r3, #1
   8709e:	69e9      	ldr	r1, [r5, #28]
   870a0:	4640      	mov	r0, r8
   870a2:	47a0      	blx	r4
   870a4:	1c43      	adds	r3, r0, #1
   870a6:	4602      	mov	r2, r0
   870a8:	d002      	beq.n	870b0 <__sflush_r+0x11c>
   870aa:	89ab      	ldrh	r3, [r5, #12]
   870ac:	6aac      	ldr	r4, [r5, #40]	; 0x28
   870ae:	e78d      	b.n	86fcc <__sflush_r+0x38>
   870b0:	f8d8 3000 	ldr.w	r3, [r8]
   870b4:	2b00      	cmp	r3, #0
   870b6:	d0f8      	beq.n	870aa <__sflush_r+0x116>
   870b8:	2b1d      	cmp	r3, #29
   870ba:	d001      	beq.n	870c0 <__sflush_r+0x12c>
   870bc:	2b16      	cmp	r3, #22
   870be:	d1c9      	bne.n	87054 <__sflush_r+0xc0>
   870c0:	f8c8 6000 	str.w	r6, [r8]
   870c4:	e7c3      	b.n	8704e <__sflush_r+0xba>
   870c6:	bf00      	nop
   870c8:	20400001 	.word	0x20400001

000870cc <_fflush_r>:
   870cc:	b538      	push	{r3, r4, r5, lr}
   870ce:	460d      	mov	r5, r1
   870d0:	4604      	mov	r4, r0
   870d2:	b108      	cbz	r0, 870d8 <_fflush_r+0xc>
   870d4:	6b83      	ldr	r3, [r0, #56]	; 0x38
   870d6:	b1bb      	cbz	r3, 87108 <_fflush_r+0x3c>
   870d8:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
   870dc:	b188      	cbz	r0, 87102 <_fflush_r+0x36>
   870de:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   870e0:	07db      	lsls	r3, r3, #31
   870e2:	d401      	bmi.n	870e8 <_fflush_r+0x1c>
   870e4:	0581      	lsls	r1, r0, #22
   870e6:	d517      	bpl.n	87118 <_fflush_r+0x4c>
   870e8:	4620      	mov	r0, r4
   870ea:	4629      	mov	r1, r5
   870ec:	f7ff ff52 	bl	86f94 <__sflush_r>
   870f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
   870f2:	4604      	mov	r4, r0
   870f4:	07da      	lsls	r2, r3, #31
   870f6:	d402      	bmi.n	870fe <_fflush_r+0x32>
   870f8:	89ab      	ldrh	r3, [r5, #12]
   870fa:	059b      	lsls	r3, r3, #22
   870fc:	d507      	bpl.n	8710e <_fflush_r+0x42>
   870fe:	4620      	mov	r0, r4
   87100:	bd38      	pop	{r3, r4, r5, pc}
   87102:	4604      	mov	r4, r0
   87104:	4620      	mov	r0, r4
   87106:	bd38      	pop	{r3, r4, r5, pc}
   87108:	f000 f838 	bl	8717c <__sinit>
   8710c:	e7e4      	b.n	870d8 <_fflush_r+0xc>
   8710e:	6da8      	ldr	r0, [r5, #88]	; 0x58
   87110:	f000 fc04 	bl	8791c <__retarget_lock_release_recursive>
   87114:	4620      	mov	r0, r4
   87116:	bd38      	pop	{r3, r4, r5, pc}
   87118:	6da8      	ldr	r0, [r5, #88]	; 0x58
   8711a:	f000 fbfd 	bl	87918 <__retarget_lock_acquire_recursive>
   8711e:	e7e3      	b.n	870e8 <_fflush_r+0x1c>

00087120 <_cleanup_r>:
   87120:	4901      	ldr	r1, [pc, #4]	; (87128 <_cleanup_r+0x8>)
   87122:	f000 bbb1 	b.w	87888 <_fwalk_reent>
   87126:	bf00      	nop
   87128:	00088ef5 	.word	0x00088ef5

0008712c <std.isra.0>:
   8712c:	2300      	movs	r3, #0
   8712e:	b510      	push	{r4, lr}
   87130:	4604      	mov	r4, r0
   87132:	8181      	strh	r1, [r0, #12]
   87134:	81c2      	strh	r2, [r0, #14]
   87136:	6003      	str	r3, [r0, #0]
   87138:	6043      	str	r3, [r0, #4]
   8713a:	6083      	str	r3, [r0, #8]
   8713c:	6643      	str	r3, [r0, #100]	; 0x64
   8713e:	6103      	str	r3, [r0, #16]
   87140:	6143      	str	r3, [r0, #20]
   87142:	6183      	str	r3, [r0, #24]
   87144:	4619      	mov	r1, r3
   87146:	2208      	movs	r2, #8
   87148:	305c      	adds	r0, #92	; 0x5c
   8714a:	f7fc fc6b 	bl	83a24 <memset>
   8714e:	4807      	ldr	r0, [pc, #28]	; (8716c <std.isra.0+0x40>)
   87150:	4907      	ldr	r1, [pc, #28]	; (87170 <std.isra.0+0x44>)
   87152:	4a08      	ldr	r2, [pc, #32]	; (87174 <std.isra.0+0x48>)
   87154:	4b08      	ldr	r3, [pc, #32]	; (87178 <std.isra.0+0x4c>)
   87156:	6220      	str	r0, [r4, #32]
   87158:	61e4      	str	r4, [r4, #28]
   8715a:	6261      	str	r1, [r4, #36]	; 0x24
   8715c:	62a2      	str	r2, [r4, #40]	; 0x28
   8715e:	62e3      	str	r3, [r4, #44]	; 0x2c
   87160:	f104 0058 	add.w	r0, r4, #88	; 0x58
   87164:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   87168:	f000 bbd2 	b.w	87910 <__retarget_lock_init_recursive>
   8716c:	00088a85 	.word	0x00088a85
   87170:	00088aa9 	.word	0x00088aa9
   87174:	00088ae5 	.word	0x00088ae5
   87178:	00088b05 	.word	0x00088b05

0008717c <__sinit>:
   8717c:	b510      	push	{r4, lr}
   8717e:	4604      	mov	r4, r0
   87180:	4814      	ldr	r0, [pc, #80]	; (871d4 <__sinit+0x58>)
   87182:	f000 fbc9 	bl	87918 <__retarget_lock_acquire_recursive>
   87186:	6ba2      	ldr	r2, [r4, #56]	; 0x38
   87188:	b9fa      	cbnz	r2, 871ca <__sinit+0x4e>
   8718a:	2003      	movs	r0, #3
   8718c:	4912      	ldr	r1, [pc, #72]	; (871d8 <__sinit+0x5c>)
   8718e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
   87192:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
   87196:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
   8719a:	f8c4 02e4 	str.w	r0, [r4, #740]	; 0x2e4
   8719e:	63e1      	str	r1, [r4, #60]	; 0x3c
   871a0:	6860      	ldr	r0, [r4, #4]
   871a2:	2104      	movs	r1, #4
   871a4:	f7ff ffc2 	bl	8712c <std.isra.0>
   871a8:	68a0      	ldr	r0, [r4, #8]
   871aa:	2201      	movs	r2, #1
   871ac:	2109      	movs	r1, #9
   871ae:	f7ff ffbd 	bl	8712c <std.isra.0>
   871b2:	68e0      	ldr	r0, [r4, #12]
   871b4:	2202      	movs	r2, #2
   871b6:	2112      	movs	r1, #18
   871b8:	f7ff ffb8 	bl	8712c <std.isra.0>
   871bc:	2301      	movs	r3, #1
   871be:	4805      	ldr	r0, [pc, #20]	; (871d4 <__sinit+0x58>)
   871c0:	63a3      	str	r3, [r4, #56]	; 0x38
   871c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   871c6:	f000 bba9 	b.w	8791c <__retarget_lock_release_recursive>
   871ca:	4802      	ldr	r0, [pc, #8]	; (871d4 <__sinit+0x58>)
   871cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
   871d0:	f000 bba4 	b.w	8791c <__retarget_lock_release_recursive>
   871d4:	200035c4 	.word	0x200035c4
   871d8:	00087121 	.word	0x00087121

000871dc <__sfp_lock_acquire>:
   871dc:	4801      	ldr	r0, [pc, #4]	; (871e4 <__sfp_lock_acquire+0x8>)
   871de:	f000 bb9b 	b.w	87918 <__retarget_lock_acquire_recursive>
   871e2:	bf00      	nop
   871e4:	200035d8 	.word	0x200035d8

000871e8 <__sfp_lock_release>:
   871e8:	4801      	ldr	r0, [pc, #4]	; (871f0 <__sfp_lock_release+0x8>)
   871ea:	f000 bb97 	b.w	8791c <__retarget_lock_release_recursive>
   871ee:	bf00      	nop
   871f0:	200035d8 	.word	0x200035d8

000871f4 <__libc_fini_array>:
   871f4:	b538      	push	{r3, r4, r5, lr}
   871f6:	4c0a      	ldr	r4, [pc, #40]	; (87220 <__libc_fini_array+0x2c>)
   871f8:	4d0a      	ldr	r5, [pc, #40]	; (87224 <__libc_fini_array+0x30>)
   871fa:	1b64      	subs	r4, r4, r5
   871fc:	10a4      	asrs	r4, r4, #2
   871fe:	d00a      	beq.n	87216 <__libc_fini_array+0x22>
   87200:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   87204:	3b01      	subs	r3, #1
   87206:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8720a:	3c01      	subs	r4, #1
   8720c:	f855 3904 	ldr.w	r3, [r5], #-4
   87210:	4798      	blx	r3
   87212:	2c00      	cmp	r4, #0
   87214:	d1f9      	bne.n	8720a <__libc_fini_array+0x16>
   87216:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8721a:	f002 bf0b 	b.w	8a034 <_fini>
   8721e:	bf00      	nop
   87220:	0008a044 	.word	0x0008a044
   87224:	0008a040 	.word	0x0008a040

00087228 <__fputwc>:
   87228:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   8722c:	b083      	sub	sp, #12
   8722e:	4607      	mov	r7, r0
   87230:	4688      	mov	r8, r1
   87232:	4614      	mov	r4, r2
   87234:	f000 fb50 	bl	878d8 <__locale_mb_cur_max>
   87238:	2801      	cmp	r0, #1
   8723a:	d033      	beq.n	872a4 <__fputwc+0x7c>
   8723c:	4642      	mov	r2, r8
   8723e:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   87242:	a901      	add	r1, sp, #4
   87244:	4638      	mov	r0, r7
   87246:	f001 fd65 	bl	88d14 <_wcrtomb_r>
   8724a:	1c42      	adds	r2, r0, #1
   8724c:	4606      	mov	r6, r0
   8724e:	d022      	beq.n	87296 <__fputwc+0x6e>
   87250:	b390      	cbz	r0, 872b8 <__fputwc+0x90>
   87252:	f89d 1004 	ldrb.w	r1, [sp, #4]
   87256:	2500      	movs	r5, #0
   87258:	f10d 0904 	add.w	r9, sp, #4
   8725c:	e008      	b.n	87270 <__fputwc+0x48>
   8725e:	6823      	ldr	r3, [r4, #0]
   87260:	1c5a      	adds	r2, r3, #1
   87262:	6022      	str	r2, [r4, #0]
   87264:	7019      	strb	r1, [r3, #0]
   87266:	3501      	adds	r5, #1
   87268:	42b5      	cmp	r5, r6
   8726a:	d225      	bcs.n	872b8 <__fputwc+0x90>
   8726c:	f815 1009 	ldrb.w	r1, [r5, r9]
   87270:	68a3      	ldr	r3, [r4, #8]
   87272:	3b01      	subs	r3, #1
   87274:	2b00      	cmp	r3, #0
   87276:	60a3      	str	r3, [r4, #8]
   87278:	daf1      	bge.n	8725e <__fputwc+0x36>
   8727a:	69a2      	ldr	r2, [r4, #24]
   8727c:	4293      	cmp	r3, r2
   8727e:	db01      	blt.n	87284 <__fputwc+0x5c>
   87280:	290a      	cmp	r1, #10
   87282:	d1ec      	bne.n	8725e <__fputwc+0x36>
   87284:	4622      	mov	r2, r4
   87286:	4638      	mov	r0, r7
   87288:	f001 fcec 	bl	88c64 <__swbuf_r>
   8728c:	1c43      	adds	r3, r0, #1
   8728e:	d1ea      	bne.n	87266 <__fputwc+0x3e>
   87290:	b003      	add	sp, #12
   87292:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   87296:	89a3      	ldrh	r3, [r4, #12]
   87298:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8729c:	81a3      	strh	r3, [r4, #12]
   8729e:	b003      	add	sp, #12
   872a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   872a4:	f108 33ff 	add.w	r3, r8, #4294967295
   872a8:	2bfe      	cmp	r3, #254	; 0xfe
   872aa:	d8c7      	bhi.n	8723c <__fputwc+0x14>
   872ac:	fa5f f188 	uxtb.w	r1, r8
   872b0:	4606      	mov	r6, r0
   872b2:	f88d 1004 	strb.w	r1, [sp, #4]
   872b6:	e7ce      	b.n	87256 <__fputwc+0x2e>
   872b8:	4640      	mov	r0, r8
   872ba:	b003      	add	sp, #12
   872bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

000872c0 <_fputwc_r>:
   872c0:	b530      	push	{r4, r5, lr}
   872c2:	6e53      	ldr	r3, [r2, #100]	; 0x64
   872c4:	4614      	mov	r4, r2
   872c6:	f013 0f01 	tst.w	r3, #1
   872ca:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   872ce:	b083      	sub	sp, #12
   872d0:	4605      	mov	r5, r0
   872d2:	b29a      	uxth	r2, r3
   872d4:	d101      	bne.n	872da <_fputwc_r+0x1a>
   872d6:	0590      	lsls	r0, r2, #22
   872d8:	d51c      	bpl.n	87314 <_fputwc_r+0x54>
   872da:	0490      	lsls	r0, r2, #18
   872dc:	d406      	bmi.n	872ec <_fputwc_r+0x2c>
   872de:	6e62      	ldr	r2, [r4, #100]	; 0x64
   872e0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   872e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   872e8:	81a3      	strh	r3, [r4, #12]
   872ea:	6662      	str	r2, [r4, #100]	; 0x64
   872ec:	4628      	mov	r0, r5
   872ee:	4622      	mov	r2, r4
   872f0:	f7ff ff9a 	bl	87228 <__fputwc>
   872f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   872f6:	4605      	mov	r5, r0
   872f8:	07da      	lsls	r2, r3, #31
   872fa:	d402      	bmi.n	87302 <_fputwc_r+0x42>
   872fc:	89a3      	ldrh	r3, [r4, #12]
   872fe:	059b      	lsls	r3, r3, #22
   87300:	d502      	bpl.n	87308 <_fputwc_r+0x48>
   87302:	4628      	mov	r0, r5
   87304:	b003      	add	sp, #12
   87306:	bd30      	pop	{r4, r5, pc}
   87308:	6da0      	ldr	r0, [r4, #88]	; 0x58
   8730a:	f000 fb07 	bl	8791c <__retarget_lock_release_recursive>
   8730e:	4628      	mov	r0, r5
   87310:	b003      	add	sp, #12
   87312:	bd30      	pop	{r4, r5, pc}
   87314:	6da0      	ldr	r0, [r4, #88]	; 0x58
   87316:	9101      	str	r1, [sp, #4]
   87318:	f000 fafe 	bl	87918 <__retarget_lock_acquire_recursive>
   8731c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87320:	9901      	ldr	r1, [sp, #4]
   87322:	b29a      	uxth	r2, r3
   87324:	e7d9      	b.n	872da <_fputwc_r+0x1a>
   87326:	bf00      	nop

00087328 <_malloc_trim_r>:
   87328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8732a:	460c      	mov	r4, r1
   8732c:	4f23      	ldr	r7, [pc, #140]	; (873bc <_malloc_trim_r+0x94>)
   8732e:	4606      	mov	r6, r0
   87330:	f000 fed8 	bl	880e4 <__malloc_lock>
   87334:	68bb      	ldr	r3, [r7, #8]
   87336:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   8733a:	685d      	ldr	r5, [r3, #4]
   8733c:	310f      	adds	r1, #15
   8733e:	f025 0503 	bic.w	r5, r5, #3
   87342:	4429      	add	r1, r5
   87344:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   87348:	f021 010f 	bic.w	r1, r1, #15
   8734c:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   87350:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   87354:	db07      	blt.n	87366 <_malloc_trim_r+0x3e>
   87356:	2100      	movs	r1, #0
   87358:	4630      	mov	r0, r6
   8735a:	f001 fb81 	bl	88a60 <_sbrk_r>
   8735e:	68bb      	ldr	r3, [r7, #8]
   87360:	442b      	add	r3, r5
   87362:	4298      	cmp	r0, r3
   87364:	d004      	beq.n	87370 <_malloc_trim_r+0x48>
   87366:	4630      	mov	r0, r6
   87368:	f000 fec2 	bl	880f0 <__malloc_unlock>
   8736c:	2000      	movs	r0, #0
   8736e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87370:	4261      	negs	r1, r4
   87372:	4630      	mov	r0, r6
   87374:	f001 fb74 	bl	88a60 <_sbrk_r>
   87378:	3001      	adds	r0, #1
   8737a:	d00d      	beq.n	87398 <_malloc_trim_r+0x70>
   8737c:	4b10      	ldr	r3, [pc, #64]	; (873c0 <_malloc_trim_r+0x98>)
   8737e:	68ba      	ldr	r2, [r7, #8]
   87380:	6819      	ldr	r1, [r3, #0]
   87382:	1b2d      	subs	r5, r5, r4
   87384:	f045 0501 	orr.w	r5, r5, #1
   87388:	4630      	mov	r0, r6
   8738a:	1b09      	subs	r1, r1, r4
   8738c:	6055      	str	r5, [r2, #4]
   8738e:	6019      	str	r1, [r3, #0]
   87390:	f000 feae 	bl	880f0 <__malloc_unlock>
   87394:	2001      	movs	r0, #1
   87396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87398:	2100      	movs	r1, #0
   8739a:	4630      	mov	r0, r6
   8739c:	f001 fb60 	bl	88a60 <_sbrk_r>
   873a0:	68ba      	ldr	r2, [r7, #8]
   873a2:	1a83      	subs	r3, r0, r2
   873a4:	2b0f      	cmp	r3, #15
   873a6:	ddde      	ble.n	87366 <_malloc_trim_r+0x3e>
   873a8:	4c06      	ldr	r4, [pc, #24]	; (873c4 <_malloc_trim_r+0x9c>)
   873aa:	4905      	ldr	r1, [pc, #20]	; (873c0 <_malloc_trim_r+0x98>)
   873ac:	6824      	ldr	r4, [r4, #0]
   873ae:	f043 0301 	orr.w	r3, r3, #1
   873b2:	1b00      	subs	r0, r0, r4
   873b4:	6053      	str	r3, [r2, #4]
   873b6:	6008      	str	r0, [r1, #0]
   873b8:	e7d5      	b.n	87366 <_malloc_trim_r+0x3e>
   873ba:	bf00      	nop
   873bc:	20000878 	.word	0x20000878
   873c0:	20003550 	.word	0x20003550
   873c4:	20000c80 	.word	0x20000c80

000873c8 <_free_r>:
   873c8:	2900      	cmp	r1, #0
   873ca:	d044      	beq.n	87456 <_free_r+0x8e>
   873cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   873d0:	460d      	mov	r5, r1
   873d2:	4680      	mov	r8, r0
   873d4:	f000 fe86 	bl	880e4 <__malloc_lock>
   873d8:	f855 7c04 	ldr.w	r7, [r5, #-4]
   873dc:	4969      	ldr	r1, [pc, #420]	; (87584 <_free_r+0x1bc>)
   873de:	f1a5 0408 	sub.w	r4, r5, #8
   873e2:	f027 0301 	bic.w	r3, r7, #1
   873e6:	18e2      	adds	r2, r4, r3
   873e8:	688e      	ldr	r6, [r1, #8]
   873ea:	6850      	ldr	r0, [r2, #4]
   873ec:	42b2      	cmp	r2, r6
   873ee:	f020 0003 	bic.w	r0, r0, #3
   873f2:	d05e      	beq.n	874b2 <_free_r+0xea>
   873f4:	07fe      	lsls	r6, r7, #31
   873f6:	6050      	str	r0, [r2, #4]
   873f8:	d40b      	bmi.n	87412 <_free_r+0x4a>
   873fa:	f855 7c08 	ldr.w	r7, [r5, #-8]
   873fe:	f101 0e08 	add.w	lr, r1, #8
   87402:	1be4      	subs	r4, r4, r7
   87404:	68a5      	ldr	r5, [r4, #8]
   87406:	443b      	add	r3, r7
   87408:	4575      	cmp	r5, lr
   8740a:	d06d      	beq.n	874e8 <_free_r+0x120>
   8740c:	68e7      	ldr	r7, [r4, #12]
   8740e:	60ef      	str	r7, [r5, #12]
   87410:	60bd      	str	r5, [r7, #8]
   87412:	1815      	adds	r5, r2, r0
   87414:	686d      	ldr	r5, [r5, #4]
   87416:	07ed      	lsls	r5, r5, #31
   87418:	d53e      	bpl.n	87498 <_free_r+0xd0>
   8741a:	f043 0201 	orr.w	r2, r3, #1
   8741e:	6062      	str	r2, [r4, #4]
   87420:	50e3      	str	r3, [r4, r3]
   87422:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87426:	d217      	bcs.n	87458 <_free_r+0x90>
   87428:	2201      	movs	r2, #1
   8742a:	08db      	lsrs	r3, r3, #3
   8742c:	1098      	asrs	r0, r3, #2
   8742e:	684d      	ldr	r5, [r1, #4]
   87430:	4413      	add	r3, r2
   87432:	f851 7033 	ldr.w	r7, [r1, r3, lsl #3]
   87436:	4082      	lsls	r2, r0
   87438:	eb01 00c3 	add.w	r0, r1, r3, lsl #3
   8743c:	432a      	orrs	r2, r5
   8743e:	3808      	subs	r0, #8
   87440:	60e0      	str	r0, [r4, #12]
   87442:	60a7      	str	r7, [r4, #8]
   87444:	604a      	str	r2, [r1, #4]
   87446:	f841 4033 	str.w	r4, [r1, r3, lsl #3]
   8744a:	60fc      	str	r4, [r7, #12]
   8744c:	4640      	mov	r0, r8
   8744e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   87452:	f000 be4d 	b.w	880f0 <__malloc_unlock>
   87456:	4770      	bx	lr
   87458:	0a5a      	lsrs	r2, r3, #9
   8745a:	2a04      	cmp	r2, #4
   8745c:	d852      	bhi.n	87504 <_free_r+0x13c>
   8745e:	099a      	lsrs	r2, r3, #6
   87460:	f102 0739 	add.w	r7, r2, #57	; 0x39
   87464:	00ff      	lsls	r7, r7, #3
   87466:	f102 0538 	add.w	r5, r2, #56	; 0x38
   8746a:	19c8      	adds	r0, r1, r7
   8746c:	59ca      	ldr	r2, [r1, r7]
   8746e:	3808      	subs	r0, #8
   87470:	4290      	cmp	r0, r2
   87472:	d04f      	beq.n	87514 <_free_r+0x14c>
   87474:	6851      	ldr	r1, [r2, #4]
   87476:	f021 0103 	bic.w	r1, r1, #3
   8747a:	428b      	cmp	r3, r1
   8747c:	d232      	bcs.n	874e4 <_free_r+0x11c>
   8747e:	6892      	ldr	r2, [r2, #8]
   87480:	4290      	cmp	r0, r2
   87482:	d1f7      	bne.n	87474 <_free_r+0xac>
   87484:	68c3      	ldr	r3, [r0, #12]
   87486:	60a0      	str	r0, [r4, #8]
   87488:	60e3      	str	r3, [r4, #12]
   8748a:	609c      	str	r4, [r3, #8]
   8748c:	60c4      	str	r4, [r0, #12]
   8748e:	4640      	mov	r0, r8
   87490:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   87494:	f000 be2c 	b.w	880f0 <__malloc_unlock>
   87498:	6895      	ldr	r5, [r2, #8]
   8749a:	4f3b      	ldr	r7, [pc, #236]	; (87588 <_free_r+0x1c0>)
   8749c:	4403      	add	r3, r0
   8749e:	42bd      	cmp	r5, r7
   874a0:	d040      	beq.n	87524 <_free_r+0x15c>
   874a2:	68d0      	ldr	r0, [r2, #12]
   874a4:	f043 0201 	orr.w	r2, r3, #1
   874a8:	60e8      	str	r0, [r5, #12]
   874aa:	6085      	str	r5, [r0, #8]
   874ac:	6062      	str	r2, [r4, #4]
   874ae:	50e3      	str	r3, [r4, r3]
   874b0:	e7b7      	b.n	87422 <_free_r+0x5a>
   874b2:	07ff      	lsls	r7, r7, #31
   874b4:	4403      	add	r3, r0
   874b6:	d407      	bmi.n	874c8 <_free_r+0x100>
   874b8:	f855 5c08 	ldr.w	r5, [r5, #-8]
   874bc:	1b64      	subs	r4, r4, r5
   874be:	68e2      	ldr	r2, [r4, #12]
   874c0:	68a0      	ldr	r0, [r4, #8]
   874c2:	442b      	add	r3, r5
   874c4:	60c2      	str	r2, [r0, #12]
   874c6:	6090      	str	r0, [r2, #8]
   874c8:	4a30      	ldr	r2, [pc, #192]	; (8758c <_free_r+0x1c4>)
   874ca:	f043 0001 	orr.w	r0, r3, #1
   874ce:	6812      	ldr	r2, [r2, #0]
   874d0:	6060      	str	r0, [r4, #4]
   874d2:	4293      	cmp	r3, r2
   874d4:	608c      	str	r4, [r1, #8]
   874d6:	d3b9      	bcc.n	8744c <_free_r+0x84>
   874d8:	4b2d      	ldr	r3, [pc, #180]	; (87590 <_free_r+0x1c8>)
   874da:	4640      	mov	r0, r8
   874dc:	6819      	ldr	r1, [r3, #0]
   874de:	f7ff ff23 	bl	87328 <_malloc_trim_r>
   874e2:	e7b3      	b.n	8744c <_free_r+0x84>
   874e4:	4610      	mov	r0, r2
   874e6:	e7cd      	b.n	87484 <_free_r+0xbc>
   874e8:	1811      	adds	r1, r2, r0
   874ea:	6849      	ldr	r1, [r1, #4]
   874ec:	07c9      	lsls	r1, r1, #31
   874ee:	d444      	bmi.n	8757a <_free_r+0x1b2>
   874f0:	6891      	ldr	r1, [r2, #8]
   874f2:	4403      	add	r3, r0
   874f4:	68d2      	ldr	r2, [r2, #12]
   874f6:	f043 0001 	orr.w	r0, r3, #1
   874fa:	60ca      	str	r2, [r1, #12]
   874fc:	6091      	str	r1, [r2, #8]
   874fe:	6060      	str	r0, [r4, #4]
   87500:	50e3      	str	r3, [r4, r3]
   87502:	e7a3      	b.n	8744c <_free_r+0x84>
   87504:	2a14      	cmp	r2, #20
   87506:	d816      	bhi.n	87536 <_free_r+0x16e>
   87508:	f102 075c 	add.w	r7, r2, #92	; 0x5c
   8750c:	00ff      	lsls	r7, r7, #3
   8750e:	f102 055b 	add.w	r5, r2, #91	; 0x5b
   87512:	e7aa      	b.n	8746a <_free_r+0xa2>
   87514:	2301      	movs	r3, #1
   87516:	10aa      	asrs	r2, r5, #2
   87518:	684d      	ldr	r5, [r1, #4]
   8751a:	4093      	lsls	r3, r2
   8751c:	432b      	orrs	r3, r5
   8751e:	604b      	str	r3, [r1, #4]
   87520:	4603      	mov	r3, r0
   87522:	e7b0      	b.n	87486 <_free_r+0xbe>
   87524:	f043 0201 	orr.w	r2, r3, #1
   87528:	614c      	str	r4, [r1, #20]
   8752a:	610c      	str	r4, [r1, #16]
   8752c:	60e5      	str	r5, [r4, #12]
   8752e:	60a5      	str	r5, [r4, #8]
   87530:	6062      	str	r2, [r4, #4]
   87532:	50e3      	str	r3, [r4, r3]
   87534:	e78a      	b.n	8744c <_free_r+0x84>
   87536:	2a54      	cmp	r2, #84	; 0x54
   87538:	d806      	bhi.n	87548 <_free_r+0x180>
   8753a:	0b1a      	lsrs	r2, r3, #12
   8753c:	f102 076f 	add.w	r7, r2, #111	; 0x6f
   87540:	00ff      	lsls	r7, r7, #3
   87542:	f102 056e 	add.w	r5, r2, #110	; 0x6e
   87546:	e790      	b.n	8746a <_free_r+0xa2>
   87548:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   8754c:	d806      	bhi.n	8755c <_free_r+0x194>
   8754e:	0bda      	lsrs	r2, r3, #15
   87550:	f102 0778 	add.w	r7, r2, #120	; 0x78
   87554:	00ff      	lsls	r7, r7, #3
   87556:	f102 0577 	add.w	r5, r2, #119	; 0x77
   8755a:	e786      	b.n	8746a <_free_r+0xa2>
   8755c:	f240 5054 	movw	r0, #1364	; 0x554
   87560:	4282      	cmp	r2, r0
   87562:	d806      	bhi.n	87572 <_free_r+0x1aa>
   87564:	0c9a      	lsrs	r2, r3, #18
   87566:	f102 077d 	add.w	r7, r2, #125	; 0x7d
   8756a:	00ff      	lsls	r7, r7, #3
   8756c:	f102 057c 	add.w	r5, r2, #124	; 0x7c
   87570:	e77b      	b.n	8746a <_free_r+0xa2>
   87572:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
   87576:	257e      	movs	r5, #126	; 0x7e
   87578:	e777      	b.n	8746a <_free_r+0xa2>
   8757a:	f043 0101 	orr.w	r1, r3, #1
   8757e:	6061      	str	r1, [r4, #4]
   87580:	6013      	str	r3, [r2, #0]
   87582:	e763      	b.n	8744c <_free_r+0x84>
   87584:	20000878 	.word	0x20000878
   87588:	20000880 	.word	0x20000880
   8758c:	20000c84 	.word	0x20000c84
   87590:	20003580 	.word	0x20003580

00087594 <__sfvwrite_r>:
   87594:	6893      	ldr	r3, [r2, #8]
   87596:	2b00      	cmp	r3, #0
   87598:	d071      	beq.n	8767e <__sfvwrite_r+0xea>
   8759a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8759e:	898b      	ldrh	r3, [r1, #12]
   875a0:	b083      	sub	sp, #12
   875a2:	460c      	mov	r4, r1
   875a4:	0719      	lsls	r1, r3, #28
   875a6:	9000      	str	r0, [sp, #0]
   875a8:	4616      	mov	r6, r2
   875aa:	d525      	bpl.n	875f8 <__sfvwrite_r+0x64>
   875ac:	6922      	ldr	r2, [r4, #16]
   875ae:	b31a      	cbz	r2, 875f8 <__sfvwrite_r+0x64>
   875b0:	f013 0002 	ands.w	r0, r3, #2
   875b4:	6835      	ldr	r5, [r6, #0]
   875b6:	d02b      	beq.n	87610 <__sfvwrite_r+0x7c>
   875b8:	f04f 0900 	mov.w	r9, #0
   875bc:	46b0      	mov	r8, r6
   875be:	464f      	mov	r7, r9
   875c0:	f8df a2c0 	ldr.w	sl, [pc, #704]	; 87884 <__sfvwrite_r+0x2f0>
   875c4:	2f00      	cmp	r7, #0
   875c6:	d055      	beq.n	87674 <__sfvwrite_r+0xe0>
   875c8:	4557      	cmp	r7, sl
   875ca:	463b      	mov	r3, r7
   875cc:	464a      	mov	r2, r9
   875ce:	bf28      	it	cs
   875d0:	4653      	movcs	r3, sl
   875d2:	69e1      	ldr	r1, [r4, #28]
   875d4:	9800      	ldr	r0, [sp, #0]
   875d6:	6a66      	ldr	r6, [r4, #36]	; 0x24
   875d8:	47b0      	blx	r6
   875da:	2800      	cmp	r0, #0
   875dc:	dd56      	ble.n	8768c <__sfvwrite_r+0xf8>
   875de:	f8d8 3008 	ldr.w	r3, [r8, #8]
   875e2:	4481      	add	r9, r0
   875e4:	1a1b      	subs	r3, r3, r0
   875e6:	1a3f      	subs	r7, r7, r0
   875e8:	f8c8 3008 	str.w	r3, [r8, #8]
   875ec:	2b00      	cmp	r3, #0
   875ee:	d1e9      	bne.n	875c4 <__sfvwrite_r+0x30>
   875f0:	2000      	movs	r0, #0
   875f2:	b003      	add	sp, #12
   875f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   875f8:	4621      	mov	r1, r4
   875fa:	9800      	ldr	r0, [sp, #0]
   875fc:	f7fe fc9e 	bl	85f3c <__swsetup_r>
   87600:	2800      	cmp	r0, #0
   87602:	f040 8135 	bne.w	87870 <__sfvwrite_r+0x2dc>
   87606:	89a3      	ldrh	r3, [r4, #12]
   87608:	6835      	ldr	r5, [r6, #0]
   8760a:	f013 0002 	ands.w	r0, r3, #2
   8760e:	d1d3      	bne.n	875b8 <__sfvwrite_r+0x24>
   87610:	f013 0901 	ands.w	r9, r3, #1
   87614:	d144      	bne.n	876a0 <__sfvwrite_r+0x10c>
   87616:	464f      	mov	r7, r9
   87618:	9601      	str	r6, [sp, #4]
   8761a:	b337      	cbz	r7, 8766a <__sfvwrite_r+0xd6>
   8761c:	059a      	lsls	r2, r3, #22
   8761e:	f8d4 8008 	ldr.w	r8, [r4, #8]
   87622:	f140 8085 	bpl.w	87730 <__sfvwrite_r+0x19c>
   87626:	4547      	cmp	r7, r8
   87628:	46c3      	mov	fp, r8
   8762a:	f0c0 80ad 	bcc.w	87788 <__sfvwrite_r+0x1f4>
   8762e:	f413 6f90 	tst.w	r3, #1152	; 0x480
   87632:	f040 80ae 	bne.w	87792 <__sfvwrite_r+0x1fe>
   87636:	46ba      	mov	sl, r7
   87638:	6820      	ldr	r0, [r4, #0]
   8763a:	465a      	mov	r2, fp
   8763c:	4649      	mov	r1, r9
   8763e:	f000 fced 	bl	8801c <memmove>
   87642:	68a2      	ldr	r2, [r4, #8]
   87644:	6823      	ldr	r3, [r4, #0]
   87646:	eba2 0208 	sub.w	r2, r2, r8
   8764a:	445b      	add	r3, fp
   8764c:	60a2      	str	r2, [r4, #8]
   8764e:	6023      	str	r3, [r4, #0]
   87650:	9a01      	ldr	r2, [sp, #4]
   87652:	44d1      	add	r9, sl
   87654:	6893      	ldr	r3, [r2, #8]
   87656:	eba7 070a 	sub.w	r7, r7, sl
   8765a:	eba3 030a 	sub.w	r3, r3, sl
   8765e:	6093      	str	r3, [r2, #8]
   87660:	2b00      	cmp	r3, #0
   87662:	d0c5      	beq.n	875f0 <__sfvwrite_r+0x5c>
   87664:	89a3      	ldrh	r3, [r4, #12]
   87666:	2f00      	cmp	r7, #0
   87668:	d1d8      	bne.n	8761c <__sfvwrite_r+0x88>
   8766a:	f8d5 9000 	ldr.w	r9, [r5]
   8766e:	686f      	ldr	r7, [r5, #4]
   87670:	3508      	adds	r5, #8
   87672:	e7d2      	b.n	8761a <__sfvwrite_r+0x86>
   87674:	f8d5 9000 	ldr.w	r9, [r5]
   87678:	686f      	ldr	r7, [r5, #4]
   8767a:	3508      	adds	r5, #8
   8767c:	e7a2      	b.n	875c4 <__sfvwrite_r+0x30>
   8767e:	2000      	movs	r0, #0
   87680:	4770      	bx	lr
   87682:	4621      	mov	r1, r4
   87684:	9800      	ldr	r0, [sp, #0]
   87686:	f7ff fd21 	bl	870cc <_fflush_r>
   8768a:	b378      	cbz	r0, 876ec <__sfvwrite_r+0x158>
   8768c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87690:	f04f 30ff 	mov.w	r0, #4294967295
   87694:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87698:	81a3      	strh	r3, [r4, #12]
   8769a:	b003      	add	sp, #12
   8769c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   876a0:	4681      	mov	r9, r0
   876a2:	4633      	mov	r3, r6
   876a4:	464e      	mov	r6, r9
   876a6:	46a8      	mov	r8, r5
   876a8:	469a      	mov	sl, r3
   876aa:	464d      	mov	r5, r9
   876ac:	b356      	cbz	r6, 87704 <__sfvwrite_r+0x170>
   876ae:	2800      	cmp	r0, #0
   876b0:	d032      	beq.n	87718 <__sfvwrite_r+0x184>
   876b2:	45b1      	cmp	r9, r6
   876b4:	46cb      	mov	fp, r9
   876b6:	bf28      	it	cs
   876b8:	46b3      	movcs	fp, r6
   876ba:	6820      	ldr	r0, [r4, #0]
   876bc:	6923      	ldr	r3, [r4, #16]
   876be:	465f      	mov	r7, fp
   876c0:	4298      	cmp	r0, r3
   876c2:	6962      	ldr	r2, [r4, #20]
   876c4:	d904      	bls.n	876d0 <__sfvwrite_r+0x13c>
   876c6:	68a3      	ldr	r3, [r4, #8]
   876c8:	4413      	add	r3, r2
   876ca:	459b      	cmp	fp, r3
   876cc:	f300 80a8 	bgt.w	87820 <__sfvwrite_r+0x28c>
   876d0:	4593      	cmp	fp, r2
   876d2:	db4d      	blt.n	87770 <__sfvwrite_r+0x1dc>
   876d4:	4613      	mov	r3, r2
   876d6:	6a67      	ldr	r7, [r4, #36]	; 0x24
   876d8:	462a      	mov	r2, r5
   876da:	69e1      	ldr	r1, [r4, #28]
   876dc:	9800      	ldr	r0, [sp, #0]
   876de:	47b8      	blx	r7
   876e0:	1e07      	subs	r7, r0, #0
   876e2:	ddd3      	ble.n	8768c <__sfvwrite_r+0xf8>
   876e4:	ebb9 0907 	subs.w	r9, r9, r7
   876e8:	d0cb      	beq.n	87682 <__sfvwrite_r+0xee>
   876ea:	2001      	movs	r0, #1
   876ec:	f8da 3008 	ldr.w	r3, [sl, #8]
   876f0:	443d      	add	r5, r7
   876f2:	1bdb      	subs	r3, r3, r7
   876f4:	1bf6      	subs	r6, r6, r7
   876f6:	f8ca 3008 	str.w	r3, [sl, #8]
   876fa:	2b00      	cmp	r3, #0
   876fc:	f43f af78 	beq.w	875f0 <__sfvwrite_r+0x5c>
   87700:	2e00      	cmp	r6, #0
   87702:	d1d4      	bne.n	876ae <__sfvwrite_r+0x11a>
   87704:	f108 0308 	add.w	r3, r8, #8
   87708:	f853 6c04 	ldr.w	r6, [r3, #-4]
   8770c:	4698      	mov	r8, r3
   8770e:	f853 5c08 	ldr.w	r5, [r3, #-8]
   87712:	3308      	adds	r3, #8
   87714:	2e00      	cmp	r6, #0
   87716:	d0f7      	beq.n	87708 <__sfvwrite_r+0x174>
   87718:	4632      	mov	r2, r6
   8771a:	210a      	movs	r1, #10
   8771c:	4628      	mov	r0, r5
   8771e:	f000 fc37 	bl	87f90 <memchr>
   87722:	2800      	cmp	r0, #0
   87724:	f000 80a1 	beq.w	8786a <__sfvwrite_r+0x2d6>
   87728:	3001      	adds	r0, #1
   8772a:	eba0 0905 	sub.w	r9, r0, r5
   8772e:	e7c0      	b.n	876b2 <__sfvwrite_r+0x11e>
   87730:	6820      	ldr	r0, [r4, #0]
   87732:	6923      	ldr	r3, [r4, #16]
   87734:	4298      	cmp	r0, r3
   87736:	d802      	bhi.n	8773e <__sfvwrite_r+0x1aa>
   87738:	6963      	ldr	r3, [r4, #20]
   8773a:	429f      	cmp	r7, r3
   8773c:	d25d      	bcs.n	877fa <__sfvwrite_r+0x266>
   8773e:	45b8      	cmp	r8, r7
   87740:	bf28      	it	cs
   87742:	46b8      	movcs	r8, r7
   87744:	4649      	mov	r1, r9
   87746:	4642      	mov	r2, r8
   87748:	f000 fc68 	bl	8801c <memmove>
   8774c:	68a3      	ldr	r3, [r4, #8]
   8774e:	6822      	ldr	r2, [r4, #0]
   87750:	eba3 0308 	sub.w	r3, r3, r8
   87754:	4442      	add	r2, r8
   87756:	60a3      	str	r3, [r4, #8]
   87758:	6022      	str	r2, [r4, #0]
   8775a:	b10b      	cbz	r3, 87760 <__sfvwrite_r+0x1cc>
   8775c:	46c2      	mov	sl, r8
   8775e:	e777      	b.n	87650 <__sfvwrite_r+0xbc>
   87760:	4621      	mov	r1, r4
   87762:	9800      	ldr	r0, [sp, #0]
   87764:	f7ff fcb2 	bl	870cc <_fflush_r>
   87768:	2800      	cmp	r0, #0
   8776a:	d18f      	bne.n	8768c <__sfvwrite_r+0xf8>
   8776c:	46c2      	mov	sl, r8
   8776e:	e76f      	b.n	87650 <__sfvwrite_r+0xbc>
   87770:	465a      	mov	r2, fp
   87772:	4629      	mov	r1, r5
   87774:	f000 fc52 	bl	8801c <memmove>
   87778:	68a2      	ldr	r2, [r4, #8]
   8777a:	6823      	ldr	r3, [r4, #0]
   8777c:	eba2 020b 	sub.w	r2, r2, fp
   87780:	445b      	add	r3, fp
   87782:	60a2      	str	r2, [r4, #8]
   87784:	6023      	str	r3, [r4, #0]
   87786:	e7ad      	b.n	876e4 <__sfvwrite_r+0x150>
   87788:	46b8      	mov	r8, r7
   8778a:	46ba      	mov	sl, r7
   8778c:	46bb      	mov	fp, r7
   8778e:	6820      	ldr	r0, [r4, #0]
   87790:	e753      	b.n	8763a <__sfvwrite_r+0xa6>
   87792:	6962      	ldr	r2, [r4, #20]
   87794:	6820      	ldr	r0, [r4, #0]
   87796:	6921      	ldr	r1, [r4, #16]
   87798:	eb02 0842 	add.w	r8, r2, r2, lsl #1
   8779c:	eba0 0a01 	sub.w	sl, r0, r1
   877a0:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
   877a4:	f10a 0001 	add.w	r0, sl, #1
   877a8:	ea4f 0868 	mov.w	r8, r8, asr #1
   877ac:	4438      	add	r0, r7
   877ae:	4540      	cmp	r0, r8
   877b0:	4642      	mov	r2, r8
   877b2:	bf84      	itt	hi
   877b4:	4680      	movhi	r8, r0
   877b6:	4642      	movhi	r2, r8
   877b8:	055b      	lsls	r3, r3, #21
   877ba:	d544      	bpl.n	87846 <__sfvwrite_r+0x2b2>
   877bc:	4611      	mov	r1, r2
   877be:	9800      	ldr	r0, [sp, #0]
   877c0:	f000 f92e 	bl	87a20 <_malloc_r>
   877c4:	4683      	mov	fp, r0
   877c6:	2800      	cmp	r0, #0
   877c8:	d055      	beq.n	87876 <__sfvwrite_r+0x2e2>
   877ca:	4652      	mov	r2, sl
   877cc:	6921      	ldr	r1, [r4, #16]
   877ce:	f7fc f8b3 	bl	83938 <memcpy>
   877d2:	89a3      	ldrh	r3, [r4, #12]
   877d4:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
   877d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   877dc:	81a3      	strh	r3, [r4, #12]
   877de:	eb0b 000a 	add.w	r0, fp, sl
   877e2:	eba8 030a 	sub.w	r3, r8, sl
   877e6:	f8c4 b010 	str.w	fp, [r4, #16]
   877ea:	f8c4 8014 	str.w	r8, [r4, #20]
   877ee:	6020      	str	r0, [r4, #0]
   877f0:	60a3      	str	r3, [r4, #8]
   877f2:	46b8      	mov	r8, r7
   877f4:	46ba      	mov	sl, r7
   877f6:	46bb      	mov	fp, r7
   877f8:	e71f      	b.n	8763a <__sfvwrite_r+0xa6>
   877fa:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
   877fe:	42ba      	cmp	r2, r7
   87800:	bf28      	it	cs
   87802:	463a      	movcs	r2, r7
   87804:	fb92 f2f3 	sdiv	r2, r2, r3
   87808:	69e1      	ldr	r1, [r4, #28]
   8780a:	fb03 f302 	mul.w	r3, r3, r2
   8780e:	9800      	ldr	r0, [sp, #0]
   87810:	464a      	mov	r2, r9
   87812:	6a66      	ldr	r6, [r4, #36]	; 0x24
   87814:	47b0      	blx	r6
   87816:	f1b0 0a00 	subs.w	sl, r0, #0
   8781a:	f73f af19 	bgt.w	87650 <__sfvwrite_r+0xbc>
   8781e:	e735      	b.n	8768c <__sfvwrite_r+0xf8>
   87820:	461a      	mov	r2, r3
   87822:	4629      	mov	r1, r5
   87824:	9301      	str	r3, [sp, #4]
   87826:	f000 fbf9 	bl	8801c <memmove>
   8782a:	6822      	ldr	r2, [r4, #0]
   8782c:	9b01      	ldr	r3, [sp, #4]
   8782e:	4621      	mov	r1, r4
   87830:	441a      	add	r2, r3
   87832:	6022      	str	r2, [r4, #0]
   87834:	9800      	ldr	r0, [sp, #0]
   87836:	f7ff fc49 	bl	870cc <_fflush_r>
   8783a:	9b01      	ldr	r3, [sp, #4]
   8783c:	2800      	cmp	r0, #0
   8783e:	f47f af25 	bne.w	8768c <__sfvwrite_r+0xf8>
   87842:	461f      	mov	r7, r3
   87844:	e74e      	b.n	876e4 <__sfvwrite_r+0x150>
   87846:	9800      	ldr	r0, [sp, #0]
   87848:	f000 ff54 	bl	886f4 <_realloc_r>
   8784c:	4683      	mov	fp, r0
   8784e:	2800      	cmp	r0, #0
   87850:	d1c5      	bne.n	877de <__sfvwrite_r+0x24a>
   87852:	9d00      	ldr	r5, [sp, #0]
   87854:	6921      	ldr	r1, [r4, #16]
   87856:	4628      	mov	r0, r5
   87858:	f7ff fdb6 	bl	873c8 <_free_r>
   8785c:	220c      	movs	r2, #12
   8785e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87862:	602a      	str	r2, [r5, #0]
   87864:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   87868:	e712      	b.n	87690 <__sfvwrite_r+0xfc>
   8786a:	f106 0901 	add.w	r9, r6, #1
   8786e:	e720      	b.n	876b2 <__sfvwrite_r+0x11e>
   87870:	f04f 30ff 	mov.w	r0, #4294967295
   87874:	e6bd      	b.n	875f2 <__sfvwrite_r+0x5e>
   87876:	220c      	movs	r2, #12
   87878:	9900      	ldr	r1, [sp, #0]
   8787a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8787e:	600a      	str	r2, [r1, #0]
   87880:	e706      	b.n	87690 <__sfvwrite_r+0xfc>
   87882:	bf00      	nop
   87884:	7ffffc00 	.word	0x7ffffc00

00087888 <_fwalk_reent>:
   87888:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8788c:	f510 7638 	adds.w	r6, r0, #736	; 0x2e0
   87890:	d01e      	beq.n	878d0 <_fwalk_reent+0x48>
   87892:	4688      	mov	r8, r1
   87894:	4607      	mov	r7, r0
   87896:	f04f 0900 	mov.w	r9, #0
   8789a:	6875      	ldr	r5, [r6, #4]
   8789c:	68b4      	ldr	r4, [r6, #8]
   8789e:	3d01      	subs	r5, #1
   878a0:	d410      	bmi.n	878c4 <_fwalk_reent+0x3c>
   878a2:	89a3      	ldrh	r3, [r4, #12]
   878a4:	3d01      	subs	r5, #1
   878a6:	2b01      	cmp	r3, #1
   878a8:	d908      	bls.n	878bc <_fwalk_reent+0x34>
   878aa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   878ae:	3301      	adds	r3, #1
   878b0:	d004      	beq.n	878bc <_fwalk_reent+0x34>
   878b2:	4621      	mov	r1, r4
   878b4:	4638      	mov	r0, r7
   878b6:	47c0      	blx	r8
   878b8:	ea49 0900 	orr.w	r9, r9, r0
   878bc:	1c6b      	adds	r3, r5, #1
   878be:	f104 0468 	add.w	r4, r4, #104	; 0x68
   878c2:	d1ee      	bne.n	878a2 <_fwalk_reent+0x1a>
   878c4:	6836      	ldr	r6, [r6, #0]
   878c6:	2e00      	cmp	r6, #0
   878c8:	d1e7      	bne.n	8789a <_fwalk_reent+0x12>
   878ca:	4648      	mov	r0, r9
   878cc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   878d0:	46b1      	mov	r9, r6
   878d2:	4648      	mov	r0, r9
   878d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

000878d8 <__locale_mb_cur_max>:
   878d8:	4b04      	ldr	r3, [pc, #16]	; (878ec <__locale_mb_cur_max+0x14>)
   878da:	4a05      	ldr	r2, [pc, #20]	; (878f0 <__locale_mb_cur_max+0x18>)
   878dc:	681b      	ldr	r3, [r3, #0]
   878de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
   878e0:	2b00      	cmp	r3, #0
   878e2:	bf08      	it	eq
   878e4:	4613      	moveq	r3, r2
   878e6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   878ea:	4770      	bx	lr
   878ec:	200002d8 	.word	0x200002d8
   878f0:	2000070c 	.word	0x2000070c

000878f4 <_localeconv_r>:
   878f4:	4a04      	ldr	r2, [pc, #16]	; (87908 <_localeconv_r+0x14>)
   878f6:	4b05      	ldr	r3, [pc, #20]	; (8790c <_localeconv_r+0x18>)
   878f8:	6812      	ldr	r2, [r2, #0]
   878fa:	6b50      	ldr	r0, [r2, #52]	; 0x34
   878fc:	2800      	cmp	r0, #0
   878fe:	bf08      	it	eq
   87900:	4618      	moveq	r0, r3
   87902:	30f0      	adds	r0, #240	; 0xf0
   87904:	4770      	bx	lr
   87906:	bf00      	nop
   87908:	200002d8 	.word	0x200002d8
   8790c:	2000070c 	.word	0x2000070c

00087910 <__retarget_lock_init_recursive>:
   87910:	4770      	bx	lr
   87912:	bf00      	nop

00087914 <__retarget_lock_close_recursive>:
   87914:	4770      	bx	lr
   87916:	bf00      	nop

00087918 <__retarget_lock_acquire_recursive>:
   87918:	4770      	bx	lr
   8791a:	bf00      	nop

0008791c <__retarget_lock_release_recursive>:
   8791c:	4770      	bx	lr
   8791e:	bf00      	nop

00087920 <__swhatbuf_r>:
   87920:	b570      	push	{r4, r5, r6, lr}
   87922:	460c      	mov	r4, r1
   87924:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   87928:	b090      	sub	sp, #64	; 0x40
   8792a:	2900      	cmp	r1, #0
   8792c:	4615      	mov	r5, r2
   8792e:	461e      	mov	r6, r3
   87930:	db14      	blt.n	8795c <__swhatbuf_r+0x3c>
   87932:	aa01      	add	r2, sp, #4
   87934:	f001 fb40 	bl	88fb8 <_fstat_r>
   87938:	2800      	cmp	r0, #0
   8793a:	db0f      	blt.n	8795c <__swhatbuf_r+0x3c>
   8793c:	9a02      	ldr	r2, [sp, #8]
   8793e:	f44f 6380 	mov.w	r3, #1024	; 0x400
   87942:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   87946:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   8794a:	fab2 f282 	clz	r2, r2
   8794e:	f44f 6000 	mov.w	r0, #2048	; 0x800
   87952:	0952      	lsrs	r2, r2, #5
   87954:	6032      	str	r2, [r6, #0]
   87956:	602b      	str	r3, [r5, #0]
   87958:	b010      	add	sp, #64	; 0x40
   8795a:	bd70      	pop	{r4, r5, r6, pc}
   8795c:	2300      	movs	r3, #0
   8795e:	89a2      	ldrh	r2, [r4, #12]
   87960:	6033      	str	r3, [r6, #0]
   87962:	f012 0080 	ands.w	r0, r2, #128	; 0x80
   87966:	d004      	beq.n	87972 <__swhatbuf_r+0x52>
   87968:	2240      	movs	r2, #64	; 0x40
   8796a:	4618      	mov	r0, r3
   8796c:	602a      	str	r2, [r5, #0]
   8796e:	b010      	add	sp, #64	; 0x40
   87970:	bd70      	pop	{r4, r5, r6, pc}
   87972:	f44f 6380 	mov.w	r3, #1024	; 0x400
   87976:	602b      	str	r3, [r5, #0]
   87978:	b010      	add	sp, #64	; 0x40
   8797a:	bd70      	pop	{r4, r5, r6, pc}

0008797c <__smakebuf_r>:
   8797c:	898a      	ldrh	r2, [r1, #12]
   8797e:	460b      	mov	r3, r1
   87980:	0792      	lsls	r2, r2, #30
   87982:	d506      	bpl.n	87992 <__smakebuf_r+0x16>
   87984:	2101      	movs	r1, #1
   87986:	f103 0243 	add.w	r2, r3, #67	; 0x43
   8798a:	6159      	str	r1, [r3, #20]
   8798c:	601a      	str	r2, [r3, #0]
   8798e:	611a      	str	r2, [r3, #16]
   87990:	4770      	bx	lr
   87992:	b5f0      	push	{r4, r5, r6, r7, lr}
   87994:	b083      	sub	sp, #12
   87996:	ab01      	add	r3, sp, #4
   87998:	466a      	mov	r2, sp
   8799a:	460c      	mov	r4, r1
   8799c:	4606      	mov	r6, r0
   8799e:	f7ff ffbf 	bl	87920 <__swhatbuf_r>
   879a2:	9900      	ldr	r1, [sp, #0]
   879a4:	4605      	mov	r5, r0
   879a6:	4630      	mov	r0, r6
   879a8:	f000 f83a 	bl	87a20 <_malloc_r>
   879ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   879b0:	b1d8      	cbz	r0, 879ea <__smakebuf_r+0x6e>
   879b2:	e89d 0006 	ldmia.w	sp, {r1, r2}
   879b6:	4f15      	ldr	r7, [pc, #84]	; (87a0c <__smakebuf_r+0x90>)
   879b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   879bc:	63f7      	str	r7, [r6, #60]	; 0x3c
   879be:	81a3      	strh	r3, [r4, #12]
   879c0:	6020      	str	r0, [r4, #0]
   879c2:	6120      	str	r0, [r4, #16]
   879c4:	6161      	str	r1, [r4, #20]
   879c6:	b91a      	cbnz	r2, 879d0 <__smakebuf_r+0x54>
   879c8:	432b      	orrs	r3, r5
   879ca:	81a3      	strh	r3, [r4, #12]
   879cc:	b003      	add	sp, #12
   879ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
   879d0:	4630      	mov	r0, r6
   879d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   879d6:	f001 fb03 	bl	88fe0 <_isatty_r>
   879da:	b1a0      	cbz	r0, 87a06 <__smakebuf_r+0x8a>
   879dc:	89a3      	ldrh	r3, [r4, #12]
   879de:	f023 0303 	bic.w	r3, r3, #3
   879e2:	f043 0301 	orr.w	r3, r3, #1
   879e6:	b21b      	sxth	r3, r3
   879e8:	e7ee      	b.n	879c8 <__smakebuf_r+0x4c>
   879ea:	059a      	lsls	r2, r3, #22
   879ec:	d4ee      	bmi.n	879cc <__smakebuf_r+0x50>
   879ee:	2101      	movs	r1, #1
   879f0:	f023 0303 	bic.w	r3, r3, #3
   879f4:	f104 0243 	add.w	r2, r4, #67	; 0x43
   879f8:	f043 0302 	orr.w	r3, r3, #2
   879fc:	81a3      	strh	r3, [r4, #12]
   879fe:	6161      	str	r1, [r4, #20]
   87a00:	6022      	str	r2, [r4, #0]
   87a02:	6122      	str	r2, [r4, #16]
   87a04:	e7e2      	b.n	879cc <__smakebuf_r+0x50>
   87a06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87a0a:	e7dd      	b.n	879c8 <__smakebuf_r+0x4c>
   87a0c:	00087121 	.word	0x00087121

00087a10 <malloc>:
   87a10:	4b02      	ldr	r3, [pc, #8]	; (87a1c <malloc+0xc>)
   87a12:	4601      	mov	r1, r0
   87a14:	6818      	ldr	r0, [r3, #0]
   87a16:	f000 b803 	b.w	87a20 <_malloc_r>
   87a1a:	bf00      	nop
   87a1c:	200002d8 	.word	0x200002d8

00087a20 <_malloc_r>:
   87a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87a24:	f101 060b 	add.w	r6, r1, #11
   87a28:	2e16      	cmp	r6, #22
   87a2a:	b083      	sub	sp, #12
   87a2c:	4605      	mov	r5, r0
   87a2e:	f240 809e 	bls.w	87b6e <_malloc_r+0x14e>
   87a32:	f036 0607 	bics.w	r6, r6, #7
   87a36:	f100 80bd 	bmi.w	87bb4 <_malloc_r+0x194>
   87a3a:	42b1      	cmp	r1, r6
   87a3c:	f200 80ba 	bhi.w	87bb4 <_malloc_r+0x194>
   87a40:	f000 fb50 	bl	880e4 <__malloc_lock>
   87a44:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
   87a48:	f0c0 8285 	bcc.w	87f56 <_malloc_r+0x536>
   87a4c:	0a73      	lsrs	r3, r6, #9
   87a4e:	f000 80b8 	beq.w	87bc2 <_malloc_r+0x1a2>
   87a52:	2b04      	cmp	r3, #4
   87a54:	f200 816c 	bhi.w	87d30 <_malloc_r+0x310>
   87a58:	09b3      	lsrs	r3, r6, #6
   87a5a:	f103 0039 	add.w	r0, r3, #57	; 0x39
   87a5e:	f103 0e38 	add.w	lr, r3, #56	; 0x38
   87a62:	00c1      	lsls	r1, r0, #3
   87a64:	4fb8      	ldr	r7, [pc, #736]	; (87d48 <_malloc_r+0x328>)
   87a66:	4439      	add	r1, r7
   87a68:	684c      	ldr	r4, [r1, #4]
   87a6a:	3908      	subs	r1, #8
   87a6c:	42a1      	cmp	r1, r4
   87a6e:	d106      	bne.n	87a7e <_malloc_r+0x5e>
   87a70:	e00c      	b.n	87a8c <_malloc_r+0x6c>
   87a72:	2a00      	cmp	r2, #0
   87a74:	f280 80ab 	bge.w	87bce <_malloc_r+0x1ae>
   87a78:	68e4      	ldr	r4, [r4, #12]
   87a7a:	42a1      	cmp	r1, r4
   87a7c:	d006      	beq.n	87a8c <_malloc_r+0x6c>
   87a7e:	6863      	ldr	r3, [r4, #4]
   87a80:	f023 0303 	bic.w	r3, r3, #3
   87a84:	1b9a      	subs	r2, r3, r6
   87a86:	2a0f      	cmp	r2, #15
   87a88:	ddf3      	ble.n	87a72 <_malloc_r+0x52>
   87a8a:	4670      	mov	r0, lr
   87a8c:	693c      	ldr	r4, [r7, #16]
   87a8e:	f8df e2cc 	ldr.w	lr, [pc, #716]	; 87d5c <_malloc_r+0x33c>
   87a92:	4574      	cmp	r4, lr
   87a94:	f000 819e 	beq.w	87dd4 <_malloc_r+0x3b4>
   87a98:	6863      	ldr	r3, [r4, #4]
   87a9a:	f023 0303 	bic.w	r3, r3, #3
   87a9e:	1b9a      	subs	r2, r3, r6
   87aa0:	2a0f      	cmp	r2, #15
   87aa2:	f300 8183 	bgt.w	87dac <_malloc_r+0x38c>
   87aa6:	2a00      	cmp	r2, #0
   87aa8:	f8c7 e014 	str.w	lr, [r7, #20]
   87aac:	f8c7 e010 	str.w	lr, [r7, #16]
   87ab0:	f280 8091 	bge.w	87bd6 <_malloc_r+0x1b6>
   87ab4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87ab8:	f080 8154 	bcs.w	87d64 <_malloc_r+0x344>
   87abc:	2201      	movs	r2, #1
   87abe:	08db      	lsrs	r3, r3, #3
   87ac0:	6879      	ldr	r1, [r7, #4]
   87ac2:	ea4f 0ca3 	mov.w	ip, r3, asr #2
   87ac6:	4413      	add	r3, r2
   87ac8:	f857 8033 	ldr.w	r8, [r7, r3, lsl #3]
   87acc:	fa02 f20c 	lsl.w	r2, r2, ip
   87ad0:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
   87ad4:	430a      	orrs	r2, r1
   87ad6:	f1ac 0108 	sub.w	r1, ip, #8
   87ada:	60e1      	str	r1, [r4, #12]
   87adc:	f8c4 8008 	str.w	r8, [r4, #8]
   87ae0:	607a      	str	r2, [r7, #4]
   87ae2:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   87ae6:	f8c8 400c 	str.w	r4, [r8, #12]
   87aea:	2401      	movs	r4, #1
   87aec:	1083      	asrs	r3, r0, #2
   87aee:	409c      	lsls	r4, r3
   87af0:	4294      	cmp	r4, r2
   87af2:	d87d      	bhi.n	87bf0 <_malloc_r+0x1d0>
   87af4:	4214      	tst	r4, r2
   87af6:	d106      	bne.n	87b06 <_malloc_r+0xe6>
   87af8:	f020 0003 	bic.w	r0, r0, #3
   87afc:	0064      	lsls	r4, r4, #1
   87afe:	4214      	tst	r4, r2
   87b00:	f100 0004 	add.w	r0, r0, #4
   87b04:	d0fa      	beq.n	87afc <_malloc_r+0xdc>
   87b06:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   87b0a:	46cc      	mov	ip, r9
   87b0c:	4680      	mov	r8, r0
   87b0e:	f8dc 300c 	ldr.w	r3, [ip, #12]
   87b12:	459c      	cmp	ip, r3
   87b14:	d107      	bne.n	87b26 <_malloc_r+0x106>
   87b16:	e15f      	b.n	87dd8 <_malloc_r+0x3b8>
   87b18:	2a00      	cmp	r2, #0
   87b1a:	f280 816d 	bge.w	87df8 <_malloc_r+0x3d8>
   87b1e:	68db      	ldr	r3, [r3, #12]
   87b20:	459c      	cmp	ip, r3
   87b22:	f000 8159 	beq.w	87dd8 <_malloc_r+0x3b8>
   87b26:	6859      	ldr	r1, [r3, #4]
   87b28:	f021 0103 	bic.w	r1, r1, #3
   87b2c:	1b8a      	subs	r2, r1, r6
   87b2e:	2a0f      	cmp	r2, #15
   87b30:	ddf2      	ble.n	87b18 <_malloc_r+0xf8>
   87b32:	68dc      	ldr	r4, [r3, #12]
   87b34:	f8d3 c008 	ldr.w	ip, [r3, #8]
   87b38:	f046 0801 	orr.w	r8, r6, #1
   87b3c:	4628      	mov	r0, r5
   87b3e:	441e      	add	r6, r3
   87b40:	f042 0501 	orr.w	r5, r2, #1
   87b44:	f8c3 8004 	str.w	r8, [r3, #4]
   87b48:	f8cc 400c 	str.w	r4, [ip, #12]
   87b4c:	f8c4 c008 	str.w	ip, [r4, #8]
   87b50:	617e      	str	r6, [r7, #20]
   87b52:	613e      	str	r6, [r7, #16]
   87b54:	f8c6 e00c 	str.w	lr, [r6, #12]
   87b58:	f8c6 e008 	str.w	lr, [r6, #8]
   87b5c:	6075      	str	r5, [r6, #4]
   87b5e:	505a      	str	r2, [r3, r1]
   87b60:	9300      	str	r3, [sp, #0]
   87b62:	f000 fac5 	bl	880f0 <__malloc_unlock>
   87b66:	9b00      	ldr	r3, [sp, #0]
   87b68:	f103 0408 	add.w	r4, r3, #8
   87b6c:	e01e      	b.n	87bac <_malloc_r+0x18c>
   87b6e:	2910      	cmp	r1, #16
   87b70:	d820      	bhi.n	87bb4 <_malloc_r+0x194>
   87b72:	f000 fab7 	bl	880e4 <__malloc_lock>
   87b76:	2610      	movs	r6, #16
   87b78:	2318      	movs	r3, #24
   87b7a:	2002      	movs	r0, #2
   87b7c:	4f72      	ldr	r7, [pc, #456]	; (87d48 <_malloc_r+0x328>)
   87b7e:	443b      	add	r3, r7
   87b80:	685c      	ldr	r4, [r3, #4]
   87b82:	f1a3 0208 	sub.w	r2, r3, #8
   87b86:	4294      	cmp	r4, r2
   87b88:	f000 812f 	beq.w	87dea <_malloc_r+0x3ca>
   87b8c:	6863      	ldr	r3, [r4, #4]
   87b8e:	68e1      	ldr	r1, [r4, #12]
   87b90:	f023 0303 	bic.w	r3, r3, #3
   87b94:	4423      	add	r3, r4
   87b96:	685a      	ldr	r2, [r3, #4]
   87b98:	68a6      	ldr	r6, [r4, #8]
   87b9a:	f042 0201 	orr.w	r2, r2, #1
   87b9e:	60f1      	str	r1, [r6, #12]
   87ba0:	4628      	mov	r0, r5
   87ba2:	608e      	str	r6, [r1, #8]
   87ba4:	605a      	str	r2, [r3, #4]
   87ba6:	f000 faa3 	bl	880f0 <__malloc_unlock>
   87baa:	3408      	adds	r4, #8
   87bac:	4620      	mov	r0, r4
   87bae:	b003      	add	sp, #12
   87bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87bb4:	2400      	movs	r4, #0
   87bb6:	230c      	movs	r3, #12
   87bb8:	4620      	mov	r0, r4
   87bba:	602b      	str	r3, [r5, #0]
   87bbc:	b003      	add	sp, #12
   87bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87bc2:	2040      	movs	r0, #64	; 0x40
   87bc4:	f44f 7100 	mov.w	r1, #512	; 0x200
   87bc8:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
   87bcc:	e74a      	b.n	87a64 <_malloc_r+0x44>
   87bce:	4423      	add	r3, r4
   87bd0:	685a      	ldr	r2, [r3, #4]
   87bd2:	68e1      	ldr	r1, [r4, #12]
   87bd4:	e7e0      	b.n	87b98 <_malloc_r+0x178>
   87bd6:	4423      	add	r3, r4
   87bd8:	685a      	ldr	r2, [r3, #4]
   87bda:	4628      	mov	r0, r5
   87bdc:	f042 0201 	orr.w	r2, r2, #1
   87be0:	605a      	str	r2, [r3, #4]
   87be2:	3408      	adds	r4, #8
   87be4:	f000 fa84 	bl	880f0 <__malloc_unlock>
   87be8:	4620      	mov	r0, r4
   87bea:	b003      	add	sp, #12
   87bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87bf0:	68bc      	ldr	r4, [r7, #8]
   87bf2:	6863      	ldr	r3, [r4, #4]
   87bf4:	f023 0803 	bic.w	r8, r3, #3
   87bf8:	45b0      	cmp	r8, r6
   87bfa:	d304      	bcc.n	87c06 <_malloc_r+0x1e6>
   87bfc:	eba8 0306 	sub.w	r3, r8, r6
   87c00:	2b0f      	cmp	r3, #15
   87c02:	f300 8085 	bgt.w	87d10 <_malloc_r+0x2f0>
   87c06:	f8df 9158 	ldr.w	r9, [pc, #344]	; 87d60 <_malloc_r+0x340>
   87c0a:	4b50      	ldr	r3, [pc, #320]	; (87d4c <_malloc_r+0x32c>)
   87c0c:	f8d9 2000 	ldr.w	r2, [r9]
   87c10:	681b      	ldr	r3, [r3, #0]
   87c12:	3201      	adds	r2, #1
   87c14:	4433      	add	r3, r6
   87c16:	eb04 0a08 	add.w	sl, r4, r8
   87c1a:	f000 8154 	beq.w	87ec6 <_malloc_r+0x4a6>
   87c1e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   87c22:	330f      	adds	r3, #15
   87c24:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
   87c28:	f02b 0b0f 	bic.w	fp, fp, #15
   87c2c:	4659      	mov	r1, fp
   87c2e:	4628      	mov	r0, r5
   87c30:	f000 ff16 	bl	88a60 <_sbrk_r>
   87c34:	1c41      	adds	r1, r0, #1
   87c36:	4602      	mov	r2, r0
   87c38:	f000 80fb 	beq.w	87e32 <_malloc_r+0x412>
   87c3c:	4582      	cmp	sl, r0
   87c3e:	f200 80f6 	bhi.w	87e2e <_malloc_r+0x40e>
   87c42:	4b43      	ldr	r3, [pc, #268]	; (87d50 <_malloc_r+0x330>)
   87c44:	6819      	ldr	r1, [r3, #0]
   87c46:	4459      	add	r1, fp
   87c48:	6019      	str	r1, [r3, #0]
   87c4a:	f000 814c 	beq.w	87ee6 <_malloc_r+0x4c6>
   87c4e:	f8d9 0000 	ldr.w	r0, [r9]
   87c52:	3001      	adds	r0, #1
   87c54:	bf1b      	ittet	ne
   87c56:	eba2 0a0a 	subne.w	sl, r2, sl
   87c5a:	4451      	addne	r1, sl
   87c5c:	f8c9 2000 	streq.w	r2, [r9]
   87c60:	6019      	strne	r1, [r3, #0]
   87c62:	f012 0107 	ands.w	r1, r2, #7
   87c66:	f000 8114 	beq.w	87e92 <_malloc_r+0x472>
   87c6a:	f1c1 0008 	rsb	r0, r1, #8
   87c6e:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
   87c72:	4402      	add	r2, r0
   87c74:	3108      	adds	r1, #8
   87c76:	eb02 090b 	add.w	r9, r2, fp
   87c7a:	f3c9 090b 	ubfx	r9, r9, #0, #12
   87c7e:	eba1 0909 	sub.w	r9, r1, r9
   87c82:	4649      	mov	r1, r9
   87c84:	4628      	mov	r0, r5
   87c86:	9301      	str	r3, [sp, #4]
   87c88:	9200      	str	r2, [sp, #0]
   87c8a:	f000 fee9 	bl	88a60 <_sbrk_r>
   87c8e:	1c43      	adds	r3, r0, #1
   87c90:	e89d 000c 	ldmia.w	sp, {r2, r3}
   87c94:	f000 8142 	beq.w	87f1c <_malloc_r+0x4fc>
   87c98:	1a80      	subs	r0, r0, r2
   87c9a:	4448      	add	r0, r9
   87c9c:	f040 0001 	orr.w	r0, r0, #1
   87ca0:	6819      	ldr	r1, [r3, #0]
   87ca2:	42bc      	cmp	r4, r7
   87ca4:	4449      	add	r1, r9
   87ca6:	60ba      	str	r2, [r7, #8]
   87ca8:	6019      	str	r1, [r3, #0]
   87caa:	6050      	str	r0, [r2, #4]
   87cac:	d017      	beq.n	87cde <_malloc_r+0x2be>
   87cae:	f1b8 0f0f 	cmp.w	r8, #15
   87cb2:	f240 80fa 	bls.w	87eaa <_malloc_r+0x48a>
   87cb6:	f04f 0c05 	mov.w	ip, #5
   87cba:	6862      	ldr	r2, [r4, #4]
   87cbc:	f1a8 000c 	sub.w	r0, r8, #12
   87cc0:	f020 0007 	bic.w	r0, r0, #7
   87cc4:	f002 0201 	and.w	r2, r2, #1
   87cc8:	eb04 0e00 	add.w	lr, r4, r0
   87ccc:	4302      	orrs	r2, r0
   87cce:	280f      	cmp	r0, #15
   87cd0:	6062      	str	r2, [r4, #4]
   87cd2:	f8ce c004 	str.w	ip, [lr, #4]
   87cd6:	f8ce c008 	str.w	ip, [lr, #8]
   87cda:	f200 8116 	bhi.w	87f0a <_malloc_r+0x4ea>
   87cde:	4b1d      	ldr	r3, [pc, #116]	; (87d54 <_malloc_r+0x334>)
   87ce0:	68bc      	ldr	r4, [r7, #8]
   87ce2:	681a      	ldr	r2, [r3, #0]
   87ce4:	4291      	cmp	r1, r2
   87ce6:	bf88      	it	hi
   87ce8:	6019      	strhi	r1, [r3, #0]
   87cea:	4b1b      	ldr	r3, [pc, #108]	; (87d58 <_malloc_r+0x338>)
   87cec:	681a      	ldr	r2, [r3, #0]
   87cee:	4291      	cmp	r1, r2
   87cf0:	6862      	ldr	r2, [r4, #4]
   87cf2:	bf88      	it	hi
   87cf4:	6019      	strhi	r1, [r3, #0]
   87cf6:	f022 0203 	bic.w	r2, r2, #3
   87cfa:	4296      	cmp	r6, r2
   87cfc:	eba2 0306 	sub.w	r3, r2, r6
   87d00:	d801      	bhi.n	87d06 <_malloc_r+0x2e6>
   87d02:	2b0f      	cmp	r3, #15
   87d04:	dc04      	bgt.n	87d10 <_malloc_r+0x2f0>
   87d06:	4628      	mov	r0, r5
   87d08:	f000 f9f2 	bl	880f0 <__malloc_unlock>
   87d0c:	2400      	movs	r4, #0
   87d0e:	e74d      	b.n	87bac <_malloc_r+0x18c>
   87d10:	f046 0201 	orr.w	r2, r6, #1
   87d14:	f043 0301 	orr.w	r3, r3, #1
   87d18:	4426      	add	r6, r4
   87d1a:	6062      	str	r2, [r4, #4]
   87d1c:	4628      	mov	r0, r5
   87d1e:	60be      	str	r6, [r7, #8]
   87d20:	3408      	adds	r4, #8
   87d22:	6073      	str	r3, [r6, #4]
   87d24:	f000 f9e4 	bl	880f0 <__malloc_unlock>
   87d28:	4620      	mov	r0, r4
   87d2a:	b003      	add	sp, #12
   87d2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87d30:	2b14      	cmp	r3, #20
   87d32:	d970      	bls.n	87e16 <_malloc_r+0x3f6>
   87d34:	2b54      	cmp	r3, #84	; 0x54
   87d36:	f200 80a2 	bhi.w	87e7e <_malloc_r+0x45e>
   87d3a:	0b33      	lsrs	r3, r6, #12
   87d3c:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   87d40:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
   87d44:	00c1      	lsls	r1, r0, #3
   87d46:	e68d      	b.n	87a64 <_malloc_r+0x44>
   87d48:	20000878 	.word	0x20000878
   87d4c:	20003580 	.word	0x20003580
   87d50:	20003550 	.word	0x20003550
   87d54:	20003578 	.word	0x20003578
   87d58:	2000357c 	.word	0x2000357c
   87d5c:	20000880 	.word	0x20000880
   87d60:	20000c80 	.word	0x20000c80
   87d64:	0a5a      	lsrs	r2, r3, #9
   87d66:	2a04      	cmp	r2, #4
   87d68:	d95b      	bls.n	87e22 <_malloc_r+0x402>
   87d6a:	2a14      	cmp	r2, #20
   87d6c:	f200 80ae 	bhi.w	87ecc <_malloc_r+0x4ac>
   87d70:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   87d74:	00c9      	lsls	r1, r1, #3
   87d76:	325b      	adds	r2, #91	; 0x5b
   87d78:	eb07 0c01 	add.w	ip, r7, r1
   87d7c:	5879      	ldr	r1, [r7, r1]
   87d7e:	f1ac 0c08 	sub.w	ip, ip, #8
   87d82:	458c      	cmp	ip, r1
   87d84:	f000 8088 	beq.w	87e98 <_malloc_r+0x478>
   87d88:	684a      	ldr	r2, [r1, #4]
   87d8a:	f022 0203 	bic.w	r2, r2, #3
   87d8e:	4293      	cmp	r3, r2
   87d90:	d273      	bcs.n	87e7a <_malloc_r+0x45a>
   87d92:	6889      	ldr	r1, [r1, #8]
   87d94:	458c      	cmp	ip, r1
   87d96:	d1f7      	bne.n	87d88 <_malloc_r+0x368>
   87d98:	f8dc 300c 	ldr.w	r3, [ip, #12]
   87d9c:	687a      	ldr	r2, [r7, #4]
   87d9e:	60e3      	str	r3, [r4, #12]
   87da0:	f8c4 c008 	str.w	ip, [r4, #8]
   87da4:	609c      	str	r4, [r3, #8]
   87da6:	f8cc 400c 	str.w	r4, [ip, #12]
   87daa:	e69e      	b.n	87aea <_malloc_r+0xca>
   87dac:	f046 0c01 	orr.w	ip, r6, #1
   87db0:	f042 0101 	orr.w	r1, r2, #1
   87db4:	4426      	add	r6, r4
   87db6:	f8c4 c004 	str.w	ip, [r4, #4]
   87dba:	4628      	mov	r0, r5
   87dbc:	617e      	str	r6, [r7, #20]
   87dbe:	613e      	str	r6, [r7, #16]
   87dc0:	f8c6 e00c 	str.w	lr, [r6, #12]
   87dc4:	f8c6 e008 	str.w	lr, [r6, #8]
   87dc8:	6071      	str	r1, [r6, #4]
   87dca:	50e2      	str	r2, [r4, r3]
   87dcc:	f000 f990 	bl	880f0 <__malloc_unlock>
   87dd0:	3408      	adds	r4, #8
   87dd2:	e6eb      	b.n	87bac <_malloc_r+0x18c>
   87dd4:	687a      	ldr	r2, [r7, #4]
   87dd6:	e688      	b.n	87aea <_malloc_r+0xca>
   87dd8:	f108 0801 	add.w	r8, r8, #1
   87ddc:	f018 0f03 	tst.w	r8, #3
   87de0:	f10c 0c08 	add.w	ip, ip, #8
   87de4:	f47f ae93 	bne.w	87b0e <_malloc_r+0xee>
   87de8:	e02d      	b.n	87e46 <_malloc_r+0x426>
   87dea:	68dc      	ldr	r4, [r3, #12]
   87dec:	42a3      	cmp	r3, r4
   87dee:	bf08      	it	eq
   87df0:	3002      	addeq	r0, #2
   87df2:	f43f ae4b 	beq.w	87a8c <_malloc_r+0x6c>
   87df6:	e6c9      	b.n	87b8c <_malloc_r+0x16c>
   87df8:	461c      	mov	r4, r3
   87dfa:	4419      	add	r1, r3
   87dfc:	684a      	ldr	r2, [r1, #4]
   87dfe:	68db      	ldr	r3, [r3, #12]
   87e00:	f854 6f08 	ldr.w	r6, [r4, #8]!
   87e04:	f042 0201 	orr.w	r2, r2, #1
   87e08:	604a      	str	r2, [r1, #4]
   87e0a:	4628      	mov	r0, r5
   87e0c:	60f3      	str	r3, [r6, #12]
   87e0e:	609e      	str	r6, [r3, #8]
   87e10:	f000 f96e 	bl	880f0 <__malloc_unlock>
   87e14:	e6ca      	b.n	87bac <_malloc_r+0x18c>
   87e16:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   87e1a:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
   87e1e:	00c1      	lsls	r1, r0, #3
   87e20:	e620      	b.n	87a64 <_malloc_r+0x44>
   87e22:	099a      	lsrs	r2, r3, #6
   87e24:	f102 0139 	add.w	r1, r2, #57	; 0x39
   87e28:	00c9      	lsls	r1, r1, #3
   87e2a:	3238      	adds	r2, #56	; 0x38
   87e2c:	e7a4      	b.n	87d78 <_malloc_r+0x358>
   87e2e:	42bc      	cmp	r4, r7
   87e30:	d054      	beq.n	87edc <_malloc_r+0x4bc>
   87e32:	68bc      	ldr	r4, [r7, #8]
   87e34:	6862      	ldr	r2, [r4, #4]
   87e36:	f022 0203 	bic.w	r2, r2, #3
   87e3a:	e75e      	b.n	87cfa <_malloc_r+0x2da>
   87e3c:	f859 3908 	ldr.w	r3, [r9], #-8
   87e40:	4599      	cmp	r9, r3
   87e42:	f040 8086 	bne.w	87f52 <_malloc_r+0x532>
   87e46:	f010 0f03 	tst.w	r0, #3
   87e4a:	f100 30ff 	add.w	r0, r0, #4294967295
   87e4e:	d1f5      	bne.n	87e3c <_malloc_r+0x41c>
   87e50:	687b      	ldr	r3, [r7, #4]
   87e52:	ea23 0304 	bic.w	r3, r3, r4
   87e56:	607b      	str	r3, [r7, #4]
   87e58:	0064      	lsls	r4, r4, #1
   87e5a:	429c      	cmp	r4, r3
   87e5c:	f63f aec8 	bhi.w	87bf0 <_malloc_r+0x1d0>
   87e60:	2c00      	cmp	r4, #0
   87e62:	f43f aec5 	beq.w	87bf0 <_malloc_r+0x1d0>
   87e66:	421c      	tst	r4, r3
   87e68:	4640      	mov	r0, r8
   87e6a:	f47f ae4c 	bne.w	87b06 <_malloc_r+0xe6>
   87e6e:	0064      	lsls	r4, r4, #1
   87e70:	421c      	tst	r4, r3
   87e72:	f100 0004 	add.w	r0, r0, #4
   87e76:	d0fa      	beq.n	87e6e <_malloc_r+0x44e>
   87e78:	e645      	b.n	87b06 <_malloc_r+0xe6>
   87e7a:	468c      	mov	ip, r1
   87e7c:	e78c      	b.n	87d98 <_malloc_r+0x378>
   87e7e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   87e82:	d815      	bhi.n	87eb0 <_malloc_r+0x490>
   87e84:	0bf3      	lsrs	r3, r6, #15
   87e86:	f103 0078 	add.w	r0, r3, #120	; 0x78
   87e8a:	f103 0e77 	add.w	lr, r3, #119	; 0x77
   87e8e:	00c1      	lsls	r1, r0, #3
   87e90:	e5e8      	b.n	87a64 <_malloc_r+0x44>
   87e92:	f44f 5180 	mov.w	r1, #4096	; 0x1000
   87e96:	e6ee      	b.n	87c76 <_malloc_r+0x256>
   87e98:	2101      	movs	r1, #1
   87e9a:	687b      	ldr	r3, [r7, #4]
   87e9c:	1092      	asrs	r2, r2, #2
   87e9e:	fa01 f202 	lsl.w	r2, r1, r2
   87ea2:	431a      	orrs	r2, r3
   87ea4:	607a      	str	r2, [r7, #4]
   87ea6:	4663      	mov	r3, ip
   87ea8:	e779      	b.n	87d9e <_malloc_r+0x37e>
   87eaa:	2301      	movs	r3, #1
   87eac:	6053      	str	r3, [r2, #4]
   87eae:	e72a      	b.n	87d06 <_malloc_r+0x2e6>
   87eb0:	f240 5254 	movw	r2, #1364	; 0x554
   87eb4:	4293      	cmp	r3, r2
   87eb6:	d822      	bhi.n	87efe <_malloc_r+0x4de>
   87eb8:	0cb3      	lsrs	r3, r6, #18
   87eba:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   87ebe:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
   87ec2:	00c1      	lsls	r1, r0, #3
   87ec4:	e5ce      	b.n	87a64 <_malloc_r+0x44>
   87ec6:	f103 0b10 	add.w	fp, r3, #16
   87eca:	e6af      	b.n	87c2c <_malloc_r+0x20c>
   87ecc:	2a54      	cmp	r2, #84	; 0x54
   87ece:	d829      	bhi.n	87f24 <_malloc_r+0x504>
   87ed0:	0b1a      	lsrs	r2, r3, #12
   87ed2:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   87ed6:	00c9      	lsls	r1, r1, #3
   87ed8:	326e      	adds	r2, #110	; 0x6e
   87eda:	e74d      	b.n	87d78 <_malloc_r+0x358>
   87edc:	4b20      	ldr	r3, [pc, #128]	; (87f60 <_malloc_r+0x540>)
   87ede:	6819      	ldr	r1, [r3, #0]
   87ee0:	4459      	add	r1, fp
   87ee2:	6019      	str	r1, [r3, #0]
   87ee4:	e6b3      	b.n	87c4e <_malloc_r+0x22e>
   87ee6:	f3ca 000b 	ubfx	r0, sl, #0, #12
   87eea:	2800      	cmp	r0, #0
   87eec:	f47f aeaf 	bne.w	87c4e <_malloc_r+0x22e>
   87ef0:	eb08 030b 	add.w	r3, r8, fp
   87ef4:	68ba      	ldr	r2, [r7, #8]
   87ef6:	f043 0301 	orr.w	r3, r3, #1
   87efa:	6053      	str	r3, [r2, #4]
   87efc:	e6ef      	b.n	87cde <_malloc_r+0x2be>
   87efe:	207f      	movs	r0, #127	; 0x7f
   87f00:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   87f04:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
   87f08:	e5ac      	b.n	87a64 <_malloc_r+0x44>
   87f0a:	f104 0108 	add.w	r1, r4, #8
   87f0e:	4628      	mov	r0, r5
   87f10:	9300      	str	r3, [sp, #0]
   87f12:	f7ff fa59 	bl	873c8 <_free_r>
   87f16:	9b00      	ldr	r3, [sp, #0]
   87f18:	6819      	ldr	r1, [r3, #0]
   87f1a:	e6e0      	b.n	87cde <_malloc_r+0x2be>
   87f1c:	2001      	movs	r0, #1
   87f1e:	f04f 0900 	mov.w	r9, #0
   87f22:	e6bd      	b.n	87ca0 <_malloc_r+0x280>
   87f24:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   87f28:	d805      	bhi.n	87f36 <_malloc_r+0x516>
   87f2a:	0bda      	lsrs	r2, r3, #15
   87f2c:	f102 0178 	add.w	r1, r2, #120	; 0x78
   87f30:	00c9      	lsls	r1, r1, #3
   87f32:	3277      	adds	r2, #119	; 0x77
   87f34:	e720      	b.n	87d78 <_malloc_r+0x358>
   87f36:	f240 5154 	movw	r1, #1364	; 0x554
   87f3a:	428a      	cmp	r2, r1
   87f3c:	d805      	bhi.n	87f4a <_malloc_r+0x52a>
   87f3e:	0c9a      	lsrs	r2, r3, #18
   87f40:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   87f44:	00c9      	lsls	r1, r1, #3
   87f46:	327c      	adds	r2, #124	; 0x7c
   87f48:	e716      	b.n	87d78 <_malloc_r+0x358>
   87f4a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   87f4e:	227e      	movs	r2, #126	; 0x7e
   87f50:	e712      	b.n	87d78 <_malloc_r+0x358>
   87f52:	687b      	ldr	r3, [r7, #4]
   87f54:	e780      	b.n	87e58 <_malloc_r+0x438>
   87f56:	08f0      	lsrs	r0, r6, #3
   87f58:	f106 0308 	add.w	r3, r6, #8
   87f5c:	e60e      	b.n	87b7c <_malloc_r+0x15c>
   87f5e:	bf00      	nop
   87f60:	20003550 	.word	0x20003550

00087f64 <__ascii_mbtowc>:
   87f64:	b082      	sub	sp, #8
   87f66:	b149      	cbz	r1, 87f7c <__ascii_mbtowc+0x18>
   87f68:	b15a      	cbz	r2, 87f82 <__ascii_mbtowc+0x1e>
   87f6a:	b16b      	cbz	r3, 87f88 <__ascii_mbtowc+0x24>
   87f6c:	7813      	ldrb	r3, [r2, #0]
   87f6e:	600b      	str	r3, [r1, #0]
   87f70:	7812      	ldrb	r2, [r2, #0]
   87f72:	1c10      	adds	r0, r2, #0
   87f74:	bf18      	it	ne
   87f76:	2001      	movne	r0, #1
   87f78:	b002      	add	sp, #8
   87f7a:	4770      	bx	lr
   87f7c:	a901      	add	r1, sp, #4
   87f7e:	2a00      	cmp	r2, #0
   87f80:	d1f3      	bne.n	87f6a <__ascii_mbtowc+0x6>
   87f82:	4610      	mov	r0, r2
   87f84:	b002      	add	sp, #8
   87f86:	4770      	bx	lr
   87f88:	f06f 0001 	mvn.w	r0, #1
   87f8c:	e7f4      	b.n	87f78 <__ascii_mbtowc+0x14>
   87f8e:	bf00      	nop

00087f90 <memchr>:
   87f90:	0783      	lsls	r3, r0, #30
   87f92:	b470      	push	{r4, r5, r6}
   87f94:	b2cd      	uxtb	r5, r1
   87f96:	d03d      	beq.n	88014 <memchr+0x84>
   87f98:	1e54      	subs	r4, r2, #1
   87f9a:	b30a      	cbz	r2, 87fe0 <memchr+0x50>
   87f9c:	7803      	ldrb	r3, [r0, #0]
   87f9e:	42ab      	cmp	r3, r5
   87fa0:	d01f      	beq.n	87fe2 <memchr+0x52>
   87fa2:	1c43      	adds	r3, r0, #1
   87fa4:	e005      	b.n	87fb2 <memchr+0x22>
   87fa6:	f114 34ff 	adds.w	r4, r4, #4294967295
   87faa:	d319      	bcc.n	87fe0 <memchr+0x50>
   87fac:	7802      	ldrb	r2, [r0, #0]
   87fae:	42aa      	cmp	r2, r5
   87fb0:	d017      	beq.n	87fe2 <memchr+0x52>
   87fb2:	f013 0f03 	tst.w	r3, #3
   87fb6:	4618      	mov	r0, r3
   87fb8:	f103 0301 	add.w	r3, r3, #1
   87fbc:	d1f3      	bne.n	87fa6 <memchr+0x16>
   87fbe:	2c03      	cmp	r4, #3
   87fc0:	d811      	bhi.n	87fe6 <memchr+0x56>
   87fc2:	b34c      	cbz	r4, 88018 <memchr+0x88>
   87fc4:	7803      	ldrb	r3, [r0, #0]
   87fc6:	42ab      	cmp	r3, r5
   87fc8:	d00b      	beq.n	87fe2 <memchr+0x52>
   87fca:	4404      	add	r4, r0
   87fcc:	1c43      	adds	r3, r0, #1
   87fce:	e002      	b.n	87fd6 <memchr+0x46>
   87fd0:	7802      	ldrb	r2, [r0, #0]
   87fd2:	42aa      	cmp	r2, r5
   87fd4:	d005      	beq.n	87fe2 <memchr+0x52>
   87fd6:	429c      	cmp	r4, r3
   87fd8:	4618      	mov	r0, r3
   87fda:	f103 0301 	add.w	r3, r3, #1
   87fde:	d1f7      	bne.n	87fd0 <memchr+0x40>
   87fe0:	2000      	movs	r0, #0
   87fe2:	bc70      	pop	{r4, r5, r6}
   87fe4:	4770      	bx	lr
   87fe6:	0209      	lsls	r1, r1, #8
   87fe8:	b289      	uxth	r1, r1
   87fea:	4329      	orrs	r1, r5
   87fec:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
   87ff0:	6803      	ldr	r3, [r0, #0]
   87ff2:	4606      	mov	r6, r0
   87ff4:	404b      	eors	r3, r1
   87ff6:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
   87ffa:	ea22 0303 	bic.w	r3, r2, r3
   87ffe:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   88002:	f100 0004 	add.w	r0, r0, #4
   88006:	d103      	bne.n	88010 <memchr+0x80>
   88008:	3c04      	subs	r4, #4
   8800a:	2c03      	cmp	r4, #3
   8800c:	d8f0      	bhi.n	87ff0 <memchr+0x60>
   8800e:	e7d8      	b.n	87fc2 <memchr+0x32>
   88010:	4630      	mov	r0, r6
   88012:	e7d7      	b.n	87fc4 <memchr+0x34>
   88014:	4614      	mov	r4, r2
   88016:	e7d2      	b.n	87fbe <memchr+0x2e>
   88018:	4620      	mov	r0, r4
   8801a:	e7e2      	b.n	87fe2 <memchr+0x52>

0008801c <memmove>:
   8801c:	4288      	cmp	r0, r1
   8801e:	b5f0      	push	{r4, r5, r6, r7, lr}
   88020:	d90d      	bls.n	8803e <memmove+0x22>
   88022:	188b      	adds	r3, r1, r2
   88024:	4298      	cmp	r0, r3
   88026:	d20a      	bcs.n	8803e <memmove+0x22>
   88028:	1884      	adds	r4, r0, r2
   8802a:	2a00      	cmp	r2, #0
   8802c:	d051      	beq.n	880d2 <memmove+0xb6>
   8802e:	4622      	mov	r2, r4
   88030:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   88034:	4299      	cmp	r1, r3
   88036:	f802 4d01 	strb.w	r4, [r2, #-1]!
   8803a:	d1f9      	bne.n	88030 <memmove+0x14>
   8803c:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8803e:	2a0f      	cmp	r2, #15
   88040:	d948      	bls.n	880d4 <memmove+0xb8>
   88042:	ea41 0300 	orr.w	r3, r1, r0
   88046:	079b      	lsls	r3, r3, #30
   88048:	d146      	bne.n	880d8 <memmove+0xbc>
   8804a:	4615      	mov	r5, r2
   8804c:	f100 0410 	add.w	r4, r0, #16
   88050:	f101 0310 	add.w	r3, r1, #16
   88054:	f853 6c10 	ldr.w	r6, [r3, #-16]
   88058:	3d10      	subs	r5, #16
   8805a:	f844 6c10 	str.w	r6, [r4, #-16]
   8805e:	f853 6c0c 	ldr.w	r6, [r3, #-12]
   88062:	2d0f      	cmp	r5, #15
   88064:	f844 6c0c 	str.w	r6, [r4, #-12]
   88068:	f853 6c08 	ldr.w	r6, [r3, #-8]
   8806c:	f104 0410 	add.w	r4, r4, #16
   88070:	f844 6c18 	str.w	r6, [r4, #-24]
   88074:	f853 6c04 	ldr.w	r6, [r3, #-4]
   88078:	f103 0310 	add.w	r3, r3, #16
   8807c:	f844 6c14 	str.w	r6, [r4, #-20]
   88080:	d8e8      	bhi.n	88054 <memmove+0x38>
   88082:	f1a2 0310 	sub.w	r3, r2, #16
   88086:	f023 030f 	bic.w	r3, r3, #15
   8808a:	f002 0e0f 	and.w	lr, r2, #15
   8808e:	3310      	adds	r3, #16
   88090:	f1be 0f03 	cmp.w	lr, #3
   88094:	4419      	add	r1, r3
   88096:	4403      	add	r3, r0
   88098:	d921      	bls.n	880de <memmove+0xc2>
   8809a:	460e      	mov	r6, r1
   8809c:	4674      	mov	r4, lr
   8809e:	1f1d      	subs	r5, r3, #4
   880a0:	f856 7b04 	ldr.w	r7, [r6], #4
   880a4:	3c04      	subs	r4, #4
   880a6:	2c03      	cmp	r4, #3
   880a8:	f845 7f04 	str.w	r7, [r5, #4]!
   880ac:	d8f8      	bhi.n	880a0 <memmove+0x84>
   880ae:	f1ae 0404 	sub.w	r4, lr, #4
   880b2:	f024 0403 	bic.w	r4, r4, #3
   880b6:	3404      	adds	r4, #4
   880b8:	4421      	add	r1, r4
   880ba:	4423      	add	r3, r4
   880bc:	f002 0203 	and.w	r2, r2, #3
   880c0:	b162      	cbz	r2, 880dc <memmove+0xc0>
   880c2:	3b01      	subs	r3, #1
   880c4:	440a      	add	r2, r1
   880c6:	f811 4b01 	ldrb.w	r4, [r1], #1
   880ca:	428a      	cmp	r2, r1
   880cc:	f803 4f01 	strb.w	r4, [r3, #1]!
   880d0:	d1f9      	bne.n	880c6 <memmove+0xaa>
   880d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
   880d4:	4603      	mov	r3, r0
   880d6:	e7f3      	b.n	880c0 <memmove+0xa4>
   880d8:	4603      	mov	r3, r0
   880da:	e7f2      	b.n	880c2 <memmove+0xa6>
   880dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   880de:	4672      	mov	r2, lr
   880e0:	e7ee      	b.n	880c0 <memmove+0xa4>
   880e2:	bf00      	nop

000880e4 <__malloc_lock>:
   880e4:	4801      	ldr	r0, [pc, #4]	; (880ec <__malloc_lock+0x8>)
   880e6:	f7ff bc17 	b.w	87918 <__retarget_lock_acquire_recursive>
   880ea:	bf00      	nop
   880ec:	200035c8 	.word	0x200035c8

000880f0 <__malloc_unlock>:
   880f0:	4801      	ldr	r0, [pc, #4]	; (880f8 <__malloc_unlock+0x8>)
   880f2:	f7ff bc13 	b.w	8791c <__retarget_lock_release_recursive>
   880f6:	bf00      	nop
   880f8:	200035c8 	.word	0x200035c8

000880fc <_Balloc>:
   880fc:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   880fe:	b570      	push	{r4, r5, r6, lr}
   88100:	4605      	mov	r5, r0
   88102:	460c      	mov	r4, r1
   88104:	b14b      	cbz	r3, 8811a <_Balloc+0x1e>
   88106:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   8810a:	b180      	cbz	r0, 8812e <_Balloc+0x32>
   8810c:	6802      	ldr	r2, [r0, #0]
   8810e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   88112:	2300      	movs	r3, #0
   88114:	6103      	str	r3, [r0, #16]
   88116:	60c3      	str	r3, [r0, #12]
   88118:	bd70      	pop	{r4, r5, r6, pc}
   8811a:	2221      	movs	r2, #33	; 0x21
   8811c:	2104      	movs	r1, #4
   8811e:	f000 fea7 	bl	88e70 <_calloc_r>
   88122:	64e8      	str	r0, [r5, #76]	; 0x4c
   88124:	4603      	mov	r3, r0
   88126:	2800      	cmp	r0, #0
   88128:	d1ed      	bne.n	88106 <_Balloc+0xa>
   8812a:	2000      	movs	r0, #0
   8812c:	bd70      	pop	{r4, r5, r6, pc}
   8812e:	2101      	movs	r1, #1
   88130:	fa01 f604 	lsl.w	r6, r1, r4
   88134:	1d72      	adds	r2, r6, #5
   88136:	4628      	mov	r0, r5
   88138:	0092      	lsls	r2, r2, #2
   8813a:	f000 fe99 	bl	88e70 <_calloc_r>
   8813e:	2800      	cmp	r0, #0
   88140:	d0f3      	beq.n	8812a <_Balloc+0x2e>
   88142:	6044      	str	r4, [r0, #4]
   88144:	6086      	str	r6, [r0, #8]
   88146:	e7e4      	b.n	88112 <_Balloc+0x16>

00088148 <_Bfree>:
   88148:	b131      	cbz	r1, 88158 <_Bfree+0x10>
   8814a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8814c:	684a      	ldr	r2, [r1, #4]
   8814e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   88152:	6008      	str	r0, [r1, #0]
   88154:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   88158:	4770      	bx	lr
   8815a:	bf00      	nop

0008815c <__multadd>:
   8815c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8815e:	460c      	mov	r4, r1
   88160:	4605      	mov	r5, r0
   88162:	f04f 0e00 	mov.w	lr, #0
   88166:	690e      	ldr	r6, [r1, #16]
   88168:	b083      	sub	sp, #12
   8816a:	f101 0714 	add.w	r7, r1, #20
   8816e:	6838      	ldr	r0, [r7, #0]
   88170:	f10e 0e01 	add.w	lr, lr, #1
   88174:	b281      	uxth	r1, r0
   88176:	fb02 3301 	mla	r3, r2, r1, r3
   8817a:	0c01      	lsrs	r1, r0, #16
   8817c:	0c18      	lsrs	r0, r3, #16
   8817e:	fb02 0101 	mla	r1, r2, r1, r0
   88182:	b29b      	uxth	r3, r3
   88184:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   88188:	4576      	cmp	r6, lr
   8818a:	f847 3b04 	str.w	r3, [r7], #4
   8818e:	ea4f 4311 	mov.w	r3, r1, lsr #16
   88192:	dcec      	bgt.n	8816e <__multadd+0x12>
   88194:	b13b      	cbz	r3, 881a6 <__multadd+0x4a>
   88196:	68a2      	ldr	r2, [r4, #8]
   88198:	4296      	cmp	r6, r2
   8819a:	da07      	bge.n	881ac <__multadd+0x50>
   8819c:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   881a0:	3601      	adds	r6, #1
   881a2:	6153      	str	r3, [r2, #20]
   881a4:	6126      	str	r6, [r4, #16]
   881a6:	4620      	mov	r0, r4
   881a8:	b003      	add	sp, #12
   881aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
   881ac:	6861      	ldr	r1, [r4, #4]
   881ae:	4628      	mov	r0, r5
   881b0:	3101      	adds	r1, #1
   881b2:	9301      	str	r3, [sp, #4]
   881b4:	f7ff ffa2 	bl	880fc <_Balloc>
   881b8:	4607      	mov	r7, r0
   881ba:	6922      	ldr	r2, [r4, #16]
   881bc:	f104 010c 	add.w	r1, r4, #12
   881c0:	3202      	adds	r2, #2
   881c2:	0092      	lsls	r2, r2, #2
   881c4:	300c      	adds	r0, #12
   881c6:	f7fb fbb7 	bl	83938 <memcpy>
   881ca:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   881cc:	6861      	ldr	r1, [r4, #4]
   881ce:	9b01      	ldr	r3, [sp, #4]
   881d0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   881d4:	6020      	str	r0, [r4, #0]
   881d6:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   881da:	463c      	mov	r4, r7
   881dc:	e7de      	b.n	8819c <__multadd+0x40>
   881de:	bf00      	nop

000881e0 <__hi0bits>:
   881e0:	0c02      	lsrs	r2, r0, #16
   881e2:	0412      	lsls	r2, r2, #16
   881e4:	4603      	mov	r3, r0
   881e6:	b9b2      	cbnz	r2, 88216 <__hi0bits+0x36>
   881e8:	0403      	lsls	r3, r0, #16
   881ea:	2010      	movs	r0, #16
   881ec:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   881f0:	bf04      	itt	eq
   881f2:	021b      	lsleq	r3, r3, #8
   881f4:	3008      	addeq	r0, #8
   881f6:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   881fa:	bf04      	itt	eq
   881fc:	011b      	lsleq	r3, r3, #4
   881fe:	3004      	addeq	r0, #4
   88200:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   88204:	bf04      	itt	eq
   88206:	009b      	lsleq	r3, r3, #2
   88208:	3002      	addeq	r0, #2
   8820a:	2b00      	cmp	r3, #0
   8820c:	db02      	blt.n	88214 <__hi0bits+0x34>
   8820e:	005b      	lsls	r3, r3, #1
   88210:	d403      	bmi.n	8821a <__hi0bits+0x3a>
   88212:	2020      	movs	r0, #32
   88214:	4770      	bx	lr
   88216:	2000      	movs	r0, #0
   88218:	e7e8      	b.n	881ec <__hi0bits+0xc>
   8821a:	3001      	adds	r0, #1
   8821c:	4770      	bx	lr
   8821e:	bf00      	nop

00088220 <__lo0bits>:
   88220:	6803      	ldr	r3, [r0, #0]
   88222:	4601      	mov	r1, r0
   88224:	f013 0207 	ands.w	r2, r3, #7
   88228:	d007      	beq.n	8823a <__lo0bits+0x1a>
   8822a:	07da      	lsls	r2, r3, #31
   8822c:	d421      	bmi.n	88272 <__lo0bits+0x52>
   8822e:	0798      	lsls	r0, r3, #30
   88230:	d421      	bmi.n	88276 <__lo0bits+0x56>
   88232:	089b      	lsrs	r3, r3, #2
   88234:	600b      	str	r3, [r1, #0]
   88236:	2002      	movs	r0, #2
   88238:	4770      	bx	lr
   8823a:	b298      	uxth	r0, r3
   8823c:	b198      	cbz	r0, 88266 <__lo0bits+0x46>
   8823e:	4610      	mov	r0, r2
   88240:	f013 0fff 	tst.w	r3, #255	; 0xff
   88244:	bf04      	itt	eq
   88246:	0a1b      	lsreq	r3, r3, #8
   88248:	3008      	addeq	r0, #8
   8824a:	071a      	lsls	r2, r3, #28
   8824c:	bf04      	itt	eq
   8824e:	091b      	lsreq	r3, r3, #4
   88250:	3004      	addeq	r0, #4
   88252:	079a      	lsls	r2, r3, #30
   88254:	bf04      	itt	eq
   88256:	089b      	lsreq	r3, r3, #2
   88258:	3002      	addeq	r0, #2
   8825a:	07da      	lsls	r2, r3, #31
   8825c:	d407      	bmi.n	8826e <__lo0bits+0x4e>
   8825e:	085b      	lsrs	r3, r3, #1
   88260:	d104      	bne.n	8826c <__lo0bits+0x4c>
   88262:	2020      	movs	r0, #32
   88264:	4770      	bx	lr
   88266:	0c1b      	lsrs	r3, r3, #16
   88268:	2010      	movs	r0, #16
   8826a:	e7e9      	b.n	88240 <__lo0bits+0x20>
   8826c:	3001      	adds	r0, #1
   8826e:	600b      	str	r3, [r1, #0]
   88270:	4770      	bx	lr
   88272:	2000      	movs	r0, #0
   88274:	4770      	bx	lr
   88276:	085b      	lsrs	r3, r3, #1
   88278:	600b      	str	r3, [r1, #0]
   8827a:	2001      	movs	r0, #1
   8827c:	4770      	bx	lr
   8827e:	bf00      	nop

00088280 <__i2b>:
   88280:	b510      	push	{r4, lr}
   88282:	460c      	mov	r4, r1
   88284:	2101      	movs	r1, #1
   88286:	f7ff ff39 	bl	880fc <_Balloc>
   8828a:	2201      	movs	r2, #1
   8828c:	6144      	str	r4, [r0, #20]
   8828e:	6102      	str	r2, [r0, #16]
   88290:	bd10      	pop	{r4, pc}
   88292:	bf00      	nop

00088294 <__multiply>:
   88294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88298:	690c      	ldr	r4, [r1, #16]
   8829a:	6915      	ldr	r5, [r2, #16]
   8829c:	b083      	sub	sp, #12
   8829e:	42ac      	cmp	r4, r5
   882a0:	468b      	mov	fp, r1
   882a2:	4616      	mov	r6, r2
   882a4:	da04      	bge.n	882b0 <__multiply+0x1c>
   882a6:	4622      	mov	r2, r4
   882a8:	46b3      	mov	fp, r6
   882aa:	462c      	mov	r4, r5
   882ac:	460e      	mov	r6, r1
   882ae:	4615      	mov	r5, r2
   882b0:	f8db 3008 	ldr.w	r3, [fp, #8]
   882b4:	eb04 0805 	add.w	r8, r4, r5
   882b8:	f8db 1004 	ldr.w	r1, [fp, #4]
   882bc:	4598      	cmp	r8, r3
   882be:	bfc8      	it	gt
   882c0:	3101      	addgt	r1, #1
   882c2:	f7ff ff1b 	bl	880fc <_Balloc>
   882c6:	f100 0914 	add.w	r9, r0, #20
   882ca:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
   882ce:	45d1      	cmp	r9, sl
   882d0:	9000      	str	r0, [sp, #0]
   882d2:	d205      	bcs.n	882e0 <__multiply+0x4c>
   882d4:	464b      	mov	r3, r9
   882d6:	2100      	movs	r1, #0
   882d8:	f843 1b04 	str.w	r1, [r3], #4
   882dc:	459a      	cmp	sl, r3
   882de:	d8fb      	bhi.n	882d8 <__multiply+0x44>
   882e0:	f106 0c14 	add.w	ip, r6, #20
   882e4:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
   882e8:	f10b 0b14 	add.w	fp, fp, #20
   882ec:	459c      	cmp	ip, r3
   882ee:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
   882f2:	d24b      	bcs.n	8838c <__multiply+0xf8>
   882f4:	f8cd a004 	str.w	sl, [sp, #4]
   882f8:	469a      	mov	sl, r3
   882fa:	f8dc 5000 	ldr.w	r5, [ip]
   882fe:	b2af      	uxth	r7, r5
   88300:	b1e7      	cbz	r7, 8833c <__multiply+0xa8>
   88302:	464d      	mov	r5, r9
   88304:	465e      	mov	r6, fp
   88306:	2100      	movs	r1, #0
   88308:	f856 2b04 	ldr.w	r2, [r6], #4
   8830c:	6828      	ldr	r0, [r5, #0]
   8830e:	b293      	uxth	r3, r2
   88310:	b284      	uxth	r4, r0
   88312:	0c12      	lsrs	r2, r2, #16
   88314:	fb07 4303 	mla	r3, r7, r3, r4
   88318:	0c00      	lsrs	r0, r0, #16
   8831a:	fb07 0202 	mla	r2, r7, r2, r0
   8831e:	440b      	add	r3, r1
   88320:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   88324:	b29b      	uxth	r3, r3
   88326:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   8832a:	45b6      	cmp	lr, r6
   8832c:	f845 3b04 	str.w	r3, [r5], #4
   88330:	ea4f 4111 	mov.w	r1, r1, lsr #16
   88334:	d8e8      	bhi.n	88308 <__multiply+0x74>
   88336:	6029      	str	r1, [r5, #0]
   88338:	f8dc 5000 	ldr.w	r5, [ip]
   8833c:	0c2d      	lsrs	r5, r5, #16
   8833e:	d01d      	beq.n	8837c <__multiply+0xe8>
   88340:	f8d9 3000 	ldr.w	r3, [r9]
   88344:	4648      	mov	r0, r9
   88346:	461c      	mov	r4, r3
   88348:	4659      	mov	r1, fp
   8834a:	2200      	movs	r2, #0
   8834c:	880e      	ldrh	r6, [r1, #0]
   8834e:	0c24      	lsrs	r4, r4, #16
   88350:	fb05 4406 	mla	r4, r5, r6, r4
   88354:	b29b      	uxth	r3, r3
   88356:	4422      	add	r2, r4
   88358:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8835c:	f840 3b04 	str.w	r3, [r0], #4
   88360:	f851 3b04 	ldr.w	r3, [r1], #4
   88364:	6804      	ldr	r4, [r0, #0]
   88366:	0c1b      	lsrs	r3, r3, #16
   88368:	b2a6      	uxth	r6, r4
   8836a:	fb05 6303 	mla	r3, r5, r3, r6
   8836e:	458e      	cmp	lr, r1
   88370:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   88374:	ea4f 4213 	mov.w	r2, r3, lsr #16
   88378:	d8e8      	bhi.n	8834c <__multiply+0xb8>
   8837a:	6003      	str	r3, [r0, #0]
   8837c:	f10c 0c04 	add.w	ip, ip, #4
   88380:	45e2      	cmp	sl, ip
   88382:	f109 0904 	add.w	r9, r9, #4
   88386:	d8b8      	bhi.n	882fa <__multiply+0x66>
   88388:	f8dd a004 	ldr.w	sl, [sp, #4]
   8838c:	f1b8 0f00 	cmp.w	r8, #0
   88390:	dd0b      	ble.n	883aa <__multiply+0x116>
   88392:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   88396:	f1aa 0a04 	sub.w	sl, sl, #4
   8839a:	b11b      	cbz	r3, 883a4 <__multiply+0x110>
   8839c:	e005      	b.n	883aa <__multiply+0x116>
   8839e:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   883a2:	b913      	cbnz	r3, 883aa <__multiply+0x116>
   883a4:	f1b8 0801 	subs.w	r8, r8, #1
   883a8:	d1f9      	bne.n	8839e <__multiply+0x10a>
   883aa:	9800      	ldr	r0, [sp, #0]
   883ac:	f8c0 8010 	str.w	r8, [r0, #16]
   883b0:	b003      	add	sp, #12
   883b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   883b6:	bf00      	nop

000883b8 <__pow5mult>:
   883b8:	f012 0303 	ands.w	r3, r2, #3
   883bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   883c0:	4614      	mov	r4, r2
   883c2:	4607      	mov	r7, r0
   883c4:	d12e      	bne.n	88424 <__pow5mult+0x6c>
   883c6:	460d      	mov	r5, r1
   883c8:	10a4      	asrs	r4, r4, #2
   883ca:	d01c      	beq.n	88406 <__pow5mult+0x4e>
   883cc:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   883ce:	b396      	cbz	r6, 88436 <__pow5mult+0x7e>
   883d0:	07e3      	lsls	r3, r4, #31
   883d2:	f04f 0800 	mov.w	r8, #0
   883d6:	d406      	bmi.n	883e6 <__pow5mult+0x2e>
   883d8:	1064      	asrs	r4, r4, #1
   883da:	d014      	beq.n	88406 <__pow5mult+0x4e>
   883dc:	6830      	ldr	r0, [r6, #0]
   883de:	b1a8      	cbz	r0, 8840c <__pow5mult+0x54>
   883e0:	4606      	mov	r6, r0
   883e2:	07e3      	lsls	r3, r4, #31
   883e4:	d5f8      	bpl.n	883d8 <__pow5mult+0x20>
   883e6:	4632      	mov	r2, r6
   883e8:	4629      	mov	r1, r5
   883ea:	4638      	mov	r0, r7
   883ec:	f7ff ff52 	bl	88294 <__multiply>
   883f0:	b1b5      	cbz	r5, 88420 <__pow5mult+0x68>
   883f2:	686a      	ldr	r2, [r5, #4]
   883f4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   883f6:	1064      	asrs	r4, r4, #1
   883f8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   883fc:	6029      	str	r1, [r5, #0]
   883fe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   88402:	4605      	mov	r5, r0
   88404:	d1ea      	bne.n	883dc <__pow5mult+0x24>
   88406:	4628      	mov	r0, r5
   88408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8840c:	4632      	mov	r2, r6
   8840e:	4631      	mov	r1, r6
   88410:	4638      	mov	r0, r7
   88412:	f7ff ff3f 	bl	88294 <__multiply>
   88416:	6030      	str	r0, [r6, #0]
   88418:	f8c0 8000 	str.w	r8, [r0]
   8841c:	4606      	mov	r6, r0
   8841e:	e7e0      	b.n	883e2 <__pow5mult+0x2a>
   88420:	4605      	mov	r5, r0
   88422:	e7d9      	b.n	883d8 <__pow5mult+0x20>
   88424:	4a0b      	ldr	r2, [pc, #44]	; (88454 <__pow5mult+0x9c>)
   88426:	3b01      	subs	r3, #1
   88428:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   8842c:	2300      	movs	r3, #0
   8842e:	f7ff fe95 	bl	8815c <__multadd>
   88432:	4605      	mov	r5, r0
   88434:	e7c8      	b.n	883c8 <__pow5mult+0x10>
   88436:	2101      	movs	r1, #1
   88438:	4638      	mov	r0, r7
   8843a:	f7ff fe5f 	bl	880fc <_Balloc>
   8843e:	f240 2171 	movw	r1, #625	; 0x271
   88442:	2201      	movs	r2, #1
   88444:	2300      	movs	r3, #0
   88446:	6141      	str	r1, [r0, #20]
   88448:	6102      	str	r2, [r0, #16]
   8844a:	4606      	mov	r6, r0
   8844c:	64b8      	str	r0, [r7, #72]	; 0x48
   8844e:	6003      	str	r3, [r0, #0]
   88450:	e7be      	b.n	883d0 <__pow5mult+0x18>
   88452:	bf00      	nop
   88454:	00089f10 	.word	0x00089f10

00088458 <__lshift>:
   88458:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   8845c:	690b      	ldr	r3, [r1, #16]
   8845e:	1154      	asrs	r4, r2, #5
   88460:	eb04 0803 	add.w	r8, r4, r3
   88464:	688b      	ldr	r3, [r1, #8]
   88466:	f108 0501 	add.w	r5, r8, #1
   8846a:	429d      	cmp	r5, r3
   8846c:	460e      	mov	r6, r1
   8846e:	4691      	mov	r9, r2
   88470:	4607      	mov	r7, r0
   88472:	6849      	ldr	r1, [r1, #4]
   88474:	dd04      	ble.n	88480 <__lshift+0x28>
   88476:	005b      	lsls	r3, r3, #1
   88478:	429d      	cmp	r5, r3
   8847a:	f101 0101 	add.w	r1, r1, #1
   8847e:	dcfa      	bgt.n	88476 <__lshift+0x1e>
   88480:	4638      	mov	r0, r7
   88482:	f7ff fe3b 	bl	880fc <_Balloc>
   88486:	2c00      	cmp	r4, #0
   88488:	f100 0314 	add.w	r3, r0, #20
   8848c:	dd06      	ble.n	8849c <__lshift+0x44>
   8848e:	2100      	movs	r1, #0
   88490:	eb03 0284 	add.w	r2, r3, r4, lsl #2
   88494:	f843 1b04 	str.w	r1, [r3], #4
   88498:	429a      	cmp	r2, r3
   8849a:	d1fb      	bne.n	88494 <__lshift+0x3c>
   8849c:	6934      	ldr	r4, [r6, #16]
   8849e:	f106 0114 	add.w	r1, r6, #20
   884a2:	f019 091f 	ands.w	r9, r9, #31
   884a6:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
   884aa:	d01d      	beq.n	884e8 <__lshift+0x90>
   884ac:	2200      	movs	r2, #0
   884ae:	f1c9 0c20 	rsb	ip, r9, #32
   884b2:	680c      	ldr	r4, [r1, #0]
   884b4:	fa04 f409 	lsl.w	r4, r4, r9
   884b8:	4314      	orrs	r4, r2
   884ba:	f843 4b04 	str.w	r4, [r3], #4
   884be:	f851 2b04 	ldr.w	r2, [r1], #4
   884c2:	458e      	cmp	lr, r1
   884c4:	fa22 f20c 	lsr.w	r2, r2, ip
   884c8:	d8f3      	bhi.n	884b2 <__lshift+0x5a>
   884ca:	601a      	str	r2, [r3, #0]
   884cc:	b10a      	cbz	r2, 884d2 <__lshift+0x7a>
   884ce:	f108 0502 	add.w	r5, r8, #2
   884d2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   884d4:	6872      	ldr	r2, [r6, #4]
   884d6:	3d01      	subs	r5, #1
   884d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   884dc:	6105      	str	r5, [r0, #16]
   884de:	6031      	str	r1, [r6, #0]
   884e0:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   884e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   884e8:	3b04      	subs	r3, #4
   884ea:	f851 2b04 	ldr.w	r2, [r1], #4
   884ee:	458e      	cmp	lr, r1
   884f0:	f843 2f04 	str.w	r2, [r3, #4]!
   884f4:	d8f9      	bhi.n	884ea <__lshift+0x92>
   884f6:	e7ec      	b.n	884d2 <__lshift+0x7a>

000884f8 <__mcmp>:
   884f8:	b430      	push	{r4, r5}
   884fa:	690b      	ldr	r3, [r1, #16]
   884fc:	4605      	mov	r5, r0
   884fe:	6900      	ldr	r0, [r0, #16]
   88500:	1ac0      	subs	r0, r0, r3
   88502:	d10f      	bne.n	88524 <__mcmp+0x2c>
   88504:	009b      	lsls	r3, r3, #2
   88506:	3514      	adds	r5, #20
   88508:	3114      	adds	r1, #20
   8850a:	4419      	add	r1, r3
   8850c:	442b      	add	r3, r5
   8850e:	e001      	b.n	88514 <__mcmp+0x1c>
   88510:	429d      	cmp	r5, r3
   88512:	d207      	bcs.n	88524 <__mcmp+0x2c>
   88514:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   88518:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   8851c:	4294      	cmp	r4, r2
   8851e:	d0f7      	beq.n	88510 <__mcmp+0x18>
   88520:	d302      	bcc.n	88528 <__mcmp+0x30>
   88522:	2001      	movs	r0, #1
   88524:	bc30      	pop	{r4, r5}
   88526:	4770      	bx	lr
   88528:	f04f 30ff 	mov.w	r0, #4294967295
   8852c:	e7fa      	b.n	88524 <__mcmp+0x2c>
   8852e:	bf00      	nop

00088530 <__mdiff>:
   88530:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88534:	690c      	ldr	r4, [r1, #16]
   88536:	4689      	mov	r9, r1
   88538:	6911      	ldr	r1, [r2, #16]
   8853a:	4692      	mov	sl, r2
   8853c:	1a64      	subs	r4, r4, r1
   8853e:	2c00      	cmp	r4, #0
   88540:	d117      	bne.n	88572 <__mdiff+0x42>
   88542:	0089      	lsls	r1, r1, #2
   88544:	f109 0714 	add.w	r7, r9, #20
   88548:	f102 0614 	add.w	r6, r2, #20
   8854c:	187b      	adds	r3, r7, r1
   8854e:	4431      	add	r1, r6
   88550:	e001      	b.n	88556 <__mdiff+0x26>
   88552:	429f      	cmp	r7, r3
   88554:	d265      	bcs.n	88622 <__mdiff+0xf2>
   88556:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   8855a:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   8855e:	4295      	cmp	r5, r2
   88560:	d0f7      	beq.n	88552 <__mdiff+0x22>
   88562:	d267      	bcs.n	88634 <__mdiff+0x104>
   88564:	464b      	mov	r3, r9
   88566:	46bb      	mov	fp, r7
   88568:	46d1      	mov	r9, sl
   8856a:	4637      	mov	r7, r6
   8856c:	469a      	mov	sl, r3
   8856e:	2401      	movs	r4, #1
   88570:	e005      	b.n	8857e <__mdiff+0x4e>
   88572:	db61      	blt.n	88638 <__mdiff+0x108>
   88574:	2400      	movs	r4, #0
   88576:	f109 0714 	add.w	r7, r9, #20
   8857a:	f10a 0b14 	add.w	fp, sl, #20
   8857e:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88582:	f7ff fdbb 	bl	880fc <_Balloc>
   88586:	465d      	mov	r5, fp
   88588:	f04f 0800 	mov.w	r8, #0
   8858c:	f8d9 e010 	ldr.w	lr, [r9, #16]
   88590:	f8da 3010 	ldr.w	r3, [sl, #16]
   88594:	463e      	mov	r6, r7
   88596:	60c4      	str	r4, [r0, #12]
   88598:	eb0b 0c83 	add.w	ip, fp, r3, lsl #2
   8859c:	eb07 078e 	add.w	r7, r7, lr, lsl #2
   885a0:	f100 0414 	add.w	r4, r0, #20
   885a4:	f856 9b04 	ldr.w	r9, [r6], #4
   885a8:	f855 2b04 	ldr.w	r2, [r5], #4
   885ac:	fa1f f389 	uxth.w	r3, r9
   885b0:	4443      	add	r3, r8
   885b2:	fa1f f882 	uxth.w	r8, r2
   885b6:	0c12      	lsrs	r2, r2, #16
   885b8:	eba3 0308 	sub.w	r3, r3, r8
   885bc:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   885c0:	eb02 4223 	add.w	r2, r2, r3, asr #16
   885c4:	b29b      	uxth	r3, r3
   885c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   885ca:	45ac      	cmp	ip, r5
   885cc:	f844 3b04 	str.w	r3, [r4], #4
   885d0:	ea4f 4822 	mov.w	r8, r2, asr #16
   885d4:	d8e6      	bhi.n	885a4 <__mdiff+0x74>
   885d6:	42b7      	cmp	r7, r6
   885d8:	d917      	bls.n	8860a <__mdiff+0xda>
   885da:	46a4      	mov	ip, r4
   885dc:	4635      	mov	r5, r6
   885de:	f855 3b04 	ldr.w	r3, [r5], #4
   885e2:	b299      	uxth	r1, r3
   885e4:	4441      	add	r1, r8
   885e6:	140a      	asrs	r2, r1, #16
   885e8:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   885ec:	b289      	uxth	r1, r1
   885ee:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   885f2:	42af      	cmp	r7, r5
   885f4:	f84c 3b04 	str.w	r3, [ip], #4
   885f8:	ea4f 4822 	mov.w	r8, r2, asr #16
   885fc:	d8ef      	bhi.n	885de <__mdiff+0xae>
   885fe:	43f6      	mvns	r6, r6
   88600:	4437      	add	r7, r6
   88602:	f027 0703 	bic.w	r7, r7, #3
   88606:	3704      	adds	r7, #4
   88608:	443c      	add	r4, r7
   8860a:	3c04      	subs	r4, #4
   8860c:	b92b      	cbnz	r3, 8861a <__mdiff+0xea>
   8860e:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88612:	f10e 3eff 	add.w	lr, lr, #4294967295
   88616:	2b00      	cmp	r3, #0
   88618:	d0f9      	beq.n	8860e <__mdiff+0xde>
   8861a:	f8c0 e010 	str.w	lr, [r0, #16]
   8861e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88622:	2100      	movs	r1, #0
   88624:	f7ff fd6a 	bl	880fc <_Balloc>
   88628:	2201      	movs	r2, #1
   8862a:	2300      	movs	r3, #0
   8862c:	6102      	str	r2, [r0, #16]
   8862e:	6143      	str	r3, [r0, #20]
   88630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88634:	46b3      	mov	fp, r6
   88636:	e7a2      	b.n	8857e <__mdiff+0x4e>
   88638:	464b      	mov	r3, r9
   8863a:	f109 0b14 	add.w	fp, r9, #20
   8863e:	f102 0714 	add.w	r7, r2, #20
   88642:	4691      	mov	r9, r2
   88644:	2401      	movs	r4, #1
   88646:	469a      	mov	sl, r3
   88648:	e799      	b.n	8857e <__mdiff+0x4e>
   8864a:	bf00      	nop

0008864c <__d2b>:
   8864c:	b5f0      	push	{r4, r5, r6, r7, lr}
   8864e:	2101      	movs	r1, #1
   88650:	b083      	sub	sp, #12
   88652:	461c      	mov	r4, r3
   88654:	f3c3 550a 	ubfx	r5, r3, #20, #11
   88658:	4616      	mov	r6, r2
   8865a:	f7ff fd4f 	bl	880fc <_Balloc>
   8865e:	f3c4 0413 	ubfx	r4, r4, #0, #20
   88662:	4607      	mov	r7, r0
   88664:	b10d      	cbz	r5, 8866a <__d2b+0x1e>
   88666:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
   8866a:	9401      	str	r4, [sp, #4]
   8866c:	b306      	cbz	r6, 886b0 <__d2b+0x64>
   8866e:	a802      	add	r0, sp, #8
   88670:	f840 6d08 	str.w	r6, [r0, #-8]!
   88674:	f7ff fdd4 	bl	88220 <__lo0bits>
   88678:	2800      	cmp	r0, #0
   8867a:	d130      	bne.n	886de <__d2b+0x92>
   8867c:	e89d 000c 	ldmia.w	sp, {r2, r3}
   88680:	617a      	str	r2, [r7, #20]
   88682:	2b00      	cmp	r3, #0
   88684:	bf0c      	ite	eq
   88686:	2101      	moveq	r1, #1
   88688:	2102      	movne	r1, #2
   8868a:	61bb      	str	r3, [r7, #24]
   8868c:	6139      	str	r1, [r7, #16]
   8868e:	b9d5      	cbnz	r5, 886c6 <__d2b+0x7a>
   88690:	9a08      	ldr	r2, [sp, #32]
   88692:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   88696:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   8869a:	6010      	str	r0, [r2, #0]
   8869c:	6918      	ldr	r0, [r3, #16]
   8869e:	f7ff fd9f 	bl	881e0 <__hi0bits>
   886a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   886a4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   886a8:	6018      	str	r0, [r3, #0]
   886aa:	4638      	mov	r0, r7
   886ac:	b003      	add	sp, #12
   886ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
   886b0:	a801      	add	r0, sp, #4
   886b2:	f7ff fdb5 	bl	88220 <__lo0bits>
   886b6:	2201      	movs	r2, #1
   886b8:	9b01      	ldr	r3, [sp, #4]
   886ba:	4611      	mov	r1, r2
   886bc:	3020      	adds	r0, #32
   886be:	613a      	str	r2, [r7, #16]
   886c0:	617b      	str	r3, [r7, #20]
   886c2:	2d00      	cmp	r5, #0
   886c4:	d0e4      	beq.n	88690 <__d2b+0x44>
   886c6:	f2a5 4333 	subw	r3, r5, #1075	; 0x433
   886ca:	9a08      	ldr	r2, [sp, #32]
   886cc:	4403      	add	r3, r0
   886ce:	6013      	str	r3, [r2, #0]
   886d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   886d2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   886d6:	6018      	str	r0, [r3, #0]
   886d8:	4638      	mov	r0, r7
   886da:	b003      	add	sp, #12
   886dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
   886de:	9b01      	ldr	r3, [sp, #4]
   886e0:	f1c0 0220 	rsb	r2, r0, #32
   886e4:	9900      	ldr	r1, [sp, #0]
   886e6:	fa03 f202 	lsl.w	r2, r3, r2
   886ea:	430a      	orrs	r2, r1
   886ec:	40c3      	lsrs	r3, r0
   886ee:	9301      	str	r3, [sp, #4]
   886f0:	617a      	str	r2, [r7, #20]
   886f2:	e7c6      	b.n	88682 <__d2b+0x36>

000886f4 <_realloc_r>:
   886f4:	2900      	cmp	r1, #0
   886f6:	f000 8094 	beq.w	88822 <_realloc_r+0x12e>
   886fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   886fe:	460c      	mov	r4, r1
   88700:	4615      	mov	r5, r2
   88702:	b083      	sub	sp, #12
   88704:	4680      	mov	r8, r0
   88706:	f105 060b 	add.w	r6, r5, #11
   8870a:	f7ff fceb 	bl	880e4 <__malloc_lock>
   8870e:	f854 ec04 	ldr.w	lr, [r4, #-4]
   88712:	2e16      	cmp	r6, #22
   88714:	f02e 0703 	bic.w	r7, lr, #3
   88718:	f1a4 0908 	sub.w	r9, r4, #8
   8871c:	d83c      	bhi.n	88798 <_realloc_r+0xa4>
   8871e:	2210      	movs	r2, #16
   88720:	4616      	mov	r6, r2
   88722:	42b5      	cmp	r5, r6
   88724:	d83d      	bhi.n	887a2 <_realloc_r+0xae>
   88726:	4297      	cmp	r7, r2
   88728:	da43      	bge.n	887b2 <_realloc_r+0xbe>
   8872a:	4bc6      	ldr	r3, [pc, #792]	; (88a44 <_realloc_r+0x350>)
   8872c:	eb09 0007 	add.w	r0, r9, r7
   88730:	6899      	ldr	r1, [r3, #8]
   88732:	4288      	cmp	r0, r1
   88734:	f000 80c3 	beq.w	888be <_realloc_r+0x1ca>
   88738:	6843      	ldr	r3, [r0, #4]
   8873a:	f023 0101 	bic.w	r1, r3, #1
   8873e:	4401      	add	r1, r0
   88740:	6849      	ldr	r1, [r1, #4]
   88742:	07c9      	lsls	r1, r1, #31
   88744:	d54d      	bpl.n	887e2 <_realloc_r+0xee>
   88746:	f01e 0f01 	tst.w	lr, #1
   8874a:	f000 809b 	beq.w	88884 <_realloc_r+0x190>
   8874e:	4629      	mov	r1, r5
   88750:	4640      	mov	r0, r8
   88752:	f7ff f965 	bl	87a20 <_malloc_r>
   88756:	4605      	mov	r5, r0
   88758:	2800      	cmp	r0, #0
   8875a:	d03b      	beq.n	887d4 <_realloc_r+0xe0>
   8875c:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88760:	f1a0 0208 	sub.w	r2, r0, #8
   88764:	f023 0301 	bic.w	r3, r3, #1
   88768:	444b      	add	r3, r9
   8876a:	429a      	cmp	r2, r3
   8876c:	f000 812b 	beq.w	889c6 <_realloc_r+0x2d2>
   88770:	1f3a      	subs	r2, r7, #4
   88772:	2a24      	cmp	r2, #36	; 0x24
   88774:	f200 8118 	bhi.w	889a8 <_realloc_r+0x2b4>
   88778:	2a13      	cmp	r2, #19
   8877a:	f200 80eb 	bhi.w	88954 <_realloc_r+0x260>
   8877e:	4603      	mov	r3, r0
   88780:	4622      	mov	r2, r4
   88782:	6811      	ldr	r1, [r2, #0]
   88784:	6019      	str	r1, [r3, #0]
   88786:	6851      	ldr	r1, [r2, #4]
   88788:	6059      	str	r1, [r3, #4]
   8878a:	6892      	ldr	r2, [r2, #8]
   8878c:	609a      	str	r2, [r3, #8]
   8878e:	4621      	mov	r1, r4
   88790:	4640      	mov	r0, r8
   88792:	f7fe fe19 	bl	873c8 <_free_r>
   88796:	e01d      	b.n	887d4 <_realloc_r+0xe0>
   88798:	f026 0607 	bic.w	r6, r6, #7
   8879c:	2e00      	cmp	r6, #0
   8879e:	4632      	mov	r2, r6
   887a0:	dabf      	bge.n	88722 <_realloc_r+0x2e>
   887a2:	2500      	movs	r5, #0
   887a4:	230c      	movs	r3, #12
   887a6:	4628      	mov	r0, r5
   887a8:	f8c8 3000 	str.w	r3, [r8]
   887ac:	b003      	add	sp, #12
   887ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   887b2:	4625      	mov	r5, r4
   887b4:	1bbb      	subs	r3, r7, r6
   887b6:	2b0f      	cmp	r3, #15
   887b8:	f8d9 2004 	ldr.w	r2, [r9, #4]
   887bc:	d81d      	bhi.n	887fa <_realloc_r+0x106>
   887be:	f002 0201 	and.w	r2, r2, #1
   887c2:	433a      	orrs	r2, r7
   887c4:	eb09 0107 	add.w	r1, r9, r7
   887c8:	f8c9 2004 	str.w	r2, [r9, #4]
   887cc:	684b      	ldr	r3, [r1, #4]
   887ce:	f043 0301 	orr.w	r3, r3, #1
   887d2:	604b      	str	r3, [r1, #4]
   887d4:	4640      	mov	r0, r8
   887d6:	f7ff fc8b 	bl	880f0 <__malloc_unlock>
   887da:	4628      	mov	r0, r5
   887dc:	b003      	add	sp, #12
   887de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   887e2:	f023 0303 	bic.w	r3, r3, #3
   887e6:	18f9      	adds	r1, r7, r3
   887e8:	4291      	cmp	r1, r2
   887ea:	db1d      	blt.n	88828 <_realloc_r+0x134>
   887ec:	68c3      	ldr	r3, [r0, #12]
   887ee:	6882      	ldr	r2, [r0, #8]
   887f0:	4625      	mov	r5, r4
   887f2:	60d3      	str	r3, [r2, #12]
   887f4:	460f      	mov	r7, r1
   887f6:	609a      	str	r2, [r3, #8]
   887f8:	e7dc      	b.n	887b4 <_realloc_r+0xc0>
   887fa:	f002 0201 	and.w	r2, r2, #1
   887fe:	eb09 0106 	add.w	r1, r9, r6
   88802:	f043 0301 	orr.w	r3, r3, #1
   88806:	4332      	orrs	r2, r6
   88808:	f8c9 2004 	str.w	r2, [r9, #4]
   8880c:	444f      	add	r7, r9
   8880e:	604b      	str	r3, [r1, #4]
   88810:	687b      	ldr	r3, [r7, #4]
   88812:	3108      	adds	r1, #8
   88814:	f043 0301 	orr.w	r3, r3, #1
   88818:	607b      	str	r3, [r7, #4]
   8881a:	4640      	mov	r0, r8
   8881c:	f7fe fdd4 	bl	873c8 <_free_r>
   88820:	e7d8      	b.n	887d4 <_realloc_r+0xe0>
   88822:	4611      	mov	r1, r2
   88824:	f7ff b8fc 	b.w	87a20 <_malloc_r>
   88828:	f01e 0f01 	tst.w	lr, #1
   8882c:	d18f      	bne.n	8874e <_realloc_r+0x5a>
   8882e:	f854 1c08 	ldr.w	r1, [r4, #-8]
   88832:	eba9 0a01 	sub.w	sl, r9, r1
   88836:	f8da 1004 	ldr.w	r1, [sl, #4]
   8883a:	f021 0103 	bic.w	r1, r1, #3
   8883e:	440b      	add	r3, r1
   88840:	443b      	add	r3, r7
   88842:	4293      	cmp	r3, r2
   88844:	db26      	blt.n	88894 <_realloc_r+0x1a0>
   88846:	4655      	mov	r5, sl
   88848:	68c1      	ldr	r1, [r0, #12]
   8884a:	6880      	ldr	r0, [r0, #8]
   8884c:	1f3a      	subs	r2, r7, #4
   8884e:	60c1      	str	r1, [r0, #12]
   88850:	6088      	str	r0, [r1, #8]
   88852:	f855 0f08 	ldr.w	r0, [r5, #8]!
   88856:	f8da 100c 	ldr.w	r1, [sl, #12]
   8885a:	2a24      	cmp	r2, #36	; 0x24
   8885c:	60c1      	str	r1, [r0, #12]
   8885e:	6088      	str	r0, [r1, #8]
   88860:	d826      	bhi.n	888b0 <_realloc_r+0x1bc>
   88862:	2a13      	cmp	r2, #19
   88864:	f240 8081 	bls.w	8896a <_realloc_r+0x276>
   88868:	6821      	ldr	r1, [r4, #0]
   8886a:	2a1b      	cmp	r2, #27
   8886c:	f8ca 1008 	str.w	r1, [sl, #8]
   88870:	6861      	ldr	r1, [r4, #4]
   88872:	f8ca 100c 	str.w	r1, [sl, #12]
   88876:	f200 80ad 	bhi.w	889d4 <_realloc_r+0x2e0>
   8887a:	f104 0008 	add.w	r0, r4, #8
   8887e:	f10a 0210 	add.w	r2, sl, #16
   88882:	e074      	b.n	8896e <_realloc_r+0x27a>
   88884:	f854 3c08 	ldr.w	r3, [r4, #-8]
   88888:	eba9 0a03 	sub.w	sl, r9, r3
   8888c:	f8da 1004 	ldr.w	r1, [sl, #4]
   88890:	f021 0103 	bic.w	r1, r1, #3
   88894:	187b      	adds	r3, r7, r1
   88896:	4293      	cmp	r3, r2
   88898:	f6ff af59 	blt.w	8874e <_realloc_r+0x5a>
   8889c:	4655      	mov	r5, sl
   8889e:	f8da 100c 	ldr.w	r1, [sl, #12]
   888a2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   888a6:	1f3a      	subs	r2, r7, #4
   888a8:	2a24      	cmp	r2, #36	; 0x24
   888aa:	60c1      	str	r1, [r0, #12]
   888ac:	6088      	str	r0, [r1, #8]
   888ae:	d9d8      	bls.n	88862 <_realloc_r+0x16e>
   888b0:	4621      	mov	r1, r4
   888b2:	4628      	mov	r0, r5
   888b4:	461f      	mov	r7, r3
   888b6:	46d1      	mov	r9, sl
   888b8:	f7ff fbb0 	bl	8801c <memmove>
   888bc:	e77a      	b.n	887b4 <_realloc_r+0xc0>
   888be:	6841      	ldr	r1, [r0, #4]
   888c0:	f106 0010 	add.w	r0, r6, #16
   888c4:	f021 0b03 	bic.w	fp, r1, #3
   888c8:	44bb      	add	fp, r7
   888ca:	4583      	cmp	fp, r0
   888cc:	da58      	bge.n	88980 <_realloc_r+0x28c>
   888ce:	f01e 0f01 	tst.w	lr, #1
   888d2:	f47f af3c 	bne.w	8874e <_realloc_r+0x5a>
   888d6:	f854 1c08 	ldr.w	r1, [r4, #-8]
   888da:	eba9 0a01 	sub.w	sl, r9, r1
   888de:	f8da 1004 	ldr.w	r1, [sl, #4]
   888e2:	f021 0103 	bic.w	r1, r1, #3
   888e6:	448b      	add	fp, r1
   888e8:	4558      	cmp	r0, fp
   888ea:	dcd3      	bgt.n	88894 <_realloc_r+0x1a0>
   888ec:	4655      	mov	r5, sl
   888ee:	f8da 100c 	ldr.w	r1, [sl, #12]
   888f2:	f855 0f08 	ldr.w	r0, [r5, #8]!
   888f6:	1f3a      	subs	r2, r7, #4
   888f8:	2a24      	cmp	r2, #36	; 0x24
   888fa:	60c1      	str	r1, [r0, #12]
   888fc:	6088      	str	r0, [r1, #8]
   888fe:	f200 808d 	bhi.w	88a1c <_realloc_r+0x328>
   88902:	2a13      	cmp	r2, #19
   88904:	f240 8087 	bls.w	88a16 <_realloc_r+0x322>
   88908:	6821      	ldr	r1, [r4, #0]
   8890a:	2a1b      	cmp	r2, #27
   8890c:	f8ca 1008 	str.w	r1, [sl, #8]
   88910:	6861      	ldr	r1, [r4, #4]
   88912:	f8ca 100c 	str.w	r1, [sl, #12]
   88916:	f200 8088 	bhi.w	88a2a <_realloc_r+0x336>
   8891a:	f104 0108 	add.w	r1, r4, #8
   8891e:	f10a 0210 	add.w	r2, sl, #16
   88922:	6808      	ldr	r0, [r1, #0]
   88924:	6010      	str	r0, [r2, #0]
   88926:	6848      	ldr	r0, [r1, #4]
   88928:	6050      	str	r0, [r2, #4]
   8892a:	6889      	ldr	r1, [r1, #8]
   8892c:	6091      	str	r1, [r2, #8]
   8892e:	ebab 0206 	sub.w	r2, fp, r6
   88932:	eb0a 0106 	add.w	r1, sl, r6
   88936:	f042 0201 	orr.w	r2, r2, #1
   8893a:	6099      	str	r1, [r3, #8]
   8893c:	604a      	str	r2, [r1, #4]
   8893e:	f8da 3004 	ldr.w	r3, [sl, #4]
   88942:	4640      	mov	r0, r8
   88944:	f003 0301 	and.w	r3, r3, #1
   88948:	431e      	orrs	r6, r3
   8894a:	f8ca 6004 	str.w	r6, [sl, #4]
   8894e:	f7ff fbcf 	bl	880f0 <__malloc_unlock>
   88952:	e742      	b.n	887da <_realloc_r+0xe6>
   88954:	6823      	ldr	r3, [r4, #0]
   88956:	2a1b      	cmp	r2, #27
   88958:	6003      	str	r3, [r0, #0]
   8895a:	6863      	ldr	r3, [r4, #4]
   8895c:	6043      	str	r3, [r0, #4]
   8895e:	d827      	bhi.n	889b0 <_realloc_r+0x2bc>
   88960:	f100 0308 	add.w	r3, r0, #8
   88964:	f104 0208 	add.w	r2, r4, #8
   88968:	e70b      	b.n	88782 <_realloc_r+0x8e>
   8896a:	4620      	mov	r0, r4
   8896c:	462a      	mov	r2, r5
   8896e:	6801      	ldr	r1, [r0, #0]
   88970:	461f      	mov	r7, r3
   88972:	6011      	str	r1, [r2, #0]
   88974:	6841      	ldr	r1, [r0, #4]
   88976:	46d1      	mov	r9, sl
   88978:	6051      	str	r1, [r2, #4]
   8897a:	6883      	ldr	r3, [r0, #8]
   8897c:	6093      	str	r3, [r2, #8]
   8897e:	e719      	b.n	887b4 <_realloc_r+0xc0>
   88980:	ebab 0b06 	sub.w	fp, fp, r6
   88984:	eb09 0106 	add.w	r1, r9, r6
   88988:	f04b 0201 	orr.w	r2, fp, #1
   8898c:	6099      	str	r1, [r3, #8]
   8898e:	604a      	str	r2, [r1, #4]
   88990:	f854 3c04 	ldr.w	r3, [r4, #-4]
   88994:	4640      	mov	r0, r8
   88996:	f003 0301 	and.w	r3, r3, #1
   8899a:	431e      	orrs	r6, r3
   8899c:	f844 6c04 	str.w	r6, [r4, #-4]
   889a0:	f7ff fba6 	bl	880f0 <__malloc_unlock>
   889a4:	4625      	mov	r5, r4
   889a6:	e718      	b.n	887da <_realloc_r+0xe6>
   889a8:	4621      	mov	r1, r4
   889aa:	f7ff fb37 	bl	8801c <memmove>
   889ae:	e6ee      	b.n	8878e <_realloc_r+0x9a>
   889b0:	68a3      	ldr	r3, [r4, #8]
   889b2:	2a24      	cmp	r2, #36	; 0x24
   889b4:	6083      	str	r3, [r0, #8]
   889b6:	68e3      	ldr	r3, [r4, #12]
   889b8:	60c3      	str	r3, [r0, #12]
   889ba:	d018      	beq.n	889ee <_realloc_r+0x2fa>
   889bc:	f100 0310 	add.w	r3, r0, #16
   889c0:	f104 0210 	add.w	r2, r4, #16
   889c4:	e6dd      	b.n	88782 <_realloc_r+0x8e>
   889c6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   889ca:	4625      	mov	r5, r4
   889cc:	f023 0303 	bic.w	r3, r3, #3
   889d0:	441f      	add	r7, r3
   889d2:	e6ef      	b.n	887b4 <_realloc_r+0xc0>
   889d4:	68a1      	ldr	r1, [r4, #8]
   889d6:	2a24      	cmp	r2, #36	; 0x24
   889d8:	f8ca 1010 	str.w	r1, [sl, #16]
   889dc:	68e1      	ldr	r1, [r4, #12]
   889de:	f8ca 1014 	str.w	r1, [sl, #20]
   889e2:	d00d      	beq.n	88a00 <_realloc_r+0x30c>
   889e4:	f104 0010 	add.w	r0, r4, #16
   889e8:	f10a 0218 	add.w	r2, sl, #24
   889ec:	e7bf      	b.n	8896e <_realloc_r+0x27a>
   889ee:	6922      	ldr	r2, [r4, #16]
   889f0:	f100 0318 	add.w	r3, r0, #24
   889f4:	6102      	str	r2, [r0, #16]
   889f6:	6961      	ldr	r1, [r4, #20]
   889f8:	f104 0218 	add.w	r2, r4, #24
   889fc:	6141      	str	r1, [r0, #20]
   889fe:	e6c0      	b.n	88782 <_realloc_r+0x8e>
   88a00:	6922      	ldr	r2, [r4, #16]
   88a02:	f104 0018 	add.w	r0, r4, #24
   88a06:	f8ca 2018 	str.w	r2, [sl, #24]
   88a0a:	6961      	ldr	r1, [r4, #20]
   88a0c:	f10a 0220 	add.w	r2, sl, #32
   88a10:	f8ca 101c 	str.w	r1, [sl, #28]
   88a14:	e7ab      	b.n	8896e <_realloc_r+0x27a>
   88a16:	4621      	mov	r1, r4
   88a18:	462a      	mov	r2, r5
   88a1a:	e782      	b.n	88922 <_realloc_r+0x22e>
   88a1c:	4621      	mov	r1, r4
   88a1e:	4628      	mov	r0, r5
   88a20:	9301      	str	r3, [sp, #4]
   88a22:	f7ff fafb 	bl	8801c <memmove>
   88a26:	9b01      	ldr	r3, [sp, #4]
   88a28:	e781      	b.n	8892e <_realloc_r+0x23a>
   88a2a:	68a1      	ldr	r1, [r4, #8]
   88a2c:	2a24      	cmp	r2, #36	; 0x24
   88a2e:	f8ca 1010 	str.w	r1, [sl, #16]
   88a32:	68e1      	ldr	r1, [r4, #12]
   88a34:	f8ca 1014 	str.w	r1, [sl, #20]
   88a38:	d006      	beq.n	88a48 <_realloc_r+0x354>
   88a3a:	f104 0110 	add.w	r1, r4, #16
   88a3e:	f10a 0218 	add.w	r2, sl, #24
   88a42:	e76e      	b.n	88922 <_realloc_r+0x22e>
   88a44:	20000878 	.word	0x20000878
   88a48:	6922      	ldr	r2, [r4, #16]
   88a4a:	f104 0118 	add.w	r1, r4, #24
   88a4e:	f8ca 2018 	str.w	r2, [sl, #24]
   88a52:	6960      	ldr	r0, [r4, #20]
   88a54:	f10a 0220 	add.w	r2, sl, #32
   88a58:	f8ca 001c 	str.w	r0, [sl, #28]
   88a5c:	e761      	b.n	88922 <_realloc_r+0x22e>
   88a5e:	bf00      	nop

00088a60 <_sbrk_r>:
   88a60:	b538      	push	{r3, r4, r5, lr}
   88a62:	2300      	movs	r3, #0
   88a64:	4c06      	ldr	r4, [pc, #24]	; (88a80 <_sbrk_r+0x20>)
   88a66:	4605      	mov	r5, r0
   88a68:	4608      	mov	r0, r1
   88a6a:	6023      	str	r3, [r4, #0]
   88a6c:	f7fa fd98 	bl	835a0 <_sbrk>
   88a70:	1c43      	adds	r3, r0, #1
   88a72:	d000      	beq.n	88a76 <_sbrk_r+0x16>
   88a74:	bd38      	pop	{r3, r4, r5, pc}
   88a76:	6823      	ldr	r3, [r4, #0]
   88a78:	2b00      	cmp	r3, #0
   88a7a:	d0fb      	beq.n	88a74 <_sbrk_r+0x14>
   88a7c:	602b      	str	r3, [r5, #0]
   88a7e:	bd38      	pop	{r3, r4, r5, pc}
   88a80:	200035dc 	.word	0x200035dc

00088a84 <__sread>:
   88a84:	b510      	push	{r4, lr}
   88a86:	460c      	mov	r4, r1
   88a88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   88a8c:	f000 fad0 	bl	89030 <_read_r>
   88a90:	2800      	cmp	r0, #0
   88a92:	db03      	blt.n	88a9c <__sread+0x18>
   88a94:	6d23      	ldr	r3, [r4, #80]	; 0x50
   88a96:	4403      	add	r3, r0
   88a98:	6523      	str	r3, [r4, #80]	; 0x50
   88a9a:	bd10      	pop	{r4, pc}
   88a9c:	89a3      	ldrh	r3, [r4, #12]
   88a9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   88aa2:	81a3      	strh	r3, [r4, #12]
   88aa4:	bd10      	pop	{r4, pc}
   88aa6:	bf00      	nop

00088aa8 <__swrite>:
   88aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88aac:	460c      	mov	r4, r1
   88aae:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   88ab2:	461f      	mov	r7, r3
   88ab4:	05cb      	lsls	r3, r1, #23
   88ab6:	4616      	mov	r6, r2
   88ab8:	4605      	mov	r5, r0
   88aba:	d507      	bpl.n	88acc <__swrite+0x24>
   88abc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   88ac0:	2302      	movs	r3, #2
   88ac2:	2200      	movs	r2, #0
   88ac4:	f000 fa9e 	bl	89004 <_lseek_r>
   88ac8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   88acc:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   88ad0:	81a1      	strh	r1, [r4, #12]
   88ad2:	463b      	mov	r3, r7
   88ad4:	4632      	mov	r2, r6
   88ad6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   88ada:	4628      	mov	r0, r5
   88adc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   88ae0:	f000 b94e 	b.w	88d80 <_write_r>

00088ae4 <__sseek>:
   88ae4:	b510      	push	{r4, lr}
   88ae6:	460c      	mov	r4, r1
   88ae8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   88aec:	f000 fa8a 	bl	89004 <_lseek_r>
   88af0:	89a3      	ldrh	r3, [r4, #12]
   88af2:	1c42      	adds	r2, r0, #1
   88af4:	bf0e      	itee	eq
   88af6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   88afa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   88afe:	6520      	strne	r0, [r4, #80]	; 0x50
   88b00:	81a3      	strh	r3, [r4, #12]
   88b02:	bd10      	pop	{r4, pc}

00088b04 <__sclose>:
   88b04:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   88b08:	f000 b9e2 	b.w	88ed0 <_close_r>

00088b0c <strlen>:
   88b0c:	f020 0103 	bic.w	r1, r0, #3
   88b10:	f010 0003 	ands.w	r0, r0, #3
   88b14:	f1c0 0000 	rsb	r0, r0, #0
   88b18:	f851 3b04 	ldr.w	r3, [r1], #4
   88b1c:	f100 0c04 	add.w	ip, r0, #4
   88b20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   88b24:	f06f 0200 	mvn.w	r2, #0
   88b28:	bf1c      	itt	ne
   88b2a:	fa22 f20c 	lsrne.w	r2, r2, ip
   88b2e:	4313      	orrne	r3, r2
   88b30:	f04f 0c01 	mov.w	ip, #1
   88b34:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   88b38:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   88b3c:	eba3 020c 	sub.w	r2, r3, ip
   88b40:	ea22 0203 	bic.w	r2, r2, r3
   88b44:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   88b48:	bf04      	itt	eq
   88b4a:	f851 3b04 	ldreq.w	r3, [r1], #4
   88b4e:	3004      	addeq	r0, #4
   88b50:	d0f4      	beq.n	88b3c <strlen+0x30>
   88b52:	f1c2 0100 	rsb	r1, r2, #0
   88b56:	ea02 0201 	and.w	r2, r2, r1
   88b5a:	fab2 f282 	clz	r2, r2
   88b5e:	f1c2 021f 	rsb	r2, r2, #31
   88b62:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   88b66:	4770      	bx	lr

00088b68 <__ssprint_r>:
   88b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88b6c:	6893      	ldr	r3, [r2, #8]
   88b6e:	b083      	sub	sp, #12
   88b70:	4690      	mov	r8, r2
   88b72:	2b00      	cmp	r3, #0
   88b74:	d070      	beq.n	88c58 <__ssprint_r+0xf0>
   88b76:	4682      	mov	sl, r0
   88b78:	460c      	mov	r4, r1
   88b7a:	6817      	ldr	r7, [r2, #0]
   88b7c:	688d      	ldr	r5, [r1, #8]
   88b7e:	6808      	ldr	r0, [r1, #0]
   88b80:	e042      	b.n	88c08 <__ssprint_r+0xa0>
   88b82:	89a3      	ldrh	r3, [r4, #12]
   88b84:	f413 6f90 	tst.w	r3, #1152	; 0x480
   88b88:	d02e      	beq.n	88be8 <__ssprint_r+0x80>
   88b8a:	6965      	ldr	r5, [r4, #20]
   88b8c:	6921      	ldr	r1, [r4, #16]
   88b8e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   88b92:	eba0 0b01 	sub.w	fp, r0, r1
   88b96:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   88b9a:	f10b 0001 	add.w	r0, fp, #1
   88b9e:	106d      	asrs	r5, r5, #1
   88ba0:	4430      	add	r0, r6
   88ba2:	42a8      	cmp	r0, r5
   88ba4:	462a      	mov	r2, r5
   88ba6:	bf84      	itt	hi
   88ba8:	4605      	movhi	r5, r0
   88baa:	462a      	movhi	r2, r5
   88bac:	055b      	lsls	r3, r3, #21
   88bae:	d538      	bpl.n	88c22 <__ssprint_r+0xba>
   88bb0:	4611      	mov	r1, r2
   88bb2:	4650      	mov	r0, sl
   88bb4:	f7fe ff34 	bl	87a20 <_malloc_r>
   88bb8:	2800      	cmp	r0, #0
   88bba:	d03c      	beq.n	88c36 <__ssprint_r+0xce>
   88bbc:	465a      	mov	r2, fp
   88bbe:	6921      	ldr	r1, [r4, #16]
   88bc0:	9001      	str	r0, [sp, #4]
   88bc2:	f7fa feb9 	bl	83938 <memcpy>
   88bc6:	89a2      	ldrh	r2, [r4, #12]
   88bc8:	9b01      	ldr	r3, [sp, #4]
   88bca:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   88bce:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   88bd2:	81a2      	strh	r2, [r4, #12]
   88bd4:	eba5 020b 	sub.w	r2, r5, fp
   88bd8:	eb03 000b 	add.w	r0, r3, fp
   88bdc:	6165      	str	r5, [r4, #20]
   88bde:	46b3      	mov	fp, r6
   88be0:	4635      	mov	r5, r6
   88be2:	6123      	str	r3, [r4, #16]
   88be4:	6020      	str	r0, [r4, #0]
   88be6:	60a2      	str	r2, [r4, #8]
   88be8:	465a      	mov	r2, fp
   88bea:	4649      	mov	r1, r9
   88bec:	f7ff fa16 	bl	8801c <memmove>
   88bf0:	f8d8 3008 	ldr.w	r3, [r8, #8]
   88bf4:	68a2      	ldr	r2, [r4, #8]
   88bf6:	6820      	ldr	r0, [r4, #0]
   88bf8:	1b55      	subs	r5, r2, r5
   88bfa:	4458      	add	r0, fp
   88bfc:	1b9e      	subs	r6, r3, r6
   88bfe:	60a5      	str	r5, [r4, #8]
   88c00:	6020      	str	r0, [r4, #0]
   88c02:	f8c8 6008 	str.w	r6, [r8, #8]
   88c06:	b33e      	cbz	r6, 88c58 <__ssprint_r+0xf0>
   88c08:	687e      	ldr	r6, [r7, #4]
   88c0a:	463b      	mov	r3, r7
   88c0c:	3708      	adds	r7, #8
   88c0e:	2e00      	cmp	r6, #0
   88c10:	d0fa      	beq.n	88c08 <__ssprint_r+0xa0>
   88c12:	42ae      	cmp	r6, r5
   88c14:	f8d3 9000 	ldr.w	r9, [r3]
   88c18:	46ab      	mov	fp, r5
   88c1a:	d2b2      	bcs.n	88b82 <__ssprint_r+0x1a>
   88c1c:	4635      	mov	r5, r6
   88c1e:	46b3      	mov	fp, r6
   88c20:	e7e2      	b.n	88be8 <__ssprint_r+0x80>
   88c22:	4650      	mov	r0, sl
   88c24:	f7ff fd66 	bl	886f4 <_realloc_r>
   88c28:	4603      	mov	r3, r0
   88c2a:	2800      	cmp	r0, #0
   88c2c:	d1d2      	bne.n	88bd4 <__ssprint_r+0x6c>
   88c2e:	6921      	ldr	r1, [r4, #16]
   88c30:	4650      	mov	r0, sl
   88c32:	f7fe fbc9 	bl	873c8 <_free_r>
   88c36:	230c      	movs	r3, #12
   88c38:	2200      	movs	r2, #0
   88c3a:	f04f 30ff 	mov.w	r0, #4294967295
   88c3e:	f8ca 3000 	str.w	r3, [sl]
   88c42:	89a3      	ldrh	r3, [r4, #12]
   88c44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   88c48:	81a3      	strh	r3, [r4, #12]
   88c4a:	f8c8 2008 	str.w	r2, [r8, #8]
   88c4e:	f8c8 2004 	str.w	r2, [r8, #4]
   88c52:	b003      	add	sp, #12
   88c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88c58:	2000      	movs	r0, #0
   88c5a:	f8c8 0004 	str.w	r0, [r8, #4]
   88c5e:	b003      	add	sp, #12
   88c60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00088c64 <__swbuf_r>:
   88c64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   88c66:	460d      	mov	r5, r1
   88c68:	4614      	mov	r4, r2
   88c6a:	4606      	mov	r6, r0
   88c6c:	b110      	cbz	r0, 88c74 <__swbuf_r+0x10>
   88c6e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   88c70:	2b00      	cmp	r3, #0
   88c72:	d04b      	beq.n	88d0c <__swbuf_r+0xa8>
   88c74:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   88c78:	69a3      	ldr	r3, [r4, #24]
   88c7a:	b291      	uxth	r1, r2
   88c7c:	0708      	lsls	r0, r1, #28
   88c7e:	60a3      	str	r3, [r4, #8]
   88c80:	d539      	bpl.n	88cf6 <__swbuf_r+0x92>
   88c82:	6923      	ldr	r3, [r4, #16]
   88c84:	2b00      	cmp	r3, #0
   88c86:	d036      	beq.n	88cf6 <__swbuf_r+0x92>
   88c88:	b2ed      	uxtb	r5, r5
   88c8a:	0489      	lsls	r1, r1, #18
   88c8c:	462f      	mov	r7, r5
   88c8e:	d515      	bpl.n	88cbc <__swbuf_r+0x58>
   88c90:	6822      	ldr	r2, [r4, #0]
   88c92:	6961      	ldr	r1, [r4, #20]
   88c94:	1ad3      	subs	r3, r2, r3
   88c96:	428b      	cmp	r3, r1
   88c98:	da1c      	bge.n	88cd4 <__swbuf_r+0x70>
   88c9a:	3301      	adds	r3, #1
   88c9c:	68a1      	ldr	r1, [r4, #8]
   88c9e:	1c50      	adds	r0, r2, #1
   88ca0:	3901      	subs	r1, #1
   88ca2:	60a1      	str	r1, [r4, #8]
   88ca4:	6020      	str	r0, [r4, #0]
   88ca6:	7015      	strb	r5, [r2, #0]
   88ca8:	6962      	ldr	r2, [r4, #20]
   88caa:	429a      	cmp	r2, r3
   88cac:	d01a      	beq.n	88ce4 <__swbuf_r+0x80>
   88cae:	89a3      	ldrh	r3, [r4, #12]
   88cb0:	07db      	lsls	r3, r3, #31
   88cb2:	d501      	bpl.n	88cb8 <__swbuf_r+0x54>
   88cb4:	2d0a      	cmp	r5, #10
   88cb6:	d015      	beq.n	88ce4 <__swbuf_r+0x80>
   88cb8:	4638      	mov	r0, r7
   88cba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   88cbc:	6e61      	ldr	r1, [r4, #100]	; 0x64
   88cbe:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   88cc2:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
   88cc6:	81a2      	strh	r2, [r4, #12]
   88cc8:	6822      	ldr	r2, [r4, #0]
   88cca:	6661      	str	r1, [r4, #100]	; 0x64
   88ccc:	6961      	ldr	r1, [r4, #20]
   88cce:	1ad3      	subs	r3, r2, r3
   88cd0:	428b      	cmp	r3, r1
   88cd2:	dbe2      	blt.n	88c9a <__swbuf_r+0x36>
   88cd4:	4621      	mov	r1, r4
   88cd6:	4630      	mov	r0, r6
   88cd8:	f7fe f9f8 	bl	870cc <_fflush_r>
   88cdc:	b940      	cbnz	r0, 88cf0 <__swbuf_r+0x8c>
   88cde:	2301      	movs	r3, #1
   88ce0:	6822      	ldr	r2, [r4, #0]
   88ce2:	e7db      	b.n	88c9c <__swbuf_r+0x38>
   88ce4:	4621      	mov	r1, r4
   88ce6:	4630      	mov	r0, r6
   88ce8:	f7fe f9f0 	bl	870cc <_fflush_r>
   88cec:	2800      	cmp	r0, #0
   88cee:	d0e3      	beq.n	88cb8 <__swbuf_r+0x54>
   88cf0:	f04f 37ff 	mov.w	r7, #4294967295
   88cf4:	e7e0      	b.n	88cb8 <__swbuf_r+0x54>
   88cf6:	4621      	mov	r1, r4
   88cf8:	4630      	mov	r0, r6
   88cfa:	f7fd f91f 	bl	85f3c <__swsetup_r>
   88cfe:	2800      	cmp	r0, #0
   88d00:	d1f6      	bne.n	88cf0 <__swbuf_r+0x8c>
   88d02:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   88d06:	6923      	ldr	r3, [r4, #16]
   88d08:	b291      	uxth	r1, r2
   88d0a:	e7bd      	b.n	88c88 <__swbuf_r+0x24>
   88d0c:	f7fe fa36 	bl	8717c <__sinit>
   88d10:	e7b0      	b.n	88c74 <__swbuf_r+0x10>
   88d12:	bf00      	nop

00088d14 <_wcrtomb_r>:
   88d14:	b5f0      	push	{r4, r5, r6, r7, lr}
   88d16:	4606      	mov	r6, r0
   88d18:	b085      	sub	sp, #20
   88d1a:	461f      	mov	r7, r3
   88d1c:	b189      	cbz	r1, 88d42 <_wcrtomb_r+0x2e>
   88d1e:	4c10      	ldr	r4, [pc, #64]	; (88d60 <_wcrtomb_r+0x4c>)
   88d20:	4d10      	ldr	r5, [pc, #64]	; (88d64 <_wcrtomb_r+0x50>)
   88d22:	6824      	ldr	r4, [r4, #0]
   88d24:	6b64      	ldr	r4, [r4, #52]	; 0x34
   88d26:	2c00      	cmp	r4, #0
   88d28:	bf08      	it	eq
   88d2a:	462c      	moveq	r4, r5
   88d2c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   88d30:	47a0      	blx	r4
   88d32:	1c43      	adds	r3, r0, #1
   88d34:	d103      	bne.n	88d3e <_wcrtomb_r+0x2a>
   88d36:	2200      	movs	r2, #0
   88d38:	238a      	movs	r3, #138	; 0x8a
   88d3a:	603a      	str	r2, [r7, #0]
   88d3c:	6033      	str	r3, [r6, #0]
   88d3e:	b005      	add	sp, #20
   88d40:	bdf0      	pop	{r4, r5, r6, r7, pc}
   88d42:	460c      	mov	r4, r1
   88d44:	4a06      	ldr	r2, [pc, #24]	; (88d60 <_wcrtomb_r+0x4c>)
   88d46:	4d07      	ldr	r5, [pc, #28]	; (88d64 <_wcrtomb_r+0x50>)
   88d48:	6811      	ldr	r1, [r2, #0]
   88d4a:	4622      	mov	r2, r4
   88d4c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
   88d4e:	a901      	add	r1, sp, #4
   88d50:	2c00      	cmp	r4, #0
   88d52:	bf08      	it	eq
   88d54:	462c      	moveq	r4, r5
   88d56:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   88d5a:	47a0      	blx	r4
   88d5c:	e7e9      	b.n	88d32 <_wcrtomb_r+0x1e>
   88d5e:	bf00      	nop
   88d60:	200002d8 	.word	0x200002d8
   88d64:	2000070c 	.word	0x2000070c

00088d68 <__ascii_wctomb>:
   88d68:	b119      	cbz	r1, 88d72 <__ascii_wctomb+0xa>
   88d6a:	2aff      	cmp	r2, #255	; 0xff
   88d6c:	d803      	bhi.n	88d76 <__ascii_wctomb+0xe>
   88d6e:	700a      	strb	r2, [r1, #0]
   88d70:	2101      	movs	r1, #1
   88d72:	4608      	mov	r0, r1
   88d74:	4770      	bx	lr
   88d76:	238a      	movs	r3, #138	; 0x8a
   88d78:	f04f 31ff 	mov.w	r1, #4294967295
   88d7c:	6003      	str	r3, [r0, #0]
   88d7e:	e7f8      	b.n	88d72 <__ascii_wctomb+0xa>

00088d80 <_write_r>:
   88d80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   88d82:	460e      	mov	r6, r1
   88d84:	2500      	movs	r5, #0
   88d86:	4c08      	ldr	r4, [pc, #32]	; (88da8 <_write_r+0x28>)
   88d88:	4611      	mov	r1, r2
   88d8a:	4607      	mov	r7, r0
   88d8c:	461a      	mov	r2, r3
   88d8e:	4630      	mov	r0, r6
   88d90:	6025      	str	r5, [r4, #0]
   88d92:	f7f9 fb17 	bl	823c4 <_write>
   88d96:	1c43      	adds	r3, r0, #1
   88d98:	d000      	beq.n	88d9c <_write_r+0x1c>
   88d9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   88d9c:	6823      	ldr	r3, [r4, #0]
   88d9e:	2b00      	cmp	r3, #0
   88da0:	d0fb      	beq.n	88d9a <_write_r+0x1a>
   88da2:	603b      	str	r3, [r7, #0]
   88da4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   88da6:	bf00      	nop
   88da8:	200035dc 	.word	0x200035dc

00088dac <__register_exitproc>:
   88dac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   88db0:	4d2c      	ldr	r5, [pc, #176]	; (88e64 <__register_exitproc+0xb8>)
   88db2:	4606      	mov	r6, r0
   88db4:	6828      	ldr	r0, [r5, #0]
   88db6:	4698      	mov	r8, r3
   88db8:	460f      	mov	r7, r1
   88dba:	4691      	mov	r9, r2
   88dbc:	f7fe fdac 	bl	87918 <__retarget_lock_acquire_recursive>
   88dc0:	4b29      	ldr	r3, [pc, #164]	; (88e68 <__register_exitproc+0xbc>)
   88dc2:	681c      	ldr	r4, [r3, #0]
   88dc4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
   88dc8:	2b00      	cmp	r3, #0
   88dca:	d03e      	beq.n	88e4a <__register_exitproc+0x9e>
   88dcc:	685a      	ldr	r2, [r3, #4]
   88dce:	2a1f      	cmp	r2, #31
   88dd0:	dc1c      	bgt.n	88e0c <__register_exitproc+0x60>
   88dd2:	f102 0e01 	add.w	lr, r2, #1
   88dd6:	b176      	cbz	r6, 88df6 <__register_exitproc+0x4a>
   88dd8:	2101      	movs	r1, #1
   88dda:	eb03 0482 	add.w	r4, r3, r2, lsl #2
   88dde:	f8c4 9088 	str.w	r9, [r4, #136]	; 0x88
   88de2:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
   88de6:	4091      	lsls	r1, r2
   88de8:	4308      	orrs	r0, r1
   88dea:	2e02      	cmp	r6, #2
   88dec:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   88df0:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
   88df4:	d023      	beq.n	88e3e <__register_exitproc+0x92>
   88df6:	3202      	adds	r2, #2
   88df8:	f8c3 e004 	str.w	lr, [r3, #4]
   88dfc:	6828      	ldr	r0, [r5, #0]
   88dfe:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   88e02:	f7fe fd8b 	bl	8791c <__retarget_lock_release_recursive>
   88e06:	2000      	movs	r0, #0
   88e08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   88e0c:	4b17      	ldr	r3, [pc, #92]	; (88e6c <__register_exitproc+0xc0>)
   88e0e:	b30b      	cbz	r3, 88e54 <__register_exitproc+0xa8>
   88e10:	f44f 70c8 	mov.w	r0, #400	; 0x190
   88e14:	f7fe fdfc 	bl	87a10 <malloc>
   88e18:	4603      	mov	r3, r0
   88e1a:	b1d8      	cbz	r0, 88e54 <__register_exitproc+0xa8>
   88e1c:	2000      	movs	r0, #0
   88e1e:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
   88e22:	f04f 0e01 	mov.w	lr, #1
   88e26:	6058      	str	r0, [r3, #4]
   88e28:	6019      	str	r1, [r3, #0]
   88e2a:	4602      	mov	r2, r0
   88e2c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   88e30:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
   88e34:	f8c3 018c 	str.w	r0, [r3, #396]	; 0x18c
   88e38:	2e00      	cmp	r6, #0
   88e3a:	d0dc      	beq.n	88df6 <__register_exitproc+0x4a>
   88e3c:	e7cc      	b.n	88dd8 <__register_exitproc+0x2c>
   88e3e:	f8d3 018c 	ldr.w	r0, [r3, #396]	; 0x18c
   88e42:	4301      	orrs	r1, r0
   88e44:	f8c3 118c 	str.w	r1, [r3, #396]	; 0x18c
   88e48:	e7d5      	b.n	88df6 <__register_exitproc+0x4a>
   88e4a:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
   88e4e:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
   88e52:	e7bb      	b.n	88dcc <__register_exitproc+0x20>
   88e54:	6828      	ldr	r0, [r5, #0]
   88e56:	f7fe fd61 	bl	8791c <__retarget_lock_release_recursive>
   88e5a:	f04f 30ff 	mov.w	r0, #4294967295
   88e5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   88e62:	bf00      	nop
   88e64:	20000708 	.word	0x20000708
   88e68:	00089d78 	.word	0x00089d78
   88e6c:	00087a11 	.word	0x00087a11

00088e70 <_calloc_r>:
   88e70:	b510      	push	{r4, lr}
   88e72:	fb02 f101 	mul.w	r1, r2, r1
   88e76:	f7fe fdd3 	bl	87a20 <_malloc_r>
   88e7a:	4604      	mov	r4, r0
   88e7c:	b1d8      	cbz	r0, 88eb6 <_calloc_r+0x46>
   88e7e:	f850 2c04 	ldr.w	r2, [r0, #-4]
   88e82:	f022 0203 	bic.w	r2, r2, #3
   88e86:	3a04      	subs	r2, #4
   88e88:	2a24      	cmp	r2, #36	; 0x24
   88e8a:	d818      	bhi.n	88ebe <_calloc_r+0x4e>
   88e8c:	2a13      	cmp	r2, #19
   88e8e:	d914      	bls.n	88eba <_calloc_r+0x4a>
   88e90:	2300      	movs	r3, #0
   88e92:	2a1b      	cmp	r2, #27
   88e94:	6003      	str	r3, [r0, #0]
   88e96:	6043      	str	r3, [r0, #4]
   88e98:	d916      	bls.n	88ec8 <_calloc_r+0x58>
   88e9a:	2a24      	cmp	r2, #36	; 0x24
   88e9c:	6083      	str	r3, [r0, #8]
   88e9e:	60c3      	str	r3, [r0, #12]
   88ea0:	bf11      	iteee	ne
   88ea2:	f100 0210 	addne.w	r2, r0, #16
   88ea6:	6103      	streq	r3, [r0, #16]
   88ea8:	6143      	streq	r3, [r0, #20]
   88eaa:	f100 0218 	addeq.w	r2, r0, #24
   88eae:	2300      	movs	r3, #0
   88eb0:	6013      	str	r3, [r2, #0]
   88eb2:	6053      	str	r3, [r2, #4]
   88eb4:	6093      	str	r3, [r2, #8]
   88eb6:	4620      	mov	r0, r4
   88eb8:	bd10      	pop	{r4, pc}
   88eba:	4602      	mov	r2, r0
   88ebc:	e7f7      	b.n	88eae <_calloc_r+0x3e>
   88ebe:	2100      	movs	r1, #0
   88ec0:	f7fa fdb0 	bl	83a24 <memset>
   88ec4:	4620      	mov	r0, r4
   88ec6:	bd10      	pop	{r4, pc}
   88ec8:	f100 0208 	add.w	r2, r0, #8
   88ecc:	e7ef      	b.n	88eae <_calloc_r+0x3e>
   88ece:	bf00      	nop

00088ed0 <_close_r>:
   88ed0:	b538      	push	{r3, r4, r5, lr}
   88ed2:	2300      	movs	r3, #0
   88ed4:	4c06      	ldr	r4, [pc, #24]	; (88ef0 <_close_r+0x20>)
   88ed6:	4605      	mov	r5, r0
   88ed8:	4608      	mov	r0, r1
   88eda:	6023      	str	r3, [r4, #0]
   88edc:	f7fa fb7e 	bl	835dc <_close>
   88ee0:	1c43      	adds	r3, r0, #1
   88ee2:	d000      	beq.n	88ee6 <_close_r+0x16>
   88ee4:	bd38      	pop	{r3, r4, r5, pc}
   88ee6:	6823      	ldr	r3, [r4, #0]
   88ee8:	2b00      	cmp	r3, #0
   88eea:	d0fb      	beq.n	88ee4 <_close_r+0x14>
   88eec:	602b      	str	r3, [r5, #0]
   88eee:	bd38      	pop	{r3, r4, r5, pc}
   88ef0:	200035dc 	.word	0x200035dc

00088ef4 <_fclose_r>:
   88ef4:	b570      	push	{r4, r5, r6, lr}
   88ef6:	b159      	cbz	r1, 88f10 <_fclose_r+0x1c>
   88ef8:	4605      	mov	r5, r0
   88efa:	460c      	mov	r4, r1
   88efc:	b110      	cbz	r0, 88f04 <_fclose_r+0x10>
   88efe:	6b83      	ldr	r3, [r0, #56]	; 0x38
   88f00:	2b00      	cmp	r3, #0
   88f02:	d03c      	beq.n	88f7e <_fclose_r+0x8a>
   88f04:	6e63      	ldr	r3, [r4, #100]	; 0x64
   88f06:	07d8      	lsls	r0, r3, #31
   88f08:	d505      	bpl.n	88f16 <_fclose_r+0x22>
   88f0a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   88f0e:	b92b      	cbnz	r3, 88f1c <_fclose_r+0x28>
   88f10:	2600      	movs	r6, #0
   88f12:	4630      	mov	r0, r6
   88f14:	bd70      	pop	{r4, r5, r6, pc}
   88f16:	89a3      	ldrh	r3, [r4, #12]
   88f18:	0599      	lsls	r1, r3, #22
   88f1a:	d53c      	bpl.n	88f96 <_fclose_r+0xa2>
   88f1c:	4621      	mov	r1, r4
   88f1e:	4628      	mov	r0, r5
   88f20:	f7fe f838 	bl	86f94 <__sflush_r>
   88f24:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   88f26:	4606      	mov	r6, r0
   88f28:	b133      	cbz	r3, 88f38 <_fclose_r+0x44>
   88f2a:	69e1      	ldr	r1, [r4, #28]
   88f2c:	4628      	mov	r0, r5
   88f2e:	4798      	blx	r3
   88f30:	2800      	cmp	r0, #0
   88f32:	bfb8      	it	lt
   88f34:	f04f 36ff 	movlt.w	r6, #4294967295
   88f38:	89a3      	ldrh	r3, [r4, #12]
   88f3a:	061a      	lsls	r2, r3, #24
   88f3c:	d422      	bmi.n	88f84 <_fclose_r+0x90>
   88f3e:	6b21      	ldr	r1, [r4, #48]	; 0x30
   88f40:	b141      	cbz	r1, 88f54 <_fclose_r+0x60>
   88f42:	f104 0340 	add.w	r3, r4, #64	; 0x40
   88f46:	4299      	cmp	r1, r3
   88f48:	d002      	beq.n	88f50 <_fclose_r+0x5c>
   88f4a:	4628      	mov	r0, r5
   88f4c:	f7fe fa3c 	bl	873c8 <_free_r>
   88f50:	2300      	movs	r3, #0
   88f52:	6323      	str	r3, [r4, #48]	; 0x30
   88f54:	6c61      	ldr	r1, [r4, #68]	; 0x44
   88f56:	b121      	cbz	r1, 88f62 <_fclose_r+0x6e>
   88f58:	4628      	mov	r0, r5
   88f5a:	f7fe fa35 	bl	873c8 <_free_r>
   88f5e:	2300      	movs	r3, #0
   88f60:	6463      	str	r3, [r4, #68]	; 0x44
   88f62:	f7fe f93b 	bl	871dc <__sfp_lock_acquire>
   88f66:	2200      	movs	r2, #0
   88f68:	6e63      	ldr	r3, [r4, #100]	; 0x64
   88f6a:	81a2      	strh	r2, [r4, #12]
   88f6c:	07db      	lsls	r3, r3, #31
   88f6e:	d50e      	bpl.n	88f8e <_fclose_r+0x9a>
   88f70:	6da0      	ldr	r0, [r4, #88]	; 0x58
   88f72:	f7fe fccf 	bl	87914 <__retarget_lock_close_recursive>
   88f76:	f7fe f937 	bl	871e8 <__sfp_lock_release>
   88f7a:	4630      	mov	r0, r6
   88f7c:	bd70      	pop	{r4, r5, r6, pc}
   88f7e:	f7fe f8fd 	bl	8717c <__sinit>
   88f82:	e7bf      	b.n	88f04 <_fclose_r+0x10>
   88f84:	6921      	ldr	r1, [r4, #16]
   88f86:	4628      	mov	r0, r5
   88f88:	f7fe fa1e 	bl	873c8 <_free_r>
   88f8c:	e7d7      	b.n	88f3e <_fclose_r+0x4a>
   88f8e:	6da0      	ldr	r0, [r4, #88]	; 0x58
   88f90:	f7fe fcc4 	bl	8791c <__retarget_lock_release_recursive>
   88f94:	e7ec      	b.n	88f70 <_fclose_r+0x7c>
   88f96:	6da0      	ldr	r0, [r4, #88]	; 0x58
   88f98:	f7fe fcbe 	bl	87918 <__retarget_lock_acquire_recursive>
   88f9c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   88fa0:	2b00      	cmp	r3, #0
   88fa2:	d1bb      	bne.n	88f1c <_fclose_r+0x28>
   88fa4:	6e66      	ldr	r6, [r4, #100]	; 0x64
   88fa6:	f016 0601 	ands.w	r6, r6, #1
   88faa:	d1b1      	bne.n	88f10 <_fclose_r+0x1c>
   88fac:	6da0      	ldr	r0, [r4, #88]	; 0x58
   88fae:	f7fe fcb5 	bl	8791c <__retarget_lock_release_recursive>
   88fb2:	4630      	mov	r0, r6
   88fb4:	bd70      	pop	{r4, r5, r6, pc}
   88fb6:	bf00      	nop

00088fb8 <_fstat_r>:
   88fb8:	b570      	push	{r4, r5, r6, lr}
   88fba:	460d      	mov	r5, r1
   88fbc:	2300      	movs	r3, #0
   88fbe:	4c07      	ldr	r4, [pc, #28]	; (88fdc <_fstat_r+0x24>)
   88fc0:	4606      	mov	r6, r0
   88fc2:	4611      	mov	r1, r2
   88fc4:	4628      	mov	r0, r5
   88fc6:	6023      	str	r3, [r4, #0]
   88fc8:	f7fa fb0c 	bl	835e4 <_fstat>
   88fcc:	1c43      	adds	r3, r0, #1
   88fce:	d000      	beq.n	88fd2 <_fstat_r+0x1a>
   88fd0:	bd70      	pop	{r4, r5, r6, pc}
   88fd2:	6823      	ldr	r3, [r4, #0]
   88fd4:	2b00      	cmp	r3, #0
   88fd6:	d0fb      	beq.n	88fd0 <_fstat_r+0x18>
   88fd8:	6033      	str	r3, [r6, #0]
   88fda:	bd70      	pop	{r4, r5, r6, pc}
   88fdc:	200035dc 	.word	0x200035dc

00088fe0 <_isatty_r>:
   88fe0:	b538      	push	{r3, r4, r5, lr}
   88fe2:	2300      	movs	r3, #0
   88fe4:	4c06      	ldr	r4, [pc, #24]	; (89000 <_isatty_r+0x20>)
   88fe6:	4605      	mov	r5, r0
   88fe8:	4608      	mov	r0, r1
   88fea:	6023      	str	r3, [r4, #0]
   88fec:	f7fa fb00 	bl	835f0 <_isatty>
   88ff0:	1c43      	adds	r3, r0, #1
   88ff2:	d000      	beq.n	88ff6 <_isatty_r+0x16>
   88ff4:	bd38      	pop	{r3, r4, r5, pc}
   88ff6:	6823      	ldr	r3, [r4, #0]
   88ff8:	2b00      	cmp	r3, #0
   88ffa:	d0fb      	beq.n	88ff4 <_isatty_r+0x14>
   88ffc:	602b      	str	r3, [r5, #0]
   88ffe:	bd38      	pop	{r3, r4, r5, pc}
   89000:	200035dc 	.word	0x200035dc

00089004 <_lseek_r>:
   89004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89006:	460e      	mov	r6, r1
   89008:	2500      	movs	r5, #0
   8900a:	4c08      	ldr	r4, [pc, #32]	; (8902c <_lseek_r+0x28>)
   8900c:	4611      	mov	r1, r2
   8900e:	4607      	mov	r7, r0
   89010:	461a      	mov	r2, r3
   89012:	4630      	mov	r0, r6
   89014:	6025      	str	r5, [r4, #0]
   89016:	f7fa faed 	bl	835f4 <_lseek>
   8901a:	1c43      	adds	r3, r0, #1
   8901c:	d000      	beq.n	89020 <_lseek_r+0x1c>
   8901e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   89020:	6823      	ldr	r3, [r4, #0]
   89022:	2b00      	cmp	r3, #0
   89024:	d0fb      	beq.n	8901e <_lseek_r+0x1a>
   89026:	603b      	str	r3, [r7, #0]
   89028:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8902a:	bf00      	nop
   8902c:	200035dc 	.word	0x200035dc

00089030 <_read_r>:
   89030:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   89032:	460e      	mov	r6, r1
   89034:	2500      	movs	r5, #0
   89036:	4c08      	ldr	r4, [pc, #32]	; (89058 <_read_r+0x28>)
   89038:	4611      	mov	r1, r2
   8903a:	4607      	mov	r7, r0
   8903c:	461a      	mov	r2, r3
   8903e:	4630      	mov	r0, r6
   89040:	6025      	str	r5, [r4, #0]
   89042:	f7fa fb3d 	bl	836c0 <_read>
   89046:	1c43      	adds	r3, r0, #1
   89048:	d000      	beq.n	8904c <_read_r+0x1c>
   8904a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8904c:	6823      	ldr	r3, [r4, #0]
   8904e:	2b00      	cmp	r3, #0
   89050:	d0fb      	beq.n	8904a <_read_r+0x1a>
   89052:	603b      	str	r3, [r7, #0]
   89054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   89056:	bf00      	nop
   89058:	200035dc 	.word	0x200035dc

0008905c <__aeabi_drsub>:
   8905c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   89060:	e002      	b.n	89068 <__adddf3>
   89062:	bf00      	nop

00089064 <__aeabi_dsub>:
   89064:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00089068 <__adddf3>:
   89068:	b530      	push	{r4, r5, lr}
   8906a:	ea4f 0441 	mov.w	r4, r1, lsl #1
   8906e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   89072:	ea94 0f05 	teq	r4, r5
   89076:	bf08      	it	eq
   89078:	ea90 0f02 	teqeq	r0, r2
   8907c:	bf1f      	itttt	ne
   8907e:	ea54 0c00 	orrsne.w	ip, r4, r0
   89082:	ea55 0c02 	orrsne.w	ip, r5, r2
   89086:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8908a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8908e:	f000 80e2 	beq.w	89256 <__adddf3+0x1ee>
   89092:	ea4f 5454 	mov.w	r4, r4, lsr #21
   89096:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8909a:	bfb8      	it	lt
   8909c:	426d      	neglt	r5, r5
   8909e:	dd0c      	ble.n	890ba <__adddf3+0x52>
   890a0:	442c      	add	r4, r5
   890a2:	ea80 0202 	eor.w	r2, r0, r2
   890a6:	ea81 0303 	eor.w	r3, r1, r3
   890aa:	ea82 0000 	eor.w	r0, r2, r0
   890ae:	ea83 0101 	eor.w	r1, r3, r1
   890b2:	ea80 0202 	eor.w	r2, r0, r2
   890b6:	ea81 0303 	eor.w	r3, r1, r3
   890ba:	2d36      	cmp	r5, #54	; 0x36
   890bc:	bf88      	it	hi
   890be:	bd30      	pophi	{r4, r5, pc}
   890c0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   890c4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   890c8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   890cc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   890d0:	d002      	beq.n	890d8 <__adddf3+0x70>
   890d2:	4240      	negs	r0, r0
   890d4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   890d8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   890dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
   890e0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   890e4:	d002      	beq.n	890ec <__adddf3+0x84>
   890e6:	4252      	negs	r2, r2
   890e8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   890ec:	ea94 0f05 	teq	r4, r5
   890f0:	f000 80a7 	beq.w	89242 <__adddf3+0x1da>
   890f4:	f1a4 0401 	sub.w	r4, r4, #1
   890f8:	f1d5 0e20 	rsbs	lr, r5, #32
   890fc:	db0d      	blt.n	8911a <__adddf3+0xb2>
   890fe:	fa02 fc0e 	lsl.w	ip, r2, lr
   89102:	fa22 f205 	lsr.w	r2, r2, r5
   89106:	1880      	adds	r0, r0, r2
   89108:	f141 0100 	adc.w	r1, r1, #0
   8910c:	fa03 f20e 	lsl.w	r2, r3, lr
   89110:	1880      	adds	r0, r0, r2
   89112:	fa43 f305 	asr.w	r3, r3, r5
   89116:	4159      	adcs	r1, r3
   89118:	e00e      	b.n	89138 <__adddf3+0xd0>
   8911a:	f1a5 0520 	sub.w	r5, r5, #32
   8911e:	f10e 0e20 	add.w	lr, lr, #32
   89122:	2a01      	cmp	r2, #1
   89124:	fa03 fc0e 	lsl.w	ip, r3, lr
   89128:	bf28      	it	cs
   8912a:	f04c 0c02 	orrcs.w	ip, ip, #2
   8912e:	fa43 f305 	asr.w	r3, r3, r5
   89132:	18c0      	adds	r0, r0, r3
   89134:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   89138:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   8913c:	d507      	bpl.n	8914e <__adddf3+0xe6>
   8913e:	f04f 0e00 	mov.w	lr, #0
   89142:	f1dc 0c00 	rsbs	ip, ip, #0
   89146:	eb7e 0000 	sbcs.w	r0, lr, r0
   8914a:	eb6e 0101 	sbc.w	r1, lr, r1
   8914e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   89152:	d31b      	bcc.n	8918c <__adddf3+0x124>
   89154:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   89158:	d30c      	bcc.n	89174 <__adddf3+0x10c>
   8915a:	0849      	lsrs	r1, r1, #1
   8915c:	ea5f 0030 	movs.w	r0, r0, rrx
   89160:	ea4f 0c3c 	mov.w	ip, ip, rrx
   89164:	f104 0401 	add.w	r4, r4, #1
   89168:	ea4f 5244 	mov.w	r2, r4, lsl #21
   8916c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   89170:	f080 809a 	bcs.w	892a8 <__adddf3+0x240>
   89174:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   89178:	bf08      	it	eq
   8917a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8917e:	f150 0000 	adcs.w	r0, r0, #0
   89182:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89186:	ea41 0105 	orr.w	r1, r1, r5
   8918a:	bd30      	pop	{r4, r5, pc}
   8918c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   89190:	4140      	adcs	r0, r0
   89192:	eb41 0101 	adc.w	r1, r1, r1
   89196:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8919a:	f1a4 0401 	sub.w	r4, r4, #1
   8919e:	d1e9      	bne.n	89174 <__adddf3+0x10c>
   891a0:	f091 0f00 	teq	r1, #0
   891a4:	bf04      	itt	eq
   891a6:	4601      	moveq	r1, r0
   891a8:	2000      	moveq	r0, #0
   891aa:	fab1 f381 	clz	r3, r1
   891ae:	bf08      	it	eq
   891b0:	3320      	addeq	r3, #32
   891b2:	f1a3 030b 	sub.w	r3, r3, #11
   891b6:	f1b3 0220 	subs.w	r2, r3, #32
   891ba:	da0c      	bge.n	891d6 <__adddf3+0x16e>
   891bc:	320c      	adds	r2, #12
   891be:	dd08      	ble.n	891d2 <__adddf3+0x16a>
   891c0:	f102 0c14 	add.w	ip, r2, #20
   891c4:	f1c2 020c 	rsb	r2, r2, #12
   891c8:	fa01 f00c 	lsl.w	r0, r1, ip
   891cc:	fa21 f102 	lsr.w	r1, r1, r2
   891d0:	e00c      	b.n	891ec <__adddf3+0x184>
   891d2:	f102 0214 	add.w	r2, r2, #20
   891d6:	bfd8      	it	le
   891d8:	f1c2 0c20 	rsble	ip, r2, #32
   891dc:	fa01 f102 	lsl.w	r1, r1, r2
   891e0:	fa20 fc0c 	lsr.w	ip, r0, ip
   891e4:	bfdc      	itt	le
   891e6:	ea41 010c 	orrle.w	r1, r1, ip
   891ea:	4090      	lslle	r0, r2
   891ec:	1ae4      	subs	r4, r4, r3
   891ee:	bfa2      	ittt	ge
   891f0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   891f4:	4329      	orrge	r1, r5
   891f6:	bd30      	popge	{r4, r5, pc}
   891f8:	ea6f 0404 	mvn.w	r4, r4
   891fc:	3c1f      	subs	r4, #31
   891fe:	da1c      	bge.n	8923a <__adddf3+0x1d2>
   89200:	340c      	adds	r4, #12
   89202:	dc0e      	bgt.n	89222 <__adddf3+0x1ba>
   89204:	f104 0414 	add.w	r4, r4, #20
   89208:	f1c4 0220 	rsb	r2, r4, #32
   8920c:	fa20 f004 	lsr.w	r0, r0, r4
   89210:	fa01 f302 	lsl.w	r3, r1, r2
   89214:	ea40 0003 	orr.w	r0, r0, r3
   89218:	fa21 f304 	lsr.w	r3, r1, r4
   8921c:	ea45 0103 	orr.w	r1, r5, r3
   89220:	bd30      	pop	{r4, r5, pc}
   89222:	f1c4 040c 	rsb	r4, r4, #12
   89226:	f1c4 0220 	rsb	r2, r4, #32
   8922a:	fa20 f002 	lsr.w	r0, r0, r2
   8922e:	fa01 f304 	lsl.w	r3, r1, r4
   89232:	ea40 0003 	orr.w	r0, r0, r3
   89236:	4629      	mov	r1, r5
   89238:	bd30      	pop	{r4, r5, pc}
   8923a:	fa21 f004 	lsr.w	r0, r1, r4
   8923e:	4629      	mov	r1, r5
   89240:	bd30      	pop	{r4, r5, pc}
   89242:	f094 0f00 	teq	r4, #0
   89246:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   8924a:	bf06      	itte	eq
   8924c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   89250:	3401      	addeq	r4, #1
   89252:	3d01      	subne	r5, #1
   89254:	e74e      	b.n	890f4 <__adddf3+0x8c>
   89256:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8925a:	bf18      	it	ne
   8925c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   89260:	d029      	beq.n	892b6 <__adddf3+0x24e>
   89262:	ea94 0f05 	teq	r4, r5
   89266:	bf08      	it	eq
   89268:	ea90 0f02 	teqeq	r0, r2
   8926c:	d005      	beq.n	8927a <__adddf3+0x212>
   8926e:	ea54 0c00 	orrs.w	ip, r4, r0
   89272:	bf04      	itt	eq
   89274:	4619      	moveq	r1, r3
   89276:	4610      	moveq	r0, r2
   89278:	bd30      	pop	{r4, r5, pc}
   8927a:	ea91 0f03 	teq	r1, r3
   8927e:	bf1e      	ittt	ne
   89280:	2100      	movne	r1, #0
   89282:	2000      	movne	r0, #0
   89284:	bd30      	popne	{r4, r5, pc}
   89286:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8928a:	d105      	bne.n	89298 <__adddf3+0x230>
   8928c:	0040      	lsls	r0, r0, #1
   8928e:	4149      	adcs	r1, r1
   89290:	bf28      	it	cs
   89292:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   89296:	bd30      	pop	{r4, r5, pc}
   89298:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8929c:	bf3c      	itt	cc
   8929e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   892a2:	bd30      	popcc	{r4, r5, pc}
   892a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   892a8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   892ac:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   892b0:	f04f 0000 	mov.w	r0, #0
   892b4:	bd30      	pop	{r4, r5, pc}
   892b6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   892ba:	bf1a      	itte	ne
   892bc:	4619      	movne	r1, r3
   892be:	4610      	movne	r0, r2
   892c0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   892c4:	bf1c      	itt	ne
   892c6:	460b      	movne	r3, r1
   892c8:	4602      	movne	r2, r0
   892ca:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   892ce:	bf06      	itte	eq
   892d0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   892d4:	ea91 0f03 	teqeq	r1, r3
   892d8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   892dc:	bd30      	pop	{r4, r5, pc}
   892de:	bf00      	nop

000892e0 <__aeabi_ui2d>:
   892e0:	f090 0f00 	teq	r0, #0
   892e4:	bf04      	itt	eq
   892e6:	2100      	moveq	r1, #0
   892e8:	4770      	bxeq	lr
   892ea:	b530      	push	{r4, r5, lr}
   892ec:	f44f 6480 	mov.w	r4, #1024	; 0x400
   892f0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   892f4:	f04f 0500 	mov.w	r5, #0
   892f8:	f04f 0100 	mov.w	r1, #0
   892fc:	e750      	b.n	891a0 <__adddf3+0x138>
   892fe:	bf00      	nop

00089300 <__aeabi_i2d>:
   89300:	f090 0f00 	teq	r0, #0
   89304:	bf04      	itt	eq
   89306:	2100      	moveq	r1, #0
   89308:	4770      	bxeq	lr
   8930a:	b530      	push	{r4, r5, lr}
   8930c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89310:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89314:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   89318:	bf48      	it	mi
   8931a:	4240      	negmi	r0, r0
   8931c:	f04f 0100 	mov.w	r1, #0
   89320:	e73e      	b.n	891a0 <__adddf3+0x138>
   89322:	bf00      	nop

00089324 <__aeabi_f2d>:
   89324:	0042      	lsls	r2, r0, #1
   89326:	ea4f 01e2 	mov.w	r1, r2, asr #3
   8932a:	ea4f 0131 	mov.w	r1, r1, rrx
   8932e:	ea4f 7002 	mov.w	r0, r2, lsl #28
   89332:	bf1f      	itttt	ne
   89334:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   89338:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   8933c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   89340:	4770      	bxne	lr
   89342:	f092 0f00 	teq	r2, #0
   89346:	bf14      	ite	ne
   89348:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   8934c:	4770      	bxeq	lr
   8934e:	b530      	push	{r4, r5, lr}
   89350:	f44f 7460 	mov.w	r4, #896	; 0x380
   89354:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89358:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   8935c:	e720      	b.n	891a0 <__adddf3+0x138>
   8935e:	bf00      	nop

00089360 <__aeabi_ul2d>:
   89360:	ea50 0201 	orrs.w	r2, r0, r1
   89364:	bf08      	it	eq
   89366:	4770      	bxeq	lr
   89368:	b530      	push	{r4, r5, lr}
   8936a:	f04f 0500 	mov.w	r5, #0
   8936e:	e00a      	b.n	89386 <__aeabi_l2d+0x16>

00089370 <__aeabi_l2d>:
   89370:	ea50 0201 	orrs.w	r2, r0, r1
   89374:	bf08      	it	eq
   89376:	4770      	bxeq	lr
   89378:	b530      	push	{r4, r5, lr}
   8937a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   8937e:	d502      	bpl.n	89386 <__aeabi_l2d+0x16>
   89380:	4240      	negs	r0, r0
   89382:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   89386:	f44f 6480 	mov.w	r4, #1024	; 0x400
   8938a:	f104 0432 	add.w	r4, r4, #50	; 0x32
   8938e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   89392:	f43f aedc 	beq.w	8914e <__adddf3+0xe6>
   89396:	f04f 0203 	mov.w	r2, #3
   8939a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8939e:	bf18      	it	ne
   893a0:	3203      	addne	r2, #3
   893a2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   893a6:	bf18      	it	ne
   893a8:	3203      	addne	r2, #3
   893aa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   893ae:	f1c2 0320 	rsb	r3, r2, #32
   893b2:	fa00 fc03 	lsl.w	ip, r0, r3
   893b6:	fa20 f002 	lsr.w	r0, r0, r2
   893ba:	fa01 fe03 	lsl.w	lr, r1, r3
   893be:	ea40 000e 	orr.w	r0, r0, lr
   893c2:	fa21 f102 	lsr.w	r1, r1, r2
   893c6:	4414      	add	r4, r2
   893c8:	e6c1      	b.n	8914e <__adddf3+0xe6>
   893ca:	bf00      	nop

000893cc <__aeabi_dmul>:
   893cc:	b570      	push	{r4, r5, r6, lr}
   893ce:	f04f 0cff 	mov.w	ip, #255	; 0xff
   893d2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   893d6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   893da:	bf1d      	ittte	ne
   893dc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   893e0:	ea94 0f0c 	teqne	r4, ip
   893e4:	ea95 0f0c 	teqne	r5, ip
   893e8:	f000 f8de 	bleq	895a8 <__aeabi_dmul+0x1dc>
   893ec:	442c      	add	r4, r5
   893ee:	ea81 0603 	eor.w	r6, r1, r3
   893f2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   893f6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   893fa:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   893fe:	bf18      	it	ne
   89400:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   89404:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89408:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   8940c:	d038      	beq.n	89480 <__aeabi_dmul+0xb4>
   8940e:	fba0 ce02 	umull	ip, lr, r0, r2
   89412:	f04f 0500 	mov.w	r5, #0
   89416:	fbe1 e502 	umlal	lr, r5, r1, r2
   8941a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   8941e:	fbe0 e503 	umlal	lr, r5, r0, r3
   89422:	f04f 0600 	mov.w	r6, #0
   89426:	fbe1 5603 	umlal	r5, r6, r1, r3
   8942a:	f09c 0f00 	teq	ip, #0
   8942e:	bf18      	it	ne
   89430:	f04e 0e01 	orrne.w	lr, lr, #1
   89434:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   89438:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   8943c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   89440:	d204      	bcs.n	8944c <__aeabi_dmul+0x80>
   89442:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   89446:	416d      	adcs	r5, r5
   89448:	eb46 0606 	adc.w	r6, r6, r6
   8944c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   89450:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   89454:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   89458:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   8945c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   89460:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89464:	bf88      	it	hi
   89466:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8946a:	d81e      	bhi.n	894aa <__aeabi_dmul+0xde>
   8946c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   89470:	bf08      	it	eq
   89472:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   89476:	f150 0000 	adcs.w	r0, r0, #0
   8947a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8947e:	bd70      	pop	{r4, r5, r6, pc}
   89480:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   89484:	ea46 0101 	orr.w	r1, r6, r1
   89488:	ea40 0002 	orr.w	r0, r0, r2
   8948c:	ea81 0103 	eor.w	r1, r1, r3
   89490:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   89494:	bfc2      	ittt	gt
   89496:	ebd4 050c 	rsbsgt	r5, r4, ip
   8949a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8949e:	bd70      	popgt	{r4, r5, r6, pc}
   894a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   894a4:	f04f 0e00 	mov.w	lr, #0
   894a8:	3c01      	subs	r4, #1
   894aa:	f300 80ab 	bgt.w	89604 <__aeabi_dmul+0x238>
   894ae:	f114 0f36 	cmn.w	r4, #54	; 0x36
   894b2:	bfde      	ittt	le
   894b4:	2000      	movle	r0, #0
   894b6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   894ba:	bd70      	pople	{r4, r5, r6, pc}
   894bc:	f1c4 0400 	rsb	r4, r4, #0
   894c0:	3c20      	subs	r4, #32
   894c2:	da35      	bge.n	89530 <__aeabi_dmul+0x164>
   894c4:	340c      	adds	r4, #12
   894c6:	dc1b      	bgt.n	89500 <__aeabi_dmul+0x134>
   894c8:	f104 0414 	add.w	r4, r4, #20
   894cc:	f1c4 0520 	rsb	r5, r4, #32
   894d0:	fa00 f305 	lsl.w	r3, r0, r5
   894d4:	fa20 f004 	lsr.w	r0, r0, r4
   894d8:	fa01 f205 	lsl.w	r2, r1, r5
   894dc:	ea40 0002 	orr.w	r0, r0, r2
   894e0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   894e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   894e8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   894ec:	fa21 f604 	lsr.w	r6, r1, r4
   894f0:	eb42 0106 	adc.w	r1, r2, r6
   894f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   894f8:	bf08      	it	eq
   894fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   894fe:	bd70      	pop	{r4, r5, r6, pc}
   89500:	f1c4 040c 	rsb	r4, r4, #12
   89504:	f1c4 0520 	rsb	r5, r4, #32
   89508:	fa00 f304 	lsl.w	r3, r0, r4
   8950c:	fa20 f005 	lsr.w	r0, r0, r5
   89510:	fa01 f204 	lsl.w	r2, r1, r4
   89514:	ea40 0002 	orr.w	r0, r0, r2
   89518:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8951c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   89520:	f141 0100 	adc.w	r1, r1, #0
   89524:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89528:	bf08      	it	eq
   8952a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8952e:	bd70      	pop	{r4, r5, r6, pc}
   89530:	f1c4 0520 	rsb	r5, r4, #32
   89534:	fa00 f205 	lsl.w	r2, r0, r5
   89538:	ea4e 0e02 	orr.w	lr, lr, r2
   8953c:	fa20 f304 	lsr.w	r3, r0, r4
   89540:	fa01 f205 	lsl.w	r2, r1, r5
   89544:	ea43 0302 	orr.w	r3, r3, r2
   89548:	fa21 f004 	lsr.w	r0, r1, r4
   8954c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89550:	fa21 f204 	lsr.w	r2, r1, r4
   89554:	ea20 0002 	bic.w	r0, r0, r2
   89558:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   8955c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   89560:	bf08      	it	eq
   89562:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   89566:	bd70      	pop	{r4, r5, r6, pc}
   89568:	f094 0f00 	teq	r4, #0
   8956c:	d10f      	bne.n	8958e <__aeabi_dmul+0x1c2>
   8956e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   89572:	0040      	lsls	r0, r0, #1
   89574:	eb41 0101 	adc.w	r1, r1, r1
   89578:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8957c:	bf08      	it	eq
   8957e:	3c01      	subeq	r4, #1
   89580:	d0f7      	beq.n	89572 <__aeabi_dmul+0x1a6>
   89582:	ea41 0106 	orr.w	r1, r1, r6
   89586:	f095 0f00 	teq	r5, #0
   8958a:	bf18      	it	ne
   8958c:	4770      	bxne	lr
   8958e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   89592:	0052      	lsls	r2, r2, #1
   89594:	eb43 0303 	adc.w	r3, r3, r3
   89598:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8959c:	bf08      	it	eq
   8959e:	3d01      	subeq	r5, #1
   895a0:	d0f7      	beq.n	89592 <__aeabi_dmul+0x1c6>
   895a2:	ea43 0306 	orr.w	r3, r3, r6
   895a6:	4770      	bx	lr
   895a8:	ea94 0f0c 	teq	r4, ip
   895ac:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   895b0:	bf18      	it	ne
   895b2:	ea95 0f0c 	teqne	r5, ip
   895b6:	d00c      	beq.n	895d2 <__aeabi_dmul+0x206>
   895b8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   895bc:	bf18      	it	ne
   895be:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   895c2:	d1d1      	bne.n	89568 <__aeabi_dmul+0x19c>
   895c4:	ea81 0103 	eor.w	r1, r1, r3
   895c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   895cc:	f04f 0000 	mov.w	r0, #0
   895d0:	bd70      	pop	{r4, r5, r6, pc}
   895d2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   895d6:	bf06      	itte	eq
   895d8:	4610      	moveq	r0, r2
   895da:	4619      	moveq	r1, r3
   895dc:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   895e0:	d019      	beq.n	89616 <__aeabi_dmul+0x24a>
   895e2:	ea94 0f0c 	teq	r4, ip
   895e6:	d102      	bne.n	895ee <__aeabi_dmul+0x222>
   895e8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   895ec:	d113      	bne.n	89616 <__aeabi_dmul+0x24a>
   895ee:	ea95 0f0c 	teq	r5, ip
   895f2:	d105      	bne.n	89600 <__aeabi_dmul+0x234>
   895f4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   895f8:	bf1c      	itt	ne
   895fa:	4610      	movne	r0, r2
   895fc:	4619      	movne	r1, r3
   895fe:	d10a      	bne.n	89616 <__aeabi_dmul+0x24a>
   89600:	ea81 0103 	eor.w	r1, r1, r3
   89604:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   89608:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8960c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   89610:	f04f 0000 	mov.w	r0, #0
   89614:	bd70      	pop	{r4, r5, r6, pc}
   89616:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8961a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8961e:	bd70      	pop	{r4, r5, r6, pc}

00089620 <__aeabi_ddiv>:
   89620:	b570      	push	{r4, r5, r6, lr}
   89622:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89626:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8962a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8962e:	bf1d      	ittte	ne
   89630:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89634:	ea94 0f0c 	teqne	r4, ip
   89638:	ea95 0f0c 	teqne	r5, ip
   8963c:	f000 f8a7 	bleq	8978e <__aeabi_ddiv+0x16e>
   89640:	eba4 0405 	sub.w	r4, r4, r5
   89644:	ea81 0e03 	eor.w	lr, r1, r3
   89648:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8964c:	ea4f 3101 	mov.w	r1, r1, lsl #12
   89650:	f000 8088 	beq.w	89764 <__aeabi_ddiv+0x144>
   89654:	ea4f 3303 	mov.w	r3, r3, lsl #12
   89658:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   8965c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   89660:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   89664:	ea4f 2202 	mov.w	r2, r2, lsl #8
   89668:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   8966c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   89670:	ea4f 2600 	mov.w	r6, r0, lsl #8
   89674:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   89678:	429d      	cmp	r5, r3
   8967a:	bf08      	it	eq
   8967c:	4296      	cmpeq	r6, r2
   8967e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   89682:	f504 7440 	add.w	r4, r4, #768	; 0x300
   89686:	d202      	bcs.n	8968e <__aeabi_ddiv+0x6e>
   89688:	085b      	lsrs	r3, r3, #1
   8968a:	ea4f 0232 	mov.w	r2, r2, rrx
   8968e:	1ab6      	subs	r6, r6, r2
   89690:	eb65 0503 	sbc.w	r5, r5, r3
   89694:	085b      	lsrs	r3, r3, #1
   89696:	ea4f 0232 	mov.w	r2, r2, rrx
   8969a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8969e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   896a2:	ebb6 0e02 	subs.w	lr, r6, r2
   896a6:	eb75 0e03 	sbcs.w	lr, r5, r3
   896aa:	bf22      	ittt	cs
   896ac:	1ab6      	subcs	r6, r6, r2
   896ae:	4675      	movcs	r5, lr
   896b0:	ea40 000c 	orrcs.w	r0, r0, ip
   896b4:	085b      	lsrs	r3, r3, #1
   896b6:	ea4f 0232 	mov.w	r2, r2, rrx
   896ba:	ebb6 0e02 	subs.w	lr, r6, r2
   896be:	eb75 0e03 	sbcs.w	lr, r5, r3
   896c2:	bf22      	ittt	cs
   896c4:	1ab6      	subcs	r6, r6, r2
   896c6:	4675      	movcs	r5, lr
   896c8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   896cc:	085b      	lsrs	r3, r3, #1
   896ce:	ea4f 0232 	mov.w	r2, r2, rrx
   896d2:	ebb6 0e02 	subs.w	lr, r6, r2
   896d6:	eb75 0e03 	sbcs.w	lr, r5, r3
   896da:	bf22      	ittt	cs
   896dc:	1ab6      	subcs	r6, r6, r2
   896de:	4675      	movcs	r5, lr
   896e0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   896e4:	085b      	lsrs	r3, r3, #1
   896e6:	ea4f 0232 	mov.w	r2, r2, rrx
   896ea:	ebb6 0e02 	subs.w	lr, r6, r2
   896ee:	eb75 0e03 	sbcs.w	lr, r5, r3
   896f2:	bf22      	ittt	cs
   896f4:	1ab6      	subcs	r6, r6, r2
   896f6:	4675      	movcs	r5, lr
   896f8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   896fc:	ea55 0e06 	orrs.w	lr, r5, r6
   89700:	d018      	beq.n	89734 <__aeabi_ddiv+0x114>
   89702:	ea4f 1505 	mov.w	r5, r5, lsl #4
   89706:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8970a:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8970e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   89712:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   89716:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8971a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8971e:	d1c0      	bne.n	896a2 <__aeabi_ddiv+0x82>
   89720:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89724:	d10b      	bne.n	8973e <__aeabi_ddiv+0x11e>
   89726:	ea41 0100 	orr.w	r1, r1, r0
   8972a:	f04f 0000 	mov.w	r0, #0
   8972e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   89732:	e7b6      	b.n	896a2 <__aeabi_ddiv+0x82>
   89734:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   89738:	bf04      	itt	eq
   8973a:	4301      	orreq	r1, r0
   8973c:	2000      	moveq	r0, #0
   8973e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89742:	bf88      	it	hi
   89744:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   89748:	f63f aeaf 	bhi.w	894aa <__aeabi_dmul+0xde>
   8974c:	ebb5 0c03 	subs.w	ip, r5, r3
   89750:	bf04      	itt	eq
   89752:	ebb6 0c02 	subseq.w	ip, r6, r2
   89756:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8975a:	f150 0000 	adcs.w	r0, r0, #0
   8975e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89762:	bd70      	pop	{r4, r5, r6, pc}
   89764:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   89768:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   8976c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   89770:	bfc2      	ittt	gt
   89772:	ebd4 050c 	rsbsgt	r5, r4, ip
   89776:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8977a:	bd70      	popgt	{r4, r5, r6, pc}
   8977c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89780:	f04f 0e00 	mov.w	lr, #0
   89784:	3c01      	subs	r4, #1
   89786:	e690      	b.n	894aa <__aeabi_dmul+0xde>
   89788:	ea45 0e06 	orr.w	lr, r5, r6
   8978c:	e68d      	b.n	894aa <__aeabi_dmul+0xde>
   8978e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   89792:	ea94 0f0c 	teq	r4, ip
   89796:	bf08      	it	eq
   89798:	ea95 0f0c 	teqeq	r5, ip
   8979c:	f43f af3b 	beq.w	89616 <__aeabi_dmul+0x24a>
   897a0:	ea94 0f0c 	teq	r4, ip
   897a4:	d10a      	bne.n	897bc <__aeabi_ddiv+0x19c>
   897a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   897aa:	f47f af34 	bne.w	89616 <__aeabi_dmul+0x24a>
   897ae:	ea95 0f0c 	teq	r5, ip
   897b2:	f47f af25 	bne.w	89600 <__aeabi_dmul+0x234>
   897b6:	4610      	mov	r0, r2
   897b8:	4619      	mov	r1, r3
   897ba:	e72c      	b.n	89616 <__aeabi_dmul+0x24a>
   897bc:	ea95 0f0c 	teq	r5, ip
   897c0:	d106      	bne.n	897d0 <__aeabi_ddiv+0x1b0>
   897c2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   897c6:	f43f aefd 	beq.w	895c4 <__aeabi_dmul+0x1f8>
   897ca:	4610      	mov	r0, r2
   897cc:	4619      	mov	r1, r3
   897ce:	e722      	b.n	89616 <__aeabi_dmul+0x24a>
   897d0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   897d4:	bf18      	it	ne
   897d6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   897da:	f47f aec5 	bne.w	89568 <__aeabi_dmul+0x19c>
   897de:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   897e2:	f47f af0d 	bne.w	89600 <__aeabi_dmul+0x234>
   897e6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   897ea:	f47f aeeb 	bne.w	895c4 <__aeabi_dmul+0x1f8>
   897ee:	e712      	b.n	89616 <__aeabi_dmul+0x24a>

000897f0 <__gedf2>:
   897f0:	f04f 3cff 	mov.w	ip, #4294967295
   897f4:	e006      	b.n	89804 <__cmpdf2+0x4>
   897f6:	bf00      	nop

000897f8 <__ledf2>:
   897f8:	f04f 0c01 	mov.w	ip, #1
   897fc:	e002      	b.n	89804 <__cmpdf2+0x4>
   897fe:	bf00      	nop

00089800 <__cmpdf2>:
   89800:	f04f 0c01 	mov.w	ip, #1
   89804:	f84d cd04 	str.w	ip, [sp, #-4]!
   89808:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8980c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89810:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89814:	bf18      	it	ne
   89816:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8981a:	d01b      	beq.n	89854 <__cmpdf2+0x54>
   8981c:	b001      	add	sp, #4
   8981e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   89822:	bf0c      	ite	eq
   89824:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   89828:	ea91 0f03 	teqne	r1, r3
   8982c:	bf02      	ittt	eq
   8982e:	ea90 0f02 	teqeq	r0, r2
   89832:	2000      	moveq	r0, #0
   89834:	4770      	bxeq	lr
   89836:	f110 0f00 	cmn.w	r0, #0
   8983a:	ea91 0f03 	teq	r1, r3
   8983e:	bf58      	it	pl
   89840:	4299      	cmppl	r1, r3
   89842:	bf08      	it	eq
   89844:	4290      	cmpeq	r0, r2
   89846:	bf2c      	ite	cs
   89848:	17d8      	asrcs	r0, r3, #31
   8984a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8984e:	f040 0001 	orr.w	r0, r0, #1
   89852:	4770      	bx	lr
   89854:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89858:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8985c:	d102      	bne.n	89864 <__cmpdf2+0x64>
   8985e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   89862:	d107      	bne.n	89874 <__cmpdf2+0x74>
   89864:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89868:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8986c:	d1d6      	bne.n	8981c <__cmpdf2+0x1c>
   8986e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   89872:	d0d3      	beq.n	8981c <__cmpdf2+0x1c>
   89874:	f85d 0b04 	ldr.w	r0, [sp], #4
   89878:	4770      	bx	lr
   8987a:	bf00      	nop

0008987c <__aeabi_cdrcmple>:
   8987c:	4684      	mov	ip, r0
   8987e:	4610      	mov	r0, r2
   89880:	4662      	mov	r2, ip
   89882:	468c      	mov	ip, r1
   89884:	4619      	mov	r1, r3
   89886:	4663      	mov	r3, ip
   89888:	e000      	b.n	8988c <__aeabi_cdcmpeq>
   8988a:	bf00      	nop

0008988c <__aeabi_cdcmpeq>:
   8988c:	b501      	push	{r0, lr}
   8988e:	f7ff ffb7 	bl	89800 <__cmpdf2>
   89892:	2800      	cmp	r0, #0
   89894:	bf48      	it	mi
   89896:	f110 0f00 	cmnmi.w	r0, #0
   8989a:	bd01      	pop	{r0, pc}

0008989c <__aeabi_dcmpeq>:
   8989c:	f84d ed08 	str.w	lr, [sp, #-8]!
   898a0:	f7ff fff4 	bl	8988c <__aeabi_cdcmpeq>
   898a4:	bf0c      	ite	eq
   898a6:	2001      	moveq	r0, #1
   898a8:	2000      	movne	r0, #0
   898aa:	f85d fb08 	ldr.w	pc, [sp], #8
   898ae:	bf00      	nop

000898b0 <__aeabi_dcmplt>:
   898b0:	f84d ed08 	str.w	lr, [sp, #-8]!
   898b4:	f7ff ffea 	bl	8988c <__aeabi_cdcmpeq>
   898b8:	bf34      	ite	cc
   898ba:	2001      	movcc	r0, #1
   898bc:	2000      	movcs	r0, #0
   898be:	f85d fb08 	ldr.w	pc, [sp], #8
   898c2:	bf00      	nop

000898c4 <__aeabi_dcmple>:
   898c4:	f84d ed08 	str.w	lr, [sp, #-8]!
   898c8:	f7ff ffe0 	bl	8988c <__aeabi_cdcmpeq>
   898cc:	bf94      	ite	ls
   898ce:	2001      	movls	r0, #1
   898d0:	2000      	movhi	r0, #0
   898d2:	f85d fb08 	ldr.w	pc, [sp], #8
   898d6:	bf00      	nop

000898d8 <__aeabi_dcmpge>:
   898d8:	f84d ed08 	str.w	lr, [sp, #-8]!
   898dc:	f7ff ffce 	bl	8987c <__aeabi_cdrcmple>
   898e0:	bf94      	ite	ls
   898e2:	2001      	movls	r0, #1
   898e4:	2000      	movhi	r0, #0
   898e6:	f85d fb08 	ldr.w	pc, [sp], #8
   898ea:	bf00      	nop

000898ec <__aeabi_dcmpgt>:
   898ec:	f84d ed08 	str.w	lr, [sp, #-8]!
   898f0:	f7ff ffc4 	bl	8987c <__aeabi_cdrcmple>
   898f4:	bf34      	ite	cc
   898f6:	2001      	movcc	r0, #1
   898f8:	2000      	movcs	r0, #0
   898fa:	f85d fb08 	ldr.w	pc, [sp], #8
   898fe:	bf00      	nop

00089900 <__aeabi_dcmpun>:
   89900:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89904:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89908:	d102      	bne.n	89910 <__aeabi_dcmpun+0x10>
   8990a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8990e:	d10a      	bne.n	89926 <__aeabi_dcmpun+0x26>
   89910:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89914:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89918:	d102      	bne.n	89920 <__aeabi_dcmpun+0x20>
   8991a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8991e:	d102      	bne.n	89926 <__aeabi_dcmpun+0x26>
   89920:	f04f 0000 	mov.w	r0, #0
   89924:	4770      	bx	lr
   89926:	f04f 0001 	mov.w	r0, #1
   8992a:	4770      	bx	lr

0008992c <__aeabi_d2iz>:
   8992c:	ea4f 0241 	mov.w	r2, r1, lsl #1
   89930:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   89934:	d215      	bcs.n	89962 <__aeabi_d2iz+0x36>
   89936:	d511      	bpl.n	8995c <__aeabi_d2iz+0x30>
   89938:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8993c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   89940:	d912      	bls.n	89968 <__aeabi_d2iz+0x3c>
   89942:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   89946:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8994a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8994e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   89952:	fa23 f002 	lsr.w	r0, r3, r2
   89956:	bf18      	it	ne
   89958:	4240      	negne	r0, r0
   8995a:	4770      	bx	lr
   8995c:	f04f 0000 	mov.w	r0, #0
   89960:	4770      	bx	lr
   89962:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   89966:	d105      	bne.n	89974 <__aeabi_d2iz+0x48>
   89968:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8996c:	bf08      	it	eq
   8996e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   89972:	4770      	bx	lr
   89974:	f04f 0000 	mov.w	r0, #0
   89978:	4770      	bx	lr
   8997a:	bf00      	nop

0008997c <__aeabi_uldivmod>:
   8997c:	b953      	cbnz	r3, 89994 <__aeabi_uldivmod+0x18>
   8997e:	b94a      	cbnz	r2, 89994 <__aeabi_uldivmod+0x18>
   89980:	2900      	cmp	r1, #0
   89982:	bf08      	it	eq
   89984:	2800      	cmpeq	r0, #0
   89986:	bf1c      	itt	ne
   89988:	f04f 31ff 	movne.w	r1, #4294967295
   8998c:	f04f 30ff 	movne.w	r0, #4294967295
   89990:	f000 b97a 	b.w	89c88 <__aeabi_idiv0>
   89994:	f1ad 0c08 	sub.w	ip, sp, #8
   89998:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8999c:	f000 f806 	bl	899ac <__udivmoddi4>
   899a0:	f8dd e004 	ldr.w	lr, [sp, #4]
   899a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   899a8:	b004      	add	sp, #16
   899aa:	4770      	bx	lr

000899ac <__udivmoddi4>:
   899ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   899b0:	468c      	mov	ip, r1
   899b2:	460e      	mov	r6, r1
   899b4:	4604      	mov	r4, r0
   899b6:	9d08      	ldr	r5, [sp, #32]
   899b8:	2b00      	cmp	r3, #0
   899ba:	d150      	bne.n	89a5e <__udivmoddi4+0xb2>
   899bc:	428a      	cmp	r2, r1
   899be:	4617      	mov	r7, r2
   899c0:	d96c      	bls.n	89a9c <__udivmoddi4+0xf0>
   899c2:	fab2 fe82 	clz	lr, r2
   899c6:	f1be 0f00 	cmp.w	lr, #0
   899ca:	d00b      	beq.n	899e4 <__udivmoddi4+0x38>
   899cc:	f1ce 0c20 	rsb	ip, lr, #32
   899d0:	fa01 f60e 	lsl.w	r6, r1, lr
   899d4:	fa20 fc0c 	lsr.w	ip, r0, ip
   899d8:	fa02 f70e 	lsl.w	r7, r2, lr
   899dc:	ea4c 0c06 	orr.w	ip, ip, r6
   899e0:	fa00 f40e 	lsl.w	r4, r0, lr
   899e4:	0c3a      	lsrs	r2, r7, #16
   899e6:	fbbc f9f2 	udiv	r9, ip, r2
   899ea:	b2bb      	uxth	r3, r7
   899ec:	fb02 cc19 	mls	ip, r2, r9, ip
   899f0:	fb09 fa03 	mul.w	sl, r9, r3
   899f4:	ea4f 4814 	mov.w	r8, r4, lsr #16
   899f8:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
   899fc:	45b2      	cmp	sl, r6
   899fe:	d90a      	bls.n	89a16 <__udivmoddi4+0x6a>
   89a00:	19f6      	adds	r6, r6, r7
   89a02:	f109 31ff 	add.w	r1, r9, #4294967295
   89a06:	f080 8125 	bcs.w	89c54 <__udivmoddi4+0x2a8>
   89a0a:	45b2      	cmp	sl, r6
   89a0c:	f240 8122 	bls.w	89c54 <__udivmoddi4+0x2a8>
   89a10:	f1a9 0902 	sub.w	r9, r9, #2
   89a14:	443e      	add	r6, r7
   89a16:	eba6 060a 	sub.w	r6, r6, sl
   89a1a:	fbb6 f0f2 	udiv	r0, r6, r2
   89a1e:	fb02 6610 	mls	r6, r2, r0, r6
   89a22:	fb00 f303 	mul.w	r3, r0, r3
   89a26:	b2a4      	uxth	r4, r4
   89a28:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   89a2c:	42a3      	cmp	r3, r4
   89a2e:	d909      	bls.n	89a44 <__udivmoddi4+0x98>
   89a30:	19e4      	adds	r4, r4, r7
   89a32:	f100 32ff 	add.w	r2, r0, #4294967295
   89a36:	f080 810b 	bcs.w	89c50 <__udivmoddi4+0x2a4>
   89a3a:	42a3      	cmp	r3, r4
   89a3c:	f240 8108 	bls.w	89c50 <__udivmoddi4+0x2a4>
   89a40:	3802      	subs	r0, #2
   89a42:	443c      	add	r4, r7
   89a44:	2100      	movs	r1, #0
   89a46:	1ae4      	subs	r4, r4, r3
   89a48:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   89a4c:	2d00      	cmp	r5, #0
   89a4e:	d062      	beq.n	89b16 <__udivmoddi4+0x16a>
   89a50:	2300      	movs	r3, #0
   89a52:	fa24 f40e 	lsr.w	r4, r4, lr
   89a56:	602c      	str	r4, [r5, #0]
   89a58:	606b      	str	r3, [r5, #4]
   89a5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89a5e:	428b      	cmp	r3, r1
   89a60:	d907      	bls.n	89a72 <__udivmoddi4+0xc6>
   89a62:	2d00      	cmp	r5, #0
   89a64:	d055      	beq.n	89b12 <__udivmoddi4+0x166>
   89a66:	2100      	movs	r1, #0
   89a68:	e885 0041 	stmia.w	r5, {r0, r6}
   89a6c:	4608      	mov	r0, r1
   89a6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89a72:	fab3 f183 	clz	r1, r3
   89a76:	2900      	cmp	r1, #0
   89a78:	f040 808f 	bne.w	89b9a <__udivmoddi4+0x1ee>
   89a7c:	42b3      	cmp	r3, r6
   89a7e:	d302      	bcc.n	89a86 <__udivmoddi4+0xda>
   89a80:	4282      	cmp	r2, r0
   89a82:	f200 80fc 	bhi.w	89c7e <__udivmoddi4+0x2d2>
   89a86:	1a84      	subs	r4, r0, r2
   89a88:	eb66 0603 	sbc.w	r6, r6, r3
   89a8c:	2001      	movs	r0, #1
   89a8e:	46b4      	mov	ip, r6
   89a90:	2d00      	cmp	r5, #0
   89a92:	d040      	beq.n	89b16 <__udivmoddi4+0x16a>
   89a94:	e885 1010 	stmia.w	r5, {r4, ip}
   89a98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89a9c:	b912      	cbnz	r2, 89aa4 <__udivmoddi4+0xf8>
   89a9e:	2701      	movs	r7, #1
   89aa0:	fbb7 f7f2 	udiv	r7, r7, r2
   89aa4:	fab7 fe87 	clz	lr, r7
   89aa8:	f1be 0f00 	cmp.w	lr, #0
   89aac:	d135      	bne.n	89b1a <__udivmoddi4+0x16e>
   89aae:	2101      	movs	r1, #1
   89ab0:	1bf6      	subs	r6, r6, r7
   89ab2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   89ab6:	fa1f f887 	uxth.w	r8, r7
   89aba:	fbb6 f2fc 	udiv	r2, r6, ip
   89abe:	fb0c 6612 	mls	r6, ip, r2, r6
   89ac2:	fb08 f002 	mul.w	r0, r8, r2
   89ac6:	0c23      	lsrs	r3, r4, #16
   89ac8:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
   89acc:	42b0      	cmp	r0, r6
   89ace:	d907      	bls.n	89ae0 <__udivmoddi4+0x134>
   89ad0:	19f6      	adds	r6, r6, r7
   89ad2:	f102 33ff 	add.w	r3, r2, #4294967295
   89ad6:	d202      	bcs.n	89ade <__udivmoddi4+0x132>
   89ad8:	42b0      	cmp	r0, r6
   89ada:	f200 80d2 	bhi.w	89c82 <__udivmoddi4+0x2d6>
   89ade:	461a      	mov	r2, r3
   89ae0:	1a36      	subs	r6, r6, r0
   89ae2:	fbb6 f0fc 	udiv	r0, r6, ip
   89ae6:	fb0c 6610 	mls	r6, ip, r0, r6
   89aea:	fb08 f800 	mul.w	r8, r8, r0
   89aee:	b2a3      	uxth	r3, r4
   89af0:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
   89af4:	45a0      	cmp	r8, r4
   89af6:	d907      	bls.n	89b08 <__udivmoddi4+0x15c>
   89af8:	19e4      	adds	r4, r4, r7
   89afa:	f100 33ff 	add.w	r3, r0, #4294967295
   89afe:	d202      	bcs.n	89b06 <__udivmoddi4+0x15a>
   89b00:	45a0      	cmp	r8, r4
   89b02:	f200 80b9 	bhi.w	89c78 <__udivmoddi4+0x2cc>
   89b06:	4618      	mov	r0, r3
   89b08:	eba4 0408 	sub.w	r4, r4, r8
   89b0c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
   89b10:	e79c      	b.n	89a4c <__udivmoddi4+0xa0>
   89b12:	4629      	mov	r1, r5
   89b14:	4628      	mov	r0, r5
   89b16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89b1a:	fa07 f70e 	lsl.w	r7, r7, lr
   89b1e:	f1ce 0320 	rsb	r3, lr, #32
   89b22:	fa26 f203 	lsr.w	r2, r6, r3
   89b26:	ea4f 4c17 	mov.w	ip, r7, lsr #16
   89b2a:	fbb2 f1fc 	udiv	r1, r2, ip
   89b2e:	fa1f f887 	uxth.w	r8, r7
   89b32:	fb0c 2211 	mls	r2, ip, r1, r2
   89b36:	fa06 f60e 	lsl.w	r6, r6, lr
   89b3a:	fa20 f303 	lsr.w	r3, r0, r3
   89b3e:	fb01 f908 	mul.w	r9, r1, r8
   89b42:	4333      	orrs	r3, r6
   89b44:	0c1e      	lsrs	r6, r3, #16
   89b46:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   89b4a:	45b1      	cmp	r9, r6
   89b4c:	fa00 f40e 	lsl.w	r4, r0, lr
   89b50:	d909      	bls.n	89b66 <__udivmoddi4+0x1ba>
   89b52:	19f6      	adds	r6, r6, r7
   89b54:	f101 32ff 	add.w	r2, r1, #4294967295
   89b58:	f080 808c 	bcs.w	89c74 <__udivmoddi4+0x2c8>
   89b5c:	45b1      	cmp	r9, r6
   89b5e:	f240 8089 	bls.w	89c74 <__udivmoddi4+0x2c8>
   89b62:	3902      	subs	r1, #2
   89b64:	443e      	add	r6, r7
   89b66:	eba6 0609 	sub.w	r6, r6, r9
   89b6a:	fbb6 f0fc 	udiv	r0, r6, ip
   89b6e:	fb0c 6210 	mls	r2, ip, r0, r6
   89b72:	fb00 f908 	mul.w	r9, r0, r8
   89b76:	b29e      	uxth	r6, r3
   89b78:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
   89b7c:	45b1      	cmp	r9, r6
   89b7e:	d907      	bls.n	89b90 <__udivmoddi4+0x1e4>
   89b80:	19f6      	adds	r6, r6, r7
   89b82:	f100 33ff 	add.w	r3, r0, #4294967295
   89b86:	d271      	bcs.n	89c6c <__udivmoddi4+0x2c0>
   89b88:	45b1      	cmp	r9, r6
   89b8a:	d96f      	bls.n	89c6c <__udivmoddi4+0x2c0>
   89b8c:	3802      	subs	r0, #2
   89b8e:	443e      	add	r6, r7
   89b90:	eba6 0609 	sub.w	r6, r6, r9
   89b94:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
   89b98:	e78f      	b.n	89aba <__udivmoddi4+0x10e>
   89b9a:	f1c1 0720 	rsb	r7, r1, #32
   89b9e:	fa22 f807 	lsr.w	r8, r2, r7
   89ba2:	408b      	lsls	r3, r1
   89ba4:	ea48 0303 	orr.w	r3, r8, r3
   89ba8:	fa26 f407 	lsr.w	r4, r6, r7
   89bac:	ea4f 4e13 	mov.w	lr, r3, lsr #16
   89bb0:	fbb4 f9fe 	udiv	r9, r4, lr
   89bb4:	fa1f fc83 	uxth.w	ip, r3
   89bb8:	fb0e 4419 	mls	r4, lr, r9, r4
   89bbc:	408e      	lsls	r6, r1
   89bbe:	fa20 f807 	lsr.w	r8, r0, r7
   89bc2:	fb09 fa0c 	mul.w	sl, r9, ip
   89bc6:	ea48 0806 	orr.w	r8, r8, r6
   89bca:	ea4f 4618 	mov.w	r6, r8, lsr #16
   89bce:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
   89bd2:	45a2      	cmp	sl, r4
   89bd4:	fa02 f201 	lsl.w	r2, r2, r1
   89bd8:	fa00 f601 	lsl.w	r6, r0, r1
   89bdc:	d908      	bls.n	89bf0 <__udivmoddi4+0x244>
   89bde:	18e4      	adds	r4, r4, r3
   89be0:	f109 30ff 	add.w	r0, r9, #4294967295
   89be4:	d244      	bcs.n	89c70 <__udivmoddi4+0x2c4>
   89be6:	45a2      	cmp	sl, r4
   89be8:	d942      	bls.n	89c70 <__udivmoddi4+0x2c4>
   89bea:	f1a9 0902 	sub.w	r9, r9, #2
   89bee:	441c      	add	r4, r3
   89bf0:	eba4 040a 	sub.w	r4, r4, sl
   89bf4:	fbb4 f0fe 	udiv	r0, r4, lr
   89bf8:	fb0e 4410 	mls	r4, lr, r0, r4
   89bfc:	fb00 fc0c 	mul.w	ip, r0, ip
   89c00:	fa1f f888 	uxth.w	r8, r8
   89c04:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
   89c08:	45a4      	cmp	ip, r4
   89c0a:	d907      	bls.n	89c1c <__udivmoddi4+0x270>
   89c0c:	18e4      	adds	r4, r4, r3
   89c0e:	f100 3eff 	add.w	lr, r0, #4294967295
   89c12:	d229      	bcs.n	89c68 <__udivmoddi4+0x2bc>
   89c14:	45a4      	cmp	ip, r4
   89c16:	d927      	bls.n	89c68 <__udivmoddi4+0x2bc>
   89c18:	3802      	subs	r0, #2
   89c1a:	441c      	add	r4, r3
   89c1c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   89c20:	fba0 8902 	umull	r8, r9, r0, r2
   89c24:	eba4 0c0c 	sub.w	ip, r4, ip
   89c28:	45cc      	cmp	ip, r9
   89c2a:	46c2      	mov	sl, r8
   89c2c:	46ce      	mov	lr, r9
   89c2e:	d315      	bcc.n	89c5c <__udivmoddi4+0x2b0>
   89c30:	d012      	beq.n	89c58 <__udivmoddi4+0x2ac>
   89c32:	b155      	cbz	r5, 89c4a <__udivmoddi4+0x29e>
   89c34:	ebb6 030a 	subs.w	r3, r6, sl
   89c38:	eb6c 060e 	sbc.w	r6, ip, lr
   89c3c:	fa06 f707 	lsl.w	r7, r6, r7
   89c40:	40cb      	lsrs	r3, r1
   89c42:	431f      	orrs	r7, r3
   89c44:	40ce      	lsrs	r6, r1
   89c46:	602f      	str	r7, [r5, #0]
   89c48:	606e      	str	r6, [r5, #4]
   89c4a:	2100      	movs	r1, #0
   89c4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   89c50:	4610      	mov	r0, r2
   89c52:	e6f7      	b.n	89a44 <__udivmoddi4+0x98>
   89c54:	4689      	mov	r9, r1
   89c56:	e6de      	b.n	89a16 <__udivmoddi4+0x6a>
   89c58:	4546      	cmp	r6, r8
   89c5a:	d2ea      	bcs.n	89c32 <__udivmoddi4+0x286>
   89c5c:	ebb8 0a02 	subs.w	sl, r8, r2
   89c60:	eb69 0e03 	sbc.w	lr, r9, r3
   89c64:	3801      	subs	r0, #1
   89c66:	e7e4      	b.n	89c32 <__udivmoddi4+0x286>
   89c68:	4670      	mov	r0, lr
   89c6a:	e7d7      	b.n	89c1c <__udivmoddi4+0x270>
   89c6c:	4618      	mov	r0, r3
   89c6e:	e78f      	b.n	89b90 <__udivmoddi4+0x1e4>
   89c70:	4681      	mov	r9, r0
   89c72:	e7bd      	b.n	89bf0 <__udivmoddi4+0x244>
   89c74:	4611      	mov	r1, r2
   89c76:	e776      	b.n	89b66 <__udivmoddi4+0x1ba>
   89c78:	3802      	subs	r0, #2
   89c7a:	443c      	add	r4, r7
   89c7c:	e744      	b.n	89b08 <__udivmoddi4+0x15c>
   89c7e:	4608      	mov	r0, r1
   89c80:	e706      	b.n	89a90 <__udivmoddi4+0xe4>
   89c82:	3a02      	subs	r2, #2
   89c84:	443e      	add	r6, r7
   89c86:	e72b      	b.n	89ae0 <__udivmoddi4+0x134>

00089c88 <__aeabi_idiv0>:
   89c88:	4770      	bx	lr
   89c8a:	bf00      	nop
   89c8c:	78383025 	.word	0x78383025
   89c90:	00000000 	.word	0x00000000
   89c94:	206e754a 	.word	0x206e754a
   89c98:	32203931 	.word	0x32203931
   89c9c:	00383130 	.word	0x00383130
   89ca0:	333a3631 	.word	0x333a3631
   89ca4:	30333a30 	.word	0x30333a30
   89ca8:	00000000 	.word	0x00000000
   89cac:	70696843 	.word	0x70696843
   89cb0:	554f4853 	.word	0x554f4853
   89cb4:	20524554 	.word	0x20524554
   89cb8:	32335743 	.word	0x32335743
   89cbc:	61422031 	.word	0x61422031
   89cc0:	73696c6c 	.word	0x73696c6c
   89cc4:	20636974 	.word	0x20636974
   89cc8:	206c6547 	.word	0x206c6547
   89ccc:	696c6e4f 	.word	0x696c6e4f
   89cd0:	202e656e 	.word	0x202e656e
   89cd4:	6d726946 	.word	0x6d726946
   89cd8:	65726177 	.word	0x65726177
   89cdc:	69756220 	.word	0x69756220
   89ce0:	203a646c 	.word	0x203a646c
   89ce4:	252f7325 	.word	0x252f7325
   89ce8:	00000a73 	.word	0x00000a73
   89cec:	69726553 	.word	0x69726553
   89cf0:	6e206c61 	.word	0x6e206c61
   89cf4:	65626d75 	.word	0x65626d75
   89cf8:	25203a72 	.word	0x25203a72
   89cfc:	00000a73 	.word	0x00000a73
   89d00:	74746553 	.word	0x74746553
   89d04:	20676e69 	.word	0x20676e69
   89d08:	53207075 	.word	0x53207075
   89d0c:	204d4152 	.word	0x204d4152
   89d10:	6d6d6f43 	.word	0x6d6d6f43
   89d14:	63696e75 	.word	0x63696e75
   89d18:	6f697461 	.word	0x6f697461
   89d1c:	00000a6e 	.word	0x00000a6e
   89d20:	6e657645 	.word	0x6e657645
   89d24:	6f4c2074 	.word	0x6f4c2074
   89d28:	4520706f 	.word	0x4520706f
   89d2c:	7265746e 	.word	0x7265746e
   89d30:	202c6465 	.word	0x202c6465
   89d34:	74696177 	.word	0x74696177
   89d38:	2e676e69 	.word	0x2e676e69
   89d3c:	000a2e2e 	.word	0x000a2e2e
   89d40:	00000000 	.word	0x00000000
   89d44:	00000000 	.word	0x00000000
   89d48:	aaaaaa00 	.word	0xaaaaaa00
   89d4c:	aaaaaaaa 	.word	0xaaaaaaaa
   89d50:	eeeeeeaa 	.word	0xeeeeeeaa
   89d54:	eeeeeeee 	.word	0xeeeeeeee
   89d58:	fffffeee 	.word	0xfffffeee
   89d5c:	ffffffff 	.word	0xffffffff
   89d60:	ffffffff 	.word	0xffffffff
   89d64:	dfbf7fff 	.word	0xdfbf7fff
   89d68:	fdfbf7ef 	.word	0xfdfbf7ef
   89d6c:	dfbf7efc 	.word	0xdfbf7efc
   89d70:	fdfbf7ef 	.word	0xfdfbf7ef
   89d74:	0000007e 	.word	0x0000007e

00089d78 <_global_impure_ptr>:
   89d78:	200002e0 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   89d88:	006e616e 33323130 37363534 42413938     nan.0123456789AB
   89d98:	46454443 00000000 33323130 37363534     CDEF....01234567
   89da8:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
   89db8:	0000296c 00000030                       l)..0...

00089dc0 <blanks.7223>:
   89dc0:	20202020 20202020 20202020 20202020                     

00089dd0 <zeroes.7224>:
   89dd0:	30303030 30303030 30303030 30303030     0000000000000000

00089de0 <blanks.7217>:
   89de0:	20202020 20202020 20202020 20202020                     

00089df0 <zeroes.7218>:
   89df0:	30303030 30303030 30303030 30303030     0000000000000000
   89e00:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   89e10:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00089e20 <__mprec_bigtens>:
   89e20:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   89e30:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   89e40:	7f73bf3c 75154fdd                       <.s..O.u

00089e48 <__mprec_tens>:
   89e48:	00000000 3ff00000 00000000 40240000     .......?......$@
   89e58:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   89e68:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   89e78:	00000000 412e8480 00000000 416312d0     .......A......cA
   89e88:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   89e98:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   89ea8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   89eb8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   89ec8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   89ed8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   89ee8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   89ef8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   89f08:	79d99db4 44ea7843                       ...yCx.D

00089f10 <p05.6055>:
   89f10:	00000005 00000019 0000007d              ........}...

00089f1c <_ctype_>:
   89f1c:	20202000 20202020 28282020 20282828     .         ((((( 
   89f2c:	20202020 20202020 20202020 20202020                     
   89f3c:	10108820 10101010 10101010 10101010      ...............
   89f4c:	04040410 04040404 10040404 10101010     ................
   89f5c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   89f6c:	01010101 01010101 01010101 10101010     ................
   89f7c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   89f8c:	02020202 02020202 02020202 10101010     ................
   89f9c:	00000020 00000000 00000000 00000000      ...............
   89fac:	00000000 00000000 00000000 00000000     ................
   89fbc:	00000000 00000000 00000000 00000000     ................
   89fcc:	00000000 00000000 00000000 00000000     ................
   89fdc:	00000000 00000000 00000000 00000000     ................
   89fec:	00000000 00000000 00000000 00000000     ................
   89ffc:	00000000 00000000 00000000 00000000     ................
   8a00c:	00000000 00000000 00000000 00000000     ................
   8a01c:	00000000                                ....

0008a020 <_init>:
   8a020:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a022:	bf00      	nop
   8a024:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a026:	bc08      	pop	{r3}
   8a028:	469e      	mov	lr, r3
   8a02a:	4770      	bx	lr

0008a02c <__init_array_start>:
   8a02c:	00086005 	.word	0x00086005

0008a030 <__frame_dummy_init_array_entry>:
   8a030:	000800e1                                ....

0008a034 <_fini>:
   8a034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a036:	bf00      	nop
   8a038:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a03a:	bc08      	pop	{r3}
   8a03c:	469e      	mov	lr, r3
   8a03e:	4770      	bx	lr

0008a040 <__fini_array_start>:
   8a040:	000800bd 	.word	0x000800bd

Disassembly of section .relocate:

20000000 <efc_perform_read_sequence>:
__no_inline
RAMFUNC
uint32_t efc_perform_read_sequence(Efc *p_efc,
		uint32_t ul_cmd_st, uint32_t ul_cmd_sp,
		uint32_t *p_ul_buf, uint32_t ul_size)
{
20000000:	b470      	push	{r4, r5, r6}
	volatile uint32_t ul_status;
	uint32_t ul_cnt;

#if (SAM3U4 || SAM3XA || SAM4SD16 || SAM4SD32 || SAM4C32)
	uint32_t *p_ul_data =
			(uint32_t *) ((p_efc == EFC0) ?
20000002:	4c1c      	ldr	r4, [pc, #112]	; (20000074 <efc_perform_read_sequence+0x74>)
{
20000004:	b083      	sub	sp, #12
			(uint32_t *) ((p_efc == EFC0) ?
20000006:	42a0      	cmp	r0, r4
20000008:	bf0c      	ite	eq
2000000a:	f44f 2400 	moveq.w	r4, #524288	; 0x80000
2000000e:	f44f 1480 	movne.w	r4, #1048576	; 0x100000
{
20000012:	9d06      	ldr	r5, [sp, #24]
	uint32_t *p_ul_data = (uint32_t *) READ_BUFF_ADDR;
#else
	return EFC_RC_NOT_SUPPORT;
#endif

	if (p_ul_buf == NULL) {
20000014:	b34b      	cbz	r3, 2000006a <efc_perform_read_sequence+0x6a>
		return EFC_RC_INVALID;
	}

	p_efc->EEFC_FMR |= (0x1u << 16);
20000016:	6806      	ldr	r6, [r0, #0]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	p_efc->EEFC_FCR = EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
#else
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
20000018:	b2c9      	uxtb	r1, r1
2000001a:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
	p_efc->EEFC_FMR |= (0x1u << 16);
2000001e:	f446 3680 	orr.w	r6, r6, #65536	; 0x10000
20000022:	6006      	str	r6, [r0, #0]
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
20000024:	6041      	str	r1, [r0, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register
	 * (EEFC_FSR) falls.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
20000026:	6881      	ldr	r1, [r0, #8]
20000028:	9101      	str	r1, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) == EEFC_FSR_FRDY);
2000002a:	9901      	ldr	r1, [sp, #4]
2000002c:	07c9      	lsls	r1, r1, #31
2000002e:	d4fa      	bmi.n	20000026 <efc_perform_read_sequence+0x26>

	/* The data is located in the first address of the Flash
	 * memory mapping.
	 */
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
20000030:	b14d      	cbz	r5, 20000046 <efc_perform_read_sequence+0x46>
20000032:	4621      	mov	r1, r4
20000034:	3b04      	subs	r3, #4
20000036:	eb04 0585 	add.w	r5, r4, r5, lsl #2
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
2000003a:	f851 4b04 	ldr.w	r4, [r1], #4
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
2000003e:	42a9      	cmp	r1, r5
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
20000040:	f843 4f04 	str.w	r4, [r3, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
20000044:	d1f9      	bne.n	2000003a <efc_perform_read_sequence+0x3a>
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
#else
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
20000046:	b2d2      	uxtb	r2, r2
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
20000048:	f042 42b4 	orr.w	r2, r2, #1509949440	; 0x5a000000
	p_efc->EEFC_FCR =
2000004c:	6042      	str	r2, [r0, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register (EEFC_FSR)
	 * rises.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
2000004e:	6883      	ldr	r3, [r0, #8]
20000050:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000052:	9b01      	ldr	r3, [sp, #4]
20000054:	07db      	lsls	r3, r3, #31
20000056:	d5fa      	bpl.n	2000004e <efc_perform_read_sequence+0x4e>

	p_efc->EEFC_FMR &= ~(0x1u << 16);

	return EFC_RC_OK;
20000058:	2200      	movs	r2, #0
	p_efc->EEFC_FMR &= ~(0x1u << 16);
2000005a:	6803      	ldr	r3, [r0, #0]
2000005c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
20000060:	6003      	str	r3, [r0, #0]
}
20000062:	4610      	mov	r0, r2
20000064:	b003      	add	sp, #12
20000066:	bc70      	pop	{r4, r5, r6}
20000068:	4770      	bx	lr
		return EFC_RC_INVALID;
2000006a:	2202      	movs	r2, #2
}
2000006c:	4610      	mov	r0, r2
2000006e:	b003      	add	sp, #12
20000070:	bc70      	pop	{r4, r5, r6}
20000072:	4770      	bx	lr
20000074:	400e0800 	.word	0x400e0800

20000078 <efc_write_fmr>:
 */
__no_inline
RAMFUNC
void efc_write_fmr(Efc *p_efc, uint32_t ul_fmr)
{
	p_efc->EEFC_FMR = ul_fmr;
20000078:	6001      	str	r1, [r0, #0]
2000007a:	4770      	bx	lr

2000007c <efc_perform_fcr>:
 * \return The current status.
 */
__no_inline
RAMFUNC
uint32_t efc_perform_fcr(Efc *p_efc, uint32_t ul_fcr)
{
2000007c:	b082      	sub	sp, #8
	volatile uint32_t ul_status;

	p_efc->EEFC_FCR = ul_fcr;
2000007e:	6041      	str	r1, [r0, #4]
	do {
		ul_status = p_efc->EEFC_FSR;
20000080:	6883      	ldr	r3, [r0, #8]
20000082:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000084:	9b01      	ldr	r3, [sp, #4]
20000086:	07db      	lsls	r3, r3, #31
20000088:	d5fa      	bpl.n	20000080 <efc_perform_fcr+0x4>

	return (ul_status & EEFC_ERROR_FLAGS);
2000008a:	9801      	ldr	r0, [sp, #4]
}
2000008c:	f000 0006 	and.w	r0, r0, #6
20000090:	b002      	add	sp, #8
20000092:	4770      	bx	lr

20000094 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000094:	f44f 6280 	mov.w	r2, #1024	; 0x400
20000098:	481a      	ldr	r0, [pc, #104]	; (20000104 <SystemInit+0x70>)
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000009a:	491b      	ldr	r1, [pc, #108]	; (20000108 <SystemInit+0x74>)
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2000009c:	4b1b      	ldr	r3, [pc, #108]	; (2000010c <SystemInit+0x78>)
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
2000009e:	6002      	str	r2, [r0, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200000a0:	600a      	str	r2, [r1, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
200000a2:	6a1a      	ldr	r2, [r3, #32]
200000a4:	01d2      	lsls	r2, r2, #7
200000a6:	d405      	bmi.n	200000b4 <SystemInit+0x20>
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
200000a8:	461a      	mov	r2, r3
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000aa:	4919      	ldr	r1, [pc, #100]	; (20000110 <SystemInit+0x7c>)
200000ac:	6219      	str	r1, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
200000ae:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000b0:	07d8      	lsls	r0, r3, #31
200000b2:	d5fc      	bpl.n	200000ae <SystemInit+0x1a>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000b4:	4b15      	ldr	r3, [pc, #84]	; (2000010c <SystemInit+0x78>)
200000b6:	4917      	ldr	r1, [pc, #92]	; (20000114 <SystemInit+0x80>)
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
200000b8:	461a      	mov	r2, r3
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
200000ba:	6219      	str	r1, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
200000bc:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000be:	03d9      	lsls	r1, r3, #15
200000c0:	d5fc      	bpl.n	200000bc <SystemInit+0x28>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000c2:	6b13      	ldr	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000c4:	4811      	ldr	r0, [pc, #68]	; (2000010c <SystemInit+0x78>)
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
200000c6:	f023 0303 	bic.w	r3, r3, #3
200000ca:	f043 0301 	orr.w	r3, r3, #1
200000ce:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000d0:	6e83      	ldr	r3, [r0, #104]	; 0x68
200000d2:	071b      	lsls	r3, r3, #28
200000d4:	d5fc      	bpl.n	200000d0 <SystemInit+0x3c>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000d6:	4b10      	ldr	r3, [pc, #64]	; (20000118 <SystemInit+0x84>)
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000d8:	490c      	ldr	r1, [pc, #48]	; (2000010c <SystemInit+0x78>)
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
200000da:	6283      	str	r3, [r0, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
200000dc:	6e8b      	ldr	r3, [r1, #104]	; 0x68
200000de:	0798      	lsls	r0, r3, #30
200000e0:	d5fc      	bpl.n	200000dc <SystemInit+0x48>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000e2:	2311      	movs	r3, #17
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000e4:	4a09      	ldr	r2, [pc, #36]	; (2000010c <SystemInit+0x78>)
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
200000e6:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000e8:	6e93      	ldr	r3, [r2, #104]	; 0x68
200000ea:	0719      	lsls	r1, r3, #28
200000ec:	d5fc      	bpl.n	200000e8 <SystemInit+0x54>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000ee:	2312      	movs	r3, #18
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000f0:	4906      	ldr	r1, [pc, #24]	; (2000010c <SystemInit+0x78>)
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
200000f2:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
200000f4:	6e8b      	ldr	r3, [r1, #104]	; 0x68
200000f6:	071b      	lsls	r3, r3, #28
200000f8:	d5fc      	bpl.n	200000f4 <SystemInit+0x60>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
200000fa:	4b08      	ldr	r3, [pc, #32]	; (2000011c <SystemInit+0x88>)
200000fc:	4a08      	ldr	r2, [pc, #32]	; (20000120 <SystemInit+0x8c>)
200000fe:	601a      	str	r2, [r3, #0]
20000100:	4770      	bx	lr
20000102:	bf00      	nop
20000104:	400e0800 	.word	0x400e0800
20000108:	400e0a00 	.word	0x400e0a00
2000010c:	400e0400 	.word	0x400e0400
20000110:	00370809 	.word	0x00370809
20000114:	01370809 	.word	0x01370809
20000118:	200f3f01 	.word	0x200f3f01
2000011c:	200002d4 	.word	0x200002d4
20000120:	05b8d800 	.word	0x05b8d800

20000124 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
20000124:	4b14      	ldr	r3, [pc, #80]	; (20000178 <system_init_flash+0x54>)
20000126:	4298      	cmp	r0, r3
20000128:	d918      	bls.n	2000015c <system_init_flash+0x38>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
2000012a:	4b14      	ldr	r3, [pc, #80]	; (2000017c <system_init_flash+0x58>)
2000012c:	4298      	cmp	r0, r3
2000012e:	d90e      	bls.n	2000014e <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
20000130:	4b13      	ldr	r3, [pc, #76]	; (20000180 <system_init_flash+0x5c>)
20000132:	4298      	cmp	r0, r3
20000134:	d918      	bls.n	20000168 <system_init_flash+0x44>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
20000136:	4b13      	ldr	r3, [pc, #76]	; (20000184 <system_init_flash+0x60>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000138:	4913      	ldr	r1, [pc, #76]	; (20000188 <system_init_flash+0x64>)
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
2000013a:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
2000013c:	bf94      	ite	ls
2000013e:	f44f 7340 	movls.w	r3, #768	; 0x300
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000142:	f44f 6380 	movhi.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20000146:	4a11      	ldr	r2, [pc, #68]	; (2000018c <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20000148:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2000014a:	6013      	str	r3, [r2, #0]
2000014c:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
2000014e:	f44f 7380 	mov.w	r3, #256	; 0x100
20000152:	490d      	ldr	r1, [pc, #52]	; (20000188 <system_init_flash+0x64>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
20000154:	4a0d      	ldr	r2, [pc, #52]	; (2000018c <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
20000156:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
20000158:	6013      	str	r3, [r2, #0]
2000015a:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
2000015c:	2300      	movs	r3, #0
2000015e:	490a      	ldr	r1, [pc, #40]	; (20000188 <system_init_flash+0x64>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
20000160:	4a0a      	ldr	r2, [pc, #40]	; (2000018c <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
20000162:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
20000164:	6013      	str	r3, [r2, #0]
20000166:	4770      	bx	lr
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20000168:	f44f 7300 	mov.w	r3, #512	; 0x200
2000016c:	4906      	ldr	r1, [pc, #24]	; (20000188 <system_init_flash+0x64>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
2000016e:	4a07      	ldr	r2, [pc, #28]	; (2000018c <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20000170:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20000172:	6013      	str	r3, [r2, #0]
20000174:	4770      	bx	lr
20000176:	bf00      	nop
20000178:	016e35ff 	.word	0x016e35ff
2000017c:	026259ff 	.word	0x026259ff
20000180:	044aa1ff 	.word	0x044aa1ff
20000184:	0501bcff 	.word	0x0501bcff
20000188:	400e0800 	.word	0x400e0800
2000018c:	400e0a00 	.word	0x400e0a00

20000190 <usb_serial_number>:
20000190:	30303030 30303030 30303030 44414544     000000000000DEAD
200001a0:	46454542 00000000 00000000 00000000     BEEF............
200001b0:	00000100                                         .

200001b1 <main_b_vendor_enable>:
200001b1:	00000001                                         ...

200001b4 <sram_size>:
200001b4:	00400000                                ..@.

200001b8 <xram>:
200001b8:	60000000                                ...`

200001bc <udi_api_vendor>:
200001bc:	000827dd 00082799 000827ad 0008278d     .'...'...'...'..
200001cc:	00000000                                ....

200001d0 <udc_string_desc>:
200001d0:	00000300 00000000 00000000 00000000     ................
200001e0:	00000000 00000000 00000000 00000000     ................
200001f0:	00000000 00000000 00000000 00000000     ................
20000200:	00000000 00000000 00000000 00000000     ................
20000210:	00000000                                ....

20000214 <udc_string_desc_languageid>:
20000214:	04090304                                ....

20000218 <udc_string_manufacturer_name>:
20000218:	4177654e 65542045 6f6e6863 79676f6c     NewAE Technology
20000228:	636e4920 0000002e                        Inc....

20000230 <udc_string_product_name>:
20000230:	70696843 73696857 65726570 57432072     ChipWhisperer CW
20000240:	00303235                                520.

20000244 <g_interrupt_enabled>:
20000244:	00000001                                ....

20000248 <udc_config>:
20000248:	200002b0 20000268 200002b0 200002c4     ... h.. ... ... 
20000258:	20000260 00000000                       `.. ....

20000260 <udc_config_hs>:
20000260:	20000290 200002d0                       ... ... 

20000268 <udc_config_lsfs>:
20000268:	20000270 200002d0                       p.. ... 

20000270 <udc_desc_fs>:
20000270:	00200209 80000101 000409fa ffff0200     .. .............
20000280:	050700ff 00400281 02050700 00004002     ......@......@..

20000290 <udc_desc_hs>:
20000290:	00200209 80000101 000409fa ffff0200     .. .............
200002a0:	050700ff 02000281 02050700 00020002     ................

200002b0 <udc_device_desc>:
200002b0:	02000112 40000000 c3052b3e 02010100     .......@>+......
200002c0:	00000103                                ....

200002c4 <udc_device_qual>:
200002c4:	0200060a 40000000 00000001              .......@....

200002d0 <udi_apis>:
200002d0:	200001bc                                ... 

200002d4 <SystemCoreClock>:
200002d4:	003d0900                                ..=.

200002d8 <_impure_ptr>:
200002d8:	200002e0 00000000                       ... ....

200002e0 <impure_data>:
200002e0:	00000000 200005cc 20000634 2000069c     ....... 4.. ... 
200002f0:	00000000 00000000 00000000 00000000     ................
20000300:	00000000 00000000 00000000 00000000     ................
20000310:	00000000 00000000 00000000 00000000     ................
20000320:	00000000 00000000 00000000 00000000     ................
20000330:	00000000 00000000 00000000 00000000     ................
20000340:	00000000 00000000 00000000 00000000     ................
20000350:	00000000 00000000 00000000 00000000     ................
20000360:	00000000 00000000 00000000 00000000     ................
20000370:	00000000 00000000 00000000 00000000     ................
20000380:	00000000 00000000 00000001 00000000     ................
20000390:	abcd330e e66d1234 0005deec 0000000b     .3..4.m.........
200003a0:	00000000 00000000 00000000 00000000     ................
200003b0:	00000000 00000000 00000000 00000000     ................
200003c0:	00000000 00000000 00000000 00000000     ................
200003d0:	00000000 00000000 00000000 00000000     ................
200003e0:	00000000 00000000 00000000 00000000     ................
200003f0:	00000000 00000000 00000000 00000000     ................
20000400:	00000000 00000000 00000000 00000000     ................
20000410:	00000000 00000000 00000000 00000000     ................
20000420:	00000000 00000000 00000000 00000000     ................
20000430:	00000000 00000000 00000000 00000000     ................
20000440:	00000000 00000000 00000000 00000000     ................
20000450:	00000000 00000000 00000000 00000000     ................
20000460:	00000000 00000000 00000000 00000000     ................
20000470:	00000000 00000000 00000000 00000000     ................
20000480:	00000000 00000000 00000000 00000000     ................
20000490:	00000000 00000000 00000000 00000000     ................
200004a0:	00000000 00000000 00000000 00000000     ................
200004b0:	00000000 00000000 00000000 00000000     ................
200004c0:	00000000 00000000 00000000 00000000     ................
200004d0:	00000000 00000000 00000000 00000000     ................
200004e0:	00000000 00000000 00000000 00000000     ................
200004f0:	00000000 00000000 00000000 00000000     ................
20000500:	00000000 00000000 00000000 00000000     ................
20000510:	00000000 00000000 00000000 00000000     ................
20000520:	00000000 00000000 00000000 00000000     ................
20000530:	00000000 00000000 00000000 00000000     ................
20000540:	00000000 00000000 00000000 00000000     ................
20000550:	00000000 00000000 00000000 00000000     ................
20000560:	00000000 00000000 00000000 00000000     ................
20000570:	00000000 00000000 00000000 00000000     ................
20000580:	00000000 00000000 00000000 00000000     ................
20000590:	00000000 00000000 00000000 00000000     ................
200005a0:	00000000 00000000 00000000 00000000     ................
200005b0:	00000000 00000000 00000000 00000000     ................
200005c0:	00000000 00000000 00000000 00000000     ................
200005d0:	00000000 00000000 00000000 00000000     ................
200005e0:	00000000 00000000 00000000 00000000     ................
200005f0:	00000000 00000000 00000000 00000000     ................
20000600:	00000000 00000000 00000000 00000000     ................
20000610:	00000000 00000000 00000000 00000000     ................
20000620:	00000000 00000000 00000000 00000000     ................
20000630:	00000000 00000000 00000000 00000000     ................
20000640:	00000000 00000000 00000000 00000000     ................
20000650:	00000000 00000000 00000000 00000000     ................
20000660:	00000000 00000000 00000000 00000000     ................
20000670:	00000000 00000000 00000000 00000000     ................
20000680:	00000000 00000000 00000000 00000000     ................
20000690:	00000000 00000000 00000000 00000000     ................
200006a0:	00000000 00000000 00000000 00000000     ................
200006b0:	00000000 00000000 00000000 00000000     ................
200006c0:	00000000 00000000 00000000 00000000     ................
200006d0:	00000000 00000000 00000000 00000000     ................
200006e0:	00000000 00000000 00000000 00000000     ................
200006f0:	00000000 00000000 00000000 00000000     ................
20000700:	00000000 00000000                       ........

20000708 <__atexit_recursive_mutex>:
20000708:	200035b8                                .5. 

2000070c <__global_locale>:
2000070c:	00000043 00000000 00000000 00000000     C...............
2000071c:	00000000 00000000 00000000 00000000     ................
2000072c:	00000043 00000000 00000000 00000000     C...............
2000073c:	00000000 00000000 00000000 00000000     ................
2000074c:	00000043 00000000 00000000 00000000     C...............
2000075c:	00000000 00000000 00000000 00000000     ................
2000076c:	00000043 00000000 00000000 00000000     C...............
2000077c:	00000000 00000000 00000000 00000000     ................
2000078c:	00000043 00000000 00000000 00000000     C...............
2000079c:	00000000 00000000 00000000 00000000     ................
200007ac:	00000043 00000000 00000000 00000000     C...............
200007bc:	00000000 00000000 00000000 00000000     ................
200007cc:	00000043 00000000 00000000 00000000     C...............
200007dc:	00000000 00000000 00000000 00000000     ................
200007ec:	00088d69 00087f65 00000000 00089f1c     i...e...........
200007fc:	00089e1c 00089ca8 00089ca8 00089ca8     ................
2000080c:	00089ca8 00089ca8 00089ca8 00089ca8     ................
2000081c:	00089ca8 00089ca8 ffffffff ffffffff     ................
2000082c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
2000083c:	00000000 00000000 00000000 00000000     ................
2000084c:	00000000 00000000 53410000 00494943     ..........ASCII.
2000085c:	00000000 00000000 00000000 00000000     ................
2000086c:	00000000 00000000 00000000              ............

20000878 <__malloc_av_>:
20000878:	00000000 00000000 20000878 20000878     ........x.. x.. 
20000888:	20000880 20000880 20000888 20000888     ... ... ... ... 
20000898:	20000890 20000890 20000898 20000898     ... ... ... ... 
200008a8:	200008a0 200008a0 200008a8 200008a8     ... ... ... ... 
200008b8:	200008b0 200008b0 200008b8 200008b8     ... ... ... ... 
200008c8:	200008c0 200008c0 200008c8 200008c8     ... ... ... ... 
200008d8:	200008d0 200008d0 200008d8 200008d8     ... ... ... ... 
200008e8:	200008e0 200008e0 200008e8 200008e8     ... ... ... ... 
200008f8:	200008f0 200008f0 200008f8 200008f8     ... ... ... ... 
20000908:	20000900 20000900 20000908 20000908     ... ... ... ... 
20000918:	20000910 20000910 20000918 20000918     ... ... ... ... 
20000928:	20000920 20000920 20000928 20000928      ..  .. (.. (.. 
20000938:	20000930 20000930 20000938 20000938     0.. 0.. 8.. 8.. 
20000948:	20000940 20000940 20000948 20000948     @.. @.. H.. H.. 
20000958:	20000950 20000950 20000958 20000958     P.. P.. X.. X.. 
20000968:	20000960 20000960 20000968 20000968     `.. `.. h.. h.. 
20000978:	20000970 20000970 20000978 20000978     p.. p.. x.. x.. 
20000988:	20000980 20000980 20000988 20000988     ... ... ... ... 
20000998:	20000990 20000990 20000998 20000998     ... ... ... ... 
200009a8:	200009a0 200009a0 200009a8 200009a8     ... ... ... ... 
200009b8:	200009b0 200009b0 200009b8 200009b8     ... ... ... ... 
200009c8:	200009c0 200009c0 200009c8 200009c8     ... ... ... ... 
200009d8:	200009d0 200009d0 200009d8 200009d8     ... ... ... ... 
200009e8:	200009e0 200009e0 200009e8 200009e8     ... ... ... ... 
200009f8:	200009f0 200009f0 200009f8 200009f8     ... ... ... ... 
20000a08:	20000a00 20000a00 20000a08 20000a08     ... ... ... ... 
20000a18:	20000a10 20000a10 20000a18 20000a18     ... ... ... ... 
20000a28:	20000a20 20000a20 20000a28 20000a28      ..  .. (.. (.. 
20000a38:	20000a30 20000a30 20000a38 20000a38     0.. 0.. 8.. 8.. 
20000a48:	20000a40 20000a40 20000a48 20000a48     @.. @.. H.. H.. 
20000a58:	20000a50 20000a50 20000a58 20000a58     P.. P.. X.. X.. 
20000a68:	20000a60 20000a60 20000a68 20000a68     `.. `.. h.. h.. 
20000a78:	20000a70 20000a70 20000a78 20000a78     p.. p.. x.. x.. 
20000a88:	20000a80 20000a80 20000a88 20000a88     ... ... ... ... 
20000a98:	20000a90 20000a90 20000a98 20000a98     ... ... ... ... 
20000aa8:	20000aa0 20000aa0 20000aa8 20000aa8     ... ... ... ... 
20000ab8:	20000ab0 20000ab0 20000ab8 20000ab8     ... ... ... ... 
20000ac8:	20000ac0 20000ac0 20000ac8 20000ac8     ... ... ... ... 
20000ad8:	20000ad0 20000ad0 20000ad8 20000ad8     ... ... ... ... 
20000ae8:	20000ae0 20000ae0 20000ae8 20000ae8     ... ... ... ... 
20000af8:	20000af0 20000af0 20000af8 20000af8     ... ... ... ... 
20000b08:	20000b00 20000b00 20000b08 20000b08     ... ... ... ... 
20000b18:	20000b10 20000b10 20000b18 20000b18     ... ... ... ... 
20000b28:	20000b20 20000b20 20000b28 20000b28      ..  .. (.. (.. 
20000b38:	20000b30 20000b30 20000b38 20000b38     0.. 0.. 8.. 8.. 
20000b48:	20000b40 20000b40 20000b48 20000b48     @.. @.. H.. H.. 
20000b58:	20000b50 20000b50 20000b58 20000b58     P.. P.. X.. X.. 
20000b68:	20000b60 20000b60 20000b68 20000b68     `.. `.. h.. h.. 
20000b78:	20000b70 20000b70 20000b78 20000b78     p.. p.. x.. x.. 
20000b88:	20000b80 20000b80 20000b88 20000b88     ... ... ... ... 
20000b98:	20000b90 20000b90 20000b98 20000b98     ... ... ... ... 
20000ba8:	20000ba0 20000ba0 20000ba8 20000ba8     ... ... ... ... 
20000bb8:	20000bb0 20000bb0 20000bb8 20000bb8     ... ... ... ... 
20000bc8:	20000bc0 20000bc0 20000bc8 20000bc8     ... ... ... ... 
20000bd8:	20000bd0 20000bd0 20000bd8 20000bd8     ... ... ... ... 
20000be8:	20000be0 20000be0 20000be8 20000be8     ... ... ... ... 
20000bf8:	20000bf0 20000bf0 20000bf8 20000bf8     ... ... ... ... 
20000c08:	20000c00 20000c00 20000c08 20000c08     ... ... ... ... 
20000c18:	20000c10 20000c10 20000c18 20000c18     ... ... ... ... 
20000c28:	20000c20 20000c20 20000c28 20000c28      ..  .. (.. (.. 
20000c38:	20000c30 20000c30 20000c38 20000c38     0.. 0.. 8.. 8.. 
20000c48:	20000c40 20000c40 20000c48 20000c48     @.. @.. H.. H.. 
20000c58:	20000c50 20000c50 20000c58 20000c58     P.. P.. X.. X.. 
20000c68:	20000c60 20000c60 20000c68 20000c68     `.. `.. h.. h.. 
20000c78:	20000c70 20000c70                       p.. p.. 

20000c80 <__malloc_sbrk_base>:
20000c80:	ffffffff                                ....

20000c84 <__malloc_trim_threshold>:
20000c84:	00020000                                ....
