
cw521-SAM3U4E.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000ad14  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008ad14  0008ad14  0001ad14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000da8  20000000  0008ad1c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000029bc  20000da8  0008bac8  00020da8  2**3
                  ALLOC
  4 .stack        00004000  20080000  20080000  00030000  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020da8  2**0
                  CONTENTS, READONLY
  6 .comment      00000049  00000000  00000000  00020dd1  2**0
                  CONTENTS, READONLY
  7 .debug_info   0001790c  00000000  00000000  00020e1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 0000478c  00000000  00000000  00038726  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_loc    0000d4ac  00000000  00000000  0003ceb2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_aranges 00000e60  00000000  00000000  0004a35e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_ranges 00003120  00000000  00000000  0004b1be  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_macro  0001ade6  00000000  00000000  0004e2de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line   0001dd6c  00000000  00000000  000690c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_str    0005ae6b  00000000  00000000  00086e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_frame  000038dc  00000000  00000000  000e1c9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00080000 <exception_table>:
   80000:	00 40 08 20 bd 2e 08 00 a9 34 08 00 a9 34 08 00     .@. .....4...4..
   80010:	a9 34 08 00 a9 34 08 00 a9 34 08 00 00 00 00 00     .4...4...4......
   80020:	00 00 00 00 00 00 00 00 00 00 00 00 a9 34 08 00     .............4..
   80030:	a9 34 08 00 00 00 00 00 a9 34 08 00 a9 34 08 00     .4.......4...4..
   80040:	a9 34 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .4...4...4...4..
   80050:	a9 34 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .4...4...4...4..
   80060:	a9 34 08 00 a9 34 08 00 05 16 08 00 d1 16 08 00     .4...4..........
   80070:	9d 17 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .....4...4...4..
   80080:	a9 34 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .4...4...4...4..
   80090:	a9 34 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .4...4...4...4..
   800a0:	a9 34 08 00 a9 34 08 00 a9 34 08 00 a9 34 08 00     .4...4...4...4..
   800b0:	a9 34 08 00 d5 1b 08 00 a9 34 08 00                 .4.......4..

000800bc <__do_global_dtors_aux>:
   800bc:	b510      	push	{r4, lr}
   800be:	4c05      	ldr	r4, [pc, #20]	; (800d4 <__do_global_dtors_aux+0x18>)
   800c0:	7823      	ldrb	r3, [r4, #0]
   800c2:	b933      	cbnz	r3, 800d2 <__do_global_dtors_aux+0x16>
   800c4:	4b04      	ldr	r3, [pc, #16]	; (800d8 <__do_global_dtors_aux+0x1c>)
   800c6:	b113      	cbz	r3, 800ce <__do_global_dtors_aux+0x12>
   800c8:	4804      	ldr	r0, [pc, #16]	; (800dc <__do_global_dtors_aux+0x20>)
   800ca:	f3af 8000 	nop.w
   800ce:	2301      	movs	r3, #1
   800d0:	7023      	strb	r3, [r4, #0]
   800d2:	bd10      	pop	{r4, pc}
   800d4:	20000da8 	.word	0x20000da8
   800d8:	00000000 	.word	0x00000000
   800dc:	0008ad1c 	.word	0x0008ad1c

000800e0 <frame_dummy>:
   800e0:	b508      	push	{r3, lr}
   800e2:	4b03      	ldr	r3, [pc, #12]	; (800f0 <frame_dummy+0x10>)
   800e4:	b11b      	cbz	r3, 800ee <frame_dummy+0xe>
   800e6:	4903      	ldr	r1, [pc, #12]	; (800f4 <frame_dummy+0x14>)
   800e8:	4803      	ldr	r0, [pc, #12]	; (800f8 <frame_dummy+0x18>)
   800ea:	f3af 8000 	nop.w
   800ee:	bd08      	pop	{r3, pc}
   800f0:	00000000 	.word	0x00000000
   800f4:	20000dac 	.word	0x20000dac
   800f8:	0008ad1c 	.word	0x0008ad1c

000800fc <usart_serial_getchar>:
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
	uint32_t val = 0;
   800fc:	2200      	movs	r2, #0
{
   800fe:	b5f0      	push	{r4, r5, r6, r7, lr}

	/* Avoid Cppcheck Warning */
	UNUSED(val);

#ifdef UART
	if (UART == (Uart*)p_usart) {
   80100:	4b1e      	ldr	r3, [pc, #120]	; (8017c <usart_serial_getchar+0x80>)
{
   80102:	b083      	sub	sp, #12
	if (UART == (Uart*)p_usart) {
   80104:	4298      	cmp	r0, r3
{
   80106:	4604      	mov	r4, r0
   80108:	460f      	mov	r7, r1
	uint32_t val = 0;
   8010a:	9201      	str	r2, [sp, #4]
	if (UART == (Uart*)p_usart) {
   8010c:	d023      	beq.n	80156 <usart_serial_getchar+0x5a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
   8010e:	4b1c      	ldr	r3, [pc, #112]	; (80180 <usart_serial_getchar+0x84>)
   80110:	4298      	cmp	r0, r3
   80112:	d00d      	beq.n	80130 <usart_serial_getchar+0x34>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
   80114:	4b1b      	ldr	r3, [pc, #108]	; (80184 <usart_serial_getchar+0x88>)
   80116:	4298      	cmp	r0, r3
   80118:	d112      	bne.n	80140 <usart_serial_getchar+0x44>
   8011a:	4e1b      	ldr	r6, [pc, #108]	; (80188 <usart_serial_getchar+0x8c>)
   8011c:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   8011e:	4629      	mov	r1, r5
   80120:	4620      	mov	r0, r4
   80122:	47b0      	blx	r6
   80124:	2800      	cmp	r0, #0
   80126:	d1fa      	bne.n	8011e <usart_serial_getchar+0x22>
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
   80128:	9b01      	ldr	r3, [sp, #4]
   8012a:	703b      	strb	r3, [r7, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
   8012c:	b003      	add	sp, #12
   8012e:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80130:	4e15      	ldr	r6, [pc, #84]	; (80188 <usart_serial_getchar+0x8c>)
   80132:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   80134:	4629      	mov	r1, r5
   80136:	4620      	mov	r0, r4
   80138:	47b0      	blx	r6
   8013a:	2800      	cmp	r0, #0
   8013c:	d1fa      	bne.n	80134 <usart_serial_getchar+0x38>
   8013e:	e7f3      	b.n	80128 <usart_serial_getchar+0x2c>
	if (USART2 == p_usart) {
   80140:	4b12      	ldr	r3, [pc, #72]	; (8018c <usart_serial_getchar+0x90>)
   80142:	4298      	cmp	r0, r3
   80144:	d10f      	bne.n	80166 <usart_serial_getchar+0x6a>
   80146:	4e10      	ldr	r6, [pc, #64]	; (80188 <usart_serial_getchar+0x8c>)
   80148:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   8014a:	4629      	mov	r1, r5
   8014c:	4620      	mov	r0, r4
   8014e:	47b0      	blx	r6
   80150:	2800      	cmp	r0, #0
   80152:	d1fa      	bne.n	8014a <usart_serial_getchar+0x4e>
   80154:	e7e8      	b.n	80128 <usart_serial_getchar+0x2c>
   80156:	4d0e      	ldr	r5, [pc, #56]	; (80190 <usart_serial_getchar+0x94>)
		while (uart_read((Uart*)p_usart, data));
   80158:	4639      	mov	r1, r7
   8015a:	4620      	mov	r0, r4
   8015c:	47a8      	blx	r5
   8015e:	2800      	cmp	r0, #0
   80160:	d1fa      	bne.n	80158 <usart_serial_getchar+0x5c>
}
   80162:	b003      	add	sp, #12
   80164:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (USART3 == p_usart) {
   80166:	4b0b      	ldr	r3, [pc, #44]	; (80194 <usart_serial_getchar+0x98>)
   80168:	4298      	cmp	r0, r3
   8016a:	d1df      	bne.n	8012c <usart_serial_getchar+0x30>
   8016c:	4e06      	ldr	r6, [pc, #24]	; (80188 <usart_serial_getchar+0x8c>)
   8016e:	ad01      	add	r5, sp, #4
		while (usart_read(p_usart, &val));
   80170:	4629      	mov	r1, r5
   80172:	4620      	mov	r0, r4
   80174:	47b0      	blx	r6
   80176:	2800      	cmp	r0, #0
   80178:	d1fa      	bne.n	80170 <usart_serial_getchar+0x74>
   8017a:	e7d5      	b.n	80128 <usart_serial_getchar+0x2c>
   8017c:	400e0600 	.word	0x400e0600
   80180:	40090000 	.word	0x40090000
   80184:	40094000 	.word	0x40094000
   80188:	000815b9 	.word	0x000815b9
   8018c:	40098000 	.word	0x40098000
   80190:	00083581 	.word	0x00083581
   80194:	4009c000 	.word	0x4009c000

00080198 <usart_serial_putchar>:
	if (UART == (Uart*)p_usart) {
   80198:	4b1d      	ldr	r3, [pc, #116]	; (80210 <usart_serial_putchar+0x78>)
{
   8019a:	b570      	push	{r4, r5, r6, lr}
	if (UART == (Uart*)p_usart) {
   8019c:	4298      	cmp	r0, r3
{
   8019e:	4604      	mov	r4, r0
   801a0:	460e      	mov	r6, r1
	if (UART == (Uart*)p_usart) {
   801a2:	d015      	beq.n	801d0 <usart_serial_putchar+0x38>
	if (USART0 == p_usart) {
   801a4:	4b1b      	ldr	r3, [pc, #108]	; (80214 <usart_serial_putchar+0x7c>)
   801a6:	4298      	cmp	r0, r3
   801a8:	d01a      	beq.n	801e0 <usart_serial_putchar+0x48>
	if (USART1 == p_usart) {
   801aa:	4b1b      	ldr	r3, [pc, #108]	; (80218 <usart_serial_putchar+0x80>)
   801ac:	4298      	cmp	r0, r3
   801ae:	d01f      	beq.n	801f0 <usart_serial_putchar+0x58>
	if (USART2 == p_usart) {
   801b0:	4b1a      	ldr	r3, [pc, #104]	; (8021c <usart_serial_putchar+0x84>)
   801b2:	4298      	cmp	r0, r3
   801b4:	d004      	beq.n	801c0 <usart_serial_putchar+0x28>
	if (USART3 == p_usart) {
   801b6:	4b1a      	ldr	r3, [pc, #104]	; (80220 <usart_serial_putchar+0x88>)
   801b8:	4298      	cmp	r0, r3
   801ba:	d021      	beq.n	80200 <usart_serial_putchar+0x68>
	return 0;
   801bc:	2000      	movs	r0, #0
}
   801be:	bd70      	pop	{r4, r5, r6, pc}
   801c0:	4d18      	ldr	r5, [pc, #96]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801c2:	4631      	mov	r1, r6
   801c4:	4620      	mov	r0, r4
   801c6:	47a8      	blx	r5
   801c8:	2800      	cmp	r0, #0
   801ca:	d1fa      	bne.n	801c2 <usart_serial_putchar+0x2a>
		return 1;
   801cc:	2001      	movs	r0, #1
}
   801ce:	bd70      	pop	{r4, r5, r6, pc}
   801d0:	4d15      	ldr	r5, [pc, #84]	; (80228 <usart_serial_putchar+0x90>)
		while (uart_write((Uart*)p_usart, c)!=0);
   801d2:	4631      	mov	r1, r6
   801d4:	4620      	mov	r0, r4
   801d6:	47a8      	blx	r5
   801d8:	2800      	cmp	r0, #0
   801da:	d1fa      	bne.n	801d2 <usart_serial_putchar+0x3a>
		return 1;
   801dc:	2001      	movs	r0, #1
   801de:	e7f6      	b.n	801ce <usart_serial_putchar+0x36>
   801e0:	4d10      	ldr	r5, [pc, #64]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801e2:	4631      	mov	r1, r6
   801e4:	4620      	mov	r0, r4
   801e6:	47a8      	blx	r5
   801e8:	2800      	cmp	r0, #0
   801ea:	d1fa      	bne.n	801e2 <usart_serial_putchar+0x4a>
		return 1;
   801ec:	2001      	movs	r0, #1
   801ee:	e7ee      	b.n	801ce <usart_serial_putchar+0x36>
   801f0:	4d0c      	ldr	r5, [pc, #48]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   801f2:	4631      	mov	r1, r6
   801f4:	4620      	mov	r0, r4
   801f6:	47a8      	blx	r5
   801f8:	2800      	cmp	r0, #0
   801fa:	d1fa      	bne.n	801f2 <usart_serial_putchar+0x5a>
		return 1;
   801fc:	2001      	movs	r0, #1
   801fe:	e7e6      	b.n	801ce <usart_serial_putchar+0x36>
   80200:	4d08      	ldr	r5, [pc, #32]	; (80224 <usart_serial_putchar+0x8c>)
		while (usart_write(p_usart, c)!=0);
   80202:	4631      	mov	r1, r6
   80204:	4620      	mov	r0, r4
   80206:	47a8      	blx	r5
   80208:	2800      	cmp	r0, #0
   8020a:	d1fa      	bne.n	80202 <usart_serial_putchar+0x6a>
   8020c:	e7de      	b.n	801cc <usart_serial_putchar+0x34>
   8020e:	bf00      	nop
   80210:	400e0600 	.word	0x400e0600
   80214:	40090000 	.word	0x40090000
   80218:	40094000 	.word	0x40094000
   8021c:	40098000 	.word	0x40098000
   80220:	4009c000 	.word	0x4009c000
   80224:	000815a5 	.word	0x000815a5
   80228:	00083571 	.word	0x00083571

0008022c <main>:
int main(void)
{
  uint32_t serial_number[4];

  // Read Device-ID from SAM3U. Do this before enabling interrupts etc.
  flash_read_unique_id(serial_number, sizeof(serial_number));
   8022c:	2110      	movs	r1, #16
{
   8022e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   80232:	b088      	sub	sp, #32
  flash_read_unique_id(serial_number, sizeof(serial_number));
   80234:	eb0d 0001 	add.w	r0, sp, r1
   80238:	4b7b      	ldr	r3, [pc, #492]	; (80428 <main+0x1fc>)
   8023a:	4798      	blx	r3
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8023c:	f8df 81ec 	ldr.w	r8, [pc, #492]	; 8042c <main+0x200>
   80240:	2008      	movs	r0, #8
   80242:	47c0      	blx	r8
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   80244:	4a7a      	ldr	r2, [pc, #488]	; (80430 <main+0x204>)
   80246:	497b      	ldr	r1, [pc, #492]	; (80434 <main+0x208>)
	stdio_base = (void *)usart;
   80248:	4c7b      	ldr	r4, [pc, #492]	; (80438 <main+0x20c>)
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
   8024a:	6011      	str	r1, [r2, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   8024c:	4a7b      	ldr	r2, [pc, #492]	; (8043c <main+0x210>)
   8024e:	497c      	ldr	r1, [pc, #496]	; (80440 <main+0x214>)
	stdio_base = (void *)usart;
   80250:	4b7c      	ldr	r3, [pc, #496]	; (80444 <main+0x218>)
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
   80252:	6011      	str	r1, [r2, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   80254:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
	stdio_base = (void *)usart;
   80258:	601c      	str	r4, [r3, #0]
	uart_settings.ul_mode = opt->paritytype;
   8025a:	f44f 6300 	mov.w	r3, #2048	; 0x800
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
   8025e:	487a      	ldr	r0, [pc, #488]	; (80448 <main+0x21c>)
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
   80260:	4d7a      	ldr	r5, [pc, #488]	; (8044c <main+0x220>)
   80262:	e9cd 0100 	strd	r0, r1, [sp]
   80266:	2008      	movs	r0, #8
	uart_settings.ul_mode = opt->paritytype;
   80268:	9302      	str	r3, [sp, #8]
   8026a:	47c0      	blx	r8
		uart_init((Uart*)p_usart, &uart_settings);
   8026c:	4669      	mov	r1, sp
   8026e:	4620      	mov	r0, r4
   80270:	4b77      	ldr	r3, [pc, #476]	; (80450 <main+0x224>)
   80272:	4798      	blx	r3
   80274:	682b      	ldr	r3, [r5, #0]
   80276:	4c77      	ldr	r4, [pc, #476]	; (80454 <main+0x228>)
   80278:	6898      	ldr	r0, [r3, #8]
   8027a:	2100      	movs	r1, #0
   8027c:	47a0      	blx	r4
	setbuf(stdin, NULL);
   8027e:	682b      	ldr	r3, [r5, #0]
   80280:	2100      	movs	r1, #0
   80282:	6858      	ldr	r0, [r3, #4]
   80284:	47a0      	blx	r4

  configure_console();

  irq_initialize_vectors();
  cpu_irq_enable();
   80286:	2101      	movs	r1, #1
   80288:	4b73      	ldr	r3, [pc, #460]	; (80458 <main+0x22c>)
   8028a:	7019      	strb	r1, [r3, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
   8028c:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i");
   80290:	b662      	cpsie	i
{
#ifdef CONFIG_SLEEPMGR_ENABLE
	uint8_t i;

	for (i = 0; i < SLEEPMGR_NR_OF_MODES - 1; i++) {
		sleepmgr_locks[i] = 0;
   80292:	2200      	movs	r2, #0
   80294:	4b71      	ldr	r3, [pc, #452]	; (8045c <main+0x230>)
   80296:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80460 <main+0x234>
	}
	sleepmgr_locks[SLEEPMGR_NR_OF_MODES - 1] = 1;
   8029a:	7159      	strb	r1, [r3, #5]
		sleepmgr_locks[i] = 0;
   8029c:	601a      	str	r2, [r3, #0]
   8029e:	711a      	strb	r2, [r3, #4]

  // Initialize the sleep manager
  sleepmgr_init();
#if !SAMD21 && !SAMR21
  sysclk_init();
   802a0:	4970      	ldr	r1, [pc, #448]	; (80464 <main+0x238>)
   802a2:	4788      	blx	r1
  board_init();
   802a4:	4b70      	ldr	r3, [pc, #448]	; (80468 <main+0x23c>)
   802a6:	464d      	mov	r5, r9
   802a8:	4f70      	ldr	r7, [pc, #448]	; (8046c <main+0x240>)
  system_init();
#endif

  //Convert serial number to ASCII for USB Serial number
  for(unsigned int i = 0; i < 4; i++){
    sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);
   802aa:	4e71      	ldr	r6, [pc, #452]	; (80470 <main+0x244>)
   802ac:	ac04      	add	r4, sp, #16
   802ae:	f10d 0a20 	add.w	sl, sp, #32
  board_init();
   802b2:	4798      	blx	r3
    sprintf(usb_serial_number+(i*8), "%08x", (unsigned int)serial_number[i]);
   802b4:	f854 2b04 	ldr.w	r2, [r4], #4
   802b8:	4628      	mov	r0, r5
   802ba:	4631      	mov	r1, r6
   802bc:	47b8      	blx	r7
  for(unsigned int i = 0; i < 4; i++){
   802be:	45a2      	cmp	sl, r4
   802c0:	f105 0508 	add.w	r5, r5, #8
   802c4:	d1f6      	bne.n	802b4 <main+0x88>
  }
  usb_serial_number[32] = 0;
   802c6:	2500      	movs	r5, #0

  printf("ChipSHOUTER C521 Ballistic Gel Online. Firmware build: %s/%s\n", __TIME__, __DATE__);
   802c8:	4a6a      	ldr	r2, [pc, #424]	; (80474 <main+0x248>)
   802ca:	4e6b      	ldr	r6, [pc, #428]	; (80478 <main+0x24c>)
   802cc:	496b      	ldr	r1, [pc, #428]	; (8047c <main+0x250>)
   802ce:	486c      	ldr	r0, [pc, #432]	; (80480 <main+0x254>)
  usb_serial_number[32] = 0;
   802d0:	f889 5020 	strb.w	r5, [r9, #32]
  printf("ChipSHOUTER C521 Ballistic Gel Online. Firmware build: %s/%s\n", __TIME__, __DATE__);
   802d4:	47b0      	blx	r6
  printf("Serial number: %s\n", usb_serial_number);
   802d6:	4962      	ldr	r1, [pc, #392]	; (80460 <main+0x234>)
   802d8:	486a      	ldr	r0, [pc, #424]	; (80484 <main+0x258>)
   802da:	47b0      	blx	r6


  /* Enable SMC */
  pmc_enable_periph_clk(ID_SMC);
   802dc:	2009      	movs	r0, #9
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   802de:	4c6a      	ldr	r4, [pc, #424]	; (80488 <main+0x25c>)
  pmc_enable_periph_clk(ID_SMC);
   802e0:	47c0      	blx	r8
  gpio_configure_pin(PIN_EBI_DATA_BUS_D0, PIN_EBI_DATA_BUS_FLAG1);
   802e2:	496a      	ldr	r1, [pc, #424]	; (8048c <main+0x260>)
   802e4:	2029      	movs	r0, #41	; 0x29
   802e6:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D1, PIN_EBI_DATA_BUS_FLAG1);
   802e8:	4968      	ldr	r1, [pc, #416]	; (8048c <main+0x260>)
   802ea:	202a      	movs	r0, #42	; 0x2a
   802ec:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D2, PIN_EBI_DATA_BUS_FLAG1);
   802ee:	4967      	ldr	r1, [pc, #412]	; (8048c <main+0x260>)
   802f0:	202b      	movs	r0, #43	; 0x2b
   802f2:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D3, PIN_EBI_DATA_BUS_FLAG1);
   802f4:	4965      	ldr	r1, [pc, #404]	; (8048c <main+0x260>)
   802f6:	202c      	movs	r0, #44	; 0x2c
   802f8:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D4, PIN_EBI_DATA_BUS_FLAG1);
   802fa:	4964      	ldr	r1, [pc, #400]	; (8048c <main+0x260>)
   802fc:	202d      	movs	r0, #45	; 0x2d
   802fe:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D5, PIN_EBI_DATA_BUS_FLAG1);
   80300:	4962      	ldr	r1, [pc, #392]	; (8048c <main+0x260>)
   80302:	202e      	movs	r0, #46	; 0x2e
   80304:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D6, PIN_EBI_DATA_BUS_FLAG1);
   80306:	4961      	ldr	r1, [pc, #388]	; (8048c <main+0x260>)
   80308:	202f      	movs	r0, #47	; 0x2f
   8030a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D7, PIN_EBI_DATA_BUS_FLAG1);
   8030c:	495f      	ldr	r1, [pc, #380]	; (8048c <main+0x260>)
   8030e:	2030      	movs	r0, #48	; 0x30
   80310:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D8, PIN_EBI_DATA_BUS_FLAG1);
   80312:	495e      	ldr	r1, [pc, #376]	; (8048c <main+0x260>)
   80314:	2039      	movs	r0, #57	; 0x39
   80316:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D9, PIN_EBI_DATA_BUS_FLAG1);
   80318:	495c      	ldr	r1, [pc, #368]	; (8048c <main+0x260>)
   8031a:	203a      	movs	r0, #58	; 0x3a
   8031c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D10, PIN_EBI_DATA_BUS_FLAG1);
   8031e:	495b      	ldr	r1, [pc, #364]	; (8048c <main+0x260>)
   80320:	203b      	movs	r0, #59	; 0x3b
   80322:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D11, PIN_EBI_DATA_BUS_FLAG1);
   80324:	4959      	ldr	r1, [pc, #356]	; (8048c <main+0x260>)
   80326:	203c      	movs	r0, #60	; 0x3c
   80328:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D12, PIN_EBI_DATA_BUS_FLAG1);
   8032a:	4958      	ldr	r1, [pc, #352]	; (8048c <main+0x260>)
   8032c:	203d      	movs	r0, #61	; 0x3d
   8032e:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D13, PIN_EBI_DATA_BUS_FLAG1);
   80330:	4956      	ldr	r1, [pc, #344]	; (8048c <main+0x260>)
   80332:	203e      	movs	r0, #62	; 0x3e
   80334:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D14, PIN_EBI_DATA_BUS_FLAG1);
   80336:	4955      	ldr	r1, [pc, #340]	; (8048c <main+0x260>)
   80338:	203f      	movs	r0, #63	; 0x3f
   8033a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_DATA_BUS_D15, PIN_EBI_DATA_BUS_FLAG2);
   8033c:	4954      	ldr	r1, [pc, #336]	; (80490 <main+0x264>)
   8033e:	2026      	movs	r0, #38	; 0x26
   80340:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NRD, PIN_EBI_NRD_FLAGS);
   80342:	4952      	ldr	r1, [pc, #328]	; (8048c <main+0x260>)
   80344:	2033      	movs	r0, #51	; 0x33
   80346:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NWE, PIN_EBI_NWE_FLAGS);
   80348:	4950      	ldr	r1, [pc, #320]	; (8048c <main+0x260>)
   8034a:	2037      	movs	r0, #55	; 0x37
   8034c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_NCS0, PIN_EBI_NCS0_FLAGS);
   8034e:	494f      	ldr	r1, [pc, #316]	; (8048c <main+0x260>)
   80350:	2034      	movs	r0, #52	; 0x34
   80352:	47a0      	blx	r4

  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS0, PIN_EBI_ADDR_BUS_FLAG1);
   80354:	494e      	ldr	r1, [pc, #312]	; (80490 <main+0x264>)
   80356:	2027      	movs	r0, #39	; 0x27
   80358:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_NBS1, PIN_EBI_ADDR_BUS_FLAG2);
   8035a:	494c      	ldr	r1, [pc, #304]	; (8048c <main+0x260>)
   8035c:	204f      	movs	r0, #79	; 0x4f
   8035e:	47a0      	blx	r4

  gpio_configure_pin(PIN_EBI_ADDR_BUS_A1, PIN_EBI_ADDR_BUS_FLAG1);
   80360:	494b      	ldr	r1, [pc, #300]	; (80490 <main+0x264>)
   80362:	2028      	movs	r0, #40	; 0x28
   80364:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A2, PIN_EBI_ADDR_BUS_FLAG2);
   80366:	4949      	ldr	r1, [pc, #292]	; (8048c <main+0x260>)
   80368:	2040      	movs	r0, #64	; 0x40
   8036a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A3, PIN_EBI_ADDR_BUS_FLAG2);
   8036c:	4947      	ldr	r1, [pc, #284]	; (8048c <main+0x260>)
   8036e:	2041      	movs	r0, #65	; 0x41
   80370:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A4, PIN_EBI_ADDR_BUS_FLAG2);
   80372:	4946      	ldr	r1, [pc, #280]	; (8048c <main+0x260>)
   80374:	2042      	movs	r0, #66	; 0x42
   80376:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A5, PIN_EBI_ADDR_BUS_FLAG2);
   80378:	4944      	ldr	r1, [pc, #272]	; (8048c <main+0x260>)
   8037a:	2043      	movs	r0, #67	; 0x43
   8037c:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A6, PIN_EBI_ADDR_BUS_FLAG2);
   8037e:	4943      	ldr	r1, [pc, #268]	; (8048c <main+0x260>)
   80380:	2044      	movs	r0, #68	; 0x44
   80382:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A7, PIN_EBI_ADDR_BUS_FLAG2);
   80384:	4941      	ldr	r1, [pc, #260]	; (8048c <main+0x260>)
   80386:	2045      	movs	r0, #69	; 0x45
   80388:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A8, PIN_EBI_ADDR_BUS_FLAG2);
   8038a:	4940      	ldr	r1, [pc, #256]	; (8048c <main+0x260>)
   8038c:	2046      	movs	r0, #70	; 0x46
   8038e:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A9, PIN_EBI_ADDR_BUS_FLAG2);
   80390:	493e      	ldr	r1, [pc, #248]	; (8048c <main+0x260>)
   80392:	2047      	movs	r0, #71	; 0x47
   80394:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A10, PIN_EBI_ADDR_BUS_FLAG2);
   80396:	493d      	ldr	r1, [pc, #244]	; (8048c <main+0x260>)
   80398:	2048      	movs	r0, #72	; 0x48
   8039a:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A11, PIN_EBI_ADDR_BUS_FLAG2);
   8039c:	493b      	ldr	r1, [pc, #236]	; (8048c <main+0x260>)
   8039e:	2049      	movs	r0, #73	; 0x49
   803a0:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A12, PIN_EBI_ADDR_BUS_FLAG2);
   803a2:	493a      	ldr	r1, [pc, #232]	; (8048c <main+0x260>)
   803a4:	204a      	movs	r0, #74	; 0x4a
   803a6:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A13, PIN_EBI_ADDR_BUS_FLAG2);
   803a8:	4938      	ldr	r1, [pc, #224]	; (8048c <main+0x260>)
   803aa:	204b      	movs	r0, #75	; 0x4b
   803ac:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A14, PIN_EBI_ADDR_BUS_FLAG2);
   803ae:	4937      	ldr	r1, [pc, #220]	; (8048c <main+0x260>)
   803b0:	2054      	movs	r0, #84	; 0x54
   803b2:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A15, PIN_EBI_ADDR_BUS_FLAG2);
   803b4:	4935      	ldr	r1, [pc, #212]	; (8048c <main+0x260>)
   803b6:	2055      	movs	r0, #85	; 0x55
   803b8:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A16, PIN_EBI_ADDR_BUS_FLAG2);
   803ba:	4934      	ldr	r1, [pc, #208]	; (8048c <main+0x260>)
   803bc:	2056      	movs	r0, #86	; 0x56
   803be:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A17, PIN_EBI_ADDR_BUS_FLAG2);
   803c0:	4932      	ldr	r1, [pc, #200]	; (8048c <main+0x260>)
   803c2:	2057      	movs	r0, #87	; 0x57
   803c4:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A18, PIN_EBI_ADDR_BUS_FLAG2);
   803c6:	4931      	ldr	r1, [pc, #196]	; (8048c <main+0x260>)
   803c8:	2058      	movs	r0, #88	; 0x58
   803ca:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A19, PIN_EBI_ADDR_BUS_FLAG2);
   803cc:	492f      	ldr	r1, [pc, #188]	; (8048c <main+0x260>)
   803ce:	2059      	movs	r0, #89	; 0x59
   803d0:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A20, PIN_EBI_ADDR_BUS_FLAG2);
   803d2:	492e      	ldr	r1, [pc, #184]	; (8048c <main+0x260>)
   803d4:	205a      	movs	r0, #90	; 0x5a
   803d6:	47a0      	blx	r4
  gpio_configure_pin(PIN_EBI_ADDR_BUS_A21, PIN_EBI_ADDR_BUS_FLAG2);
   803d8:	492c      	ldr	r1, [pc, #176]	; (8048c <main+0x260>)
   803da:	2035      	movs	r0, #53	; 0x35
   803dc:	47a0      	blx	r4

  /* Configure EBI I/O for PSRAM connection */
  printf("Setting up SRAM Communication\n");
   803de:	482d      	ldr	r0, [pc, #180]	; (80494 <main+0x268>)
   803e0:	47b0      	blx	r6
  | SMC_CYCLE_NRD_CYCLE(8));
  smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
  | SMC_MODE_DBW_BIT_16);
  */

    smc_set_setup_timing(SMC, 0, SMC_SETUP_NWE_SETUP(0)
   803e2:	4629      	mov	r1, r5
   803e4:	4a2c      	ldr	r2, [pc, #176]	; (80498 <main+0x26c>)
   803e6:	482d      	ldr	r0, [pc, #180]	; (8049c <main+0x270>)
   803e8:	4b2d      	ldr	r3, [pc, #180]	; (804a0 <main+0x274>)
   803ea:	4798      	blx	r3
    | SMC_SETUP_NCS_WR_SETUP(4)
    | SMC_SETUP_NRD_SETUP(4)
    | SMC_SETUP_NCS_RD_SETUP(4));
    smc_set_pulse_timing(SMC, 0, SMC_PULSE_NWE_PULSE(12)
   803ec:	f04f 320c 	mov.w	r2, #202116108	; 0xc0c0c0c
   803f0:	4629      	mov	r1, r5
   803f2:	482a      	ldr	r0, [pc, #168]	; (8049c <main+0x270>)
   803f4:	4b2b      	ldr	r3, [pc, #172]	; (804a4 <main+0x278>)
   803f6:	4798      	blx	r3
    | SMC_PULSE_NCS_WR_PULSE(12)
    | SMC_PULSE_NRD_PULSE(12)
    | SMC_PULSE_NCS_RD_PULSE(12));
    smc_set_cycle_timing(SMC, 0, SMC_CYCLE_NWE_CYCLE(16)
   803f8:	f04f 1210 	mov.w	r2, #1048592	; 0x100010
   803fc:	4629      	mov	r1, r5
   803fe:	4827      	ldr	r0, [pc, #156]	; (8049c <main+0x270>)
   80400:	4b29      	ldr	r3, [pc, #164]	; (804a8 <main+0x27c>)
   80402:	4798      	blx	r3
    | SMC_CYCLE_NRD_CYCLE(16));
    smc_set_mode(SMC, 0, SMC_MODE_READ_MODE_NRD_CTRL | SMC_MODE_WRITE_MODE_NWE_CTRL
   80404:	f241 0203 	movw	r2, #4099	; 0x1003
   80408:	4629      	mov	r1, r5
   8040a:	4824      	ldr	r0, [pc, #144]	; (8049c <main+0x270>)
   8040c:	4b27      	ldr	r3, [pc, #156]	; (804ac <main+0x280>)
   8040e:	4798      	blx	r3
  /*
  osc_enable(OSC_MAINCK_XTAL);
      osc_wait_ready(OSC_MAINCK_XTAL);
      pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
  */
  ui_init();
   80410:	4b27      	ldr	r3, [pc, #156]	; (804b0 <main+0x284>)
   80412:	4798      	blx	r3

  // Start USB stack to authorize VBus monitoring
  udc_start();
   80414:	4b27      	ldr	r3, [pc, #156]	; (804b4 <main+0x288>)
   80416:	4798      	blx	r3

  printf("Event Loop Entered, waiting...\n");
   80418:	4827      	ldr	r0, [pc, #156]	; (804b8 <main+0x28c>)
   8041a:	47b0      	blx	r6

  // The main loop manages only the power mode
  // because the USB management is done by interrupt
	naeusb_register_handlers();
   8041c:	4b27      	ldr	r3, [pc, #156]	; (804bc <main+0x290>)
   8041e:	4798      	blx	r3
  ballistic_register_handlers();
   80420:	4b27      	ldr	r3, [pc, #156]	; (804c0 <main+0x294>)
   80422:	4798      	blx	r3
  while (true) {
   80424:	e7fe      	b.n	80424 <main+0x1f8>
   80426:	bf00      	nop
   80428:	00081559 	.word	0x00081559
   8042c:	0008314d 	.word	0x0008314d
   80430:	200036f8 	.word	0x200036f8
   80434:	00080199 	.word	0x00080199
   80438:	400e0600 	.word	0x400e0600
   8043c:	20003710 	.word	0x20003710
   80440:	000800fd 	.word	0x000800fd
   80444:	200036fc 	.word	0x200036fc
   80448:	05b8d800 	.word	0x05b8d800
   8044c:	200003fc 	.word	0x200003fc
   80450:	00083539 	.word	0x00083539
   80454:	00083a49 	.word	0x00083a49
   80458:	20000368 	.word	0x20000368
   8045c:	20003714 	.word	0x20003714
   80460:	200001ec 	.word	0x200001ec
   80464:	00082f7d 	.word	0x00082f7d
   80468:	00083591 	.word	0x00083591
   8046c:	00083c09 	.word	0x00083c09
   80470:	0008a7d0 	.word	0x0008a7d0
   80474:	0008a7d8 	.word	0x0008a7d8
   80478:	00083891 	.word	0x00083891
   8047c:	0008a7e4 	.word	0x0008a7e4
   80480:	0008a7f0 	.word	0x0008a7f0
   80484:	0008a830 	.word	0x0008a830
   80488:	000832ed 	.word	0x000832ed
   8048c:	08000001 	.word	0x08000001
   80490:	10000001 	.word	0x10000001
   80494:	0008a844 	.word	0x0008a844
   80498:	04040400 	.word	0x04040400
   8049c:	400e0000 	.word	0x400e0000
   804a0:	000815d1 	.word	0x000815d1
   804a4:	000815dd 	.word	0x000815dd
   804a8:	000815e9 	.word	0x000815e9
   804ac:	000815f5 	.word	0x000815f5
   804b0:	00083795 	.word	0x00083795
   804b4:	00080d45 	.word	0x00080d45
   804b8:	0008a864 	.word	0x0008a864
   804bc:	00080b95 	.word	0x00080b95
   804c0:	000808f1 	.word	0x000808f1

000804c4 <ctrl_testmem>:
static unsigned int ctrlmemread_size;

volatile static uint8_t rng_done = 0;
uint8_t testmem_sent_back = 1;
void ctrl_testmem(void)
{
   804c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   804c8:	4a3e      	ldr	r2, [pc, #248]	; (805c4 <ctrl_testmem+0x100>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
     if (address > (sram_size - buflen) )
   804ca:	4b3f      	ldr	r3, [pc, #252]	; (805c8 <ctrl_testmem+0x104>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   804cc:	6815      	ldr	r5, [r2, #0]
     if (address > (sram_size - buflen) )
   804ce:	681b      	ldr	r3, [r3, #0]
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   804d0:	6854      	ldr	r4, [r2, #4]
     if (address > (sram_size - buflen) )
   804d2:	1b5b      	subs	r3, r3, r5
   804d4:	42a3      	cmp	r3, r4
   804d6:	d303      	bcc.n	804e0 <ctrl_testmem+0x1c>
          return;
     int i =0;
     if (buflen >= sizeof(buffer))
   804d8:	f242 3327 	movw	r3, #8999	; 0x2327
   804dc:	429d      	cmp	r5, r3
   804de:	d901      	bls.n	804e4 <ctrl_testmem+0x20>
          }
     }

     ctrlmemread_buf = (uint8_t *) found_err;
     ctrlmemread_size = 4;
}
   804e0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
     LED_On(LED2_GPIO);
   804e4:	204c      	movs	r0, #76	; 0x4c
   804e6:	4b39      	ldr	r3, [pc, #228]	; (805cc <ctrl_testmem+0x108>)
   804e8:	4798      	blx	r3
     if (!address) {
   804ea:	2c00      	cmp	r4, #0
   804ec:	d05c      	beq.n	805a8 <ctrl_testmem+0xe4>
     found_err[1]++;
   804ee:	4e38      	ldr	r6, [pc, #224]	; (805d0 <ctrl_testmem+0x10c>)
   804f0:	8873      	ldrh	r3, [r6, #2]
   804f2:	3301      	adds	r3, #1
   804f4:	b29b      	uxth	r3, r3
     found_err[0] = 0;
   804f6:	2200      	movs	r2, #0
     for (i = 0; i < buflen / 4; i++) {
   804f8:	08ad      	lsrs	r5, r5, #2
     found_err[1]++;
   804fa:	8073      	strh	r3, [r6, #2]
     found_err[0] = 0;
   804fc:	8032      	strh	r2, [r6, #0]
     for (i = 0; i < buflen / 4; i++) {
   804fe:	d04c      	beq.n	8059a <ctrl_testmem+0xd6>
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80500:	4b34      	ldr	r3, [pc, #208]	; (805d4 <ctrl_testmem+0x110>)
   80502:	4935      	ldr	r1, [pc, #212]	; (805d8 <ctrl_testmem+0x114>)
   80504:	681a      	ldr	r2, [r3, #0]
   80506:	68c8      	ldr	r0, [r1, #12]
   80508:	4422      	add	r2, r4
   8050a:	680b      	ldr	r3, [r1, #0]
   8050c:	e9d1 a701 	ldrd	sl, r7, [r1, #4]
                    found_err[0] = 1;
   80510:	f04f 0801 	mov.w	r8, #1
   80514:	4931      	ldr	r1, [pc, #196]	; (805dc <ctrl_testmem+0x118>)
   80516:	eb02 0585 	add.w	r5, r2, r5, lsl #2
   8051a:	e001      	b.n	80520 <ctrl_testmem+0x5c>
     for (i = 0; i < buflen / 4; i++) {
   8051c:	4657      	mov	r7, sl
   8051e:	46ca      	mov	sl, r9
}

uint32_t xorshift128(void)
{
     uint32_t s, t = state[3];
     t ^= t << 11;
   80520:	ea80 20c0 	eor.w	r0, r0, r0, lsl #11
     state[2] = state[1];
     s = state[0];
     state[1] = state[0];

     t ^= s;
     t ^= s >> 19;
   80524:	ea80 44d3 	eor.w	r4, r0, r3, lsr #19
   80528:	405c      	eors	r4, r3
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   8052a:	f892 b000 	ldrb.w	fp, [r2]
   8052e:	4699      	mov	r9, r3
     t ^= s >> 19;
   80530:	ea84 2310 	eor.w	r3, r4, r0, lsr #8
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80534:	b2d8      	uxtb	r0, r3
   80536:	ea80 040b 	eor.w	r4, r0, fp
               if (buffer[i * 4 + j]) {
   8053a:	4558      	cmp	r0, fp
                    found_err[0] = 1;
   8053c:	bf18      	it	ne
   8053e:	f8a6 8000 	strhne.w	r8, [r6]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80542:	700c      	strb	r4, [r1, #0]
   80544:	7854      	ldrb	r4, [r2, #1]
   80546:	f3c3 2e07 	ubfx	lr, r3, #8, #8
               if (buffer[i * 4 + j]) {
   8054a:	45a6      	cmp	lr, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   8054c:	ea8e 0b04 	eor.w	fp, lr, r4
                    found_err[0] = 1;
   80550:	bf18      	it	ne
   80552:	f8a6 8000 	strhne.w	r8, [r6]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80556:	f881 b001 	strb.w	fp, [r1, #1]
   8055a:	7894      	ldrb	r4, [r2, #2]
   8055c:	f3c3 4c07 	ubfx	ip, r3, #16, #8
               if (buffer[i * 4 + j]) {
   80560:	45a4      	cmp	ip, r4
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80562:	ea8c 0e04 	eor.w	lr, ip, r4
                    found_err[0] = 1;
   80566:	bf18      	it	ne
   80568:	f8a6 8000 	strhne.w	r8, [r6]
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   8056c:	f881 e002 	strb.w	lr, [r1, #2]
   80570:	78d4      	ldrb	r4, [r2, #3]
     for (i = 0; i < buflen / 4; i++) {
   80572:	3204      	adds	r2, #4
               if (buffer[i * 4 + j]) {
   80574:	ebb4 6f13 	cmp.w	r4, r3, lsr #24
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80578:	ea84 6c13 	eor.w	ip, r4, r3, lsr #24
                    found_err[0] = 1;
   8057c:	bf18      	it	ne
   8057e:	f8a6 8000 	strhne.w	r8, [r6]
     for (i = 0; i < buflen / 4; i++) {
   80582:	42aa      	cmp	r2, r5
               buffer[i * 4 + j] = xram[i * 4 + j + address] ^ ((rng_val >> (8 * j)) & 0xFF);
   80584:	f881 c003 	strb.w	ip, [r1, #3]
               if (buffer[i * 4 + j]) {
   80588:	4638      	mov	r0, r7
     for (i = 0; i < buflen / 4; i++) {
   8058a:	f101 0104 	add.w	r1, r1, #4
   8058e:	d1c5      	bne.n	8051c <ctrl_testmem+0x58>
   80590:	4a11      	ldr	r2, [pc, #68]	; (805d8 <ctrl_testmem+0x114>)
   80592:	e9c2 a702 	strd	sl, r7, [r2, #8]
   80596:	e9c2 3900 	strd	r3, r9, [r2]
     ctrlmemread_size = 4;
   8059a:	2204      	movs	r2, #4
     ctrlmemread_buf = (uint8_t *) found_err;
   8059c:	4910      	ldr	r1, [pc, #64]	; (805e0 <ctrl_testmem+0x11c>)
     ctrlmemread_size = 4;
   8059e:	4b11      	ldr	r3, [pc, #68]	; (805e4 <ctrl_testmem+0x120>)
     ctrlmemread_buf = (uint8_t *) found_err;
   805a0:	600e      	str	r6, [r1, #0]
     ctrlmemread_size = 4;
   805a2:	601a      	str	r2, [r3, #0]
}
   805a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
               state[i] = seed[i];
   805a8:	490f      	ldr	r1, [pc, #60]	; (805e8 <ctrl_testmem+0x124>)
   805aa:	4a0b      	ldr	r2, [pc, #44]	; (805d8 <ctrl_testmem+0x114>)
   805ac:	e9d1 6001 	ldrd	r6, r0, [r1, #4]
   805b0:	e9c2 6001 	strd	r6, r0, [r2, #4]
   805b4:	68c8      	ldr	r0, [r1, #12]
   805b6:	6809      	ldr	r1, [r1, #0]
   805b8:	2301      	movs	r3, #1
   805ba:	4e05      	ldr	r6, [pc, #20]	; (805d0 <ctrl_testmem+0x10c>)
   805bc:	6011      	str	r1, [r2, #0]
   805be:	60d0      	str	r0, [r2, #12]
          done = 0;
   805c0:	e799      	b.n	804f6 <ctrl_testmem+0x32>
   805c2:	bf00      	nop
   805c4:	2000311c 	.word	0x2000311c
   805c8:	20000210 	.word	0x20000210
   805cc:	00082ea5 	.word	0x00082ea5
   805d0:	200030f8 	.word	0x200030f8
   805d4:	20000350 	.word	0x20000350
   805d8:	2000310c 	.word	0x2000310c
   805dc:	20000dc4 	.word	0x20000dc4
   805e0:	200030f0 	.word	0x200030f0
   805e4:	200030f4 	.word	0x200030f4
   805e8:	200030fc 	.word	0x200030fc

000805ec <ctrl_readmem_ctrl>:
void ctrl_readmem_ctrl(void){
   805ec:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   805ee:	4b08      	ldr	r3, [pc, #32]	; (80610 <ctrl_readmem_ctrl+0x24>)
     FPGA_setlock(fpga_ctrlmem);
   805f0:	4a08      	ldr	r2, [pc, #32]	; (80614 <ctrl_readmem_ctrl+0x28>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   805f2:	685c      	ldr	r4, [r3, #4]
     FPGA_setlock(fpga_ctrlmem);
   805f4:	2005      	movs	r0, #5
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   805f6:	681d      	ldr	r5, [r3, #0]
     FPGA_setlock(fpga_ctrlmem);
   805f8:	4790      	blx	r2
     ctrlmemread_size = buflen;
   805fa:	4b07      	ldr	r3, [pc, #28]	; (80618 <ctrl_readmem_ctrl+0x2c>)
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   805fc:	4a07      	ldr	r2, [pc, #28]	; (8061c <ctrl_readmem_ctrl+0x30>)
   805fe:	f104 44c0 	add.w	r4, r4, #1610612736	; 0x60000000
     ctrlmemread_size = buflen;
   80602:	601d      	str	r5, [r3, #0]
     ctrlmemread_buf = (uint8_t *) PSRAM_BASE_ADDRESS + address;
   80604:	6014      	str	r4, [r2, #0]
     LED_On(LED2_GPIO);
   80606:	204c      	movs	r0, #76	; 0x4c
}
   80608:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     LED_On(LED2_GPIO);
   8060c:	4b04      	ldr	r3, [pc, #16]	; (80620 <ctrl_readmem_ctrl+0x34>)
   8060e:	4718      	bx	r3
   80610:	2000311c 	.word	0x2000311c
   80614:	00081511 	.word	0x00081511
   80618:	200030f4 	.word	0x200030f4
   8061c:	200030f0 	.word	0x200030f0
   80620:	00082ea5 	.word	0x00082ea5

00080624 <ctrl_writemem_ctrl>:
          }
     }
     seeded = 1;
}

void ctrl_writemem_ctrl(void){
   80624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   80628:	4f0e      	ldr	r7, [pc, #56]	; (80664 <ctrl_writemem_ctrl+0x40>)

     uint8_t * ctrlbuf_payload = (uint8_t *)(CTRLBUFFER_WORDPTR + 2);

     //printf("Writing to %x, %d\n", address, buflen);

     FPGA_setlock(fpga_generic);
   8062a:	2001      	movs	r0, #1
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   8062c:	683c      	ldr	r4, [r7, #0]
     FPGA_setlock(fpga_generic);
   8062e:	4e0e      	ldr	r6, [pc, #56]	; (80668 <ctrl_writemem_ctrl+0x44>)
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80630:	687d      	ldr	r5, [r7, #4]
     FPGA_setlock(fpga_generic);
   80632:	47b0      	blx	r6

     /* Start Transaction */
     LED_On(LED1_GPIO);
   80634:	2010      	movs	r0, #16
   80636:	4b0d      	ldr	r3, [pc, #52]	; (8066c <ctrl_writemem_ctrl+0x48>)
   80638:	4798      	blx	r3

     /* Do memory write */
     for(unsigned int i = 0; i < buflen; i++){
   8063a:	b174      	cbz	r4, 8065a <ctrl_writemem_ctrl+0x36>
   8063c:	eb07 0c04 	add.w	ip, r7, r4
   80640:	1fec      	subs	r4, r5, #7
   80642:	4d0b      	ldr	r5, [pc, #44]	; (80670 <ctrl_writemem_ctrl+0x4c>)
   80644:	1dfb      	adds	r3, r7, #7
          xram[i+address] = ctrlbuf_payload[i];
   80646:	1be4      	subs	r4, r4, r7
   80648:	f10c 0c07 	add.w	ip, ip, #7
   8064c:	18e2      	adds	r2, r4, r3
   8064e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
   80652:	6829      	ldr	r1, [r5, #0]
     for(unsigned int i = 0; i < buflen; i++){
   80654:	4563      	cmp	r3, ip
          xram[i+address] = ctrlbuf_payload[i];
   80656:	5488      	strb	r0, [r1, r2]
     for(unsigned int i = 0; i < buflen; i++){
   80658:	d1f8      	bne.n	8064c <ctrl_writemem_ctrl+0x28>
     }

     FPGA_setlock(fpga_unlocked);
   8065a:	4633      	mov	r3, r6
}
   8065c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
     FPGA_setlock(fpga_unlocked);
   80660:	2000      	movs	r0, #0
   80662:	4718      	bx	r3
   80664:	2000311c 	.word	0x2000311c
   80668:	00081511 	.word	0x00081511
   8066c:	00082ea5 	.word	0x00082ea5
   80670:	20000350 	.word	0x20000350

00080674 <ctrl_writemem_bulk>:

static uint32_t bulkread_address = 0;
static uint32_t bulkread_len = 0;

void ctrl_writemem_bulk(void){
   80674:	b510      	push	{r4, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   80676:	4a06      	ldr	r2, [pc, #24]	; (80690 <ctrl_writemem_bulk+0x1c>)

     FPGA_setlock(fpga_blockout);
   80678:	4b06      	ldr	r3, [pc, #24]	; (80694 <ctrl_writemem_bulk+0x20>)
   8067a:	2004      	movs	r0, #4
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   8067c:	6854      	ldr	r4, [r2, #4]
     FPGA_setlock(fpga_blockout);
   8067e:	4798      	blx	r3

     /* Set address */
     bulkread_address = address;
   80680:	4a05      	ldr	r2, [pc, #20]	; (80698 <ctrl_writemem_bulk+0x24>)
     bulkread_len = buflen;
     //FPGA_setaddr(address);

     /* Transaction done in generic callback */
     LED_On(LED1_GPIO);
   80682:	2010      	movs	r0, #16
     bulkread_address = address;
   80684:	6014      	str	r4, [r2, #0]
     LED_On(LED1_GPIO);
   80686:	4b05      	ldr	r3, [pc, #20]	; (8069c <ctrl_writemem_bulk+0x28>)
}
   80688:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     LED_On(LED1_GPIO);
   8068c:	4718      	bx	r3
   8068e:	bf00      	nop
   80690:	2000311c 	.word	0x2000311c
   80694:	00081511 	.word	0x00081511
   80698:	200030ec 	.word	0x200030ec
   8069c:	00082ea5 	.word	0x00082ea5

000806a0 <ctrl_readmem_bulk>:
{
   806a0:	b570      	push	{r4, r5, r6, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   806a2:	4b08      	ldr	r3, [pc, #32]	; (806c4 <ctrl_readmem_bulk+0x24>)
     FPGA_setlock(fpga_blockin);
   806a4:	2002      	movs	r0, #2
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   806a6:	e9d3 5400 	ldrd	r5, r4, [r3]
     FPGA_setlock(fpga_blockin);
   806aa:	4b07      	ldr	r3, [pc, #28]	; (806c8 <ctrl_readmem_bulk+0x28>)
   806ac:	4798      	blx	r3
     LED_On(LED2_GPIO);
   806ae:	204c      	movs	r0, #76	; 0x4c
   806b0:	4b06      	ldr	r3, [pc, #24]	; (806cc <ctrl_readmem_bulk+0x2c>)
   806b2:	4798      	blx	r3
     udi_vendor_bulk_in_run(
   806b4:	4629      	mov	r1, r5
   806b6:	f104 40c0 	add.w	r0, r4, #1610612736	; 0x60000000
   806ba:	4a05      	ldr	r2, [pc, #20]	; (806d0 <ctrl_readmem_bulk+0x30>)
   806bc:	4b05      	ldr	r3, [pc, #20]	; (806d4 <ctrl_readmem_bulk+0x34>)
}
   806be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     udi_vendor_bulk_in_run(
   806c2:	4718      	bx	r3
   806c4:	2000311c 	.word	0x2000311c
   806c8:	00081511 	.word	0x00081511
   806cc:	00082ea5 	.word	0x00082ea5
   806d0:	0008075d 	.word	0x0008075d
   806d4:	00083221 	.word	0x00083221

000806d8 <ctrl_readmem_rng_bulk>:
	if (buflen >= sizeof(buffer))
   806d8:	f242 3327 	movw	r3, #8999	; 0x2327
void ctrl_readmem_rng_bulk(void){
   806dc:	b510      	push	{r4, lr}
	uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   806de:	4a07      	ldr	r2, [pc, #28]	; (806fc <ctrl_readmem_rng_bulk+0x24>)
   806e0:	6814      	ldr	r4, [r2, #0]
	if (buflen >= sizeof(buffer))
   806e2:	429c      	cmp	r4, r3
   806e4:	d900      	bls.n	806e8 <ctrl_readmem_rng_bulk+0x10>
}
   806e6:	bd10      	pop	{r4, pc}
	LED_On(LED2_GPIO);
   806e8:	204c      	movs	r0, #76	; 0x4c
   806ea:	4b05      	ldr	r3, [pc, #20]	; (80700 <ctrl_readmem_rng_bulk+0x28>)
   806ec:	4798      	blx	r3
	udi_vendor_bulk_in_run(
   806ee:	4621      	mov	r1, r4
}
   806f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	udi_vendor_bulk_in_run(
   806f4:	4a03      	ldr	r2, [pc, #12]	; (80704 <ctrl_readmem_rng_bulk+0x2c>)
   806f6:	4804      	ldr	r0, [pc, #16]	; (80708 <ctrl_readmem_rng_bulk+0x30>)
   806f8:	4b04      	ldr	r3, [pc, #16]	; (8070c <ctrl_readmem_rng_bulk+0x34>)
   806fa:	4718      	bx	r3
   806fc:	2000311c 	.word	0x2000311c
   80700:	00082ea5 	.word	0x00082ea5
   80704:	0008075d 	.word	0x0008075d
   80708:	20000dc4 	.word	0x20000dc4
   8070c:	00083221 	.word	0x00083221

00080710 <ballistic_setup_in_received>:
     return false;
}

bool ballistic_setup_in_received(void)
{
     switch (udd_g_ctrlreq.req.bRequest) {
   80710:	4a0d      	ldr	r2, [pc, #52]	; (80748 <ballistic_setup_in_received+0x38>)
   80712:	7853      	ldrb	r3, [r2, #1]
   80714:	2b12      	cmp	r3, #18
   80716:	d003      	beq.n	80720 <ballistic_setup_in_received+0x10>
   80718:	2b15      	cmp	r3, #21
   8071a:	d001      	beq.n	80720 <ballistic_setup_in_received+0x10>
   8071c:	2000      	movs	r0, #0
                    FPGA_setlock(fpga_unlocked);
               }
               return true;
     }
     return false;
}
   8071e:	4770      	bx	lr
{
   80720:	b510      	push	{r4, lr}
               ctrlmemread_size = 0;
   80722:	2400      	movs	r4, #0
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80724:	4b09      	ldr	r3, [pc, #36]	; (8074c <ballistic_setup_in_received+0x3c>)
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   80726:	480a      	ldr	r0, [pc, #40]	; (80750 <ballistic_setup_in_received+0x40>)
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   80728:	6819      	ldr	r1, [r3, #0]
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   8072a:	6800      	ldr	r0, [r0, #0]
               udd_g_ctrlreq.payload_size = ctrlmemread_size;
   8072c:	8191      	strh	r1, [r2, #12]
               if (FPGA_lockstatus() == fpga_ctrlmem) {
   8072e:	4909      	ldr	r1, [pc, #36]	; (80754 <ballistic_setup_in_received+0x44>)
               udd_g_ctrlreq.payload = ctrlmemread_buf;
   80730:	6090      	str	r0, [r2, #8]
               ctrlmemread_size = 0;
   80732:	601c      	str	r4, [r3, #0]
               if (FPGA_lockstatus() == fpga_ctrlmem) {
   80734:	4788      	blx	r1
   80736:	2805      	cmp	r0, #5
   80738:	d001      	beq.n	8073e <ballistic_setup_in_received+0x2e>
   8073a:	2001      	movs	r0, #1
}
   8073c:	bd10      	pop	{r4, pc}
                    FPGA_setlock(fpga_unlocked);
   8073e:	4620      	mov	r0, r4
   80740:	4b05      	ldr	r3, [pc, #20]	; (80758 <ballistic_setup_in_received+0x48>)
   80742:	4798      	blx	r3
   80744:	2001      	movs	r0, #1
}
   80746:	bd10      	pop	{r4, pc}
   80748:	200036e0 	.word	0x200036e0
   8074c:	200030f4 	.word	0x200030f4
   80750:	200030f0 	.word	0x200030f0
   80754:	0008154d 	.word	0x0008154d
   80758:	00081511 	.word	0x00081511

0008075c <main_vendor_bulk_in_received>:
void main_vendor_bulk_in_received(udd_ep_status_t status,
                                  iram_size_t nb_transfered, udd_ep_id_t ep)
{
     UNUSED(nb_transfered);
     UNUSED(ep);
     if (UDD_EP_TRANSFER_OK != status) {
   8075c:	b100      	cbz	r0, 80760 <main_vendor_bulk_in_received+0x4>
   8075e:	4770      	bx	lr
{
   80760:	b510      	push	{r4, lr}
          return; // Transfer aborted/error
     }

     if (FPGA_lockstatus() == fpga_blockin){
   80762:	4b05      	ldr	r3, [pc, #20]	; (80778 <main_vendor_bulk_in_received+0x1c>)
   80764:	4604      	mov	r4, r0
   80766:	4798      	blx	r3
   80768:	2802      	cmp	r0, #2
   8076a:	d000      	beq.n	8076e <main_vendor_bulk_in_received+0x12>
          FPGA_setlock(fpga_unlocked);
     }
}
   8076c:	bd10      	pop	{r4, pc}
          FPGA_setlock(fpga_unlocked);
   8076e:	4620      	mov	r0, r4
}
   80770:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          FPGA_setlock(fpga_unlocked);
   80774:	4b01      	ldr	r3, [pc, #4]	; (8077c <main_vendor_bulk_in_received+0x20>)
   80776:	4718      	bx	r3
   80778:	0008154d 	.word	0x0008154d
   8077c:	00081511 	.word	0x00081511

00080780 <main_vendor_bulk_out_received>:

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep)
{
   80780:	b510      	push	{r4, lr}
     UNUSED(ep);
     if (UDD_EP_TRANSFER_OK != status) {
   80782:	b9a8      	cbnz	r0, 807b0 <main_vendor_bulk_out_received+0x30>
          return;
     }

     if (blockendpoint_usage == bep_emem){

          for(uint32_t i = 0; i < nb_transfered; i++){
   80784:	b181      	cbz	r1, 807a8 <main_vendor_bulk_out_received+0x28>
   80786:	4810      	ldr	r0, [pc, #64]	; (807c8 <main_vendor_bulk_out_received+0x48>)
               xram[i + bulkread_address] = main_buf_loopback[i];
   80788:	4a10      	ldr	r2, [pc, #64]	; (807cc <main_vendor_bulk_out_received+0x4c>)
   8078a:	4603      	mov	r3, r0
   8078c:	6812      	ldr	r2, [r2, #0]
   8078e:	4c10      	ldr	r4, [pc, #64]	; (807d0 <main_vendor_bulk_out_received+0x50>)
   80790:	4401      	add	r1, r0
   80792:	eba2 0e00 	sub.w	lr, r2, r0
   80796:	eb0e 0203 	add.w	r2, lr, r3
   8079a:	f813 cb01 	ldrb.w	ip, [r3], #1
   8079e:	6820      	ldr	r0, [r4, #0]
          for(uint32_t i = 0; i < nb_transfered; i++){
   807a0:	4299      	cmp	r1, r3
               xram[i + bulkread_address] = main_buf_loopback[i];
   807a2:	f800 c002 	strb.w	ip, [r0, r2]
          for(uint32_t i = 0; i < nb_transfered; i++){
   807a6:	d1f6      	bne.n	80796 <main_vendor_bulk_out_received+0x16>
          }

          if (FPGA_lockstatus() == fpga_blockout){
   807a8:	4b0a      	ldr	r3, [pc, #40]	; (807d4 <main_vendor_bulk_out_received+0x54>)
   807aa:	4798      	blx	r3
   807ac:	2804      	cmp	r0, #4
   807ae:	d007      	beq.n	807c0 <main_vendor_bulk_out_received+0x40>

     udi_vendor_bulk_out_run(
          main_buf_loopback,
          sizeof(main_buf_loopback),
          main_vendor_bulk_out_received);
}
   807b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
          udi_vendor_bulk_out_run(
   807b4:	f44f 6180 	mov.w	r1, #1024	; 0x400
   807b8:	4a07      	ldr	r2, [pc, #28]	; (807d8 <main_vendor_bulk_out_received+0x58>)
   807ba:	4803      	ldr	r0, [pc, #12]	; (807c8 <main_vendor_bulk_out_received+0x48>)
   807bc:	4b07      	ldr	r3, [pc, #28]	; (807dc <main_vendor_bulk_out_received+0x5c>)
   807be:	4718      	bx	r3
               FPGA_setlock(fpga_unlocked);
   807c0:	4b07      	ldr	r3, [pc, #28]	; (807e0 <main_vendor_bulk_out_received+0x60>)
   807c2:	2000      	movs	r0, #0
   807c4:	4798      	blx	r3
   807c6:	e7f3      	b.n	807b0 <main_vendor_bulk_out_received+0x30>
   807c8:	2000315c 	.word	0x2000315c
   807cc:	200030ec 	.word	0x200030ec
   807d0:	20000350 	.word	0x20000350
   807d4:	0008154d 	.word	0x0008154d
   807d8:	00080781 	.word	0x00080781
   807dc:	00083241 	.word	0x00083241
   807e0:	00081511 	.word	0x00081511

000807e4 <ctrl_writemem_rng>:
{
   807e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   807e6:	4e1f      	ldr	r6, [pc, #124]	; (80864 <ctrl_writemem_rng+0x80>)
     LED_On(LED1_GPIO);
   807e8:	2010      	movs	r0, #16
     uint32_t address = *(CTRLBUFFER_WORDPTR + 1);
   807ea:	6874      	ldr	r4, [r6, #4]
     LED_On(LED1_GPIO);
   807ec:	4b1e      	ldr	r3, [pc, #120]	; (80868 <ctrl_writemem_rng+0x84>)
     uint32_t buflen = *(CTRLBUFFER_WORDPTR);
   807ee:	6837      	ldr	r7, [r6, #0]
     LED_On(LED1_GPIO);
   807f0:	4798      	blx	r3
     if (!address) {
   807f2:	b94c      	cbnz	r4, 80808 <ctrl_writemem_rng+0x24>
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   807f4:	4d1d      	ldr	r5, [pc, #116]	; (8086c <ctrl_writemem_rng+0x88>)
               seed[i] = state[i];
   807f6:	f8df c078 	ldr.w	ip, [pc, #120]	; 80870 <ctrl_writemem_rng+0x8c>
               state[i] = CTRLBUFFER_WORDPTR[i + 2];
   807fa:	3608      	adds	r6, #8
   807fc:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
   80800:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
               seed[i] = state[i];
   80804:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
     for (i = 0; i < num_rng; i++) {
   80808:	08bf      	lsrs	r7, r7, #2
   8080a:	d029      	beq.n	80860 <ctrl_writemem_rng+0x7c>
   8080c:	4d17      	ldr	r5, [pc, #92]	; (8086c <ctrl_writemem_rng+0x88>)
   8080e:	4e19      	ldr	r6, [pc, #100]	; (80874 <ctrl_writemem_rng+0x90>)
   80810:	eb04 0c87 	add.w	ip, r4, r7, lsl #2
     s = state[0];
   80814:	6829      	ldr	r1, [r5, #0]
     uint32_t s, t = state[3];
   80816:	68ea      	ldr	r2, [r5, #12]
     t ^= t << 11;
   80818:	ea81 40d1 	eor.w	r0, r1, r1, lsr #19
   8081c:	ea82 22c2 	eor.w	r2, r2, r2, lsl #11
     state[3] = state[2];
   80820:	ea80 0302 	eor.w	r3, r0, r2
     t ^= s >> 19;
   80824:	ea83 2312 	eor.w	r3, r3, r2, lsr #8
     state[2] = state[1];
   80828:	6868      	ldr	r0, [r5, #4]
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8082a:	6832      	ldr	r2, [r6, #0]
     state[3] = state[2];
   8082c:	68af      	ldr	r7, [r5, #8]
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8082e:	fa5f fe83 	uxtb.w	lr, r3
     state[0] = t;
   80832:	e9c5 3100 	strd	r3, r1, [r5]
     state[2] = state[1];
   80836:	e9c5 0702 	strd	r0, r7, [r5, #8]
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8083a:	f802 e004 	strb.w	lr, [r2, r4]
   8083e:	6831      	ldr	r1, [r6, #0]
   80840:	1c62      	adds	r2, r4, #1
   80842:	f3c3 2007 	ubfx	r0, r3, #8, #8
   80846:	5488      	strb	r0, [r1, r2]
   80848:	6831      	ldr	r1, [r6, #0]
   8084a:	1ca2      	adds	r2, r4, #2
   8084c:	f3c3 4007 	ubfx	r0, r3, #16, #8
   80850:	5488      	strb	r0, [r1, r2]
   80852:	6831      	ldr	r1, [r6, #0]
   80854:	1ce2      	adds	r2, r4, #3
     for (i = 0; i < num_rng; i++) {
   80856:	3404      	adds	r4, #4
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   80858:	0e1b      	lsrs	r3, r3, #24
     for (i = 0; i < num_rng; i++) {
   8085a:	45a4      	cmp	ip, r4
               xram[i * 4 + j + address] = (rng_val >> (8 * j)) & 0xFF;
   8085c:	548b      	strb	r3, [r1, r2]
     for (i = 0; i < num_rng; i++) {
   8085e:	d1d9      	bne.n	80814 <ctrl_writemem_rng+0x30>
}
   80860:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   80862:	bf00      	nop
   80864:	2000311c 	.word	0x2000311c
   80868:	00082ea5 	.word	0x00082ea5
   8086c:	2000310c 	.word	0x2000310c
   80870:	200030fc 	.word	0x200030fc
   80874:	20000350 	.word	0x20000350

00080878 <ballistic_setup_out_received>:
{
   80878:	b508      	push	{r3, lr}
     switch (udd_g_ctrlreq.req.bRequest) {
   8087a:	4a15      	ldr	r2, [pc, #84]	; (808d0 <ballistic_setup_out_received+0x58>)
   8087c:	7853      	ldrb	r3, [r2, #1]
   8087e:	3b10      	subs	r3, #16
   80880:	2b08      	cmp	r3, #8
   80882:	d80a      	bhi.n	8089a <ballistic_setup_out_received+0x22>
   80884:	e8df f003 	tbb	[pc, r3]
   80888:	17130f0b 	.word	0x17130f0b
   8088c:	09091f1b 	.word	0x09091f1b
   80890:	05          	.byte	0x05
   80891:	00          	.byte	0x00
          udd_g_ctrlreq.callback = ctrl_readmem_rng_bulk;
   80892:	4b10      	ldr	r3, [pc, #64]	; (808d4 <ballistic_setup_out_received+0x5c>)
          return true;
   80894:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_rng_bulk;
   80896:	6113      	str	r3, [r2, #16]
}
   80898:	bd08      	pop	{r3, pc}
     switch (udd_g_ctrlreq.req.bRequest) {
   8089a:	2000      	movs	r0, #0
}
   8089c:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   8089e:	4b0e      	ldr	r3, [pc, #56]	; (808d8 <ballistic_setup_out_received+0x60>)
          return true;
   808a0:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_bulk;
   808a2:	6113      	str	r3, [r2, #16]
}
   808a4:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   808a6:	4b0d      	ldr	r3, [pc, #52]	; (808dc <ballistic_setup_out_received+0x64>)
          return true;
   808a8:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_bulk;
   808aa:	6113      	str	r3, [r2, #16]
}
   808ac:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   808ae:	4b0c      	ldr	r3, [pc, #48]	; (808e0 <ballistic_setup_out_received+0x68>)
          return true;
   808b0:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_readmem_ctrl;
   808b2:	6113      	str	r3, [r2, #16]
}
   808b4:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   808b6:	4b0b      	ldr	r3, [pc, #44]	; (808e4 <ballistic_setup_out_received+0x6c>)
          return true;
   808b8:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_writemem_ctrl;
   808ba:	6113      	str	r3, [r2, #16]
}
   808bc:	bd08      	pop	{r3, pc}
          ctrl_writemem_rng();
   808be:	4b0a      	ldr	r3, [pc, #40]	; (808e8 <ballistic_setup_out_received+0x70>)
   808c0:	4798      	blx	r3
          return true;
   808c2:	2001      	movs	r0, #1
}
   808c4:	bd08      	pop	{r3, pc}
          udd_g_ctrlreq.callback = ctrl_testmem;
   808c6:	4b09      	ldr	r3, [pc, #36]	; (808ec <ballistic_setup_out_received+0x74>)
          return true;
   808c8:	2001      	movs	r0, #1
          udd_g_ctrlreq.callback = ctrl_testmem;
   808ca:	6113      	str	r3, [r2, #16]
}
   808cc:	bd08      	pop	{r3, pc}
   808ce:	bf00      	nop
   808d0:	200036e0 	.word	0x200036e0
   808d4:	000806d9 	.word	0x000806d9
   808d8:	000806a1 	.word	0x000806a1
   808dc:	00080675 	.word	0x00080675
   808e0:	000805ed 	.word	0x000805ed
   808e4:	00080625 	.word	0x00080625
   808e8:	000807e5 	.word	0x000807e5
   808ec:	000804c5 	.word	0x000804c5

000808f0 <ballistic_register_handlers>:

void ballistic_register_handlers(void)
{
   808f0:	b510      	push	{r4, lr}
     naeusb_add_in_handler(ballistic_setup_in_received);
   808f2:	4b04      	ldr	r3, [pc, #16]	; (80904 <ballistic_register_handlers+0x14>)
   808f4:	4804      	ldr	r0, [pc, #16]	; (80908 <ballistic_register_handlers+0x18>)
   808f6:	4798      	blx	r3
     naeusb_add_out_handler(ballistic_setup_out_received);
   808f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     naeusb_add_out_handler(ballistic_setup_out_received);
   808fc:	4803      	ldr	r0, [pc, #12]	; (8090c <ballistic_register_handlers+0x1c>)
   808fe:	4b04      	ldr	r3, [pc, #16]	; (80910 <ballistic_register_handlers+0x20>)
   80900:	4718      	bx	r3
   80902:	bf00      	nop
   80904:	00080915 	.word	0x00080915
   80908:	00080711 	.word	0x00080711
   8090c:	00080879 	.word	0x00080879
   80910:	0008093d 	.word	0x0008093d

00080914 <naeusb_add_in_handler>:
    return main_b_vendor_enable;
}

bool naeusb_add_in_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_in_handlers < 16) {
   80914:	4907      	ldr	r1, [pc, #28]	; (80934 <naeusb_add_in_handler+0x20>)
   80916:	780a      	ldrb	r2, [r1, #0]
   80918:	2a0f      	cmp	r2, #15
   8091a:	d901      	bls.n	80920 <naeusb_add_in_handler+0xc>
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
        return true;
    }
    return false;
   8091c:	2000      	movs	r0, #0
    
}
   8091e:	4770      	bx	lr
   80920:	4603      	mov	r3, r0
{
   80922:	b410      	push	{r4}
        naeusb_in_request_handlers[naeusb_num_in_handlers++] = new_handler;
   80924:	1c50      	adds	r0, r2, #1
   80926:	4c04      	ldr	r4, [pc, #16]	; (80938 <naeusb_add_in_handler+0x24>)
   80928:	7008      	strb	r0, [r1, #0]
   8092a:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   8092e:	2001      	movs	r0, #1
}
   80930:	bc10      	pop	{r4}
   80932:	4770      	bx	lr
   80934:	2000359c 	.word	0x2000359c
   80938:	2000355c 	.word	0x2000355c

0008093c <naeusb_add_out_handler>:

bool naeusb_add_out_handler(usb_request_handle_func new_handler)
{
    if (naeusb_num_out_handlers < 16) {
   8093c:	4907      	ldr	r1, [pc, #28]	; (8095c <naeusb_add_out_handler+0x20>)
   8093e:	780a      	ldrb	r2, [r1, #0]
   80940:	2a0f      	cmp	r2, #15
   80942:	d901      	bls.n	80948 <naeusb_add_out_handler+0xc>
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
        return true;
    }
    return false;
   80944:	2000      	movs	r0, #0
    
}
   80946:	4770      	bx	lr
   80948:	4603      	mov	r3, r0
{
   8094a:	b410      	push	{r4}
        naeusb_out_request_handlers[naeusb_num_out_handlers++] = new_handler;
   8094c:	1c50      	adds	r0, r2, #1
   8094e:	4c04      	ldr	r4, [pc, #16]	; (80960 <naeusb_add_out_handler+0x24>)
   80950:	7008      	strb	r0, [r1, #0]
   80952:	f844 3022 	str.w	r3, [r4, r2, lsl #2]
        return true;
   80956:	2001      	movs	r0, #1
}
   80958:	bc10      	pop	{r4}
   8095a:	4770      	bx	lr
   8095c:	2000359d 	.word	0x2000359d
   80960:	200035a0 	.word	0x200035a0

00080964 <main_suspend_action>:

//this stuff just turns leds on and off
void main_suspend_action(void)
{
	active = false;
	ui_powerdown();
   80964:	4b00      	ldr	r3, [pc, #0]	; (80968 <main_suspend_action+0x4>)
   80966:	4718      	bx	r3
   80968:	000837b1 	.word	0x000837b1

0008096c <main_resume_action>:
}

void main_resume_action(void)
{
    ui_wakeup();
   8096c:	4b00      	ldr	r3, [pc, #0]	; (80970 <main_resume_action+0x4>)
   8096e:	4718      	bx	r3
   80970:	000837d5 	.word	0x000837d5

00080974 <main_sof_action>:
}

void main_sof_action(void)
{
    if (!main_b_vendor_enable)
   80974:	4b05      	ldr	r3, [pc, #20]	; (8098c <main_sof_action+0x18>)
   80976:	781b      	ldrb	r3, [r3, #0]
   80978:	b903      	cbnz	r3, 8097c <main_sof_action+0x8>
   8097a:	4770      	bx	lr
{
   8097c:	b510      	push	{r4, lr}
        return;
    ui_process(udd_get_frame_number());
   8097e:	4b04      	ldr	r3, [pc, #16]	; (80990 <main_sof_action+0x1c>)
   80980:	4798      	blx	r3
}
   80982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    ui_process(udd_get_frame_number());
   80986:	4b03      	ldr	r3, [pc, #12]	; (80994 <main_sof_action+0x20>)
   80988:	4718      	bx	r3
   8098a:	bf00      	nop
   8098c:	20000214 	.word	0x20000214
   80990:	00082651 	.word	0x00082651
   80994:	000837f1 	.word	0x000837f1

00080998 <main_vendor_enable>:

void main_vendor_bulk_out_received(udd_ep_status_t status,
                                   iram_size_t nb_transfered, udd_ep_id_t ep);

bool main_vendor_enable(void)
{
   80998:	b538      	push	{r3, r4, r5, lr}
    active = true;
    main_b_vendor_enable = true;
   8099a:	2401      	movs	r4, #1
   8099c:	4d04      	ldr	r5, [pc, #16]	; (809b0 <main_vendor_enable+0x18>)
    // Start data reception on OUT endpoints
// #if UDI_VENDOR_EPS_SIZE_BULK_FS
//     //main_vendor_bulk_in_received(UDD_EP_TRANSFER_OK, 0, 0);
    udi_vendor_bulk_out_run(
   8099e:	f44f 6180 	mov.w	r1, #1024	; 0x400
   809a2:	4a04      	ldr	r2, [pc, #16]	; (809b4 <main_vendor_enable+0x1c>)
   809a4:	4b04      	ldr	r3, [pc, #16]	; (809b8 <main_vendor_enable+0x20>)
   809a6:	4805      	ldr	r0, [pc, #20]	; (809bc <main_vendor_enable+0x24>)
    main_b_vendor_enable = true;
   809a8:	702c      	strb	r4, [r5, #0]
    udi_vendor_bulk_out_run(
   809aa:	4798      	blx	r3
        main_buf_loopback,
        sizeof(main_buf_loopback),
        main_vendor_bulk_out_received);
// #endif
    return true;
}
   809ac:	4620      	mov	r0, r4
   809ae:	bd38      	pop	{r3, r4, r5, pc}
   809b0:	20000214 	.word	0x20000214
   809b4:	00080781 	.word	0x00080781
   809b8:	00083241 	.word	0x00083241
   809bc:	2000315c 	.word	0x2000315c

000809c0 <main_vendor_disable>:

void main_vendor_disable(void)
{
    main_b_vendor_enable = false;
   809c0:	2200      	movs	r2, #0
   809c2:	4b01      	ldr	r3, [pc, #4]	; (809c8 <main_vendor_disable+0x8>)
   809c4:	701a      	strb	r2, [r3, #0]
}
   809c6:	4770      	bx	lr
   809c8:	20000214 	.word	0x20000214

000809cc <main_setup_out_received>:

bool main_setup_out_received(void)
{
   809cc:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;
    udd_g_ctrlreq.payload = ctrlbuffer;
   809ce:	4b0f      	ldr	r3, [pc, #60]	; (80a0c <main_setup_out_received+0x40>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));

    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   809d0:	4a0f      	ldr	r2, [pc, #60]	; (80a10 <main_setup_out_received+0x44>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   809d2:	88d9      	ldrh	r1, [r3, #6]
    udd_g_ctrlreq.payload = ctrlbuffer;
   809d4:	480f      	ldr	r0, [pc, #60]	; (80a14 <main_setup_out_received+0x48>)
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   809d6:	2940      	cmp	r1, #64	; 0x40
   809d8:	bf28      	it	cs
   809da:	2140      	movcs	r1, #64	; 0x40
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   809dc:	7812      	ldrb	r2, [r2, #0]
    udd_g_ctrlreq.payload = ctrlbuffer;
   809de:	6098      	str	r0, [r3, #8]
    udd_g_ctrlreq.payload_size = min(udd_g_ctrlreq.req.wLength,	sizeof(ctrlbuffer));
   809e0:	8199      	strh	r1, [r3, #12]
    for (uint8_t i = naeusb_num_out_handlers; i > 0; i--) {
   809e2:	b18a      	cbz	r2, 80a08 <main_setup_out_received+0x3c>
   809e4:	4c0c      	ldr	r4, [pc, #48]	; (80a18 <main_setup_out_received+0x4c>)
   809e6:	1e55      	subs	r5, r2, #1
   809e8:	b2ed      	uxtb	r5, r5
   809ea:	1b53      	subs	r3, r2, r5
   809ec:	1f25      	subs	r5, r4, #4
   809ee:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   809f2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   809f6:	e001      	b.n	809fc <main_setup_out_received+0x30>
   809f8:	42ac      	cmp	r4, r5
   809fa:	d005      	beq.n	80a08 <main_setup_out_received+0x3c>
        handler_status = naeusb_out_request_handlers[i-1]();
   809fc:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   80a00:	4798      	blx	r3
        if (handler_status == true) {
   80a02:	2800      	cmp	r0, #0
   80a04:	d0f8      	beq.n	809f8 <main_setup_out_received+0x2c>
        }
    }

    return false;

}
   80a06:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   80a08:	2000      	movs	r0, #0
}
   80a0a:	bd38      	pop	{r3, r4, r5, pc}
   80a0c:	200036e0 	.word	0x200036e0
   80a10:	2000359d 	.word	0x2000359d
   80a14:	2000311c 	.word	0x2000311c
   80a18:	200035a0 	.word	0x200035a0

00080a1c <main_setup_in_received>:

bool main_setup_in_received(void)
{
   80a1c:	b538      	push	{r3, r4, r5, lr}
    bool handler_status = false;

    for (uint8_t i = naeusb_num_in_handlers; i > 0; i--) {
   80a1e:	4b0b      	ldr	r3, [pc, #44]	; (80a4c <main_setup_in_received+0x30>)
   80a20:	781a      	ldrb	r2, [r3, #0]
   80a22:	b18a      	cbz	r2, 80a48 <main_setup_in_received+0x2c>
   80a24:	4c0a      	ldr	r4, [pc, #40]	; (80a50 <main_setup_in_received+0x34>)
   80a26:	1e55      	subs	r5, r2, #1
   80a28:	b2ed      	uxtb	r5, r5
   80a2a:	1b53      	subs	r3, r2, r5
   80a2c:	1f25      	subs	r5, r4, #4
   80a2e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   80a32:	eb04 0482 	add.w	r4, r4, r2, lsl #2
   80a36:	e001      	b.n	80a3c <main_setup_in_received+0x20>
   80a38:	42ac      	cmp	r4, r5
   80a3a:	d005      	beq.n	80a48 <main_setup_in_received+0x2c>
        handler_status = naeusb_in_request_handlers[i-1]();
   80a3c:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   80a40:	4798      	blx	r3
        if (handler_status == true) {
   80a42:	2800      	cmp	r0, #0
   80a44:	d0f8      	beq.n	80a38 <main_setup_in_received+0x1c>
        }
    }

    return false;

   80a46:	bd38      	pop	{r3, r4, r5, pc}
    return false;
   80a48:	2000      	movs	r0, #0
   80a4a:	bd38      	pop	{r3, r4, r5, pc}
   80a4c:	2000359c 	.word	0x2000359c
   80a50:	2000355c 	.word	0x2000355c

00080a54 <naeusb_setup_out_received>:
}


bool naeusb_setup_out_received(void)
{
    switch (udd_g_ctrlreq.req.bRequest) {
   80a54:	4b04      	ldr	r3, [pc, #16]	; (80a68 <naeusb_setup_out_received+0x14>)
   80a56:	785a      	ldrb	r2, [r3, #1]
   80a58:	2a22      	cmp	r2, #34	; 0x22
        case REQ_SAM_CFG:
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   80a5a:	bf03      	ittte	eq
   80a5c:	4a03      	ldreq	r2, [pc, #12]	; (80a6c <naeusb_setup_out_received+0x18>)
            return true;
   80a5e:	2001      	moveq	r0, #1
            udd_g_ctrlreq.callback = naeusb_sam_cfg_out;
   80a60:	611a      	streq	r2, [r3, #16]
            break;
    }
    return false;
   80a62:	2000      	movne	r0, #0
}
   80a64:	4770      	bx	lr
   80a66:	bf00      	nop
   80a68:	200036e0 	.word	0x200036e0
   80a6c:	00080a71 	.word	0x00080a71

00080a70 <naeusb_sam_cfg_out>:
{
   80a70:	b510      	push	{r4, lr}
    switch(udd_g_ctrlreq.req.wValue & 0xFF)
   80a72:	4b22      	ldr	r3, [pc, #136]	; (80afc <naeusb_sam_cfg_out+0x8c>)
   80a74:	789b      	ldrb	r3, [r3, #2]
   80a76:	3b01      	subs	r3, #1
   80a78:	2b10      	cmp	r3, #16
   80a7a:	d80a      	bhi.n	80a92 <naeusb_sam_cfg_out+0x22>
   80a7c:	e8df f003 	tbb	[pc, r3]
   80a80:	091b160a 	.word	0x091b160a
   80a84:	09090909 	.word	0x09090909
   80a88:	09090909 	.word	0x09090909
   80a8c:	2d090909 	.word	0x2d090909
   80a90:	3a          	.byte	0x3a
   80a91:	00          	.byte	0x00
}
   80a92:	bd10      	pop	{r4, pc}
		pmc_osc_enable_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   80a94:	203e      	movs	r0, #62	; 0x3e
   80a96:	4b1a      	ldr	r3, [pc, #104]	; (80b00 <naeusb_sam_cfg_out+0x90>)
   80a98:	4798      	blx	r3
				BOARD_OSC_STARTUP_US, OSC_SLCK_32K_RC_HZ));
		break;
   80a9a:	4c1a      	ldr	r4, [pc, #104]	; (80b04 <naeusb_sam_cfg_out+0x94>)
	case OSC_MAINCK_12M_RC:
		return pmc_osc_is_ready_fastrc();

	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_main_xtal();
   80a9c:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   80a9e:	2800      	cmp	r0, #0
   80aa0:	d0fc      	beq.n	80a9c <naeusb_sam_cfg_out+0x2c>
   80aa2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
   80aa6:	2010      	movs	r0, #16
   80aa8:	4b17      	ldr	r3, [pc, #92]	; (80b08 <naeusb_sam_cfg_out+0x98>)
   80aaa:	4718      	bx	r3
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80aac:	2010      	movs	r0, #16
}
   80aae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   80ab2:	4b16      	ldr	r3, [pc, #88]	; (80b0c <naeusb_sam_cfg_out+0x9c>)
   80ab4:	4718      	bx	r3
        efc_perform_command(EFC0, EFC_FCMD_CGPB, 1);
   80ab6:	2201      	movs	r2, #1
   80ab8:	210c      	movs	r1, #12
   80aba:	4b15      	ldr	r3, [pc, #84]	; (80b10 <naeusb_sam_cfg_out+0xa0>)
   80abc:	4815      	ldr	r0, [pc, #84]	; (80b14 <naeusb_sam_cfg_out+0xa4>)
   80abe:	4798      	blx	r3
 *
 * The driver must remove pull-up on USB line D- or D+.
 */
static inline void udc_detach(void)
{
	udd_detach();
   80ac0:	4b15      	ldr	r3, [pc, #84]	; (80b18 <naeusb_sam_cfg_out+0xa8>)
   80ac2:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   80ac4:	4a15      	ldr	r2, [pc, #84]	; (80b1c <naeusb_sam_cfg_out+0xac>)
   80ac6:	6853      	ldr	r3, [r2, #4]
   80ac8:	0399      	lsls	r1, r3, #14
   80aca:	d4fc      	bmi.n	80ac6 <naeusb_sam_cfg_out+0x56>
		RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80acc:	6813      	ldr	r3, [r2, #0]
   80ace:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80ad2:	f043 0305 	orr.w	r3, r3, #5
   80ad6:	6013      	str	r3, [r2, #0]
        while(1);
   80ad8:	e7fe      	b.n	80ad8 <naeusb_sam_cfg_out+0x68>
   80ada:	4b0f      	ldr	r3, [pc, #60]	; (80b18 <naeusb_sam_cfg_out+0xa8>)
   80adc:	4798      	blx	r3
        while (RSTC->RSTC_SR & RSTC_SR_SRCMP);
   80ade:	4a0f      	ldr	r2, [pc, #60]	; (80b1c <naeusb_sam_cfg_out+0xac>)
   80ae0:	6853      	ldr	r3, [r2, #4]
   80ae2:	039b      	lsls	r3, r3, #14
   80ae4:	d4fc      	bmi.n	80ae0 <naeusb_sam_cfg_out+0x70>
        RSTC->RSTC_CR |= RSTC_CR_KEY_PASSWD | RSTC_CR_PERRST | RSTC_CR_PROCRST;
   80ae6:	6813      	ldr	r3, [r2, #0]
   80ae8:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   80aec:	f043 0305 	orr.w	r3, r3, #5
   80af0:	6013      	str	r3, [r2, #0]
        while(1);
   80af2:	e7fe      	b.n	80af2 <naeusb_sam_cfg_out+0x82>
        FPGA_releaselock();
   80af4:	4b0a      	ldr	r3, [pc, #40]	; (80b20 <naeusb_sam_cfg_out+0xb0>)
}
   80af6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FPGA_releaselock();
   80afa:	4718      	bx	r3
   80afc:	200036e0 	.word	0x200036e0
   80b00:	000830b1 	.word	0x000830b1
   80b04:	000830d5 	.word	0x000830d5
   80b08:	00082ff9 	.word	0x00082ff9
   80b0c:	00083055 	.word	0x00083055
   80b10:	00083261 	.word	0x00083261
   80b14:	400e0800 	.word	0x400e0800
   80b18:	00082595 	.word	0x00082595
   80b1c:	400e1200 	.word	0x400e1200
   80b20:	00081541 	.word	0x00081541

00080b24 <naeusb_setup_in_received>:

bool naeusb_setup_in_received(void)
{
   80b24:	b538      	push	{r3, r4, r5, lr}
    switch (udd_g_ctrlreq.req.bRequest) {
   80b26:	4c15      	ldr	r4, [pc, #84]	; (80b7c <naeusb_setup_in_received+0x58>)
   80b28:	7863      	ldrb	r3, [r4, #1]
   80b2a:	2b17      	cmp	r3, #23
   80b2c:	d01b      	beq.n	80b66 <naeusb_setup_in_received+0x42>
   80b2e:	2b40      	cmp	r3, #64	; 0x40
   80b30:	d117      	bne.n	80b62 <naeusb_setup_in_received+0x3e>
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   80b32:	f04f 0c20 	mov.w	ip, #32
    strncpy(respbuf, BUILD_TIME, 64);
   80b36:	4d12      	ldr	r5, [pc, #72]	; (80b80 <naeusb_setup_in_received+0x5c>)
   80b38:	4b12      	ldr	r3, [pc, #72]	; (80b84 <naeusb_setup_in_received+0x60>)
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   80b3a:	2237      	movs	r2, #55	; 0x37
    strncpy(respbuf, BUILD_TIME, 64);
   80b3c:	e893 0003 	ldmia.w	r3, {r0, r1}
    respbuf[sizeof(BUILD_TIME) - 1] = ' ';
   80b40:	f885 c008 	strb.w	ip, [r5, #8]
    strncpy(respbuf, BUILD_TIME, 64);
   80b44:	e885 0003 	stmia.w	r5, {r0, r1}
    strncpy(respbuf + sizeof(BUILD_TIME), BUILD_DATE, 64 - sizeof(BUILD_TIME));
   80b48:	4b0f      	ldr	r3, [pc, #60]	; (80b88 <naeusb_setup_in_received+0x64>)
   80b4a:	4910      	ldr	r1, [pc, #64]	; (80b8c <naeusb_setup_in_received+0x68>)
   80b4c:	f105 0009 	add.w	r0, r5, #9
   80b50:	4798      	blx	r3
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b52:	4628      	mov	r0, r5
   80b54:	4b0e      	ldr	r3, [pc, #56]	; (80b90 <naeusb_setup_in_received+0x6c>)
    udd_g_ctrlreq.payload = respbuf;
   80b56:	60a5      	str	r5, [r4, #8]
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b58:	4798      	blx	r3
   80b5a:	4603      	mov	r3, r0
        case REQ_FW_VERSION:
            return naeusb_fw_version_in();
            break;
        case REQ_BUILD_DATE:
            return naeusb_build_date_in();
   80b5c:	2001      	movs	r0, #1
    udd_g_ctrlreq.payload_size = strlen(respbuf);
   80b5e:	81a3      	strh	r3, [r4, #12]
            break;
    }
    return false;
}
   80b60:	bd38      	pop	{r3, r4, r5, pc}
    switch (udd_g_ctrlreq.req.bRequest) {
   80b62:	2000      	movs	r0, #0
}
   80b64:	bd38      	pop	{r3, r4, r5, pc}
    respbuf[0] = FW_VER_MAJOR;
   80b66:	f240 1501 	movw	r5, #257	; 0x101
    respbuf[2] = FW_VER_DEBUG;
   80b6a:	2100      	movs	r1, #0
    udd_g_ctrlreq.payload_size = 3;
   80b6c:	2203      	movs	r2, #3
    respbuf[0] = FW_VER_MAJOR;
   80b6e:	4b04      	ldr	r3, [pc, #16]	; (80b80 <naeusb_setup_in_received+0x5c>)
    udd_g_ctrlreq.payload_size = 3;
   80b70:	2001      	movs	r0, #1
    respbuf[0] = FW_VER_MAJOR;
   80b72:	801d      	strh	r5, [r3, #0]
    respbuf[2] = FW_VER_DEBUG;
   80b74:	7099      	strb	r1, [r3, #2]
    udd_g_ctrlreq.payload = respbuf;
   80b76:	60a3      	str	r3, [r4, #8]
    udd_g_ctrlreq.payload_size = 3;
   80b78:	81a2      	strh	r2, [r4, #12]
}
   80b7a:	bd38      	pop	{r3, r4, r5, pc}
   80b7c:	200036e0 	.word	0x200036e0
   80b80:	200035e0 	.word	0x200035e0
   80b84:	0008a890 	.word	0x0008a890
   80b88:	00083ca9 	.word	0x00083ca9
   80b8c:	0008a884 	.word	0x0008a884
   80b90:	00083c4d 	.word	0x00083c4d

00080b94 <naeusb_register_handlers>:

void naeusb_register_handlers(void)
{
   80b94:	b510      	push	{r4, lr}
    naeusb_add_in_handler(naeusb_setup_in_received);
   80b96:	4b04      	ldr	r3, [pc, #16]	; (80ba8 <naeusb_register_handlers+0x14>)
   80b98:	4804      	ldr	r0, [pc, #16]	; (80bac <naeusb_register_handlers+0x18>)
   80b9a:	4798      	blx	r3
    naeusb_add_out_handler(naeusb_setup_out_received);
   80b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    naeusb_add_out_handler(naeusb_setup_out_received);
   80ba0:	4803      	ldr	r0, [pc, #12]	; (80bb0 <naeusb_register_handlers+0x1c>)
   80ba2:	4b04      	ldr	r3, [pc, #16]	; (80bb4 <naeusb_register_handlers+0x20>)
   80ba4:	4718      	bx	r3
   80ba6:	bf00      	nop
   80ba8:	00080915 	.word	0x00080915
   80bac:	00080b25 	.word	0x00080b25
   80bb0:	00080a55 	.word	0x00080a55
   80bb4:	0008093d 	.word	0x0008093d

00080bb8 <udc_valid_address>:
 * \brief Change the address of device
 * Callback called at the end of request set address
 */
static void udc_valid_address(void)
{
	udd_set_address(udd_g_ctrlreq.req.wValue & 0x7F);
   80bb8:	4a02      	ldr	r2, [pc, #8]	; (80bc4 <udc_valid_address+0xc>)
   80bba:	4b03      	ldr	r3, [pc, #12]	; (80bc8 <udc_valid_address+0x10>)
   80bbc:	8850      	ldrh	r0, [r2, #2]
   80bbe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   80bc2:	4718      	bx	r3
   80bc4:	200036e0 	.word	0x200036e0
   80bc8:	00082619 	.word	0x00082619

00080bcc <udc_update_iface_desc.part.0>:
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80bcc:	4b15      	ldr	r3, [pc, #84]	; (80c24 <udc_update_iface_desc.part.0+0x58>)
   80bce:	681b      	ldr	r3, [r3, #0]
   80bd0:	681b      	ldr	r3, [r3, #0]
   80bd2:	791a      	ldrb	r2, [r3, #4]
   80bd4:	4282      	cmp	r2, r0
   80bd6:	d922      	bls.n	80c1e <udc_update_iface_desc.part.0+0x52>
static bool udc_update_iface_desc(uint8_t iface_num, uint8_t setting_num)
   80bd8:	b430      	push	{r4, r5}
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80bda:	4c13      	ldr	r4, [pc, #76]	; (80c28 <udc_update_iface_desc.part.0+0x5c>)
   80bdc:	6023      	str	r3, [r4, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80bde:	f8b3 c002 	ldrh.w	ip, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80be2:	449c      	add	ip, r3
	while (ptr_end_desc >
   80be4:	4563      	cmp	r3, ip
   80be6:	d217      	bcs.n	80c18 <udc_update_iface_desc.part.0+0x4c>
   80be8:	2500      	movs	r5, #0
   80bea:	e004      	b.n	80bf6 <udc_update_iface_desc.part.0+0x2a>
				udc_ptr_iface->bLength);
   80bec:	781a      	ldrb	r2, [r3, #0]
   80bee:	2501      	movs	r5, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80bf0:	4413      	add	r3, r2
	while (ptr_end_desc >
   80bf2:	459c      	cmp	ip, r3
   80bf4:	d90c      	bls.n	80c10 <udc_update_iface_desc.part.0+0x44>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80bf6:	785a      	ldrb	r2, [r3, #1]
   80bf8:	2a04      	cmp	r2, #4
   80bfa:	d1f7      	bne.n	80bec <udc_update_iface_desc.part.0+0x20>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80bfc:	789a      	ldrb	r2, [r3, #2]
   80bfe:	4282      	cmp	r2, r0
   80c00:	d1f4      	bne.n	80bec <udc_update_iface_desc.part.0+0x20>
   80c02:	78da      	ldrb	r2, [r3, #3]
   80c04:	428a      	cmp	r2, r1
   80c06:	d1f1      	bne.n	80bec <udc_update_iface_desc.part.0+0x20>
   80c08:	b105      	cbz	r5, 80c0c <udc_update_iface_desc.part.0+0x40>
   80c0a:	6023      	str	r3, [r4, #0]
				return true; // Interface found
   80c0c:	2001      	movs	r0, #1
   80c0e:	e001      	b.n	80c14 <udc_update_iface_desc.part.0+0x48>
	return false; // Interface not found
   80c10:	2000      	movs	r0, #0
   80c12:	6023      	str	r3, [r4, #0]
}
   80c14:	bc30      	pop	{r4, r5}
   80c16:	4770      	bx	lr
		return false;
   80c18:	2000      	movs	r0, #0
}
   80c1a:	bc30      	pop	{r4, r5}
   80c1c:	4770      	bx	lr
		return false;
   80c1e:	2000      	movs	r0, #0
}
   80c20:	4770      	bx	lr
   80c22:	bf00      	nop
   80c24:	20003628 	.word	0x20003628
   80c28:	2000362c 	.word	0x2000362c

00080c2c <udc_iface_enable.part.0>:
static bool udc_iface_enable(uint8_t iface_num, uint8_t setting_num)
   80c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80c30:	4607      	mov	r7, r0
	ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *) udc_ptr_iface;
   80c32:	4b12      	ldr	r3, [pc, #72]	; (80c7c <udc_iface_enable.part.0+0x50>)
   80c34:	4d12      	ldr	r5, [pc, #72]	; (80c80 <udc_iface_enable.part.0+0x54>)
   80c36:	681c      	ldr	r4, [r3, #0]
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80c38:	4e12      	ldr	r6, [pc, #72]	; (80c84 <udc_iface_enable.part.0+0x58>)
			udc_ptr_conf->desc +
   80c3a:	6829      	ldr	r1, [r5, #0]
			desc->bLength);
   80c3c:	7823      	ldrb	r3, [r4, #0]
			udc_ptr_conf->desc +
   80c3e:	680a      	ldr	r2, [r1, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80c40:	441c      	add	r4, r3
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80c42:	8853      	ldrh	r3, [r2, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80c44:	441a      	add	r2, r3
	while (ptr_eof_desc > desc) {
   80c46:	42a2      	cmp	r2, r4
   80c48:	d806      	bhi.n	80c58 <udc_iface_enable.part.0+0x2c>
   80c4a:	e008      	b.n	80c5e <udc_iface_enable.part.0+0x32>
		if (desc_id == desc->bDescriptorType) {
   80c4c:	2b05      	cmp	r3, #5
   80c4e:	d00d      	beq.n	80c6c <udc_iface_enable.part.0+0x40>
				desc->bLength);
   80c50:	7823      	ldrb	r3, [r4, #0]
		desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80c52:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80c54:	42a2      	cmp	r2, r4
   80c56:	d902      	bls.n	80c5e <udc_iface_enable.part.0+0x32>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80c58:	7863      	ldrb	r3, [r4, #1]
   80c5a:	2b04      	cmp	r3, #4
   80c5c:	d1f6      	bne.n	80c4c <udc_iface_enable.part.0+0x20>
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80c5e:	684b      	ldr	r3, [r1, #4]
   80c60:	f853 3027 	ldr.w	r3, [r3, r7, lsl #2]
}
   80c64:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	return udc_ptr_conf->udi_apis[iface_num]->enable();
   80c68:	681b      	ldr	r3, [r3, #0]
   80c6a:	4718      	bx	r3
		if (!udd_ep_alloc(ep_desc->bEndpointAddress,
   80c6c:	88a2      	ldrh	r2, [r4, #4]
   80c6e:	78e1      	ldrb	r1, [r4, #3]
   80c70:	78a0      	ldrb	r0, [r4, #2]
   80c72:	47b0      	blx	r6
   80c74:	2800      	cmp	r0, #0
   80c76:	d1e0      	bne.n	80c3a <udc_iface_enable.part.0+0xe>
}
   80c78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80c7c:	2000362c 	.word	0x2000362c
   80c80:	20003628 	.word	0x20003628
   80c84:	00082971 	.word	0x00082971

00080c88 <udc_iface_disable.part.0>:
static bool udc_iface_disable(uint8_t iface_num)
   80c88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80c8c:	4f26      	ldr	r7, [pc, #152]	; (80d28 <udc_iface_disable.part.0+0xa0>)
static bool udc_iface_disable(uint8_t iface_num)
   80c8e:	4680      	mov	r8, r0
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80c90:	683b      	ldr	r3, [r7, #0]
   80c92:	685b      	ldr	r3, [r3, #4]
   80c94:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80c98:	68eb      	ldr	r3, [r5, #12]
   80c9a:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80c9c:	4b23      	ldr	r3, [pc, #140]	; (80d2c <udc_iface_disable.part.0+0xa4>)
   80c9e:	781b      	ldrb	r3, [r3, #0]
   80ca0:	b383      	cbz	r3, 80d04 <udc_iface_disable.part.0+0x7c>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80ca2:	683b      	ldr	r3, [r7, #0]
   80ca4:	681b      	ldr	r3, [r3, #0]
   80ca6:	791a      	ldrb	r2, [r3, #4]
   80ca8:	4542      	cmp	r2, r8
   80caa:	d92b      	bls.n	80d04 <udc_iface_disable.part.0+0x7c>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80cac:	f8df c080 	ldr.w	ip, [pc, #128]	; 80d30 <udc_iface_disable.part.0+0xa8>
   80cb0:	f8cc 3000 	str.w	r3, [ip]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80cb4:	885a      	ldrh	r2, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80cb6:	441a      	add	r2, r3
	while (ptr_end_desc >
   80cb8:	4293      	cmp	r3, r2
   80cba:	d223      	bcs.n	80d04 <udc_iface_disable.part.0+0x7c>
   80cbc:	461c      	mov	r4, r3
   80cbe:	2600      	movs	r6, #0
   80cc0:	e004      	b.n	80ccc <udc_iface_disable.part.0+0x44>
				udc_ptr_iface->bLength);
   80cc2:	7821      	ldrb	r1, [r4, #0]
   80cc4:	2601      	movs	r6, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80cc6:	440c      	add	r4, r1
	while (ptr_end_desc >
   80cc8:	42a2      	cmp	r2, r4
   80cca:	d925      	bls.n	80d18 <udc_iface_disable.part.0+0x90>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80ccc:	7861      	ldrb	r1, [r4, #1]
   80cce:	2904      	cmp	r1, #4
   80cd0:	d1f7      	bne.n	80cc2 <udc_iface_disable.part.0+0x3a>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80cd2:	78a1      	ldrb	r1, [r4, #2]
   80cd4:	4541      	cmp	r1, r8
   80cd6:	d1f4      	bne.n	80cc2 <udc_iface_disable.part.0+0x3a>
   80cd8:	78e1      	ldrb	r1, [r4, #3]
   80cda:	4281      	cmp	r1, r0
   80cdc:	d1f1      	bne.n	80cc2 <udc_iface_disable.part.0+0x3a>
   80cde:	b306      	cbz	r6, 80d22 <udc_iface_disable.part.0+0x9a>
   80ce0:	f8cc 4000 	str.w	r4, [ip]
			udd_ep_free(ep_desc->bEndpointAddress);
   80ce4:	4e13      	ldr	r6, [pc, #76]	; (80d34 <udc_iface_disable.part.0+0xac>)
   80ce6:	e004      	b.n	80cf2 <udc_iface_disable.part.0+0x6a>
		if (USB_DT_INTERFACE == desc->bDescriptorType) {
   80ce8:	7863      	ldrb	r3, [r4, #1]
   80cea:	2b04      	cmp	r3, #4
   80cec:	d005      	beq.n	80cfa <udc_iface_disable.part.0+0x72>
		if (desc_id == desc->bDescriptorType) {
   80cee:	2b05      	cmp	r3, #5
   80cf0:	d00b      	beq.n	80d0a <udc_iface_disable.part.0+0x82>
			desc->bLength);
   80cf2:	7823      	ldrb	r3, [r4, #0]
	desc = (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *) desc +
   80cf4:	441c      	add	r4, r3
	while (ptr_eof_desc > desc) {
   80cf6:	42a2      	cmp	r2, r4
   80cf8:	d8f6      	bhi.n	80ce8 <udc_iface_disable.part.0+0x60>
	udi_api->disable();
   80cfa:	686b      	ldr	r3, [r5, #4]
   80cfc:	4798      	blx	r3
	return true;
   80cfe:	2001      	movs	r0, #1
}
   80d00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   80d04:	2000      	movs	r0, #0
}
   80d06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			udd_ep_free(ep_desc->bEndpointAddress);
   80d0a:	78a0      	ldrb	r0, [r4, #2]
   80d0c:	47b0      	blx	r6
			udc_ptr_conf->desc +
   80d0e:	683b      	ldr	r3, [r7, #0]
   80d10:	681b      	ldr	r3, [r3, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80d12:	885a      	ldrh	r2, [r3, #2]
   80d14:	441a      	add	r2, r3
			ep_desc = (UDC_DESC_STORAGE usb_ep_desc_t *)
   80d16:	e7ec      	b.n	80cf2 <udc_iface_disable.part.0+0x6a>
   80d18:	f8cc 4000 	str.w	r4, [ip]
		return false;
   80d1c:	2000      	movs	r0, #0
}
   80d1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80d22:	461c      	mov	r4, r3
   80d24:	e7de      	b.n	80ce4 <udc_iface_disable.part.0+0x5c>
   80d26:	bf00      	nop
   80d28:	20003628 	.word	0x20003628
   80d2c:	20003625 	.word	0x20003625
   80d30:	2000362c 	.word	0x2000362c
   80d34:	0008266d 	.word	0x0008266d

00080d38 <udc_get_interface_desc>:
	return udc_ptr_iface;
   80d38:	4b01      	ldr	r3, [pc, #4]	; (80d40 <udc_get_interface_desc+0x8>)
}
   80d3a:	6818      	ldr	r0, [r3, #0]
   80d3c:	4770      	bx	lr
   80d3e:	bf00      	nop
   80d40:	2000362c 	.word	0x2000362c

00080d44 <udc_start>:
	udd_enable();
   80d44:	4b00      	ldr	r3, [pc, #0]	; (80d48 <udc_start+0x4>)
   80d46:	4718      	bx	r3
   80d48:	000824d5 	.word	0x000824d5

00080d4c <udc_reset>:
{
   80d4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if (udc_num_configuration) {
   80d50:	4e1f      	ldr	r6, [pc, #124]	; (80dd0 <udc_reset+0x84>)
   80d52:	7832      	ldrb	r2, [r6, #0]
   80d54:	2a00      	cmp	r2, #0
   80d56:	d02e      	beq.n	80db6 <udc_reset+0x6a>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80d58:	f8df 8078 	ldr.w	r8, [pc, #120]	; 80dd4 <udc_reset+0x88>
   80d5c:	f8d8 3000 	ldr.w	r3, [r8]
   80d60:	681b      	ldr	r3, [r3, #0]
   80d62:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   80d64:	b339      	cbz	r1, 80db6 <udc_reset+0x6a>
   80d66:	2500      	movs	r5, #0
   80d68:	4628      	mov	r0, r5
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80d6a:	4f1b      	ldr	r7, [pc, #108]	; (80dd8 <udc_reset+0x8c>)
	if (0 == udc_num_configuration) {
   80d6c:	b1ea      	cbz	r2, 80daa <udc_reset+0x5e>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80d6e:	603b      	str	r3, [r7, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80d70:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80d72:	4419      	add	r1, r3
	while (ptr_end_desc >
   80d74:	4299      	cmp	r1, r3
   80d76:	bf88      	it	hi
   80d78:	2400      	movhi	r4, #0
   80d7a:	d805      	bhi.n	80d88 <udc_reset+0x3c>
   80d7c:	e011      	b.n	80da2 <udc_reset+0x56>
				udc_ptr_iface->bLength);
   80d7e:	781a      	ldrb	r2, [r3, #0]
   80d80:	2401      	movs	r4, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80d82:	4413      	add	r3, r2
	while (ptr_end_desc >
   80d84:	4299      	cmp	r1, r3
   80d86:	d91c      	bls.n	80dc2 <udc_reset+0x76>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80d88:	785a      	ldrb	r2, [r3, #1]
   80d8a:	2a04      	cmp	r2, #4
   80d8c:	d1f7      	bne.n	80d7e <udc_reset+0x32>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80d8e:	789a      	ldrb	r2, [r3, #2]
   80d90:	4282      	cmp	r2, r0
   80d92:	d1f4      	bne.n	80d7e <udc_reset+0x32>
   80d94:	78da      	ldrb	r2, [r3, #3]
   80d96:	2a00      	cmp	r2, #0
   80d98:	d1f1      	bne.n	80d7e <udc_reset+0x32>
   80d9a:	b104      	cbz	r4, 80d9e <udc_reset+0x52>
   80d9c:	603b      	str	r3, [r7, #0]
   80d9e:	4b0f      	ldr	r3, [pc, #60]	; (80ddc <udc_reset+0x90>)
   80da0:	4798      	blx	r3
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80da2:	f8d8 3000 	ldr.w	r3, [r8]
   80da6:	681b      	ldr	r3, [r3, #0]
   80da8:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   80daa:	3501      	adds	r5, #1
   80dac:	b2e8      	uxtb	r0, r5
   80dae:	4288      	cmp	r0, r1
   80db0:	d201      	bcs.n	80db6 <udc_reset+0x6a>
	if (0 == udc_num_configuration) {
   80db2:	7832      	ldrb	r2, [r6, #0]
   80db4:	e7da      	b.n	80d6c <udc_reset+0x20>
	udc_num_configuration = 0;
   80db6:	2300      	movs	r3, #0
	udc_device_status =
   80db8:	4a09      	ldr	r2, [pc, #36]	; (80de0 <udc_reset+0x94>)
	udc_num_configuration = 0;
   80dba:	7033      	strb	r3, [r6, #0]
	udc_device_status =
   80dbc:	8013      	strh	r3, [r2, #0]
}
   80dbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80dc2:	f8d8 2000 	ldr.w	r2, [r8]
   80dc6:	603b      	str	r3, [r7, #0]
   80dc8:	6813      	ldr	r3, [r2, #0]
   80dca:	7919      	ldrb	r1, [r3, #4]
   80dcc:	e7ed      	b.n	80daa <udc_reset+0x5e>
   80dce:	bf00      	nop
   80dd0:	20003625 	.word	0x20003625
   80dd4:	20003628 	.word	0x20003628
   80dd8:	2000362c 	.word	0x2000362c
   80ddc:	00080c89 	.word	0x00080c89
   80de0:	20003620 	.word	0x20003620

00080de4 <udc_sof_notify>:
{
   80de4:	b538      	push	{r3, r4, r5, lr}
	if (udc_num_configuration) {
   80de6:	4b11      	ldr	r3, [pc, #68]	; (80e2c <udc_sof_notify+0x48>)
   80de8:	781b      	ldrb	r3, [r3, #0]
   80dea:	b1eb      	cbz	r3, 80e28 <udc_sof_notify+0x44>
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80dec:	4d10      	ldr	r5, [pc, #64]	; (80e30 <udc_sof_notify+0x4c>)
   80dee:	682a      	ldr	r2, [r5, #0]
   80df0:	6813      	ldr	r3, [r2, #0]
   80df2:	7919      	ldrb	r1, [r3, #4]
		for (iface_num = 0;
   80df4:	b1c1      	cbz	r1, 80e28 <udc_sof_notify+0x44>
   80df6:	2400      	movs	r4, #0
   80df8:	4623      	mov	r3, r4
   80dfa:	6852      	ldr	r2, [r2, #4]
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80dfc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   80e00:	691b      	ldr	r3, [r3, #16]
   80e02:	b16b      	cbz	r3, 80e20 <udc_sof_notify+0x3c>
				udc_ptr_conf->udi_apis[iface_num]->sof_notify();
   80e04:	4798      	blx	r3
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e06:	682a      	ldr	r2, [r5, #0]
		for (iface_num = 0;
   80e08:	3401      	adds	r4, #1
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e0a:	6811      	ldr	r1, [r2, #0]
		for (iface_num = 0;
   80e0c:	b2e3      	uxtb	r3, r4
				iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80e0e:	7909      	ldrb	r1, [r1, #4]
		for (iface_num = 0;
   80e10:	428b      	cmp	r3, r1
   80e12:	d209      	bcs.n	80e28 <udc_sof_notify+0x44>
   80e14:	6852      	ldr	r2, [r2, #4]
			if (udc_ptr_conf->udi_apis[iface_num]->sof_notify != NULL) {
   80e16:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   80e1a:	691b      	ldr	r3, [r3, #16]
   80e1c:	2b00      	cmp	r3, #0
   80e1e:	d1f1      	bne.n	80e04 <udc_sof_notify+0x20>
		for (iface_num = 0;
   80e20:	3401      	adds	r4, #1
   80e22:	b2e3      	uxtb	r3, r4
   80e24:	4299      	cmp	r1, r3
   80e26:	d8e9      	bhi.n	80dfc <udc_sof_notify+0x18>
}
   80e28:	bd38      	pop	{r3, r4, r5, pc}
   80e2a:	bf00      	nop
   80e2c:	20003625 	.word	0x20003625
   80e30:	20003628 	.word	0x20003628

00080e34 <udc_process_setup>:
 * \return true if the request is supported, else the request is stalled by UDD
 */
bool udc_process_setup(void)
{
	// By default no data (receive/send) and no callbacks registered
	udd_g_ctrlreq.payload_size = 0;
   80e34:	2300      	movs	r3, #0
{
   80e36:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	udd_g_ctrlreq.payload_size = 0;
   80e3a:	4ca4      	ldr	r4, [pc, #656]	; (810cc <udc_process_setup+0x298>)
	udd_g_ctrlreq.callback = NULL;
	udd_g_ctrlreq.over_under_run = NULL;

	// MS requests this using request type 0xC0 and our user defined bRequest (0x01 in our case)
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80e3c:	8822      	ldrh	r2, [r4, #0]
	udd_g_ctrlreq.over_under_run = NULL;
   80e3e:	e9c4 3304 	strd	r3, r3, [r4, #16]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80e42:	f5b2 7fe0 	cmp.w	r2, #448	; 0x1c0
	udd_g_ctrlreq.payload_size = 0;
   80e46:	81a3      	strh	r3, [r4, #12]
	if ((udd_g_ctrlreq.req.bmRequestType == 0xC0) && (udd_g_ctrlreq.req.bRequest == 0x01)) {
   80e48:	f000 8115 	beq.w	81076 <udc_process_setup+0x242>
#endif
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
		return true;
	}

	if (Udd_setup_is_in()) {
   80e4c:	f994 3000 	ldrsb.w	r3, [r4]
   80e50:	7822      	ldrb	r2, [r4, #0]
   80e52:	2b00      	cmp	r3, #0
   80e54:	db0f      	blt.n	80e76 <udc_process_setup+0x42>
			return false; // Error from USB host
		}
	}

	// If standard request then try to decode it in UDC
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80e56:	f012 0f60 	tst.w	r2, #96	; 0x60
   80e5a:	f000 8096 	beq.w	80f8a <udc_process_setup+0x156>
			return true;
		}
	}

	// If interface request then try to decode it in UDI
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80e5e:	f012 0f1e 	tst.w	r2, #30
   80e62:	d041      	beq.n	80ee8 <udc_process_setup+0xb4>
			return true;
		}
	}

	// If endpoint request then try to decode it in UDI
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80e64:	f002 021f 	and.w	r2, r2, #31
   80e68:	2a02      	cmp	r2, #2
   80e6a:	f000 8123 	beq.w	810b4 <udc_process_setup+0x280>
	// Here SETUP request unknown by UDC and UDIs
#ifdef USB_DEVICE_SPECIFIC_REQUEST
	// Try to decode it in specific callback
	return USB_DEVICE_SPECIFIC_REQUEST(); // Ex: Vendor request,...
#else
	return false;
   80e6e:	2500      	movs	r5, #0
#endif
}
   80e70:	4628      	mov	r0, r5
   80e72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if (udd_g_ctrlreq.req.wLength == 0) {
   80e76:	88e5      	ldrh	r5, [r4, #6]
   80e78:	2d00      	cmp	r5, #0
   80e7a:	d0f8      	beq.n	80e6e <udc_process_setup+0x3a>
	if (Udd_setup_type() == USB_REQ_TYPE_STANDARD) {
   80e7c:	f012 0f60 	tst.w	r2, #96	; 0x60
   80e80:	d1ed      	bne.n	80e5e <udc_process_setup+0x2a>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80e82:	f012 031f 	ands.w	r3, r2, #31
   80e86:	f000 81c9 	beq.w	8121c <udc_process_setup+0x3e8>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80e8a:	2b01      	cmp	r3, #1
   80e8c:	f040 812e 	bne.w	810ec <udc_process_setup+0x2b8>
			switch (udd_g_ctrlreq.req.bRequest) {
   80e90:	7863      	ldrb	r3, [r4, #1]
   80e92:	2b0a      	cmp	r3, #10
   80e94:	d125      	bne.n	80ee2 <udc_process_setup+0xae>
	if (udd_g_ctrlreq.req.wLength != 1) {
   80e96:	2d01      	cmp	r5, #1
   80e98:	d123      	bne.n	80ee2 <udc_process_setup+0xae>
	if (!udc_num_configuration) {
   80e9a:	4b8d      	ldr	r3, [pc, #564]	; (810d0 <udc_process_setup+0x29c>)
   80e9c:	781b      	ldrb	r3, [r3, #0]
   80e9e:	b303      	cbz	r3, 80ee2 <udc_process_setup+0xae>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80ea0:	4b8c      	ldr	r3, [pc, #560]	; (810d4 <udc_process_setup+0x2a0>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80ea2:	7926      	ldrb	r6, [r4, #4]
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80ea4:	681f      	ldr	r7, [r3, #0]
   80ea6:	683b      	ldr	r3, [r7, #0]
   80ea8:	791b      	ldrb	r3, [r3, #4]
   80eaa:	42b3      	cmp	r3, r6
   80eac:	d919      	bls.n	80ee2 <udc_process_setup+0xae>
	if (0 == udc_num_configuration) {
   80eae:	2100      	movs	r1, #0
   80eb0:	4630      	mov	r0, r6
   80eb2:	4b89      	ldr	r3, [pc, #548]	; (810d8 <udc_process_setup+0x2a4>)
   80eb4:	4798      	blx	r3
	if (!udc_update_iface_desc(iface_num, 0)) {
   80eb6:	4605      	mov	r5, r0
   80eb8:	2800      	cmp	r0, #0
   80eba:	f000 819b 	beq.w	811f4 <udc_process_setup+0x3c0>
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   80ebe:	687b      	ldr	r3, [r7, #4]
	udc_iface_setting = udi_api->getsetting();
   80ec0:	f853 3026 	ldr.w	r3, [r3, r6, lsl #2]
   80ec4:	68db      	ldr	r3, [r3, #12]
   80ec6:	4798      	blx	r3
   80ec8:	4602      	mov	r2, r0
   80eca:	4884      	ldr	r0, [pc, #528]	; (810dc <udc_process_setup+0x2a8>)
	udd_set_setup_payload(&udc_iface_setting,1);
   80ecc:	2101      	movs	r1, #1
   80ece:	4b84      	ldr	r3, [pc, #528]	; (810e0 <udc_process_setup+0x2ac>)
	udc_iface_setting = udi_api->getsetting();
   80ed0:	7002      	strb	r2, [r0, #0]
	udd_set_setup_payload(&udc_iface_setting,1);
   80ed2:	4798      	blx	r3
	return true;
   80ed4:	e7cc      	b.n	80e70 <udc_process_setup+0x3c>
		if (USB_REQ_RECIP_INTERFACE == Udd_setup_recipient()) {
   80ed6:	2b01      	cmp	r3, #1
   80ed8:	f000 81b1 	beq.w	8123e <udc_process_setup+0x40a>
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   80edc:	2b02      	cmp	r3, #2
   80ede:	f000 80d8 	beq.w	81092 <udc_process_setup+0x25e>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   80ee2:	f012 0f1e 	tst.w	r2, #30
   80ee6:	d1c2      	bne.n	80e6e <udc_process_setup+0x3a>
		if (udd_g_ctrlreq.req.wIndex == 2) {
   80ee8:	88a7      	ldrh	r7, [r4, #4]
   80eea:	2f02      	cmp	r7, #2
   80eec:	d102      	bne.n	80ef4 <udc_process_setup+0xc0>
			udd_g_ctrlreq.req.wIndex = 1;
   80eee:	2301      	movs	r3, #1
   80ef0:	461f      	mov	r7, r3
   80ef2:	80a3      	strh	r3, [r4, #4]
	if (0 == udc_num_configuration) {
   80ef4:	4d76      	ldr	r5, [pc, #472]	; (810d0 <udc_process_setup+0x29c>)
   80ef6:	782b      	ldrb	r3, [r5, #0]
   80ef8:	2b00      	cmp	r3, #0
   80efa:	d0b8      	beq.n	80e6e <udc_process_setup+0x3a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80efc:	4e75      	ldr	r6, [pc, #468]	; (810d4 <udc_process_setup+0x2a0>)
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   80efe:	b2ff      	uxtb	r7, r7
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80f00:	6830      	ldr	r0, [r6, #0]
   80f02:	6803      	ldr	r3, [r0, #0]
   80f04:	f893 c004 	ldrb.w	ip, [r3, #4]
   80f08:	4567      	cmp	r7, ip
   80f0a:	d35b      	bcc.n	80fc4 <udc_process_setup+0x190>
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   80f0c:	f002 021f 	and.w	r2, r2, #31
   80f10:	2a02      	cmp	r2, #2
   80f12:	d1ac      	bne.n	80e6e <udc_process_setup+0x3a>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f14:	f1bc 0f00 	cmp.w	ip, #0
   80f18:	d0a9      	beq.n	80e6e <udc_process_setup+0x3a>
   80f1a:	2700      	movs	r7, #0
   80f1c:	46b8      	mov	r8, r7
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80f1e:	4c71      	ldr	r4, [pc, #452]	; (810e4 <udc_process_setup+0x2b0>)
		udi_api = udc_ptr_conf->udi_apis[iface_num];
   80f20:	6843      	ldr	r3, [r0, #4]
   80f22:	f853 9028 	ldr.w	r9, [r3, r8, lsl #2]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80f26:	f8d9 300c 	ldr.w	r3, [r9, #12]
   80f2a:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   80f2c:	782b      	ldrb	r3, [r5, #0]
		if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   80f2e:	4684      	mov	ip, r0
	if (0 == udc_num_configuration) {
   80f30:	2b00      	cmp	r3, #0
   80f32:	d09c      	beq.n	80e6e <udc_process_setup+0x3a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   80f34:	6833      	ldr	r3, [r6, #0]
   80f36:	681b      	ldr	r3, [r3, #0]
   80f38:	791a      	ldrb	r2, [r3, #4]
   80f3a:	4542      	cmp	r2, r8
   80f3c:	d997      	bls.n	80e6e <udc_process_setup+0x3a>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80f3e:	6023      	str	r3, [r4, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80f40:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80f42:	4419      	add	r1, r3
	while (ptr_end_desc >
   80f44:	428b      	cmp	r3, r1
   80f46:	d292      	bcs.n	80e6e <udc_process_setup+0x3a>
   80f48:	2000      	movs	r0, #0
   80f4a:	e005      	b.n	80f58 <udc_process_setup+0x124>
				udc_ptr_iface->bLength);
   80f4c:	781a      	ldrb	r2, [r3, #0]
   80f4e:	2001      	movs	r0, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80f50:	4413      	add	r3, r2
	while (ptr_end_desc >
   80f52:	4299      	cmp	r1, r3
   80f54:	f240 8097 	bls.w	81086 <udc_process_setup+0x252>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80f58:	785a      	ldrb	r2, [r3, #1]
   80f5a:	2a04      	cmp	r2, #4
   80f5c:	d1f6      	bne.n	80f4c <udc_process_setup+0x118>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80f5e:	789a      	ldrb	r2, [r3, #2]
   80f60:	4542      	cmp	r2, r8
   80f62:	d1f3      	bne.n	80f4c <udc_process_setup+0x118>
   80f64:	78da      	ldrb	r2, [r3, #3]
   80f66:	4562      	cmp	r2, ip
   80f68:	d1f0      	bne.n	80f4c <udc_process_setup+0x118>
   80f6a:	b100      	cbz	r0, 80f6e <udc_process_setup+0x13a>
   80f6c:	6023      	str	r3, [r4, #0]
		if (udi_api->setup()) {
   80f6e:	f8d9 3008 	ldr.w	r3, [r9, #8]
   80f72:	4798      	blx	r3
   80f74:	2800      	cmp	r0, #0
   80f76:	d17c      	bne.n	81072 <udc_process_setup+0x23e>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   80f78:	6830      	ldr	r0, [r6, #0]
   80f7a:	3701      	adds	r7, #1
   80f7c:	6803      	ldr	r3, [r0, #0]
   80f7e:	fa5f f887 	uxtb.w	r8, r7
   80f82:	791b      	ldrb	r3, [r3, #4]
   80f84:	4543      	cmp	r3, r8
   80f86:	d8cb      	bhi.n	80f20 <udc_process_setup+0xec>
   80f88:	e771      	b.n	80e6e <udc_process_setup+0x3a>
		if (USB_REQ_RECIP_DEVICE == Udd_setup_recipient()) {
   80f8a:	f012 031f 	ands.w	r3, r2, #31
   80f8e:	d1a2      	bne.n	80ed6 <udc_process_setup+0xa2>
			switch (udd_g_ctrlreq.req.bRequest) {
   80f90:	7863      	ldrb	r3, [r4, #1]
   80f92:	3b01      	subs	r3, #1
   80f94:	2b08      	cmp	r3, #8
   80f96:	d8a4      	bhi.n	80ee2 <udc_process_setup+0xae>
   80f98:	a101      	add	r1, pc, #4	; (adr r1, 80fa0 <udc_process_setup+0x16c>)
   80f9a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
   80f9e:	bf00      	nop
   80fa0:	000811f9 	.word	0x000811f9
   80fa4:	00080ee3 	.word	0x00080ee3
   80fa8:	000811d5 	.word	0x000811d5
   80fac:	00080ee3 	.word	0x00080ee3
   80fb0:	000811c5 	.word	0x000811c5
   80fb4:	00080ee3 	.word	0x00080ee3
   80fb8:	00080ee3 	.word	0x00080ee3
   80fbc:	00080ee3 	.word	0x00080ee3
   80fc0:	00081113 	.word	0x00081113
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   80fc4:	f8df 811c 	ldr.w	r8, [pc, #284]	; 810e4 <udc_process_setup+0x2b0>
   80fc8:	f8c8 3000 	str.w	r3, [r8]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   80fcc:	f8b3 e002 	ldrh.w	lr, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   80fd0:	449e      	add	lr, r3
	while (ptr_end_desc >
   80fd2:	4573      	cmp	r3, lr
   80fd4:	d29a      	bcs.n	80f0c <udc_process_setup+0xd8>
   80fd6:	f04f 0900 	mov.w	r9, #0
   80fda:	e005      	b.n	80fe8 <udc_process_setup+0x1b4>
				udc_ptr_iface->bLength);
   80fdc:	7819      	ldrb	r1, [r3, #0]
   80fde:	f04f 0901 	mov.w	r9, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   80fe2:	440b      	add	r3, r1
	while (ptr_end_desc >
   80fe4:	459e      	cmp	lr, r3
   80fe6:	d951      	bls.n	8108c <udc_process_setup+0x258>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   80fe8:	7859      	ldrb	r1, [r3, #1]
   80fea:	2904      	cmp	r1, #4
   80fec:	d1f6      	bne.n	80fdc <udc_process_setup+0x1a8>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   80fee:	7899      	ldrb	r1, [r3, #2]
   80ff0:	42b9      	cmp	r1, r7
   80ff2:	d1f3      	bne.n	80fdc <udc_process_setup+0x1a8>
   80ff4:	78d9      	ldrb	r1, [r3, #3]
   80ff6:	2900      	cmp	r1, #0
   80ff8:	d1f0      	bne.n	80fdc <udc_process_setup+0x1a8>
   80ffa:	f1b9 0f00 	cmp.w	r9, #0
   80ffe:	d001      	beq.n	81004 <udc_process_setup+0x1d0>
   81000:	f8c8 3000 	str.w	r3, [r8]
	udi_api = udc_ptr_conf->udi_apis[iface_num];
   81004:	6843      	ldr	r3, [r0, #4]
   81006:	f853 9027 	ldr.w	r9, [r3, r7, lsl #2]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   8100a:	f8d9 300c 	ldr.w	r3, [r9, #12]
   8100e:	4798      	blx	r3
	if (0 == udc_num_configuration) {
   81010:	782b      	ldrb	r3, [r5, #0]
	if (!udc_update_iface_desc(iface_num, udi_api->getsetting())) {
   81012:	4682      	mov	sl, r0
	if (0 == udc_num_configuration) {
   81014:	2b00      	cmp	r3, #0
   81016:	f43f af2a 	beq.w	80e6e <udc_process_setup+0x3a>
	if (iface_num >= udc_ptr_conf->desc->bNumInterfaces) {
   8101a:	6830      	ldr	r0, [r6, #0]
   8101c:	6803      	ldr	r3, [r0, #0]
   8101e:	f893 c004 	ldrb.w	ip, [r3, #4]
   81022:	4567      	cmp	r7, ip
   81024:	f080 80f8 	bcs.w	81218 <udc_process_setup+0x3e4>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   81028:	f8c8 3000 	str.w	r3, [r8]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   8102c:	8859      	ldrh	r1, [r3, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   8102e:	4419      	add	r1, r3
	while (ptr_end_desc >
   81030:	428b      	cmp	r3, r1
   81032:	bf38      	it	cc
   81034:	f04f 0e00 	movcc.w	lr, #0
   81038:	d307      	bcc.n	8104a <udc_process_setup+0x216>
   8103a:	e0ed      	b.n	81218 <udc_process_setup+0x3e4>
				udc_ptr_iface->bLength);
   8103c:	781a      	ldrb	r2, [r3, #0]
   8103e:	f04f 0e01 	mov.w	lr, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   81042:	4413      	add	r3, r2
	while (ptr_end_desc >
   81044:	4299      	cmp	r1, r3
   81046:	f240 80e5 	bls.w	81214 <udc_process_setup+0x3e0>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   8104a:	785a      	ldrb	r2, [r3, #1]
   8104c:	2a04      	cmp	r2, #4
   8104e:	d1f5      	bne.n	8103c <udc_process_setup+0x208>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   81050:	789a      	ldrb	r2, [r3, #2]
   81052:	42ba      	cmp	r2, r7
   81054:	d1f2      	bne.n	8103c <udc_process_setup+0x208>
   81056:	78da      	ldrb	r2, [r3, #3]
   81058:	4552      	cmp	r2, sl
   8105a:	d1ef      	bne.n	8103c <udc_process_setup+0x208>
   8105c:	f1be 0f00 	cmp.w	lr, #0
   81060:	d001      	beq.n	81066 <udc_process_setup+0x232>
   81062:	f8c8 3000 	str.w	r3, [r8]
	return udi_api->setup();
   81066:	f8d9 3008 	ldr.w	r3, [r9, #8]
   8106a:	4798      	blx	r3
		if (udc_req_iface()) {
   8106c:	2800      	cmp	r0, #0
   8106e:	f000 81dd 	beq.w	8142c <udc_process_setup+0x5f8>
			return true;
   81072:	2501      	movs	r5, #1
   81074:	e6fc      	b.n	80e70 <udc_process_setup+0x3c>
		return true;
   81076:	2501      	movs	r5, #1
		udd_set_setup_payload((uint8_t *)&MS_OS_DESC, sizeof(struct MS_OS_DESC_SET_HEADER));
   81078:	219e      	movs	r1, #158	; 0x9e
   8107a:	481b      	ldr	r0, [pc, #108]	; (810e8 <udc_process_setup+0x2b4>)
   8107c:	4b18      	ldr	r3, [pc, #96]	; (810e0 <udc_process_setup+0x2ac>)
   8107e:	4798      	blx	r3
}
   81080:	4628      	mov	r0, r5
   81082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	return false;
   81086:	2500      	movs	r5, #0
   81088:	6023      	str	r3, [r4, #0]
   8108a:	e6f1      	b.n	80e70 <udc_process_setup+0x3c>
   8108c:	f8c8 3000 	str.w	r3, [r8]
   81090:	e73c      	b.n	80f0c <udc_process_setup+0xd8>
			switch (udd_g_ctrlreq.req.bRequest) {
   81092:	7863      	ldrb	r3, [r4, #1]
   81094:	2b01      	cmp	r3, #1
   81096:	f000 80fc 	beq.w	81292 <udc_process_setup+0x45e>
   8109a:	2b03      	cmp	r3, #3
   8109c:	d106      	bne.n	810ac <udc_process_setup+0x278>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   8109e:	88e3      	ldrh	r3, [r4, #6]
   810a0:	8861      	ldrh	r1, [r4, #2]
   810a2:	430b      	orrs	r3, r1
   810a4:	b29b      	uxth	r3, r3
   810a6:	2b00      	cmp	r3, #0
   810a8:	f000 81c8 	beq.w	8143c <udc_process_setup+0x608>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   810ac:	f012 0f1e 	tst.w	r2, #30
   810b0:	f43f af1a 	beq.w	80ee8 <udc_process_setup+0xb4>
	if (0 == udc_num_configuration) {
   810b4:	4d06      	ldr	r5, [pc, #24]	; (810d0 <udc_process_setup+0x29c>)
   810b6:	782b      	ldrb	r3, [r5, #0]
   810b8:	2b00      	cmp	r3, #0
   810ba:	f43f aed8 	beq.w	80e6e <udc_process_setup+0x3a>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   810be:	4e05      	ldr	r6, [pc, #20]	; (810d4 <udc_process_setup+0x2a0>)
   810c0:	6830      	ldr	r0, [r6, #0]
   810c2:	6803      	ldr	r3, [r0, #0]
   810c4:	f893 c004 	ldrb.w	ip, [r3, #4]
   810c8:	e724      	b.n	80f14 <udc_process_setup+0xe0>
   810ca:	bf00      	nop
   810cc:	200036e0 	.word	0x200036e0
   810d0:	20003625 	.word	0x20003625
   810d4:	20003628 	.word	0x20003628
   810d8:	00080bcd 	.word	0x00080bcd
   810dc:	20003624 	.word	0x20003624
   810e0:	00082661 	.word	0x00082661
   810e4:	2000362c 	.word	0x2000362c
   810e8:	2000023c 	.word	0x2000023c
		if (USB_REQ_RECIP_ENDPOINT == Udd_setup_recipient()) {
   810ec:	2b02      	cmp	r3, #2
   810ee:	f47f aef8 	bne.w	80ee2 <udc_process_setup+0xae>
			switch (udd_g_ctrlreq.req.bRequest) {
   810f2:	7863      	ldrb	r3, [r4, #1]
   810f4:	2b00      	cmp	r3, #0
   810f6:	d1d9      	bne.n	810ac <udc_process_setup+0x278>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_ep_status)) {
   810f8:	2d02      	cmp	r5, #2
   810fa:	d1d7      	bne.n	810ac <udc_process_setup+0x278>
	udc_ep_status = udd_ep_is_halted(udd_g_ctrlreq.req.
   810fc:	7920      	ldrb	r0, [r4, #4]
   810fe:	4b9b      	ldr	r3, [pc, #620]	; (8136c <udc_process_setup+0x538>)
   81100:	4798      	blx	r3
   81102:	4602      	mov	r2, r0
   81104:	489a      	ldr	r0, [pc, #616]	; (81370 <udc_process_setup+0x53c>)
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   81106:	4629      	mov	r1, r5
   81108:	4b9a      	ldr	r3, [pc, #616]	; (81374 <udc_process_setup+0x540>)
			return true;
   8110a:	2501      	movs	r5, #1
			wIndex & 0xFF) ? CPU_TO_LE16(USB_EP_STATUS_HALTED) : 0;
   8110c:	8002      	strh	r2, [r0, #0]
	udd_set_setup_payload( (uint8_t *) & udc_ep_status,
   8110e:	4798      	blx	r3
	return true;
   81110:	e6ae      	b.n	80e70 <udc_process_setup+0x3c>
	if (udd_g_ctrlreq.req.wLength) {
   81112:	88e3      	ldrh	r3, [r4, #6]
   81114:	2b00      	cmp	r3, #0
   81116:	f47f aee4 	bne.w	80ee2 <udc_process_setup+0xae>
	if (!udd_getaddress()) {
   8111a:	4b97      	ldr	r3, [pc, #604]	; (81378 <udc_process_setup+0x544>)
   8111c:	4798      	blx	r3
   8111e:	2800      	cmp	r0, #0
   81120:	d068      	beq.n	811f4 <udc_process_setup+0x3c0>
	if (udd_is_high_speed()) {
   81122:	4f96      	ldr	r7, [pc, #600]	; (8137c <udc_process_setup+0x548>)
   81124:	47b8      	blx	r7
				udc_config.confdev_hs->bNumConfigurations) {
   81126:	4e96      	ldr	r6, [pc, #600]	; (81380 <udc_process_setup+0x54c>)
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81128:	78a3      	ldrb	r3, [r4, #2]
	if (udd_is_high_speed()) {
   8112a:	2800      	cmp	r0, #0
   8112c:	f000 8180 	beq.w	81430 <udc_process_setup+0x5fc>
				udc_config.confdev_hs->bNumConfigurations) {
   81130:	68b2      	ldr	r2, [r6, #8]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81132:	7c52      	ldrb	r2, [r2, #17]
   81134:	429a      	cmp	r2, r3
   81136:	d35d      	bcc.n	811f4 <udc_process_setup+0x3c0>
	udc_reset();
   81138:	4b92      	ldr	r3, [pc, #584]	; (81384 <udc_process_setup+0x550>)
   8113a:	4798      	blx	r3
	udc_num_configuration = udd_g_ctrlreq.req.wValue & 0xFF;
   8113c:	4d92      	ldr	r5, [pc, #584]	; (81388 <udc_process_setup+0x554>)
   8113e:	78a3      	ldrb	r3, [r4, #2]
   81140:	702b      	strb	r3, [r5, #0]
	if (udc_num_configuration == 0) {
   81142:	2b00      	cmp	r3, #0
   81144:	d095      	beq.n	81072 <udc_process_setup+0x23e>
	if (udd_is_high_speed()) {
   81146:	47b8      	blx	r7
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   81148:	782b      	ldrb	r3, [r5, #0]
	if (udd_is_high_speed()) {
   8114a:	2800      	cmp	r0, #0
   8114c:	f000 81bb 	beq.w	814c6 <udc_process_setup+0x692>
		udc_ptr_conf = &udc_config.conf_hs[udc_num_configuration - 1];
   81150:	6932      	ldr	r2, [r6, #16]
   81152:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
   81156:	3901      	subs	r1, #1
   81158:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   8115c:	4e8b      	ldr	r6, [pc, #556]	; (8138c <udc_process_setup+0x558>)
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   8115e:	6810      	ldr	r0, [r2, #0]
   81160:	6032      	str	r2, [r6, #0]
   81162:	7902      	ldrb	r2, [r0, #4]
   81164:	2a00      	cmp	r2, #0
   81166:	d084      	beq.n	81072 <udc_process_setup+0x23e>
   81168:	f04f 0800 	mov.w	r8, #0
   8116c:	46c4      	mov	ip, r8
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   8116e:	4f88      	ldr	r7, [pc, #544]	; (81390 <udc_process_setup+0x55c>)
	if (0 == udc_num_configuration) {
   81170:	2b00      	cmp	r3, #0
   81172:	d03f      	beq.n	811f4 <udc_process_setup+0x3c0>
	udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *)
   81174:	6038      	str	r0, [r7, #0]
			le16_to_cpu(udc_ptr_conf->desc->wTotalLength));
   81176:	8842      	ldrh	r2, [r0, #2]
	return (UDC_DESC_STORAGE usb_conf_desc_t *) ((uint8_t *)
   81178:	4402      	add	r2, r0
	while (ptr_end_desc >
   8117a:	4282      	cmp	r2, r0
   8117c:	d93a      	bls.n	811f4 <udc_process_setup+0x3c0>
   8117e:	2100      	movs	r1, #0
   81180:	e005      	b.n	8118e <udc_process_setup+0x35a>
				udc_ptr_iface->bLength);
   81182:	7803      	ldrb	r3, [r0, #0]
   81184:	2101      	movs	r1, #1
		udc_ptr_iface = (UDC_DESC_STORAGE usb_iface_desc_t *) (
   81186:	4418      	add	r0, r3
	while (ptr_end_desc >
   81188:	4282      	cmp	r2, r0
   8118a:	f240 814c 	bls.w	81426 <udc_process_setup+0x5f2>
		if (USB_DT_INTERFACE == udc_ptr_iface->bDescriptorType) {
   8118e:	7843      	ldrb	r3, [r0, #1]
   81190:	2b04      	cmp	r3, #4
   81192:	d1f6      	bne.n	81182 <udc_process_setup+0x34e>
			if ((iface_num == udc_ptr_iface->bInterfaceNumber) &&
   81194:	7883      	ldrb	r3, [r0, #2]
   81196:	4563      	cmp	r3, ip
   81198:	d1f3      	bne.n	81182 <udc_process_setup+0x34e>
   8119a:	78c3      	ldrb	r3, [r0, #3]
   8119c:	2b00      	cmp	r3, #0
   8119e:	d1f0      	bne.n	81182 <udc_process_setup+0x34e>
   811a0:	b101      	cbz	r1, 811a4 <udc_process_setup+0x370>
   811a2:	6038      	str	r0, [r7, #0]
   811a4:	4660      	mov	r0, ip
   811a6:	4b7b      	ldr	r3, [pc, #492]	; (81394 <udc_process_setup+0x560>)
   811a8:	4798      	blx	r3
		if (!udc_iface_enable(iface_num, 0)) {
   811aa:	b318      	cbz	r0, 811f4 <udc_process_setup+0x3c0>
	for (iface_num = 0; iface_num < udc_ptr_conf->desc->bNumInterfaces;
   811ac:	6833      	ldr	r3, [r6, #0]
   811ae:	f108 0801 	add.w	r8, r8, #1
   811b2:	6818      	ldr	r0, [r3, #0]
   811b4:	fa5f fc88 	uxtb.w	ip, r8
   811b8:	7903      	ldrb	r3, [r0, #4]
   811ba:	4563      	cmp	r3, ip
   811bc:	f67f af59 	bls.w	81072 <udc_process_setup+0x23e>
	if (0 == udc_num_configuration) {
   811c0:	782b      	ldrb	r3, [r5, #0]
   811c2:	e7d5      	b.n	81170 <udc_process_setup+0x33c>
	if (udd_g_ctrlreq.req.wLength) {
   811c4:	88e3      	ldrh	r3, [r4, #6]
   811c6:	2b00      	cmp	r3, #0
   811c8:	f47f ae8b 	bne.w	80ee2 <udc_process_setup+0xae>
	udd_g_ctrlreq.callback = udc_valid_address;
   811cc:	4b72      	ldr	r3, [pc, #456]	; (81398 <udc_process_setup+0x564>)
			return true;
   811ce:	2501      	movs	r5, #1
	udd_g_ctrlreq.callback = udc_valid_address;
   811d0:	6123      	str	r3, [r4, #16]
	return true;
   811d2:	e64d      	b.n	80e70 <udc_process_setup+0x3c>
	if (udd_g_ctrlreq.req.wLength) {
   811d4:	88e3      	ldrh	r3, [r4, #6]
   811d6:	2b00      	cmp	r3, #0
   811d8:	f47f ae83 	bne.w	80ee2 <udc_process_setup+0xae>
	switch (udd_g_ctrlreq.req.wValue) {
   811dc:	8863      	ldrh	r3, [r4, #2]
   811de:	2b02      	cmp	r3, #2
   811e0:	f47f ae7f 	bne.w	80ee2 <udc_process_setup+0xae>
		if (!udd_is_high_speed()) {
   811e4:	4b65      	ldr	r3, [pc, #404]	; (8137c <udc_process_setup+0x548>)
   811e6:	4798      	blx	r3
   811e8:	4605      	mov	r5, r0
   811ea:	b118      	cbz	r0, 811f4 <udc_process_setup+0x3c0>
		if (udd_g_ctrlreq.req.wIndex & 0xff) {
   811ec:	7923      	ldrb	r3, [r4, #4]
   811ee:	2b00      	cmp	r3, #0
   811f0:	f000 8151 	beq.w	81496 <udc_process_setup+0x662>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   811f4:	7822      	ldrb	r2, [r4, #0]
   811f6:	e632      	b.n	80e5e <udc_process_setup+0x2a>
	if (udd_g_ctrlreq.req.wLength) {
   811f8:	88e3      	ldrh	r3, [r4, #6]
   811fa:	2b00      	cmp	r3, #0
   811fc:	f47f ae71 	bne.w	80ee2 <udc_process_setup+0xae>
	if (udd_g_ctrlreq.req.wValue == USB_DEV_FEATURE_REMOTE_WAKEUP) {
   81200:	8865      	ldrh	r5, [r4, #2]
   81202:	2d01      	cmp	r5, #1
   81204:	f47f ae6d 	bne.w	80ee2 <udc_process_setup+0xae>
		udc_device_status &= CPU_TO_LE16(~(uint32_t)USB_DEV_STATUS_REMOTEWAKEUP);
   81208:	4a64      	ldr	r2, [pc, #400]	; (8139c <udc_process_setup+0x568>)
   8120a:	8813      	ldrh	r3, [r2, #0]
   8120c:	f023 0302 	bic.w	r3, r3, #2
   81210:	8013      	strh	r3, [r2, #0]
		return true;
   81212:	e62d      	b.n	80e70 <udc_process_setup+0x3c>
   81214:	f8c8 3000 	str.w	r3, [r8]
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   81218:	7822      	ldrb	r2, [r4, #0]
   8121a:	e677      	b.n	80f0c <udc_process_setup+0xd8>
			switch (udd_g_ctrlreq.req.bRequest) {
   8121c:	7863      	ldrb	r3, [r4, #1]
   8121e:	2b06      	cmp	r3, #6
   81220:	d04d      	beq.n	812be <udc_process_setup+0x48a>
   81222:	2b08      	cmp	r3, #8
   81224:	d043      	beq.n	812ae <udc_process_setup+0x47a>
   81226:	2b00      	cmp	r3, #0
   81228:	f47f ae5b 	bne.w	80ee2 <udc_process_setup+0xae>
	if (udd_g_ctrlreq.req.wLength != sizeof(udc_device_status)) {
   8122c:	2d02      	cmp	r5, #2
   8122e:	f47f ae58 	bne.w	80ee2 <udc_process_setup+0xae>
	udd_set_setup_payload( (uint8_t *) & udc_device_status,
   81232:	4629      	mov	r1, r5
   81234:	4859      	ldr	r0, [pc, #356]	; (8139c <udc_process_setup+0x568>)
   81236:	4b4f      	ldr	r3, [pc, #316]	; (81374 <udc_process_setup+0x540>)
   81238:	4798      	blx	r3
			return true;
   8123a:	2501      	movs	r5, #1
   8123c:	e618      	b.n	80e70 <udc_process_setup+0x3c>
			switch (udd_g_ctrlreq.req.bRequest) {
   8123e:	7863      	ldrb	r3, [r4, #1]
   81240:	2b0b      	cmp	r3, #11
   81242:	f47f ae4e 	bne.w	80ee2 <udc_process_setup+0xae>
	if (udd_g_ctrlreq.req.wLength) {
   81246:	88e1      	ldrh	r1, [r4, #6]
   81248:	2900      	cmp	r1, #0
   8124a:	f47f ae4a 	bne.w	80ee2 <udc_process_setup+0xae>
	if (!udc_num_configuration) {
   8124e:	4f4e      	ldr	r7, [pc, #312]	; (81388 <udc_process_setup+0x554>)
   81250:	783b      	ldrb	r3, [r7, #0]
   81252:	2b00      	cmp	r3, #0
   81254:	f43f ae45 	beq.w	80ee2 <udc_process_setup+0xae>
	iface_num = udd_g_ctrlreq.req.wIndex & 0xFF;
   81258:	7925      	ldrb	r5, [r4, #4]
	setting_num = udd_g_ctrlreq.req.wValue & 0xFF;
   8125a:	4e51      	ldr	r6, [pc, #324]	; (813a0 <udc_process_setup+0x56c>)
   8125c:	4628      	mov	r0, r5
   8125e:	f8b4 8002 	ldrh.w	r8, [r4, #2]
	if (0 == udc_num_configuration) {
   81262:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, 0)) {
   81264:	2800      	cmp	r0, #0
   81266:	d0c5      	beq.n	811f4 <udc_process_setup+0x3c0>
   81268:	4628      	mov	r0, r5
   8126a:	4b4e      	ldr	r3, [pc, #312]	; (813a4 <udc_process_setup+0x570>)
   8126c:	4798      	blx	r3
	if (!udc_iface_disable(iface_num)) {
   8126e:	2800      	cmp	r0, #0
   81270:	d0c0      	beq.n	811f4 <udc_process_setup+0x3c0>
	if (0 == udc_num_configuration) {
   81272:	783b      	ldrb	r3, [r7, #0]
   81274:	2b00      	cmp	r3, #0
   81276:	d0bd      	beq.n	811f4 <udc_process_setup+0x3c0>
   81278:	4628      	mov	r0, r5
   8127a:	fa5f f188 	uxtb.w	r1, r8
   8127e:	47b0      	blx	r6
	if (!udc_update_iface_desc(iface_num, setting_num)) {
   81280:	2800      	cmp	r0, #0
   81282:	d0b7      	beq.n	811f4 <udc_process_setup+0x3c0>
   81284:	4628      	mov	r0, r5
   81286:	4b43      	ldr	r3, [pc, #268]	; (81394 <udc_process_setup+0x560>)
   81288:	4798      	blx	r3
		if (udc_reqstd()) {
   8128a:	2800      	cmp	r0, #0
   8128c:	f47f aef1 	bne.w	81072 <udc_process_setup+0x23e>
   81290:	e7b0      	b.n	811f4 <udc_process_setup+0x3c0>
	if (udd_g_ctrlreq.req.wValue == USB_EP_FEATURE_HALT) {
   81292:	88e3      	ldrh	r3, [r4, #6]
   81294:	8861      	ldrh	r1, [r4, #2]
   81296:	430b      	orrs	r3, r1
   81298:	b29b      	uxth	r3, r3
   8129a:	2b00      	cmp	r3, #0
   8129c:	f47f af06 	bne.w	810ac <udc_process_setup+0x278>
		return udd_ep_clear_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   812a0:	7920      	ldrb	r0, [r4, #4]
   812a2:	4b41      	ldr	r3, [pc, #260]	; (813a8 <udc_process_setup+0x574>)
   812a4:	4798      	blx	r3
		if (udc_reqstd()) {
   812a6:	2800      	cmp	r0, #0
   812a8:	f47f aee3 	bne.w	81072 <udc_process_setup+0x23e>
   812ac:	e7a2      	b.n	811f4 <udc_process_setup+0x3c0>
	if (udd_g_ctrlreq.req.wLength != 1) {
   812ae:	2d01      	cmp	r5, #1
   812b0:	f47f ae17 	bne.w	80ee2 <udc_process_setup+0xae>
	udd_set_setup_payload(&udc_num_configuration,1);
   812b4:	4629      	mov	r1, r5
   812b6:	4834      	ldr	r0, [pc, #208]	; (81388 <udc_process_setup+0x554>)
   812b8:	4b2e      	ldr	r3, [pc, #184]	; (81374 <udc_process_setup+0x540>)
   812ba:	4798      	blx	r3
	return true;
   812bc:	e5d8      	b.n	80e70 <udc_process_setup+0x3c>
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   812be:	8861      	ldrh	r1, [r4, #2]
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   812c0:	0a0b      	lsrs	r3, r1, #8
   812c2:	3b01      	subs	r3, #1
	conf_num = udd_g_ctrlreq.req.wValue & 0xff;
   812c4:	b2cd      	uxtb	r5, r1
	switch ((uint8_t) (udd_g_ctrlreq.req.wValue >> 8)) {
   812c6:	2b0e      	cmp	r3, #14
   812c8:	f63f adc9 	bhi.w	80e5e <udc_process_setup+0x2a>
   812cc:	a101      	add	r1, pc, #4	; (adr r1, 812d4 <udc_process_setup+0x4a0>)
   812ce:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
   812d2:	bf00      	nop
   812d4:	000813d9 	.word	0x000813d9
   812d8:	000813b1 	.word	0x000813b1
   812dc:	0008135f 	.word	0x0008135f
   812e0:	00080e5f 	.word	0x00080e5f
   812e4:	00080e5f 	.word	0x00080e5f
   812e8:	00081353 	.word	0x00081353
   812ec:	00081329 	.word	0x00081329
   812f0:	00080e5f 	.word	0x00080e5f
   812f4:	00080e5f 	.word	0x00080e5f
   812f8:	00080e5f 	.word	0x00080e5f
   812fc:	00080e5f 	.word	0x00080e5f
   81300:	00080e5f 	.word	0x00080e5f
   81304:	00080e5f 	.word	0x00080e5f
   81308:	00080e5f 	.word	0x00080e5f
   8130c:	00081311 	.word	0x00081311
		udd_set_setup_payload( (uint8_t *) &MS_BOS_PACKET,
   81310:	2121      	movs	r1, #33	; 0x21
   81312:	4826      	ldr	r0, [pc, #152]	; (813ac <udc_process_setup+0x578>)
   81314:	4b17      	ldr	r3, [pc, #92]	; (81374 <udc_process_setup+0x540>)
   81316:	4798      	blx	r3
	if (udd_g_ctrlreq.req.wLength < udd_g_ctrlreq.payload_size) {
   81318:	88e3      	ldrh	r3, [r4, #6]
   8131a:	89a2      	ldrh	r2, [r4, #12]
   8131c:	429a      	cmp	r2, r3
   8131e:	f67f aea8 	bls.w	81072 <udc_process_setup+0x23e>
			return true;
   81322:	2501      	movs	r5, #1
		udd_g_ctrlreq.payload_size = udd_g_ctrlreq.req.wLength;
   81324:	81a3      	strh	r3, [r4, #12]
   81326:	e5a3      	b.n	80e70 <udc_process_setup+0x3c>
		if (!udd_is_high_speed()) {
   81328:	4b14      	ldr	r3, [pc, #80]	; (8137c <udc_process_setup+0x548>)
   8132a:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   8132c:	4b14      	ldr	r3, [pc, #80]	; (81380 <udc_process_setup+0x54c>)
		if (!udd_is_high_speed()) {
   8132e:	2800      	cmp	r0, #0
   81330:	f040 808e 	bne.w	81450 <udc_process_setup+0x61c>
			if (conf_num >= udc_config.confdev_hs->
   81334:	689a      	ldr	r2, [r3, #8]
   81336:	7c52      	ldrb	r2, [r2, #17]
   81338:	42aa      	cmp	r2, r5
   8133a:	f67f af5b 	bls.w	811f4 <udc_process_setup+0x3c0>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   8133e:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   81340:	4b0c      	ldr	r3, [pc, #48]	; (81374 <udc_process_setup+0x540>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   81342:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   81346:	8841      	ldrh	r1, [r0, #2]
   81348:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   8134a:	2207      	movs	r2, #7
   8134c:	68a3      	ldr	r3, [r4, #8]
   8134e:	705a      	strb	r2, [r3, #1]
		break;
   81350:	e7e2      	b.n	81318 <udc_process_setup+0x4e4>
		udd_set_setup_payload( (uint8_t *) udc_config.qualifier,
   81352:	4a0b      	ldr	r2, [pc, #44]	; (81380 <udc_process_setup+0x54c>)
   81354:	4b07      	ldr	r3, [pc, #28]	; (81374 <udc_process_setup+0x540>)
   81356:	68d0      	ldr	r0, [r2, #12]
   81358:	7801      	ldrb	r1, [r0, #0]
   8135a:	4798      	blx	r3
		break;
   8135c:	e7dc      	b.n	81318 <udc_process_setup+0x4e4>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   8135e:	2d03      	cmp	r5, #3
   81360:	f63f ad7d 	bhi.w	80e5e <udc_process_setup+0x2a>
   81364:	e8df f005 	tbb	[pc, r5]
   81368:	425c5457 	.word	0x425c5457
   8136c:	000826f1 	.word	0x000826f1
   81370:	20003622 	.word	0x20003622
   81374:	00082661 	.word	0x00082661
   81378:	00082641 	.word	0x00082641
   8137c:	00082609 	.word	0x00082609
   81380:	2000036c 	.word	0x2000036c
   81384:	00080d4d 	.word	0x00080d4d
   81388:	20003625 	.word	0x20003625
   8138c:	20003628 	.word	0x20003628
   81390:	2000362c 	.word	0x2000362c
   81394:	00080c2d 	.word	0x00080c2d
   81398:	00080bb9 	.word	0x00080bb9
   8139c:	20003620 	.word	0x20003620
   813a0:	00080bcd 	.word	0x00080bcd
   813a4:	00080c89 	.word	0x00080c89
   813a8:	000827cd 	.word	0x000827cd
   813ac:	20000218 	.word	0x20000218
		if (udd_is_high_speed()) {
   813b0:	4b48      	ldr	r3, [pc, #288]	; (814d4 <udc_process_setup+0x6a0>)
   813b2:	4798      	blx	r3
			if (conf_num >= udc_config.confdev_hs->
   813b4:	4b48      	ldr	r3, [pc, #288]	; (814d8 <udc_process_setup+0x6a4>)
		if (udd_is_high_speed()) {
   813b6:	2800      	cmp	r0, #0
   813b8:	d056      	beq.n	81468 <udc_process_setup+0x634>
			if (conf_num >= udc_config.confdev_hs->
   813ba:	689a      	ldr	r2, [r3, #8]
   813bc:	7c52      	ldrb	r2, [r2, #17]
   813be:	42aa      	cmp	r2, r5
   813c0:	f67f af18 	bls.w	811f4 <udc_process_setup+0x3c0>
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813c4:	691a      	ldr	r2, [r3, #16]
			udd_set_setup_payload(
   813c6:	4b45      	ldr	r3, [pc, #276]	; (814dc <udc_process_setup+0x6a8>)
				(uint8_t *)udc_config.conf_hs[conf_num].desc,
   813c8:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   813cc:	8841      	ldrh	r1, [r0, #2]
   813ce:	4798      	blx	r3
		((usb_conf_desc_t *) udd_g_ctrlreq.payload)->bDescriptorType =
   813d0:	2202      	movs	r2, #2
   813d2:	68a3      	ldr	r3, [r4, #8]
   813d4:	705a      	strb	r2, [r3, #1]
		break;
   813d6:	e79f      	b.n	81318 <udc_process_setup+0x4e4>
		if (!udd_is_high_speed()) {
   813d8:	4b3e      	ldr	r3, [pc, #248]	; (814d4 <udc_process_setup+0x6a0>)
   813da:	4798      	blx	r3
   813dc:	2800      	cmp	r0, #0
   813de:	d14f      	bne.n	81480 <udc_process_setup+0x64c>
				(uint8_t *) udc_config.confdev_hs,
   813e0:	4a3d      	ldr	r2, [pc, #244]	; (814d8 <udc_process_setup+0x6a4>)
			udd_set_setup_payload(
   813e2:	4b3e      	ldr	r3, [pc, #248]	; (814dc <udc_process_setup+0x6a8>)
				(uint8_t *) udc_config.confdev_hs,
   813e4:	6890      	ldr	r0, [r2, #8]
			udd_set_setup_payload(
   813e6:	7801      	ldrb	r1, [r0, #0]
   813e8:	4798      	blx	r3
   813ea:	e795      	b.n	81318 <udc_process_setup+0x4e4>
	switch (udd_g_ctrlreq.req.wValue & 0xff) {
   813ec:	2220      	movs	r2, #32
   813ee:	4b3c      	ldr	r3, [pc, #240]	; (814e0 <udc_process_setup+0x6ac>)
		for(i = 0; i < str_length; i++) {
   813f0:	4e3c      	ldr	r6, [pc, #240]	; (814e4 <udc_process_setup+0x6b0>)
   813f2:	189d      	adds	r5, r3, r2
   813f4:	4631      	mov	r1, r6
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   813f6:	f813 0b01 	ldrb.w	r0, [r3], #1
		for(i = 0; i < str_length; i++) {
   813fa:	429d      	cmp	r5, r3
			udc_string_desc.string[i] = cpu_to_le16((le16_t)str[i]);
   813fc:	f821 0f02 	strh.w	r0, [r1, #2]!
		for(i = 0; i < str_length; i++) {
   81400:	d1f9      	bne.n	813f6 <udc_process_setup+0x5c2>
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   81402:	0052      	lsls	r2, r2, #1
   81404:	1c91      	adds	r1, r2, #2
		udd_set_setup_payload(
   81406:	4837      	ldr	r0, [pc, #220]	; (814e4 <udc_process_setup+0x6b0>)
   81408:	4b34      	ldr	r3, [pc, #208]	; (814dc <udc_process_setup+0x6a8>)
		udc_string_desc.header.bLength = 2 + (str_length) * 2;
   8140a:	7031      	strb	r1, [r6, #0]
		udd_set_setup_payload(
   8140c:	4798      	blx	r3
   8140e:	e783      	b.n	81318 <udc_process_setup+0x4e4>
		str_length = USB_DEVICE_MANUFACTURE_NAME_SIZE;
   81410:	2215      	movs	r2, #21
		str = udc_string_manufacturer_name;
   81412:	4b35      	ldr	r3, [pc, #212]	; (814e8 <udc_process_setup+0x6b4>)
   81414:	e7ec      	b.n	813f0 <udc_process_setup+0x5bc>
		udd_set_setup_payload((uint8_t *) &udc_string_desc_languageid,
   81416:	2104      	movs	r1, #4
   81418:	4834      	ldr	r0, [pc, #208]	; (814ec <udc_process_setup+0x6b8>)
   8141a:	4b30      	ldr	r3, [pc, #192]	; (814dc <udc_process_setup+0x6a8>)
   8141c:	4798      	blx	r3
	if (str_length) {
   8141e:	e77b      	b.n	81318 <udc_process_setup+0x4e4>
		str_length = USB_DEVICE_PRODUCT_NAME_SIZE;
   81420:	2213      	movs	r2, #19
		str = udc_string_product_name;
   81422:	4b33      	ldr	r3, [pc, #204]	; (814f0 <udc_process_setup+0x6bc>)
   81424:	e7e4      	b.n	813f0 <udc_process_setup+0x5bc>
	if ((Udd_setup_recipient() == USB_REQ_RECIP_INTERFACE) || (Udd_setup_recipient() == USB_REQ_RECIP_DEVICE)) {
   81426:	7822      	ldrb	r2, [r4, #0]
   81428:	6038      	str	r0, [r7, #0]
   8142a:	e518      	b.n	80e5e <udc_process_setup+0x2a>
	if (Udd_setup_recipient() == USB_REQ_RECIP_ENDPOINT) {
   8142c:	7822      	ldrb	r2, [r4, #0]
   8142e:	e519      	b.n	80e64 <udc_process_setup+0x30>
				udc_config.confdev_lsfs->bNumConfigurations) {
   81430:	6832      	ldr	r2, [r6, #0]
		if ((udd_g_ctrlreq.req.wValue & 0xFF) >
   81432:	7c52      	ldrb	r2, [r2, #17]
   81434:	429a      	cmp	r2, r3
   81436:	f4bf ae7f 	bcs.w	81138 <udc_process_setup+0x304>
   8143a:	e6db      	b.n	811f4 <udc_process_setup+0x3c0>
		udd_ep_abort(udd_g_ctrlreq.req.wIndex & 0xFF);
   8143c:	7920      	ldrb	r0, [r4, #4]
   8143e:	4b2d      	ldr	r3, [pc, #180]	; (814f4 <udc_process_setup+0x6c0>)
   81440:	4798      	blx	r3
		return udd_ep_set_halt(udd_g_ctrlreq.req.wIndex & 0xFF);
   81442:	7920      	ldrb	r0, [r4, #4]
   81444:	4b2c      	ldr	r3, [pc, #176]	; (814f8 <udc_process_setup+0x6c4>)
   81446:	4798      	blx	r3
		if (udc_reqstd()) {
   81448:	2800      	cmp	r0, #0
   8144a:	f47f ae12 	bne.w	81072 <udc_process_setup+0x23e>
   8144e:	e6d1      	b.n	811f4 <udc_process_setup+0x3c0>
			if (conf_num >= udc_config.confdev_lsfs->
   81450:	681a      	ldr	r2, [r3, #0]
   81452:	7c52      	ldrb	r2, [r2, #17]
   81454:	42aa      	cmp	r2, r5
   81456:	f67f aecd 	bls.w	811f4 <udc_process_setup+0x3c0>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   8145a:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   8145c:	4b1f      	ldr	r3, [pc, #124]	; (814dc <udc_process_setup+0x6a8>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   8145e:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   81462:	8841      	ldrh	r1, [r0, #2]
   81464:	4798      	blx	r3
   81466:	e770      	b.n	8134a <udc_process_setup+0x516>
			if (conf_num >= udc_config.confdev_lsfs->
   81468:	681a      	ldr	r2, [r3, #0]
   8146a:	7c52      	ldrb	r2, [r2, #17]
   8146c:	42aa      	cmp	r2, r5
   8146e:	f67f aec1 	bls.w	811f4 <udc_process_setup+0x3c0>
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   81472:	685a      	ldr	r2, [r3, #4]
			udd_set_setup_payload(
   81474:	4b19      	ldr	r3, [pc, #100]	; (814dc <udc_process_setup+0x6a8>)
				(uint8_t *)udc_config.conf_lsfs[conf_num].desc,
   81476:	f852 0035 	ldr.w	r0, [r2, r5, lsl #3]
			udd_set_setup_payload(
   8147a:	8841      	ldrh	r1, [r0, #2]
   8147c:	4798      	blx	r3
   8147e:	e7a7      	b.n	813d0 <udc_process_setup+0x59c>
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   81480:	2010      	movs	r0, #16
   81482:	2102      	movs	r1, #2
   81484:	4b14      	ldr	r3, [pc, #80]	; (814d8 <udc_process_setup+0x6a4>)
			udd_set_setup_payload(
   81486:	4d15      	ldr	r5, [pc, #84]	; (814dc <udc_process_setup+0x6a8>)
			(udc_config.confdev_lsfs)->bcdUSB = 0x0210;
   81488:	681a      	ldr	r2, [r3, #0]
   8148a:	7090      	strb	r0, [r2, #2]
   8148c:	70d1      	strb	r1, [r2, #3]
				(uint8_t *) udc_config.confdev_lsfs,
   8148e:	6818      	ldr	r0, [r3, #0]
			udd_set_setup_payload(
   81490:	7801      	ldrb	r1, [r0, #0]
   81492:	47a8      	blx	r5
   81494:	e740      	b.n	81318 <udc_process_setup+0x4e4>
		udc_reset();
   81496:	4b19      	ldr	r3, [pc, #100]	; (814fc <udc_process_setup+0x6c8>)
   81498:	4798      	blx	r3
		switch ((udd_g_ctrlreq.req.wIndex >> 8) & 0xFF) {
   8149a:	88a3      	ldrh	r3, [r4, #4]
   8149c:	0a1b      	lsrs	r3, r3, #8
   8149e:	3b01      	subs	r3, #1
   814a0:	2b03      	cmp	r3, #3
   814a2:	f63f aea7 	bhi.w	811f4 <udc_process_setup+0x3c0>
   814a6:	e8df f003 	tbb	[pc, r3]
   814aa:	080b      	.short	0x080b
   814ac:	0205      	.short	0x0205
			udd_g_ctrlreq.callback = udd_test_mode_packet;
   814ae:	4b14      	ldr	r3, [pc, #80]	; (81500 <udc_process_setup+0x6cc>)
   814b0:	6123      	str	r3, [r4, #16]
			return true;
   814b2:	e4dd      	b.n	80e70 <udc_process_setup+0x3c>
			udd_g_ctrlreq.callback = udd_test_mode_se0_nak;
   814b4:	4b13      	ldr	r3, [pc, #76]	; (81504 <udc_process_setup+0x6d0>)
   814b6:	6123      	str	r3, [r4, #16]
			return true;
   814b8:	e4da      	b.n	80e70 <udc_process_setup+0x3c>
			udd_g_ctrlreq.callback = udd_test_mode_k;
   814ba:	4b13      	ldr	r3, [pc, #76]	; (81508 <udc_process_setup+0x6d4>)
   814bc:	6123      	str	r3, [r4, #16]
			return true;
   814be:	e4d7      	b.n	80e70 <udc_process_setup+0x3c>
			udd_g_ctrlreq.callback = udd_test_mode_j;
   814c0:	4b12      	ldr	r3, [pc, #72]	; (8150c <udc_process_setup+0x6d8>)
   814c2:	6123      	str	r3, [r4, #16]
			return true;
   814c4:	e4d4      	b.n	80e70 <udc_process_setup+0x3c>
		udc_ptr_conf = &udc_config.conf_lsfs[udc_num_configuration - 1];
   814c6:	6872      	ldr	r2, [r6, #4]
   814c8:	f103 5100 	add.w	r1, r3, #536870912	; 0x20000000
   814cc:	3901      	subs	r1, #1
   814ce:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
   814d2:	e643      	b.n	8115c <udc_process_setup+0x328>
   814d4:	00082609 	.word	0x00082609
   814d8:	2000036c 	.word	0x2000036c
   814dc:	00082661 	.word	0x00082661
   814e0:	200001ec 	.word	0x200001ec
   814e4:	200002dc 	.word	0x200002dc
   814e8:	20000324 	.word	0x20000324
   814ec:	20000320 	.word	0x20000320
   814f0:	2000033c 	.word	0x2000033c
   814f4:	00082c9d 	.word	0x00082c9d
   814f8:	00082725 	.word	0x00082725
   814fc:	00080d4d 	.word	0x00080d4d
   81500:	00082da5 	.word	0x00082da5
   81504:	00082d8d 	.word	0x00082d8d
   81508:	00082d69 	.word	0x00082d69
   8150c:	00082d45 	.word	0x00082d45

00081510 <FPGA_setlock>:
uint8_t volatile *xram = (uint8_t *) PSRAM_BASE_ADDRESS;

static volatile fpga_lockstatus_t _fpga_locked = fpga_unlocked;

int FPGA_setlock(fpga_lockstatus_t lockstatus)
{
   81510:	b538      	push	{r3, r4, r5, lr}
  int ret = 0;
  cpu_irq_enter_critical();
   81512:	4b08      	ldr	r3, [pc, #32]	; (81534 <FPGA_setlock+0x24>)
{
   81514:	4604      	mov	r4, r0
  cpu_irq_enter_critical();
   81516:	4798      	blx	r3
  if (_fpga_locked == fpga_unlocked)
   81518:	4b07      	ldr	r3, [pc, #28]	; (81538 <FPGA_setlock+0x28>)
   8151a:	781a      	ldrb	r2, [r3, #0]
   8151c:	b92a      	cbnz	r2, 8152a <FPGA_setlock+0x1a>
  {
    ret = 1;
   8151e:	2501      	movs	r5, #1
    _fpga_locked = lockstatus;
   81520:	701c      	strb	r4, [r3, #0]
  }
  cpu_irq_leave_critical();
   81522:	4b06      	ldr	r3, [pc, #24]	; (8153c <FPGA_setlock+0x2c>)
   81524:	4798      	blx	r3
  return ret;
}
   81526:	4628      	mov	r0, r5
   81528:	bd38      	pop	{r3, r4, r5, pc}
  int ret = 0;
   8152a:	2500      	movs	r5, #0
  cpu_irq_leave_critical();
   8152c:	4b03      	ldr	r3, [pc, #12]	; (8153c <FPGA_setlock+0x2c>)
   8152e:	4798      	blx	r3
}
   81530:	4628      	mov	r0, r5
   81532:	bd38      	pop	{r3, r4, r5, pc}
   81534:	000835fd 	.word	0x000835fd
   81538:	20003630 	.word	0x20003630
   8153c:	0008363d 	.word	0x0008363d

00081540 <FPGA_releaselock>:

void FPGA_releaselock(void)
{
  _fpga_locked = fpga_unlocked;
   81540:	2200      	movs	r2, #0
   81542:	4b01      	ldr	r3, [pc, #4]	; (81548 <FPGA_releaselock+0x8>)
   81544:	701a      	strb	r2, [r3, #0]
}
   81546:	4770      	bx	lr
   81548:	20003630 	.word	0x20003630

0008154c <FPGA_lockstatus>:

fpga_lockstatus_t FPGA_lockstatus(void)
{
  return _fpga_locked;
   8154c:	4b01      	ldr	r3, [pc, #4]	; (81554 <FPGA_lockstatus+0x8>)
   8154e:	7818      	ldrb	r0, [r3, #0]
}
   81550:	4770      	bx	lr
   81552:	bf00      	nop
   81554:	20003630 	.word	0x20003630

00081558 <flash_read_unique_id>:
 * \param ul_size Data buffer size in DWORD.
 *
 * \return 0 if successful; otherwise returns an error code.
 */
uint32_t flash_read_unique_id(uint32_t *pul_data, uint32_t ul_size)
{
   81558:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint32_t uid_buf[4];
	uint32_t ul_idx;

	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   8155a:	2604      	movs	r6, #4
{
   8155c:	b087      	sub	sp, #28
   8155e:	4604      	mov	r4, r0
   81560:	460d      	mov	r5, r1
	if (FLASH_RC_OK != efc_perform_read_sequence(EFC, EFC_FCMD_STUI,
   81562:	220f      	movs	r2, #15
   81564:	210e      	movs	r1, #14
   81566:	480c      	ldr	r0, [pc, #48]	; (81598 <flash_read_unique_id+0x40>)
   81568:	4f0c      	ldr	r7, [pc, #48]	; (8159c <flash_read_unique_id+0x44>)
   8156a:	ab02      	add	r3, sp, #8
   8156c:	9600      	str	r6, [sp, #0]
   8156e:	47b8      	blx	r7
   81570:	b970      	cbnz	r0, 81590 <flash_read_unique_id+0x38>
			EFC_FCMD_SPUI, uid_buf, 4)) {
		return FLASH_RC_ERROR;
	}

	if (ul_size > 4) {
   81572:	2d04      	cmp	r5, #4
   81574:	4626      	mov	r6, r4
   81576:	462a      	mov	r2, r5
   81578:	4604      	mov	r4, r0
   8157a:	bf28      	it	cs
   8157c:	2204      	movcs	r2, #4
		/* Only 4 dword to store unique ID */
		ul_size = 4;
	}

	for (ul_idx = 0; ul_idx < ul_size; ul_idx++) {
   8157e:	b125      	cbz	r5, 8158a <flash_read_unique_id+0x32>
		pul_data[ul_idx] = uid_buf[ul_idx];
   81580:	4630      	mov	r0, r6
   81582:	4b07      	ldr	r3, [pc, #28]	; (815a0 <flash_read_unique_id+0x48>)
   81584:	a902      	add	r1, sp, #8
   81586:	0092      	lsls	r2, r2, #2
   81588:	4798      	blx	r3
	}

	return FLASH_RC_OK;
}
   8158a:	4620      	mov	r0, r4
   8158c:	b007      	add	sp, #28
   8158e:	bdf0      	pop	{r4, r5, r6, r7, pc}
		return FLASH_RC_ERROR;
   81590:	2410      	movs	r4, #16
}
   81592:	4620      	mov	r0, r4
   81594:	b007      	add	sp, #28
   81596:	bdf0      	pop	{r4, r5, r6, r7, pc}
   81598:	400e0800 	.word	0x400e0800
   8159c:	20000001 	.word	0x20000001
   815a0:	000838b9 	.word	0x000838b9

000815a4 <usart_write>:
 *
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
   815a4:	4603      	mov	r3, r0
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
   815a6:	6942      	ldr	r2, [r0, #20]
   815a8:	0792      	lsls	r2, r2, #30
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
   815aa:	bf43      	ittte	mi
   815ac:	f3c1 0108 	ubfxmi	r1, r1, #0, #9
	return 0;
   815b0:	2000      	movmi	r0, #0
	p_usart->US_THR = US_THR_TXCHR(c);
   815b2:	61d9      	strmi	r1, [r3, #28]
		return 1;
   815b4:	2001      	movpl	r0, #1
}
   815b6:	4770      	bx	lr

000815b8 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
   815b8:	6943      	ldr	r3, [r0, #20]
   815ba:	07db      	lsls	r3, r3, #31
   815bc:	d505      	bpl.n	815ca <usart_read+0x12>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   815be:	6983      	ldr	r3, [r0, #24]

	return 0;
   815c0:	2000      	movs	r0, #0
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
   815c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
   815c6:	600b      	str	r3, [r1, #0]
	return 0;
   815c8:	4770      	bx	lr
		return 1;
   815ca:	2001      	movs	r0, #1
}
   815cc:	4770      	bx	lr
   815ce:	bf00      	nop

000815d0 <smc_set_setup_timing>:
 * \param ul_setup_timing Setup timing for NWE, NCS, NRD.
 */
void smc_set_setup_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_setup_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_SETUP = ul_setup_timing;
   815d0:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   815d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   815d8:	670a      	str	r2, [r1, #112]	; 0x70
}
   815da:	4770      	bx	lr

000815dc <smc_set_pulse_timing>:
 * \param ul_pulse_timing Pulse timing for NWE,NCS,NRD.
 */
void smc_set_pulse_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_pulse_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_PULSE = ul_pulse_timing;
   815dc:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   815e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   815e4:	674a      	str	r2, [r1, #116]	; 0x74
}
   815e6:	4770      	bx	lr

000815e8 <smc_set_cycle_timing>:
 * \param ul_cycle_timing Cycle timing for NWE and NRD.
 */
void smc_set_cycle_timing(Smc *p_smc, uint32_t ul_cs,
		uint32_t ul_cycle_timing)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_CYCLE = ul_cycle_timing;
   815e8:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   815ec:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   815f0:	678a      	str	r2, [r1, #120]	; 0x78
}
   815f2:	4770      	bx	lr

000815f4 <smc_set_mode>:
 * \param ul_cs Chip select number to be set.
 * \param ul_mode SMC mode.
 */
void smc_set_mode(Smc *p_smc, uint32_t ul_cs, uint32_t ul_mode)
{
	p_smc->SMC_CS_NUMBER[ul_cs].SMC_MODE = ul_mode;
   815f4:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   815f8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
   815fc:	f8c1 2080 	str.w	r2, [r1, #128]	; 0x80
}
   81600:	4770      	bx	lr
   81602:	bf00      	nop

00081604 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   81604:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   81606:	4b2e      	ldr	r3, [pc, #184]	; (816c0 <PIOA_Handler+0xbc>)
   81608:	482e      	ldr	r0, [pc, #184]	; (816c4 <PIOA_Handler+0xc0>)
   8160a:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   8160c:	4b2e      	ldr	r3, [pc, #184]	; (816c8 <PIOA_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   8160e:	4604      	mov	r4, r0
	status &= pio_get_interrupt_mask(p_pio);
   81610:	482c      	ldr	r0, [pc, #176]	; (816c4 <PIOA_Handler+0xc0>)
   81612:	4798      	blx	r3
	if (status != 0) {
   81614:	4004      	ands	r4, r0
   81616:	d015      	beq.n	81644 <PIOA_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   81618:	4d2c      	ldr	r5, [pc, #176]	; (816cc <PIOA_Handler+0xc8>)
   8161a:	6828      	ldr	r0, [r5, #0]
   8161c:	280a      	cmp	r0, #10
   8161e:	d012      	beq.n	81646 <PIOA_Handler+0x42>
   81620:	6928      	ldr	r0, [r5, #16]
   81622:	280a      	cmp	r0, #10
   81624:	d01f      	beq.n	81666 <PIOA_Handler+0x62>
   81626:	6a28      	ldr	r0, [r5, #32]
   81628:	280a      	cmp	r0, #10
   8162a:	d025      	beq.n	81678 <PIOA_Handler+0x74>
   8162c:	6b28      	ldr	r0, [r5, #48]	; 0x30
   8162e:	280a      	cmp	r0, #10
   81630:	d02b      	beq.n	8168a <PIOA_Handler+0x86>
   81632:	6c28      	ldr	r0, [r5, #64]	; 0x40
   81634:	280a      	cmp	r0, #10
   81636:	d031      	beq.n	8169c <PIOA_Handler+0x98>
   81638:	6d28      	ldr	r0, [r5, #80]	; 0x50
   8163a:	280a      	cmp	r0, #10
   8163c:	d037      	beq.n	816ae <PIOA_Handler+0xaa>
   8163e:	6e28      	ldr	r0, [r5, #96]	; 0x60
   81640:	280a      	cmp	r0, #10
   81642:	d009      	beq.n	81658 <PIOA_Handler+0x54>
	pio_handler_process(PIOA, ID_PIOA);
}
   81644:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81646:	6869      	ldr	r1, [r5, #4]
   81648:	420c      	tst	r4, r1
   8164a:	d0e9      	beq.n	81620 <PIOA_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8164c:	68eb      	ldr	r3, [r5, #12]
   8164e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81650:	686b      	ldr	r3, [r5, #4]
		while (status != 0) {
   81652:	439c      	bics	r4, r3
   81654:	d1e4      	bne.n	81620 <PIOA_Handler+0x1c>
   81656:	e7f5      	b.n	81644 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81658:	6e69      	ldr	r1, [r5, #100]	; 0x64
   8165a:	4221      	tst	r1, r4
   8165c:	d0f2      	beq.n	81644 <PIOA_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8165e:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
}
   81660:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81664:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81666:	6969      	ldr	r1, [r5, #20]
   81668:	4221      	tst	r1, r4
   8166a:	d0dc      	beq.n	81626 <PIOA_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8166c:	69eb      	ldr	r3, [r5, #28]
   8166e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81670:	696b      	ldr	r3, [r5, #20]
		while (status != 0) {
   81672:	439c      	bics	r4, r3
   81674:	d1d7      	bne.n	81626 <PIOA_Handler+0x22>
   81676:	e7e5      	b.n	81644 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81678:	6a69      	ldr	r1, [r5, #36]	; 0x24
   8167a:	4221      	tst	r1, r4
   8167c:	d0d6      	beq.n	8162c <PIOA_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8167e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
   81680:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81682:	6a6b      	ldr	r3, [r5, #36]	; 0x24
		while (status != 0) {
   81684:	439c      	bics	r4, r3
   81686:	d1d1      	bne.n	8162c <PIOA_Handler+0x28>
   81688:	e7dc      	b.n	81644 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8168a:	6b69      	ldr	r1, [r5, #52]	; 0x34
   8168c:	420c      	tst	r4, r1
   8168e:	d0d0      	beq.n	81632 <PIOA_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81690:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   81692:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81694:	6b6b      	ldr	r3, [r5, #52]	; 0x34
		while (status != 0) {
   81696:	439c      	bics	r4, r3
   81698:	d1cb      	bne.n	81632 <PIOA_Handler+0x2e>
   8169a:	e7d3      	b.n	81644 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8169c:	6c69      	ldr	r1, [r5, #68]	; 0x44
   8169e:	420c      	tst	r4, r1
   816a0:	d0ca      	beq.n	81638 <PIOA_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   816a2:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   816a4:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   816a6:	6c6b      	ldr	r3, [r5, #68]	; 0x44
		while (status != 0) {
   816a8:	439c      	bics	r4, r3
   816aa:	d1c5      	bne.n	81638 <PIOA_Handler+0x34>
   816ac:	e7ca      	b.n	81644 <PIOA_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   816ae:	6d69      	ldr	r1, [r5, #84]	; 0x54
   816b0:	420c      	tst	r4, r1
   816b2:	d0c4      	beq.n	8163e <PIOA_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   816b4:	6deb      	ldr	r3, [r5, #92]	; 0x5c
   816b6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   816b8:	6d6b      	ldr	r3, [r5, #84]	; 0x54
		while (status != 0) {
   816ba:	439c      	bics	r4, r3
   816bc:	d1bf      	bne.n	8163e <PIOA_Handler+0x3a>
}
   816be:	bd70      	pop	{r4, r5, r6, pc}
   816c0:	000832ad 	.word	0x000832ad
   816c4:	400e0c00 	.word	0x400e0c00
   816c8:	000832b1 	.word	0x000832b1
   816cc:	20003634 	.word	0x20003634

000816d0 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   816d0:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   816d2:	4b2e      	ldr	r3, [pc, #184]	; (8178c <PIOB_Handler+0xbc>)
   816d4:	482e      	ldr	r0, [pc, #184]	; (81790 <PIOB_Handler+0xc0>)
   816d6:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   816d8:	4b2e      	ldr	r3, [pc, #184]	; (81794 <PIOB_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   816da:	4604      	mov	r4, r0
	status &= pio_get_interrupt_mask(p_pio);
   816dc:	482c      	ldr	r0, [pc, #176]	; (81790 <PIOB_Handler+0xc0>)
   816de:	4798      	blx	r3
	if (status != 0) {
   816e0:	4004      	ands	r4, r0
   816e2:	d015      	beq.n	81710 <PIOB_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   816e4:	4d2c      	ldr	r5, [pc, #176]	; (81798 <PIOB_Handler+0xc8>)
   816e6:	6828      	ldr	r0, [r5, #0]
   816e8:	280b      	cmp	r0, #11
   816ea:	d012      	beq.n	81712 <PIOB_Handler+0x42>
   816ec:	6928      	ldr	r0, [r5, #16]
   816ee:	280b      	cmp	r0, #11
   816f0:	d01f      	beq.n	81732 <PIOB_Handler+0x62>
   816f2:	6a28      	ldr	r0, [r5, #32]
   816f4:	280b      	cmp	r0, #11
   816f6:	d025      	beq.n	81744 <PIOB_Handler+0x74>
   816f8:	6b28      	ldr	r0, [r5, #48]	; 0x30
   816fa:	280b      	cmp	r0, #11
   816fc:	d02b      	beq.n	81756 <PIOB_Handler+0x86>
   816fe:	6c28      	ldr	r0, [r5, #64]	; 0x40
   81700:	280b      	cmp	r0, #11
   81702:	d031      	beq.n	81768 <PIOB_Handler+0x98>
   81704:	6d28      	ldr	r0, [r5, #80]	; 0x50
   81706:	280b      	cmp	r0, #11
   81708:	d037      	beq.n	8177a <PIOB_Handler+0xaa>
   8170a:	6e28      	ldr	r0, [r5, #96]	; 0x60
   8170c:	280b      	cmp	r0, #11
   8170e:	d009      	beq.n	81724 <PIOB_Handler+0x54>
    pio_handler_process(PIOB, ID_PIOB);
}
   81710:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81712:	6869      	ldr	r1, [r5, #4]
   81714:	420c      	tst	r4, r1
   81716:	d0e9      	beq.n	816ec <PIOB_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81718:	68eb      	ldr	r3, [r5, #12]
   8171a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8171c:	686b      	ldr	r3, [r5, #4]
		while (status != 0) {
   8171e:	439c      	bics	r4, r3
   81720:	d1e4      	bne.n	816ec <PIOB_Handler+0x1c>
   81722:	e7f5      	b.n	81710 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81724:	6e69      	ldr	r1, [r5, #100]	; 0x64
   81726:	4221      	tst	r1, r4
   81728:	d0f2      	beq.n	81710 <PIOB_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8172a:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
}
   8172c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81730:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81732:	6969      	ldr	r1, [r5, #20]
   81734:	4221      	tst	r1, r4
   81736:	d0dc      	beq.n	816f2 <PIOB_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81738:	69eb      	ldr	r3, [r5, #28]
   8173a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8173c:	696b      	ldr	r3, [r5, #20]
		while (status != 0) {
   8173e:	439c      	bics	r4, r3
   81740:	d1d7      	bne.n	816f2 <PIOB_Handler+0x22>
   81742:	e7e5      	b.n	81710 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81744:	6a69      	ldr	r1, [r5, #36]	; 0x24
   81746:	4221      	tst	r1, r4
   81748:	d0d6      	beq.n	816f8 <PIOB_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8174a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
   8174c:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8174e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
		while (status != 0) {
   81750:	439c      	bics	r4, r3
   81752:	d1d1      	bne.n	816f8 <PIOB_Handler+0x28>
   81754:	e7dc      	b.n	81710 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81756:	6b69      	ldr	r1, [r5, #52]	; 0x34
   81758:	420c      	tst	r4, r1
   8175a:	d0d0      	beq.n	816fe <PIOB_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8175c:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   8175e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81760:	6b6b      	ldr	r3, [r5, #52]	; 0x34
		while (status != 0) {
   81762:	439c      	bics	r4, r3
   81764:	d1cb      	bne.n	816fe <PIOB_Handler+0x2e>
   81766:	e7d3      	b.n	81710 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81768:	6c69      	ldr	r1, [r5, #68]	; 0x44
   8176a:	420c      	tst	r4, r1
   8176c:	d0ca      	beq.n	81704 <PIOB_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8176e:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   81770:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81772:	6c6b      	ldr	r3, [r5, #68]	; 0x44
		while (status != 0) {
   81774:	439c      	bics	r4, r3
   81776:	d1c5      	bne.n	81704 <PIOB_Handler+0x34>
   81778:	e7ca      	b.n	81710 <PIOB_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   8177a:	6d69      	ldr	r1, [r5, #84]	; 0x54
   8177c:	420c      	tst	r4, r1
   8177e:	d0c4      	beq.n	8170a <PIOB_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81780:	6deb      	ldr	r3, [r5, #92]	; 0x5c
   81782:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81784:	6d6b      	ldr	r3, [r5, #84]	; 0x54
		while (status != 0) {
   81786:	439c      	bics	r4, r3
   81788:	d1bf      	bne.n	8170a <PIOB_Handler+0x3a>
}
   8178a:	bd70      	pop	{r4, r5, r6, pc}
   8178c:	000832ad 	.word	0x000832ad
   81790:	400e0e00 	.word	0x400e0e00
   81794:	000832b1 	.word	0x000832b1
   81798:	20003634 	.word	0x20003634

0008179c <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   8179c:	b570      	push	{r4, r5, r6, lr}
	status = pio_get_interrupt_status(p_pio);
   8179e:	4b2e      	ldr	r3, [pc, #184]	; (81858 <PIOC_Handler+0xbc>)
   817a0:	482e      	ldr	r0, [pc, #184]	; (8185c <PIOC_Handler+0xc0>)
   817a2:	4798      	blx	r3
	status &= pio_get_interrupt_mask(p_pio);
   817a4:	4b2e      	ldr	r3, [pc, #184]	; (81860 <PIOC_Handler+0xc4>)
	status = pio_get_interrupt_status(p_pio);
   817a6:	4604      	mov	r4, r0
	status &= pio_get_interrupt_mask(p_pio);
   817a8:	482c      	ldr	r0, [pc, #176]	; (8185c <PIOC_Handler+0xc0>)
   817aa:	4798      	blx	r3
	if (status != 0) {
   817ac:	4004      	ands	r4, r0
   817ae:	d015      	beq.n	817dc <PIOC_Handler+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
   817b0:	4d2c      	ldr	r5, [pc, #176]	; (81864 <PIOC_Handler+0xc8>)
   817b2:	6828      	ldr	r0, [r5, #0]
   817b4:	280c      	cmp	r0, #12
   817b6:	d012      	beq.n	817de <PIOC_Handler+0x42>
   817b8:	6928      	ldr	r0, [r5, #16]
   817ba:	280c      	cmp	r0, #12
   817bc:	d01f      	beq.n	817fe <PIOC_Handler+0x62>
   817be:	6a28      	ldr	r0, [r5, #32]
   817c0:	280c      	cmp	r0, #12
   817c2:	d025      	beq.n	81810 <PIOC_Handler+0x74>
   817c4:	6b28      	ldr	r0, [r5, #48]	; 0x30
   817c6:	280c      	cmp	r0, #12
   817c8:	d02b      	beq.n	81822 <PIOC_Handler+0x86>
   817ca:	6c28      	ldr	r0, [r5, #64]	; 0x40
   817cc:	280c      	cmp	r0, #12
   817ce:	d031      	beq.n	81834 <PIOC_Handler+0x98>
   817d0:	6d28      	ldr	r0, [r5, #80]	; 0x50
   817d2:	280c      	cmp	r0, #12
   817d4:	d037      	beq.n	81846 <PIOC_Handler+0xaa>
   817d6:	6e28      	ldr	r0, [r5, #96]	; 0x60
   817d8:	280c      	cmp	r0, #12
   817da:	d009      	beq.n	817f0 <PIOC_Handler+0x54>
	pio_handler_process(PIOC, ID_PIOC);
}
   817dc:	bd70      	pop	{r4, r5, r6, pc}
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   817de:	6869      	ldr	r1, [r5, #4]
   817e0:	420c      	tst	r4, r1
   817e2:	d0e9      	beq.n	817b8 <PIOC_Handler+0x1c>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   817e4:	68eb      	ldr	r3, [r5, #12]
   817e6:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   817e8:	686b      	ldr	r3, [r5, #4]
		while (status != 0) {
   817ea:	439c      	bics	r4, r3
   817ec:	d1e4      	bne.n	817b8 <PIOC_Handler+0x1c>
   817ee:	e7f5      	b.n	817dc <PIOC_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   817f0:	6e69      	ldr	r1, [r5, #100]	; 0x64
   817f2:	4221      	tst	r1, r4
   817f4:	d0f2      	beq.n	817dc <PIOC_Handler+0x40>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   817f6:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
}
   817f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   817fc:	4718      	bx	r3
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   817fe:	6969      	ldr	r1, [r5, #20]
   81800:	4221      	tst	r1, r4
   81802:	d0dc      	beq.n	817be <PIOC_Handler+0x22>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81804:	69eb      	ldr	r3, [r5, #28]
   81806:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81808:	696b      	ldr	r3, [r5, #20]
		while (status != 0) {
   8180a:	439c      	bics	r4, r3
   8180c:	d1d7      	bne.n	817be <PIOC_Handler+0x22>
   8180e:	e7e5      	b.n	817dc <PIOC_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81810:	6a69      	ldr	r1, [r5, #36]	; 0x24
   81812:	4221      	tst	r1, r4
   81814:	d0d6      	beq.n	817c4 <PIOC_Handler+0x28>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81816:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
   81818:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8181a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
		while (status != 0) {
   8181c:	439c      	bics	r4, r3
   8181e:	d1d1      	bne.n	817c4 <PIOC_Handler+0x28>
   81820:	e7dc      	b.n	817dc <PIOC_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81822:	6b69      	ldr	r1, [r5, #52]	; 0x34
   81824:	420c      	tst	r4, r1
   81826:	d0d0      	beq.n	817ca <PIOC_Handler+0x2e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   81828:	6beb      	ldr	r3, [r5, #60]	; 0x3c
   8182a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8182c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
		while (status != 0) {
   8182e:	439c      	bics	r4, r3
   81830:	d1cb      	bne.n	817ca <PIOC_Handler+0x2e>
   81832:	e7d3      	b.n	817dc <PIOC_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81834:	6c69      	ldr	r1, [r5, #68]	; 0x44
   81836:	420c      	tst	r4, r1
   81838:	d0ca      	beq.n	817d0 <PIOC_Handler+0x34>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8183a:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
   8183c:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   8183e:	6c6b      	ldr	r3, [r5, #68]	; 0x44
		while (status != 0) {
   81840:	439c      	bics	r4, r3
   81842:	d1c5      	bne.n	817d0 <PIOC_Handler+0x34>
   81844:	e7ca      	b.n	817dc <PIOC_Handler+0x40>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   81846:	6d69      	ldr	r1, [r5, #84]	; 0x54
   81848:	420c      	tst	r4, r1
   8184a:	d0c4      	beq.n	817d6 <PIOC_Handler+0x3a>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   8184c:	6deb      	ldr	r3, [r5, #92]	; 0x5c
   8184e:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
   81850:	6d6b      	ldr	r3, [r5, #84]	; 0x54
		while (status != 0) {
   81852:	439c      	bics	r4, r3
   81854:	d1bf      	bne.n	817d6 <PIOC_Handler+0x3a>
}
   81856:	bd70      	pop	{r4, r5, r6, pc}
   81858:	000832ad 	.word	0x000832ad
   8185c:	400e1000 	.word	0x400e1000
   81860:	000832b1 	.word	0x000832b1
   81864:	20003634 	.word	0x20003634

00081868 <udd_ep_trans_done>:
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
			UDD_EP_TRANSFER_OK, ptr_job->buf_size, ep_num);
}

static void udd_ep_trans_done(udd_ep_id_t ep)
{
   81868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_ep_job_t *ptr_job;
	iram_size_t next_trans;
	irqflags_t flags;

	// Get job corresponding at endpoint
	ptr_job = &udd_ep_job[ep - 1];
   8186c:	1e41      	subs	r1, r0, #1

	if (!ptr_job->busy) {
   8186e:	4c6d      	ldr	r4, [pc, #436]	; (81a24 <udd_ep_trans_done+0x1bc>)
   81870:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   81874:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   81878:	7d1a      	ldrb	r2, [r3, #20]
   8187a:	07d7      	lsls	r7, r2, #31
   8187c:	d568      	bpl.n	81950 <udd_ep_trans_done+0xe8>
		return; // No job is running, then ignore it (system error)
	}

	if (ptr_job->buf_cnt != ptr_job->buf_size) {
   8187e:	e9d3 5602 	ldrd	r5, r6, [r3, #8]
   81882:	42ae      	cmp	r6, r5
   81884:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   81888:	d064      	beq.n	81954 <udd_ep_trans_done+0xec>
		// Need to send or receive other data
		next_trans = ptr_job->buf_size - ptr_job->buf_cnt;
   8188a:	1bad      	subs	r5, r5, r6

		if (UDD_ENDPOINT_MAX_TRANS < next_trans) {
   8188c:	f5b5 3f80 	cmp.w	r5, #65536	; 0x10000
   81890:	d81d      	bhi.n	818ce <udd_ep_trans_done+0x66>
			next_trans = UDD_ENDPOINT_MAX_TRANS;

			// Set 0 to transfer the maximum
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(0);
		} else {
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   81892:	0142      	lsls	r2, r0, #5
   81894:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
   81898:	f502 2220 	add.w	r2, r2, #655360	; 0xa0000
		}
		if (Is_udd_endpoint_in(ep)) {
   8189c:	f8d2 e100 	ldr.w	lr, [r2, #256]	; 0x100
			udd_dma_ctrl = UDPHS_DMACONTROL_BUFF_LENGTH(next_trans);
   818a0:	042f      	lsls	r7, r5, #16
		if (Is_udd_endpoint_in(ep)) {
   818a2:	f01e 0f08 	tst.w	lr, #8
   818a6:	f000 8088 	beq.w	819ba <udd_ep_trans_done+0x152>
			if (0 != (next_trans % udd_get_endpoint_size(ep))) {
   818aa:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
   818ae:	f002 0e07 	and.w	lr, r2, #7
   818b2:	2208      	movs	r2, #8
   818b4:	fa02 f20e 	lsl.w	r2, r2, lr
   818b8:	3a01      	subs	r2, #1
   818ba:	422a      	tst	r2, r5
   818bc:	f000 80ae 	beq.w	81a1c <udd_ep_trans_done+0x1b4>
				// Enable short packet option
				// else the DMA transfer is accepted
				// and interrupt DMA valid but nothing is sent.
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_B_EN;
				// No need to request another ZLP
				ptr_job->b_shortpacket = false;
   818c0:	7d1a      	ldrb	r2, [r3, #20]
			}
		}

		// Start USB DMA to fill or read fifo of the selected endpoint
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   818c2:	f047 0729 	orr.w	r7, r7, #41	; 0x29
				ptr_job->b_shortpacket = false;
   818c6:	f36f 0241 	bfc	r2, #1, #1
   818ca:	751a      	strb	r2, [r3, #20]
   818cc:	e00d      	b.n	818ea <udd_ep_trans_done+0x82>
		if (Is_udd_endpoint_in(ep)) {
   818ce:	0143      	lsls	r3, r0, #5
   818d0:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   818d4:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   818d8:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   818dc:	0717      	lsls	r7, r2, #28
   818de:	d575      	bpl.n	819cc <udd_ep_trans_done+0x164>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   818e0:	2721      	movs	r7, #33	; 0x21
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   818e2:	f44f 3580 	mov.w	r5, #65536	; 0x10000
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   818e6:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
		udd_endpoint_dma_set_addr(ep, (uint32_t) & ptr_job->buf[ptr_job->buf_cnt]);
   818ea:	eb0c 0201 	add.w	r2, ip, r1
   818ee:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
   818f2:	6853      	ldr	r3, [r2, #4]
   818f4:	441e      	add	r6, r3
   818f6:	4b4c      	ldr	r3, [pc, #304]	; (81a28 <udd_ep_trans_done+0x1c0>)
   818f8:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   818fc:	605e      	str	r6, [r3, #4]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   818fe:	f3ef 8e10 	mrs	lr, PRIMASK
  __ASM volatile ("cpsid i");
   81902:	b672      	cpsid	i
   81904:	f3bf 8f5f 	dmb	sy
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	irqflags_t flags = cpu_irq_is_enabled();
	cpu_irq_disable();
   81908:	f04f 0800 	mov.w	r8, #0
   8190c:	4e47      	ldr	r6, [pc, #284]	; (81a2c <udd_ep_trans_done+0x1c4>)
   8190e:	f886 8000 	strb.w	r8, [r6]

		// Disable IRQs to have a short sequence
		// between read of EOT_STA and DMA enable
		flags = cpu_irq_save();
		if (!(udd_endpoint_dma_get_status(ep)
   81912:	f8d3 800c 	ldr.w	r8, [r3, #12]
   81916:	f018 0f10 	tst.w	r8, #16
   8191a:	d061      	beq.n	819e0 <udd_ep_trans_done+0x178>
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
   8191c:	f1be 0f00 	cmp.w	lr, #0
   81920:	d104      	bne.n	8192c <udd_ep_trans_done+0xc4>
		cpu_irq_enable();
   81922:	2301      	movs	r3, #1
   81924:	7033      	strb	r3, [r6, #0]
   81926:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8192a:	b662      	cpsie	i
		cpu_irq_restore(flags);

		// Here a ZLP has been received
		// and the DMA transfer must be not started.
		// It is the end of transfer
		ptr_job->buf_size = ptr_job->buf_cnt;
   8192c:	eb0c 0201 	add.w	r2, ip, r1
   81930:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
   81934:	68d3      	ldr	r3, [r2, #12]
	}
	if (Is_udd_endpoint_in(ep)) {
   81936:	4e3e      	ldr	r6, [pc, #248]	; (81a30 <udd_ep_trans_done+0x1c8>)
		ptr_job->buf_size = ptr_job->buf_cnt;
   81938:	6093      	str	r3, [r2, #8]
	if (Is_udd_endpoint_in(ep)) {
   8193a:	f100 0308 	add.w	r3, r0, #8
   8193e:	015d      	lsls	r5, r3, #5
   81940:	5975      	ldr	r5, [r6, r5]
		if (ptr_job->b_shortpacket) {
   81942:	7d12      	ldrb	r2, [r2, #20]
	if (Is_udd_endpoint_in(ep)) {
   81944:	072e      	lsls	r6, r5, #28
   81946:	d501      	bpl.n	8194c <udd_ep_trans_done+0xe4>
		if (ptr_job->b_shortpacket) {
   81948:	0795      	lsls	r5, r2, #30
   8194a:	d429      	bmi.n	819a0 <udd_ep_trans_done+0x138>
	if (ptr_job->busy == false) {
   8194c:	07d2      	lsls	r2, r2, #31
   8194e:	d408      	bmi.n	81962 <udd_ep_trans_done+0xfa>
			return;
		}
	}
	// Call callback to signal end of transfer
	udd_ep_finish_job(ptr_job, false, ep);
}
   81950:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (Is_udd_endpoint_in(ep)) {
   81954:	4e36      	ldr	r6, [pc, #216]	; (81a30 <udd_ep_trans_done+0x1c8>)
   81956:	f100 0308 	add.w	r3, r0, #8
   8195a:	015d      	lsls	r5, r3, #5
   8195c:	5975      	ldr	r5, [r6, r5]
   8195e:	072d      	lsls	r5, r5, #28
   81960:	d41c      	bmi.n	8199c <udd_ep_trans_done+0x134>
	ptr_job->busy = false;
   81962:	eb0c 0501 	add.w	r5, ip, r1
   81966:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
	if (NULL == ptr_job->call_trans) {
   8196a:	f854 6035 	ldr.w	r6, [r4, r5, lsl #3]
	ptr_job->busy = false;
   8196e:	7d15      	ldrb	r5, [r2, #20]
   81970:	f36f 0500 	bfc	r5, #0, #1
   81974:	7515      	strb	r5, [r2, #20]
	if (NULL == ptr_job->call_trans) {
   81976:	2e00      	cmp	r6, #0
   81978:	d0ea      	beq.n	81950 <udd_ep_trans_done+0xe8>
	if (Is_udd_endpoint_in(ep_num)) {
   8197a:	4a2d      	ldr	r2, [pc, #180]	; (81a30 <udd_ep_trans_done+0x1c8>)
   8197c:	015b      	lsls	r3, r3, #5
   8197e:	58d3      	ldr	r3, [r2, r3]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81980:	4461      	add	r1, ip
	if (Is_udd_endpoint_in(ep_num)) {
   81982:	071b      	lsls	r3, r3, #28
		ep_num |= USB_EP_DIR_IN;
   81984:	bf48      	it	mi
   81986:	f040 0080 	orrmi.w	r0, r0, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8198a:	eb04 04c1 	add.w	r4, r4, r1, lsl #3
   8198e:	4602      	mov	r2, r0
   81990:	4633      	mov	r3, r6
   81992:	68a1      	ldr	r1, [r4, #8]
   81994:	2000      	movs	r0, #0
}
   81996:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8199a:	4718      	bx	r3
		if (ptr_job->b_shortpacket) {
   8199c:	0792      	lsls	r2, r2, #30
   8199e:	d5e0      	bpl.n	81962 <udd_ep_trans_done+0xfa>
			udd_enable_tx_pkt_ready_interrupt(ep);
   819a0:	f44f 6400 	mov.w	r4, #2048	; 0x800
			udd_enable_endpoint_interrupt(ep);
   819a4:	f44f 7280 	mov.w	r2, #256	; 0x100
			udd_enable_tx_pkt_ready_interrupt(ep);
   819a8:	4921      	ldr	r1, [pc, #132]	; (81a30 <udd_ep_trans_done+0x1c8>)
			udd_enable_endpoint_interrupt(ep);
   819aa:	4082      	lsls	r2, r0
			udd_enable_tx_pkt_ready_interrupt(ep);
   819ac:	eb01 1343 	add.w	r3, r1, r3, lsl #5
   819b0:	605c      	str	r4, [r3, #4]
			udd_enable_endpoint_interrupt(ep);
   819b2:	690b      	ldr	r3, [r1, #16]
   819b4:	431a      	orrs	r2, r3
   819b6:	610a      	str	r2, [r1, #16]
			return;
   819b8:	e7ca      	b.n	81950 <udd_ep_trans_done+0xe8>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   819ba:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   819be:	f3c3 1301 	ubfx	r3, r3, #4, #2
   819c2:	2b01      	cmp	r3, #1
   819c4:	d022      	beq.n	81a0c <udd_ep_trans_done+0x1a4>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   819c6:	f047 0735 	orr.w	r7, r7, #53	; 0x35
   819ca:	e78e      	b.n	818ea <udd_ep_trans_done+0x82>
			if ((USB_EP_TYPE_ISOCHRONOUS != udd_get_endpoint_type(ep))
   819cc:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   819d0:	f3c2 1201 	ubfx	r2, r2, #4, #2
   819d4:	2a01      	cmp	r2, #1
   819d6:	d083      	beq.n	818e0 <udd_ep_trans_done+0x78>
   819d8:	2735      	movs	r7, #53	; 0x35
			next_trans = UDD_ENDPOINT_MAX_TRANS;
   819da:	f44f 3580 	mov.w	r5, #65536	; 0x10000
				udd_dma_ctrl |= UDPHS_DMACONTROL_END_TR_IT
   819de:	e784      	b.n	818ea <udd_ep_trans_done+0x82>
			udd_endpoint_dma_set_control(ep, udd_dma_ctrl);
   819e0:	609f      	str	r7, [r3, #8]
			udd_enable_endpoint_dma_interrupt(ep);
   819e2:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
   819e6:	fa03 f101 	lsl.w	r1, r3, r1
			ptr_job->buf_cnt += next_trans;
   819ea:	68d3      	ldr	r3, [r2, #12]
			ptr_job->buf_load = next_trans;
   819ec:	6115      	str	r5, [r2, #16]
			ptr_job->buf_cnt += next_trans;
   819ee:	441d      	add	r5, r3
			udd_enable_endpoint_dma_interrupt(ep);
   819f0:	4b0f      	ldr	r3, [pc, #60]	; (81a30 <udd_ep_trans_done+0x1c8>)
			ptr_job->buf_cnt += next_trans;
   819f2:	60d5      	str	r5, [r2, #12]
			udd_enable_endpoint_dma_interrupt(ep);
   819f4:	691a      	ldr	r2, [r3, #16]
   819f6:	4311      	orrs	r1, r2
   819f8:	6119      	str	r1, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
   819fa:	f1be 0f00 	cmp.w	lr, #0
   819fe:	d1a7      	bne.n	81950 <udd_ep_trans_done+0xe8>
		cpu_irq_enable();
   81a00:	2301      	movs	r3, #1
   81a02:	7033      	strb	r3, [r6, #0]
   81a04:	f3bf 8f5f 	dmb	sy
   81a08:	b662      	cpsie	i
}
   81a0a:	e7a1      	b.n	81950 <udd_ep_trans_done+0xe8>
					|| (next_trans <= (iram_size_t) udd_get_endpoint_size(ep))) {
   81a0c:	2308      	movs	r3, #8
   81a0e:	f8d2 2100 	ldr.w	r2, [r2, #256]	; 0x100
   81a12:	f002 0207 	and.w	r2, r2, #7
   81a16:	4093      	lsls	r3, r2
   81a18:	42ab      	cmp	r3, r5
   81a1a:	d2d4      	bcs.n	819c6 <udd_ep_trans_done+0x15e>
		udd_dma_ctrl |= UDPHS_DMACONTROL_END_BUFFIT | UDPHS_DMACONTROL_CHANN_ENB;
   81a1c:	f047 0721 	orr.w	r7, r7, #33	; 0x21
   81a20:	e763      	b.n	818ea <udd_ep_trans_done+0x82>
   81a22:	bf00      	nop
   81a24:	200036ac 	.word	0x200036ac
   81a28:	400a4300 	.word	0x400a4300
   81a2c:	20000368 	.word	0x20000368
   81a30:	400a4000 	.word	0x400a4000

00081a34 <udd_ctrl_in_sent>:
{
   81a34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81a38:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81a3c:	b672      	cpsid	i
   81a3e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81a42:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   81a44:	f44f 6180 	mov.w	r1, #1024	; 0x400
   81a48:	4d5a      	ldr	r5, [pc, #360]	; (81bb4 <udd_ctrl_in_sent+0x180>)
   81a4a:	4a5b      	ldr	r2, [pc, #364]	; (81bb8 <udd_ctrl_in_sent+0x184>)
   81a4c:	7028      	strb	r0, [r5, #0]
   81a4e:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81a52:	b923      	cbnz	r3, 81a5e <udd_ctrl_in_sent+0x2a>
		cpu_irq_enable();
   81a54:	2301      	movs	r3, #1
   81a56:	702b      	strb	r3, [r5, #0]
   81a58:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81a5c:	b662      	cpsie	i
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   81a5e:	f8df 815c 	ldr.w	r8, [pc, #348]	; 81bbc <udd_ctrl_in_sent+0x188>
   81a62:	f898 3000 	ldrb.w	r3, [r8]
   81a66:	2b03      	cmp	r3, #3
   81a68:	d063      	beq.n	81b32 <udd_ctrl_in_sent+0xfe>
	nb_remain = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   81a6a:	4f55      	ldr	r7, [pc, #340]	; (81bc0 <udd_ctrl_in_sent+0x18c>)
   81a6c:	4e55      	ldr	r6, [pc, #340]	; (81bc4 <udd_ctrl_in_sent+0x190>)
   81a6e:	883a      	ldrh	r2, [r7, #0]
   81a70:	89b4      	ldrh	r4, [r6, #12]
   81a72:	1aa4      	subs	r4, r4, r2
   81a74:	b2a4      	uxth	r4, r4
	if (0 == nb_remain) {
   81a76:	2c00      	cmp	r4, #0
   81a78:	d038      	beq.n	81aec <udd_ctrl_in_sent+0xb8>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81a7a:	4613      	mov	r3, r2
   81a7c:	f8df 9148 	ldr.w	r9, [pc, #328]	; 81bc8 <udd_ctrl_in_sent+0x194>
	if (nb_remain >= USB_DEVICE_EP_CTRL_SIZE) {
   81a80:	2c3f      	cmp	r4, #63	; 0x3f
		b_shortpacket = false;
   81a82:	bf86      	itte	hi
   81a84:	2200      	movhi	r2, #0
		nb_remain = USB_DEVICE_EP_CTRL_SIZE;
   81a86:	2440      	movhi	r4, #64	; 0x40
		b_shortpacket = true;
   81a88:	2201      	movls	r2, #1
   81a8a:	f889 2000 	strb.w	r2, [r9]
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81a8e:	68b2      	ldr	r2, [r6, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81a90:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   81a94:	b672      	cpsid	i
   81a96:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81a9a:	2100      	movs	r1, #0
   81a9c:	7029      	strb	r1, [r5, #0]
	if (Is_udd_out_received(0)) {
   81a9e:	4946      	ldr	r1, [pc, #280]	; (81bb8 <udd_ctrl_in_sent+0x184>)
   81aa0:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   81aa4:	0589      	lsls	r1, r1, #22
   81aa6:	d439      	bmi.n	81b1c <udd_ctrl_in_sent+0xe8>
	for (i = 0; i < nb_remain; i++) {
   81aa8:	b154      	cbz	r4, 81ac0 <udd_ctrl_in_sent+0x8c>
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81aaa:	441a      	add	r2, r3
	ptr_dest = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   81aac:	4b47      	ldr	r3, [pc, #284]	; (81bcc <udd_ctrl_in_sent+0x198>)
		*ptr_dest++ = *ptr_src++;
   81aae:	4618      	mov	r0, r3
   81ab0:	3301      	adds	r3, #1
   81ab2:	f812 cb01 	ldrb.w	ip, [r2], #1
	for (i = 0; i < nb_remain; i++) {
   81ab6:	b2d9      	uxtb	r1, r3
   81ab8:	42a1      	cmp	r1, r4
		*ptr_dest++ = *ptr_src++;
   81aba:	f880 c000 	strb.w	ip, [r0]
	for (i = 0; i < nb_remain; i++) {
   81abe:	d3f6      	bcc.n	81aae <udd_ctrl_in_sent+0x7a>
	udd_ack_in_send(0);
   81ac0:	f44f 6280 	mov.w	r2, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   81ac4:	f44f 6100 	mov.w	r1, #2048	; 0x800
	udd_ctrl_payload_buf_cnt += nb_remain;
   81ac8:	883b      	ldrh	r3, [r7, #0]
   81aca:	441c      	add	r4, r3
	udd_ack_in_send(0);
   81acc:	4b3a      	ldr	r3, [pc, #232]	; (81bb8 <udd_ctrl_in_sent+0x184>)
	udd_ctrl_payload_buf_cnt += nb_remain;
   81ace:	803c      	strh	r4, [r7, #0]
	udd_ack_in_send(0);
   81ad0:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   81ad4:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   81ad8:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81adc:	b926      	cbnz	r6, 81ae8 <udd_ctrl_in_sent+0xb4>
		cpu_irq_enable();
   81ade:	2301      	movs	r3, #1
   81ae0:	702b      	strb	r3, [r5, #0]
   81ae2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81ae6:	b662      	cpsie	i
}
   81ae8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81aec:	4938      	ldr	r1, [pc, #224]	; (81bd0 <udd_ctrl_in_sent+0x19c>)
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81aee:	88f0      	ldrh	r0, [r6, #6]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81af0:	880b      	ldrh	r3, [r1, #0]
   81af2:	4413      	add	r3, r2
   81af4:	b29b      	uxth	r3, r3
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81af6:	4298      	cmp	r0, r3
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   81af8:	800b      	strh	r3, [r1, #0]
		if ((udd_g_ctrlreq.req.wLength == udd_ctrl_prev_payload_buf_cnt)
   81afa:	d042      	beq.n	81b82 <udd_ctrl_in_sent+0x14e>
				|| b_shortpacket) {
   81afc:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 81bc8 <udd_ctrl_in_sent+0x194>
   81b00:	f899 a000 	ldrb.w	sl, [r9]
   81b04:	f1ba 0f00 	cmp.w	sl, #0
   81b08:	d13b      	bne.n	81b82 <udd_ctrl_in_sent+0x14e>
		if ((!udd_g_ctrlreq.over_under_run)
   81b0a:	6973      	ldr	r3, [r6, #20]
   81b0c:	2b00      	cmp	r3, #0
   81b0e:	d035      	beq.n	81b7c <udd_ctrl_in_sent+0x148>
				|| (!udd_g_ctrlreq.over_under_run())) {
   81b10:	4798      	blx	r3
   81b12:	2800      	cmp	r0, #0
   81b14:	d149      	bne.n	81baa <udd_ctrl_in_sent+0x176>
		b_shortpacket = true;
   81b16:	2201      	movs	r2, #1
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81b18:	883b      	ldrh	r3, [r7, #0]
   81b1a:	e7b6      	b.n	81a8a <udd_ctrl_in_sent+0x56>
	if (cpu_irq_is_enabled_flags(flags))
   81b1c:	b926      	cbnz	r6, 81b28 <udd_ctrl_in_sent+0xf4>
		cpu_irq_enable();
   81b1e:	2301      	movs	r3, #1
   81b20:	702b      	strb	r3, [r5, #0]
   81b22:	f3bf 8f5f 	dmb	sy
   81b26:	b662      	cpsie	i
		udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81b28:	2304      	movs	r3, #4
   81b2a:	f888 3000 	strb.w	r3, [r8]
}
   81b2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	if (udd_g_ctrlreq.callback) {
   81b32:	4e24      	ldr	r6, [pc, #144]	; (81bc4 <udd_ctrl_in_sent+0x190>)
   81b34:	6933      	ldr	r3, [r6, #16]
   81b36:	b103      	cbz	r3, 81b3a <udd_ctrl_in_sent+0x106>
		udd_g_ctrlreq.callback();
   81b38:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81b3a:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   81b3e:	b672      	cpsid	i
   81b40:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81b44:	2000      	movs	r0, #0
	udd_disable_in_send_interrupt(0);
   81b46:	f44f 6180 	mov.w	r1, #1024	; 0x400
   81b4a:	4a1b      	ldr	r2, [pc, #108]	; (81bb8 <udd_ctrl_in_sent+0x184>)
   81b4c:	7028      	strb	r0, [r5, #0]
   81b4e:	f8c2 1108 	str.w	r1, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81b52:	b923      	cbnz	r3, 81b5e <udd_ctrl_in_sent+0x12a>
		cpu_irq_enable();
   81b54:	2301      	movs	r3, #1
   81b56:	702b      	strb	r3, [r5, #0]
   81b58:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81b5c:	b662      	cpsie	i
	udd_ack_out_received(0);
   81b5e:	f44f 7100 	mov.w	r1, #512	; 0x200
   81b62:	4a15      	ldr	r2, [pc, #84]	; (81bb8 <udd_ctrl_in_sent+0x184>)
	udd_g_ctrlreq.callback = NULL;
   81b64:	2000      	movs	r0, #0
	udd_ack_out_received(0);
   81b66:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.callback = NULL;
   81b6a:	2100      	movs	r1, #0
	udd_g_ctrlreq.payload_size = 0;
   81b6c:	2300      	movs	r3, #0
	udd_g_ctrlreq.callback = NULL;
   81b6e:	e9c6 0104 	strd	r0, r1, [r6, #16]
	udd_g_ctrlreq.payload_size = 0;
   81b72:	81b3      	strh	r3, [r6, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81b74:	f888 3000 	strb.w	r3, [r8]
}
   81b78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	ptr_src = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   81b7c:	4613      	mov	r3, r2
		b_shortpacket = true;
   81b7e:	2201      	movs	r2, #1
   81b80:	e783      	b.n	81a8a <udd_ctrl_in_sent+0x56>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP;
   81b82:	2304      	movs	r3, #4
   81b84:	f888 3000 	strb.w	r3, [r8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81b88:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   81b8c:	b672      	cpsid	i
   81b8e:	f3bf 8f5f 	dmb	sy
	udd_ack_nak_in(0);
   81b92:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	cpu_irq_disable();
   81b96:	2000      	movs	r0, #0
   81b98:	4b07      	ldr	r3, [pc, #28]	; (81bb8 <udd_ctrl_in_sent+0x184>)
   81b9a:	7028      	strb	r0, [r5, #0]
   81b9c:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_in_interrupt(0);
   81ba0:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81ba4:	2900      	cmp	r1, #0
   81ba6:	d19f      	bne.n	81ae8 <udd_ctrl_in_sent+0xb4>
   81ba8:	e799      	b.n	81ade <udd_ctrl_in_sent+0xaa>
			udd_ctrl_payload_buf_cnt = 0;
   81baa:	803c      	strh	r4, [r7, #0]
			nb_remain = udd_g_ctrlreq.payload_size;
   81bac:	4653      	mov	r3, sl
   81bae:	89b4      	ldrh	r4, [r6, #12]
   81bb0:	e766      	b.n	81a80 <udd_ctrl_in_sent+0x4c>
   81bb2:	bf00      	nop
   81bb4:	20000368 	.word	0x20000368
   81bb8:	400a4000 	.word	0x400a4000
   81bbc:	200036aa 	.word	0x200036aa
   81bc0:	200036a6 	.word	0x200036a6
   81bc4:	200036e0 	.word	0x200036e0
   81bc8:	200036a4 	.word	0x200036a4
   81bcc:	20180000 	.word	0x20180000
   81bd0:	200036a8 	.word	0x200036a8

00081bd4 <UDPHS_Handler>:
{
   81bd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	udd_enable_periph_ck();
   81bd8:	4b85      	ldr	r3, [pc, #532]	; (81df0 <UDPHS_Handler+0x21c>)
   81bda:	201d      	movs	r0, #29
   81bdc:	4798      	blx	r3
	if (!pmc_is_wakeup_clocks_restored() && !Is_udd_suspend()) {
   81bde:	4b85      	ldr	r3, [pc, #532]	; (81df4 <UDPHS_Handler+0x220>)
   81be0:	4798      	blx	r3
   81be2:	b928      	cbnz	r0, 81bf0 <UDPHS_Handler+0x1c>
   81be4:	4b84      	ldr	r3, [pc, #528]	; (81df8 <UDPHS_Handler+0x224>)
   81be6:	695b      	ldr	r3, [r3, #20]
   81be8:	f013 0302 	ands.w	r3, r3, #2
   81bec:	f000 8081 	beq.w	81cf2 <UDPHS_Handler+0x11e>
	if (Is_udd_sof()) {
   81bf0:	4b81      	ldr	r3, [pc, #516]	; (81df8 <UDPHS_Handler+0x224>)
   81bf2:	695a      	ldr	r2, [r3, #20]
   81bf4:	0712      	lsls	r2, r2, #28
   81bf6:	d46d      	bmi.n	81cd4 <UDPHS_Handler+0x100>
	if (Is_udd_msof()) {
   81bf8:	695a      	ldr	r2, [r3, #20]
   81bfa:	0757      	lsls	r7, r2, #29
   81bfc:	d473      	bmi.n	81ce6 <UDPHS_Handler+0x112>
	uint32_t status = udd_get_endpoint_status(0);
   81bfe:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
	if (!Is_udd_endpoint_interrupt(0)) {
   81c02:	6959      	ldr	r1, [r3, #20]
   81c04:	05ce      	lsls	r6, r1, #23
   81c06:	d521      	bpl.n	81c4c <UDPHS_Handler+0x78>
	udd_disable_nak_in_interrupt(0);
   81c08:	f44f 4080 	mov.w	r0, #16384	; 0x4000
	udd_disable_nak_out_interrupt(0);
   81c0c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
	if (Is_udd_endpoint_status_setup_received(status)) {
   81c10:	04d5      	lsls	r5, r2, #19
	udd_disable_nak_in_interrupt(0);
   81c12:	f8c3 0108 	str.w	r0, [r3, #264]	; 0x108
	udd_disable_nak_out_interrupt(0);
   81c16:	f8c3 1108 	str.w	r1, [r3, #264]	; 0x108
	if (Is_udd_endpoint_status_setup_received(status)) {
   81c1a:	f100 80ff 	bmi.w	81e1c <UDPHS_Handler+0x248>
	if (Is_udd_endpoint_status_in_sent(status)
   81c1e:	0554      	lsls	r4, r2, #21
   81c20:	d504      	bpl.n	81c2c <UDPHS_Handler+0x58>
			&& Is_udd_in_send_interrupt_enabled(0)) {
   81c22:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
   81c26:	0558      	lsls	r0, r3, #21
   81c28:	f100 827c 	bmi.w	82124 <UDPHS_Handler+0x550>
	if (Is_udd_endpoint_status_out_received(status)) {
   81c2c:	0591      	lsls	r1, r2, #22
   81c2e:	f100 81a2 	bmi.w	81f76 <UDPHS_Handler+0x3a2>
	if (Is_udd_endpoint_status_stall(status)) {
   81c32:	0493      	lsls	r3, r2, #18
   81c34:	d504      	bpl.n	81c40 <UDPHS_Handler+0x6c>
		udd_ack_stall(0);
   81c36:	f44f 5100 	mov.w	r1, #8192	; 0x2000
   81c3a:	4b6f      	ldr	r3, [pc, #444]	; (81df8 <UDPHS_Handler+0x224>)
   81c3c:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	if (Is_udd_endpoint_status_nak_out(status)) {
   81c40:	0417      	lsls	r7, r2, #16
   81c42:	f100 8185 	bmi.w	81f50 <UDPHS_Handler+0x37c>
	if (Is_udd_endpoint_status_nak_in(status)) {
   81c46:	0455      	lsls	r5, r2, #17
   81c48:	f100 8270 	bmi.w	8212c <UDPHS_Handler+0x558>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
		// Get job corresponding at endpoint
		ptr_job = &udd_ep_job[ep - 1];

		// Check DMA event
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81c4c:	4b6a      	ldr	r3, [pc, #424]	; (81df8 <UDPHS_Handler+0x224>)
   81c4e:	691a      	ldr	r2, [r3, #16]
   81c50:	0194      	lsls	r4, r2, #6
   81c52:	d503      	bpl.n	81c5c <UDPHS_Handler+0x88>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81c54:	695b      	ldr	r3, [r3, #20]
   81c56:	0198      	lsls	r0, r3, #6
   81c58:	f100 8354 	bmi.w	82304 <UDPHS_Handler+0x730>
			}
			udd_ep_trans_done(ep);
			return true;
		}
		// Check empty bank interrupt event
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81c5c:	4b66      	ldr	r3, [pc, #408]	; (81df8 <UDPHS_Handler+0x224>)
   81c5e:	691a      	ldr	r2, [r3, #16]
   81c60:	0591      	lsls	r1, r2, #22
   81c62:	d556      	bpl.n	81d12 <UDPHS_Handler+0x13e>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81c64:	f8d3 212c 	ldr.w	r2, [r3, #300]	; 0x12c
   81c68:	0512      	lsls	r2, r2, #20
   81c6a:	d54c      	bpl.n	81d06 <UDPHS_Handler+0x132>
					&& !Is_udd_tx_pkt_ready(ep)) {
   81c6c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
   81c70:	f413 6300 	ands.w	r3, r3, #2048	; 0x800
   81c74:	d147      	bne.n	81d06 <UDPHS_Handler+0x132>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   81c76:	2201      	movs	r2, #1
		ptr_job = &udd_ep_job[ep - 1];
   81c78:	4611      	mov	r1, r2
				udd_disable_tx_pkt_ready_interrupt(ep);
   81c7a:	f44f 6c00 	mov.w	ip, #2048	; 0x800
   81c7e:	f8df e178 	ldr.w	lr, [pc, #376]	; 81df8 <UDPHS_Handler+0x224>
	if (ptr_job->busy == false) {
   81c82:	4c5e      	ldr	r4, [pc, #376]	; (81dfc <UDPHS_Handler+0x228>)
				udd_disable_tx_pkt_ready_interrupt(ep);
   81c84:	eb0e 1641 	add.w	r6, lr, r1, lsl #5
	if (ptr_job->busy == false) {
   81c88:	eb03 0043 	add.w	r0, r3, r3, lsl #1
   81c8c:	eb04 07c0 	add.w	r7, r4, r0, lsl #3
				udd_disable_tx_pkt_ready_interrupt(ep);
   81c90:	f8c6 c108 	str.w	ip, [r6, #264]	; 0x108
				// One bank is free then send a ZLP
				udd_raise_tx_pkt_ready(ep);
   81c94:	f8c6 c114 	str.w	ip, [r6, #276]	; 0x114
	if (ptr_job->busy == false) {
   81c98:	7d3e      	ldrb	r6, [r7, #20]
   81c9a:	00c0      	lsls	r0, r0, #3
   81c9c:	07f6      	lsls	r6, r6, #31
   81c9e:	ea4f 0543 	mov.w	r5, r3, lsl #1
   81ca2:	d52b      	bpl.n	81cfc <UDPHS_Handler+0x128>
	if (NULL == ptr_job->call_trans) {
   81ca4:	5826      	ldr	r6, [r4, r0]
	ptr_job->busy = false;
   81ca6:	7d38      	ldrb	r0, [r7, #20]
   81ca8:	f36f 0000 	bfc	r0, #0, #1
   81cac:	7538      	strb	r0, [r7, #20]
	if (NULL == ptr_job->call_trans) {
   81cae:	b32e      	cbz	r6, 81cfc <UDPHS_Handler+0x128>
	if (Is_udd_endpoint_in(ep_num)) {
   81cb0:	3108      	adds	r1, #8
   81cb2:	0149      	lsls	r1, r1, #5
   81cb4:	f85e 1001 	ldr.w	r1, [lr, r1]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81cb8:	442b      	add	r3, r5
	if (Is_udd_endpoint_in(ep_num)) {
   81cba:	070f      	lsls	r7, r1, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81cbc:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
   81cc0:	68a1      	ldr	r1, [r4, #8]
   81cc2:	4633      	mov	r3, r6
}
   81cc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81cc8:	f04f 0000 	mov.w	r0, #0
		ep_num |= USB_EP_DIR_IN;
   81ccc:	bf48      	it	mi
   81cce:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   81cd2:	4718      	bx	r3
		udd_ack_sof();
   81cd4:	2208      	movs	r2, #8
   81cd6:	619a      	str	r2, [r3, #24]
		if (Is_udd_full_speed_mode()) {
   81cd8:	695b      	ldr	r3, [r3, #20]
   81cda:	07db      	lsls	r3, r3, #31
   81cdc:	d510      	bpl.n	81d00 <UDPHS_Handler+0x12c>
}
   81cde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_SOF_EVENT();
   81ce2:	4b47      	ldr	r3, [pc, #284]	; (81e00 <UDPHS_Handler+0x22c>)
   81ce4:	4718      	bx	r3
		udd_ack_msof();
   81ce6:	2104      	movs	r1, #4
   81ce8:	6199      	str	r1, [r3, #24]
		udc_sof_notify();
   81cea:	4a46      	ldr	r2, [pc, #280]	; (81e04 <UDPHS_Handler+0x230>)
}
   81cec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udc_sof_notify();
   81cf0:	4710      	bx	r2
   81cf2:	b672      	cpsid	i
   81cf4:	f3bf 8f5f 	dmb	sy
		cpu_irq_disable();
   81cf8:	4a43      	ldr	r2, [pc, #268]	; (81e08 <UDPHS_Handler+0x234>)
   81cfa:	7013      	strb	r3, [r2, #0]
}
   81cfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			udc_sof_notify();
   81d00:	4b40      	ldr	r3, [pc, #256]	; (81e04 <UDPHS_Handler+0x230>)
   81d02:	4798      	blx	r3
   81d04:	e7eb      	b.n	81cde <UDPHS_Handler+0x10a>
				udd_ep_finish_job(ptr_job, false, ep);
				return true;
			}
			if (Is_udd_bank_interrupt_enabled(ep)
   81d06:	4b3c      	ldr	r3, [pc, #240]	; (81df8 <UDPHS_Handler+0x224>)
   81d08:	f8d3 212c 	ldr.w	r2, [r3, #300]	; 0x12c
   81d0c:	0357      	lsls	r7, r2, #13
   81d0e:	f100 80f3 	bmi.w	81ef8 <UDPHS_Handler+0x324>
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   81d12:	4b39      	ldr	r3, [pc, #228]	; (81df8 <UDPHS_Handler+0x224>)
   81d14:	691a      	ldr	r2, [r3, #16]
   81d16:	0156      	lsls	r6, r2, #5
   81d18:	d503      	bpl.n	81d22 <UDPHS_Handler+0x14e>
				&& Is_udd_endpoint_dma_interrupt(ep)) {
   81d1a:	695b      	ldr	r3, [r3, #20]
   81d1c:	015d      	lsls	r5, r3, #5
   81d1e:	f100 8311 	bmi.w	82344 <UDPHS_Handler+0x770>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81d22:	4b35      	ldr	r3, [pc, #212]	; (81df8 <UDPHS_Handler+0x224>)
   81d24:	691a      	ldr	r2, [r3, #16]
   81d26:	0551      	lsls	r1, r2, #21
   81d28:	d51a      	bpl.n	81d60 <UDPHS_Handler+0x18c>
			if (Is_udd_tx_pkt_ready_interrupt_enabled(ep)
   81d2a:	f8d3 214c 	ldr.w	r2, [r3, #332]	; 0x14c
   81d2e:	0512      	lsls	r2, r2, #20
   81d30:	d507      	bpl.n	81d42 <UDPHS_Handler+0x16e>
					&& !Is_udd_tx_pkt_ready(ep)) {
   81d32:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
   81d36:	051f      	lsls	r7, r3, #20
   81d38:	d403      	bmi.n	81d42 <UDPHS_Handler+0x16e>
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   81d3a:	2202      	movs	r2, #2
		ptr_job = &udd_ep_job[ep - 1];
   81d3c:	2301      	movs	r3, #1
   81d3e:	4611      	mov	r1, r2
   81d40:	e79b      	b.n	81c7a <UDPHS_Handler+0xa6>
			if (Is_udd_bank_interrupt_enabled(ep)
   81d42:	4b2d      	ldr	r3, [pc, #180]	; (81df8 <UDPHS_Handler+0x224>)
   81d44:	f8d3 214c 	ldr.w	r2, [r3, #332]	; 0x14c
   81d48:	0356      	lsls	r6, r2, #13
   81d4a:	d509      	bpl.n	81d60 <UDPHS_Handler+0x18c>
					&& (0 == udd_nb_busy_bank(ep))) {
   81d4c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
   81d50:	f413 2f40 	tst.w	r3, #786432	; 0xc0000
   81d54:	d104      	bne.n	81d60 <UDPHS_Handler+0x18c>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81d56:	f44f 6680 	mov.w	r6, #1024	; 0x400
		ptr_job = &udd_ep_job[ep - 1];
   81d5a:	2201      	movs	r2, #1
   81d5c:	2302      	movs	r3, #2
   81d5e:	e0d6      	b.n	81f0e <UDPHS_Handler+0x33a>
	if (Is_udd_reset()) {
   81d60:	4925      	ldr	r1, [pc, #148]	; (81df8 <UDPHS_Handler+0x224>)
   81d62:	694c      	ldr	r4, [r1, #20]
   81d64:	f014 0410 	ands.w	r4, r4, #16
   81d68:	f040 8154 	bne.w	82014 <UDPHS_Handler+0x440>
	if (Is_udd_suspend_interrupt_enabled() && Is_udd_suspend()) {
   81d6c:	690b      	ldr	r3, [r1, #16]
   81d6e:	0798      	lsls	r0, r3, #30
   81d70:	d51b      	bpl.n	81daa <UDPHS_Handler+0x1d6>
   81d72:	694b      	ldr	r3, [r1, #20]
   81d74:	079a      	lsls	r2, r3, #30
   81d76:	d518      	bpl.n	81daa <UDPHS_Handler+0x1d6>
		udd_ack_wake_up();
   81d78:	2320      	movs	r3, #32
		udd_ack_suspend();
   81d7a:	2502      	movs	r5, #2
		udd_ack_wake_up();
   81d7c:	618b      	str	r3, [r1, #24]
		udd_disable_suspend_interrupt();
   81d7e:	690b      	ldr	r3, [r1, #16]
		udd_disable_periph_ck();
   81d80:	4a22      	ldr	r2, [pc, #136]	; (81e0c <UDPHS_Handler+0x238>)
		udd_disable_suspend_interrupt();
   81d82:	f023 0302 	bic.w	r3, r3, #2
   81d86:	610b      	str	r3, [r1, #16]
		udd_enable_wake_up_interrupt();
   81d88:	690b      	ldr	r3, [r1, #16]
		udd_disable_periph_ck();
   81d8a:	201d      	movs	r0, #29
		udd_enable_wake_up_interrupt();
   81d8c:	f043 0320 	orr.w	r3, r3, #32
   81d90:	610b      	str	r3, [r1, #16]
		udd_ack_suspend();
   81d92:	618d      	str	r5, [r1, #24]
		udd_disable_periph_ck();
   81d94:	4790      	blx	r2
		UDC_SUSPEND_EVENT();
   81d96:	4b1e      	ldr	r3, [pc, #120]	; (81e10 <UDPHS_Handler+0x23c>)
   81d98:	4798      	blx	r3
	if (!b_idle && udd_b_idle) {
   81d9a:	4a1e      	ldr	r2, [pc, #120]	; (81e14 <UDPHS_Handler+0x240>)
   81d9c:	7813      	ldrb	r3, [r2, #0]
   81d9e:	2b00      	cmp	r3, #0
   81da0:	f040 8285 	bne.w	822ae <UDPHS_Handler+0x6da>
	udd_b_idle = b_idle;
   81da4:	2300      	movs	r3, #0
   81da6:	7013      	strb	r3, [r2, #0]
		goto udd_interrupt_end;
   81da8:	e7a8      	b.n	81cfc <UDPHS_Handler+0x128>
	if (Is_udd_wake_up()) {
   81daa:	4b13      	ldr	r3, [pc, #76]	; (81df8 <UDPHS_Handler+0x224>)
   81dac:	695b      	ldr	r3, [r3, #20]
   81dae:	069b      	lsls	r3, r3, #26
   81db0:	d5a4      	bpl.n	81cfc <UDPHS_Handler+0x128>
	if (b_idle && !udd_b_idle) {
   81db2:	4a18      	ldr	r2, [pc, #96]	; (81e14 <UDPHS_Handler+0x240>)
   81db4:	7813      	ldrb	r3, [r2, #0]
   81db6:	2b00      	cmp	r3, #0
   81db8:	f000 820c 	beq.w	821d4 <UDPHS_Handler+0x600>
		udd_ack_suspend();
   81dbc:	2402      	movs	r4, #2
	udd_b_idle = b_idle;
   81dbe:	2501      	movs	r5, #1
		udd_ack_wake_up();
   81dc0:	2020      	movs	r0, #32
		udd_ack_suspend();
   81dc2:	4b0d      	ldr	r3, [pc, #52]	; (81df8 <UDPHS_Handler+0x224>)
	udd_b_idle = b_idle;
   81dc4:	7015      	strb	r5, [r2, #0]
		udd_ack_suspend();
   81dc6:	619c      	str	r4, [r3, #24]
		udd_ack_wake_up();
   81dc8:	6198      	str	r0, [r3, #24]
		udd_disable_wake_up_interrupt();
   81dca:	691a      	ldr	r2, [r3, #16]
		UDC_RESUME_EVENT();
   81dcc:	4912      	ldr	r1, [pc, #72]	; (81e18 <UDPHS_Handler+0x244>)
		udd_disable_wake_up_interrupt();
   81dce:	f022 0220 	bic.w	r2, r2, #32
   81dd2:	611a      	str	r2, [r3, #16]
		udd_enable_suspend_interrupt();
   81dd4:	691a      	ldr	r2, [r3, #16]
   81dd6:	4322      	orrs	r2, r4
   81dd8:	611a      	str	r2, [r3, #16]
		udd_enable_sof_interrupt();
   81dda:	691a      	ldr	r2, [r3, #16]
   81ddc:	f042 0208 	orr.w	r2, r2, #8
   81de0:	611a      	str	r2, [r3, #16]
		udd_enable_msof_interrupt();
   81de2:	691a      	ldr	r2, [r3, #16]
   81de4:	f042 0204 	orr.w	r2, r2, #4
   81de8:	611a      	str	r2, [r3, #16]
}
   81dea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		UDC_RESUME_EVENT();
   81dee:	4708      	bx	r1
   81df0:	0008314d 	.word	0x0008314d
   81df4:	000834ad 	.word	0x000834ad
   81df8:	400a4000 	.word	0x400a4000
   81dfc:	200036ac 	.word	0x200036ac
   81e00:	00080975 	.word	0x00080975
   81e04:	00080de5 	.word	0x00080de5
   81e08:	20000368 	.word	0x20000368
   81e0c:	00083171 	.word	0x00083171
   81e10:	00080965 	.word	0x00080965
   81e14:	200036a5 	.word	0x200036a5
   81e18:	0008096d 	.word	0x0008096d
	if (UDD_EPCTRL_SETUP != udd_ep_control_state) {
   81e1c:	4c74      	ldr	r4, [pc, #464]	; (81ff0 <UDPHS_Handler+0x41c>)
   81e1e:	7823      	ldrb	r3, [r4, #0]
   81e20:	b313      	cbz	r3, 81e68 <UDPHS_Handler+0x294>
	if (udd_g_ctrlreq.callback) {
   81e22:	4f74      	ldr	r7, [pc, #464]	; (81ff4 <UDPHS_Handler+0x420>)
   81e24:	693b      	ldr	r3, [r7, #16]
   81e26:	b103      	cbz	r3, 81e2a <UDPHS_Handler+0x256>
		udd_g_ctrlreq.callback();
   81e28:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81e2a:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   81e2e:	b672      	cpsid	i
   81e30:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81e34:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   81e36:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81e3a:	4b6f      	ldr	r3, [pc, #444]	; (81ff8 <UDPHS_Handler+0x424>)
   81e3c:	7019      	strb	r1, [r3, #0]
   81e3e:	496f      	ldr	r1, [pc, #444]	; (81ffc <UDPHS_Handler+0x428>)
   81e40:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81e44:	b922      	cbnz	r2, 81e50 <UDPHS_Handler+0x27c>
		cpu_irq_enable();
   81e46:	2201      	movs	r2, #1
   81e48:	701a      	strb	r2, [r3, #0]
   81e4a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81e4e:	b662      	cpsie	i
	udd_ack_out_received(0);
   81e50:	f44f 7200 	mov.w	r2, #512	; 0x200
   81e54:	4b69      	ldr	r3, [pc, #420]	; (81ffc <UDPHS_Handler+0x428>)
	udd_g_ctrlreq.callback = NULL;
   81e56:	2000      	movs	r0, #0
   81e58:	2100      	movs	r1, #0
	udd_ack_out_received(0);
   81e5a:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_g_ctrlreq.payload_size = 0;
   81e5e:	2300      	movs	r3, #0
	udd_g_ctrlreq.callback = NULL;
   81e60:	e9c7 0104 	strd	r0, r1, [r7, #16]
	udd_g_ctrlreq.payload_size = 0;
   81e64:	81bb      	strh	r3, [r7, #12]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81e66:	7023      	strb	r3, [r4, #0]
	if (8 != udd_byte_count(0)) {
   81e68:	4e64      	ldr	r6, [pc, #400]	; (81ffc <UDPHS_Handler+0x428>)
   81e6a:	f8d6 311c 	ldr.w	r3, [r6, #284]	; 0x11c
   81e6e:	f3c3 530a 	ubfx	r3, r3, #20, #11
   81e72:	2b08      	cmp	r3, #8
   81e74:	f040 80b1 	bne.w	81fda <UDPHS_Handler+0x406>
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   81e78:	4b61      	ldr	r3, [pc, #388]	; (82000 <UDPHS_Handler+0x42c>)
   81e7a:	4d5e      	ldr	r5, [pc, #376]	; (81ff4 <UDPHS_Handler+0x420>)
   81e7c:	781a      	ldrb	r2, [r3, #0]
   81e7e:	702a      	strb	r2, [r5, #0]
   81e80:	785a      	ldrb	r2, [r3, #1]
   81e82:	706a      	strb	r2, [r5, #1]
   81e84:	789a      	ldrb	r2, [r3, #2]
   81e86:	70aa      	strb	r2, [r5, #2]
   81e88:	78da      	ldrb	r2, [r3, #3]
   81e8a:	70ea      	strb	r2, [r5, #3]
   81e8c:	791a      	ldrb	r2, [r3, #4]
   81e8e:	712a      	strb	r2, [r5, #4]
   81e90:	795a      	ldrb	r2, [r3, #5]
   81e92:	716a      	strb	r2, [r5, #5]
   81e94:	7999      	ldrb	r1, [r3, #6]
   81e96:	79da      	ldrb	r2, [r3, #7]
	if (udc_process_setup() == false) {
   81e98:	4b5a      	ldr	r3, [pc, #360]	; (82004 <UDPHS_Handler+0x430>)
		((uint8_t *) & udd_g_ctrlreq.req)[i] = *ptr++;
   81e9a:	71a9      	strb	r1, [r5, #6]
   81e9c:	71ea      	strb	r2, [r5, #7]
	if (udc_process_setup() == false) {
   81e9e:	4798      	blx	r3
   81ea0:	2800      	cmp	r0, #0
   81ea2:	f000 809a 	beq.w	81fda <UDPHS_Handler+0x406>
	udd_ack_setup_received(0);
   81ea6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   81eaa:	f8c6 3118 	str.w	r3, [r6, #280]	; 0x118
	if (Udd_setup_is_in()) {
   81eae:	f995 3000 	ldrsb.w	r3, [r5]
   81eb2:	2b00      	cmp	r3, #0
   81eb4:	f2c0 81f0 	blt.w	82298 <UDPHS_Handler+0x6c4>
		if (0 == udd_g_ctrlreq.req.wLength) {
   81eb8:	88eb      	ldrh	r3, [r5, #6]
   81eba:	2b00      	cmp	r3, #0
   81ebc:	f000 8247 	beq.w	8234e <UDPHS_Handler+0x77a>
		udd_ctrl_prev_payload_buf_cnt = 0;
   81ec0:	2300      	movs	r3, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81ec2:	2001      	movs	r0, #1
		udd_ack_nak_in(0);
   81ec4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
		udd_ctrl_prev_payload_buf_cnt = 0;
   81ec8:	494f      	ldr	r1, [pc, #316]	; (82008 <UDPHS_Handler+0x434>)
		udd_ep_control_state = UDD_EPCTRL_DATA_OUT;
   81eca:	7020      	strb	r0, [r4, #0]
		udd_ctrl_prev_payload_buf_cnt = 0;
   81ecc:	800b      	strh	r3, [r1, #0]
		udd_ctrl_payload_buf_cnt = 0;
   81ece:	494f      	ldr	r1, [pc, #316]	; (8200c <UDPHS_Handler+0x438>)
   81ed0:	800b      	strh	r3, [r1, #0]
		udd_ack_nak_in(0);
   81ed2:	f8c6 2118 	str.w	r2, [r6, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81ed6:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   81eda:	b672      	cpsid	i
   81edc:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81ee0:	4945      	ldr	r1, [pc, #276]	; (81ff8 <UDPHS_Handler+0x424>)
   81ee2:	700b      	strb	r3, [r1, #0]
		udd_enable_nak_in_interrupt(0);
   81ee4:	f8c6 2104 	str.w	r2, [r6, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   81ee8:	2c00      	cmp	r4, #0
   81eea:	f47f af07 	bne.w	81cfc <UDPHS_Handler+0x128>
		cpu_irq_enable();
   81eee:	7008      	strb	r0, [r1, #0]
   81ef0:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81ef4:	b662      	cpsie	i
   81ef6:	e701      	b.n	81cfc <UDPHS_Handler+0x128>
					&& (0 == udd_nb_busy_bank(ep))) {
   81ef8:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
   81efc:	f413 2f40 	tst.w	r3, #786432	; 0xc0000
   81f00:	f3c3 4281 	ubfx	r2, r3, #18, #2
   81f04:	f47f af05 	bne.w	81d12 <UDPHS_Handler+0x13e>
		if (Is_udd_endpoint_interrupt_enabled(ep)) {
   81f08:	f44f 7600 	mov.w	r6, #512	; 0x200
		ptr_job = &udd_ep_job[ep - 1];
   81f0c:	2301      	movs	r3, #1
				// End of background transfer on IN endpoint
				udd_disable_bank_interrupt(ep);
   81f0e:	f44f 2080 	mov.w	r0, #262144	; 0x40000

				Assert(ptr_job->stall_requested);
				// A stall has been requested during background transfer
				ptr_job->stall_requested = false;
				udd_disable_endpoint_bank_autoswitch(ep);
				udd_enable_stall_handshake(ep);
   81f12:	2520      	movs	r5, #32
				udd_reset_data_toggle(ep);
   81f14:	2440      	movs	r4, #64	; 0x40
				udd_disable_bank_interrupt(ep);
   81f16:	4939      	ldr	r1, [pc, #228]	; (81ffc <UDPHS_Handler+0x428>)
				ptr_job->stall_requested = false;
   81f18:	eb02 0242 	add.w	r2, r2, r2, lsl #1
				udd_disable_bank_interrupt(ep);
   81f1c:	eb01 1343 	add.w	r3, r1, r3, lsl #5
   81f20:	f8c3 0108 	str.w	r0, [r3, #264]	; 0x108
				udd_disable_endpoint_interrupt(ep);
   81f24:	6908      	ldr	r0, [r1, #16]
   81f26:	ea20 0006 	bic.w	r0, r0, r6
   81f2a:	6108      	str	r0, [r1, #16]
				ptr_job->stall_requested = false;
   81f2c:	4938      	ldr	r1, [pc, #224]	; (82010 <UDPHS_Handler+0x43c>)
   81f2e:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   81f32:	7d11      	ldrb	r1, [r2, #20]
   81f34:	f36f 0182 	bfc	r1, #2, #1
   81f38:	7511      	strb	r1, [r2, #20]
				udd_disable_endpoint_bank_autoswitch(ep);
   81f3a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   81f3e:	f022 0202 	bic.w	r2, r2, #2
   81f42:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
				udd_enable_stall_handshake(ep);
   81f46:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
				udd_reset_data_toggle(ep);
   81f4a:	f8c3 4118 	str.w	r4, [r3, #280]	; 0x118
				//dbg_print("exHalt%x ", ep);
				return true;
   81f4e:	e6d5      	b.n	81cfc <UDPHS_Handler+0x128>
		udd_ack_nak_out(0);
   81f50:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   81f54:	4b29      	ldr	r3, [pc, #164]	; (81ffc <UDPHS_Handler+0x428>)
   81f56:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	if (Is_udd_in_send(0))
   81f5a:	f8d3 211c 	ldr.w	r2, [r3, #284]	; 0x11c
   81f5e:	0556      	lsls	r6, r2, #21
   81f60:	f53f aecc 	bmi.w	81cfc <UDPHS_Handler+0x128>
	if (UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP == udd_ep_control_state) {
   81f64:	4a22      	ldr	r2, [pc, #136]	; (81ff0 <UDPHS_Handler+0x41c>)
   81f66:	7812      	ldrb	r2, [r2, #0]
   81f68:	2a03      	cmp	r2, #3
   81f6a:	f47f aec7 	bne.w	81cfc <UDPHS_Handler+0x128>
		udd_enable_stall_handshake(0);
   81f6e:	2220      	movs	r2, #32
   81f70:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
   81f74:	e6c2      	b.n	81cfc <UDPHS_Handler+0x128>
	if (UDD_EPCTRL_DATA_OUT != udd_ep_control_state) {
   81f76:	4c1e      	ldr	r4, [pc, #120]	; (81ff0 <UDPHS_Handler+0x41c>)
   81f78:	7823      	ldrb	r3, [r4, #0]
   81f7a:	2b01      	cmp	r3, #1
   81f7c:	f000 80ed 	beq.w	8215a <UDPHS_Handler+0x586>
		if ((UDD_EPCTRL_DATA_IN == udd_ep_control_state)
   81f80:	2b02      	cmp	r3, #2
   81f82:	f000 8120 	beq.w	821c6 <UDPHS_Handler+0x5f2>
				|| (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP ==
   81f86:	2b04      	cmp	r3, #4
   81f88:	f000 811d 	beq.w	821c6 <UDPHS_Handler+0x5f2>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81f8c:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   81f8e:	2220      	movs	r2, #32
   81f90:	4b1a      	ldr	r3, [pc, #104]	; (81ffc <UDPHS_Handler+0x428>)
   81f92:	4f18      	ldr	r7, [pc, #96]	; (81ff4 <UDPHS_Handler+0x420>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81f94:	7021      	strb	r1, [r4, #0]
	udd_enable_stall_handshake(0);
   81f96:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   81f9a:	f3ef 8210 	mrs	r2, PRIMASK
  __ASM volatile ("cpsid i");
   81f9e:	b672      	cpsid	i
   81fa0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   81fa4:	2100      	movs	r1, #0
	udd_disable_in_send_interrupt(0);
   81fa6:	f44f 6080 	mov.w	r0, #1024	; 0x400
   81faa:	4b13      	ldr	r3, [pc, #76]	; (81ff8 <UDPHS_Handler+0x424>)
   81fac:	7019      	strb	r1, [r3, #0]
   81fae:	4913      	ldr	r1, [pc, #76]	; (81ffc <UDPHS_Handler+0x428>)
   81fb0:	f8c1 0108 	str.w	r0, [r1, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   81fb4:	b922      	cbnz	r2, 81fc0 <UDPHS_Handler+0x3ec>
		cpu_irq_enable();
   81fb6:	2201      	movs	r2, #1
   81fb8:	701a      	strb	r2, [r3, #0]
   81fba:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   81fbe:	b662      	cpsie	i
	udd_ack_out_received(0);
   81fc0:	f44f 7100 	mov.w	r1, #512	; 0x200
   81fc4:	4a0d      	ldr	r2, [pc, #52]	; (81ffc <UDPHS_Handler+0x428>)
	udd_g_ctrlreq.payload_size = 0;
   81fc6:	2300      	movs	r3, #0
	udd_ack_out_received(0);
   81fc8:	f8c2 1118 	str.w	r1, [r2, #280]	; 0x118
	udd_g_ctrlreq.callback = NULL;
   81fcc:	2000      	movs	r0, #0
   81fce:	2100      	movs	r1, #0
	udd_g_ctrlreq.payload_size = 0;
   81fd0:	81bb      	strh	r3, [r7, #12]
	udd_g_ctrlreq.callback = NULL;
   81fd2:	e9c7 0104 	strd	r0, r1, [r7, #16]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   81fd6:	7023      	strb	r3, [r4, #0]
   81fd8:	e690      	b.n	81cfc <UDPHS_Handler+0x128>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81fda:	2105      	movs	r1, #5
	udd_enable_stall_handshake(0);
   81fdc:	2220      	movs	r2, #32
		udd_ack_setup_received(0);
   81fde:	f44f 5380 	mov.w	r3, #4096	; 0x1000
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   81fe2:	7021      	strb	r1, [r4, #0]
	udd_enable_stall_handshake(0);
   81fe4:	f8c6 2114 	str.w	r2, [r6, #276]	; 0x114
		udd_ack_setup_received(0);
   81fe8:	f8c6 3118 	str.w	r3, [r6, #280]	; 0x118
		return;
   81fec:	e686      	b.n	81cfc <UDPHS_Handler+0x128>
   81fee:	bf00      	nop
   81ff0:	200036aa 	.word	0x200036aa
   81ff4:	200036e0 	.word	0x200036e0
   81ff8:	20000368 	.word	0x20000368
   81ffc:	400a4000 	.word	0x400a4000
   82000:	20180000 	.word	0x20180000
   82004:	00080e35 	.word	0x00080e35
   82008:	200036a8 	.word	0x200036a8
   8200c:	200036a6 	.word	0x200036a6
   82010:	200036ac 	.word	0x200036ac
		udd_ack_reset();
   82014:	2310      	movs	r3, #16
	if (ptr_job->busy == false) {
   82016:	4cb0      	ldr	r4, [pc, #704]	; (822d8 <UDPHS_Handler+0x704>)
		udd_ack_reset();
   82018:	618b      	str	r3, [r1, #24]
	if (ptr_job->busy == false) {
   8201a:	7d23      	ldrb	r3, [r4, #20]
   8201c:	f013 0201 	ands.w	r2, r3, #1
   82020:	d00d      	beq.n	8203e <UDPHS_Handler+0x46a>
	if (NULL == ptr_job->call_trans) {
   82022:	6825      	ldr	r5, [r4, #0]
	ptr_job->busy = false;
   82024:	f36f 0300 	bfc	r3, #0, #1
   82028:	7523      	strb	r3, [r4, #20]
	if (NULL == ptr_job->call_trans) {
   8202a:	b145      	cbz	r5, 8203e <UDPHS_Handler+0x46a>
	if (Is_udd_endpoint_in(ep_num)) {
   8202c:	f8d1 3120 	ldr.w	r3, [r1, #288]	; 0x120
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82030:	2001      	movs	r0, #1
		ep_num |= USB_EP_DIR_IN;
   82032:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82036:	bf18      	it	ne
   82038:	2281      	movne	r2, #129	; 0x81
   8203a:	68a1      	ldr	r1, [r4, #8]
   8203c:	47a8      	blx	r5
	if (ptr_job->busy == false) {
   8203e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
   82042:	07dd      	lsls	r5, r3, #31
   82044:	d510      	bpl.n	82068 <UDPHS_Handler+0x494>
	if (NULL == ptr_job->call_trans) {
   82046:	69a5      	ldr	r5, [r4, #24]
	ptr_job->busy = false;
   82048:	f36f 0300 	bfc	r3, #0, #1
   8204c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
	if (NULL == ptr_job->call_trans) {
   82050:	b155      	cbz	r5, 82068 <UDPHS_Handler+0x494>
	if (Is_udd_endpoint_in(ep_num)) {
   82052:	4ba2      	ldr	r3, [pc, #648]	; (822dc <UDPHS_Handler+0x708>)
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82054:	2001      	movs	r0, #1
	if (Is_udd_endpoint_in(ep_num)) {
   82056:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   8205a:	6a21      	ldr	r1, [r4, #32]
		udd_ep_finish_job(&udd_ep_job[i], true, i + 1);
   8205c:	f013 0f08 	tst.w	r3, #8
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82060:	bf14      	ite	ne
   82062:	2282      	movne	r2, #130	; 0x82
   82064:	2202      	moveq	r2, #2
   82066:	47a8      	blx	r5
		udc_reset();
   82068:	4b9d      	ldr	r3, [pc, #628]	; (822e0 <UDPHS_Handler+0x70c>)
   8206a:	4798      	blx	r3
	udd_enable_endpoint(0);
   8206c:	2001      	movs	r0, #1
	udd_configure_address(0);
   8206e:	4b9b      	ldr	r3, [pc, #620]	; (822dc <UDPHS_Handler+0x708>)
   82070:	681a      	ldr	r2, [r3, #0]
   82072:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   82076:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   82078:	681a      	ldr	r2, [r3, #0]
   8207a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8207e:	601a      	str	r2, [r3, #0]
	udd_configure_endpoint(0,
   82080:	f8d3 2100 	ldr.w	r2, [r3, #256]	; 0x100
   82084:	f422 727f 	bic.w	r2, r2, #1020	; 0x3fc
   82088:	f022 0203 	bic.w	r2, r2, #3
   8208c:	f042 0243 	orr.w	r2, r2, #67	; 0x43
   82090:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
	udd_enable_endpoint(0);
   82094:	f8c3 0104 	str.w	r0, [r3, #260]	; 0x104
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82098:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   8209c:	b672      	cpsid	i
   8209e:	f3bf 8f5f 	dmb	sy
	udd_enable_setup_received_interrupt(0);
   820a2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	cpu_irq_disable();
   820a6:	2500      	movs	r5, #0
   820a8:	498e      	ldr	r1, [pc, #568]	; (822e4 <UDPHS_Handler+0x710>)
   820aa:	700d      	strb	r5, [r1, #0]
   820ac:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_out_received_interrupt(0);
   820b0:	f44f 7200 	mov.w	r2, #512	; 0x200
   820b4:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	udd_enable_endpoint_interrupt(0);
   820b8:	691a      	ldr	r2, [r3, #16]
   820ba:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   820be:	611a      	str	r2, [r3, #16]
	if (cpu_irq_is_enabled_flags(flags))
   820c0:	b91c      	cbnz	r4, 820ca <UDPHS_Handler+0x4f6>
		cpu_irq_enable();
   820c2:	7008      	strb	r0, [r1, #0]
   820c4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   820c8:	b662      	cpsie	i
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   820ca:	f3ef 8310 	mrs	r3, PRIMASK
  __ASM volatile ("cpsid i");
   820ce:	b672      	cpsid	i
   820d0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   820d4:	2400      	movs	r4, #0
	udd_disable_in_send_interrupt(0);
   820d6:	f44f 6080 	mov.w	r0, #1024	; 0x400
   820da:	4a80      	ldr	r2, [pc, #512]	; (822dc <UDPHS_Handler+0x708>)
   820dc:	700c      	strb	r4, [r1, #0]
   820de:	f8c2 0108 	str.w	r0, [r2, #264]	; 0x108
	if (cpu_irq_is_enabled_flags(flags))
   820e2:	b923      	cbnz	r3, 820ee <UDPHS_Handler+0x51a>
		cpu_irq_enable();
   820e4:	2301      	movs	r3, #1
   820e6:	700b      	strb	r3, [r1, #0]
   820e8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   820ec:	b662      	cpsie	i
	udd_g_ctrlreq.callback = NULL;
   820ee:	2600      	movs	r6, #0
   820f0:	2700      	movs	r7, #0
	udd_g_ctrlreq.payload_size = 0;
   820f2:	2100      	movs	r1, #0
	udd_ack_out_received(0);
   820f4:	f44f 7400 	mov.w	r4, #512	; 0x200
	udd_g_ctrlreq.callback = NULL;
   820f8:	4a7b      	ldr	r2, [pc, #492]	; (822e8 <UDPHS_Handler+0x714>)
	udd_ack_out_received(0);
   820fa:	4b78      	ldr	r3, [pc, #480]	; (822dc <UDPHS_Handler+0x708>)
	udd_g_ctrlreq.callback = NULL;
   820fc:	e9c2 6704 	strd	r6, r7, [r2, #16]
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   82100:	487a      	ldr	r0, [pc, #488]	; (822ec <UDPHS_Handler+0x718>)
	udd_ack_out_received(0);
   82102:	f8c3 4118 	str.w	r4, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_SETUP;
   82106:	7001      	strb	r1, [r0, #0]
	udd_g_ctrlreq.payload_size = 0;
   82108:	8191      	strh	r1, [r2, #12]
		udd_enable_sof_interrupt();
   8210a:	691a      	ldr	r2, [r3, #16]
   8210c:	f042 0208 	orr.w	r2, r2, #8
   82110:	611a      	str	r2, [r3, #16]
		udd_enable_msof_interrupt();
   82112:	691a      	ldr	r2, [r3, #16]
   82114:	f042 0204 	orr.w	r2, r2, #4
   82118:	611a      	str	r2, [r3, #16]
		udd_enable_suspend_interrupt();
   8211a:	691a      	ldr	r2, [r3, #16]
   8211c:	f042 0202 	orr.w	r2, r2, #2
   82120:	611a      	str	r2, [r3, #16]
		goto udd_interrupt_end;
   82122:	e5eb      	b.n	81cfc <UDPHS_Handler+0x128>
		udd_ctrl_in_sent();
   82124:	4b72      	ldr	r3, [pc, #456]	; (822f0 <UDPHS_Handler+0x71c>)
}
   82126:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent();
   8212a:	4718      	bx	r3
		udd_ack_nak_in(0);
   8212c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
   82130:	4a6a      	ldr	r2, [pc, #424]	; (822dc <UDPHS_Handler+0x708>)
   82132:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	if (Is_udd_out_received(0))
   82136:	f8d2 311c 	ldr.w	r3, [r2, #284]	; 0x11c
   8213a:	f413 7300 	ands.w	r3, r3, #512	; 0x200
   8213e:	f47f addd 	bne.w	81cfc <UDPHS_Handler+0x128>
	if (UDD_EPCTRL_DATA_OUT == udd_ep_control_state) {
   82142:	486a      	ldr	r0, [pc, #424]	; (822ec <UDPHS_Handler+0x718>)
   82144:	7801      	ldrb	r1, [r0, #0]
   82146:	2901      	cmp	r1, #1
   82148:	f000 811e 	beq.w	82388 <UDPHS_Handler+0x7b4>
	} else if (UDD_EPCTRL_HANDSHAKE_WAIT_OUT_ZLP == udd_ep_control_state) {
   8214c:	2904      	cmp	r1, #4
   8214e:	f47f add5 	bne.w	81cfc <UDPHS_Handler+0x128>
		udd_enable_stall_handshake(0);
   82152:	2320      	movs	r3, #32
   82154:	f8c2 3114 	str.w	r3, [r2, #276]	; 0x114
   82158:	e5d0      	b.n	81cfc <UDPHS_Handler+0x128>
	nb_data = udd_byte_count(0);
   8215a:	4b60      	ldr	r3, [pc, #384]	; (822dc <UDPHS_Handler+0x708>)
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8215c:	4e65      	ldr	r6, [pc, #404]	; (822f4 <UDPHS_Handler+0x720>)
	nb_data = udd_byte_count(0);
   8215e:	f8d3 511c 	ldr.w	r5, [r3, #284]	; 0x11c
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   82162:	4f61      	ldr	r7, [pc, #388]	; (822e8 <UDPHS_Handler+0x714>)
   82164:	8833      	ldrh	r3, [r6, #0]
   82166:	f8b7 c00c 	ldrh.w	ip, [r7, #12]
	nb_data = udd_byte_count(0);
   8216a:	f3c5 550a 	ubfx	r5, r5, #20, #11
	if (udd_g_ctrlreq.payload_size < (udd_ctrl_payload_buf_cnt + nb_data)) {
   8216e:	195a      	adds	r2, r3, r5
   82170:	4594      	cmp	ip, r2
	udd_ctrl_payload_buf_cnt += nb_data;
   82172:	bfac      	ite	ge
   82174:	fa1f fc82 	uxthge.w	ip, r2
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   82178:	ebac 0503 	sublt.w	r5, ip, r3
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   8217c:	68ba      	ldr	r2, [r7, #8]
		nb_data = udd_g_ctrlreq.payload_size - udd_ctrl_payload_buf_cnt;
   8217e:	bfb8      	it	lt
   82180:	b2ad      	uxthlt	r5, r5
	uint8_t *ptr_dest = udd_g_ctrlreq.payload + udd_ctrl_payload_buf_cnt;
   82182:	441a      	add	r2, r3
	for (i = 0; i < nb_data; i++) {
   82184:	2d00      	cmp	r5, #0
   82186:	f000 8120 	beq.w	823ca <UDPHS_Handler+0x7f6>
	uint8_t *ptr_src = (uint8_t *) & udd_get_endpoint_fifo_access(0, 8);
   8218a:	4b5b      	ldr	r3, [pc, #364]	; (822f8 <UDPHS_Handler+0x724>)
		*ptr_dest++ = *ptr_src++;
   8218c:	4618      	mov	r0, r3
   8218e:	3301      	adds	r3, #1
   82190:	7800      	ldrb	r0, [r0, #0]
	for (i = 0; i < nb_data; i++) {
   82192:	b2d9      	uxtb	r1, r3
   82194:	42a9      	cmp	r1, r5
		*ptr_dest++ = *ptr_src++;
   82196:	f802 0b01 	strb.w	r0, [r2], #1
	for (i = 0; i < nb_data; i++) {
   8219a:	d3f7      	bcc.n	8218c <UDPHS_Handler+0x5b8>
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   8219c:	2d40      	cmp	r5, #64	; 0x40
	udd_ctrl_payload_buf_cnt += nb_data;
   8219e:	f8a6 c000 	strh.w	ip, [r6]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   821a2:	d053      	beq.n	8224c <UDPHS_Handler+0x678>
		if (NULL != udd_g_ctrlreq.over_under_run) {
   821a4:	697b      	ldr	r3, [r7, #20]
		udd_g_ctrlreq.payload_size = udd_ctrl_payload_buf_cnt;
   821a6:	f8a7 c00c 	strh.w	ip, [r7, #12]
		if (NULL != udd_g_ctrlreq.over_under_run) {
   821aa:	b33b      	cbz	r3, 821fc <UDPHS_Handler+0x628>
			if (!udd_g_ctrlreq.over_under_run()) {
   821ac:	4798      	blx	r3
   821ae:	bb28      	cbnz	r0, 821fc <UDPHS_Handler+0x628>
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   821b0:	2005      	movs	r0, #5
	udd_enable_stall_handshake(0);
   821b2:	2120      	movs	r1, #32
			udd_ack_out_received(0);
   821b4:	f44f 7200 	mov.w	r2, #512	; 0x200
	udd_enable_stall_handshake(0);
   821b8:	4b48      	ldr	r3, [pc, #288]	; (822dc <UDPHS_Handler+0x708>)
	udd_ep_control_state = UDD_EPCTRL_STALL_REQ;
   821ba:	7020      	strb	r0, [r4, #0]
	udd_enable_stall_handshake(0);
   821bc:	f8c3 1114 	str.w	r1, [r3, #276]	; 0x114
			udd_ack_out_received(0);
   821c0:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
			return;
   821c4:	e59a      	b.n	81cfc <UDPHS_Handler+0x128>
	if (udd_g_ctrlreq.callback) {
   821c6:	4f48      	ldr	r7, [pc, #288]	; (822e8 <UDPHS_Handler+0x714>)
   821c8:	693b      	ldr	r3, [r7, #16]
   821ca:	2b00      	cmp	r3, #0
   821cc:	f43f aee5 	beq.w	81f9a <UDPHS_Handler+0x3c6>
		udd_g_ctrlreq.callback();
   821d0:	4798      	blx	r3
   821d2:	e6e2      	b.n	81f9a <UDPHS_Handler+0x3c6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   821d4:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   821d8:	b672      	cpsid	i
   821da:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   821de:	4841      	ldr	r0, [pc, #260]	; (822e4 <UDPHS_Handler+0x710>)
	Assert(sleepmgr_locks[mode] < 0xff);

	// Enter a critical section
	flags = cpu_irq_save();

	++sleepmgr_locks[mode];
   821e0:	4946      	ldr	r1, [pc, #280]	; (822fc <UDPHS_Handler+0x728>)
   821e2:	7003      	strb	r3, [r0, #0]
   821e4:	788b      	ldrb	r3, [r1, #2]
   821e6:	3301      	adds	r3, #1
   821e8:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   821ea:	2c00      	cmp	r4, #0
   821ec:	f47f ade6 	bne.w	81dbc <UDPHS_Handler+0x1e8>
		cpu_irq_enable();
   821f0:	2301      	movs	r3, #1
   821f2:	7003      	strb	r3, [r0, #0]
   821f4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   821f8:	b662      	cpsie	i
}
   821fa:	e5df      	b.n	81dbc <UDPHS_Handler+0x1e8>
		udd_ack_out_received(0);
   821fc:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82200:	2203      	movs	r2, #3
		udd_ack_out_received(0);
   82202:	4b36      	ldr	r3, [pc, #216]	; (822dc <UDPHS_Handler+0x708>)
   82204:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82208:	7022      	strb	r2, [r4, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8220a:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   8220e:	b672      	cpsid	i
   82210:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82214:	2500      	movs	r5, #0
   82216:	4833      	ldr	r0, [pc, #204]	; (822e4 <UDPHS_Handler+0x710>)
	udd_ack_in_send(0);
   82218:	f44f 6180 	mov.w	r1, #1024	; 0x400
   8221c:	7005      	strb	r5, [r0, #0]
	udd_ack_nak_out(0);
   8221e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
	udd_raise_tx_pkt_ready(0);
   82222:	f44f 6500 	mov.w	r5, #2048	; 0x800
	udd_ack_in_send(0);
   82226:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   8222a:	f8c3 5114 	str.w	r5, [r3, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   8222e:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	udd_ack_nak_out(0);
   82232:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   82236:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   8223a:	2c00      	cmp	r4, #0
   8223c:	f47f ad5e 	bne.w	81cfc <UDPHS_Handler+0x128>
		cpu_irq_enable();
   82240:	2301      	movs	r3, #1
   82242:	7003      	strb	r3, [r0, #0]
   82244:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82248:	b662      	cpsie	i
   8224a:	e557      	b.n	81cfc <UDPHS_Handler+0x128>
			(udd_ctrl_prev_payload_buf_cnt +
   8224c:	4d2c      	ldr	r5, [pc, #176]	; (82300 <UDPHS_Handler+0x72c>)
			|| (udd_g_ctrlreq.req.wLength <=
   8224e:	88fa      	ldrh	r2, [r7, #6]
			(udd_ctrl_prev_payload_buf_cnt +
   82250:	882b      	ldrh	r3, [r5, #0]
   82252:	4463      	add	r3, ip
			|| (udd_g_ctrlreq.req.wLength <=
   82254:	429a      	cmp	r2, r3
   82256:	dda5      	ble.n	821a4 <UDPHS_Handler+0x5d0>
	if (udd_g_ctrlreq.payload_size == udd_ctrl_payload_buf_cnt) {
   82258:	89bb      	ldrh	r3, [r7, #12]
   8225a:	4563      	cmp	r3, ip
   8225c:	f000 80b8 	beq.w	823d0 <UDPHS_Handler+0x7fc>
	udd_ack_out_received(0);
   82260:	f44f 7100 	mov.w	r1, #512	; 0x200
	udd_ack_nak_in(0);
   82264:	f44f 4280 	mov.w	r2, #16384	; 0x4000
	udd_ack_out_received(0);
   82268:	4b1c      	ldr	r3, [pc, #112]	; (822dc <UDPHS_Handler+0x708>)
   8226a:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_ack_nak_in(0);
   8226e:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82272:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   82276:	b672      	cpsid	i
   82278:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8227c:	2400      	movs	r4, #0
   8227e:	4919      	ldr	r1, [pc, #100]	; (822e4 <UDPHS_Handler+0x710>)
   82280:	700c      	strb	r4, [r1, #0]
	udd_enable_nak_in_interrupt(0);
   82282:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82286:	2800      	cmp	r0, #0
   82288:	f47f ad38 	bne.w	81cfc <UDPHS_Handler+0x128>
		cpu_irq_enable();
   8228c:	2301      	movs	r3, #1
   8228e:	700b      	strb	r3, [r1, #0]
   82290:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82294:	b662      	cpsie	i
   82296:	e531      	b.n	81cfc <UDPHS_Handler+0x128>
		udd_ctrl_prev_payload_buf_cnt = 0;
   82298:	2300      	movs	r3, #0
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   8229a:	2102      	movs	r1, #2
		udd_ctrl_prev_payload_buf_cnt = 0;
   8229c:	4d18      	ldr	r5, [pc, #96]	; (82300 <UDPHS_Handler+0x72c>)
		udd_ctrl_payload_buf_cnt = 0;
   8229e:	4815      	ldr	r0, [pc, #84]	; (822f4 <UDPHS_Handler+0x720>)
		udd_ctrl_prev_payload_buf_cnt = 0;
   822a0:	802b      	strh	r3, [r5, #0]
		udd_ctrl_payload_buf_cnt = 0;
   822a2:	8003      	strh	r3, [r0, #0]
		udd_ep_control_state = UDD_EPCTRL_DATA_IN;
   822a4:	7021      	strb	r1, [r4, #0]
		udd_ctrl_in_sent(); // Send first data transfer
   822a6:	4a12      	ldr	r2, [pc, #72]	; (822f0 <UDPHS_Handler+0x71c>)
}
   822a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
		udd_ctrl_in_sent(); // Send first data transfer
   822ac:	4710      	bx	r2
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   822ae:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   822b2:	b672      	cpsid	i
   822b4:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   822b8:	480a      	ldr	r0, [pc, #40]	; (822e4 <UDPHS_Handler+0x710>)
	Assert(sleepmgr_locks[mode]);

	// Enter a critical section
	flags = cpu_irq_save();

	--sleepmgr_locks[mode];
   822ba:	4910      	ldr	r1, [pc, #64]	; (822fc <UDPHS_Handler+0x728>)
   822bc:	7004      	strb	r4, [r0, #0]
   822be:	788b      	ldrb	r3, [r1, #2]
   822c0:	3b01      	subs	r3, #1
   822c2:	708b      	strb	r3, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   822c4:	2d00      	cmp	r5, #0
   822c6:	f47f ad6d 	bne.w	81da4 <UDPHS_Handler+0x1d0>
		cpu_irq_enable();
   822ca:	2301      	movs	r3, #1
   822cc:	7003      	strb	r3, [r0, #0]
   822ce:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   822d2:	b662      	cpsie	i
}
   822d4:	e566      	b.n	81da4 <UDPHS_Handler+0x1d0>
   822d6:	bf00      	nop
   822d8:	200036ac 	.word	0x200036ac
   822dc:	400a4000 	.word	0x400a4000
   822e0:	00080d4d 	.word	0x00080d4d
   822e4:	20000368 	.word	0x20000368
   822e8:	200036e0 	.word	0x200036e0
   822ec:	200036aa 	.word	0x200036aa
   822f0:	00081a35 	.word	0x00081a35
   822f4:	200036a6 	.word	0x200036a6
   822f8:	20180000 	.word	0x20180000
   822fc:	20003714 	.word	0x20003714
   82300:	200036a8 	.word	0x200036a8
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   82304:	2001      	movs	r0, #1
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   82306:	f04f 7500 	mov.w	r5, #33554432	; 0x2000000
		ptr_job = &udd_ep_job[ep - 1];
   8230a:	2200      	movs	r2, #0
			if (udd_endpoint_dma_get_status(ep)
   8230c:	4b38      	ldr	r3, [pc, #224]	; (823f0 <UDPHS_Handler+0x81c>)
   8230e:	eb03 1300 	add.w	r3, r3, r0, lsl #4
   82312:	68d9      	ldr	r1, [r3, #12]
   82314:	07cc      	lsls	r4, r1, #31
   82316:	f53f acf1 	bmi.w	81cfc <UDPHS_Handler+0x128>
			udd_disable_endpoint_dma_interrupt(ep);
   8231a:	4c36      	ldr	r4, [pc, #216]	; (823f4 <UDPHS_Handler+0x820>)
   8231c:	6921      	ldr	r1, [r4, #16]
   8231e:	ea21 0105 	bic.w	r1, r1, r5
   82322:	6121      	str	r1, [r4, #16]
			nb_remaining = (udd_endpoint_dma_get_status(ep) &
   82324:	68db      	ldr	r3, [r3, #12]
			if (nb_remaining) {
   82326:	0c1b      	lsrs	r3, r3, #16
   82328:	d008      	beq.n	8233c <UDPHS_Handler+0x768>
				ptr_job->buf_cnt -= nb_remaining;
   8232a:	4933      	ldr	r1, [pc, #204]	; (823f8 <UDPHS_Handler+0x824>)
   8232c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   82330:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
   82334:	68d1      	ldr	r1, [r2, #12]
   82336:	1acb      	subs	r3, r1, r3
				ptr_job->buf_size = ptr_job->buf_cnt;
   82338:	e9c2 3302 	strd	r3, r3, [r2, #8]
}
   8233c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
			udd_ep_trans_done(ep);
   82340:	4b2e      	ldr	r3, [pc, #184]	; (823fc <UDPHS_Handler+0x828>)
   82342:	4718      	bx	r3
	for (ep = 1; ep <= USB_DEVICE_MAX_EP; ep++) {
   82344:	2002      	movs	r0, #2
		if (Is_udd_endpoint_dma_interrupt_enabled(ep)
   82346:	f04f 6580 	mov.w	r5, #67108864	; 0x4000000
		ptr_job = &udd_ep_job[ep - 1];
   8234a:	2201      	movs	r2, #1
   8234c:	e7de      	b.n	8230c <UDPHS_Handler+0x738>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   8234e:	2203      	movs	r2, #3
   82350:	7022      	strb	r2, [r4, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82352:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   82356:	b672      	cpsid	i
   82358:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   8235c:	4928      	ldr	r1, [pc, #160]	; (82400 <UDPHS_Handler+0x82c>)
	udd_ack_in_send(0);
   8235e:	f44f 6280 	mov.w	r2, #1024	; 0x400
   82362:	700b      	strb	r3, [r1, #0]
	udd_raise_tx_pkt_ready(0);
   82364:	f44f 6400 	mov.w	r4, #2048	; 0x800
	udd_ack_nak_out(0);
   82368:	f44f 4300 	mov.w	r3, #32768	; 0x8000
	udd_ack_in_send(0);
   8236c:	f8c6 2118 	str.w	r2, [r6, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82370:	f8c6 4114 	str.w	r4, [r6, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   82374:	f8c6 2104 	str.w	r2, [r6, #260]	; 0x104
	udd_ack_nak_out(0);
   82378:	f8c6 3118 	str.w	r3, [r6, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   8237c:	f8c6 3104 	str.w	r3, [r6, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   82380:	2800      	cmp	r0, #0
   82382:	f47f acbb 	bne.w	81cfc <UDPHS_Handler+0x128>
   82386:	e781      	b.n	8228c <UDPHS_Handler+0x6b8>
	udd_ep_control_state = UDD_EPCTRL_HANDSHAKE_WAIT_IN_ZLP;
   82388:	2403      	movs	r4, #3
   8238a:	7004      	strb	r4, [r0, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8238c:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   82390:	b672      	cpsid	i
   82392:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82396:	4c1a      	ldr	r4, [pc, #104]	; (82400 <UDPHS_Handler+0x82c>)
	udd_ack_in_send(0);
   82398:	f44f 6080 	mov.w	r0, #1024	; 0x400
   8239c:	7023      	strb	r3, [r4, #0]
	udd_raise_tx_pkt_ready(0);
   8239e:	f44f 6600 	mov.w	r6, #2048	; 0x800
	udd_ack_nak_out(0);
   823a2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
	udd_ack_in_send(0);
   823a6:	f8c2 0118 	str.w	r0, [r2, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   823aa:	f8c2 6114 	str.w	r6, [r2, #276]	; 0x114
	udd_enable_in_send_interrupt(0);
   823ae:	f8c2 0104 	str.w	r0, [r2, #260]	; 0x104
	udd_ack_nak_out(0);
   823b2:	f8c2 3118 	str.w	r3, [r2, #280]	; 0x118
	udd_enable_nak_out_interrupt(0);
   823b6:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
	if (cpu_irq_is_enabled_flags(flags))
   823ba:	2d00      	cmp	r5, #0
   823bc:	f47f ac9e 	bne.w	81cfc <UDPHS_Handler+0x128>
		cpu_irq_enable();
   823c0:	7021      	strb	r1, [r4, #0]
   823c2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   823c6:	b662      	cpsie	i
   823c8:	e498      	b.n	81cfc <UDPHS_Handler+0x128>
	udd_ctrl_payload_buf_cnt += nb_data;
   823ca:	f8a6 c000 	strh.w	ip, [r6]
	if ((USB_DEVICE_EP_CTRL_SIZE != nb_data)
   823ce:	e6e9      	b.n	821a4 <UDPHS_Handler+0x5d0>
		if (!udd_g_ctrlreq.over_under_run) {
   823d0:	697b      	ldr	r3, [r7, #20]
   823d2:	2b00      	cmp	r3, #0
   823d4:	f43f aeec 	beq.w	821b0 <UDPHS_Handler+0x5dc>
		if (!udd_g_ctrlreq.over_under_run()) {
   823d8:	4798      	blx	r3
   823da:	2800      	cmp	r0, #0
   823dc:	f43f aee8 	beq.w	821b0 <UDPHS_Handler+0x5dc>
		udd_ctrl_payload_buf_cnt = 0;
   823e0:	2200      	movs	r2, #0
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   823e2:	882b      	ldrh	r3, [r5, #0]
   823e4:	8831      	ldrh	r1, [r6, #0]
		udd_ctrl_payload_buf_cnt = 0;
   823e6:	8032      	strh	r2, [r6, #0]
		udd_ctrl_prev_payload_buf_cnt += udd_ctrl_payload_buf_cnt;
   823e8:	440b      	add	r3, r1
   823ea:	802b      	strh	r3, [r5, #0]
		udd_ctrl_payload_buf_cnt = 0;
   823ec:	e738      	b.n	82260 <UDPHS_Handler+0x68c>
   823ee:	bf00      	nop
   823f0:	400a4300 	.word	0x400a4300
   823f4:	400a4000 	.word	0x400a4000
   823f8:	200036ac 	.word	0x200036ac
   823fc:	00081869 	.word	0x00081869
   82400:	20000368 	.word	0x20000368

00082404 <udd_attach>:
{
   82404:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82408:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   8240c:	b672      	cpsid	i
   8240e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   82412:	2100      	movs	r1, #0
	if (b_idle && !udd_b_idle) {
   82414:	4b29      	ldr	r3, [pc, #164]	; (824bc <udd_attach+0xb8>)
   82416:	4c2a      	ldr	r4, [pc, #168]	; (824c0 <udd_attach+0xbc>)
   82418:	781a      	ldrb	r2, [r3, #0]
   8241a:	7021      	strb	r1, [r4, #0]
   8241c:	2a00      	cmp	r2, #0
   8241e:	d03b      	beq.n	82498 <udd_attach+0x94>
	udd_b_idle = b_idle;
   82420:	2501      	movs	r5, #1
	udd_enable_periph_ck();
   82422:	4a28      	ldr	r2, [pc, #160]	; (824c4 <udd_attach+0xc0>)
   82424:	201d      	movs	r0, #29
	udd_b_idle = b_idle;
   82426:	701d      	strb	r5, [r3, #0]
	udd_ack_sof();
   82428:	f04f 0808 	mov.w	r8, #8
	udd_enable_periph_ck();
   8242c:	4790      	blx	r2
	udd_ack_suspend();
   8242e:	2702      	movs	r7, #2
	udd_ack_msof();
   82430:	f04f 0e04 	mov.w	lr, #4
	udd_ack_reset();
   82434:	f04f 0c10 	mov.w	ip, #16
	udd_ack_wake_up();
   82438:	2120      	movs	r1, #32
	udd_attach_device();
   8243a:	4b23      	ldr	r3, [pc, #140]	; (824c8 <udd_attach+0xc4>)
	udd_disable_periph_ck();
   8243c:	201d      	movs	r0, #29
	udd_attach_device();
   8243e:	681a      	ldr	r2, [r3, #0]
   82440:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   82444:	601a      	str	r2, [r3, #0]
   82446:	681a      	ldr	r2, [r3, #0]
   82448:	f422 7200 	bic.w	r2, r2, #512	; 0x200
   8244c:	601a      	str	r2, [r3, #0]
	udd_enable_reset_interrupt();
   8244e:	691a      	ldr	r2, [r3, #16]
   82450:	f042 0210 	orr.w	r2, r2, #16
   82454:	611a      	str	r2, [r3, #16]
	udd_enable_suspend_interrupt();
   82456:	691a      	ldr	r2, [r3, #16]
   82458:	f042 0202 	orr.w	r2, r2, #2
   8245c:	611a      	str	r2, [r3, #16]
	udd_enable_wake_up_interrupt();
   8245e:	691a      	ldr	r2, [r3, #16]
   82460:	f042 0220 	orr.w	r2, r2, #32
   82464:	611a      	str	r2, [r3, #16]
	udd_enable_sof_interrupt();
   82466:	691a      	ldr	r2, [r3, #16]
   82468:	f042 0208 	orr.w	r2, r2, #8
   8246c:	611a      	str	r2, [r3, #16]
	udd_enable_msof_interrupt();
   8246e:	691a      	ldr	r2, [r3, #16]
   82470:	f042 0204 	orr.w	r2, r2, #4
   82474:	611a      	str	r2, [r3, #16]
	udd_ack_sof();
   82476:	f8c3 8018 	str.w	r8, [r3, #24]
	udd_disable_periph_ck();
   8247a:	4a14      	ldr	r2, [pc, #80]	; (824cc <udd_attach+0xc8>)
	udd_ack_msof();
   8247c:	f8c3 e018 	str.w	lr, [r3, #24]
	udd_ack_reset();
   82480:	f8c3 c018 	str.w	ip, [r3, #24]
	udd_ack_suspend();
   82484:	619f      	str	r7, [r3, #24]
	udd_ack_wake_up();
   82486:	6199      	str	r1, [r3, #24]
	udd_disable_periph_ck();
   82488:	4790      	blx	r2
	if (cpu_irq_is_enabled_flags(flags))
   8248a:	b91e      	cbnz	r6, 82494 <udd_attach+0x90>
		cpu_irq_enable();
   8248c:	7025      	strb	r5, [r4, #0]
   8248e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82492:	b662      	cpsie	i
}
   82494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   82498:	f3ef 8010 	mrs	r0, PRIMASK
  __ASM volatile ("cpsid i");
   8249c:	b672      	cpsid	i
   8249e:	f3bf 8f5f 	dmb	sy
	++sleepmgr_locks[mode];
   824a2:	490b      	ldr	r1, [pc, #44]	; (824d0 <udd_attach+0xcc>)
	cpu_irq_disable();
   824a4:	7022      	strb	r2, [r4, #0]
   824a6:	788a      	ldrb	r2, [r1, #2]
   824a8:	3201      	adds	r2, #1
   824aa:	708a      	strb	r2, [r1, #2]
	if (cpu_irq_is_enabled_flags(flags))
   824ac:	2800      	cmp	r0, #0
   824ae:	d1b7      	bne.n	82420 <udd_attach+0x1c>
		cpu_irq_enable();
   824b0:	2201      	movs	r2, #1
   824b2:	7022      	strb	r2, [r4, #0]
   824b4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   824b8:	b662      	cpsie	i
}
   824ba:	e7b1      	b.n	82420 <udd_attach+0x1c>
   824bc:	200036a5 	.word	0x200036a5
   824c0:	20000368 	.word	0x20000368
   824c4:	0008314d 	.word	0x0008314d
   824c8:	400a4000 	.word	0x400a4000
   824cc:	00083171 	.word	0x00083171
   824d0:	20003714 	.word	0x20003714

000824d4 <udd_enable>:
{
   824d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	sysclk_enable_usb();
   824d6:	4b25      	ldr	r3, [pc, #148]	; (8256c <udd_enable+0x98>)
   824d8:	4798      	blx	r3
	udd_enable_periph_ck();
   824da:	4b25      	ldr	r3, [pc, #148]	; (82570 <udd_enable+0x9c>)
   824dc:	201d      	movs	r0, #29
   824de:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   824e0:	f3ef 8610 	mrs	r6, PRIMASK
  __ASM volatile ("cpsid i");
   824e4:	b672      	cpsid	i
   824e6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   824ea:	2400      	movs	r4, #0
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   824ec:	f04f 0e50 	mov.w	lr, #80	; 0x50
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   824f0:	f04f 5c00 	mov.w	ip, #536870912	; 0x20000000
		udd_ep_job[i].busy = false;
   824f4:	4a1f      	ldr	r2, [pc, #124]	; (82574 <udd_enable+0xa0>)
   824f6:	4d20      	ldr	r5, [pc, #128]	; (82578 <udd_enable+0xa4>)
   824f8:	7d11      	ldrb	r1, [r2, #20]
	udd_enable_periph();
   824fa:	4b20      	ldr	r3, [pc, #128]	; (8257c <udd_enable+0xa8>)
		udd_ep_job[i].busy = false;
   824fc:	f021 0105 	bic.w	r1, r1, #5
   82500:	7511      	strb	r1, [r2, #20]
   82502:	f892 102c 	ldrb.w	r1, [r2, #44]	; 0x2c
   82506:	702c      	strb	r4, [r5, #0]
   82508:	f021 0105 	bic.w	r1, r1, #5
   8250c:	f882 102c 	strb.w	r1, [r2, #44]	; 0x2c
	udd_enable_periph();
   82510:	681a      	ldr	r2, [r3, #0]
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   82512:	4f1b      	ldr	r7, [pc, #108]	; (82580 <udd_enable+0xac>)
   82514:	f442 7280 	orr.w	r2, r2, #256	; 0x100
   82518:	601a      	str	r2, [r3, #0]
   8251a:	f887 e31d 	strb.w	lr, [r7, #797]	; 0x31d
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   8251e:	f8c7 c000 	str.w	ip, [r7]
	udd_high_speed_enable();
   82522:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   82526:	f44f 2080 	mov.w	r0, #262144	; 0x40000
	udd_high_speed_enable();
   8252a:	f022 0203 	bic.w	r2, r2, #3
   8252e:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
	pmc_set_fast_startup_input(PMC_FSMR_USBAL);
   82532:	4b14      	ldr	r3, [pc, #80]	; (82584 <udd_enable+0xb0>)
   82534:	4798      	blx	r3
	udd_b_idle = false;
   82536:	4b14      	ldr	r3, [pc, #80]	; (82588 <udd_enable+0xb4>)
   82538:	701c      	strb	r4, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8253a:	f3ef 8110 	mrs	r1, PRIMASK
  __ASM volatile ("cpsid i");
   8253e:	b672      	cpsid	i
   82540:	f3bf 8f5f 	dmb	sy
   82544:	4a11      	ldr	r2, [pc, #68]	; (8258c <udd_enable+0xb8>)
   82546:	702c      	strb	r4, [r5, #0]
   82548:	78d3      	ldrb	r3, [r2, #3]
   8254a:	3301      	adds	r3, #1
   8254c:	70d3      	strb	r3, [r2, #3]
	if (cpu_irq_is_enabled_flags(flags))
   8254e:	b921      	cbnz	r1, 8255a <udd_enable+0x86>
		cpu_irq_enable();
   82550:	2301      	movs	r3, #1
   82552:	702b      	strb	r3, [r5, #0]
   82554:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   82558:	b662      	cpsie	i
	udd_attach();
   8255a:	4b0d      	ldr	r3, [pc, #52]	; (82590 <udd_enable+0xbc>)
   8255c:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   8255e:	b926      	cbnz	r6, 8256a <udd_enable+0x96>
		cpu_irq_enable();
   82560:	2301      	movs	r3, #1
   82562:	702b      	strb	r3, [r5, #0]
   82564:	f3bf 8f5f 	dmb	sy
   82568:	b662      	cpsie	i
}
   8256a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8256c:	00082f49 	.word	0x00082f49
   82570:	0008314d 	.word	0x0008314d
   82574:	200036ac 	.word	0x200036ac
   82578:	20000368 	.word	0x20000368
   8257c:	400a4000 	.word	0x400a4000
   82580:	e000e100 	.word	0xe000e100
   82584:	00083195 	.word	0x00083195
   82588:	200036a5 	.word	0x200036a5
   8258c:	20003714 	.word	0x20003714
   82590:	00082405 	.word	0x00082405

00082594 <udd_detach>:
{
   82594:	b510      	push	{r4, lr}
	udd_enable_periph_ck();
   82596:	4b16      	ldr	r3, [pc, #88]	; (825f0 <udd_detach+0x5c>)
   82598:	201d      	movs	r0, #29
   8259a:	4798      	blx	r3
	udd_detach_device();
   8259c:	4b15      	ldr	r3, [pc, #84]	; (825f4 <udd_detach+0x60>)
	udd_disable_periph_ck();
   8259e:	201d      	movs	r0, #29
	udd_detach_device();
   825a0:	681a      	ldr	r2, [r3, #0]
	udd_disable_periph_ck();
   825a2:	4915      	ldr	r1, [pc, #84]	; (825f8 <udd_detach+0x64>)
	udd_detach_device();
   825a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   825a8:	601a      	str	r2, [r3, #0]
   825aa:	681a      	ldr	r2, [r3, #0]
   825ac:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
   825b0:	601a      	str	r2, [r3, #0]
	udd_disable_periph_ck();
   825b2:	4788      	blx	r1
	if (!b_idle && udd_b_idle) {
   825b4:	4b11      	ldr	r3, [pc, #68]	; (825fc <udd_detach+0x68>)
   825b6:	781a      	ldrb	r2, [r3, #0]
   825b8:	b912      	cbnz	r2, 825c0 <udd_detach+0x2c>
	udd_b_idle = b_idle;
   825ba:	2200      	movs	r2, #0
   825bc:	701a      	strb	r2, [r3, #0]
}
   825be:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   825c0:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   825c4:	b672      	cpsid	i
   825c6:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   825ca:	f04f 0c00 	mov.w	ip, #0
	--sleepmgr_locks[mode];
   825ce:	490c      	ldr	r1, [pc, #48]	; (82600 <udd_detach+0x6c>)
   825d0:	480c      	ldr	r0, [pc, #48]	; (82604 <udd_detach+0x70>)
   825d2:	788a      	ldrb	r2, [r1, #2]
   825d4:	3a01      	subs	r2, #1
   825d6:	708a      	strb	r2, [r1, #2]
   825d8:	f880 c000 	strb.w	ip, [r0]
	if (cpu_irq_is_enabled_flags(flags))
   825dc:	2c00      	cmp	r4, #0
   825de:	d1ec      	bne.n	825ba <udd_detach+0x26>
		cpu_irq_enable();
   825e0:	2201      	movs	r2, #1
   825e2:	7002      	strb	r2, [r0, #0]
   825e4:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   825e8:	b662      	cpsie	i
	udd_b_idle = b_idle;
   825ea:	2200      	movs	r2, #0
   825ec:	701a      	strb	r2, [r3, #0]
}
   825ee:	bd10      	pop	{r4, pc}
   825f0:	0008314d 	.word	0x0008314d
   825f4:	400a4000 	.word	0x400a4000
   825f8:	00083171 	.word	0x00083171
   825fc:	200036a5 	.word	0x200036a5
   82600:	20003714 	.word	0x20003714
   82604:	20000368 	.word	0x20000368

00082608 <udd_is_high_speed>:
	return !Is_udd_full_speed_mode();
   82608:	4b02      	ldr	r3, [pc, #8]	; (82614 <udd_is_high_speed+0xc>)
   8260a:	6958      	ldr	r0, [r3, #20]
}
   8260c:	f000 0001 	and.w	r0, r0, #1
   82610:	4770      	bx	lr
   82612:	bf00      	nop
   82614:	400a4000 	.word	0x400a4000

00082618 <udd_set_address>:
	udd_disable_address();
   82618:	4b08      	ldr	r3, [pc, #32]	; (8263c <udd_set_address+0x24>)
	udd_configure_address(address);
   8261a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
	udd_disable_address();
   8261e:	681a      	ldr	r2, [r3, #0]
   82620:	f022 0280 	bic.w	r2, r2, #128	; 0x80
   82624:	601a      	str	r2, [r3, #0]
	udd_configure_address(address);
   82626:	681a      	ldr	r2, [r3, #0]
   82628:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
   8262c:	4302      	orrs	r2, r0
   8262e:	601a      	str	r2, [r3, #0]
	udd_enable_address();
   82630:	681a      	ldr	r2, [r3, #0]
   82632:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   82636:	601a      	str	r2, [r3, #0]
}
   82638:	4770      	bx	lr
   8263a:	bf00      	nop
   8263c:	400a4000 	.word	0x400a4000

00082640 <udd_getaddress>:
	return udd_get_configured_address();
   82640:	4b02      	ldr	r3, [pc, #8]	; (8264c <udd_getaddress+0xc>)
   82642:	6818      	ldr	r0, [r3, #0]
}
   82644:	f000 007f 	and.w	r0, r0, #127	; 0x7f
   82648:	4770      	bx	lr
   8264a:	bf00      	nop
   8264c:	400a4000 	.word	0x400a4000

00082650 <udd_get_frame_number>:
	return udd_frame_number();
   82650:	4b02      	ldr	r3, [pc, #8]	; (8265c <udd_get_frame_number+0xc>)
   82652:	6858      	ldr	r0, [r3, #4]
}
   82654:	f3c0 00ca 	ubfx	r0, r0, #3, #11
   82658:	4770      	bx	lr
   8265a:	bf00      	nop
   8265c:	400a4000 	.word	0x400a4000

00082660 <udd_set_setup_payload>:
	udd_g_ctrlreq.payload = payload;
   82660:	4b01      	ldr	r3, [pc, #4]	; (82668 <udd_set_setup_payload+0x8>)
   82662:	6098      	str	r0, [r3, #8]
	udd_g_ctrlreq.payload_size = payload_size;
   82664:	8199      	strh	r1, [r3, #12]
}
   82666:	4770      	bx	lr
   82668:	200036e0 	.word	0x200036e0

0008266c <udd_ep_free>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   8266c:	f000 020f 	and.w	r2, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   82670:	2a02      	cmp	r2, #2
   82672:	d900      	bls.n	82676 <udd_ep_free+0xa>
   82674:	4770      	bx	lr
{
   82676:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	udd_disable_endpoint(ep_index);
   82678:	2701      	movs	r7, #1
   8267a:	0153      	lsls	r3, r2, #5
   8267c:	f103 2040 	add.w	r0, r3, #1073758208	; 0x40004000
   82680:	f500 2020 	add.w	r0, r0, #655360	; 0xa0000
   82684:	4603      	mov	r3, r0
   82686:	f8c0 7108 	str.w	r7, [r0, #264]	; 0x108
	udd_configure_endpoint_bank(ep_index, 0);
   8268a:	f8d0 0100 	ldr.w	r0, [r0, #256]	; 0x100
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   8268e:	1e55      	subs	r5, r2, #1
	if (ptr_job->busy == false) {
   82690:	4c16      	ldr	r4, [pc, #88]	; (826ec <udd_ep_free+0x80>)
   82692:	eb05 0145 	add.w	r1, r5, r5, lsl #1
	udd_configure_endpoint_bank(ep_index, 0);
   82696:	f020 00c0 	bic.w	r0, r0, #192	; 0xc0
	if (ptr_job->busy == false) {
   8269a:	eb04 0cc1 	add.w	ip, r4, r1, lsl #3
	udd_configure_endpoint_bank(ep_index, 0);
   8269e:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	if (ptr_job->busy == false) {
   826a2:	f89c 0014 	ldrb.w	r0, [ip, #20]
   826a6:	fa05 f607 	lsl.w	r6, r5, r7
   826aa:	07c7      	lsls	r7, r0, #31
   826ac:	ea4f 01c1 	mov.w	r1, r1, lsl #3
   826b0:	d513      	bpl.n	826da <udd_ep_free+0x6e>
	if (NULL == ptr_job->call_trans) {
   826b2:	5867      	ldr	r7, [r4, r1]
	ptr_job->busy = false;
   826b4:	4601      	mov	r1, r0
   826b6:	f36f 0100 	bfc	r1, #0, #1
   826ba:	f88c 1014 	strb.w	r1, [ip, #20]
	if (NULL == ptr_job->call_trans) {
   826be:	b167      	cbz	r7, 826da <udd_ep_free+0x6e>
	if (Is_udd_endpoint_in(ep_num)) {
   826c0:	f8d3 3100 	ldr.w	r3, [r3, #256]	; 0x100
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826c4:	2001      	movs	r0, #1
	if (Is_udd_endpoint_in(ep_num)) {
   826c6:	071b      	lsls	r3, r3, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826c8:	eb06 0305 	add.w	r3, r6, r5
   826cc:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   826d0:	6899      	ldr	r1, [r3, #8]
		ep_num |= USB_EP_DIR_IN;
   826d2:	bf48      	it	mi
   826d4:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   826d8:	47b8      	blx	r7
	udd_ep_job[ep_index - 1].stall_requested = false;
   826da:	1973      	adds	r3, r6, r5
   826dc:	eb04 03c3 	add.w	r3, r4, r3, lsl #3
   826e0:	7d1a      	ldrb	r2, [r3, #20]
   826e2:	f36f 0282 	bfc	r2, #2, #1
   826e6:	751a      	strb	r2, [r3, #20]
}
   826e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   826ea:	bf00      	nop
   826ec:	200036ac 	.word	0x200036ac

000826f0 <udd_ep_is_halted>:
	udd_ep_job_t *ptr_job = &udd_ep_job[ep_index - 1];
   826f0:	f000 000f 	and.w	r0, r0, #15
	return (Is_udd_endpoint_stall_requested(ep_index)
   826f4:	0143      	lsls	r3, r0, #5
   826f6:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   826fa:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   826fe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
			|| ptr_job->stall_requested);
   82702:	069b      	lsls	r3, r3, #26
   82704:	d409      	bmi.n	8271a <udd_ep_is_halted+0x2a>
   82706:	4b06      	ldr	r3, [pc, #24]	; (82720 <udd_ep_is_halted+0x30>)
   82708:	3801      	subs	r0, #1
   8270a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
   8270e:	eb03 00c0 	add.w	r0, r3, r0, lsl #3
   82712:	7d00      	ldrb	r0, [r0, #20]
   82714:	f3c0 0080 	ubfx	r0, r0, #2, #1
   82718:	4770      	bx	lr
   8271a:	2001      	movs	r0, #1
}
   8271c:	4770      	bx	lr
   8271e:	bf00      	nop
   82720:	200036ac 	.word	0x200036ac

00082724 <udd_ep_set_halt>:
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82724:	f000 030f 	and.w	r3, r0, #15
	if (USB_DEVICE_MAX_EP < ep_index) {
   82728:	2b02      	cmp	r3, #2
   8272a:	d82c      	bhi.n	82786 <udd_ep_set_halt+0x62>
{
   8272c:	b530      	push	{r4, r5, lr}
	if (Is_udd_endpoint_stall_requested(ep_index) // Endpoint stalled
   8272e:	4d25      	ldr	r5, [pc, #148]	; (827c4 <udd_ep_set_halt+0xa0>)
   82730:	0159      	lsls	r1, r3, #5
   82732:	eb05 1e43 	add.w	lr, r5, r3, lsl #5
   82736:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   8273a:	0692      	lsls	r2, r2, #26
   8273c:	d421      	bmi.n	82782 <udd_ep_set_halt+0x5e>
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   8273e:	4c22      	ldr	r4, [pc, #136]	; (827c8 <udd_ep_set_halt+0xa4>)
	ptr_job = &udd_ep_job[ep_index - 1];
   82740:	1e5a      	subs	r2, r3, #1
			|| ptr_job->stall_requested) { // Endpoint stall is requested
   82742:	eb02 0242 	add.w	r2, r2, r2, lsl #1
   82746:	eb04 0cc2 	add.w	ip, r4, r2, lsl #3
   8274a:	f89c 4014 	ldrb.w	r4, [ip, #20]
   8274e:	f014 0204 	ands.w	r2, r4, #4
   82752:	d116      	bne.n	82782 <udd_ep_set_halt+0x5e>
	if (ptr_job->busy == true) {
   82754:	07e4      	lsls	r4, r4, #31
   82756:	d418      	bmi.n	8278a <udd_ep_set_halt+0x66>
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   82758:	0602      	lsls	r2, r0, #24
   8275a:	d418      	bmi.n	8278e <udd_ep_set_halt+0x6a>
	udd_ack_stall(ep_index);
   8275c:	f44f 5500 	mov.w	r5, #8192	; 0x2000
	udd_enable_stall_handshake(ep_index);
   82760:	2420      	movs	r4, #32
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82762:	f101 2340 	add.w	r3, r1, #1073758208	; 0x40004000
   82766:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   8276a:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
	return true;
   8276e:	2001      	movs	r0, #1
	udd_disable_endpoint_bank_autoswitch(ep_index);
   82770:	f022 0202 	bic.w	r2, r2, #2
   82774:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
	udd_ack_stall(ep_index);
   82778:	f8c3 5118 	str.w	r5, [r3, #280]	; 0x118
	udd_enable_stall_handshake(ep_index);
   8277c:	f8c3 4114 	str.w	r4, [r3, #276]	; 0x114
}
   82780:	bd30      	pop	{r4, r5, pc}
		return true; // Already STALL
   82782:	2001      	movs	r0, #1
}
   82784:	bd30      	pop	{r4, r5, pc}
		return false;
   82786:	2000      	movs	r0, #0
}
   82788:	4770      	bx	lr
		return false;
   8278a:	4610      	mov	r0, r2
}
   8278c:	bd30      	pop	{r4, r5, pc}
	if ((ep & USB_EP_DIR_IN) && (0 != udd_nb_busy_bank(ep_index))) {
   8278e:	f8de 211c 	ldr.w	r2, [lr, #284]	; 0x11c
   82792:	f412 2f40 	tst.w	r2, #786432	; 0xc0000
   82796:	d0e1      	beq.n	8275c <udd_ep_set_halt+0x38>
			udd_enable_bank_interrupt(ep_index);
   82798:	f44f 2480 	mov.w	r4, #262144	; 0x40000
			udd_enable_endpoint_interrupt(ep_index);
   8279c:	f44f 7280 	mov.w	r2, #256	; 0x100
			ptr_job->stall_requested = true;
   827a0:	f89c 1014 	ldrb.w	r1, [ip, #20]
			return true;
   827a4:	2001      	movs	r0, #1
			ptr_job->stall_requested = true;
   827a6:	f041 0104 	orr.w	r1, r1, #4
   827aa:	f88c 1014 	strb.w	r1, [ip, #20]
			udd_enable_bank_interrupt(ep_index);
   827ae:	f103 0108 	add.w	r1, r3, #8
   827b2:	eb05 1141 	add.w	r1, r5, r1, lsl #5
   827b6:	604c      	str	r4, [r1, #4]
			udd_enable_endpoint_interrupt(ep_index);
   827b8:	6929      	ldr	r1, [r5, #16]
   827ba:	fa02 f303 	lsl.w	r3, r2, r3
   827be:	430b      	orrs	r3, r1
   827c0:	612b      	str	r3, [r5, #16]
}
   827c2:	bd30      	pop	{r4, r5, pc}
   827c4:	400a4000 	.word	0x400a4000
   827c8:	200036ac 	.word	0x200036ac

000827cc <udd_ep_clear_halt>:
	ep &= USB_EP_ADDR_MASK;
   827cc:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep)
   827d0:	2802      	cmp	r0, #2
   827d2:	d85a      	bhi.n	8288a <udd_ep_clear_halt+0xbe>
{
   827d4:	b570      	push	{r4, r5, r6, lr}
	ptr_job = &udd_ep_job[ep - 1];
   827d6:	f100 3cff 	add.w	ip, r0, #4294967295
	if (ptr_job->stall_requested) {
   827da:	4c2d      	ldr	r4, [pc, #180]	; (82890 <udd_ep_clear_halt+0xc4>)
   827dc:	eb0c 014c 	add.w	r1, ip, ip, lsl #1
   827e0:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
   827e4:	7d0b      	ldrb	r3, [r1, #20]
   827e6:	ea4f 024c 	mov.w	r2, ip, lsl #1
   827ea:	075d      	lsls	r5, r3, #29
   827ec:	d526      	bpl.n	8283c <udd_ep_clear_halt+0x70>
		udd_disable_bank_interrupt(ep);
   827ee:	f44f 2680 	mov.w	r6, #262144	; 0x40000
		udd_disable_endpoint_interrupt(ep);
   827f2:	f44f 7e80 	mov.w	lr, #256	; 0x100
		ptr_job->stall_requested = false;
   827f6:	7d0b      	ldrb	r3, [r1, #20]
		udd_disable_endpoint_interrupt(ep);
   827f8:	fa0e fe00 	lsl.w	lr, lr, r0
		ptr_job->stall_requested = false;
   827fc:	f36f 0382 	bfc	r3, #2, #1
   82800:	750b      	strb	r3, [r1, #20]
		udd_disable_bank_interrupt(ep);
   82802:	4924      	ldr	r1, [pc, #144]	; (82894 <udd_ep_clear_halt+0xc8>)
   82804:	0143      	lsls	r3, r0, #5
   82806:	eb01 1540 	add.w	r5, r1, r0, lsl #5
   8280a:	f8c5 6108 	str.w	r6, [r5, #264]	; 0x108
		udd_disable_endpoint_interrupt(ep);
   8280e:	6908      	ldr	r0, [r1, #16]
   82810:	ea20 000e 	bic.w	r0, r0, lr
   82814:	6108      	str	r0, [r1, #16]
	if (Is_udd_endpoint_stall_requested(ep)) {
   82816:	f8d5 111c 	ldr.w	r1, [r5, #284]	; 0x11c
   8281a:	068d      	lsls	r5, r1, #26
   8281c:	d417      	bmi.n	8284e <udd_ep_clear_halt+0x82>
		if (ptr_job->busy == true) {
   8281e:	eb02 030c 	add.w	r3, r2, ip
   82822:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
   82826:	7d11      	ldrb	r1, [r2, #20]
   82828:	00db      	lsls	r3, r3, #3
   8282a:	07c8      	lsls	r0, r1, #31
   8282c:	d504      	bpl.n	82838 <udd_ep_clear_halt+0x6c>
			ptr_job->busy = false;
   8282e:	f36f 0100 	bfc	r1, #0, #1
			ptr_job->call_nohalt();
   82832:	58e3      	ldr	r3, [r4, r3]
			ptr_job->busy = false;
   82834:	7511      	strb	r1, [r2, #20]
			ptr_job->call_nohalt();
   82836:	4798      	blx	r3
	return true;
   82838:	2001      	movs	r0, #1
}
   8283a:	bd70      	pop	{r4, r5, r6, pc}
	if (Is_udd_endpoint_stall_requested(ep)) {
   8283c:	0143      	lsls	r3, r0, #5
   8283e:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82842:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82846:	f8d1 111c 	ldr.w	r1, [r1, #284]	; 0x11c
   8284a:	0689      	lsls	r1, r1, #26
   8284c:	d5f4      	bpl.n	82838 <udd_ep_clear_halt+0x6c>
		if (Is_udd_stall(ep)) {
   8284e:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82852:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82856:	f8d1 011c 	ldr.w	r0, [r1, #284]	; 0x11c
   8285a:	0486      	lsls	r6, r0, #18
   8285c:	d506      	bpl.n	8286c <udd_ep_clear_halt+0xa0>
			udd_ack_stall(ep);
   8285e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
   82862:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
			udd_reset_data_toggle(ep);
   82866:	2040      	movs	r0, #64	; 0x40
   82868:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_disable_stall_handshake(ep);
   8286c:	2020      	movs	r0, #32
   8286e:	f103 2140 	add.w	r1, r3, #1073758208	; 0x40004000
   82872:	f501 2120 	add.w	r1, r1, #655360	; 0xa0000
   82876:	460b      	mov	r3, r1
   82878:	f8c1 0118 	str.w	r0, [r1, #280]	; 0x118
		udd_enable_endpoint_bank_autoswitch(ep);
   8287c:	f8d1 1104 	ldr.w	r1, [r1, #260]	; 0x104
   82880:	f041 0102 	orr.w	r1, r1, #2
   82884:	f8c3 1104 	str.w	r1, [r3, #260]	; 0x104
	if (b_stall_cleared) {
   82888:	e7c9      	b.n	8281e <udd_ep_clear_halt+0x52>
		return false;
   8288a:	2000      	movs	r0, #0
}
   8288c:	4770      	bx	lr
   8288e:	bf00      	nop
   82890:	200036ac 	.word	0x200036ac
   82894:	400a4000 	.word	0x400a4000

00082898 <udd_ep_run>:
	ep &= USB_EP_ADDR_MASK;
   82898:	f000 000f 	and.w	r0, r0, #15
	if (USB_DEVICE_MAX_EP < ep) {
   8289c:	2802      	cmp	r0, #2
   8289e:	d857      	bhi.n	82950 <udd_ep_run+0xb8>
{
   828a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	if ((!Is_udd_endpoint_enabled(ep))
   828a4:	ea4f 1c40 	mov.w	ip, r0, lsl #5
   828a8:	f10c 2c40 	add.w	ip, ip, #1073758208	; 0x40004000
   828ac:	f50c 2c20 	add.w	ip, ip, #655360	; 0xa0000
   828b0:	f8dc 410c 	ldr.w	r4, [ip, #268]	; 0x10c
   828b4:	07e5      	lsls	r5, r4, #31
   828b6:	d548      	bpl.n	8294a <udd_ep_run+0xb2>
			|| Is_udd_endpoint_stall_requested(ep)
   828b8:	f8dc 411c 	ldr.w	r4, [ip, #284]	; 0x11c
   828bc:	06a4      	lsls	r4, r4, #26
   828be:	d444      	bmi.n	8294a <udd_ep_run+0xb2>
	ptr_job = &udd_ep_job[ep - 1];
   828c0:	1e45      	subs	r5, r0, #1
			|| ptr_job->stall_requested) {
   828c2:	4e28      	ldr	r6, [pc, #160]	; (82964 <udd_ep_run+0xcc>)
   828c4:	eb05 0c45 	add.w	ip, r5, r5, lsl #1
   828c8:	eb06 0ccc 	add.w	ip, r6, ip, lsl #3
   828cc:	f89c 4014 	ldrb.w	r4, [ip, #20]
   828d0:	006f      	lsls	r7, r5, #1
   828d2:	f014 0e04 	ands.w	lr, r4, #4
   828d6:	d138      	bne.n	8294a <udd_ep_run+0xb2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   828d8:	f3ef 8410 	mrs	r4, PRIMASK
  __ASM volatile ("cpsid i");
   828dc:	b672      	cpsid	i
   828de:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   828e2:	f8df 8084 	ldr.w	r8, [pc, #132]	; 82968 <udd_ep_run+0xd0>
   828e6:	f888 e000 	strb.w	lr, [r8]
	if (ptr_job->busy == true) {
   828ea:	f89c e014 	ldrb.w	lr, [ip, #20]
   828ee:	f01e 0f01 	tst.w	lr, #1
   828f2:	d129      	bne.n	82948 <udd_ep_run+0xb0>
	ptr_job->busy = true;
   828f4:	f89c e014 	ldrb.w	lr, [ip, #20]
   828f8:	f04e 0e01 	orr.w	lr, lr, #1
   828fc:	f88c e014 	strb.w	lr, [ip, #20]
	if (cpu_irq_is_enabled_flags(flags))
   82900:	b92c      	cbnz	r4, 8290e <udd_ep_run+0x76>
		cpu_irq_enable();
   82902:	2401      	movs	r4, #1
   82904:	f888 4000 	strb.w	r4, [r8]
   82908:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   8290c:	b662      	cpsie	i
	ptr_job->buf_cnt = 0;
   8290e:	f04f 0c00 	mov.w	ip, #0
	ptr_job->call_trans = callback;
   82912:	f8dd e018 	ldr.w	lr, [sp, #24]
	ptr_job->buf = buf;
   82916:	197c      	adds	r4, r7, r5
	ptr_job->call_trans = callback;
   82918:	f846 e034 	str.w	lr, [r6, r4, lsl #3]
	ptr_job->buf = buf;
   8291c:	eb06 04c4 	add.w	r4, r6, r4, lsl #3
	ptr_job->buf_size = buf_size;
   82920:	e9c4 2301 	strd	r2, r3, [r4, #4]
	ptr_job->buf_load = 0;
   82924:	e9c4 cc03 	strd	ip, ip, [r4, #12]
	ptr_job->b_shortpacket = b_shortpacket || (buf_size == 0);
   82928:	b911      	cbnz	r1, 82930 <udd_ep_run+0x98>
   8292a:	fab3 f183 	clz	r1, r3
   8292e:	0949      	lsrs	r1, r1, #5
   82930:	197b      	adds	r3, r7, r5
   82932:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
   82936:	7d1a      	ldrb	r2, [r3, #20]
   82938:	f361 0241 	bfi	r2, r1, #1, #1
   8293c:	751a      	strb	r2, [r3, #20]
	udd_ep_trans_done(ep);
   8293e:	490b      	ldr	r1, [pc, #44]	; (8296c <udd_ep_run+0xd4>)
   82940:	4788      	blx	r1
	return true;
   82942:	2001      	movs	r0, #1
}
   82944:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	if (cpu_irq_is_enabled_flags(flags))
   82948:	b124      	cbz	r4, 82954 <udd_ep_run+0xbc>
		return false;
   8294a:	2000      	movs	r0, #0
}
   8294c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return false;
   82950:	2000      	movs	r0, #0
}
   82952:	4770      	bx	lr
		cpu_irq_enable();
   82954:	2301      	movs	r3, #1
   82956:	f888 3000 	strb.w	r3, [r8]
   8295a:	f3bf 8f5f 	dmb	sy
   8295e:	b662      	cpsie	i
		return false; // Job already on going
   82960:	4620      	mov	r0, r4
}
   82962:	e7f3      	b.n	8294c <udd_ep_run+0xb4>
   82964:	200036ac 	.word	0x200036ac
   82968:	20000368 	.word	0x20000368
   8296c:	00081869 	.word	0x00081869

00082970 <udd_ep_alloc>:
{
   82970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	ep = ep & USB_EP_ADDR_MASK;
   82974:	f000 040f 	and.w	r4, r0, #15
	if (ep > USB_DEVICE_MAX_EP) {
   82978:	2c02      	cmp	r4, #2
{
   8297a:	b083      	sub	sp, #12
	if (ep > USB_DEVICE_MAX_EP) {
   8297c:	f200 8135 	bhi.w	82bea <udd_ep_alloc+0x27a>
	if (Is_udd_endpoint_enabled(ep)) {
   82980:	ea4f 1c44 	mov.w	ip, r4, lsl #5
   82984:	f10c 2340 	add.w	r3, ip, #1073758208	; 0x40004000
   82988:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   8298c:	4680      	mov	r8, r0
   8298e:	f8d3 010c 	ldr.w	r0, [r3, #268]	; 0x10c
   82992:	46a6      	mov	lr, r4
   82994:	f010 0001 	ands.w	r0, r0, #1
   82998:	f040 8127 	bne.w	82bea <udd_ep_alloc+0x27a>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   8299c:	f001 0503 	and.w	r5, r1, #3
   829a0:	2d02      	cmp	r5, #2
   829a2:	f000 812e 	beq.w	82c02 <udd_ep_alloc+0x292>
   829a6:	2d03      	cmp	r5, #3
   829a8:	f000 8123 	beq.w	82bf2 <udd_ep_alloc+0x282>
   829ac:	2d01      	cmp	r5, #1
   829ae:	f040 811d 	bne.w	82bec <udd_ep_alloc+0x27c>
		b_iso_hbw = Is_udd_endpoint_high_bw_supported(ep);
   829b2:	2c00      	cmp	r4, #0
   829b4:	f000 811d 	beq.w	82bf2 <udd_ep_alloc+0x282>
		switch(MaxEndpointSize & (0x3u << 11)) {
   829b8:	f402 53c0 	and.w	r3, r2, #6144	; 0x1800
   829bc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
   829c0:	f000 8121 	beq.w	82c06 <udd_ep_alloc+0x296>
			nb_tran = 3;
   829c4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
   829c8:	bf08      	it	eq
   829ca:	2503      	moveq	r5, #3
		MaxEndpointSize &= ~(0x3u << 11);
   829cc:	2740      	movs	r7, #64	; 0x40
   829ce:	2601      	movs	r6, #1
   829d0:	f422 52c0 	bic.w	r2, r2, #6144	; 0x1800
   829d4:	b292      	uxth	r2, r2
	udd_configure_endpoint(ep, bmAttributes, (b_dir_in ? 1 : 0),
   829d6:	f10c 2c40 	add.w	ip, ip, #1073758208	; 0x40004000
   829da:	0109      	lsls	r1, r1, #4
   829dc:	f50c 2c20 	add.w	ip, ip, #655360	; 0xa0000
   829e0:	f001 0330 	and.w	r3, r1, #48	; 0x30
   829e4:	f8dc 1100 	ldr.w	r1, [ip, #256]	; 0x100
   829e8:	f018 0f80 	tst.w	r8, #128	; 0x80
   829ec:	f421 717f 	bic.w	r1, r1, #1020	; 0x3fc
   829f0:	bf14      	ite	ne
   829f2:	f04f 0808 	movne.w	r8, #8
   829f6:	f04f 0800 	moveq.w	r8, #0
   829fa:	f021 0103 	bic.w	r1, r1, #3
   829fe:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
   82a02:	ea41 0103 	orr.w	r1, r1, r3
   82a06:	f080 80fa 	bcs.w	82bfe <udd_ep_alloc+0x28e>
   82a0a:	2a08      	cmp	r2, #8
   82a0c:	bf38      	it	cc
   82a0e:	2208      	movcc	r2, #8
   82a10:	0053      	lsls	r3, r2, #1
   82a12:	3b01      	subs	r3, #1
   82a14:	fab3 f383 	clz	r3, r3
   82a18:	f1c3 031c 	rsb	r3, r3, #28
   82a1c:	4339      	orrs	r1, r7
   82a1e:	ea41 0808 	orr.w	r8, r1, r8
   82a22:	b106      	cbz	r6, 82a26 <udd_ep_alloc+0xb6>
   82a24:	0228      	lsls	r0, r5, #8
   82a26:	ea43 0308 	orr.w	r3, r3, r8
   82a2a:	4318      	orrs	r0, r3
   82a2c:	f8cc 0100 	str.w	r0, [ip, #256]	; 0x100
	if (!Is_udd_endpoint_mapped(ep)) {
   82a30:	f8dc 3100 	ldr.w	r3, [ip, #256]	; 0x100
   82a34:	2b00      	cmp	r3, #0
   82a36:	f280 80d8 	bge.w	82bea <udd_ep_alloc+0x27a>
	udd_enable_endpoint(ep);
   82a3a:	2701      	movs	r7, #1
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   82a3c:	2302      	movs	r3, #2
	ep_allocated = 0;
   82a3e:	2500      	movs	r5, #0
		if (Is_udd_endpoint_enabled(i)) {
   82a40:	4e93      	ldr	r6, [pc, #588]	; (82c90 <udd_ep_alloc+0x320>)
	udd_enable_endpoint(ep);
   82a42:	f8cc 7104 	str.w	r7, [ip, #260]	; 0x104
		if (Is_udd_endpoint_enabled(i)) {
   82a46:	eb06 1843 	add.w	r8, r6, r3, lsl #5
   82a4a:	f8d8 110c 	ldr.w	r1, [r8, #268]	; 0x10c
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   82a4e:	1e58      	subs	r0, r3, #1
		if (Is_udd_endpoint_enabled(i)) {
   82a50:	07c9      	lsls	r1, r1, #31
   82a52:	ea4f 1243 	mov.w	r2, r3, lsl #5
   82a56:	d514      	bpl.n	82a82 <udd_ep_alloc+0x112>
   82a58:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
   82a5c:	f502 2220 	add.w	r2, r2, #655360	; 0xa0000
			bank = udd_get_endpoint_bank(i);
   82a60:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
			ep_allocated |=  bank << (i * 2);
   82a64:	005b      	lsls	r3, r3, #1
   82a66:	f3c1 1181 	ubfx	r1, r1, #6, #2
   82a6a:	fa01 f303 	lsl.w	r3, r1, r3
			udd_disable_endpoint(i);
   82a6e:	f8c8 7108 	str.w	r7, [r8, #264]	; 0x108
			ep_allocated |=  bank << (i * 2);
   82a72:	432b      	orrs	r3, r5
   82a74:	b29d      	uxth	r5, r3
			udd_configure_endpoint_bank(i, 0);
   82a76:	f8d2 3100 	ldr.w	r3, [r2, #256]	; 0x100
   82a7a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
   82a7e:	f8c2 3100 	str.w	r3, [r2, #256]	; 0x100
	for (i = USB_DEVICE_MAX_EP; i >= ep; i--) {
   82a82:	b2c3      	uxtb	r3, r0
   82a84:	429c      	cmp	r4, r3
   82a86:	d9de      	bls.n	82a46 <udd_ep_alloc+0xd6>
		bank = (ep_allocated >> (i * 2)) & 0x03;
   82a88:	0063      	lsls	r3, r4, #1
   82a8a:	fa45 f303 	asr.w	r3, r5, r3
		if (bank == 0) {
   82a8e:	f013 0203 	ands.w	r2, r3, #3
   82a92:	d02a      	beq.n	82aea <udd_ep_alloc+0x17a>
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   82a94:	1e63      	subs	r3, r4, #1
		bool b_restart = ptr_job->busy;
   82a96:	4e7f      	ldr	r6, [pc, #508]	; (82c94 <udd_ep_alloc+0x324>)
   82a98:	eb03 0843 	add.w	r8, r3, r3, lsl #1
		udd_enable_endpoint(i);
   82a9c:	f04f 0a01 	mov.w	sl, #1
		bool b_restart = ptr_job->busy;
   82aa0:	eb06 00c8 	add.w	r0, r6, r8, lsl #3
   82aa4:	7d07      	ldrb	r7, [r0, #20]
		udd_configure_endpoint_bank(i, bank);
   82aa6:	f8dc 1100 	ldr.w	r1, [ip, #256]	; 0x100
		ptr_job->busy = false;
   82aaa:	46b9      	mov	r9, r7
		udd_configure_endpoint_bank(i, bank);
   82aac:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
   82ab0:	ea41 1282 	orr.w	r2, r1, r2, lsl #6
   82ab4:	f8cc 2100 	str.w	r2, [ip, #256]	; 0x100
		udd_enable_endpoint(i);
   82ab8:	f8cc a104 	str.w	sl, [ip, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   82abc:	f8dc 2100 	ldr.w	r2, [ip, #256]	; 0x100
		ptr_job->busy = false;
   82ac0:	f36f 0900 	bfc	r9, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   82ac4:	2a00      	cmp	r2, #0
		bool b_restart = ptr_job->busy;
   82ac6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
   82aca:	ea07 070a 	and.w	r7, r7, sl
		ptr_job->busy = false;
   82ace:	f880 9014 	strb.w	r9, [r0, #20]
		bool b_restart = ptr_job->busy;
   82ad2:	fa03 f10a 	lsl.w	r1, r3, sl
		if (!Is_udd_endpoint_mapped(i)) {
   82ad6:	da71      	bge.n	82bbc <udd_ep_alloc+0x24c>
		udd_enable_endpoint_bank_autoswitch(i);
   82ad8:	f8dc 3104 	ldr.w	r3, [ip, #260]	; 0x104
   82adc:	f043 0302 	orr.w	r3, r3, #2
   82ae0:	f8cc 3104 	str.w	r3, [ip, #260]	; 0x104
		if (b_restart) {
   82ae4:	2f00      	cmp	r7, #0
   82ae6:	f040 80a4 	bne.w	82c32 <udd_ep_alloc+0x2c2>
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   82aea:	1c60      	adds	r0, r4, #1
   82aec:	b2c0      	uxtb	r0, r0
   82aee:	2803      	cmp	r0, #3
   82af0:	d05f      	beq.n	82bb2 <udd_ep_alloc+0x242>
		bank = (ep_allocated >> (i * 2)) & 0x03;
   82af2:	0043      	lsls	r3, r0, #1
   82af4:	fa45 f303 	asr.w	r3, r5, r3
		if (bank == 0) {
   82af8:	f013 0103 	ands.w	r1, r3, #3
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   82afc:	4686      	mov	lr, r0
		if (bank == 0) {
   82afe:	d031      	beq.n	82b64 <udd_ep_alloc+0x1f4>
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   82b00:	1e43      	subs	r3, r0, #1
		bool b_restart = ptr_job->busy;
   82b02:	4e64      	ldr	r6, [pc, #400]	; (82c94 <udd_ep_alloc+0x324>)
   82b04:	eb03 0943 	add.w	r9, r3, r3, lsl #1
		udd_enable_endpoint(i);
   82b08:	f04f 0a01 	mov.w	sl, #1
		bool b_restart = ptr_job->busy;
   82b0c:	eb06 07c9 	add.w	r7, r6, r9, lsl #3
   82b10:	f897 c014 	ldrb.w	ip, [r7, #20]
   82b14:	0142      	lsls	r2, r0, #5
		ptr_job->busy = false;
   82b16:	46e0      	mov	r8, ip
   82b18:	f102 2240 	add.w	r2, r2, #1073758208	; 0x40004000
   82b1c:	f502 2220 	add.w	r2, r2, #655360	; 0xa0000
		udd_configure_endpoint_bank(i, bank);
   82b20:	f8d2 b100 	ldr.w	fp, [r2, #256]	; 0x100
		bool b_restart = ptr_job->busy;
   82b24:	ea0c 0c0a 	and.w	ip, ip, sl
		udd_configure_endpoint_bank(i, bank);
   82b28:	f02b 0bc0 	bic.w	fp, fp, #192	; 0xc0
   82b2c:	ea4b 1181 	orr.w	r1, fp, r1, lsl #6
   82b30:	f8c2 1100 	str.w	r1, [r2, #256]	; 0x100
		udd_enable_endpoint(i);
   82b34:	f8c2 a104 	str.w	sl, [r2, #260]	; 0x104
		if (!Is_udd_endpoint_mapped(i)) {
   82b38:	f8d2 a100 	ldr.w	sl, [r2, #256]	; 0x100
		ptr_job->busy = false;
   82b3c:	f36f 0800 	bfc	r8, #0, #1
		if (!Is_udd_endpoint_mapped(i)) {
   82b40:	f1ba 0f00 	cmp.w	sl, #0
		bool b_restart = ptr_job->busy;
   82b44:	ea4f 09c9 	mov.w	r9, r9, lsl #3
		ptr_job->busy = false;
   82b48:	f887 8014 	strb.w	r8, [r7, #20]
		bool b_restart = ptr_job->busy;
   82b4c:	ea4f 0143 	mov.w	r1, r3, lsl #1
		if (!Is_udd_endpoint_mapped(i)) {
   82b50:	da33      	bge.n	82bba <udd_ep_alloc+0x24a>
		udd_enable_endpoint_bank_autoswitch(i);
   82b52:	f8d2 3104 	ldr.w	r3, [r2, #260]	; 0x104
   82b56:	f043 0302 	orr.w	r3, r3, #2
   82b5a:	f8c2 3104 	str.w	r3, [r2, #260]	; 0x104
		if (b_restart) {
   82b5e:	f1bc 0f00 	cmp.w	ip, #0
   82b62:	d152      	bne.n	82c0a <udd_ep_alloc+0x29a>
	for (i = ep; i <= USB_DEVICE_MAX_EP; i++) {
   82b64:	bb2c      	cbnz	r4, 82bb2 <udd_ep_alloc+0x242>
		if (bank == 0) {
   82b66:	f015 0f30 	tst.w	r5, #48	; 0x30
		bank = (ep_allocated >> (i * 2)) & 0x03;
   82b6a:	f3c5 1001 	ubfx	r0, r5, #4, #2
		if (bank == 0) {
   82b6e:	d020      	beq.n	82bb2 <udd_ep_alloc+0x242>
		bool b_restart = ptr_job->busy;
   82b70:	4e48      	ldr	r6, [pc, #288]	; (82c94 <udd_ep_alloc+0x324>)
		udd_configure_endpoint_bank(i, bank);
   82b72:	4a47      	ldr	r2, [pc, #284]	; (82c90 <udd_ep_alloc+0x320>)
		bool b_restart = ptr_job->busy;
   82b74:	f896 302c 	ldrb.w	r3, [r6, #44]	; 0x2c
   82b78:	f003 0501 	and.w	r5, r3, #1
		ptr_job->busy = false;
   82b7c:	f364 0300 	bfi	r3, r4, #0, #1
   82b80:	f886 302c 	strb.w	r3, [r6, #44]	; 0x2c
		udd_enable_endpoint(i);
   82b84:	2301      	movs	r3, #1
		udd_configure_endpoint_bank(i, bank);
   82b86:	f8d2 1140 	ldr.w	r1, [r2, #320]	; 0x140
   82b8a:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
   82b8e:	ea41 1180 	orr.w	r1, r1, r0, lsl #6
   82b92:	f8c2 1140 	str.w	r1, [r2, #320]	; 0x140
		udd_enable_endpoint(i);
   82b96:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
		if (!Is_udd_endpoint_mapped(i)) {
   82b9a:	f8d2 1140 	ldr.w	r1, [r2, #320]	; 0x140
   82b9e:	2900      	cmp	r1, #0
   82ba0:	da72      	bge.n	82c88 <udd_ep_alloc+0x318>
		udd_enable_endpoint_bank_autoswitch(i);
   82ba2:	f8d2 3144 	ldr.w	r3, [r2, #324]	; 0x144
   82ba6:	f043 0302 	orr.w	r3, r3, #2
   82baa:	f8c2 3144 	str.w	r3, [r2, #324]	; 0x144
		if (b_restart) {
   82bae:	2d00      	cmp	r5, #0
   82bb0:	d155      	bne.n	82c5e <udd_ep_alloc+0x2ee>
	return true;
   82bb2:	2001      	movs	r0, #1
}
   82bb4:	b003      	add	sp, #12
   82bb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
		if (!Is_udd_endpoint_mapped(i)) {
   82bba:	4604      	mov	r4, r0
			if (NULL == ptr_job->call_trans) {
   82bbc:	18ca      	adds	r2, r1, r3
   82bbe:	f856 5032 	ldr.w	r5, [r6, r2, lsl #3]
   82bc2:	b195      	cbz	r5, 82bea <udd_ep_alloc+0x27a>
			if (Is_udd_endpoint_in(i)) {
   82bc4:	4a32      	ldr	r2, [pc, #200]	; (82c90 <udd_ep_alloc+0x320>)
   82bc6:	f10e 0e08 	add.w	lr, lr, #8
   82bca:	ea4f 1e4e 	mov.w	lr, lr, lsl #5
   82bce:	f852 200e 	ldr.w	r2, [r2, lr]
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   82bd2:	440b      	add	r3, r1
			if (Is_udd_endpoint_in(i)) {
   82bd4:	0712      	lsls	r2, r2, #28
				i |= USB_EP_DIR_IN;
   82bd6:	bf44      	itt	mi
   82bd8:	f064 047f 	ornmi	r4, r4, #127	; 0x7f
   82bdc:	b2e4      	uxtbmi	r4, r4
			ptr_job->call_trans(UDD_EP_TRANSFER_ABORT,
   82bde:	eb06 06c3 	add.w	r6, r6, r3, lsl #3
   82be2:	4622      	mov	r2, r4
   82be4:	2001      	movs	r0, #1
   82be6:	68f1      	ldr	r1, [r6, #12]
   82be8:	47a8      	blx	r5
			return false;
   82bea:	2000      	movs	r0, #0
}
   82bec:	b003      	add	sp, #12
   82bee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   82bf2:	2740      	movs	r7, #64	; 0x40
	} else if (MaxEndpointSize & (0x3u << 11)) {
   82bf4:	f412 56c0 	ands.w	r6, r2, #6144	; 0x1800
   82bf8:	d1f7      	bne.n	82bea <udd_ep_alloc+0x27a>
	uint8_t nb_bank, bank, nb_tran = 0, i;
   82bfa:	4635      	mov	r5, r6
   82bfc:	e6eb      	b.n	829d6 <udd_ep_alloc+0x66>
   82bfe:	2307      	movs	r3, #7
   82c00:	e70c      	b.n	82a1c <udd_ep_alloc+0xac>
	switch (bmAttributes & USB_EP_TYPE_MASK) {
   82c02:	2780      	movs	r7, #128	; 0x80
   82c04:	e7f6      	b.n	82bf4 <udd_ep_alloc+0x284>
		switch(MaxEndpointSize & (0x3u << 11)) {
   82c06:	2502      	movs	r5, #2
   82c08:	e6e0      	b.n	829cc <udd_ep_alloc+0x5c>
			b_restart = udd_ep_run(i,
   82c0a:	f856 3009 	ldr.w	r3, [r6, r9]
   82c0e:	4e22      	ldr	r6, [pc, #136]	; (82c98 <udd_ep_alloc+0x328>)
   82c10:	9300      	str	r3, [sp, #0]
   82c12:	68b9      	ldr	r1, [r7, #8]
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c14:	e9d7 3203 	ldrd	r3, r2, [r7, #12]
			b_restart = udd_ep_run(i,
   82c18:	4411      	add	r1, r2
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c1a:	1a9a      	subs	r2, r3, r2
			b_restart = udd_ep_run(i,
   82c1c:	1acb      	subs	r3, r1, r3
   82c1e:	6879      	ldr	r1, [r7, #4]
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c20:	60fa      	str	r2, [r7, #12]
			b_restart = udd_ep_run(i,
   82c22:	440a      	add	r2, r1
					ptr_job->b_shortpacket,
   82c24:	7d39      	ldrb	r1, [r7, #20]
			b_restart = udd_ep_run(i,
   82c26:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82c2a:	47b0      	blx	r6
			if (!b_restart) {
   82c2c:	2800      	cmp	r0, #0
   82c2e:	d199      	bne.n	82b64 <udd_ep_alloc+0x1f4>
   82c30:	e7db      	b.n	82bea <udd_ep_alloc+0x27a>
			b_restart = udd_ep_run(i,
   82c32:	f856 3008 	ldr.w	r3, [r6, r8]
   82c36:	4e18      	ldr	r6, [pc, #96]	; (82c98 <udd_ep_alloc+0x328>)
   82c38:	9300      	str	r3, [sp, #0]
   82c3a:	6881      	ldr	r1, [r0, #8]
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c3c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
			b_restart = udd_ep_run(i,
   82c40:	4411      	add	r1, r2
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c42:	1a9a      	subs	r2, r3, r2
			b_restart = udd_ep_run(i,
   82c44:	1acb      	subs	r3, r1, r3
   82c46:	6841      	ldr	r1, [r0, #4]
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c48:	60c2      	str	r2, [r0, #12]
			b_restart = udd_ep_run(i,
   82c4a:	440a      	add	r2, r1
					ptr_job->b_shortpacket,
   82c4c:	7d01      	ldrb	r1, [r0, #20]
			b_restart = udd_ep_run(i,
   82c4e:	4620      	mov	r0, r4
   82c50:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82c54:	47b0      	blx	r6
			if (!b_restart) {
   82c56:	2800      	cmp	r0, #0
   82c58:	f47f af47 	bne.w	82aea <udd_ep_alloc+0x17a>
   82c5c:	e7c5      	b.n	82bea <udd_ep_alloc+0x27a>
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c5e:	e9d6 3109 	ldrd	r3, r1, [r6, #36]	; 0x24
			b_restart = udd_ep_run(i,
   82c62:	e9d6 2407 	ldrd	r2, r4, [r6, #28]
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c66:	1a58      	subs	r0, r3, r1
			b_restart = udd_ep_run(i,
   82c68:	4421      	add	r1, r4
			ptr_job->buf_cnt -= ptr_job->buf_load;
   82c6a:	6270      	str	r0, [r6, #36]	; 0x24
			b_restart = udd_ep_run(i,
   82c6c:	1acb      	subs	r3, r1, r3
   82c6e:	4402      	add	r2, r0
					ptr_job->b_shortpacket,
   82c70:	f896 102c 	ldrb.w	r1, [r6, #44]	; 0x2c
			b_restart = udd_ep_run(i,
   82c74:	69b0      	ldr	r0, [r6, #24]
   82c76:	4c08      	ldr	r4, [pc, #32]	; (82c98 <udd_ep_alloc+0x328>)
   82c78:	9000      	str	r0, [sp, #0]
   82c7a:	f3c1 0140 	ubfx	r1, r1, #1, #1
   82c7e:	2002      	movs	r0, #2
   82c80:	47a0      	blx	r4
			if (!b_restart) {
   82c82:	2800      	cmp	r0, #0
   82c84:	d195      	bne.n	82bb2 <udd_ep_alloc+0x242>
   82c86:	e7b0      	b.n	82bea <udd_ep_alloc+0x27a>
   82c88:	2402      	movs	r4, #2
		udd_ep_job_t *ptr_job = &udd_ep_job[i - 1];
   82c8a:	46a6      	mov	lr, r4
   82c8c:	4621      	mov	r1, r4
   82c8e:	e795      	b.n	82bbc <udd_ep_alloc+0x24c>
   82c90:	400a4000 	.word	0x400a4000
   82c94:	200036ac 	.word	0x200036ac
   82c98:	00082899 	.word	0x00082899

00082c9c <udd_ep_abort>:
	udd_endpoint_dma_set_control(ep_index, 0);
   82c9c:	2100      	movs	r1, #0
   82c9e:	4b26      	ldr	r3, [pc, #152]	; (82d38 <udd_ep_abort+0x9c>)
	uint8_t ep_index = ep & USB_EP_ADDR_MASK;
   82ca0:	f000 020f 	and.w	r2, r0, #15
	udd_endpoint_dma_set_control(ep_index, 0);
   82ca4:	eb03 1302 	add.w	r3, r3, r2, lsl #4
	if (ep & USB_EP_DIR_IN) {
   82ca8:	0600      	lsls	r0, r0, #24
{
   82caa:	b530      	push	{r4, r5, lr}
	udd_endpoint_dma_set_control(ep_index, 0);
   82cac:	6099      	str	r1, [r3, #8]
	if (ep & USB_EP_DIR_IN) {
   82cae:	d428      	bmi.n	82d02 <udd_ep_abort+0x66>
	udd_ep_finish_job(&udd_ep_job[ep - 1], true, ep);
   82cb0:	1e51      	subs	r1, r2, #1
	if (ptr_job->busy == false) {
   82cb2:	4822      	ldr	r0, [pc, #136]	; (82d3c <udd_ep_abort+0xa0>)
   82cb4:	eb01 0341 	add.w	r3, r1, r1, lsl #1
   82cb8:	eb00 04c3 	add.w	r4, r0, r3, lsl #3
   82cbc:	f894 e014 	ldrb.w	lr, [r4, #20]
   82cc0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   82cc4:	f01e 0f01 	tst.w	lr, #1
   82cc8:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   82ccc:	d018      	beq.n	82d00 <udd_ep_abort+0x64>
	if (NULL == ptr_job->call_trans) {
   82cce:	58c5      	ldr	r5, [r0, r3]
	ptr_job->busy = false;
   82cd0:	4673      	mov	r3, lr
   82cd2:	f36f 0300 	bfc	r3, #0, #1
   82cd6:	7523      	strb	r3, [r4, #20]
	if (NULL == ptr_job->call_trans) {
   82cd8:	b195      	cbz	r5, 82d00 <udd_ep_abort+0x64>
	if (Is_udd_endpoint_in(ep_num)) {
   82cda:	4c19      	ldr	r4, [pc, #100]	; (82d40 <udd_ep_abort+0xa4>)
   82cdc:	f102 0308 	add.w	r3, r2, #8
   82ce0:	015b      	lsls	r3, r3, #5
   82ce2:	58e3      	ldr	r3, [r4, r3]
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82ce4:	4461      	add	r1, ip
	if (Is_udd_endpoint_in(ep_num)) {
   82ce6:	071b      	lsls	r3, r3, #28
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82ce8:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
   82cec:	462b      	mov	r3, r5
}
   82cee:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82cf2:	f04f 0001 	mov.w	r0, #1
   82cf6:	6889      	ldr	r1, [r1, #8]
		ep_num |= USB_EP_DIR_IN;
   82cf8:	bf48      	it	mi
   82cfa:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
	ptr_job->call_trans((b_abort) ? UDD_EP_TRANSFER_ABORT :
   82cfe:	4718      	bx	r3
}
   82d00:	bd30      	pop	{r4, r5, pc}
		for(;udd_nb_busy_bank(ep_index);) {
   82d02:	0153      	lsls	r3, r2, #5
   82d04:	f103 2340 	add.w	r3, r3, #1073758208	; 0x40004000
   82d08:	f503 2320 	add.w	r3, r3, #655360	; 0xa0000
   82d0c:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82d10:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   82d14:	d0cc      	beq.n	82cb0 <udd_ep_abort+0x14>
			udd_kill_last_in_bank(ep_index);
   82d16:	f44f 7400 	mov.w	r4, #512	; 0x200
   82d1a:	f503 7c8a 	add.w	ip, r3, #276	; 0x114
   82d1e:	f8cc 4000 	str.w	r4, [ip]
			while(Is_udd_kill_last(ep_index));
   82d22:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82d26:	0589      	lsls	r1, r1, #22
   82d28:	d4fb      	bmi.n	82d22 <udd_ep_abort+0x86>
		for(;udd_nb_busy_bank(ep_index);) {
   82d2a:	f8d3 111c 	ldr.w	r1, [r3, #284]	; 0x11c
   82d2e:	f411 2f40 	tst.w	r1, #786432	; 0xc0000
   82d32:	d1f4      	bne.n	82d1e <udd_ep_abort+0x82>
   82d34:	e7bc      	b.n	82cb0 <udd_ep_abort+0x14>
   82d36:	bf00      	nop
   82d38:	400a4300 	.word	0x400a4300
   82d3c:	200036ac 	.word	0x200036ac
   82d40:	400a4000 	.word	0x400a4000

00082d44 <udd_test_mode_j>:
	udd_enable_hs_test_mode();
   82d44:	4a07      	ldr	r2, [pc, #28]	; (82d64 <udd_test_mode_j+0x20>)
   82d46:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82d4a:	f023 0303 	bic.w	r3, r3, #3
   82d4e:	f043 0302 	orr.w	r3, r3, #2
   82d52:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_j();
   82d56:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82d5a:	f043 0304 	orr.w	r3, r3, #4
   82d5e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82d62:	4770      	bx	lr
   82d64:	400a4000 	.word	0x400a4000

00082d68 <udd_test_mode_k>:
	udd_enable_hs_test_mode();
   82d68:	4a07      	ldr	r2, [pc, #28]	; (82d88 <udd_test_mode_k+0x20>)
   82d6a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82d6e:	f023 0303 	bic.w	r3, r3, #3
   82d72:	f043 0302 	orr.w	r3, r3, #2
   82d76:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
	udd_enable_hs_test_mode_k();
   82d7a:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82d7e:	f043 0308 	orr.w	r3, r3, #8
   82d82:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82d86:	4770      	bx	lr
   82d88:	400a4000 	.word	0x400a4000

00082d8c <udd_test_mode_se0_nak>:
	udd_enable_hs_test_mode();
   82d8c:	4a04      	ldr	r2, [pc, #16]	; (82da0 <udd_test_mode_se0_nak+0x14>)
   82d8e:	f8d2 30e0 	ldr.w	r3, [r2, #224]	; 0xe0
   82d92:	f023 0303 	bic.w	r3, r3, #3
   82d96:	f043 0302 	orr.w	r3, r3, #2
   82d9a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
}
   82d9e:	4770      	bx	lr
   82da0:	400a4000 	.word	0x400a4000

00082da4 <udd_test_mode_packet>:
{
   82da4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82da8:	b08e      	sub	sp, #56	; 0x38
	const uint8_t test_packet[] = {
   82daa:	466d      	mov	r5, sp
	udd_disable_endpoint(0);
   82dac:	f04f 0801 	mov.w	r8, #1
	ptr_src = test_packet;
   82db0:	46ec      	mov	ip, sp
	const uint8_t test_packet[] = {
   82db2:	4e21      	ldr	r6, [pc, #132]	; (82e38 <udd_test_mode_packet+0x94>)
	udd_disable_endpoint(0);
   82db4:	4f21      	ldr	r7, [pc, #132]	; (82e3c <udd_test_mode_packet+0x98>)
	const uint8_t test_packet[] = {
   82db6:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   82db8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   82dba:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   82dbc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   82dbe:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   82dc0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
   82dc2:	e896 0003 	ldmia.w	r6, {r0, r1}
   82dc6:	f845 0b04 	str.w	r0, [r5], #4
   82dca:	7029      	strb	r1, [r5, #0]
	udd_disable_endpoint(0);
   82dcc:	f8c7 8108 	str.w	r8, [r7, #264]	; 0x108
	udd_configure_endpoint(0, // endpoint number: 0
   82dd0:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
   82dd4:	f1cc 5e00 	rsb	lr, ip, #536870912	; 0x20000000
   82dd8:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
   82ddc:	f023 0303 	bic.w	r3, r3, #3
   82de0:	f043 036b 	orr.w	r3, r3, #107	; 0x6b
   82de4:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
	udd_enable_endpoint(0);
   82de8:	f8c7 8104 	str.w	r8, [r7, #260]	; 0x104
	udd_enable_hs_test_mode();
   82dec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
   82df0:	f10d 0435 	add.w	r4, sp, #53	; 0x35
   82df4:	f023 0303 	bic.w	r3, r3, #3
   82df8:	f043 0302 	orr.w	r3, r3, #2
   82dfc:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
	udd_enable_hs_test_mode_packet();
   82e00:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
   82e04:	f50e 1ec0 	add.w	lr, lr, #1572864	; 0x180000
   82e08:	f043 0310 	orr.w	r3, r3, #16
   82e0c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
	for (i = 0; i < sizeof(test_packet); i++) {
   82e10:	eb0c 030e 	add.w	r3, ip, lr
		*ptr_dest++ = *ptr_src++;
   82e14:	f81c 2b01 	ldrb.w	r2, [ip], #1
	for (i = 0; i < sizeof(test_packet); i++) {
   82e18:	45a4      	cmp	ip, r4
		*ptr_dest++ = *ptr_src++;
   82e1a:	701a      	strb	r2, [r3, #0]
	for (i = 0; i < sizeof(test_packet); i++) {
   82e1c:	d1f8      	bne.n	82e10 <udd_test_mode_packet+0x6c>
	udd_ack_in_send(0);
   82e1e:	f44f 6180 	mov.w	r1, #1024	; 0x400
	udd_raise_tx_pkt_ready(0);
   82e22:	f44f 6200 	mov.w	r2, #2048	; 0x800
	udd_ack_in_send(0);
   82e26:	4b05      	ldr	r3, [pc, #20]	; (82e3c <udd_test_mode_packet+0x98>)
   82e28:	f8c3 1118 	str.w	r1, [r3, #280]	; 0x118
	udd_raise_tx_pkt_ready(0);
   82e2c:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114
}
   82e30:	b00e      	add	sp, #56	; 0x38
   82e32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   82e36:	bf00      	nop
   82e38:	0008a89c 	.word	0x0008a89c
   82e3c:	400a4000 	.word	0x400a4000

00082e40 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
   82e40:	3801      	subs	r0, #1
   82e42:	2802      	cmp	r0, #2
   82e44:	d81a      	bhi.n	82e7c <_write+0x3c>
		return -1;
	}

	for (; len != 0; --len) {
   82e46:	b1da      	cbz	r2, 82e80 <_write+0x40>
{
   82e48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   82e4c:	460d      	mov	r5, r1
	for (; len != 0; --len) {
   82e4e:	4614      	mov	r4, r2
   82e50:	4f0c      	ldr	r7, [pc, #48]	; (82e84 <_write+0x44>)
   82e52:	f8df 8034 	ldr.w	r8, [pc, #52]	; 82e88 <_write+0x48>
   82e56:	1c56      	adds	r6, r2, #1
   82e58:	e001      	b.n	82e5e <_write+0x1e>
   82e5a:	3c01      	subs	r4, #1
   82e5c:	d00b      	beq.n	82e76 <_write+0x36>
		if (ptr_put(stdio_base, *ptr++) < 0) {
   82e5e:	6838      	ldr	r0, [r7, #0]
   82e60:	f8d8 3000 	ldr.w	r3, [r8]
   82e64:	f815 1b01 	ldrb.w	r1, [r5], #1
   82e68:	4798      	blx	r3
   82e6a:	2800      	cmp	r0, #0
   82e6c:	eba6 0204 	sub.w	r2, r6, r4
   82e70:	daf3      	bge.n	82e5a <_write+0x1a>
		return -1;
   82e72:	f04f 32ff 	mov.w	r2, #4294967295
			return -1;
		}
		++nChars;
	}
	return nChars;
}
   82e76:	4610      	mov	r0, r2
   82e78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   82e7c:	f04f 32ff 	mov.w	r2, #4294967295
}
   82e80:	4610      	mov	r0, r2
   82e82:	4770      	bx	lr
   82e84:	200036fc 	.word	0x200036fc
   82e88:	200036f8 	.word	0x200036f8

00082e8c <LED_Off>:
 */
void LED_Off(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82e8c:	2811      	cmp	r0, #17
   82e8e:	d004      	beq.n	82e9a <LED_Off+0xe>
   82e90:	2810      	cmp	r0, #16
   82e92:	d002      	beq.n	82e9a <LED_Off+0xe>
   82e94:	284c      	cmp	r0, #76	; 0x4c
   82e96:	d000      	beq.n	82e9a <LED_Off+0xe>
			} else {
				gpio_set_pin_high(led_gpio);
			}
		}
	}
}
   82e98:	4770      	bx	lr
				gpio_set_pin_low(led_gpio);
   82e9a:	4b01      	ldr	r3, [pc, #4]	; (82ea0 <LED_Off+0x14>)
   82e9c:	4718      	bx	r3
   82e9e:	bf00      	nop
   82ea0:	000832d1 	.word	0x000832d1

00082ea4 <LED_On>:
 */
void LED_On(uint32_t led_gpio)
{
	uint32_t i;
	for (i = 0; i < BOARD_NUM_OF_LED; i++) {
		if (led_gpio == LED_DESCRIPTOR[i].ul_port_id) {
   82ea4:	2811      	cmp	r0, #17
   82ea6:	d004      	beq.n	82eb2 <LED_On+0xe>
   82ea8:	2810      	cmp	r0, #16
   82eaa:	d002      	beq.n	82eb2 <LED_On+0xe>
   82eac:	284c      	cmp	r0, #76	; 0x4c
   82eae:	d000      	beq.n	82eb2 <LED_On+0xe>
			} else {
				gpio_set_pin_low(led_gpio);
			}
		}
	}
}
   82eb0:	4770      	bx	lr
				gpio_set_pin_high(led_gpio);
   82eb2:	4b01      	ldr	r3, [pc, #4]	; (82eb8 <LED_On+0x14>)
   82eb4:	4718      	bx	r3
   82eb6:	bf00      	nop
   82eb8:	000832b5 	.word	0x000832b5

00082ebc <Reset_Handler>:

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   82ebc:	4917      	ldr	r1, [pc, #92]	; (82f1c <Reset_Handler+0x60>)
   82ebe:	4818      	ldr	r0, [pc, #96]	; (82f20 <Reset_Handler+0x64>)
{
   82ec0:	b508      	push	{r3, lr}
	if (pSrc != pDest) {
   82ec2:	4281      	cmp	r1, r0
   82ec4:	d009      	beq.n	82eda <Reset_Handler+0x1e>
		for (; pDest < &_erelocate;) {
   82ec6:	4a17      	ldr	r2, [pc, #92]	; (82f24 <Reset_Handler+0x68>)
   82ec8:	4290      	cmp	r0, r2
   82eca:	d206      	bcs.n	82eda <Reset_Handler+0x1e>
			*pDest++ = *pSrc++;
   82ecc:	3a01      	subs	r2, #1
   82ece:	1a12      	subs	r2, r2, r0
   82ed0:	f022 0203 	bic.w	r2, r2, #3
   82ed4:	4b14      	ldr	r3, [pc, #80]	; (82f28 <Reset_Handler+0x6c>)
   82ed6:	3204      	adds	r2, #4
   82ed8:	4798      	blx	r3
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   82eda:	4814      	ldr	r0, [pc, #80]	; (82f2c <Reset_Handler+0x70>)
   82edc:	4a14      	ldr	r2, [pc, #80]	; (82f30 <Reset_Handler+0x74>)
   82ede:	4290      	cmp	r0, r2
   82ee0:	d207      	bcs.n	82ef2 <Reset_Handler+0x36>
		*pDest++ = 0;
   82ee2:	3a01      	subs	r2, #1
   82ee4:	1a12      	subs	r2, r2, r0
   82ee6:	f022 0203 	bic.w	r2, r2, #3
   82eea:	2100      	movs	r1, #0
   82eec:	4b11      	ldr	r3, [pc, #68]	; (82f34 <Reset_Handler+0x78>)
   82eee:	3204      	adds	r2, #4
   82ef0:	4798      	blx	r3
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82ef2:	4b11      	ldr	r3, [pc, #68]	; (82f38 <Reset_Handler+0x7c>)
   82ef4:	4911      	ldr	r1, [pc, #68]	; (82f3c <Reset_Handler+0x80>)
   82ef6:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82efa:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82efe:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82f02:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82f06:	608a      	str	r2, [r1, #8]
	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < IRAM0_ADDR + IRAM_SIZE)) {
   82f08:	d203      	bcs.n	82f12 <Reset_Handler+0x56>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   82f0a:	688b      	ldr	r3, [r1, #8]
   82f0c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   82f10:	608b      	str	r3, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   82f12:	4b0b      	ldr	r3, [pc, #44]	; (82f40 <Reset_Handler+0x84>)
   82f14:	4798      	blx	r3

	/* Branch to main function */
	main();
   82f16:	4b0b      	ldr	r3, [pc, #44]	; (82f44 <Reset_Handler+0x88>)
   82f18:	4798      	blx	r3

	/* Infinite loop */
	while (1);
   82f1a:	e7fe      	b.n	82f1a <Reset_Handler+0x5e>
   82f1c:	0008ad1c 	.word	0x0008ad1c
   82f20:	20000000 	.word	0x20000000
   82f24:	20000da8 	.word	0x20000da8
   82f28:	000838b9 	.word	0x000838b9
   82f2c:	20000da8 	.word	0x20000da8
   82f30:	20003764 	.word	0x20003764
   82f34:	000839a5 	.word	0x000839a5
   82f38:	00080000 	.word	0x00080000
   82f3c:	e000ed00 	.word	0xe000ed00
   82f40:	00083849 	.word	0x00083849
   82f44:	0008022d 	.word	0x0008022d

00082f48 <sysclk_enable_usb>:
 *
 * \param pll_id Source of the USB clock.
 * \param div Actual clock divisor. Must be superior to 0.
 */
void sysclk_enable_usb(void)
{
   82f48:	b510      	push	{r4, lr}
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   82f4a:	203e      	movs	r0, #62	; 0x3e
   82f4c:	4b07      	ldr	r3, [pc, #28]	; (82f6c <sysclk_enable_usb+0x24>)
   82f4e:	4798      	blx	r3
		break;
   82f50:	4c07      	ldr	r4, [pc, #28]	; (82f70 <sysclk_enable_usb+0x28>)
		return pmc_osc_is_ready_main_xtal();
   82f52:	47a0      	blx	r4
   82f54:	2800      	cmp	r0, #0
   82f56:	d0fc      	beq.n	82f52 <sysclk_enable_usb+0xa>

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   82f58:	f44f 0271 	mov.w	r2, #15794176	; 0xf10000
   82f5c:	4b05      	ldr	r3, [pc, #20]	; (82f74 <sysclk_enable_usb+0x2c>)
   82f5e:	4c06      	ldr	r4, [pc, #24]	; (82f78 <sysclk_enable_usb+0x30>)
   82f60:	61da      	str	r2, [r3, #28]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
	} else {
		return pmc_is_locked_upll();
   82f62:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   82f64:	2800      	cmp	r0, #0
   82f66:	d0fc      	beq.n	82f62 <sysclk_enable_usb+0x1a>

	pll_enable_source(CONFIG_PLL1_SOURCE);
	pll_config_defaults(&pllcfg, 1);
	pll_enable(&pllcfg, 1);
	pll_wait_for_lock(1);
}
   82f68:	bd10      	pop	{r4, pc}
   82f6a:	bf00      	nop
   82f6c:	000830b1 	.word	0x000830b1
   82f70:	000830d5 	.word	0x000830d5
   82f74:	400e0400 	.word	0x400e0400
   82f78:	0008313d 	.word	0x0008313d

00082f7c <sysclk_init>:
		pll_disable(1);
	}
}

void sysclk_init(void)
{
   82f7c:	b570      	push	{r4, r5, r6, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   82f7e:	4812      	ldr	r0, [pc, #72]	; (82fc8 <sysclk_init+0x4c>)
   82f80:	4d12      	ldr	r5, [pc, #72]	; (82fcc <sysclk_init+0x50>)
   82f82:	47a8      	blx	r5
		pmc_osc_enable_main_xtal(pmc_us_to_moscxtst(
   82f84:	203e      	movs	r0, #62	; 0x3e
   82f86:	4b12      	ldr	r3, [pc, #72]	; (82fd0 <sysclk_init+0x54>)
   82f88:	4798      	blx	r3
		break;
   82f8a:	4c12      	ldr	r4, [pc, #72]	; (82fd4 <sysclk_init+0x58>)
		return pmc_osc_is_ready_main_xtal();
   82f8c:	47a0      	blx	r4
   82f8e:	2800      	cmp	r0, #0
   82f90:	d0fc      	beq.n	82f8c <sysclk_init+0x10>
#  ifndef CONFIG_PLL1_SOURCE
			pmc_osc_disable_main_xtal();
#  endif
		} else if (CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_XTAL ||
				CONFIG_PLL0_SOURCE == PLL_SRC_MAINCK_BYPASS) {
			pmc_mainck_osc_select(CKGR_MOR_MOSCSEL);
   82f92:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
   82f96:	4b10      	ldr	r3, [pc, #64]	; (82fd8 <sysclk_init+0x5c>)
   82f98:	4798      	blx	r3
			while(!pmc_osc_is_ready_mainck());
   82f9a:	4c10      	ldr	r4, [pc, #64]	; (82fdc <sysclk_init+0x60>)
   82f9c:	47a0      	blx	r4
   82f9e:	2800      	cmp	r0, #0
   82fa0:	d0fc      	beq.n	82f9c <sysclk_init+0x20>
		pmc_disable_pllack(); // Always stop PLL first!
   82fa2:	4b0f      	ldr	r3, [pc, #60]	; (82fe0 <sysclk_init+0x64>)
   82fa4:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   82fa6:	4b0f      	ldr	r3, [pc, #60]	; (82fe4 <sysclk_init+0x68>)
   82fa8:	4a0f      	ldr	r2, [pc, #60]	; (82fe8 <sysclk_init+0x6c>)
   82faa:	4c10      	ldr	r4, [pc, #64]	; (82fec <sysclk_init+0x70>)
   82fac:	629a      	str	r2, [r3, #40]	; 0x28
		return pmc_is_locked_pllack();
   82fae:	47a0      	blx	r4
   82fb0:	2800      	cmp	r0, #0
   82fb2:	d0fc      	beq.n	82fae <sysclk_init+0x32>
		}
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   82fb4:	4b0e      	ldr	r3, [pc, #56]	; (82ff0 <sysclk_init+0x74>)
   82fb6:	2010      	movs	r0, #16
   82fb8:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   82fba:	4b0e      	ldr	r3, [pc, #56]	; (82ff4 <sysclk_init+0x78>)
   82fbc:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   82fbe:	462b      	mov	r3, r5

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   82fc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	system_init_flash(sysclk_get_cpu_hz());
   82fc4:	4800      	ldr	r0, [pc, #0]	; (82fc8 <sysclk_init+0x4c>)
   82fc6:	4718      	bx	r3
   82fc8:	05b8d800 	.word	0x05b8d800
   82fcc:	20000181 	.word	0x20000181
   82fd0:	000830b1 	.word	0x000830b1
   82fd4:	000830d5 	.word	0x000830d5
   82fd8:	000830f5 	.word	0x000830f5
   82fdc:	000830e5 	.word	0x000830e5
   82fe0:	0008311d 	.word	0x0008311d
   82fe4:	400e0400 	.word	0x400e0400
   82fe8:	200f3f01 	.word	0x200f3f01
   82fec:	0008312d 	.word	0x0008312d
   82ff0:	00083055 	.word	0x00083055
   82ff4:	000836a9 	.word	0x000836a9

00082ff8 <pmc_switch_mck_to_mainck>:
 */
uint32_t pmc_switch_mck_to_mainck(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   82ff8:	4915      	ldr	r1, [pc, #84]	; (83050 <pmc_switch_mck_to_mainck+0x58>)
   82ffa:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   82ffc:	f023 0303 	bic.w	r3, r3, #3
   83000:	f043 0301 	orr.w	r3, r3, #1
   83004:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_MAIN_CLK;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   83006:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83008:	071b      	lsls	r3, r3, #28
   8300a:	bf58      	it	pl
   8300c:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   83010:	d502      	bpl.n	83018 <pmc_switch_mck_to_mainck+0x20>
   83012:	e004      	b.n	8301e <pmc_switch_mck_to_mainck+0x26>
			--ul_timeout) {
		if (ul_timeout == 0) {
   83014:	3b01      	subs	r3, #1
   83016:	d016      	beq.n	83046 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   83018:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8301a:	0712      	lsls	r2, r2, #28
   8301c:	d5fa      	bpl.n	83014 <pmc_switch_mck_to_mainck+0x1c>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   8301e:	490c      	ldr	r1, [pc, #48]	; (83050 <pmc_switch_mck_to_mainck+0x58>)
   83020:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83022:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   83026:	4303      	orrs	r3, r0
   83028:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8302a:	6e88      	ldr	r0, [r1, #104]	; 0x68
   8302c:	f010 0008 	ands.w	r0, r0, #8
   83030:	bf08      	it	eq
   83032:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   83036:	d002      	beq.n	8303e <pmc_switch_mck_to_mainck+0x46>
   83038:	e007      	b.n	8304a <pmc_switch_mck_to_mainck+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8303a:	3b01      	subs	r3, #1
   8303c:	d003      	beq.n	83046 <pmc_switch_mck_to_mainck+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8303e:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   83040:	0712      	lsls	r2, r2, #28
   83042:	d5fa      	bpl.n	8303a <pmc_switch_mck_to_mainck+0x42>
			return 1;
		}
	}

	return 0;
}
   83044:	4770      	bx	lr
			return 1;
   83046:	2001      	movs	r0, #1
   83048:	4770      	bx	lr
	return 0;
   8304a:	2000      	movs	r0, #0
   8304c:	4770      	bx	lr
   8304e:	bf00      	nop
   83050:	400e0400 	.word	0x400e0400

00083054 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   83054:	4915      	ldr	r1, [pc, #84]	; (830ac <pmc_switch_mck_to_pllack+0x58>)
   83056:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83058:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   8305c:	4303      	orrs	r3, r0
   8305e:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   83060:	6e8b      	ldr	r3, [r1, #104]	; 0x68
   83062:	071b      	lsls	r3, r3, #28
   83064:	bf58      	it	pl
   83066:	f44f 6300 	movpl.w	r3, #2048	; 0x800
   8306a:	d502      	bpl.n	83072 <pmc_switch_mck_to_pllack+0x1e>
   8306c:	e004      	b.n	83078 <pmc_switch_mck_to_pllack+0x24>
			--ul_timeout) {
		if (ul_timeout == 0) {
   8306e:	3b01      	subs	r3, #1
   83070:	d017      	beq.n	830a2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   83072:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   83074:	0710      	lsls	r0, r2, #28
   83076:	d5fa      	bpl.n	8306e <pmc_switch_mck_to_pllack+0x1a>
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   83078:	490c      	ldr	r1, [pc, #48]	; (830ac <pmc_switch_mck_to_pllack+0x58>)
   8307a:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   8307c:	f023 0303 	bic.w	r3, r3, #3
   83080:	f043 0302 	orr.w	r3, r3, #2
   83084:	630b      	str	r3, [r1, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   83086:	6e88      	ldr	r0, [r1, #104]	; 0x68
   83088:	f010 0008 	ands.w	r0, r0, #8
   8308c:	bf08      	it	eq
   8308e:	f44f 6300 	moveq.w	r3, #2048	; 0x800
   83092:	d002      	beq.n	8309a <pmc_switch_mck_to_pllack+0x46>
   83094:	e007      	b.n	830a6 <pmc_switch_mck_to_pllack+0x52>
			--ul_timeout) {
		if (ul_timeout == 0) {
   83096:	3b01      	subs	r3, #1
   83098:	d003      	beq.n	830a2 <pmc_switch_mck_to_pllack+0x4e>
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   8309a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   8309c:	0712      	lsls	r2, r2, #28
   8309e:	d5fa      	bpl.n	83096 <pmc_switch_mck_to_pllack+0x42>
			return 1;
		}
	}

	return 0;
}
   830a0:	4770      	bx	lr
			return 1;
   830a2:	2001      	movs	r0, #1
   830a4:	4770      	bx	lr
	return 0;
   830a6:	2000      	movs	r0, #0
   830a8:	4770      	bx	lr
   830aa:	bf00      	nop
   830ac:	400e0400 	.word	0x400e0400

000830b0 <pmc_osc_enable_main_xtal>:
 *
 * \param ul_xtal_startup_time Xtal start-up time, in number of slow clocks.
 */
void pmc_osc_enable_main_xtal(uint32_t ul_xtal_startup_time)
{
	uint32_t mor = PMC->CKGR_MOR;
   830b0:	4a07      	ldr	r2, [pc, #28]	; (830d0 <pmc_osc_enable_main_xtal+0x20>)
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   830b2:	0203      	lsls	r3, r0, #8
	uint32_t mor = PMC->CKGR_MOR;
   830b4:	6a11      	ldr	r1, [r2, #32]
			CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   830b6:	b29b      	uxth	r3, r3
	mor &= ~(CKGR_MOR_MOSCXTBY|CKGR_MOR_MOSCXTEN);
   830b8:	f021 0103 	bic.w	r1, r1, #3
	mor |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   830bc:	430b      	orrs	r3, r1
   830be:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   830c2:	f043 0301 	orr.w	r3, r3, #1
	PMC->CKGR_MOR = mor;
   830c6:	6213      	str	r3, [r2, #32]
	/* Wait the main Xtal to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   830c8:	6e93      	ldr	r3, [r2, #104]	; 0x68
   830ca:	07db      	lsls	r3, r3, #31
   830cc:	d5fc      	bpl.n	830c8 <pmc_osc_enable_main_xtal+0x18>
}
   830ce:	4770      	bx	lr
   830d0:	400e0400 	.word	0x400e0400

000830d4 <pmc_osc_is_ready_main_xtal>:
 *
 * \retval 0 main crystal is not ready, otherwise ready.
 */
uint32_t pmc_osc_is_ready_main_xtal(void)
{
	return (PMC->PMC_SR & PMC_SR_MOSCXTS);
   830d4:	4b02      	ldr	r3, [pc, #8]	; (830e0 <pmc_osc_is_ready_main_xtal+0xc>)
   830d6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   830d8:	f000 0001 	and.w	r0, r0, #1
   830dc:	4770      	bx	lr
   830de:	bf00      	nop
   830e0:	400e0400 	.word	0x400e0400

000830e4 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   830e4:	4b02      	ldr	r3, [pc, #8]	; (830f0 <pmc_osc_is_ready_mainck+0xc>)
   830e6:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   830e8:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   830ec:	4770      	bx	lr
   830ee:	bf00      	nop
   830f0:	400e0400 	.word	0x400e0400

000830f4 <pmc_mainck_osc_select>:
 *
 * \param ul_xtal_rc 0 internal RC is selected, otherwise Main Crystal.
 */
void pmc_mainck_osc_select(uint32_t ul_xtal_rc)
{
	uint32_t mor = PMC->CKGR_MOR;
   830f4:	4b08      	ldr	r3, [pc, #32]	; (83118 <pmc_mainck_osc_select+0x24>)
   830f6:	6a1b      	ldr	r3, [r3, #32]
	if (ul_xtal_rc) {
   830f8:	b130      	cbz	r0, 83108 <pmc_mainck_osc_select+0x14>
		mor |=  CKGR_MOR_MOSCSEL;
	} else {
		mor &= ~CKGR_MOR_MOSCSEL;
	}
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   830fa:	4a07      	ldr	r2, [pc, #28]	; (83118 <pmc_mainck_osc_select+0x24>)
		mor |=  CKGR_MOR_MOSCSEL;
   830fc:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   83100:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83104:	6213      	str	r3, [r2, #32]
}
   83106:	4770      	bx	lr
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   83108:	4a03      	ldr	r2, [pc, #12]	; (83118 <pmc_mainck_osc_select+0x24>)
		mor &= ~CKGR_MOR_MOSCSEL;
   8310a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor;
   8310e:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   83112:	6213      	str	r3, [r2, #32]
}
   83114:	4770      	bx	lr
   83116:	bf00      	nop
   83118:	400e0400 	.word	0x400e0400

0008311c <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   8311c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   83120:	4b01      	ldr	r3, [pc, #4]	; (83128 <pmc_disable_pllack+0xc>)
   83122:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
   83124:	4770      	bx	lr
   83126:	bf00      	nop
   83128:	400e0400 	.word	0x400e0400

0008312c <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   8312c:	4b02      	ldr	r3, [pc, #8]	; (83138 <pmc_is_locked_pllack+0xc>)
   8312e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   83130:	f000 0002 	and.w	r0, r0, #2
   83134:	4770      	bx	lr
   83136:	bf00      	nop
   83138:	400e0400 	.word	0x400e0400

0008313c <pmc_is_locked_upll>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   8313c:	4b02      	ldr	r3, [pc, #8]	; (83148 <pmc_is_locked_upll+0xc>)
   8313e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   83140:	f000 0040 	and.w	r0, r0, #64	; 0x40
   83144:	4770      	bx	lr
   83146:	bf00      	nop
   83148:	400e0400 	.word	0x400e0400

0008314c <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   8314c:	281d      	cmp	r0, #29
   8314e:	d80a      	bhi.n	83166 <pmc_enable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   83150:	2301      	movs	r3, #1
   83152:	4a06      	ldr	r2, [pc, #24]	; (8316c <pmc_enable_periph_clk+0x20>)
   83154:	4083      	lsls	r3, r0
   83156:	6991      	ldr	r1, [r2, #24]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   83158:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   8315a:	ea33 0101 	bics.w	r1, r3, r1
   8315e:	d001      	beq.n	83164 <pmc_enable_periph_clk+0x18>
			PMC->PMC_PCER0 = 1 << ul_id;
   83160:	6113      	str	r3, [r2, #16]
   83162:	4770      	bx	lr
}
   83164:	4770      	bx	lr
		return 1;
   83166:	2001      	movs	r0, #1
   83168:	4770      	bx	lr
   8316a:	bf00      	nop
   8316c:	400e0400 	.word	0x400e0400

00083170 <pmc_disable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   83170:	281d      	cmp	r0, #29
   83172:	d80a      	bhi.n	8318a <pmc_disable_periph_clk+0x1a>
		return 1;
	}

	if (ul_id < 32) {
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   83174:	2301      	movs	r3, #1
   83176:	4a06      	ldr	r2, [pc, #24]	; (83190 <pmc_disable_periph_clk+0x20>)
   83178:	4083      	lsls	r3, r0
   8317a:	6991      	ldr	r1, [r2, #24]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
			PMC->PMC_PCDR1 = 1 << ul_id;
		}
#endif
	}
	return 0;
   8317c:	2000      	movs	r0, #0
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   8317e:	ea33 0101 	bics.w	r1, r3, r1
   83182:	d000      	beq.n	83186 <pmc_disable_periph_clk+0x16>
}
   83184:	4770      	bx	lr
			PMC->PMC_PCDR0 = 1 << ul_id;
   83186:	6153      	str	r3, [r2, #20]
   83188:	4770      	bx	lr
		return 1;
   8318a:	2001      	movs	r0, #1
   8318c:	4770      	bx	lr
   8318e:	bf00      	nop
   83190:	400e0400 	.word	0x400e0400

00083194 <pmc_set_fast_startup_input>:
 * \param ul_inputs Wake up inputs to enable.
 */
void pmc_set_fast_startup_input(uint32_t ul_inputs)
{
	ul_inputs &= PMC_FAST_STARTUP_Msk;
	PMC->PMC_FSMR |= ul_inputs;
   83194:	4b03      	ldr	r3, [pc, #12]	; (831a4 <pmc_set_fast_startup_input+0x10>)
	ul_inputs &= PMC_FAST_STARTUP_Msk;
   83196:	f3c0 0012 	ubfx	r0, r0, #0, #19
	PMC->PMC_FSMR |= ul_inputs;
   8319a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   8319c:	4310      	orrs	r0, r2
   8319e:	6718      	str	r0, [r3, #112]	; 0x70
}
   831a0:	4770      	bx	lr
   831a2:	bf00      	nop
   831a4:	400e0400 	.word	0x400e0400

000831a8 <udi_vendor_getsetting>:
	return false; // Not supported request
}

uint8_t udi_vendor_getsetting(void)
{
	return udi_vendor_alternate_setting;
   831a8:	4b01      	ldr	r3, [pc, #4]	; (831b0 <udi_vendor_getsetting+0x8>)
}
   831aa:	7818      	ldrb	r0, [r3, #0]
   831ac:	4770      	bx	lr
   831ae:	bf00      	nop
   831b0:	20003700 	.word	0x20003700

000831b4 <udi_vendor_disable>:
	if (0 == udi_vendor_alternate_setting) {
   831b4:	4b02      	ldr	r3, [pc, #8]	; (831c0 <udi_vendor_disable+0xc>)
   831b6:	781b      	ldrb	r3, [r3, #0]
   831b8:	b103      	cbz	r3, 831bc <udi_vendor_disable+0x8>
}
   831ba:	4770      	bx	lr
		UDI_VENDOR_DISABLE_EXT();
   831bc:	4b01      	ldr	r3, [pc, #4]	; (831c4 <udi_vendor_disable+0x10>)
   831be:	4718      	bx	r3
   831c0:	20003700 	.word	0x20003700
   831c4:	000809c1 	.word	0x000809c1

000831c8 <udi_vendor_setup>:
	if (Udd_setup_is_in()) {
   831c8:	4b08      	ldr	r3, [pc, #32]	; (831ec <udi_vendor_setup+0x24>)
   831ca:	f993 2000 	ldrsb.w	r2, [r3]
   831ce:	781b      	ldrb	r3, [r3, #0]
   831d0:	2a00      	cmp	r2, #0
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   831d2:	f003 0360 	and.w	r3, r3, #96	; 0x60
	if (Udd_setup_is_in()) {
   831d6:	db03      	blt.n	831e0 <udi_vendor_setup+0x18>
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   831d8:	2b40      	cmp	r3, #64	; 0x40
   831da:	d005      	beq.n	831e8 <udi_vendor_setup+0x20>
}
   831dc:	2000      	movs	r0, #0
   831de:	4770      	bx	lr
		if (Udd_setup_type() == USB_REQ_TYPE_VENDOR) {
   831e0:	2b40      	cmp	r3, #64	; 0x40
   831e2:	d1fb      	bne.n	831dc <udi_vendor_setup+0x14>
			return UDI_VENDOR_SETUP_IN_RECEIVED();
   831e4:	4b02      	ldr	r3, [pc, #8]	; (831f0 <udi_vendor_setup+0x28>)
   831e6:	4718      	bx	r3
			return UDI_VENDOR_SETUP_OUT_RECEIVED();
   831e8:	4b02      	ldr	r3, [pc, #8]	; (831f4 <udi_vendor_setup+0x2c>)
   831ea:	4718      	bx	r3
   831ec:	200036e0 	.word	0x200036e0
   831f0:	00080a1d 	.word	0x00080a1d
   831f4:	000809cd 	.word	0x000809cd

000831f8 <udi_vendor_enable>:
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   831f8:	4b06      	ldr	r3, [pc, #24]	; (83214 <udi_vendor_enable+0x1c>)
{
   831fa:	b510      	push	{r4, lr}
	udi_vendor_alternate_setting = udc_get_interface_desc()->bAlternateSetting;
   831fc:	4798      	blx	r3
   831fe:	4a06      	ldr	r2, [pc, #24]	; (83218 <udi_vendor_enable+0x20>)
   83200:	78c3      	ldrb	r3, [r0, #3]
   83202:	7013      	strb	r3, [r2, #0]
	if (0 == udi_vendor_alternate_setting) {
   83204:	b10b      	cbz	r3, 8320a <udi_vendor_enable+0x12>
}
   83206:	2001      	movs	r0, #1
   83208:	bd10      	pop	{r4, pc}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   8320a:	4b04      	ldr	r3, [pc, #16]	; (8321c <udi_vendor_enable+0x24>)
}
   8320c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if (!UDI_VENDOR_ENABLE_EXT()) {
   83210:	4718      	bx	r3
   83212:	bf00      	nop
   83214:	00080d39 	.word	0x00080d39
   83218:	20003700 	.word	0x20003700
   8321c:	00080999 	.word	0x00080999

00083220 <udi_vendor_bulk_in_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_in_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   83220:	b530      	push	{r4, r5, lr}
   83222:	4684      	mov	ip, r0
   83224:	4615      	mov	r5, r2
   83226:	b083      	sub	sp, #12
   83228:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_IN,
   8322a:	4662      	mov	r2, ip
   8322c:	2100      	movs	r1, #0
   8322e:	4c03      	ldr	r4, [pc, #12]	; (8323c <udi_vendor_bulk_in_run+0x1c>)
   83230:	9500      	str	r5, [sp, #0]
   83232:	2081      	movs	r0, #129	; 0x81
   83234:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   83236:	b003      	add	sp, #12
   83238:	bd30      	pop	{r4, r5, pc}
   8323a:	bf00      	nop
   8323c:	00082899 	.word	0x00082899

00083240 <udi_vendor_bulk_out_run>:
 *
 * \return \c 1 if function was successfully done, otherwise \c 0.
 */
bool udi_vendor_bulk_out_run(uint8_t * buf, iram_size_t buf_size,
		udd_callback_trans_t callback)
{
   83240:	b530      	push	{r4, r5, lr}
   83242:	4684      	mov	ip, r0
   83244:	4615      	mov	r5, r2
   83246:	b083      	sub	sp, #12
   83248:	460b      	mov	r3, r1
	return udd_ep_run(UDI_VENDOR_EP_BULK_OUT,
   8324a:	4662      	mov	r2, ip
   8324c:	2100      	movs	r1, #0
   8324e:	4c03      	ldr	r4, [pc, #12]	; (8325c <udi_vendor_bulk_out_run+0x1c>)
   83250:	9500      	str	r5, [sp, #0]
   83252:	2002      	movs	r0, #2
   83254:	47a0      	blx	r4
			false,
			buf,
			buf_size,
			callback);
}
   83256:	b003      	add	sp, #12
   83258:	bd30      	pop	{r4, r5, pc}
   8325a:	bf00      	nop
   8325c:	00082899 	.word	0x00082899

00083260 <efc_perform_command>:
 *
 * \return 0 if successful, otherwise returns an error code.
 */
uint32_t efc_perform_command(Efc *p_efc, uint32_t ul_command,
		uint32_t ul_argument)
{
   83260:	b538      	push	{r3, r4, r5, lr}
	uint32_t result;
	irqflags_t flags;

	/* Unique ID commands are not supported. */
	if (ul_command == EFC_FCMD_STUI || ul_command == EFC_FCMD_SPUI) {
   83262:	f1a1 030e 	sub.w	r3, r1, #14
   83266:	2b01      	cmp	r3, #1
   83268:	d917      	bls.n	8329a <efc_perform_command+0x3a>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   8326a:	f3ef 8510 	mrs	r5, PRIMASK
  __ASM volatile ("cpsid i");
   8326e:	b672      	cpsid	i
   83270:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
   83274:	2300      	movs	r3, #0
   83276:	4c0a      	ldr	r4, [pc, #40]	; (832a0 <efc_perform_command+0x40>)

	flags = cpu_irq_save();
	/* Use RAM Function. */
	result = efc_perform_fcr(p_efc,
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
			EEFC_FCR_FCMD(ul_command));
   83278:	b2c9      	uxtb	r1, r1
   8327a:	7023      	strb	r3, [r4, #0]
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(ul_argument) |
   8327c:	4b09      	ldr	r3, [pc, #36]	; (832a4 <efc_perform_command+0x44>)
   8327e:	ea03 2202 	and.w	r2, r3, r2, lsl #8
   83282:	4311      	orrs	r1, r2
	result = efc_perform_fcr(p_efc,
   83284:	4b08      	ldr	r3, [pc, #32]	; (832a8 <efc_perform_command+0x48>)
   83286:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
   8328a:	4798      	blx	r3
	if (cpu_irq_is_enabled_flags(flags))
   8328c:	b925      	cbnz	r5, 83298 <efc_perform_command+0x38>
		cpu_irq_enable();
   8328e:	2301      	movs	r3, #1
   83290:	7023      	strb	r3, [r4, #0]
   83292:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   83296:	b662      	cpsie	i
	cpu_irq_restore(flags);
	return result;
}
   83298:	bd38      	pop	{r3, r4, r5, pc}
		return EFC_RC_NOT_SUPPORT;
   8329a:	f04f 30ff 	mov.w	r0, #4294967295
}
   8329e:	bd38      	pop	{r3, r4, r5, pc}
   832a0:	20000368 	.word	0x20000368
   832a4:	00ffff00 	.word	0x00ffff00
   832a8:	200000dd 	.word	0x200000dd

000832ac <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   832ac:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   832ae:	4770      	bx	lr

000832b0 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   832b0:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   832b2:	4770      	bx	lr

000832b4 <pio_set_pin_high>:
void pio_set_pin_high(uint32_t ul_pin)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Value to be driven on the I/O line: 1. */
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   832b4:	2201      	movs	r2, #1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832b6:	0943      	lsrs	r3, r0, #5
   832b8:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   832bc:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   832c0:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832c4:	025b      	lsls	r3, r3, #9
	p_pio->PIO_SODR = 1 << (ul_pin & 0x1F);
   832c6:	fa02 f000 	lsl.w	r0, r2, r0
   832ca:	6318      	str	r0, [r3, #48]	; 0x30
}
   832cc:	4770      	bx	lr
   832ce:	bf00      	nop

000832d0 <pio_set_pin_low>:
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   832d0:	2201      	movs	r2, #1
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832d2:	0943      	lsrs	r3, r0, #5
   832d4:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   832d8:	f203 7306 	addw	r3, r3, #1798	; 0x706
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   832dc:	f000 001f 	and.w	r0, r0, #31
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832e0:	025b      	lsls	r3, r3, #9
	p_pio->PIO_CODR = 1 << (ul_pin & 0x1F);
   832e2:	fa02 f000 	lsl.w	r0, r2, r0
   832e6:	6358      	str	r0, [r3, #52]	; 0x34
}
   832e8:	4770      	bx	lr
   832ea:	bf00      	nop

000832ec <pio_configure_pin>:
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832ec:	0943      	lsrs	r3, r0, #5
   832ee:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
	switch (ul_flags & PIO_TYPE_Msk) {
   832f2:	f001 42f0 	and.w	r2, r1, #2013265920	; 0x78000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832f6:	f203 7306 	addw	r3, r3, #1798	; 0x706
	switch (ul_flags & PIO_TYPE_Msk) {
   832fa:	f1b2 5f20 	cmp.w	r2, #671088640	; 0x28000000
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   832fe:	ea4f 2343 	mov.w	r3, r3, lsl #9
	switch (ul_flags & PIO_TYPE_Msk) {
   83302:	d035      	beq.n	83370 <pio_configure_pin+0x84>
{
   83304:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   83306:	d816      	bhi.n	83336 <pio_configure_pin+0x4a>
   83308:	f1b2 6f00 	cmp.w	r2, #134217728	; 0x8000000
   8330c:	d01b      	beq.n	83346 <pio_configure_pin+0x5a>
   8330e:	f1b2 5f80 	cmp.w	r2, #268435456	; 0x10000000
   83312:	d115      	bne.n	83340 <pio_configure_pin+0x54>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   83314:	f04f 0c01 	mov.w	ip, #1
   83318:	f000 001f 	and.w	r0, r0, #31
   8331c:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   83320:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   83322:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   83324:	4310      	orrs	r0, r2
   83326:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   83328:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   8332c:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   8332e:	d01b      	beq.n	83368 <pio_configure_pin+0x7c>
		p_pio->PIO_PUER = ul_mask;
   83330:	665a      	str	r2, [r3, #100]	; 0x64
}
   83332:	bc10      	pop	{r4}
   83334:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   83336:	f001 42e0 	and.w	r2, r1, #1879048192	; 0x70000000
   8333a:	f1b2 5f40 	cmp.w	r2, #805306368	; 0x30000000
   8333e:	d02f      	beq.n	833a0 <pio_configure_pin+0xb4>
   83340:	2000      	movs	r0, #0
}
   83342:	bc10      	pop	{r4}
   83344:	4770      	bx	lr
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   83346:	f04f 0c01 	mov.w	ip, #1
   8334a:	f000 001f 	and.w	r0, r0, #31
   8334e:	fa0c f200 	lsl.w	r2, ip, r0
	p_pio->PIO_IDR = ul_mask;
   83352:	645a      	str	r2, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   83354:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   83356:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   83358:	4020      	ands	r0, r4
   8335a:	ea20 0002 	bic.w	r0, r0, r2
   8335e:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   83360:	ea11 000c 	ands.w	r0, r1, ip
	p_pio->PIO_PDR = ul_mask;
   83364:	605a      	str	r2, [r3, #4]
	if (ul_pull_up_enable) {
   83366:	d1e3      	bne.n	83330 <pio_configure_pin+0x44>
		p_pio->PIO_PUDR = ul_mask;
   83368:	661a      	str	r2, [r3, #96]	; 0x60
	return 1;
   8336a:	4660      	mov	r0, ip
}
   8336c:	bc10      	pop	{r4}
   8336e:	4770      	bx	lr
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   83370:	2201      	movs	r2, #1
   83372:	f000 001f 	and.w	r0, r0, #31
   83376:	4082      	lsls	r2, r0
	if (ul_pull_up_enable) {
   83378:	07c8      	lsls	r0, r1, #31
	p_pio->PIO_IDR = ul_mask;
   8337a:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   8337c:	bf4c      	ite	mi
   8337e:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   83380:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   83382:	f011 0f0a 	tst.w	r1, #10
		p_pio->PIO_IFER = ul_mask;
   83386:	bf14      	ite	ne
   83388:	621a      	strne	r2, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   8338a:	625a      	streq	r2, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   8338c:	0788      	lsls	r0, r1, #30
   8338e:	d422      	bmi.n	833d6 <pio_configure_pin+0xea>
		if (ul_attribute & PIO_DEBOUNCE) {
   83390:	0708      	lsls	r0, r1, #28
			p_pio->PIO_DIFSR = ul_mask;
   83392:	bf48      	it	mi
   83394:	f8c3 2084 	strmi.w	r2, [r3, #132]	; 0x84
	return 1;
   83398:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   8339a:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   8339c:	601a      	str	r2, [r3, #0]
}
   8339e:	4770      	bx	lr
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   833a0:	2201      	movs	r2, #1
   833a2:	f000 001f 	and.w	r0, r0, #31
   833a6:	4082      	lsls	r2, r0
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   833a8:	f001 5c60 	and.w	ip, r1, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   833ac:	f3c1 0480 	ubfx	r4, r1, #2, #1
	if (ul_pull_up_enable) {
   833b0:	07c9      	lsls	r1, r1, #31
	p_pio->PIO_IDR = ul_mask;
   833b2:	645a      	str	r2, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   833b4:	bf4c      	ite	mi
   833b6:	665a      	strmi	r2, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   833b8:	661a      	strpl	r2, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   833ba:	b954      	cbnz	r4, 833d2 <pio_configure_pin+0xe6>
		p_pio->PIO_MDDR = ul_mask;
   833bc:	655a      	str	r2, [r3, #84]	; 0x54
	if (ul_default_level) {
   833be:	f1bc 5f60 	cmp.w	ip, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   833c2:	bf0c      	ite	eq
   833c4:	631a      	streq	r2, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   833c6:	635a      	strne	r2, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   833c8:	611a      	str	r2, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   833ca:	601a      	str	r2, [r3, #0]
	return 1;
   833cc:	2001      	movs	r0, #1
}
   833ce:	bc10      	pop	{r4}
   833d0:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   833d2:	651a      	str	r2, [r3, #80]	; 0x50
   833d4:	e7f3      	b.n	833be <pio_configure_pin+0xd2>
		p_pio->PIO_SCIFSR = ul_mask;
   833d6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	return 1;
   833da:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   833dc:	615a      	str	r2, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   833de:	601a      	str	r2, [r3, #0]
}
   833e0:	4770      	bx	lr
   833e2:	bf00      	nop

000833e4 <pio_configure_pin_group>:
{
   833e4:	4603      	mov	r3, r0
	switch (ul_flags & PIO_TYPE_Msk) {
   833e6:	f002 40f0 	and.w	r0, r2, #2013265920	; 0x78000000
   833ea:	f1b0 5f20 	cmp.w	r0, #671088640	; 0x28000000
   833ee:	d029      	beq.n	83444 <pio_configure_pin_group+0x60>
{
   833f0:	b410      	push	{r4}
	switch (ul_flags & PIO_TYPE_Msk) {
   833f2:	d810      	bhi.n	83416 <pio_configure_pin_group+0x32>
   833f4:	f1b0 6f00 	cmp.w	r0, #134217728	; 0x8000000
   833f8:	d015      	beq.n	83426 <pio_configure_pin_group+0x42>
   833fa:	f1b0 5f80 	cmp.w	r0, #268435456	; 0x10000000
   833fe:	d10f      	bne.n	83420 <pio_configure_pin_group+0x3c>
	p_pio->PIO_IDR = ul_mask;
   83400:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   83402:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   83404:	4308      	orrs	r0, r1
   83406:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   83408:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   8340c:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   8340e:	d015      	beq.n	8343c <pio_configure_pin_group+0x58>
		p_pio->PIO_PUER = ul_mask;
   83410:	6659      	str	r1, [r3, #100]	; 0x64
}
   83412:	bc10      	pop	{r4}
   83414:	4770      	bx	lr
	switch (ul_flags & PIO_TYPE_Msk) {
   83416:	f002 40e0 	and.w	r0, r2, #1879048192	; 0x70000000
   8341a:	f1b0 5f40 	cmp.w	r0, #805306368	; 0x30000000
   8341e:	d025      	beq.n	8346c <pio_configure_pin_group+0x88>
   83420:	2000      	movs	r0, #0
}
   83422:	bc10      	pop	{r4}
   83424:	4770      	bx	lr
	p_pio->PIO_IDR = ul_mask;
   83426:	6459      	str	r1, [r3, #68]	; 0x44
		ul_sr = p_pio->PIO_ABSR;
   83428:	6f18      	ldr	r0, [r3, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   8342a:	6f1c      	ldr	r4, [r3, #112]	; 0x70
   8342c:	4020      	ands	r0, r4
   8342e:	ea20 0001 	bic.w	r0, r0, r1
   83432:	6718      	str	r0, [r3, #112]	; 0x70
	if (ul_pull_up_enable) {
   83434:	f012 0001 	ands.w	r0, r2, #1
	p_pio->PIO_PDR = ul_mask;
   83438:	6059      	str	r1, [r3, #4]
	if (ul_pull_up_enable) {
   8343a:	d1e9      	bne.n	83410 <pio_configure_pin_group+0x2c>
		p_pio->PIO_PUDR = ul_mask;
   8343c:	6619      	str	r1, [r3, #96]	; 0x60
	return 1;
   8343e:	2001      	movs	r0, #1
}
   83440:	bc10      	pop	{r4}
   83442:	4770      	bx	lr
	if (ul_pull_up_enable) {
   83444:	07d0      	lsls	r0, r2, #31
	p_pio->PIO_IDR = ul_mask;
   83446:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   83448:	bf4c      	ite	mi
   8344a:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8344c:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   8344e:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   83452:	bf14      	ite	ne
   83454:	6219      	strne	r1, [r3, #32]
		p_pio->PIO_IFDR = ul_mask;
   83456:	6259      	streq	r1, [r3, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
   83458:	0790      	lsls	r0, r2, #30
   8345a:	d41e      	bmi.n	8349a <pio_configure_pin_group+0xb6>
		if (ul_attribute & PIO_DEBOUNCE) {
   8345c:	0710      	lsls	r0, r2, #28
			p_pio->PIO_DIFSR = ul_mask;
   8345e:	bf48      	it	mi
   83460:	f8c3 1084 	strmi.w	r1, [r3, #132]	; 0x84
	return 1;
   83464:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   83466:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   83468:	6019      	str	r1, [r3, #0]
}
   8346a:	4770      	bx	lr
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   8346c:	f002 5060 	and.w	r0, r2, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
   83470:	f3c2 0480 	ubfx	r4, r2, #2, #1
	if (ul_pull_up_enable) {
   83474:	07d2      	lsls	r2, r2, #31
	p_pio->PIO_IDR = ul_mask;
   83476:	6459      	str	r1, [r3, #68]	; 0x44
		p_pio->PIO_PUER = ul_mask;
   83478:	bf4c      	ite	mi
   8347a:	6659      	strmi	r1, [r3, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
   8347c:	6619      	strpl	r1, [r3, #96]	; 0x60
	if (ul_multidrive_enable) {
   8347e:	b954      	cbnz	r4, 83496 <pio_configure_pin_group+0xb2>
		p_pio->PIO_MDDR = ul_mask;
   83480:	6559      	str	r1, [r3, #84]	; 0x54
	if (ul_default_level) {
   83482:	f1b0 5f60 	cmp.w	r0, #939524096	; 0x38000000
		p_pio->PIO_SODR = ul_mask;
   83486:	bf0c      	ite	eq
   83488:	6319      	streq	r1, [r3, #48]	; 0x30
		p_pio->PIO_CODR = ul_mask;
   8348a:	6359      	strne	r1, [r3, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
   8348c:	6119      	str	r1, [r3, #16]
	p_pio->PIO_PER = ul_mask;
   8348e:	6019      	str	r1, [r3, #0]
	return 1;
   83490:	2001      	movs	r0, #1
}
   83492:	bc10      	pop	{r4}
   83494:	4770      	bx	lr
		p_pio->PIO_MDER = ul_mask;
   83496:	6519      	str	r1, [r3, #80]	; 0x50
   83498:	e7f3      	b.n	83482 <pio_configure_pin_group+0x9e>
		p_pio->PIO_SCIFSR = ul_mask;
   8349a:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
	return 1;
   8349e:	2001      	movs	r0, #1
	p_pio->PIO_ODR = ul_mask;
   834a0:	6159      	str	r1, [r3, #20]
	p_pio->PIO_PER = ul_mask;
   834a2:	6019      	str	r1, [r3, #0]
}
   834a4:	4770      	bx	lr
   834a6:	bf00      	nop

000834a8 <Dummy_Handler>:
/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
   834a8:	e7fe      	b.n	834a8 <Dummy_Handler>
   834aa:	bf00      	nop

000834ac <pmc_is_wakeup_clocks_restored>:
	}
}

bool pmc_is_wakeup_clocks_restored(void)
{
	return !b_is_sleep_clock_used;
   834ac:	4b02      	ldr	r3, [pc, #8]	; (834b8 <pmc_is_wakeup_clocks_restored+0xc>)
   834ae:	7818      	ldrb	r0, [r3, #0]
}
   834b0:	f080 0001 	eor.w	r0, r0, #1
   834b4:	4770      	bx	lr
   834b6:	bf00      	nop
   834b8:	20003701 	.word	0x20003701

000834bc <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   834bc:	4a0c      	ldr	r2, [pc, #48]	; (834f0 <_sbrk+0x34>)
{
   834be:	4603      	mov	r3, r0
	if (heap == NULL) {
   834c0:	6810      	ldr	r0, [r2, #0]
	int ramend = (int)&__ram_end__;
   834c2:	490c      	ldr	r1, [pc, #48]	; (834f4 <_sbrk+0x38>)
	if (heap == NULL) {
   834c4:	b130      	cbz	r0, 834d4 <_sbrk+0x18>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
   834c6:	4403      	add	r3, r0
   834c8:	428b      	cmp	r3, r1
		return (caddr_t) -1;	
   834ca:	bfcc      	ite	gt
   834cc:	f04f 30ff 	movgt.w	r0, #4294967295
	}

	heap += incr;
   834d0:	6013      	strle	r3, [r2, #0]

	return (caddr_t) prev_heap;
}
   834d2:	4770      	bx	lr
{
   834d4:	b410      	push	{r4}
		heap = (unsigned char *)&_end;
   834d6:	4c08      	ldr	r4, [pc, #32]	; (834f8 <_sbrk+0x3c>)
	if (((int)prev_heap + incr) > ramend) {
   834d8:	4423      	add	r3, r4
   834da:	428b      	cmp	r3, r1
		heap = (unsigned char *)&_end;
   834dc:	6014      	str	r4, [r2, #0]
	heap += incr;
   834de:	bfd8      	it	le
   834e0:	6013      	strle	r3, [r2, #0]
		heap = (unsigned char *)&_end;
   834e2:	4620      	mov	r0, r4
		return (caddr_t) -1;	
   834e4:	bfc8      	it	gt
   834e6:	f04f 30ff 	movgt.w	r0, #4294967295
}
   834ea:	bc10      	pop	{r4}
   834ec:	4770      	bx	lr
   834ee:	bf00      	nop
   834f0:	20003704 	.word	0x20003704
   834f4:	20083ffc 	.word	0x20083ffc
   834f8:	20084000 	.word	0x20084000

000834fc <_close>:
}

extern int _close(int file)
{
	return -1;
}
   834fc:	f04f 30ff 	mov.w	r0, #4294967295
   83500:	4770      	bx	lr
   83502:	bf00      	nop

00083504 <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
   83504:	f44f 5300 	mov.w	r3, #8192	; 0x2000

	return 0;
}
   83508:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
   8350a:	604b      	str	r3, [r1, #4]
}
   8350c:	4770      	bx	lr
   8350e:	bf00      	nop

00083510 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
   83510:	2001      	movs	r0, #1
   83512:	4770      	bx	lr

00083514 <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
   83514:	2000      	movs	r0, #0
   83516:	4770      	bx	lr

00083518 <_exit>:

extern void _exit(int status)
{
   83518:	4601      	mov	r1, r0
   8351a:	b508      	push	{r3, lr}
	printf("Exiting with status %d.\n", status);
   8351c:	4801      	ldr	r0, [pc, #4]	; (83524 <_exit+0xc>)
   8351e:	4b02      	ldr	r3, [pc, #8]	; (83528 <_exit+0x10>)
   83520:	4798      	blx	r3

	for (;;);
   83522:	e7fe      	b.n	83522 <_exit+0xa>
   83524:	0008a8d4 	.word	0x0008a8d4
   83528:	00083891 	.word	0x00083891

0008352c <_kill>:
}

extern void _kill(int pid, int sig)
{
	return;
}
   8352c:	4770      	bx	lr
   8352e:	bf00      	nop

00083530 <_getpid>:

extern int _getpid(void)
{
	return -1;
}
   83530:	f04f 30ff 	mov.w	r0, #4294967295
   83534:	4770      	bx	lr
   83536:	bf00      	nop

00083538 <uart_init>:
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   83538:	23ac      	movs	r3, #172	; 0xac
   8353a:	6003      	str	r3, [r0, #0]
{
   8353c:	4602      	mov	r2, r0
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8353e:	e9d1 3000 	ldrd	r3, r0, [r1]
   83542:	fbb3 f3f0 	udiv	r3, r3, r0
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   83546:	f64f 7cfe 	movw	ip, #65534	; 0xfffe
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   8354a:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   8354c:	1e58      	subs	r0, r3, #1
   8354e:	4560      	cmp	r0, ip
   83550:	d80c      	bhi.n	8356c <uart_init+0x34>
{
   83552:	b430      	push	{r4, r5}
	p_uart->UART_BRGR = cd;
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;

	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   83554:	f240 2502 	movw	r5, #514	; 0x202

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   83558:	2450      	movs	r4, #80	; 0x50
	p_uart->UART_BRGR = cd;
   8355a:	6213      	str	r3, [r2, #32]
	p_uart->UART_MR = p_uart_opt->ul_mode;
   8355c:	688b      	ldr	r3, [r1, #8]

	return 0;
   8355e:	2000      	movs	r0, #0
	p_uart->UART_MR = p_uart_opt->ul_mode;
   83560:	6053      	str	r3, [r2, #4]
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   83562:	f8c2 5120 	str.w	r5, [r2, #288]	; 0x120
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   83566:	6014      	str	r4, [r2, #0]
}
   83568:	bc30      	pop	{r4, r5}
   8356a:	4770      	bx	lr
		return 1;
   8356c:	2001      	movs	r0, #1
}
   8356e:	4770      	bx	lr

00083570 <uart_write>:
 *
 * \retval 0 Success.
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
   83570:	4603      	mov	r3, r0
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   83572:	6942      	ldr	r2, [r0, #20]
   83574:	0792      	lsls	r2, r2, #30
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
	return 0;
   83576:	bf46      	itte	mi
   83578:	2000      	movmi	r0, #0
	p_uart->UART_THR = uc_data;
   8357a:	61d9      	strmi	r1, [r3, #28]
		return 1;
   8357c:	2001      	movpl	r0, #1
}
   8357e:	4770      	bx	lr

00083580 <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   83580:	6943      	ldr	r3, [r0, #20]
   83582:	07db      	lsls	r3, r3, #31
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   83584:	bf43      	ittte	mi
   83586:	6983      	ldrmi	r3, [r0, #24]
	return 0;
   83588:	2000      	movmi	r0, #0
	*puc_data = (uint8_t) p_uart->UART_RHR;
   8358a:	700b      	strbmi	r3, [r1, #0]
		return 1;
   8358c:	2001      	movpl	r0, #1
}
   8358e:	4770      	bx	lr

00083590 <board_init>:

void board_init(void)
{
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   83590:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   83594:	4b13      	ldr	r3, [pc, #76]	; (835e4 <board_init+0x54>)
{
   83596:	b570      	push	{r4, r5, r6, lr}
   83598:	200a      	movs	r0, #10
	WDT->WDT_MR = WDT_MR_WDDIS;
   8359a:	655a      	str	r2, [r3, #84]	; 0x54
   8359c:	4d12      	ldr	r5, [pc, #72]	; (835e8 <board_init+0x58>)
   8359e:	47a8      	blx	r5
   835a0:	200b      	movs	r0, #11
   835a2:	47a8      	blx	r5
   835a4:	200c      	movs	r0, #12
   835a6:	47a8      	blx	r5
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   835a8:	4c10      	ldr	r4, [pc, #64]	; (835ec <board_init+0x5c>)
   835aa:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   835ae:	2011      	movs	r0, #17
   835b0:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   835b2:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   835b6:	2010      	movs	r0, #16
   835b8:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   835ba:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   835be:	204c      	movs	r0, #76	; 0x4c
   835c0:	47a0      	blx	r4
	gpio_configure_pin(PIN_PWRON_GPIO, PIN_PWRON_FLAGS);
   835c2:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   835c6:	2053      	movs	r0, #83	; 0x53
   835c8:	47a0      	blx	r4
	board_sram_pwron();
   835ca:	2053      	movs	r0, #83	; 0x53
   835cc:	4b08      	ldr	r3, [pc, #32]	; (835f0 <board_init+0x60>)
   835ce:	4798      	blx	r3
	 */
	ioport_init();

	iopins_normal();

}
   835d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   835d4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   835d8:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
   835dc:	4805      	ldr	r0, [pc, #20]	; (835f4 <board_init+0x64>)
   835de:	4b06      	ldr	r3, [pc, #24]	; (835f8 <board_init+0x68>)
   835e0:	4718      	bx	r3
   835e2:	bf00      	nop
   835e4:	400e1200 	.word	0x400e1200
   835e8:	0008314d 	.word	0x0008314d
   835ec:	000832ed 	.word	0x000832ed
   835f0:	000832d1 	.word	0x000832d1
   835f4:	400e0c00 	.word	0x400e0c00
   835f8:	000833e5 	.word	0x000833e5

000835fc <cpu_irq_enter_critical>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
   835fc:	4b0c      	ldr	r3, [pc, #48]	; (83630 <cpu_irq_enter_critical+0x34>)
   835fe:	681a      	ldr	r2, [r3, #0]
   83600:	b922      	cbnz	r2, 8360c <cpu_irq_enter_critical+0x10>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
   83602:	f3ef 8110 	mrs	r1, PRIMASK
		if (cpu_irq_is_enabled()) {
   83606:	b129      	cbz	r1, 83614 <cpu_irq_enter_critical+0x18>
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
   83608:	490a      	ldr	r1, [pc, #40]	; (83634 <cpu_irq_enter_critical+0x38>)
   8360a:	700a      	strb	r2, [r1, #0]
		}

	}

	cpu_irq_critical_section_counter++;
   8360c:	681a      	ldr	r2, [r3, #0]
   8360e:	3201      	adds	r2, #1
   83610:	601a      	str	r2, [r3, #0]
   83612:	4770      	bx	lr
{
   83614:	b410      	push	{r4}
  __ASM volatile ("cpsid i");
   83616:	b672      	cpsid	i
   83618:	f3bf 8f5f 	dmb	sy
			cpu_irq_prev_interrupt_state = true;
   8361c:	2001      	movs	r0, #1
			cpu_irq_disable();
   8361e:	4c06      	ldr	r4, [pc, #24]	; (83638 <cpu_irq_enter_critical+0x3c>)
			cpu_irq_prev_interrupt_state = true;
   83620:	4a04      	ldr	r2, [pc, #16]	; (83634 <cpu_irq_enter_critical+0x38>)
			cpu_irq_disable();
   83622:	7021      	strb	r1, [r4, #0]
			cpu_irq_prev_interrupt_state = true;
   83624:	7010      	strb	r0, [r2, #0]
	cpu_irq_critical_section_counter++;
   83626:	681a      	ldr	r2, [r3, #0]
   83628:	3201      	adds	r2, #1
   8362a:	601a      	str	r2, [r3, #0]
}
   8362c:	bc10      	pop	{r4}
   8362e:	4770      	bx	lr
   83630:	20003708 	.word	0x20003708
   83634:	2000370c 	.word	0x2000370c
   83638:	20000368 	.word	0x20000368

0008363c <cpu_irq_leave_critical>:
void cpu_irq_leave_critical(void)
{
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
   8363c:	4b07      	ldr	r3, [pc, #28]	; (8365c <cpu_irq_leave_critical+0x20>)
   8363e:	681a      	ldr	r2, [r3, #0]
   83640:	3a01      	subs	r2, #1
   83642:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
   83644:	681b      	ldr	r3, [r3, #0]
   83646:	b943      	cbnz	r3, 8365a <cpu_irq_leave_critical+0x1e>
   83648:	4b05      	ldr	r3, [pc, #20]	; (83660 <cpu_irq_leave_critical+0x24>)
   8364a:	781b      	ldrb	r3, [r3, #0]
   8364c:	b12b      	cbz	r3, 8365a <cpu_irq_leave_critical+0x1e>
		cpu_irq_enable();
   8364e:	2201      	movs	r2, #1
   83650:	4b04      	ldr	r3, [pc, #16]	; (83664 <cpu_irq_leave_critical+0x28>)
   83652:	701a      	strb	r2, [r3, #0]
   83654:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i");
   83658:	b662      	cpsie	i
	}
}
   8365a:	4770      	bx	lr
   8365c:	20003708 	.word	0x20003708
   83660:	2000370c 	.word	0x2000370c
   83664:	20000368 	.word	0x20000368

00083668 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
   83668:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
   8366c:	b9a0      	cbnz	r0, 83698 <_read+0x30>
		return -1;
	}

	for (; len > 0; --len) {
   8366e:	2a00      	cmp	r2, #0
   83670:	4690      	mov	r8, r2
   83672:	dd0d      	ble.n	83690 <_read+0x28>
   83674:	460c      	mov	r4, r1
   83676:	4f0a      	ldr	r7, [pc, #40]	; (836a0 <_read+0x38>)
   83678:	4e0a      	ldr	r6, [pc, #40]	; (836a4 <_read+0x3c>)
   8367a:	188d      	adds	r5, r1, r2
		ptr_get(stdio_base, ptr);
   8367c:	4621      	mov	r1, r4
   8367e:	6838      	ldr	r0, [r7, #0]
   83680:	6833      	ldr	r3, [r6, #0]
		ptr++;
   83682:	3401      	adds	r4, #1
		ptr_get(stdio_base, ptr);
   83684:	4798      	blx	r3
	for (; len > 0; --len) {
   83686:	42ac      	cmp	r4, r5
   83688:	d1f8      	bne.n	8367c <_read+0x14>
		nChars++;
	}
	return nChars;
}
   8368a:	4640      	mov	r0, r8
   8368c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	int nChars = 0;
   83690:	4680      	mov	r8, r0
}
   83692:	4640      	mov	r0, r8
   83694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
   83698:	f04f 38ff 	mov.w	r8, #4294967295
   8369c:	e7f5      	b.n	8368a <_read+0x22>
   8369e:	bf00      	nop
   836a0:	200036fc 	.word	0x200036fc
   836a4:	20003710 	.word	0x20003710

000836a8 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   836a8:	4a32      	ldr	r2, [pc, #200]	; (83774 <SystemCoreClockUpdate+0xcc>)
   836aa:	6b13      	ldr	r3, [r2, #48]	; 0x30
   836ac:	f003 0303 	and.w	r3, r3, #3
   836b0:	2b01      	cmp	r3, #1
   836b2:	d04a      	beq.n	8374a <SystemCoreClockUpdate+0xa2>
   836b4:	3b02      	subs	r3, #2
   836b6:	2b01      	cmp	r3, #1
   836b8:	d83d      	bhi.n	83736 <SystemCoreClockUpdate+0x8e>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   836ba:	6a13      	ldr	r3, [r2, #32]
   836bc:	01d9      	lsls	r1, r3, #7
   836be:	d41d      	bmi.n	836fc <SystemCoreClockUpdate+0x54>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   836c0:	6a12      	ldr	r2, [r2, #32]
   836c2:	f002 0270 	and.w	r2, r2, #112	; 0x70
   836c6:	2a10      	cmp	r2, #16
   836c8:	d04f      	beq.n	8376a <SystemCoreClockUpdate+0xc2>
   836ca:	492b      	ldr	r1, [pc, #172]	; (83778 <SystemCoreClockUpdate+0xd0>)
   836cc:	4b2b      	ldr	r3, [pc, #172]	; (8377c <SystemCoreClockUpdate+0xd4>)
   836ce:	2a20      	cmp	r2, #32
   836d0:	bf18      	it	ne
   836d2:	460b      	movne	r3, r1
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   836d4:	4927      	ldr	r1, [pc, #156]	; (83774 <SystemCoreClockUpdate+0xcc>)
   836d6:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   836d8:	f002 0203 	and.w	r2, r2, #3
   836dc:	2a02      	cmp	r2, #2
   836de:	d014      	beq.n	8370a <SystemCoreClockUpdate+0x62>
   836e0:	4b27      	ldr	r3, [pc, #156]	; (83780 <SystemCoreClockUpdate+0xd8>)
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   836e2:	4924      	ldr	r1, [pc, #144]	; (83774 <SystemCoreClockUpdate+0xcc>)
   836e4:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   836e6:	f002 0270 	and.w	r2, r2, #112	; 0x70
   836ea:	2a70      	cmp	r2, #112	; 0x70
   836ec:	d01c      	beq.n	83728 <SystemCoreClockUpdate+0x80>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   836ee:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   836f0:	f3c2 1202 	ubfx	r2, r2, #4, #3
   836f4:	40d3      	lsrs	r3, r2
   836f6:	4a23      	ldr	r2, [pc, #140]	; (83784 <SystemCoreClockUpdate+0xdc>)
   836f8:	6013      	str	r3, [r2, #0]
			                           PMC_MCKR_PRES_Pos);
	}
}
   836fa:	4770      	bx	lr
   836fc:	4b1f      	ldr	r3, [pc, #124]	; (8377c <SystemCoreClockUpdate+0xd4>)
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   836fe:	491d      	ldr	r1, [pc, #116]	; (83774 <SystemCoreClockUpdate+0xcc>)
   83700:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   83702:	f002 0203 	and.w	r2, r2, #3
   83706:	2a02      	cmp	r2, #2
   83708:	d1ea      	bne.n	836e0 <SystemCoreClockUpdate+0x38>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8370a:	6a88      	ldr	r0, [r1, #40]	; 0x28
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   8370c:	6a8a      	ldr	r2, [r1, #40]	; 0x28
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8370e:	f3c0 410a 	ubfx	r1, r0, #16, #11
   83712:	fb01 3303 	mla	r3, r1, r3, r3
	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   83716:	4917      	ldr	r1, [pc, #92]	; (83774 <SystemCoreClockUpdate+0xcc>)
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >>
   83718:	b2d2      	uxtb	r2, r2
   8371a:	fbb3 f3f2 	udiv	r3, r3, r2
	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   8371e:	6b0a      	ldr	r2, [r1, #48]	; 0x30
   83720:	f002 0270 	and.w	r2, r2, #112	; 0x70
   83724:	2a70      	cmp	r2, #112	; 0x70
   83726:	d1e2      	bne.n	836ee <SystemCoreClockUpdate+0x46>
		SystemCoreClock /= 3U;
   83728:	4a17      	ldr	r2, [pc, #92]	; (83788 <SystemCoreClockUpdate+0xe0>)
   8372a:	fba2 2303 	umull	r2, r3, r2, r3
   8372e:	4a15      	ldr	r2, [pc, #84]	; (83784 <SystemCoreClockUpdate+0xdc>)
   83730:	085b      	lsrs	r3, r3, #1
   83732:	6013      	str	r3, [r2, #0]
}
   83734:	4770      	bx	lr
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   83736:	4b15      	ldr	r3, [pc, #84]	; (8378c <SystemCoreClockUpdate+0xe4>)
   83738:	6a5b      	ldr	r3, [r3, #36]	; 0x24
   8373a:	f013 0f80 	tst.w	r3, #128	; 0x80
   8373e:	bf0c      	ite	eq
   83740:	f44f 43fa 	moveq.w	r3, #32000	; 0x7d00
   83744:	f44f 4300 	movne.w	r3, #32768	; 0x8000
   83748:	e7cb      	b.n	836e2 <SystemCoreClockUpdate+0x3a>
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   8374a:	6a13      	ldr	r3, [r2, #32]
   8374c:	01db      	lsls	r3, r3, #7
   8374e:	d40a      	bmi.n	83766 <SystemCoreClockUpdate+0xbe>
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   83750:	6a12      	ldr	r2, [r2, #32]
   83752:	f002 0270 	and.w	r2, r2, #112	; 0x70
   83756:	2a10      	cmp	r2, #16
   83758:	d009      	beq.n	8376e <SystemCoreClockUpdate+0xc6>
   8375a:	4b08      	ldr	r3, [pc, #32]	; (8377c <SystemCoreClockUpdate+0xd4>)
   8375c:	4906      	ldr	r1, [pc, #24]	; (83778 <SystemCoreClockUpdate+0xd0>)
   8375e:	2a20      	cmp	r2, #32
   83760:	bf18      	it	ne
   83762:	460b      	movne	r3, r1
   83764:	e7bd      	b.n	836e2 <SystemCoreClockUpdate+0x3a>
   83766:	4b05      	ldr	r3, [pc, #20]	; (8377c <SystemCoreClockUpdate+0xd4>)
   83768:	e7bb      	b.n	836e2 <SystemCoreClockUpdate+0x3a>
   8376a:	4b09      	ldr	r3, [pc, #36]	; (83790 <SystemCoreClockUpdate+0xe8>)
   8376c:	e7c7      	b.n	836fe <SystemCoreClockUpdate+0x56>
   8376e:	4b08      	ldr	r3, [pc, #32]	; (83790 <SystemCoreClockUpdate+0xe8>)
   83770:	e7b7      	b.n	836e2 <SystemCoreClockUpdate+0x3a>
   83772:	bf00      	nop
   83774:	400e0400 	.word	0x400e0400
   83778:	003d0900 	.word	0x003d0900
   8377c:	00b71b00 	.word	0x00b71b00
   83780:	0e4e1c00 	.word	0x0e4e1c00
   83784:	200003f8 	.word	0x200003f8
   83788:	aaaaaaab 	.word	0xaaaaaaab
   8378c:	400e1200 	.word	0x400e1200
   83790:	007a1200 	.word	0x007a1200

00083794 <ui_init>:
#include <asf.h>
#include "ui.h"
#include "tasks.h"

void ui_init(void)
{
   83794:	b510      	push	{r4, lr}
	// Initialize LEDs
	LED_Off(LED0_GPIO);
   83796:	2011      	movs	r0, #17
   83798:	4c04      	ldr	r4, [pc, #16]	; (837ac <ui_init+0x18>)
   8379a:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   8379c:	2010      	movs	r0, #16
   8379e:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   837a0:	4623      	mov	r3, r4
}
   837a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	LED_Off(LED2_GPIO);
   837a6:	204c      	movs	r0, #76	; 0x4c
   837a8:	4718      	bx	r3
   837aa:	bf00      	nop
   837ac:	00082e8d 	.word	0x00082e8d

000837b0 <ui_powerdown>:

void ui_powerdown(void)
{
   837b0:	b510      	push	{r4, lr}
	LED_Off(LED0_GPIO);
   837b2:	2011      	movs	r0, #17
   837b4:	4c05      	ldr	r4, [pc, #20]	; (837cc <ui_powerdown+0x1c>)
   837b6:	47a0      	blx	r4
	LED_Off(LED1_GPIO);
   837b8:	2010      	movs	r0, #16
   837ba:	47a0      	blx	r4
	LED_Off(LED2_GPIO);
   837bc:	204c      	movs	r0, #76	; 0x4c
   837be:	47a0      	blx	r4
	
	// Power off FPGA
	board_sram_pwroff();
		
}
   837c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwroff();
   837c4:	2053      	movs	r0, #83	; 0x53
   837c6:	4b02      	ldr	r3, [pc, #8]	; (837d0 <ui_powerdown+0x20>)
   837c8:	4718      	bx	r3
   837ca:	bf00      	nop
   837cc:	00082e8d 	.word	0x00082e8d
   837d0:	000832b5 	.word	0x000832b5

000837d4 <ui_wakeup>:

void ui_wakeup(void)
{
   837d4:	b510      	push	{r4, lr}
	LED_On(LED0_GPIO);
   837d6:	2011      	movs	r0, #17
   837d8:	4b03      	ldr	r3, [pc, #12]	; (837e8 <ui_wakeup+0x14>)
   837da:	4798      	blx	r3
	board_sram_pwron();
}
   837dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	board_sram_pwron();
   837e0:	2053      	movs	r0, #83	; 0x53
   837e2:	4b02      	ldr	r3, [pc, #8]	; (837ec <ui_wakeup+0x18>)
   837e4:	4718      	bx	r3
   837e6:	bf00      	nop
   837e8:	00082ea5 	.word	0x00082ea5
   837ec:	000832d1 	.word	0x000832d1

000837f0 <ui_process>:

void ui_process(uint16_t framenumber)
{
	if ((framenumber % 1000) == 0) {
   837f0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
   837f4:	4b11      	ldr	r3, [pc, #68]	; (8383c <ui_process+0x4c>)
{
   837f6:	b510      	push	{r4, lr}
	if ((framenumber % 1000) == 0) {
   837f8:	fba3 2300 	umull	r2, r3, r3, r0
   837fc:	099b      	lsrs	r3, r3, #6
   837fe:	fb01 0313 	mls	r3, r1, r3, r0
   83802:	b29b      	uxth	r3, r3
{
   83804:	4604      	mov	r4, r0
	if ((framenumber % 1000) == 0) {
   83806:	b1ab      	cbz	r3, 83834 <ui_process+0x44>
		LED_On(LED0_GPIO);
	}
	if ((framenumber % 1000) == 500) {
   83808:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
   8380c:	d003      	beq.n	83816 <ui_process+0x26>
		LED_Off(LED0_GPIO);
	}
	
	if ((framenumber % 512) == 0) {
   8380e:	f3c4 0408 	ubfx	r4, r4, #0, #9
   83812:	b13c      	cbz	r4, 83824 <ui_process+0x34>
		LED_Off(LED1_GPIO);
		LED_Off(LED2_GPIO);
	}
}
   83814:	bd10      	pop	{r4, pc}
		LED_Off(LED0_GPIO);
   83816:	2011      	movs	r0, #17
   83818:	4b09      	ldr	r3, [pc, #36]	; (83840 <ui_process+0x50>)
	if ((framenumber % 512) == 0) {
   8381a:	f3c4 0408 	ubfx	r4, r4, #0, #9
		LED_Off(LED0_GPIO);
   8381e:	4798      	blx	r3
	if ((framenumber % 512) == 0) {
   83820:	2c00      	cmp	r4, #0
   83822:	d1f7      	bne.n	83814 <ui_process+0x24>
		LED_Off(LED1_GPIO);
   83824:	4c06      	ldr	r4, [pc, #24]	; (83840 <ui_process+0x50>)
   83826:	2010      	movs	r0, #16
   83828:	47a0      	blx	r4
		LED_Off(LED2_GPIO);
   8382a:	4623      	mov	r3, r4
}
   8382c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		LED_Off(LED2_GPIO);
   83830:	204c      	movs	r0, #76	; 0x4c
   83832:	4718      	bx	r3
		LED_On(LED0_GPIO);
   83834:	2011      	movs	r0, #17
   83836:	4b03      	ldr	r3, [pc, #12]	; (83844 <ui_process+0x54>)
   83838:	4798      	blx	r3
	if ((framenumber % 1000) == 500) {
   8383a:	e7e8      	b.n	8380e <ui_process+0x1e>
   8383c:	10624dd3 	.word	0x10624dd3
   83840:	00082e8d 	.word	0x00082e8d
   83844:	00082ea5 	.word	0x00082ea5

00083848 <__libc_init_array>:
   83848:	b570      	push	{r4, r5, r6, lr}
   8384a:	4e0d      	ldr	r6, [pc, #52]	; (83880 <__libc_init_array+0x38>)
   8384c:	4d0d      	ldr	r5, [pc, #52]	; (83884 <__libc_init_array+0x3c>)
   8384e:	1b76      	subs	r6, r6, r5
   83850:	10b6      	asrs	r6, r6, #2
   83852:	d006      	beq.n	83862 <__libc_init_array+0x1a>
   83854:	2400      	movs	r4, #0
   83856:	f855 3b04 	ldr.w	r3, [r5], #4
   8385a:	3401      	adds	r4, #1
   8385c:	4798      	blx	r3
   8385e:	42a6      	cmp	r6, r4
   83860:	d1f9      	bne.n	83856 <__libc_init_array+0xe>
   83862:	4e09      	ldr	r6, [pc, #36]	; (83888 <__libc_init_array+0x40>)
   83864:	4d09      	ldr	r5, [pc, #36]	; (8388c <__libc_init_array+0x44>)
   83866:	f007 fa43 	bl	8acf0 <_init>
   8386a:	1b76      	subs	r6, r6, r5
   8386c:	10b6      	asrs	r6, r6, #2
   8386e:	d006      	beq.n	8387e <__libc_init_array+0x36>
   83870:	2400      	movs	r4, #0
   83872:	f855 3b04 	ldr.w	r3, [r5], #4
   83876:	3401      	adds	r4, #1
   83878:	4798      	blx	r3
   8387a:	42a6      	cmp	r6, r4
   8387c:	d1f9      	bne.n	83872 <__libc_init_array+0x2a>
   8387e:	bd70      	pop	{r4, r5, r6, pc}
   83880:	0008acfc 	.word	0x0008acfc
   83884:	0008acfc 	.word	0x0008acfc
   83888:	0008ad04 	.word	0x0008ad04
   8388c:	0008acfc 	.word	0x0008acfc

00083890 <iprintf>:
   83890:	b40f      	push	{r0, r1, r2, r3}
   83892:	b500      	push	{lr}
   83894:	4a07      	ldr	r2, [pc, #28]	; (838b4 <iprintf+0x24>)
   83896:	b083      	sub	sp, #12
   83898:	ab04      	add	r3, sp, #16
   8389a:	6810      	ldr	r0, [r2, #0]
   8389c:	f853 2b04 	ldr.w	r2, [r3], #4
   838a0:	6881      	ldr	r1, [r0, #8]
   838a2:	9301      	str	r3, [sp, #4]
   838a4:	f001 ffc2 	bl	8582c <_vfiprintf_r>
   838a8:	b003      	add	sp, #12
   838aa:	f85d eb04 	ldr.w	lr, [sp], #4
   838ae:	b004      	add	sp, #16
   838b0:	4770      	bx	lr
   838b2:	bf00      	nop
   838b4:	200003fc 	.word	0x200003fc

000838b8 <memcpy>:
   838b8:	4684      	mov	ip, r0
   838ba:	ea41 0300 	orr.w	r3, r1, r0
   838be:	f013 0303 	ands.w	r3, r3, #3
   838c2:	d149      	bne.n	83958 <memcpy+0xa0>
   838c4:	3a40      	subs	r2, #64	; 0x40
   838c6:	d323      	bcc.n	83910 <memcpy+0x58>
   838c8:	680b      	ldr	r3, [r1, #0]
   838ca:	6003      	str	r3, [r0, #0]
   838cc:	684b      	ldr	r3, [r1, #4]
   838ce:	6043      	str	r3, [r0, #4]
   838d0:	688b      	ldr	r3, [r1, #8]
   838d2:	6083      	str	r3, [r0, #8]
   838d4:	68cb      	ldr	r3, [r1, #12]
   838d6:	60c3      	str	r3, [r0, #12]
   838d8:	690b      	ldr	r3, [r1, #16]
   838da:	6103      	str	r3, [r0, #16]
   838dc:	694b      	ldr	r3, [r1, #20]
   838de:	6143      	str	r3, [r0, #20]
   838e0:	698b      	ldr	r3, [r1, #24]
   838e2:	6183      	str	r3, [r0, #24]
   838e4:	69cb      	ldr	r3, [r1, #28]
   838e6:	61c3      	str	r3, [r0, #28]
   838e8:	6a0b      	ldr	r3, [r1, #32]
   838ea:	6203      	str	r3, [r0, #32]
   838ec:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   838ee:	6243      	str	r3, [r0, #36]	; 0x24
   838f0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   838f2:	6283      	str	r3, [r0, #40]	; 0x28
   838f4:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   838f6:	62c3      	str	r3, [r0, #44]	; 0x2c
   838f8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   838fa:	6303      	str	r3, [r0, #48]	; 0x30
   838fc:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   838fe:	6343      	str	r3, [r0, #52]	; 0x34
   83900:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83902:	6383      	str	r3, [r0, #56]	; 0x38
   83904:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83906:	63c3      	str	r3, [r0, #60]	; 0x3c
   83908:	3040      	adds	r0, #64	; 0x40
   8390a:	3140      	adds	r1, #64	; 0x40
   8390c:	3a40      	subs	r2, #64	; 0x40
   8390e:	d2db      	bcs.n	838c8 <memcpy+0x10>
   83910:	3230      	adds	r2, #48	; 0x30
   83912:	d30b      	bcc.n	8392c <memcpy+0x74>
   83914:	680b      	ldr	r3, [r1, #0]
   83916:	6003      	str	r3, [r0, #0]
   83918:	684b      	ldr	r3, [r1, #4]
   8391a:	6043      	str	r3, [r0, #4]
   8391c:	688b      	ldr	r3, [r1, #8]
   8391e:	6083      	str	r3, [r0, #8]
   83920:	68cb      	ldr	r3, [r1, #12]
   83922:	60c3      	str	r3, [r0, #12]
   83924:	3010      	adds	r0, #16
   83926:	3110      	adds	r1, #16
   83928:	3a10      	subs	r2, #16
   8392a:	d2f3      	bcs.n	83914 <memcpy+0x5c>
   8392c:	320c      	adds	r2, #12
   8392e:	d305      	bcc.n	8393c <memcpy+0x84>
   83930:	f851 3b04 	ldr.w	r3, [r1], #4
   83934:	f840 3b04 	str.w	r3, [r0], #4
   83938:	3a04      	subs	r2, #4
   8393a:	d2f9      	bcs.n	83930 <memcpy+0x78>
   8393c:	3204      	adds	r2, #4
   8393e:	d008      	beq.n	83952 <memcpy+0x9a>
   83940:	07d2      	lsls	r2, r2, #31
   83942:	bf1c      	itt	ne
   83944:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83948:	f800 3b01 	strbne.w	r3, [r0], #1
   8394c:	d301      	bcc.n	83952 <memcpy+0x9a>
   8394e:	880b      	ldrh	r3, [r1, #0]
   83950:	8003      	strh	r3, [r0, #0]
   83952:	4660      	mov	r0, ip
   83954:	4770      	bx	lr
   83956:	bf00      	nop
   83958:	2a08      	cmp	r2, #8
   8395a:	d313      	bcc.n	83984 <memcpy+0xcc>
   8395c:	078b      	lsls	r3, r1, #30
   8395e:	d0b1      	beq.n	838c4 <memcpy+0xc>
   83960:	f010 0303 	ands.w	r3, r0, #3
   83964:	d0ae      	beq.n	838c4 <memcpy+0xc>
   83966:	f1c3 0304 	rsb	r3, r3, #4
   8396a:	1ad2      	subs	r2, r2, r3
   8396c:	07db      	lsls	r3, r3, #31
   8396e:	bf1c      	itt	ne
   83970:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83974:	f800 3b01 	strbne.w	r3, [r0], #1
   83978:	d3a4      	bcc.n	838c4 <memcpy+0xc>
   8397a:	f831 3b02 	ldrh.w	r3, [r1], #2
   8397e:	f820 3b02 	strh.w	r3, [r0], #2
   83982:	e79f      	b.n	838c4 <memcpy+0xc>
   83984:	3a04      	subs	r2, #4
   83986:	d3d9      	bcc.n	8393c <memcpy+0x84>
   83988:	3a01      	subs	r2, #1
   8398a:	f811 3b01 	ldrb.w	r3, [r1], #1
   8398e:	f800 3b01 	strb.w	r3, [r0], #1
   83992:	d2f9      	bcs.n	83988 <memcpy+0xd0>
   83994:	780b      	ldrb	r3, [r1, #0]
   83996:	7003      	strb	r3, [r0, #0]
   83998:	784b      	ldrb	r3, [r1, #1]
   8399a:	7043      	strb	r3, [r0, #1]
   8399c:	788b      	ldrb	r3, [r1, #2]
   8399e:	7083      	strb	r3, [r0, #2]
   839a0:	4660      	mov	r0, ip
   839a2:	4770      	bx	lr

000839a4 <memset>:
   839a4:	0783      	lsls	r3, r0, #30
   839a6:	b530      	push	{r4, r5, lr}
   839a8:	d048      	beq.n	83a3c <memset+0x98>
   839aa:	1e54      	subs	r4, r2, #1
   839ac:	2a00      	cmp	r2, #0
   839ae:	d03f      	beq.n	83a30 <memset+0x8c>
   839b0:	4603      	mov	r3, r0
   839b2:	b2ca      	uxtb	r2, r1
   839b4:	e001      	b.n	839ba <memset+0x16>
   839b6:	3c01      	subs	r4, #1
   839b8:	d33a      	bcc.n	83a30 <memset+0x8c>
   839ba:	f803 2b01 	strb.w	r2, [r3], #1
   839be:	079d      	lsls	r5, r3, #30
   839c0:	d1f9      	bne.n	839b6 <memset+0x12>
   839c2:	2c03      	cmp	r4, #3
   839c4:	d92d      	bls.n	83a22 <memset+0x7e>
   839c6:	b2cd      	uxtb	r5, r1
   839c8:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   839cc:	2c0f      	cmp	r4, #15
   839ce:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   839d2:	d936      	bls.n	83a42 <memset+0x9e>
   839d4:	f1a4 0210 	sub.w	r2, r4, #16
   839d8:	f022 0c0f 	bic.w	ip, r2, #15
   839dc:	f103 0e20 	add.w	lr, r3, #32
   839e0:	44e6      	add	lr, ip
   839e2:	ea4f 1c12 	mov.w	ip, r2, lsr #4
   839e6:	f103 0210 	add.w	r2, r3, #16
   839ea:	e942 5504 	strd	r5, r5, [r2, #-16]
   839ee:	e942 5502 	strd	r5, r5, [r2, #-8]
   839f2:	3210      	adds	r2, #16
   839f4:	4572      	cmp	r2, lr
   839f6:	d1f8      	bne.n	839ea <memset+0x46>
   839f8:	f10c 0201 	add.w	r2, ip, #1
   839fc:	f014 0f0c 	tst.w	r4, #12
   83a00:	eb03 1202 	add.w	r2, r3, r2, lsl #4
   83a04:	f004 0c0f 	and.w	ip, r4, #15
   83a08:	d013      	beq.n	83a32 <memset+0x8e>
   83a0a:	f1ac 0304 	sub.w	r3, ip, #4
   83a0e:	f023 0303 	bic.w	r3, r3, #3
   83a12:	3304      	adds	r3, #4
   83a14:	4413      	add	r3, r2
   83a16:	f842 5b04 	str.w	r5, [r2], #4
   83a1a:	4293      	cmp	r3, r2
   83a1c:	d1fb      	bne.n	83a16 <memset+0x72>
   83a1e:	f00c 0403 	and.w	r4, ip, #3
   83a22:	b12c      	cbz	r4, 83a30 <memset+0x8c>
   83a24:	b2ca      	uxtb	r2, r1
   83a26:	441c      	add	r4, r3
   83a28:	f803 2b01 	strb.w	r2, [r3], #1
   83a2c:	429c      	cmp	r4, r3
   83a2e:	d1fb      	bne.n	83a28 <memset+0x84>
   83a30:	bd30      	pop	{r4, r5, pc}
   83a32:	4664      	mov	r4, ip
   83a34:	4613      	mov	r3, r2
   83a36:	2c00      	cmp	r4, #0
   83a38:	d1f4      	bne.n	83a24 <memset+0x80>
   83a3a:	e7f9      	b.n	83a30 <memset+0x8c>
   83a3c:	4603      	mov	r3, r0
   83a3e:	4614      	mov	r4, r2
   83a40:	e7bf      	b.n	839c2 <memset+0x1e>
   83a42:	461a      	mov	r2, r3
   83a44:	46a4      	mov	ip, r4
   83a46:	e7e0      	b.n	83a0a <memset+0x66>

00083a48 <setbuf>:
   83a48:	2900      	cmp	r1, #0
   83a4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
   83a4e:	bf0c      	ite	eq
   83a50:	2202      	moveq	r2, #2
   83a52:	2200      	movne	r2, #0
   83a54:	f000 b800 	b.w	83a58 <setvbuf>

00083a58 <setvbuf>:
   83a58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83a5c:	4c69      	ldr	r4, [pc, #420]	; (83c04 <setvbuf+0x1ac>)
   83a5e:	460e      	mov	r6, r1
   83a60:	f8d4 8000 	ldr.w	r8, [r4]
   83a64:	4617      	mov	r7, r2
   83a66:	4604      	mov	r4, r0
   83a68:	461d      	mov	r5, r3
   83a6a:	b083      	sub	sp, #12
   83a6c:	f1b8 0f00 	cmp.w	r8, #0
   83a70:	d003      	beq.n	83a7a <setvbuf+0x22>
   83a72:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   83a76:	2b00      	cmp	r3, #0
   83a78:	d077      	beq.n	83b6a <setvbuf+0x112>
   83a7a:	2f02      	cmp	r7, #2
   83a7c:	d005      	beq.n	83a8a <setvbuf+0x32>
   83a7e:	2f01      	cmp	r7, #1
   83a80:	f200 80ac 	bhi.w	83bdc <setvbuf+0x184>
   83a84:	2d00      	cmp	r5, #0
   83a86:	f2c0 80a9 	blt.w	83bdc <setvbuf+0x184>
   83a8a:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83a8c:	07da      	lsls	r2, r3, #31
   83a8e:	d552      	bpl.n	83b36 <setvbuf+0xde>
   83a90:	4621      	mov	r1, r4
   83a92:	4640      	mov	r0, r8
   83a94:	f003 fee0 	bl	87858 <_fflush_r>
   83a98:	6b21      	ldr	r1, [r4, #48]	; 0x30
   83a9a:	b141      	cbz	r1, 83aae <setvbuf+0x56>
   83a9c:	f104 0340 	add.w	r3, r4, #64	; 0x40
   83aa0:	4299      	cmp	r1, r3
   83aa2:	d002      	beq.n	83aaa <setvbuf+0x52>
   83aa4:	4640      	mov	r0, r8
   83aa6:	f004 f887 	bl	87bb8 <_free_r>
   83aaa:	2300      	movs	r3, #0
   83aac:	6323      	str	r3, [r4, #48]	; 0x30
   83aae:	2300      	movs	r3, #0
   83ab0:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   83ab4:	61a3      	str	r3, [r4, #24]
   83ab6:	f01c 0f80 	tst.w	ip, #128	; 0x80
   83aba:	6063      	str	r3, [r4, #4]
   83abc:	d164      	bne.n	83b88 <setvbuf+0x130>
   83abe:	f42c 6c4a 	bic.w	ip, ip, #3232	; 0xca0
   83ac2:	f02c 0c03 	bic.w	ip, ip, #3
   83ac6:	2f02      	cmp	r7, #2
   83ac8:	f8a4 c00c 	strh.w	ip, [r4, #12]
   83acc:	d06a      	beq.n	83ba4 <setvbuf+0x14c>
   83ace:	ab01      	add	r3, sp, #4
   83ad0:	4621      	mov	r1, r4
   83ad2:	4640      	mov	r0, r8
   83ad4:	466a      	mov	r2, sp
   83ad6:	f004 fb8d 	bl	881f4 <__swhatbuf_r>
   83ada:	89a3      	ldrh	r3, [r4, #12]
   83adc:	4318      	orrs	r0, r3
   83ade:	81a0      	strh	r0, [r4, #12]
   83ae0:	2d00      	cmp	r5, #0
   83ae2:	d02f      	beq.n	83b44 <setvbuf+0xec>
   83ae4:	2e00      	cmp	r6, #0
   83ae6:	d02e      	beq.n	83b46 <setvbuf+0xee>
   83ae8:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   83aec:	2b00      	cmp	r3, #0
   83aee:	d038      	beq.n	83b62 <setvbuf+0x10a>
   83af0:	9b00      	ldr	r3, [sp, #0]
   83af2:	e9c4 6504 	strd	r6, r5, [r4, #16]
   83af6:	42ab      	cmp	r3, r5
   83af8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   83afc:	6026      	str	r6, [r4, #0]
   83afe:	bf1c      	itt	ne
   83b00:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
   83b04:	81a3      	strhne	r3, [r4, #12]
   83b06:	2f01      	cmp	r7, #1
   83b08:	bf04      	itt	eq
   83b0a:	f043 0301 	orreq.w	r3, r3, #1
   83b0e:	81a3      	strheq	r3, [r4, #12]
   83b10:	b29a      	uxth	r2, r3
   83b12:	f013 0308 	ands.w	r3, r3, #8
   83b16:	d02c      	beq.n	83b72 <setvbuf+0x11a>
   83b18:	07d1      	lsls	r1, r2, #31
   83b1a:	d55d      	bpl.n	83bd8 <setvbuf+0x180>
   83b1c:	2100      	movs	r1, #0
   83b1e:	426d      	negs	r5, r5
   83b20:	61a5      	str	r5, [r4, #24]
   83b22:	6e65      	ldr	r5, [r4, #100]	; 0x64
   83b24:	60a1      	str	r1, [r4, #8]
   83b26:	f015 0501 	ands.w	r5, r5, #1
   83b2a:	d027      	beq.n	83b7c <setvbuf+0x124>
   83b2c:	2500      	movs	r5, #0
   83b2e:	4628      	mov	r0, r5
   83b30:	b003      	add	sp, #12
   83b32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83b36:	89a3      	ldrh	r3, [r4, #12]
   83b38:	059b      	lsls	r3, r3, #22
   83b3a:	d4a9      	bmi.n	83a90 <setvbuf+0x38>
   83b3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83b3e:	f004 fae5 	bl	8810c <__retarget_lock_acquire_recursive>
   83b42:	e7a5      	b.n	83a90 <setvbuf+0x38>
   83b44:	9d00      	ldr	r5, [sp, #0]
   83b46:	4628      	mov	r0, r5
   83b48:	f004 fb84 	bl	88254 <malloc>
   83b4c:	4606      	mov	r6, r0
   83b4e:	2800      	cmp	r0, #0
   83b50:	d047      	beq.n	83be2 <setvbuf+0x18a>
   83b52:	89a3      	ldrh	r3, [r4, #12]
   83b54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   83b58:	81a3      	strh	r3, [r4, #12]
   83b5a:	f8d8 3038 	ldr.w	r3, [r8, #56]	; 0x38
   83b5e:	2b00      	cmp	r3, #0
   83b60:	d1c6      	bne.n	83af0 <setvbuf+0x98>
   83b62:	4640      	mov	r0, r8
   83b64:	f003 feac 	bl	878c0 <__sinit>
   83b68:	e7c2      	b.n	83af0 <setvbuf+0x98>
   83b6a:	4640      	mov	r0, r8
   83b6c:	f003 fea8 	bl	878c0 <__sinit>
   83b70:	e783      	b.n	83a7a <setvbuf+0x22>
   83b72:	60a3      	str	r3, [r4, #8]
   83b74:	6e65      	ldr	r5, [r4, #100]	; 0x64
   83b76:	f015 0501 	ands.w	r5, r5, #1
   83b7a:	d1d7      	bne.n	83b2c <setvbuf+0xd4>
   83b7c:	0593      	lsls	r3, r2, #22
   83b7e:	d524      	bpl.n	83bca <setvbuf+0x172>
   83b80:	4628      	mov	r0, r5
   83b82:	b003      	add	sp, #12
   83b84:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83b88:	4640      	mov	r0, r8
   83b8a:	6921      	ldr	r1, [r4, #16]
   83b8c:	f004 f814 	bl	87bb8 <_free_r>
   83b90:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   83b94:	2f02      	cmp	r7, #2
   83b96:	f42c 6c4a 	bic.w	ip, ip, #3232	; 0xca0
   83b9a:	f02c 0c03 	bic.w	ip, ip, #3
   83b9e:	f8a4 c00c 	strh.w	ip, [r4, #12]
   83ba2:	d194      	bne.n	83ace <setvbuf+0x76>
   83ba4:	2500      	movs	r5, #0
   83ba6:	2100      	movs	r1, #0
   83ba8:	2201      	movs	r2, #1
   83baa:	f104 0343 	add.w	r3, r4, #67	; 0x43
   83bae:	6023      	str	r3, [r4, #0]
   83bb0:	6123      	str	r3, [r4, #16]
   83bb2:	6e63      	ldr	r3, [r4, #100]	; 0x64
   83bb4:	f04c 0c02 	orr.w	ip, ip, #2
   83bb8:	07d8      	lsls	r0, r3, #31
   83bba:	f8a4 c00c 	strh.w	ip, [r4, #12]
   83bbe:	60a1      	str	r1, [r4, #8]
   83bc0:	6162      	str	r2, [r4, #20]
   83bc2:	d4dd      	bmi.n	83b80 <setvbuf+0x128>
   83bc4:	f41c 7f00 	tst.w	ip, #512	; 0x200
   83bc8:	d1da      	bne.n	83b80 <setvbuf+0x128>
   83bca:	6da0      	ldr	r0, [r4, #88]	; 0x58
   83bcc:	f004 faa0 	bl	88110 <__retarget_lock_release_recursive>
   83bd0:	4628      	mov	r0, r5
   83bd2:	b003      	add	sp, #12
   83bd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83bd8:	60a5      	str	r5, [r4, #8]
   83bda:	e7cb      	b.n	83b74 <setvbuf+0x11c>
   83bdc:	f04f 35ff 	mov.w	r5, #4294967295
   83be0:	e7ce      	b.n	83b80 <setvbuf+0x128>
   83be2:	f8dd 9000 	ldr.w	r9, [sp]
   83be6:	45a9      	cmp	r9, r5
   83be8:	d004      	beq.n	83bf4 <setvbuf+0x19c>
   83bea:	4648      	mov	r0, r9
   83bec:	f004 fb32 	bl	88254 <malloc>
   83bf0:	4606      	mov	r6, r0
   83bf2:	b920      	cbnz	r0, 83bfe <setvbuf+0x1a6>
   83bf4:	f04f 35ff 	mov.w	r5, #4294967295
   83bf8:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
   83bfc:	e7d3      	b.n	83ba6 <setvbuf+0x14e>
   83bfe:	464d      	mov	r5, r9
   83c00:	e7a7      	b.n	83b52 <setvbuf+0xfa>
   83c02:	bf00      	nop
   83c04:	200003fc 	.word	0x200003fc

00083c08 <sprintf>:
   83c08:	b40e      	push	{r1, r2, r3}
   83c0a:	b530      	push	{r4, r5, lr}
   83c0c:	4604      	mov	r4, r0
   83c0e:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   83c12:	b09c      	sub	sp, #112	; 0x70
   83c14:	4a0b      	ldr	r2, [pc, #44]	; (83c44 <sprintf+0x3c>)
   83c16:	ab1f      	add	r3, sp, #124	; 0x7c
   83c18:	490b      	ldr	r1, [pc, #44]	; (83c48 <sprintf+0x40>)
   83c1a:	9205      	str	r2, [sp, #20]
   83c1c:	f853 2b04 	ldr.w	r2, [r3], #4
   83c20:	6808      	ldr	r0, [r1, #0]
   83c22:	a902      	add	r1, sp, #8
   83c24:	e9cd 3401 	strd	r3, r4, [sp, #4]
   83c28:	9507      	str	r5, [sp, #28]
   83c2a:	9504      	str	r5, [sp, #16]
   83c2c:	9406      	str	r4, [sp, #24]
   83c2e:	f000 f86f 	bl	83d10 <_svfprintf_r>
   83c32:	2200      	movs	r2, #0
   83c34:	9b02      	ldr	r3, [sp, #8]
   83c36:	701a      	strb	r2, [r3, #0]
   83c38:	b01c      	add	sp, #112	; 0x70
   83c3a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   83c3e:	b003      	add	sp, #12
   83c40:	4770      	bx	lr
   83c42:	bf00      	nop
   83c44:	ffff0208 	.word	0xffff0208
   83c48:	200003fc 	.word	0x200003fc

00083c4c <strlen>:
   83c4c:	f020 0103 	bic.w	r1, r0, #3
   83c50:	f010 0003 	ands.w	r0, r0, #3
   83c54:	f1c0 0000 	rsb	r0, r0, #0
   83c58:	f851 3b04 	ldr.w	r3, [r1], #4
   83c5c:	f100 0c04 	add.w	ip, r0, #4
   83c60:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   83c64:	f06f 0200 	mvn.w	r2, #0
   83c68:	bf1c      	itt	ne
   83c6a:	fa22 f20c 	lsrne.w	r2, r2, ip
   83c6e:	4313      	orrne	r3, r2
   83c70:	f04f 0c01 	mov.w	ip, #1
   83c74:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   83c78:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   83c7c:	eba3 020c 	sub.w	r2, r3, ip
   83c80:	ea22 0203 	bic.w	r2, r2, r3
   83c84:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   83c88:	bf04      	itt	eq
   83c8a:	f851 3b04 	ldreq.w	r3, [r1], #4
   83c8e:	3004      	addeq	r0, #4
   83c90:	d0f4      	beq.n	83c7c <strlen+0x30>
   83c92:	f1c2 0100 	rsb	r1, r2, #0
   83c96:	ea02 0201 	and.w	r2, r2, r1
   83c9a:	fab2 f282 	clz	r2, r2
   83c9e:	f1c2 021f 	rsb	r2, r2, #31
   83ca2:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   83ca6:	4770      	bx	lr

00083ca8 <strncpy>:
   83ca8:	b530      	push	{r4, r5, lr}
   83caa:	ea40 0401 	orr.w	r4, r0, r1
   83cae:	07a3      	lsls	r3, r4, #30
   83cb0:	d122      	bne.n	83cf8 <strncpy+0x50>
   83cb2:	2a03      	cmp	r2, #3
   83cb4:	d920      	bls.n	83cf8 <strncpy+0x50>
   83cb6:	460b      	mov	r3, r1
   83cb8:	4684      	mov	ip, r0
   83cba:	4619      	mov	r1, r3
   83cbc:	f853 5b04 	ldr.w	r5, [r3], #4
   83cc0:	f1a5 3401 	sub.w	r4, r5, #16843009	; 0x1010101
   83cc4:	ea24 0405 	bic.w	r4, r4, r5
   83cc8:	f014 3f80 	tst.w	r4, #2155905152	; 0x80808080
   83ccc:	d115      	bne.n	83cfa <strncpy+0x52>
   83cce:	3a04      	subs	r2, #4
   83cd0:	2a03      	cmp	r2, #3
   83cd2:	4619      	mov	r1, r3
   83cd4:	f84c 5b04 	str.w	r5, [ip], #4
   83cd8:	d8ef      	bhi.n	83cba <strncpy+0x12>
   83cda:	f101 3eff 	add.w	lr, r1, #4294967295
   83cde:	b152      	cbz	r2, 83cf6 <strncpy+0x4e>
   83ce0:	4663      	mov	r3, ip
   83ce2:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
   83ce6:	1e54      	subs	r4, r2, #1
   83ce8:	f803 1b01 	strb.w	r1, [r3], #1
   83cec:	b141      	cbz	r1, 83d00 <strncpy+0x58>
   83cee:	4622      	mov	r2, r4
   83cf0:	469c      	mov	ip, r3
   83cf2:	2a00      	cmp	r2, #0
   83cf4:	d1f4      	bne.n	83ce0 <strncpy+0x38>
   83cf6:	bd30      	pop	{r4, r5, pc}
   83cf8:	4684      	mov	ip, r0
   83cfa:	f101 3eff 	add.w	lr, r1, #4294967295
   83cfe:	e7ee      	b.n	83cde <strncpy+0x36>
   83d00:	4462      	add	r2, ip
   83d02:	2c00      	cmp	r4, #0
   83d04:	d0f7      	beq.n	83cf6 <strncpy+0x4e>
   83d06:	f803 1b01 	strb.w	r1, [r3], #1
   83d0a:	4293      	cmp	r3, r2
   83d0c:	d1fb      	bne.n	83d06 <strncpy+0x5e>
   83d0e:	bd30      	pop	{r4, r5, pc}

00083d10 <_svfprintf_r>:
   83d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83d14:	b0d5      	sub	sp, #340	; 0x154
   83d16:	460c      	mov	r4, r1
   83d18:	910c      	str	r1, [sp, #48]	; 0x30
   83d1a:	4691      	mov	r9, r2
   83d1c:	930e      	str	r3, [sp, #56]	; 0x38
   83d1e:	900a      	str	r0, [sp, #40]	; 0x28
   83d20:	f004 f9ec 	bl	880fc <_localeconv_r>
   83d24:	6803      	ldr	r3, [r0, #0]
   83d26:	4618      	mov	r0, r3
   83d28:	9317      	str	r3, [sp, #92]	; 0x5c
   83d2a:	f7ff ff8f 	bl	83c4c <strlen>
   83d2e:	89a3      	ldrh	r3, [r4, #12]
   83d30:	9016      	str	r0, [sp, #88]	; 0x58
   83d32:	0619      	lsls	r1, r3, #24
   83d34:	d503      	bpl.n	83d3e <_svfprintf_r+0x2e>
   83d36:	6923      	ldr	r3, [r4, #16]
   83d38:	2b00      	cmp	r3, #0
   83d3a:	f000 878f 	beq.w	84c5c <_svfprintf_r+0xf4c>
   83d3e:	2400      	movs	r4, #0
   83d40:	ab2b      	add	r3, sp, #172	; 0xac
   83d42:	4622      	mov	r2, r4
   83d44:	4698      	mov	r8, r3
   83d46:	464d      	mov	r5, r9
   83d48:	e9cd 4429 	strd	r4, r4, [sp, #164]	; 0xa4
   83d4c:	9328      	str	r3, [sp, #160]	; 0xa0
   83d4e:	9412      	str	r4, [sp, #72]	; 0x48
   83d50:	2300      	movs	r3, #0
   83d52:	2400      	movs	r4, #0
   83d54:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   83d58:	782b      	ldrb	r3, [r5, #0]
   83d5a:	e9cd 2219 	strd	r2, r2, [sp, #100]	; 0x64
   83d5e:	e9cd 221b 	strd	r2, r2, [sp, #108]	; 0x6c
   83d62:	9218      	str	r2, [sp, #96]	; 0x60
   83d64:	9208      	str	r2, [sp, #32]
   83d66:	2b00      	cmp	r3, #0
   83d68:	f000 81ce 	beq.w	84108 <_svfprintf_r+0x3f8>
   83d6c:	46aa      	mov	sl, r5
   83d6e:	e004      	b.n	83d7a <_svfprintf_r+0x6a>
   83d70:	f81a 3f01 	ldrb.w	r3, [sl, #1]!
   83d74:	2b00      	cmp	r3, #0
   83d76:	f000 8109 	beq.w	83f8c <_svfprintf_r+0x27c>
   83d7a:	2b25      	cmp	r3, #37	; 0x25
   83d7c:	d1f8      	bne.n	83d70 <_svfprintf_r+0x60>
   83d7e:	ebba 0605 	subs.w	r6, sl, r5
   83d82:	f040 8107 	bne.w	83f94 <_svfprintf_r+0x284>
   83d86:	f89a 3000 	ldrb.w	r3, [sl]
   83d8a:	2b00      	cmp	r3, #0
   83d8c:	f000 81bc 	beq.w	84108 <_svfprintf_r+0x3f8>
   83d90:	2300      	movs	r3, #0
   83d92:	f04f 32ff 	mov.w	r2, #4294967295
   83d96:	f04f 092b 	mov.w	r9, #43	; 0x2b
   83d9a:	2420      	movs	r4, #32
   83d9c:	461f      	mov	r7, r3
   83d9e:	f89a 6001 	ldrb.w	r6, [sl, #1]
   83da2:	9207      	str	r2, [sp, #28]
   83da4:	f10a 0a01 	add.w	sl, sl, #1
   83da8:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   83dac:	9309      	str	r3, [sp, #36]	; 0x24
   83dae:	f10a 0a01 	add.w	sl, sl, #1
   83db2:	f1a6 0320 	sub.w	r3, r6, #32
   83db6:	2b5a      	cmp	r3, #90	; 0x5a
   83db8:	f200 8120 	bhi.w	83ffc <_svfprintf_r+0x2ec>
   83dbc:	e8df f013 	tbh	[pc, r3, lsl #1]
   83dc0:	011e02ca 	.word	0x011e02ca
   83dc4:	02c5011e 	.word	0x02c5011e
   83dc8:	011e011e 	.word	0x011e011e
   83dcc:	02a3011e 	.word	0x02a3011e
   83dd0:	011e011e 	.word	0x011e011e
   83dd4:	02f3006a 	.word	0x02f3006a
   83dd8:	0247011e 	.word	0x0247011e
   83ddc:	011e02d9 	.word	0x011e02d9
   83de0:	005b02d4 	.word	0x005b02d4
   83de4:	005b005b 	.word	0x005b005b
   83de8:	005b005b 	.word	0x005b005b
   83dec:	005b005b 	.word	0x005b005b
   83df0:	005b005b 	.word	0x005b005b
   83df4:	011e011e 	.word	0x011e011e
   83df8:	011e011e 	.word	0x011e011e
   83dfc:	011e011e 	.word	0x011e011e
   83e00:	01b0011e 	.word	0x01b0011e
   83e04:	020b011e 	.word	0x020b011e
   83e08:	01b0007a 	.word	0x01b0007a
   83e0c:	01b001b0 	.word	0x01b001b0
   83e10:	011e011e 	.word	0x011e011e
   83e14:	011e011e 	.word	0x011e011e
   83e18:	011e029e 	.word	0x011e029e
   83e1c:	00b6011e 	.word	0x00b6011e
   83e20:	011e011e 	.word	0x011e011e
   83e24:	0219011e 	.word	0x0219011e
   83e28:	024c011e 	.word	0x024c011e
   83e2c:	011e011e 	.word	0x011e011e
   83e30:	011e073f 	.word	0x011e073f
   83e34:	011e011e 	.word	0x011e011e
   83e38:	011e011e 	.word	0x011e011e
   83e3c:	011e011e 	.word	0x011e011e
   83e40:	01b0011e 	.word	0x01b0011e
   83e44:	020b011e 	.word	0x020b011e
   83e48:	01b0007c 	.word	0x01b0007c
   83e4c:	01b001b0 	.word	0x01b001b0
   83e50:	007c0291 	.word	0x007c0291
   83e54:	011e0075 	.word	0x011e0075
   83e58:	011e0284 	.word	0x011e0284
   83e5c:	00b80270 	.word	0x00b80270
   83e60:	0075025e 	.word	0x0075025e
   83e64:	0219011e 	.word	0x0219011e
   83e68:	071c0072 	.word	0x071c0072
   83e6c:	011e011e 	.word	0x011e011e
   83e70:	011e071f 	.word	0x011e071f
   83e74:	0072      	.short	0x0072
   83e76:	2200      	movs	r2, #0
   83e78:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83e7c:	f81a 6b01 	ldrb.w	r6, [sl], #1
   83e80:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   83e84:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   83e88:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   83e8c:	2b09      	cmp	r3, #9
   83e8e:	d9f5      	bls.n	83e7c <_svfprintf_r+0x16c>
   83e90:	9209      	str	r2, [sp, #36]	; 0x24
   83e92:	e78e      	b.n	83db2 <_svfprintf_r+0xa2>
   83e94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83e96:	f853 2b04 	ldr.w	r2, [r3], #4
   83e9a:	2a00      	cmp	r2, #0
   83e9c:	9209      	str	r2, [sp, #36]	; 0x24
   83e9e:	930e      	str	r3, [sp, #56]	; 0x38
   83ea0:	f2c0 81d2 	blt.w	84248 <_svfprintf_r+0x538>
   83ea4:	f89a 6000 	ldrb.w	r6, [sl]
   83ea8:	e781      	b.n	83dae <_svfprintf_r+0x9e>
   83eaa:	f89a 6000 	ldrb.w	r6, [sl]
   83eae:	f047 0720 	orr.w	r7, r7, #32
   83eb2:	e77c      	b.n	83dae <_svfprintf_r+0x9e>
   83eb4:	f047 0710 	orr.w	r7, r7, #16
   83eb8:	06ba      	lsls	r2, r7, #26
   83eba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83ebc:	f140 817d 	bpl.w	841ba <_svfprintf_r+0x4aa>
   83ec0:	3307      	adds	r3, #7
   83ec2:	f023 0307 	bic.w	r3, r3, #7
   83ec6:	461a      	mov	r2, r3
   83ec8:	685b      	ldr	r3, [r3, #4]
   83eca:	f852 4b08 	ldr.w	r4, [r2], #8
   83ece:	4699      	mov	r9, r3
   83ed0:	920e      	str	r2, [sp, #56]	; 0x38
   83ed2:	2b00      	cmp	r3, #0
   83ed4:	f2c0 857f 	blt.w	849d6 <_svfprintf_r+0xcc6>
   83ed8:	9b07      	ldr	r3, [sp, #28]
   83eda:	3301      	adds	r3, #1
   83edc:	f001 8039 	beq.w	84f52 <_svfprintf_r+0x1242>
   83ee0:	ea54 0309 	orrs.w	r3, r4, r9
   83ee4:	f027 0b80 	bic.w	fp, r7, #128	; 0x80
   83ee8:	f000 8505 	beq.w	848f6 <_svfprintf_r+0xbe6>
   83eec:	2c0a      	cmp	r4, #10
   83eee:	f179 0300 	sbcs.w	r3, r9, #0
   83ef2:	f080 8793 	bcs.w	84e1c <_svfprintf_r+0x110c>
   83ef6:	2301      	movs	r3, #1
   83ef8:	465f      	mov	r7, fp
   83efa:	3430      	adds	r4, #48	; 0x30
   83efc:	f88d 414f 	strb.w	r4, [sp, #335]	; 0x14f
   83f00:	930b      	str	r3, [sp, #44]	; 0x2c
   83f02:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83f06:	9a07      	ldr	r2, [sp, #28]
   83f08:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83f0a:	2300      	movs	r3, #0
   83f0c:	428a      	cmp	r2, r1
   83f0e:	bfb8      	it	lt
   83f10:	460a      	movlt	r2, r1
   83f12:	9206      	str	r2, [sp, #24]
   83f14:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   83f18:	930d      	str	r3, [sp, #52]	; 0x34
   83f1a:	930f      	str	r3, [sp, #60]	; 0x3c
   83f1c:	9313      	str	r3, [sp, #76]	; 0x4c
   83f1e:	9310      	str	r3, [sp, #64]	; 0x40
   83f20:	2a00      	cmp	r2, #0
   83f22:	d07c      	beq.n	8401e <_svfprintf_r+0x30e>
   83f24:	9b06      	ldr	r3, [sp, #24]
   83f26:	3301      	adds	r3, #1
   83f28:	9306      	str	r3, [sp, #24]
   83f2a:	e078      	b.n	8401e <_svfprintf_r+0x30e>
   83f2c:	f047 0710 	orr.w	r7, r7, #16
   83f30:	f017 0920 	ands.w	r9, r7, #32
   83f34:	f000 8132 	beq.w	8419c <_svfprintf_r+0x48c>
   83f38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   83f3a:	3307      	adds	r3, #7
   83f3c:	f023 0307 	bic.w	r3, r3, #7
   83f40:	f8d3 9004 	ldr.w	r9, [r3, #4]
   83f44:	f853 4b08 	ldr.w	r4, [r3], #8
   83f48:	930e      	str	r3, [sp, #56]	; 0x38
   83f4a:	2300      	movs	r3, #0
   83f4c:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   83f50:	2200      	movs	r2, #0
   83f52:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   83f56:	9a07      	ldr	r2, [sp, #28]
   83f58:	1c51      	adds	r1, r2, #1
   83f5a:	f000 822a 	beq.w	843b2 <_svfprintf_r+0x6a2>
   83f5e:	ea54 0109 	orrs.w	r1, r4, r9
   83f62:	f02b 0780 	bic.w	r7, fp, #128	; 0x80
   83f66:	f040 8223 	bne.w	843b0 <_svfprintf_r+0x6a0>
   83f6a:	2a00      	cmp	r2, #0
   83f6c:	f041 802b 	bne.w	84fc6 <_svfprintf_r+0x12b6>
   83f70:	2b00      	cmp	r3, #0
   83f72:	f040 84c5 	bne.w	84900 <_svfprintf_r+0xbf0>
   83f76:	f01b 0301 	ands.w	r3, fp, #1
   83f7a:	930b      	str	r3, [sp, #44]	; 0x2c
   83f7c:	f000 8554 	beq.w	84a28 <_svfprintf_r+0xd18>
   83f80:	2330      	movs	r3, #48	; 0x30
   83f82:	f20d 154f 	addw	r5, sp, #335	; 0x14f
   83f86:	f88d 314f 	strb.w	r3, [sp, #335]	; 0x14f
   83f8a:	e7bc      	b.n	83f06 <_svfprintf_r+0x1f6>
   83f8c:	ebba 0605 	subs.w	r6, sl, r5
   83f90:	f000 80ba 	beq.w	84108 <_svfprintf_r+0x3f8>
   83f94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   83f96:	e9c8 5600 	strd	r5, r6, [r8]
   83f9a:	4433      	add	r3, r6
   83f9c:	932a      	str	r3, [sp, #168]	; 0xa8
   83f9e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   83fa0:	3301      	adds	r3, #1
   83fa2:	2b07      	cmp	r3, #7
   83fa4:	9329      	str	r3, [sp, #164]	; 0xa4
   83fa6:	dc05      	bgt.n	83fb4 <_svfprintf_r+0x2a4>
   83fa8:	f108 0808 	add.w	r8, r8, #8
   83fac:	9b08      	ldr	r3, [sp, #32]
   83fae:	4433      	add	r3, r6
   83fb0:	9308      	str	r3, [sp, #32]
   83fb2:	e6e8      	b.n	83d86 <_svfprintf_r+0x76>
   83fb4:	990c      	ldr	r1, [sp, #48]	; 0x30
   83fb6:	980a      	ldr	r0, [sp, #40]	; 0x28
   83fb8:	aa28      	add	r2, sp, #160	; 0xa0
   83fba:	f005 fb07 	bl	895cc <__ssprint_r>
   83fbe:	b980      	cbnz	r0, 83fe2 <_svfprintf_r+0x2d2>
   83fc0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   83fc4:	e7f2      	b.n	83fac <_svfprintf_r+0x29c>
   83fc6:	990c      	ldr	r1, [sp, #48]	; 0x30
   83fc8:	980a      	ldr	r0, [sp, #40]	; 0x28
   83fca:	aa28      	add	r2, sp, #160	; 0xa0
   83fcc:	f005 fafe 	bl	895cc <__ssprint_r>
   83fd0:	2800      	cmp	r0, #0
   83fd2:	f000 808a 	beq.w	840ea <_svfprintf_r+0x3da>
   83fd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   83fd8:	b11b      	cbz	r3, 83fe2 <_svfprintf_r+0x2d2>
   83fda:	990d      	ldr	r1, [sp, #52]	; 0x34
   83fdc:	980a      	ldr	r0, [sp, #40]	; 0x28
   83fde:	f003 fdeb 	bl	87bb8 <_free_r>
   83fe2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   83fe4:	899b      	ldrh	r3, [r3, #12]
   83fe6:	f013 0f40 	tst.w	r3, #64	; 0x40
   83fea:	9b08      	ldr	r3, [sp, #32]
   83fec:	bf18      	it	ne
   83fee:	f04f 33ff 	movne.w	r3, #4294967295
   83ff2:	9308      	str	r3, [sp, #32]
   83ff4:	9808      	ldr	r0, [sp, #32]
   83ff6:	b055      	add	sp, #340	; 0x154
   83ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83ffc:	2e00      	cmp	r6, #0
   83ffe:	f000 8083 	beq.w	84108 <_svfprintf_r+0x3f8>
   84002:	2301      	movs	r3, #1
   84004:	2200      	movs	r2, #0
   84006:	f88d 60ec 	strb.w	r6, [sp, #236]	; 0xec
   8400a:	9306      	str	r3, [sp, #24]
   8400c:	ad3b      	add	r5, sp, #236	; 0xec
   8400e:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   84012:	930b      	str	r3, [sp, #44]	; 0x2c
   84014:	920d      	str	r2, [sp, #52]	; 0x34
   84016:	9207      	str	r2, [sp, #28]
   84018:	920f      	str	r2, [sp, #60]	; 0x3c
   8401a:	9213      	str	r2, [sp, #76]	; 0x4c
   8401c:	9210      	str	r2, [sp, #64]	; 0x40
   8401e:	f017 0302 	ands.w	r3, r7, #2
   84022:	d002      	beq.n	8402a <_svfprintf_r+0x31a>
   84024:	9906      	ldr	r1, [sp, #24]
   84026:	3102      	adds	r1, #2
   84028:	9106      	str	r1, [sp, #24]
   8402a:	f017 0b84 	ands.w	fp, r7, #132	; 0x84
   8402e:	d107      	bne.n	84040 <_svfprintf_r+0x330>
   84030:	9909      	ldr	r1, [sp, #36]	; 0x24
   84032:	9806      	ldr	r0, [sp, #24]
   84034:	eba1 0900 	sub.w	r9, r1, r0
   84038:	f1b9 0f00 	cmp.w	r9, #0
   8403c:	f300 8336 	bgt.w	846ac <_svfprintf_r+0x99c>
   84040:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84042:	b182      	cbz	r2, 84066 <_svfprintf_r+0x356>
   84044:	2201      	movs	r2, #1
   84046:	f8c8 2004 	str.w	r2, [r8, #4]
   8404a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   8404c:	3401      	adds	r4, #1
   8404e:	3201      	adds	r2, #1
   84050:	f10d 0183 	add.w	r1, sp, #131	; 0x83
   84054:	2a07      	cmp	r2, #7
   84056:	942a      	str	r4, [sp, #168]	; 0xa8
   84058:	9229      	str	r2, [sp, #164]	; 0xa4
   8405a:	f8c8 1000 	str.w	r1, [r8]
   8405e:	f300 8369 	bgt.w	84734 <_svfprintf_r+0xa24>
   84062:	f108 0808 	add.w	r8, r8, #8
   84066:	b17b      	cbz	r3, 84088 <_svfprintf_r+0x378>
   84068:	2302      	movs	r3, #2
   8406a:	f8c8 3004 	str.w	r3, [r8, #4]
   8406e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84070:	3402      	adds	r4, #2
   84072:	3301      	adds	r3, #1
   84074:	aa21      	add	r2, sp, #132	; 0x84
   84076:	2b07      	cmp	r3, #7
   84078:	942a      	str	r4, [sp, #168]	; 0xa8
   8407a:	9329      	str	r3, [sp, #164]	; 0xa4
   8407c:	f8c8 2000 	str.w	r2, [r8]
   84080:	f300 836c 	bgt.w	8475c <_svfprintf_r+0xa4c>
   84084:	f108 0808 	add.w	r8, r8, #8
   84088:	f1bb 0f80 	cmp.w	fp, #128	; 0x80
   8408c:	f000 822e 	beq.w	844ec <_svfprintf_r+0x7dc>
   84090:	9b07      	ldr	r3, [sp, #28]
   84092:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84094:	eba3 0b02 	sub.w	fp, r3, r2
   84098:	f1bb 0f00 	cmp.w	fp, #0
   8409c:	f300 8271 	bgt.w	84582 <_svfprintf_r+0x872>
   840a0:	05fb      	lsls	r3, r7, #23
   840a2:	f100 81c5 	bmi.w	84430 <_svfprintf_r+0x720>
   840a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   840a8:	f8c8 5000 	str.w	r5, [r8]
   840ac:	441c      	add	r4, r3
   840ae:	f8c8 3004 	str.w	r3, [r8, #4]
   840b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   840b4:	942a      	str	r4, [sp, #168]	; 0xa8
   840b6:	3301      	adds	r3, #1
   840b8:	2b07      	cmp	r3, #7
   840ba:	9329      	str	r3, [sp, #164]	; 0xa4
   840bc:	f300 82ea 	bgt.w	84694 <_svfprintf_r+0x984>
   840c0:	f108 0808 	add.w	r8, r8, #8
   840c4:	077b      	lsls	r3, r7, #29
   840c6:	d505      	bpl.n	840d4 <_svfprintf_r+0x3c4>
   840c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
   840ca:	9a06      	ldr	r2, [sp, #24]
   840cc:	1a9d      	subs	r5, r3, r2
   840ce:	2d00      	cmp	r5, #0
   840d0:	f300 8350 	bgt.w	84774 <_svfprintf_r+0xa64>
   840d4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
   840d8:	9906      	ldr	r1, [sp, #24]
   840da:	428a      	cmp	r2, r1
   840dc:	bfac      	ite	ge
   840de:	189b      	addge	r3, r3, r2
   840e0:	185b      	addlt	r3, r3, r1
   840e2:	9308      	str	r3, [sp, #32]
   840e4:	2c00      	cmp	r4, #0
   840e6:	f47f af6e 	bne.w	83fc6 <_svfprintf_r+0x2b6>
   840ea:	2300      	movs	r3, #0
   840ec:	9329      	str	r3, [sp, #164]	; 0xa4
   840ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   840f0:	b11b      	cbz	r3, 840fa <_svfprintf_r+0x3ea>
   840f2:	990d      	ldr	r1, [sp, #52]	; 0x34
   840f4:	980a      	ldr	r0, [sp, #40]	; 0x28
   840f6:	f003 fd5f 	bl	87bb8 <_free_r>
   840fa:	4655      	mov	r5, sl
   840fc:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84100:	782b      	ldrb	r3, [r5, #0]
   84102:	2b00      	cmp	r3, #0
   84104:	f47f ae32 	bne.w	83d6c <_svfprintf_r+0x5c>
   84108:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
   8410a:	2b00      	cmp	r3, #0
   8410c:	f43f af69 	beq.w	83fe2 <_svfprintf_r+0x2d2>
   84110:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   84112:	980a      	ldr	r0, [sp, #40]	; 0x28
   84114:	4621      	mov	r1, r4
   84116:	aa28      	add	r2, sp, #160	; 0xa0
   84118:	f005 fa58 	bl	895cc <__ssprint_r>
   8411c:	89a3      	ldrh	r3, [r4, #12]
   8411e:	e762      	b.n	83fe6 <_svfprintf_r+0x2d6>
   84120:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84122:	3307      	adds	r3, #7
   84124:	f023 0207 	bic.w	r2, r3, #7
   84128:	e8f2 3402 	ldrd	r3, r4, [r2], #8
   8412c:	e9cd 3414 	strd	r3, r4, [sp, #80]	; 0x50
   84130:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   84134:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
   84138:	4699      	mov	r9, r3
   8413a:	4618      	mov	r0, r3
   8413c:	920e      	str	r2, [sp, #56]	; 0x38
   8413e:	4621      	mov	r1, r4
   84140:	f04f 32ff 	mov.w	r2, #4294967295
   84144:	4bb6      	ldr	r3, [pc, #728]	; (84420 <_svfprintf_r+0x710>)
   84146:	f006 f981 	bl	8a44c <__aeabi_dcmpun>
   8414a:	2800      	cmp	r0, #0
   8414c:	f040 8496 	bne.w	84a7c <_svfprintf_r+0xd6c>
   84150:	4648      	mov	r0, r9
   84152:	4621      	mov	r1, r4
   84154:	f04f 32ff 	mov.w	r2, #4294967295
   84158:	4bb1      	ldr	r3, [pc, #708]	; (84420 <_svfprintf_r+0x710>)
   8415a:	f006 f959 	bl	8a410 <__aeabi_dcmple>
   8415e:	2800      	cmp	r0, #0
   84160:	f040 848c 	bne.w	84a7c <_svfprintf_r+0xd6c>
   84164:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   84168:	2200      	movs	r2, #0
   8416a:	2300      	movs	r3, #0
   8416c:	f006 f946 	bl	8a3fc <__aeabi_dcmplt>
   84170:	2800      	cmp	r0, #0
   84172:	f040 87a6 	bne.w	850c2 <_svfprintf_r+0x13b2>
   84176:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   8417a:	2100      	movs	r1, #0
   8417c:	2003      	movs	r0, #3
   8417e:	4da9      	ldr	r5, [pc, #676]	; (84424 <_svfprintf_r+0x714>)
   84180:	4ba9      	ldr	r3, [pc, #676]	; (84428 <_svfprintf_r+0x718>)
   84182:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   84186:	910d      	str	r1, [sp, #52]	; 0x34
   84188:	9006      	str	r0, [sp, #24]
   8418a:	2e47      	cmp	r6, #71	; 0x47
   8418c:	bfc8      	it	gt
   8418e:	461d      	movgt	r5, r3
   84190:	9107      	str	r1, [sp, #28]
   84192:	900b      	str	r0, [sp, #44]	; 0x2c
   84194:	910f      	str	r1, [sp, #60]	; 0x3c
   84196:	9113      	str	r1, [sp, #76]	; 0x4c
   84198:	9110      	str	r1, [sp, #64]	; 0x40
   8419a:	e6c1      	b.n	83f20 <_svfprintf_r+0x210>
   8419c:	f017 0310 	ands.w	r3, r7, #16
   841a0:	f040 8462 	bne.w	84a68 <_svfprintf_r+0xd58>
   841a4:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   841a8:	f000 877b 	beq.w	850a2 <_svfprintf_r+0x1392>
   841ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   841ae:	4699      	mov	r9, r3
   841b0:	f852 4b04 	ldr.w	r4, [r2], #4
   841b4:	920e      	str	r2, [sp, #56]	; 0x38
   841b6:	b2a4      	uxth	r4, r4
   841b8:	e6c7      	b.n	83f4a <_svfprintf_r+0x23a>
   841ba:	f853 4b04 	ldr.w	r4, [r3], #4
   841be:	930e      	str	r3, [sp, #56]	; 0x38
   841c0:	06fb      	lsls	r3, r7, #27
   841c2:	f100 8441 	bmi.w	84a48 <_svfprintf_r+0xd38>
   841c6:	067d      	lsls	r5, r7, #25
   841c8:	f140 843b 	bpl.w	84a42 <_svfprintf_r+0xd32>
   841cc:	f344 39c0 	sbfx	r9, r4, #15, #1
   841d0:	464b      	mov	r3, r9
   841d2:	b224      	sxth	r4, r4
   841d4:	e67d      	b.n	83ed2 <_svfprintf_r+0x1c2>
   841d6:	2001      	movs	r0, #1
   841d8:	2200      	movs	r2, #0
   841da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   841dc:	9006      	str	r0, [sp, #24]
   841de:	f853 1b04 	ldr.w	r1, [r3], #4
   841e2:	ad3b      	add	r5, sp, #236	; 0xec
   841e4:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   841e8:	f88d 10ec 	strb.w	r1, [sp, #236]	; 0xec
   841ec:	930e      	str	r3, [sp, #56]	; 0x38
   841ee:	900b      	str	r0, [sp, #44]	; 0x2c
   841f0:	e710      	b.n	84014 <_svfprintf_r+0x304>
   841f2:	f04f 0900 	mov.w	r9, #0
   841f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   841f8:	9b07      	ldr	r3, [sp, #28]
   841fa:	f854 5b04 	ldr.w	r5, [r4], #4
   841fe:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   84202:	2d00      	cmp	r5, #0
   84204:	f000 86ee 	beq.w	84fe4 <_svfprintf_r+0x12d4>
   84208:	1c5a      	adds	r2, r3, #1
   8420a:	f000 8560 	beq.w	84cce <_svfprintf_r+0xfbe>
   8420e:	461a      	mov	r2, r3
   84210:	4649      	mov	r1, r9
   84212:	4628      	mov	r0, r5
   84214:	f004 fae8 	bl	887e8 <memchr>
   84218:	900d      	str	r0, [sp, #52]	; 0x34
   8421a:	2800      	cmp	r0, #0
   8421c:	f001 809e 	beq.w	8535c <_svfprintf_r+0x164c>
   84220:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   84222:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84226:	1b5b      	subs	r3, r3, r5
   84228:	930b      	str	r3, [sp, #44]	; 0x2c
   8422a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8422e:	f8cd 901c 	str.w	r9, [sp, #28]
   84232:	940e      	str	r4, [sp, #56]	; 0x38
   84234:	9306      	str	r3, [sp, #24]
   84236:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   8423a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   8423e:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   84242:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   84246:	e66b      	b.n	83f20 <_svfprintf_r+0x210>
   84248:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8424a:	425b      	negs	r3, r3
   8424c:	9309      	str	r3, [sp, #36]	; 0x24
   8424e:	f89a 6000 	ldrb.w	r6, [sl]
   84252:	f047 0704 	orr.w	r7, r7, #4
   84256:	e5aa      	b.n	83dae <_svfprintf_r+0x9e>
   84258:	f047 0b10 	orr.w	fp, r7, #16
   8425c:	f01b 0920 	ands.w	r9, fp, #32
   84260:	f000 83aa 	beq.w	849b8 <_svfprintf_r+0xca8>
   84264:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84266:	3307      	adds	r3, #7
   84268:	f023 0307 	bic.w	r3, r3, #7
   8426c:	461a      	mov	r2, r3
   8426e:	f852 4b08 	ldr.w	r4, [r2], #8
   84272:	f8d3 9004 	ldr.w	r9, [r3, #4]
   84276:	920e      	str	r2, [sp, #56]	; 0x38
   84278:	2301      	movs	r3, #1
   8427a:	e669      	b.n	83f50 <_svfprintf_r+0x240>
   8427c:	2230      	movs	r2, #48	; 0x30
   8427e:	2678      	movs	r6, #120	; 0x78
   84280:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84282:	f88d 2084 	strb.w	r2, [sp, #132]	; 0x84
   84286:	f853 4b04 	ldr.w	r4, [r3], #4
   8428a:	4a68      	ldr	r2, [pc, #416]	; (8442c <_svfprintf_r+0x71c>)
   8428c:	930e      	str	r3, [sp, #56]	; 0x38
   8428e:	f04f 0900 	mov.w	r9, #0
   84292:	2302      	movs	r3, #2
   84294:	f047 0b02 	orr.w	fp, r7, #2
   84298:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   8429c:	9218      	str	r2, [sp, #96]	; 0x60
   8429e:	e657      	b.n	83f50 <_svfprintf_r+0x240>
   842a0:	06bd      	lsls	r5, r7, #26
   842a2:	f100 83d6 	bmi.w	84a52 <_svfprintf_r+0xd42>
   842a6:	06fc      	lsls	r4, r7, #27
   842a8:	f100 8693 	bmi.w	84fd2 <_svfprintf_r+0x12c2>
   842ac:	0678      	lsls	r0, r7, #25
   842ae:	f100 875d 	bmi.w	8516c <_svfprintf_r+0x145c>
   842b2:	05b9      	lsls	r1, r7, #22
   842b4:	f140 868d 	bpl.w	84fd2 <_svfprintf_r+0x12c2>
   842b8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   842ba:	9908      	ldr	r1, [sp, #32]
   842bc:	f853 2b04 	ldr.w	r2, [r3], #4
   842c0:	4655      	mov	r5, sl
   842c2:	7011      	strb	r1, [r2, #0]
   842c4:	930e      	str	r3, [sp, #56]	; 0x38
   842c6:	e71b      	b.n	84100 <_svfprintf_r+0x3f0>
   842c8:	f89a 6000 	ldrb.w	r6, [sl]
   842cc:	2e6c      	cmp	r6, #108	; 0x6c
   842ce:	bf03      	ittte	eq
   842d0:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   842d4:	f047 0720 	orreq.w	r7, r7, #32
   842d8:	f10a 0a01 	addeq.w	sl, sl, #1
   842dc:	f047 0710 	orrne.w	r7, r7, #16
   842e0:	e565      	b.n	83dae <_svfprintf_r+0x9e>
   842e2:	f89a 6000 	ldrb.w	r6, [sl]
   842e6:	2e68      	cmp	r6, #104	; 0x68
   842e8:	bf03      	ittte	eq
   842ea:	f89a 6001 	ldrbeq.w	r6, [sl, #1]
   842ee:	f447 7700 	orreq.w	r7, r7, #512	; 0x200
   842f2:	f10a 0a01 	addeq.w	sl, sl, #1
   842f6:	f047 0740 	orrne.w	r7, r7, #64	; 0x40
   842fa:	e558      	b.n	83dae <_svfprintf_r+0x9e>
   842fc:	f89a 6000 	ldrb.w	r6, [sl]
   84300:	f047 0708 	orr.w	r7, r7, #8
   84304:	e553      	b.n	83dae <_svfprintf_r+0x9e>
   84306:	9e0a      	ldr	r6, [sp, #40]	; 0x28
   84308:	4630      	mov	r0, r6
   8430a:	f003 fef7 	bl	880fc <_localeconv_r>
   8430e:	6843      	ldr	r3, [r0, #4]
   84310:	4618      	mov	r0, r3
   84312:	931b      	str	r3, [sp, #108]	; 0x6c
   84314:	f7ff fc9a 	bl	83c4c <strlen>
   84318:	4603      	mov	r3, r0
   8431a:	4630      	mov	r0, r6
   8431c:	931c      	str	r3, [sp, #112]	; 0x70
   8431e:	461e      	mov	r6, r3
   84320:	f003 feec 	bl	880fc <_localeconv_r>
   84324:	6883      	ldr	r3, [r0, #8]
   84326:	9319      	str	r3, [sp, #100]	; 0x64
   84328:	2e00      	cmp	r6, #0
   8432a:	f43f adbb 	beq.w	83ea4 <_svfprintf_r+0x194>
   8432e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84330:	2b00      	cmp	r3, #0
   84332:	f43f adb7 	beq.w	83ea4 <_svfprintf_r+0x194>
   84336:	9b19      	ldr	r3, [sp, #100]	; 0x64
   84338:	781b      	ldrb	r3, [r3, #0]
   8433a:	2b00      	cmp	r3, #0
   8433c:	f43f adb2 	beq.w	83ea4 <_svfprintf_r+0x194>
   84340:	f89a 6000 	ldrb.w	r6, [sl]
   84344:	f447 6780 	orr.w	r7, r7, #1024	; 0x400
   84348:	e531      	b.n	83dae <_svfprintf_r+0x9e>
   8434a:	f89a 6000 	ldrb.w	r6, [sl]
   8434e:	f047 0701 	orr.w	r7, r7, #1
   84352:	e52c      	b.n	83dae <_svfprintf_r+0x9e>
   84354:	f89d 3083 	ldrb.w	r3, [sp, #131]	; 0x83
   84358:	2b00      	cmp	r3, #0
   8435a:	f47f ada3 	bne.w	83ea4 <_svfprintf_r+0x194>
   8435e:	f89a 6000 	ldrb.w	r6, [sl]
   84362:	f88d 4083 	strb.w	r4, [sp, #131]	; 0x83
   84366:	e522      	b.n	83dae <_svfprintf_r+0x9e>
   84368:	f89a 6000 	ldrb.w	r6, [sl]
   8436c:	f047 0780 	orr.w	r7, r7, #128	; 0x80
   84370:	e51d      	b.n	83dae <_svfprintf_r+0x9e>
   84372:	4652      	mov	r2, sl
   84374:	f812 6b01 	ldrb.w	r6, [r2], #1
   84378:	2e2a      	cmp	r6, #42	; 0x2a
   8437a:	f001 81eb 	beq.w	85754 <_svfprintf_r+0x1a44>
   8437e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   84382:	2b09      	cmp	r3, #9
   84384:	4692      	mov	sl, r2
   84386:	bf98      	it	ls
   84388:	2200      	movls	r2, #0
   8438a:	f201 8003 	bhi.w	85394 <_svfprintf_r+0x1684>
   8438e:	f81a 6b01 	ldrb.w	r6, [sl], #1
   84392:	eb02 0282 	add.w	r2, r2, r2, lsl #2
   84396:	eb03 0242 	add.w	r2, r3, r2, lsl #1
   8439a:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
   8439e:	2b09      	cmp	r3, #9
   843a0:	d9f5      	bls.n	8438e <_svfprintf_r+0x67e>
   843a2:	9207      	str	r2, [sp, #28]
   843a4:	e505      	b.n	83db2 <_svfprintf_r+0xa2>
   843a6:	f89a 6000 	ldrb.w	r6, [sl]
   843aa:	f88d 9083 	strb.w	r9, [sp, #131]	; 0x83
   843ae:	e4fe      	b.n	83dae <_svfprintf_r+0x9e>
   843b0:	46bb      	mov	fp, r7
   843b2:	2b01      	cmp	r3, #1
   843b4:	f43f ad9a 	beq.w	83eec <_svfprintf_r+0x1dc>
   843b8:	2b02      	cmp	r3, #2
   843ba:	ad54      	add	r5, sp, #336	; 0x150
   843bc:	d112      	bne.n	843e4 <_svfprintf_r+0x6d4>
   843be:	9a18      	ldr	r2, [sp, #96]	; 0x60
   843c0:	f004 030f 	and.w	r3, r4, #15
   843c4:	5cd3      	ldrb	r3, [r2, r3]
   843c6:	0924      	lsrs	r4, r4, #4
   843c8:	ea44 7409 	orr.w	r4, r4, r9, lsl #28
   843cc:	ea4f 1919 	mov.w	r9, r9, lsr #4
   843d0:	f805 3d01 	strb.w	r3, [r5, #-1]!
   843d4:	ea54 0309 	orrs.w	r3, r4, r9
   843d8:	d1f2      	bne.n	843c0 <_svfprintf_r+0x6b0>
   843da:	ab54      	add	r3, sp, #336	; 0x150
   843dc:	1b5b      	subs	r3, r3, r5
   843de:	465f      	mov	r7, fp
   843e0:	930b      	str	r3, [sp, #44]	; 0x2c
   843e2:	e590      	b.n	83f06 <_svfprintf_r+0x1f6>
   843e4:	f004 0307 	and.w	r3, r4, #7
   843e8:	08e4      	lsrs	r4, r4, #3
   843ea:	ea44 7449 	orr.w	r4, r4, r9, lsl #29
   843ee:	ea4f 09d9 	mov.w	r9, r9, lsr #3
   843f2:	3330      	adds	r3, #48	; 0x30
   843f4:	ea54 0109 	orrs.w	r1, r4, r9
   843f8:	462a      	mov	r2, r5
   843fa:	f805 3d01 	strb.w	r3, [r5, #-1]!
   843fe:	d1f1      	bne.n	843e4 <_svfprintf_r+0x6d4>
   84400:	f01b 0f01 	tst.w	fp, #1
   84404:	d0e9      	beq.n	843da <_svfprintf_r+0x6ca>
   84406:	2b30      	cmp	r3, #48	; 0x30
   84408:	d0e7      	beq.n	843da <_svfprintf_r+0x6ca>
   8440a:	2330      	movs	r3, #48	; 0x30
   8440c:	3a02      	subs	r2, #2
   8440e:	f805 3c01 	strb.w	r3, [r5, #-1]
   84412:	ab54      	add	r3, sp, #336	; 0x150
   84414:	1a9b      	subs	r3, r3, r2
   84416:	465f      	mov	r7, fp
   84418:	4615      	mov	r5, r2
   8441a:	930b      	str	r3, [sp, #44]	; 0x2c
   8441c:	e573      	b.n	83f06 <_svfprintf_r+0x1f6>
   8441e:	bf00      	nop
   84420:	7fefffff 	.word	0x7fefffff
   84424:	0008a8f4 	.word	0x0008a8f4
   84428:	0008a8f8 	.word	0x0008a8f8
   8442c:	0008a904 	.word	0x0008a904
   84430:	2e65      	cmp	r6, #101	; 0x65
   84432:	f340 80e9 	ble.w	84608 <_svfprintf_r+0x8f8>
   84436:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   8443a:	2200      	movs	r2, #0
   8443c:	2300      	movs	r3, #0
   8443e:	f005 ffd3 	bl	8a3e8 <__aeabi_dcmpeq>
   84442:	2800      	cmp	r0, #0
   84444:	f000 81d2 	beq.w	847ec <_svfprintf_r+0xadc>
   84448:	2301      	movs	r3, #1
   8444a:	f8c8 3004 	str.w	r3, [r8, #4]
   8444e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84450:	4abf      	ldr	r2, [pc, #764]	; (84750 <_svfprintf_r+0xa40>)
   84452:	3301      	adds	r3, #1
   84454:	3401      	adds	r4, #1
   84456:	2b07      	cmp	r3, #7
   84458:	942a      	str	r4, [sp, #168]	; 0xa8
   8445a:	9329      	str	r3, [sp, #164]	; 0xa4
   8445c:	f8c8 2000 	str.w	r2, [r8]
   84460:	f300 857a 	bgt.w	84f58 <_svfprintf_r+0x1248>
   84464:	f108 0808 	add.w	r8, r8, #8
   84468:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8446a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8446c:	4293      	cmp	r3, r2
   8446e:	f280 82d7 	bge.w	84a20 <_svfprintf_r+0xd10>
   84472:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84474:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   84476:	441c      	add	r4, r3
   84478:	e9c8 2300 	strd	r2, r3, [r8]
   8447c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8447e:	942a      	str	r4, [sp, #168]	; 0xa8
   84480:	3301      	adds	r3, #1
   84482:	2b07      	cmp	r3, #7
   84484:	9329      	str	r3, [sp, #164]	; 0xa4
   84486:	f300 83dd 	bgt.w	84c44 <_svfprintf_r+0xf34>
   8448a:	f108 0808 	add.w	r8, r8, #8
   8448e:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84490:	1e5d      	subs	r5, r3, #1
   84492:	2d00      	cmp	r5, #0
   84494:	f77f ae16 	ble.w	840c4 <_svfprintf_r+0x3b4>
   84498:	2d10      	cmp	r5, #16
   8449a:	f341 8141 	ble.w	85720 <_svfprintf_r+0x1a10>
   8449e:	f8df 92b4 	ldr.w	r9, [pc, #692]	; 84754 <_svfprintf_r+0xa44>
   844a2:	4622      	mov	r2, r4
   844a4:	4649      	mov	r1, r9
   844a6:	2610      	movs	r6, #16
   844a8:	46b9      	mov	r9, r7
   844aa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   844ac:	460f      	mov	r7, r1
   844ae:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   844b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   844b4:	e005      	b.n	844c2 <_svfprintf_r+0x7b2>
   844b6:	f108 0808 	add.w	r8, r8, #8
   844ba:	3d10      	subs	r5, #16
   844bc:	2d10      	cmp	r5, #16
   844be:	f340 8558 	ble.w	84f72 <_svfprintf_r+0x1262>
   844c2:	3301      	adds	r3, #1
   844c4:	3210      	adds	r2, #16
   844c6:	2b07      	cmp	r3, #7
   844c8:	e9c8 7600 	strd	r7, r6, [r8]
   844cc:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   844d0:	ddf1      	ble.n	844b6 <_svfprintf_r+0x7a6>
   844d2:	4621      	mov	r1, r4
   844d4:	4658      	mov	r0, fp
   844d6:	aa28      	add	r2, sp, #160	; 0xa0
   844d8:	f005 f878 	bl	895cc <__ssprint_r>
   844dc:	2800      	cmp	r0, #0
   844de:	f47f ad7a 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   844e2:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   844e6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   844ea:	e7e6      	b.n	844ba <_svfprintf_r+0x7aa>
   844ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
   844ee:	9a06      	ldr	r2, [sp, #24]
   844f0:	eba3 0b02 	sub.w	fp, r3, r2
   844f4:	f1bb 0f00 	cmp.w	fp, #0
   844f8:	f77f adca 	ble.w	84090 <_svfprintf_r+0x380>
   844fc:	f1bb 0f10 	cmp.w	fp, #16
   84500:	f341 8005 	ble.w	8550e <_svfprintf_r+0x17fe>
   84504:	f8df 924c 	ldr.w	r9, [pc, #588]	; 84754 <_svfprintf_r+0xa44>
   84508:	4641      	mov	r1, r8
   8450a:	4620      	mov	r0, r4
   8450c:	46a8      	mov	r8, r5
   8450e:	464c      	mov	r4, r9
   84510:	2310      	movs	r3, #16
   84512:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84514:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84516:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   8451a:	e006      	b.n	8452a <_svfprintf_r+0x81a>
   8451c:	f1ab 0b10 	sub.w	fp, fp, #16
   84520:	f1bb 0f10 	cmp.w	fp, #16
   84524:	f101 0108 	add.w	r1, r1, #8
   84528:	dd19      	ble.n	8455e <_svfprintf_r+0x84e>
   8452a:	3201      	adds	r2, #1
   8452c:	3010      	adds	r0, #16
   8452e:	2a07      	cmp	r2, #7
   84530:	e9c1 4300 	strd	r4, r3, [r1]
   84534:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   84538:	ddf0      	ble.n	8451c <_svfprintf_r+0x80c>
   8453a:	4629      	mov	r1, r5
   8453c:	4648      	mov	r0, r9
   8453e:	aa28      	add	r2, sp, #160	; 0xa0
   84540:	f005 f844 	bl	895cc <__ssprint_r>
   84544:	2800      	cmp	r0, #0
   84546:	f47f ad46 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8454a:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   8454e:	f1ab 0b10 	sub.w	fp, fp, #16
   84552:	f1bb 0f10 	cmp.w	fp, #16
   84556:	f04f 0310 	mov.w	r3, #16
   8455a:	a92b      	add	r1, sp, #172	; 0xac
   8455c:	dce5      	bgt.n	8452a <_svfprintf_r+0x81a>
   8455e:	4645      	mov	r5, r8
   84560:	46a1      	mov	r9, r4
   84562:	4688      	mov	r8, r1
   84564:	4604      	mov	r4, r0
   84566:	3201      	adds	r2, #1
   84568:	445c      	add	r4, fp
   8456a:	2a07      	cmp	r2, #7
   8456c:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   84570:	f8c8 9000 	str.w	r9, [r8]
   84574:	f8c8 b004 	str.w	fp, [r8, #4]
   84578:	f300 8518 	bgt.w	84fac <_svfprintf_r+0x129c>
   8457c:	f108 0808 	add.w	r8, r8, #8
   84580:	e586      	b.n	84090 <_svfprintf_r+0x380>
   84582:	f1bb 0f10 	cmp.w	fp, #16
   84586:	f340 8597 	ble.w	850b8 <_svfprintf_r+0x13a8>
   8458a:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 84754 <_svfprintf_r+0xa44>
   8458e:	4641      	mov	r1, r8
   84590:	4620      	mov	r0, r4
   84592:	46a8      	mov	r8, r5
   84594:	464c      	mov	r4, r9
   84596:	2310      	movs	r3, #16
   84598:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   8459a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8459c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   845a0:	e006      	b.n	845b0 <_svfprintf_r+0x8a0>
   845a2:	f1ab 0b10 	sub.w	fp, fp, #16
   845a6:	f1bb 0f10 	cmp.w	fp, #16
   845aa:	f101 0108 	add.w	r1, r1, #8
   845ae:	dd19      	ble.n	845e4 <_svfprintf_r+0x8d4>
   845b0:	3201      	adds	r2, #1
   845b2:	3010      	adds	r0, #16
   845b4:	2a07      	cmp	r2, #7
   845b6:	e9c1 4300 	strd	r4, r3, [r1]
   845ba:	e9cd 2029 	strd	r2, r0, [sp, #164]	; 0xa4
   845be:	ddf0      	ble.n	845a2 <_svfprintf_r+0x892>
   845c0:	4629      	mov	r1, r5
   845c2:	4648      	mov	r0, r9
   845c4:	aa28      	add	r2, sp, #160	; 0xa0
   845c6:	f005 f801 	bl	895cc <__ssprint_r>
   845ca:	2800      	cmp	r0, #0
   845cc:	f47f ad03 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   845d0:	e9dd 2029 	ldrd	r2, r0, [sp, #164]	; 0xa4
   845d4:	f1ab 0b10 	sub.w	fp, fp, #16
   845d8:	f1bb 0f10 	cmp.w	fp, #16
   845dc:	f04f 0310 	mov.w	r3, #16
   845e0:	a92b      	add	r1, sp, #172	; 0xac
   845e2:	dce5      	bgt.n	845b0 <_svfprintf_r+0x8a0>
   845e4:	4645      	mov	r5, r8
   845e6:	46a1      	mov	r9, r4
   845e8:	4688      	mov	r8, r1
   845ea:	4604      	mov	r4, r0
   845ec:	3201      	adds	r2, #1
   845ee:	445c      	add	r4, fp
   845f0:	2a07      	cmp	r2, #7
   845f2:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   845f6:	f8c8 9000 	str.w	r9, [r8]
   845fa:	f8c8 b004 	str.w	fp, [r8, #4]
   845fe:	f300 81ce 	bgt.w	8499e <_svfprintf_r+0xc8e>
   84602:	f108 0808 	add.w	r8, r8, #8
   84606:	e54b      	b.n	840a0 <_svfprintf_r+0x390>
   84608:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8460a:	2b01      	cmp	r3, #1
   8460c:	f340 817e 	ble.w	8490c <_svfprintf_r+0xbfc>
   84610:	2301      	movs	r3, #1
   84612:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   84614:	3401      	adds	r4, #1
   84616:	441e      	add	r6, r3
   84618:	2e07      	cmp	r6, #7
   8461a:	f8c8 5000 	str.w	r5, [r8]
   8461e:	942a      	str	r4, [sp, #168]	; 0xa8
   84620:	f8c8 3004 	str.w	r3, [r8, #4]
   84624:	9629      	str	r6, [sp, #164]	; 0xa4
   84626:	f300 81e1 	bgt.w	849ec <_svfprintf_r+0xcdc>
   8462a:	f108 0808 	add.w	r8, r8, #8
   8462e:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84630:	3601      	adds	r6, #1
   84632:	9a17      	ldr	r2, [sp, #92]	; 0x5c
   84634:	441c      	add	r4, r3
   84636:	2e07      	cmp	r6, #7
   84638:	e9c8 2300 	strd	r2, r3, [r8]
   8463c:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   84640:	f300 81e1 	bgt.w	84a06 <_svfprintf_r+0xcf6>
   84644:	f108 0808 	add.w	r8, r8, #8
   84648:	2200      	movs	r2, #0
   8464a:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   8464e:	2300      	movs	r3, #0
   84650:	f005 feca 	bl	8a3e8 <__aeabi_dcmpeq>
   84654:	2800      	cmp	r0, #0
   84656:	f040 8176 	bne.w	84946 <_svfprintf_r+0xc36>
   8465a:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8465c:	3601      	adds	r6, #1
   8465e:	3b01      	subs	r3, #1
   84660:	3501      	adds	r5, #1
   84662:	441c      	add	r4, r3
   84664:	2e07      	cmp	r6, #7
   84666:	f8c8 5000 	str.w	r5, [r8]
   8466a:	9629      	str	r6, [sp, #164]	; 0xa4
   8466c:	f8c8 3004 	str.w	r3, [r8, #4]
   84670:	942a      	str	r4, [sp, #168]	; 0xa8
   84672:	f300 815b 	bgt.w	8492c <_svfprintf_r+0xc1c>
   84676:	f108 0808 	add.w	r8, r8, #8
   8467a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
   8467c:	3601      	adds	r6, #1
   8467e:	441c      	add	r4, r3
   84680:	f8c8 3004 	str.w	r3, [r8, #4]
   84684:	2e07      	cmp	r6, #7
   84686:	ab24      	add	r3, sp, #144	; 0x90
   84688:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   8468c:	f8c8 3000 	str.w	r3, [r8]
   84690:	f77f ad16 	ble.w	840c0 <_svfprintf_r+0x3b0>
   84694:	990c      	ldr	r1, [sp, #48]	; 0x30
   84696:	980a      	ldr	r0, [sp, #40]	; 0x28
   84698:	aa28      	add	r2, sp, #160	; 0xa0
   8469a:	f004 ff97 	bl	895cc <__ssprint_r>
   8469e:	2800      	cmp	r0, #0
   846a0:	f47f ac99 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   846a4:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   846a6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   846aa:	e50b      	b.n	840c4 <_svfprintf_r+0x3b4>
   846ac:	f1b9 0f10 	cmp.w	r9, #16
   846b0:	f340 8650 	ble.w	85354 <_svfprintf_r+0x1644>
   846b4:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   846b8:	4640      	mov	r0, r8
   846ba:	e9cd 361d 	strd	r3, r6, [sp, #116]	; 0x74
   846be:	46b8      	mov	r8, r7
   846c0:	2410      	movs	r4, #16
   846c2:	464f      	mov	r7, r9
   846c4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   846c6:	46a9      	mov	r9, r5
   846c8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   846ca:	e004      	b.n	846d6 <_svfprintf_r+0x9c6>
   846cc:	3f10      	subs	r7, #16
   846ce:	2f10      	cmp	r7, #16
   846d0:	f100 0008 	add.w	r0, r0, #8
   846d4:	dd16      	ble.n	84704 <_svfprintf_r+0x9f4>
   846d6:	3201      	adds	r2, #1
   846d8:	4b1f      	ldr	r3, [pc, #124]	; (84758 <_svfprintf_r+0xa48>)
   846da:	3110      	adds	r1, #16
   846dc:	2a07      	cmp	r2, #7
   846de:	e9c0 3400 	strd	r3, r4, [r0]
   846e2:	e9cd 2129 	strd	r2, r1, [sp, #164]	; 0xa4
   846e6:	ddf1      	ble.n	846cc <_svfprintf_r+0x9bc>
   846e8:	4631      	mov	r1, r6
   846ea:	4628      	mov	r0, r5
   846ec:	aa28      	add	r2, sp, #160	; 0xa0
   846ee:	f004 ff6d 	bl	895cc <__ssprint_r>
   846f2:	2800      	cmp	r0, #0
   846f4:	f47f ac6f 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   846f8:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   846fc:	3f10      	subs	r7, #16
   846fe:	2f10      	cmp	r7, #16
   84700:	a82b      	add	r0, sp, #172	; 0xac
   84702:	dce8      	bgt.n	846d6 <_svfprintf_r+0x9c6>
   84704:	464d      	mov	r5, r9
   84706:	e9dd 361d 	ldrd	r3, r6, [sp, #116]	; 0x74
   8470a:	46b9      	mov	r9, r7
   8470c:	4647      	mov	r7, r8
   8470e:	4680      	mov	r8, r0
   84710:	eb09 0401 	add.w	r4, r9, r1
   84714:	3201      	adds	r2, #1
   84716:	4910      	ldr	r1, [pc, #64]	; (84758 <_svfprintf_r+0xa48>)
   84718:	2a07      	cmp	r2, #7
   8471a:	e9cd 2429 	strd	r2, r4, [sp, #164]	; 0xa4
   8471e:	f8c8 9004 	str.w	r9, [r8, #4]
   84722:	f8c8 1000 	str.w	r1, [r8]
   84726:	f300 83c3 	bgt.w	84eb0 <_svfprintf_r+0x11a0>
   8472a:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   8472e:	f108 0808 	add.w	r8, r8, #8
   84732:	e486      	b.n	84042 <_svfprintf_r+0x332>
   84734:	990c      	ldr	r1, [sp, #48]	; 0x30
   84736:	980a      	ldr	r0, [sp, #40]	; 0x28
   84738:	aa28      	add	r2, sp, #160	; 0xa0
   8473a:	931d      	str	r3, [sp, #116]	; 0x74
   8473c:	f004 ff46 	bl	895cc <__ssprint_r>
   84740:	2800      	cmp	r0, #0
   84742:	f47f ac48 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84746:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84748:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   8474a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8474e:	e48a      	b.n	84066 <_svfprintf_r+0x356>
   84750:	0008a934 	.word	0x0008a934
   84754:	0008a948 	.word	0x0008a948
   84758:	0008a938 	.word	0x0008a938
   8475c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8475e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84760:	aa28      	add	r2, sp, #160	; 0xa0
   84762:	f004 ff33 	bl	895cc <__ssprint_r>
   84766:	2800      	cmp	r0, #0
   84768:	f47f ac35 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8476c:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8476e:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84772:	e489      	b.n	84088 <_svfprintf_r+0x378>
   84774:	2d10      	cmp	r5, #16
   84776:	f340 86c4 	ble.w	85502 <_svfprintf_r+0x17f2>
   8477a:	2610      	movs	r6, #16
   8477c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8477e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   84780:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
   84784:	e004      	b.n	84790 <_svfprintf_r+0xa80>
   84786:	3d10      	subs	r5, #16
   84788:	2d10      	cmp	r5, #16
   8478a:	f108 0808 	add.w	r8, r8, #8
   8478e:	dd17      	ble.n	847c0 <_svfprintf_r+0xab0>
   84790:	3301      	adds	r3, #1
   84792:	4ab8      	ldr	r2, [pc, #736]	; (84a74 <_svfprintf_r+0xd64>)
   84794:	3410      	adds	r4, #16
   84796:	2b07      	cmp	r3, #7
   84798:	e9c8 2600 	strd	r2, r6, [r8]
   8479c:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   847a0:	ddf1      	ble.n	84786 <_svfprintf_r+0xa76>
   847a2:	4649      	mov	r1, r9
   847a4:	4638      	mov	r0, r7
   847a6:	aa28      	add	r2, sp, #160	; 0xa0
   847a8:	f004 ff10 	bl	895cc <__ssprint_r>
   847ac:	2800      	cmp	r0, #0
   847ae:	f47f ac12 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   847b2:	e9dd 3429 	ldrd	r3, r4, [sp, #164]	; 0xa4
   847b6:	3d10      	subs	r5, #16
   847b8:	2d10      	cmp	r5, #16
   847ba:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   847be:	dce7      	bgt.n	84790 <_svfprintf_r+0xa80>
   847c0:	3301      	adds	r3, #1
   847c2:	4aac      	ldr	r2, [pc, #688]	; (84a74 <_svfprintf_r+0xd64>)
   847c4:	442c      	add	r4, r5
   847c6:	2b07      	cmp	r3, #7
   847c8:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   847cc:	f8c8 5004 	str.w	r5, [r8, #4]
   847d0:	f8c8 2000 	str.w	r2, [r8]
   847d4:	f77f ac7e 	ble.w	840d4 <_svfprintf_r+0x3c4>
   847d8:	990c      	ldr	r1, [sp, #48]	; 0x30
   847da:	980a      	ldr	r0, [sp, #40]	; 0x28
   847dc:	aa28      	add	r2, sp, #160	; 0xa0
   847de:	f004 fef5 	bl	895cc <__ssprint_r>
   847e2:	2800      	cmp	r0, #0
   847e4:	f47f abf7 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   847e8:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   847ea:	e473      	b.n	840d4 <_svfprintf_r+0x3c4>
   847ec:	9922      	ldr	r1, [sp, #136]	; 0x88
   847ee:	2900      	cmp	r1, #0
   847f0:	f340 836f 	ble.w	84ed2 <_svfprintf_r+0x11c2>
   847f4:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
   847f8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   847fa:	4599      	cmp	r9, r3
   847fc:	bfa8      	it	ge
   847fe:	4699      	movge	r9, r3
   84800:	f1b9 0f00 	cmp.w	r9, #0
   84804:	dd0b      	ble.n	8481e <_svfprintf_r+0xb0e>
   84806:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84808:	444c      	add	r4, r9
   8480a:	3301      	adds	r3, #1
   8480c:	2b07      	cmp	r3, #7
   8480e:	e9c8 5900 	strd	r5, r9, [r8]
   84812:	942a      	str	r4, [sp, #168]	; 0xa8
   84814:	9329      	str	r3, [sp, #164]	; 0xa4
   84816:	f300 851d 	bgt.w	85254 <_svfprintf_r+0x1544>
   8481a:	f108 0808 	add.w	r8, r8, #8
   8481e:	9e10      	ldr	r6, [sp, #64]	; 0x40
   84820:	f1b9 0f00 	cmp.w	r9, #0
   84824:	bfa8      	it	ge
   84826:	eba6 0609 	subge.w	r6, r6, r9
   8482a:	2e00      	cmp	r6, #0
   8482c:	f300 8225 	bgt.w	84c7a <_svfprintf_r+0xf6a>
   84830:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   84834:	0578      	lsls	r0, r7, #21
   84836:	44ab      	add	fp, r5
   84838:	f100 825f 	bmi.w	84cfa <_svfprintf_r+0xfea>
   8483c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8483e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84840:	4293      	cmp	r3, r2
   84842:	db02      	blt.n	8484a <_svfprintf_r+0xb3a>
   84844:	07f9      	lsls	r1, r7, #31
   84846:	f140 8476 	bpl.w	85136 <_svfprintf_r+0x1426>
   8484a:	9a16      	ldr	r2, [sp, #88]	; 0x58
   8484c:	9917      	ldr	r1, [sp, #92]	; 0x5c
   8484e:	4414      	add	r4, r2
   84850:	e9c8 1200 	strd	r1, r2, [r8]
   84854:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   84856:	942a      	str	r4, [sp, #168]	; 0xa8
   84858:	3201      	adds	r2, #1
   8485a:	2a07      	cmp	r2, #7
   8485c:	9229      	str	r2, [sp, #164]	; 0xa4
   8485e:	f300 8513 	bgt.w	85288 <_svfprintf_r+0x1578>
   84862:	f108 0808 	add.w	r8, r8, #8
   84866:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84868:	18ae      	adds	r6, r5, r2
   8486a:	eba6 060b 	sub.w	r6, r6, fp
   8486e:	1ad5      	subs	r5, r2, r3
   84870:	42ae      	cmp	r6, r5
   84872:	bfa8      	it	ge
   84874:	462e      	movge	r6, r5
   84876:	2e00      	cmp	r6, #0
   84878:	dd0d      	ble.n	84896 <_svfprintf_r+0xb86>
   8487a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8487c:	4434      	add	r4, r6
   8487e:	3301      	adds	r3, #1
   84880:	2b07      	cmp	r3, #7
   84882:	f8c8 b000 	str.w	fp, [r8]
   84886:	f8c8 6004 	str.w	r6, [r8, #4]
   8488a:	942a      	str	r4, [sp, #168]	; 0xa8
   8488c:	9329      	str	r3, [sp, #164]	; 0xa4
   8488e:	f300 8571 	bgt.w	85374 <_svfprintf_r+0x1664>
   84892:	f108 0808 	add.w	r8, r8, #8
   84896:	2e00      	cmp	r6, #0
   84898:	bfa8      	it	ge
   8489a:	1bad      	subge	r5, r5, r6
   8489c:	2d00      	cmp	r5, #0
   8489e:	f77f ac11 	ble.w	840c4 <_svfprintf_r+0x3b4>
   848a2:	2d10      	cmp	r5, #16
   848a4:	f340 873c 	ble.w	85720 <_svfprintf_r+0x1a10>
   848a8:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 84a78 <_svfprintf_r+0xd68>
   848ac:	4622      	mov	r2, r4
   848ae:	4649      	mov	r1, r9
   848b0:	2610      	movs	r6, #16
   848b2:	46b9      	mov	r9, r7
   848b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   848b6:	460f      	mov	r7, r1
   848b8:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   848bc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   848be:	e005      	b.n	848cc <_svfprintf_r+0xbbc>
   848c0:	f108 0808 	add.w	r8, r8, #8
   848c4:	3d10      	subs	r5, #16
   848c6:	2d10      	cmp	r5, #16
   848c8:	f340 8353 	ble.w	84f72 <_svfprintf_r+0x1262>
   848cc:	3301      	adds	r3, #1
   848ce:	3210      	adds	r2, #16
   848d0:	2b07      	cmp	r3, #7
   848d2:	e9c8 7600 	strd	r7, r6, [r8]
   848d6:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   848da:	ddf1      	ble.n	848c0 <_svfprintf_r+0xbb0>
   848dc:	4621      	mov	r1, r4
   848de:	4658      	mov	r0, fp
   848e0:	aa28      	add	r2, sp, #160	; 0xa0
   848e2:	f004 fe73 	bl	895cc <__ssprint_r>
   848e6:	2800      	cmp	r0, #0
   848e8:	f47f ab75 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   848ec:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   848f0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   848f4:	e7e6      	b.n	848c4 <_svfprintf_r+0xbb4>
   848f6:	9b07      	ldr	r3, [sp, #28]
   848f8:	2b00      	cmp	r3, #0
   848fa:	f47f aafc 	bne.w	83ef6 <_svfprintf_r+0x1e6>
   848fe:	465f      	mov	r7, fp
   84900:	2300      	movs	r3, #0
   84902:	ad54      	add	r5, sp, #336	; 0x150
   84904:	9307      	str	r3, [sp, #28]
   84906:	930b      	str	r3, [sp, #44]	; 0x2c
   84908:	f7ff bafd 	b.w	83f06 <_svfprintf_r+0x1f6>
   8490c:	07fa      	lsls	r2, r7, #31
   8490e:	f53f ae7f 	bmi.w	84610 <_svfprintf_r+0x900>
   84912:	2301      	movs	r3, #1
   84914:	9e29      	ldr	r6, [sp, #164]	; 0xa4
   84916:	3401      	adds	r4, #1
   84918:	441e      	add	r6, r3
   8491a:	2e07      	cmp	r6, #7
   8491c:	f8c8 5000 	str.w	r5, [r8]
   84920:	942a      	str	r4, [sp, #168]	; 0xa8
   84922:	f8c8 3004 	str.w	r3, [r8, #4]
   84926:	9629      	str	r6, [sp, #164]	; 0xa4
   84928:	f77f aea5 	ble.w	84676 <_svfprintf_r+0x966>
   8492c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8492e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84930:	aa28      	add	r2, sp, #160	; 0xa0
   84932:	f004 fe4b 	bl	895cc <__ssprint_r>
   84936:	2800      	cmp	r0, #0
   84938:	f47f ab4d 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8493c:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84940:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84944:	e699      	b.n	8467a <_svfprintf_r+0x96a>
   84946:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84948:	1e5d      	subs	r5, r3, #1
   8494a:	2d00      	cmp	r5, #0
   8494c:	f77f ae95 	ble.w	8467a <_svfprintf_r+0x96a>
   84950:	2d10      	cmp	r5, #16
   84952:	f340 86df 	ble.w	85714 <_svfprintf_r+0x1a04>
   84956:	4622      	mov	r2, r4
   84958:	9707      	str	r7, [sp, #28]
   8495a:	f04f 0b10 	mov.w	fp, #16
   8495e:	f8df 9118 	ldr.w	r9, [pc, #280]	; 84a78 <_svfprintf_r+0xd68>
   84962:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84964:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   84966:	e005      	b.n	84974 <_svfprintf_r+0xc64>
   84968:	f108 0808 	add.w	r8, r8, #8
   8496c:	3d10      	subs	r5, #16
   8496e:	2d10      	cmp	r5, #16
   84970:	f340 837f 	ble.w	85072 <_svfprintf_r+0x1362>
   84974:	3601      	adds	r6, #1
   84976:	3210      	adds	r2, #16
   84978:	2e07      	cmp	r6, #7
   8497a:	e9c8 9b00 	strd	r9, fp, [r8]
   8497e:	e9cd 6229 	strd	r6, r2, [sp, #164]	; 0xa4
   84982:	ddf1      	ble.n	84968 <_svfprintf_r+0xc58>
   84984:	4639      	mov	r1, r7
   84986:	4620      	mov	r0, r4
   84988:	aa28      	add	r2, sp, #160	; 0xa0
   8498a:	f004 fe1f 	bl	895cc <__ssprint_r>
   8498e:	2800      	cmp	r0, #0
   84990:	f47f ab21 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84994:	e9dd 6229 	ldrd	r6, r2, [sp, #164]	; 0xa4
   84998:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8499c:	e7e6      	b.n	8496c <_svfprintf_r+0xc5c>
   8499e:	990c      	ldr	r1, [sp, #48]	; 0x30
   849a0:	980a      	ldr	r0, [sp, #40]	; 0x28
   849a2:	aa28      	add	r2, sp, #160	; 0xa0
   849a4:	f004 fe12 	bl	895cc <__ssprint_r>
   849a8:	2800      	cmp	r0, #0
   849aa:	f47f ab14 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   849ae:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   849b0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   849b4:	f7ff bb74 	b.w	840a0 <_svfprintf_r+0x390>
   849b8:	f01b 0310 	ands.w	r3, fp, #16
   849bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   849be:	d13a      	bne.n	84a36 <_svfprintf_r+0xd26>
   849c0:	f01b 0140 	ands.w	r1, fp, #64	; 0x40
   849c4:	d033      	beq.n	84a2e <_svfprintf_r+0xd1e>
   849c6:	f852 4b04 	ldr.w	r4, [r2], #4
   849ca:	4699      	mov	r9, r3
   849cc:	920e      	str	r2, [sp, #56]	; 0x38
   849ce:	2301      	movs	r3, #1
   849d0:	b2a4      	uxth	r4, r4
   849d2:	f7ff babd 	b.w	83f50 <_svfprintf_r+0x240>
   849d6:	232d      	movs	r3, #45	; 0x2d
   849d8:	4264      	negs	r4, r4
   849da:	f88d 3083 	strb.w	r3, [sp, #131]	; 0x83
   849de:	46bb      	mov	fp, r7
   849e0:	f04f 0301 	mov.w	r3, #1
   849e4:	eb69 0949 	sbc.w	r9, r9, r9, lsl #1
   849e8:	f7ff bab5 	b.w	83f56 <_svfprintf_r+0x246>
   849ec:	990c      	ldr	r1, [sp, #48]	; 0x30
   849ee:	980a      	ldr	r0, [sp, #40]	; 0x28
   849f0:	aa28      	add	r2, sp, #160	; 0xa0
   849f2:	f004 fdeb 	bl	895cc <__ssprint_r>
   849f6:	2800      	cmp	r0, #0
   849f8:	f47f aaed 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   849fc:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84a00:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84a04:	e613      	b.n	8462e <_svfprintf_r+0x91e>
   84a06:	990c      	ldr	r1, [sp, #48]	; 0x30
   84a08:	980a      	ldr	r0, [sp, #40]	; 0x28
   84a0a:	aa28      	add	r2, sp, #160	; 0xa0
   84a0c:	f004 fdde 	bl	895cc <__ssprint_r>
   84a10:	2800      	cmp	r0, #0
   84a12:	f47f aae0 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84a16:	e9dd 6429 	ldrd	r6, r4, [sp, #164]	; 0xa4
   84a1a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84a1e:	e613      	b.n	84648 <_svfprintf_r+0x938>
   84a20:	07fd      	lsls	r5, r7, #31
   84a22:	f57f ab4f 	bpl.w	840c4 <_svfprintf_r+0x3b4>
   84a26:	e524      	b.n	84472 <_svfprintf_r+0x762>
   84a28:	ad54      	add	r5, sp, #336	; 0x150
   84a2a:	f7ff ba6c 	b.w	83f06 <_svfprintf_r+0x1f6>
   84a2e:	f41b 7900 	ands.w	r9, fp, #512	; 0x200
   84a32:	f040 838a 	bne.w	8514a <_svfprintf_r+0x143a>
   84a36:	f852 4b04 	ldr.w	r4, [r2], #4
   84a3a:	2301      	movs	r3, #1
   84a3c:	920e      	str	r2, [sp, #56]	; 0x38
   84a3e:	f7ff ba87 	b.w	83f50 <_svfprintf_r+0x240>
   84a42:	05b8      	lsls	r0, r7, #22
   84a44:	f100 839b 	bmi.w	8517e <_svfprintf_r+0x146e>
   84a48:	ea4f 79e4 	mov.w	r9, r4, asr #31
   84a4c:	464b      	mov	r3, r9
   84a4e:	f7ff ba40 	b.w	83ed2 <_svfprintf_r+0x1c2>
   84a52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84a54:	9808      	ldr	r0, [sp, #32]
   84a56:	f853 1b04 	ldr.w	r1, [r3], #4
   84a5a:	17c2      	asrs	r2, r0, #31
   84a5c:	4655      	mov	r5, sl
   84a5e:	e9c1 0200 	strd	r0, r2, [r1]
   84a62:	930e      	str	r3, [sp, #56]	; 0x38
   84a64:	f7ff bb4c 	b.w	84100 <_svfprintf_r+0x3f0>
   84a68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84a6a:	f853 4b04 	ldr.w	r4, [r3], #4
   84a6e:	930e      	str	r3, [sp, #56]	; 0x38
   84a70:	f7ff ba6b 	b.w	83f4a <_svfprintf_r+0x23a>
   84a74:	0008a938 	.word	0x0008a938
   84a78:	0008a948 	.word	0x0008a948
   84a7c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   84a80:	4602      	mov	r2, r0
   84a82:	460b      	mov	r3, r1
   84a84:	f005 fce2 	bl	8a44c <__aeabi_dcmpun>
   84a88:	2800      	cmp	r0, #0
   84a8a:	f040 85e9 	bne.w	85660 <_svfprintf_r+0x1950>
   84a8e:	2e61      	cmp	r6, #97	; 0x61
   84a90:	f000 857d 	beq.w	8558e <_svfprintf_r+0x187e>
   84a94:	2e41      	cmp	r6, #65	; 0x41
   84a96:	f000 848b 	beq.w	853b0 <_svfprintf_r+0x16a0>
   84a9a:	9b07      	ldr	r3, [sp, #28]
   84a9c:	3301      	adds	r3, #1
   84a9e:	f000 838f 	beq.w	851c0 <_svfprintf_r+0x14b0>
   84aa2:	f026 0320 	bic.w	r3, r6, #32
   84aa6:	2b47      	cmp	r3, #71	; 0x47
   84aa8:	9306      	str	r3, [sp, #24]
   84aaa:	f000 858f 	beq.w	855cc <_svfprintf_r+0x18bc>
   84aae:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   84ab2:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   84ab6:	930f      	str	r3, [sp, #60]	; 0x3c
   84ab8:	4613      	mov	r3, r2
   84aba:	2b00      	cmp	r3, #0
   84abc:	f2c0 85b0 	blt.w	85620 <_svfprintf_r+0x1910>
   84ac0:	930b      	str	r3, [sp, #44]	; 0x2c
   84ac2:	2300      	movs	r3, #0
   84ac4:	468b      	mov	fp, r1
   84ac6:	931d      	str	r3, [sp, #116]	; 0x74
   84ac8:	930d      	str	r3, [sp, #52]	; 0x34
   84aca:	9b06      	ldr	r3, [sp, #24]
   84acc:	2b46      	cmp	r3, #70	; 0x46
   84ace:	f000 83e9 	beq.w	852a4 <_svfprintf_r+0x1594>
   84ad2:	2b45      	cmp	r3, #69	; 0x45
   84ad4:	f000 8546 	beq.w	85564 <_svfprintf_r+0x1854>
   84ad8:	9907      	ldr	r1, [sp, #28]
   84ada:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84adc:	9101      	str	r1, [sp, #4]
   84ade:	2102      	movs	r1, #2
   84ae0:	9100      	str	r1, [sp, #0]
   84ae2:	a926      	add	r1, sp, #152	; 0x98
   84ae4:	9104      	str	r1, [sp, #16]
   84ae6:	a923      	add	r1, sp, #140	; 0x8c
   84ae8:	9103      	str	r1, [sp, #12]
   84aea:	a922      	add	r1, sp, #136	; 0x88
   84aec:	465a      	mov	r2, fp
   84aee:	980a      	ldr	r0, [sp, #40]	; 0x28
   84af0:	9102      	str	r1, [sp, #8]
   84af2:	f001 feb9 	bl	86868 <_dtoa_r>
   84af6:	9b06      	ldr	r3, [sp, #24]
   84af8:	4605      	mov	r5, r0
   84afa:	2b47      	cmp	r3, #71	; 0x47
   84afc:	f040 863a 	bne.w	85774 <_svfprintf_r+0x1a64>
   84b00:	f017 0f01 	tst.w	r7, #1
   84b04:	46b9      	mov	r9, r7
   84b06:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   84b08:	f040 84fe 	bne.w	85508 <_svfprintf_r+0x17f8>
   84b0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   84b0e:	1b5b      	subs	r3, r3, r5
   84b10:	9312      	str	r3, [sp, #72]	; 0x48
   84b12:	9b06      	ldr	r3, [sp, #24]
   84b14:	2b47      	cmp	r3, #71	; 0x47
   84b16:	f000 836e 	beq.w	851f6 <_svfprintf_r+0x14e6>
   84b1a:	9b06      	ldr	r3, [sp, #24]
   84b1c:	2b46      	cmp	r3, #70	; 0x46
   84b1e:	f000 83f0 	beq.w	85302 <_svfprintf_r+0x15f2>
   84b22:	9b22      	ldr	r3, [sp, #136]	; 0x88
   84b24:	9310      	str	r3, [sp, #64]	; 0x40
   84b26:	9b10      	ldr	r3, [sp, #64]	; 0x40
   84b28:	9a06      	ldr	r2, [sp, #24]
   84b2a:	3b01      	subs	r3, #1
   84b2c:	2a41      	cmp	r2, #65	; 0x41
   84b2e:	9322      	str	r3, [sp, #136]	; 0x88
   84b30:	f000 85bb 	beq.w	856aa <_svfprintf_r+0x199a>
   84b34:	2100      	movs	r1, #0
   84b36:	b2f2      	uxtb	r2, r6
   84b38:	2b00      	cmp	r3, #0
   84b3a:	f88d 2090 	strb.w	r2, [sp, #144]	; 0x90
   84b3e:	bfb6      	itet	lt
   84b40:	222d      	movlt	r2, #45	; 0x2d
   84b42:	222b      	movge	r2, #43	; 0x2b
   84b44:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
   84b46:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
   84b4a:	bfb8      	it	lt
   84b4c:	f1c3 0301 	rsblt	r3, r3, #1
   84b50:	2b09      	cmp	r3, #9
   84b52:	f340 859b 	ble.w	8568c <_svfprintf_r+0x197c>
   84b56:	f10d 0c9f 	add.w	ip, sp, #159	; 0x9f
   84b5a:	4662      	mov	r2, ip
   84b5c:	4fb6      	ldr	r7, [pc, #728]	; (84e38 <_svfprintf_r+0x1128>)
   84b5e:	461c      	mov	r4, r3
   84b60:	4610      	mov	r0, r2
   84b62:	fb87 1203 	smull	r1, r2, r7, r3
   84b66:	17d9      	asrs	r1, r3, #31
   84b68:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
   84b6c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
   84b70:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   84b74:	3230      	adds	r2, #48	; 0x30
   84b76:	2c63      	cmp	r4, #99	; 0x63
   84b78:	f800 2c01 	strb.w	r2, [r0, #-1]
   84b7c:	460b      	mov	r3, r1
   84b7e:	f100 32ff 	add.w	r2, r0, #4294967295
   84b82:	dcec      	bgt.n	84b5e <_svfprintf_r+0xe4e>
   84b84:	3330      	adds	r3, #48	; 0x30
   84b86:	1e81      	subs	r1, r0, #2
   84b88:	b2db      	uxtb	r3, r3
   84b8a:	458c      	cmp	ip, r1
   84b8c:	f802 3c01 	strb.w	r3, [r2, #-1]
   84b90:	f240 85f9 	bls.w	85786 <_svfprintf_r+0x1a76>
   84b94:	f10d 0192 	add.w	r1, sp, #146	; 0x92
   84b98:	e001      	b.n	84b9e <_svfprintf_r+0xe8e>
   84b9a:	f812 3b01 	ldrb.w	r3, [r2], #1
   84b9e:	4594      	cmp	ip, r2
   84ba0:	f801 3b01 	strb.w	r3, [r1], #1
   84ba4:	d1f9      	bne.n	84b9a <_svfprintf_r+0xe8a>
   84ba6:	f10d 03a1 	add.w	r3, sp, #161	; 0xa1
   84baa:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   84bae:	1a1b      	subs	r3, r3, r0
   84bb0:	4413      	add	r3, r2
   84bb2:	aa24      	add	r2, sp, #144	; 0x90
   84bb4:	1a9b      	subs	r3, r3, r2
   84bb6:	931a      	str	r3, [sp, #104]	; 0x68
   84bb8:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84bba:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   84bbc:	2b01      	cmp	r3, #1
   84bbe:	441a      	add	r2, r3
   84bc0:	920b      	str	r2, [sp, #44]	; 0x2c
   84bc2:	f340 8581 	ble.w	856c8 <_svfprintf_r+0x19b8>
   84bc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84bc8:	9a16      	ldr	r2, [sp, #88]	; 0x58
   84bca:	4413      	add	r3, r2
   84bcc:	930b      	str	r3, [sp, #44]	; 0x2c
   84bce:	2300      	movs	r3, #0
   84bd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   84bd2:	f429 6780 	bic.w	r7, r9, #1024	; 0x400
   84bd6:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
   84bda:	f447 7780 	orr.w	r7, r7, #256	; 0x100
   84bde:	930f      	str	r3, [sp, #60]	; 0x3c
   84be0:	9206      	str	r2, [sp, #24]
   84be2:	9313      	str	r3, [sp, #76]	; 0x4c
   84be4:	9310      	str	r3, [sp, #64]	; 0x40
   84be6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   84be8:	2b00      	cmp	r3, #0
   84bea:	f040 832c 	bne.w	85246 <_svfprintf_r+0x1536>
   84bee:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84bf2:	9307      	str	r3, [sp, #28]
   84bf4:	f7ff b994 	b.w	83f20 <_svfprintf_r+0x210>
   84bf8:	46bb      	mov	fp, r7
   84bfa:	f7ff bb2f 	b.w	8425c <_svfprintf_r+0x54c>
   84bfe:	4b8f      	ldr	r3, [pc, #572]	; (84e3c <_svfprintf_r+0x112c>)
   84c00:	9318      	str	r3, [sp, #96]	; 0x60
   84c02:	f017 0920 	ands.w	r9, r7, #32
   84c06:	f000 80f5 	beq.w	84df4 <_svfprintf_r+0x10e4>
   84c0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84c0c:	3307      	adds	r3, #7
   84c0e:	f023 0307 	bic.w	r3, r3, #7
   84c12:	f8d3 9004 	ldr.w	r9, [r3, #4]
   84c16:	f853 4b08 	ldr.w	r4, [r3], #8
   84c1a:	930e      	str	r3, [sp, #56]	; 0x38
   84c1c:	07f8      	lsls	r0, r7, #31
   84c1e:	d509      	bpl.n	84c34 <_svfprintf_r+0xf24>
   84c20:	ea54 0309 	orrs.w	r3, r4, r9
   84c24:	d006      	beq.n	84c34 <_svfprintf_r+0xf24>
   84c26:	2330      	movs	r3, #48	; 0x30
   84c28:	f88d 6085 	strb.w	r6, [sp, #133]	; 0x85
   84c2c:	f047 0702 	orr.w	r7, r7, #2
   84c30:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   84c34:	2302      	movs	r3, #2
   84c36:	f427 6b80 	bic.w	fp, r7, #1024	; 0x400
   84c3a:	f7ff b989 	b.w	83f50 <_svfprintf_r+0x240>
   84c3e:	4b80      	ldr	r3, [pc, #512]	; (84e40 <_svfprintf_r+0x1130>)
   84c40:	9318      	str	r3, [sp, #96]	; 0x60
   84c42:	e7de      	b.n	84c02 <_svfprintf_r+0xef2>
   84c44:	990c      	ldr	r1, [sp, #48]	; 0x30
   84c46:	980a      	ldr	r0, [sp, #40]	; 0x28
   84c48:	aa28      	add	r2, sp, #160	; 0xa0
   84c4a:	f004 fcbf 	bl	895cc <__ssprint_r>
   84c4e:	2800      	cmp	r0, #0
   84c50:	f47f a9c1 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84c54:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84c56:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84c5a:	e418      	b.n	8448e <_svfprintf_r+0x77e>
   84c5c:	2140      	movs	r1, #64	; 0x40
   84c5e:	980a      	ldr	r0, [sp, #40]	; 0x28
   84c60:	f003 fb00 	bl	88264 <_malloc_r>
   84c64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   84c66:	6018      	str	r0, [r3, #0]
   84c68:	6118      	str	r0, [r3, #16]
   84c6a:	2800      	cmp	r0, #0
   84c6c:	f000 8597 	beq.w	8579e <_svfprintf_r+0x1a8e>
   84c70:	2340      	movs	r3, #64	; 0x40
   84c72:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   84c74:	6153      	str	r3, [r2, #20]
   84c76:	f7ff b862 	b.w	83d3e <_svfprintf_r+0x2e>
   84c7a:	2e10      	cmp	r6, #16
   84c7c:	f340 8576 	ble.w	8576c <_svfprintf_r+0x1a5c>
   84c80:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 84e44 <_svfprintf_r+0x1134>
   84c84:	4642      	mov	r2, r8
   84c86:	4648      	mov	r0, r9
   84c88:	4621      	mov	r1, r4
   84c8a:	46a8      	mov	r8, r5
   84c8c:	46b9      	mov	r9, r7
   84c8e:	f04f 0b10 	mov.w	fp, #16
   84c92:	4607      	mov	r7, r0
   84c94:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84c96:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   84c98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   84c9a:	e004      	b.n	84ca6 <_svfprintf_r+0xf96>
   84c9c:	3208      	adds	r2, #8
   84c9e:	3e10      	subs	r6, #16
   84ca0:	2e10      	cmp	r6, #16
   84ca2:	f340 8213 	ble.w	850cc <_svfprintf_r+0x13bc>
   84ca6:	3301      	adds	r3, #1
   84ca8:	3110      	adds	r1, #16
   84caa:	2b07      	cmp	r3, #7
   84cac:	e9c2 7b00 	strd	r7, fp, [r2]
   84cb0:	e9cd 3129 	strd	r3, r1, [sp, #164]	; 0xa4
   84cb4:	ddf2      	ble.n	84c9c <_svfprintf_r+0xf8c>
   84cb6:	4629      	mov	r1, r5
   84cb8:	4620      	mov	r0, r4
   84cba:	aa28      	add	r2, sp, #160	; 0xa0
   84cbc:	f004 fc86 	bl	895cc <__ssprint_r>
   84cc0:	2800      	cmp	r0, #0
   84cc2:	f47f a988 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84cc6:	e9dd 3129 	ldrd	r3, r1, [sp, #164]	; 0xa4
   84cca:	aa2b      	add	r2, sp, #172	; 0xac
   84ccc:	e7e7      	b.n	84c9e <_svfprintf_r+0xf8e>
   84cce:	4628      	mov	r0, r5
   84cd0:	f8cd 901c 	str.w	r9, [sp, #28]
   84cd4:	940e      	str	r4, [sp, #56]	; 0x38
   84cd6:	f7fe ffb9 	bl	83c4c <strlen>
   84cda:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
   84cde:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84ce2:	900b      	str	r0, [sp, #44]	; 0x2c
   84ce4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
   84ce8:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   84cec:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
   84cf0:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
   84cf4:	9306      	str	r3, [sp, #24]
   84cf6:	f7ff b913 	b.w	83f20 <_svfprintf_r+0x210>
   84cfa:	9b12      	ldr	r3, [sp, #72]	; 0x48
   84cfc:	4642      	mov	r2, r8
   84cfe:	f8dd 804c 	ldr.w	r8, [sp, #76]	; 0x4c
   84d02:	18eb      	adds	r3, r5, r3
   84d04:	465e      	mov	r6, fp
   84d06:	9307      	str	r3, [sp, #28]
   84d08:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   84d0c:	9710      	str	r7, [sp, #64]	; 0x40
   84d0e:	4621      	mov	r1, r4
   84d10:	9f19      	ldr	r7, [sp, #100]	; 0x64
   84d12:	f8dd 9070 	ldr.w	r9, [sp, #112]	; 0x70
   84d16:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
   84d1a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   84d1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d20:	9513      	str	r5, [sp, #76]	; 0x4c
   84d22:	f1b8 0f00 	cmp.w	r8, #0
   84d26:	d02e      	beq.n	84d86 <_svfprintf_r+0x1076>
   84d28:	bb83      	cbnz	r3, 84d8c <_svfprintf_r+0x107c>
   84d2a:	3f01      	subs	r7, #1
   84d2c:	f108 38ff 	add.w	r8, r8, #4294967295
   84d30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
   84d32:	4449      	add	r1, r9
   84d34:	e9c2 3900 	strd	r3, r9, [r2]
   84d38:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84d3a:	912a      	str	r1, [sp, #168]	; 0xa8
   84d3c:	3301      	adds	r3, #1
   84d3e:	2b07      	cmp	r3, #7
   84d40:	9329      	str	r3, [sp, #164]	; 0xa4
   84d42:	dc60      	bgt.n	84e06 <_svfprintf_r+0x10f6>
   84d44:	3208      	adds	r2, #8
   84d46:	9b07      	ldr	r3, [sp, #28]
   84d48:	7838      	ldrb	r0, [r7, #0]
   84d4a:	1b9b      	subs	r3, r3, r6
   84d4c:	4283      	cmp	r3, r0
   84d4e:	bfa8      	it	ge
   84d50:	4603      	movge	r3, r0
   84d52:	2b00      	cmp	r3, #0
   84d54:	461c      	mov	r4, r3
   84d56:	dd0b      	ble.n	84d70 <_svfprintf_r+0x1060>
   84d58:	9829      	ldr	r0, [sp, #164]	; 0xa4
   84d5a:	4419      	add	r1, r3
   84d5c:	3001      	adds	r0, #1
   84d5e:	2807      	cmp	r0, #7
   84d60:	e9c2 6300 	strd	r6, r3, [r2]
   84d64:	912a      	str	r1, [sp, #168]	; 0xa8
   84d66:	9029      	str	r0, [sp, #164]	; 0xa4
   84d68:	f300 8114 	bgt.w	84f94 <_svfprintf_r+0x1284>
   84d6c:	7838      	ldrb	r0, [r7, #0]
   84d6e:	3208      	adds	r2, #8
   84d70:	2c00      	cmp	r4, #0
   84d72:	bfb4      	ite	lt
   84d74:	4605      	movlt	r5, r0
   84d76:	1b05      	subge	r5, r0, r4
   84d78:	2d00      	cmp	r5, #0
   84d7a:	dc0b      	bgt.n	84d94 <_svfprintf_r+0x1084>
   84d7c:	4406      	add	r6, r0
   84d7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d80:	f1b8 0f00 	cmp.w	r8, #0
   84d84:	d1d0      	bne.n	84d28 <_svfprintf_r+0x1018>
   84d86:	2b00      	cmp	r3, #0
   84d88:	f000 8226 	beq.w	851d8 <_svfprintf_r+0x14c8>
   84d8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   84d8e:	3b01      	subs	r3, #1
   84d90:	930f      	str	r3, [sp, #60]	; 0x3c
   84d92:	e7cd      	b.n	84d30 <_svfprintf_r+0x1020>
   84d94:	2d10      	cmp	r5, #16
   84d96:	f340 849d 	ble.w	856d4 <_svfprintf_r+0x19c4>
   84d9a:	2410      	movs	r4, #16
   84d9c:	9829      	ldr	r0, [sp, #164]	; 0xa4
   84d9e:	e004      	b.n	84daa <_svfprintf_r+0x109a>
   84da0:	3d10      	subs	r5, #16
   84da2:	2d10      	cmp	r5, #16
   84da4:	f102 0208 	add.w	r2, r2, #8
   84da8:	dd16      	ble.n	84dd8 <_svfprintf_r+0x10c8>
   84daa:	3001      	adds	r0, #1
   84dac:	4b25      	ldr	r3, [pc, #148]	; (84e44 <_svfprintf_r+0x1134>)
   84dae:	3110      	adds	r1, #16
   84db0:	2807      	cmp	r0, #7
   84db2:	e9c2 3400 	strd	r3, r4, [r2]
   84db6:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   84dba:	ddf1      	ble.n	84da0 <_svfprintf_r+0x1090>
   84dbc:	4659      	mov	r1, fp
   84dbe:	4650      	mov	r0, sl
   84dc0:	aa28      	add	r2, sp, #160	; 0xa0
   84dc2:	f004 fc03 	bl	895cc <__ssprint_r>
   84dc6:	2800      	cmp	r0, #0
   84dc8:	f47f a905 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84dcc:	e9dd 0129 	ldrd	r0, r1, [sp, #164]	; 0xa4
   84dd0:	3d10      	subs	r5, #16
   84dd2:	2d10      	cmp	r5, #16
   84dd4:	aa2b      	add	r2, sp, #172	; 0xac
   84dd6:	dce8      	bgt.n	84daa <_svfprintf_r+0x109a>
   84dd8:	3001      	adds	r0, #1
   84dda:	4b1a      	ldr	r3, [pc, #104]	; (84e44 <_svfprintf_r+0x1134>)
   84ddc:	4429      	add	r1, r5
   84dde:	2807      	cmp	r0, #7
   84de0:	e9cd 0129 	strd	r0, r1, [sp, #164]	; 0xa4
   84de4:	6055      	str	r5, [r2, #4]
   84de6:	6013      	str	r3, [r2, #0]
   84de8:	f300 8241 	bgt.w	8526e <_svfprintf_r+0x155e>
   84dec:	7838      	ldrb	r0, [r7, #0]
   84dee:	3208      	adds	r2, #8
   84df0:	4406      	add	r6, r0
   84df2:	e7c4      	b.n	84d7e <_svfprintf_r+0x106e>
   84df4:	f017 0310 	ands.w	r3, r7, #16
   84df8:	f000 80a0 	beq.w	84f3c <_svfprintf_r+0x122c>
   84dfc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84dfe:	f853 4b04 	ldr.w	r4, [r3], #4
   84e02:	930e      	str	r3, [sp, #56]	; 0x38
   84e04:	e70a      	b.n	84c1c <_svfprintf_r+0xf0c>
   84e06:	4659      	mov	r1, fp
   84e08:	4650      	mov	r0, sl
   84e0a:	aa28      	add	r2, sp, #160	; 0xa0
   84e0c:	f004 fbde 	bl	895cc <__ssprint_r>
   84e10:	2800      	cmp	r0, #0
   84e12:	f47f a8e0 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84e16:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84e18:	aa2b      	add	r2, sp, #172	; 0xac
   84e1a:	e794      	b.n	84d46 <_svfprintf_r+0x1036>
   84e1c:	2300      	movs	r3, #0
   84e1e:	f40b 6280 	and.w	r2, fp, #1024	; 0x400
   84e22:	9606      	str	r6, [sp, #24]
   84e24:	f8cd a02c 	str.w	sl, [sp, #44]	; 0x2c
   84e28:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   84e2c:	4692      	mov	sl, r2
   84e2e:	461e      	mov	r6, r3
   84e30:	f8dd 8064 	ldr.w	r8, [sp, #100]	; 0x64
   84e34:	af54      	add	r7, sp, #336	; 0x150
   84e36:	e014      	b.n	84e62 <_svfprintf_r+0x1152>
   84e38:	66666667 	.word	0x66666667
   84e3c:	0008a904 	.word	0x0008a904
   84e40:	0008a918 	.word	0x0008a918
   84e44:	0008a948 	.word	0x0008a948
   84e48:	2300      	movs	r3, #0
   84e4a:	4620      	mov	r0, r4
   84e4c:	4649      	mov	r1, r9
   84e4e:	220a      	movs	r2, #10
   84e50:	f005 fb3a 	bl	8a4c8 <__aeabi_uldivmod>
   84e54:	2c0a      	cmp	r4, #10
   84e56:	f179 0300 	sbcs.w	r3, r9, #0
   84e5a:	d31b      	bcc.n	84e94 <_svfprintf_r+0x1184>
   84e5c:	4604      	mov	r4, r0
   84e5e:	4689      	mov	r9, r1
   84e60:	462f      	mov	r7, r5
   84e62:	4620      	mov	r0, r4
   84e64:	220a      	movs	r2, #10
   84e66:	2300      	movs	r3, #0
   84e68:	4649      	mov	r1, r9
   84e6a:	f005 fb2d 	bl	8a4c8 <__aeabi_uldivmod>
   84e6e:	3230      	adds	r2, #48	; 0x30
   84e70:	1e7d      	subs	r5, r7, #1
   84e72:	3601      	adds	r6, #1
   84e74:	f807 2c01 	strb.w	r2, [r7, #-1]
   84e78:	f1ba 0f00 	cmp.w	sl, #0
   84e7c:	d0e4      	beq.n	84e48 <_svfprintf_r+0x1138>
   84e7e:	f898 3000 	ldrb.w	r3, [r8]
   84e82:	429e      	cmp	r6, r3
   84e84:	d1e0      	bne.n	84e48 <_svfprintf_r+0x1138>
   84e86:	2eff      	cmp	r6, #255	; 0xff
   84e88:	d0de      	beq.n	84e48 <_svfprintf_r+0x1138>
   84e8a:	2c0a      	cmp	r4, #10
   84e8c:	f179 0300 	sbcs.w	r3, r9, #0
   84e90:	f080 8130 	bcs.w	850f4 <_svfprintf_r+0x13e4>
   84e94:	ab54      	add	r3, sp, #336	; 0x150
   84e96:	1b5b      	subs	r3, r3, r5
   84e98:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   84e9c:	f8cd 8064 	str.w	r8, [sp, #100]	; 0x64
   84ea0:	9612      	str	r6, [sp, #72]	; 0x48
   84ea2:	465f      	mov	r7, fp
   84ea4:	9e06      	ldr	r6, [sp, #24]
   84ea6:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   84eaa:	930b      	str	r3, [sp, #44]	; 0x2c
   84eac:	f7ff b82b 	b.w	83f06 <_svfprintf_r+0x1f6>
   84eb0:	990c      	ldr	r1, [sp, #48]	; 0x30
   84eb2:	980a      	ldr	r0, [sp, #40]	; 0x28
   84eb4:	aa28      	add	r2, sp, #160	; 0xa0
   84eb6:	931d      	str	r3, [sp, #116]	; 0x74
   84eb8:	f004 fb88 	bl	895cc <__ssprint_r>
   84ebc:	2800      	cmp	r0, #0
   84ebe:	f47f a88a 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84ec2:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   84ec6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84ec8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
   84eca:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84ece:	f7ff b8b8 	b.w	84042 <_svfprintf_r+0x332>
   84ed2:	2301      	movs	r3, #1
   84ed4:	f8c8 3004 	str.w	r3, [r8, #4]
   84ed8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84eda:	4abc      	ldr	r2, [pc, #752]	; (851cc <_svfprintf_r+0x14bc>)
   84edc:	3301      	adds	r3, #1
   84ede:	3401      	adds	r4, #1
   84ee0:	2b07      	cmp	r3, #7
   84ee2:	942a      	str	r4, [sp, #168]	; 0xa8
   84ee4:	9329      	str	r3, [sp, #164]	; 0xa4
   84ee6:	f8c8 2000 	str.w	r2, [r8]
   84eea:	f300 8117 	bgt.w	8511c <_svfprintf_r+0x140c>
   84eee:	f108 0808 	add.w	r8, r8, #8
   84ef2:	2900      	cmp	r1, #0
   84ef4:	f040 8086 	bne.w	85004 <_svfprintf_r+0x12f4>
   84ef8:	9a12      	ldr	r2, [sp, #72]	; 0x48
   84efa:	f007 0301 	and.w	r3, r7, #1
   84efe:	4313      	orrs	r3, r2
   84f00:	f43f a8e0 	beq.w	840c4 <_svfprintf_r+0x3b4>
   84f04:	9b16      	ldr	r3, [sp, #88]	; 0x58
   84f06:	9917      	ldr	r1, [sp, #92]	; 0x5c
   84f08:	191a      	adds	r2, r3, r4
   84f0a:	e9c8 1300 	strd	r1, r3, [r8]
   84f0e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   84f10:	922a      	str	r2, [sp, #168]	; 0xa8
   84f12:	3301      	adds	r3, #1
   84f14:	2b07      	cmp	r3, #7
   84f16:	9329      	str	r3, [sp, #164]	; 0xa4
   84f18:	f300 8137 	bgt.w	8518a <_svfprintf_r+0x147a>
   84f1c:	f108 0808 	add.w	r8, r8, #8
   84f20:	9912      	ldr	r1, [sp, #72]	; 0x48
   84f22:	3301      	adds	r3, #1
   84f24:	188c      	adds	r4, r1, r2
   84f26:	2b07      	cmp	r3, #7
   84f28:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84f2c:	f8c8 5000 	str.w	r5, [r8]
   84f30:	f8c8 1004 	str.w	r1, [r8, #4]
   84f34:	f77f a8c4 	ble.w	840c0 <_svfprintf_r+0x3b0>
   84f38:	f7ff bbac 	b.w	84694 <_svfprintf_r+0x984>
   84f3c:	f017 0240 	ands.w	r2, r7, #64	; 0x40
   84f40:	f000 80a5 	beq.w	8508e <_svfprintf_r+0x137e>
   84f44:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   84f46:	4699      	mov	r9, r3
   84f48:	f852 4b04 	ldr.w	r4, [r2], #4
   84f4c:	920e      	str	r2, [sp, #56]	; 0x38
   84f4e:	b2a4      	uxth	r4, r4
   84f50:	e664      	b.n	84c1c <_svfprintf_r+0xf0c>
   84f52:	46bb      	mov	fp, r7
   84f54:	f7fe bfca 	b.w	83eec <_svfprintf_r+0x1dc>
   84f58:	990c      	ldr	r1, [sp, #48]	; 0x30
   84f5a:	980a      	ldr	r0, [sp, #40]	; 0x28
   84f5c:	aa28      	add	r2, sp, #160	; 0xa0
   84f5e:	f004 fb35 	bl	895cc <__ssprint_r>
   84f62:	2800      	cmp	r0, #0
   84f64:	f47f a837 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84f68:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84f6a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84f6e:	f7ff ba7b 	b.w	84468 <_svfprintf_r+0x758>
   84f72:	4614      	mov	r4, r2
   84f74:	463a      	mov	r2, r7
   84f76:	464f      	mov	r7, r9
   84f78:	4691      	mov	r9, r2
   84f7a:	3301      	adds	r3, #1
   84f7c:	442c      	add	r4, r5
   84f7e:	2b07      	cmp	r3, #7
   84f80:	f8c8 9000 	str.w	r9, [r8]
   84f84:	f8c8 5004 	str.w	r5, [r8, #4]
   84f88:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   84f8c:	f77f a898 	ble.w	840c0 <_svfprintf_r+0x3b0>
   84f90:	f7ff bb80 	b.w	84694 <_svfprintf_r+0x984>
   84f94:	4659      	mov	r1, fp
   84f96:	4650      	mov	r0, sl
   84f98:	aa28      	add	r2, sp, #160	; 0xa0
   84f9a:	f004 fb17 	bl	895cc <__ssprint_r>
   84f9e:	2800      	cmp	r0, #0
   84fa0:	f47f a819 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84fa4:	7838      	ldrb	r0, [r7, #0]
   84fa6:	992a      	ldr	r1, [sp, #168]	; 0xa8
   84fa8:	aa2b      	add	r2, sp, #172	; 0xac
   84faa:	e6e1      	b.n	84d70 <_svfprintf_r+0x1060>
   84fac:	990c      	ldr	r1, [sp, #48]	; 0x30
   84fae:	980a      	ldr	r0, [sp, #40]	; 0x28
   84fb0:	aa28      	add	r2, sp, #160	; 0xa0
   84fb2:	f004 fb0b 	bl	895cc <__ssprint_r>
   84fb6:	2800      	cmp	r0, #0
   84fb8:	f47f a80d 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   84fbc:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   84fbe:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   84fc2:	f7ff b865 	b.w	84090 <_svfprintf_r+0x380>
   84fc6:	2b01      	cmp	r3, #1
   84fc8:	46bb      	mov	fp, r7
   84fca:	f47f a9f5 	bne.w	843b8 <_svfprintf_r+0x6a8>
   84fce:	f7fe bf92 	b.w	83ef6 <_svfprintf_r+0x1e6>
   84fd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   84fd4:	9908      	ldr	r1, [sp, #32]
   84fd6:	f853 2b04 	ldr.w	r2, [r3], #4
   84fda:	4655      	mov	r5, sl
   84fdc:	6011      	str	r1, [r2, #0]
   84fde:	930e      	str	r3, [sp, #56]	; 0x38
   84fe0:	f7ff b88e 	b.w	84100 <_svfprintf_r+0x3f0>
   84fe4:	2b06      	cmp	r3, #6
   84fe6:	4629      	mov	r1, r5
   84fe8:	bf28      	it	cs
   84fea:	2306      	movcs	r3, #6
   84fec:	462a      	mov	r2, r5
   84fee:	9507      	str	r5, [sp, #28]
   84ff0:	950d      	str	r5, [sp, #52]	; 0x34
   84ff2:	9306      	str	r3, [sp, #24]
   84ff4:	4d76      	ldr	r5, [pc, #472]	; (851d0 <_svfprintf_r+0x14c0>)
   84ff6:	940e      	str	r4, [sp, #56]	; 0x38
   84ff8:	930b      	str	r3, [sp, #44]	; 0x2c
   84ffa:	910f      	str	r1, [sp, #60]	; 0x3c
   84ffc:	9113      	str	r1, [sp, #76]	; 0x4c
   84ffe:	9110      	str	r1, [sp, #64]	; 0x40
   85000:	f7fe bf8e 	b.w	83f20 <_svfprintf_r+0x210>
   85004:	9b16      	ldr	r3, [sp, #88]	; 0x58
   85006:	9817      	ldr	r0, [sp, #92]	; 0x5c
   85008:	191a      	adds	r2, r3, r4
   8500a:	e9c8 0300 	strd	r0, r3, [r8]
   8500e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85010:	922a      	str	r2, [sp, #168]	; 0xa8
   85012:	3301      	adds	r3, #1
   85014:	2b07      	cmp	r3, #7
   85016:	9329      	str	r3, [sp, #164]	; 0xa4
   85018:	f300 80b7 	bgt.w	8518a <_svfprintf_r+0x147a>
   8501c:	f108 0808 	add.w	r8, r8, #8
   85020:	2900      	cmp	r1, #0
   85022:	f6bf af7d 	bge.w	84f20 <_svfprintf_r+0x1210>
   85026:	424e      	negs	r6, r1
   85028:	3110      	adds	r1, #16
   8502a:	f280 83a9 	bge.w	85780 <_svfprintf_r+0x1a70>
   8502e:	4641      	mov	r1, r8
   85030:	2410      	movs	r4, #16
   85032:	46a8      	mov	r8, r5
   85034:	f8df 919c 	ldr.w	r9, [pc, #412]	; 851d4 <_svfprintf_r+0x14c4>
   85038:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
   8503c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   8503e:	e004      	b.n	8504a <_svfprintf_r+0x133a>
   85040:	3108      	adds	r1, #8
   85042:	3e10      	subs	r6, #16
   85044:	2e10      	cmp	r6, #16
   85046:	f340 82a7 	ble.w	85598 <_svfprintf_r+0x1888>
   8504a:	3301      	adds	r3, #1
   8504c:	3210      	adds	r2, #16
   8504e:	2b07      	cmp	r3, #7
   85050:	e9c1 9400 	strd	r9, r4, [r1]
   85054:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   85058:	ddf2      	ble.n	85040 <_svfprintf_r+0x1330>
   8505a:	4629      	mov	r1, r5
   8505c:	4658      	mov	r0, fp
   8505e:	aa28      	add	r2, sp, #160	; 0xa0
   85060:	f004 fab4 	bl	895cc <__ssprint_r>
   85064:	2800      	cmp	r0, #0
   85066:	f47e afb6 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8506a:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   8506e:	a92b      	add	r1, sp, #172	; 0xac
   85070:	e7e7      	b.n	85042 <_svfprintf_r+0x1332>
   85072:	4614      	mov	r4, r2
   85074:	9f07      	ldr	r7, [sp, #28]
   85076:	3601      	adds	r6, #1
   85078:	442c      	add	r4, r5
   8507a:	2e07      	cmp	r6, #7
   8507c:	e9cd 6429 	strd	r6, r4, [sp, #164]	; 0xa4
   85080:	f8c8 9000 	str.w	r9, [r8]
   85084:	f8c8 5004 	str.w	r5, [r8, #4]
   85088:	f77f aaf5 	ble.w	84676 <_svfprintf_r+0x966>
   8508c:	e44e      	b.n	8492c <_svfprintf_r+0xc1c>
   8508e:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   85092:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85094:	d066      	beq.n	85164 <_svfprintf_r+0x1454>
   85096:	f853 4b04 	ldr.w	r4, [r3], #4
   8509a:	4691      	mov	r9, r2
   8509c:	930e      	str	r3, [sp, #56]	; 0x38
   8509e:	b2e4      	uxtb	r4, r4
   850a0:	e5bc      	b.n	84c1c <_svfprintf_r+0xf0c>
   850a2:	f417 7900 	ands.w	r9, r7, #512	; 0x200
   850a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   850a8:	d057      	beq.n	8515a <_svfprintf_r+0x144a>
   850aa:	f853 4b04 	ldr.w	r4, [r3], #4
   850ae:	4691      	mov	r9, r2
   850b0:	930e      	str	r3, [sp, #56]	; 0x38
   850b2:	b2e4      	uxtb	r4, r4
   850b4:	f7fe bf49 	b.w	83f4a <_svfprintf_r+0x23a>
   850b8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   850ba:	f8df 9118 	ldr.w	r9, [pc, #280]	; 851d4 <_svfprintf_r+0x14c4>
   850be:	f7ff ba95 	b.w	845ec <_svfprintf_r+0x8dc>
   850c2:	222d      	movs	r2, #45	; 0x2d
   850c4:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   850c8:	f7ff b857 	b.w	8417a <_svfprintf_r+0x46a>
   850cc:	4645      	mov	r5, r8
   850ce:	4690      	mov	r8, r2
   850d0:	463a      	mov	r2, r7
   850d2:	460c      	mov	r4, r1
   850d4:	464f      	mov	r7, r9
   850d6:	4691      	mov	r9, r2
   850d8:	3301      	adds	r3, #1
   850da:	4434      	add	r4, r6
   850dc:	2b07      	cmp	r3, #7
   850de:	e9cd 3429 	strd	r3, r4, [sp, #164]	; 0xa4
   850e2:	f8c8 9000 	str.w	r9, [r8]
   850e6:	f8c8 6004 	str.w	r6, [r8, #4]
   850ea:	dc5c      	bgt.n	851a6 <_svfprintf_r+0x1496>
   850ec:	f108 0808 	add.w	r8, r8, #8
   850f0:	f7ff bb9e 	b.w	84830 <_svfprintf_r+0xb20>
   850f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
   850f6:	991b      	ldr	r1, [sp, #108]	; 0x6c
   850f8:	1aed      	subs	r5, r5, r3
   850fa:	461a      	mov	r2, r3
   850fc:	4628      	mov	r0, r5
   850fe:	f7fe fdd3 	bl	83ca8 <strncpy>
   85102:	f898 3001 	ldrb.w	r3, [r8, #1]
   85106:	b10b      	cbz	r3, 8510c <_svfprintf_r+0x13fc>
   85108:	f108 0801 	add.w	r8, r8, #1
   8510c:	4620      	mov	r0, r4
   8510e:	4649      	mov	r1, r9
   85110:	220a      	movs	r2, #10
   85112:	2300      	movs	r3, #0
   85114:	2600      	movs	r6, #0
   85116:	f005 f9d7 	bl	8a4c8 <__aeabi_uldivmod>
   8511a:	e69f      	b.n	84e5c <_svfprintf_r+0x114c>
   8511c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8511e:	980a      	ldr	r0, [sp, #40]	; 0x28
   85120:	aa28      	add	r2, sp, #160	; 0xa0
   85122:	f004 fa53 	bl	895cc <__ssprint_r>
   85126:	2800      	cmp	r0, #0
   85128:	f47e af55 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8512c:	9922      	ldr	r1, [sp, #136]	; 0x88
   8512e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   85130:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   85134:	e6dd      	b.n	84ef2 <_svfprintf_r+0x11e2>
   85136:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85138:	18ae      	adds	r6, r5, r2
   8513a:	eba6 060b 	sub.w	r6, r6, fp
   8513e:	1ad5      	subs	r5, r2, r3
   85140:	42ae      	cmp	r6, r5
   85142:	bfa8      	it	ge
   85144:	462e      	movge	r6, r5
   85146:	f7ff bba6 	b.w	84896 <_svfprintf_r+0xb86>
   8514a:	f852 4b04 	ldr.w	r4, [r2], #4
   8514e:	4689      	mov	r9, r1
   85150:	2301      	movs	r3, #1
   85152:	920e      	str	r2, [sp, #56]	; 0x38
   85154:	b2e4      	uxtb	r4, r4
   85156:	f7fe befb 	b.w	83f50 <_svfprintf_r+0x240>
   8515a:	f853 4b04 	ldr.w	r4, [r3], #4
   8515e:	930e      	str	r3, [sp, #56]	; 0x38
   85160:	f7fe bef3 	b.w	83f4a <_svfprintf_r+0x23a>
   85164:	f853 4b04 	ldr.w	r4, [r3], #4
   85168:	930e      	str	r3, [sp, #56]	; 0x38
   8516a:	e557      	b.n	84c1c <_svfprintf_r+0xf0c>
   8516c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8516e:	9908      	ldr	r1, [sp, #32]
   85170:	f853 2b04 	ldr.w	r2, [r3], #4
   85174:	4655      	mov	r5, sl
   85176:	8011      	strh	r1, [r2, #0]
   85178:	930e      	str	r3, [sp, #56]	; 0x38
   8517a:	f7fe bfc1 	b.w	84100 <_svfprintf_r+0x3f0>
   8517e:	f344 19c0 	sbfx	r9, r4, #7, #1
   85182:	464b      	mov	r3, r9
   85184:	b264      	sxtb	r4, r4
   85186:	f7fe bea4 	b.w	83ed2 <_svfprintf_r+0x1c2>
   8518a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8518c:	980a      	ldr	r0, [sp, #40]	; 0x28
   8518e:	aa28      	add	r2, sp, #160	; 0xa0
   85190:	f004 fa1c 	bl	895cc <__ssprint_r>
   85194:	2800      	cmp	r0, #0
   85196:	f47e af1e 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8519a:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   8519e:	9922      	ldr	r1, [sp, #136]	; 0x88
   851a0:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   851a4:	e73c      	b.n	85020 <_svfprintf_r+0x1310>
   851a6:	990c      	ldr	r1, [sp, #48]	; 0x30
   851a8:	980a      	ldr	r0, [sp, #40]	; 0x28
   851aa:	aa28      	add	r2, sp, #160	; 0xa0
   851ac:	f004 fa0e 	bl	895cc <__ssprint_r>
   851b0:	2800      	cmp	r0, #0
   851b2:	f47e af10 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   851b6:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   851b8:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   851bc:	f7ff bb38 	b.w	84830 <_svfprintf_r+0xb20>
   851c0:	2306      	movs	r3, #6
   851c2:	9307      	str	r3, [sp, #28]
   851c4:	f026 0320 	bic.w	r3, r6, #32
   851c8:	9306      	str	r3, [sp, #24]
   851ca:	e470      	b.n	84aae <_svfprintf_r+0xd9e>
   851cc:	0008a934 	.word	0x0008a934
   851d0:	0008a92c 	.word	0x0008a92c
   851d4:	0008a948 	.word	0x0008a948
   851d8:	e9dd 3512 	ldrd	r3, r5, [sp, #72]	; 0x48
   851dc:	18eb      	adds	r3, r5, r3
   851de:	429e      	cmp	r6, r3
   851e0:	46b3      	mov	fp, r6
   851e2:	9719      	str	r7, [sp, #100]	; 0x64
   851e4:	4690      	mov	r8, r2
   851e6:	460c      	mov	r4, r1
   851e8:	bf28      	it	cs
   851ea:	469b      	movcs	fp, r3
   851ec:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   851f0:	9f10      	ldr	r7, [sp, #64]	; 0x40
   851f2:	f7ff bb23 	b.w	8483c <_svfprintf_r+0xb2c>
   851f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
   851f8:	1cda      	adds	r2, r3, #3
   851fa:	9310      	str	r3, [sp, #64]	; 0x40
   851fc:	db02      	blt.n	85204 <_svfprintf_r+0x14f4>
   851fe:	9a07      	ldr	r2, [sp, #28]
   85200:	4293      	cmp	r3, r2
   85202:	dd04      	ble.n	8520e <_svfprintf_r+0x14fe>
   85204:	3e02      	subs	r6, #2
   85206:	f026 0320 	bic.w	r3, r6, #32
   8520a:	9306      	str	r3, [sp, #24]
   8520c:	e48b      	b.n	84b26 <_svfprintf_r+0xe16>
   8520e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85210:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85212:	4293      	cmp	r3, r2
   85214:	f2c0 80c2 	blt.w	8539c <_svfprintf_r+0x168c>
   85218:	f019 0f01 	tst.w	r9, #1
   8521c:	f000 821d 	beq.w	8565a <_svfprintf_r+0x194a>
   85220:	9a16      	ldr	r2, [sp, #88]	; 0x58
   85222:	4413      	add	r3, r2
   85224:	930b      	str	r3, [sp, #44]	; 0x2c
   85226:	f419 6f80 	tst.w	r9, #1024	; 0x400
   8522a:	f000 8214 	beq.w	85656 <_svfprintf_r+0x1946>
   8522e:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85230:	2667      	movs	r6, #103	; 0x67
   85232:	2b00      	cmp	r3, #0
   85234:	dc76      	bgt.n	85324 <_svfprintf_r+0x1614>
   85236:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85238:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8523c:	9306      	str	r3, [sp, #24]
   8523e:	2300      	movs	r3, #0
   85240:	930f      	str	r3, [sp, #60]	; 0x3c
   85242:	9313      	str	r3, [sp, #76]	; 0x4c
   85244:	e4cf      	b.n	84be6 <_svfprintf_r+0xed6>
   85246:	222d      	movs	r2, #45	; 0x2d
   85248:	2300      	movs	r3, #0
   8524a:	f88d 2083 	strb.w	r2, [sp, #131]	; 0x83
   8524e:	9307      	str	r3, [sp, #28]
   85250:	f7fe be68 	b.w	83f24 <_svfprintf_r+0x214>
   85254:	990c      	ldr	r1, [sp, #48]	; 0x30
   85256:	980a      	ldr	r0, [sp, #40]	; 0x28
   85258:	aa28      	add	r2, sp, #160	; 0xa0
   8525a:	f004 f9b7 	bl	895cc <__ssprint_r>
   8525e:	2800      	cmp	r0, #0
   85260:	f47e aeb9 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   85264:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   85266:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8526a:	f7ff bad8 	b.w	8481e <_svfprintf_r+0xb0e>
   8526e:	4659      	mov	r1, fp
   85270:	4650      	mov	r0, sl
   85272:	aa28      	add	r2, sp, #160	; 0xa0
   85274:	f004 f9aa 	bl	895cc <__ssprint_r>
   85278:	2800      	cmp	r0, #0
   8527a:	f47e aeac 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   8527e:	7838      	ldrb	r0, [r7, #0]
   85280:	992a      	ldr	r1, [sp, #168]	; 0xa8
   85282:	aa2b      	add	r2, sp, #172	; 0xac
   85284:	4406      	add	r6, r0
   85286:	e57a      	b.n	84d7e <_svfprintf_r+0x106e>
   85288:	990c      	ldr	r1, [sp, #48]	; 0x30
   8528a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8528c:	aa28      	add	r2, sp, #160	; 0xa0
   8528e:	f004 f99d 	bl	895cc <__ssprint_r>
   85292:	2800      	cmp	r0, #0
   85294:	f47e ae9f 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   85298:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8529a:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8529c:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   852a0:	f7ff bae1 	b.w	84866 <_svfprintf_r+0xb56>
   852a4:	9907      	ldr	r1, [sp, #28]
   852a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   852a8:	9101      	str	r1, [sp, #4]
   852aa:	2103      	movs	r1, #3
   852ac:	9100      	str	r1, [sp, #0]
   852ae:	a926      	add	r1, sp, #152	; 0x98
   852b0:	9104      	str	r1, [sp, #16]
   852b2:	a923      	add	r1, sp, #140	; 0x8c
   852b4:	9103      	str	r1, [sp, #12]
   852b6:	a922      	add	r1, sp, #136	; 0x88
   852b8:	465a      	mov	r2, fp
   852ba:	980a      	ldr	r0, [sp, #40]	; 0x28
   852bc:	9102      	str	r1, [sp, #8]
   852be:	f001 fad3 	bl	86868 <_dtoa_r>
   852c2:	7803      	ldrb	r3, [r0, #0]
   852c4:	4605      	mov	r5, r0
   852c6:	2b30      	cmp	r3, #48	; 0x30
   852c8:	f000 8216 	beq.w	856f8 <_svfprintf_r+0x19e8>
   852cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   852ce:	9a07      	ldr	r2, [sp, #28]
   852d0:	46b9      	mov	r9, r7
   852d2:	4413      	add	r3, r2
   852d4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   852d6:	18ec      	adds	r4, r5, r3
   852d8:	4658      	mov	r0, fp
   852da:	2200      	movs	r2, #0
   852dc:	2300      	movs	r3, #0
   852de:	990b      	ldr	r1, [sp, #44]	; 0x2c
   852e0:	f005 f882 	bl	8a3e8 <__aeabi_dcmpeq>
   852e4:	b108      	cbz	r0, 852ea <_svfprintf_r+0x15da>
   852e6:	4623      	mov	r3, r4
   852e8:	e411      	b.n	84b0e <_svfprintf_r+0xdfe>
   852ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
   852ec:	42a3      	cmp	r3, r4
   852ee:	f4bf ac0e 	bcs.w	84b0e <_svfprintf_r+0xdfe>
   852f2:	2130      	movs	r1, #48	; 0x30
   852f4:	1c5a      	adds	r2, r3, #1
   852f6:	9226      	str	r2, [sp, #152]	; 0x98
   852f8:	7019      	strb	r1, [r3, #0]
   852fa:	9b26      	ldr	r3, [sp, #152]	; 0x98
   852fc:	429c      	cmp	r4, r3
   852fe:	d8f9      	bhi.n	852f4 <_svfprintf_r+0x15e4>
   85300:	e405      	b.n	84b0e <_svfprintf_r+0xdfe>
   85302:	9a22      	ldr	r2, [sp, #136]	; 0x88
   85304:	2a00      	cmp	r2, #0
   85306:	9210      	str	r2, [sp, #64]	; 0x40
   85308:	f340 820e 	ble.w	85728 <_svfprintf_r+0x1a18>
   8530c:	9907      	ldr	r1, [sp, #28]
   8530e:	f009 0301 	and.w	r3, r9, #1
   85312:	430b      	orrs	r3, r1
   85314:	f040 817e 	bne.w	85614 <_svfprintf_r+0x1904>
   85318:	2666      	movs	r6, #102	; 0x66
   8531a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8531c:	930b      	str	r3, [sp, #44]	; 0x2c
   8531e:	f419 6f80 	tst.w	r9, #1024	; 0x400
   85322:	d088      	beq.n	85236 <_svfprintf_r+0x1526>
   85324:	9919      	ldr	r1, [sp, #100]	; 0x64
   85326:	780b      	ldrb	r3, [r1, #0]
   85328:	2bff      	cmp	r3, #255	; 0xff
   8532a:	f000 8225 	beq.w	85778 <_svfprintf_r+0x1a68>
   8532e:	2400      	movs	r4, #0
   85330:	9a10      	ldr	r2, [sp, #64]	; 0x40
   85332:	4620      	mov	r0, r4
   85334:	e004      	b.n	85340 <_svfprintf_r+0x1630>
   85336:	3001      	adds	r0, #1
   85338:	3101      	adds	r1, #1
   8533a:	2bff      	cmp	r3, #255	; 0xff
   8533c:	f000 8159 	beq.w	855f2 <_svfprintf_r+0x18e2>
   85340:	4293      	cmp	r3, r2
   85342:	f280 8156 	bge.w	855f2 <_svfprintf_r+0x18e2>
   85346:	1ad2      	subs	r2, r2, r3
   85348:	784b      	ldrb	r3, [r1, #1]
   8534a:	2b00      	cmp	r3, #0
   8534c:	d1f3      	bne.n	85336 <_svfprintf_r+0x1626>
   8534e:	780b      	ldrb	r3, [r1, #0]
   85350:	3401      	adds	r4, #1
   85352:	e7f2      	b.n	8533a <_svfprintf_r+0x162a>
   85354:	e9dd 2129 	ldrd	r2, r1, [sp, #164]	; 0xa4
   85358:	f7ff b9da 	b.w	84710 <_svfprintf_r+0xa00>
   8535c:	9b07      	ldr	r3, [sp, #28]
   8535e:	f89d 2083 	ldrb.w	r2, [sp, #131]	; 0x83
   85362:	940e      	str	r4, [sp, #56]	; 0x38
   85364:	9306      	str	r3, [sp, #24]
   85366:	930b      	str	r3, [sp, #44]	; 0x2c
   85368:	9007      	str	r0, [sp, #28]
   8536a:	900f      	str	r0, [sp, #60]	; 0x3c
   8536c:	9013      	str	r0, [sp, #76]	; 0x4c
   8536e:	9010      	str	r0, [sp, #64]	; 0x40
   85370:	f7fe bdd6 	b.w	83f20 <_svfprintf_r+0x210>
   85374:	990c      	ldr	r1, [sp, #48]	; 0x30
   85376:	980a      	ldr	r0, [sp, #40]	; 0x28
   85378:	aa28      	add	r2, sp, #160	; 0xa0
   8537a:	f004 f927 	bl	895cc <__ssprint_r>
   8537e:	2800      	cmp	r0, #0
   85380:	f47e ae29 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   85384:	9d22      	ldr	r5, [sp, #136]	; 0x88
   85386:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85388:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
   8538a:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   8538e:	1b5d      	subs	r5, r3, r5
   85390:	f7ff ba81 	b.w	84896 <_svfprintf_r+0xb86>
   85394:	2300      	movs	r3, #0
   85396:	9307      	str	r3, [sp, #28]
   85398:	f7fe bd0b 	b.w	83db2 <_svfprintf_r+0xa2>
   8539c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8539e:	9a16      	ldr	r2, [sp, #88]	; 0x58
   853a0:	189a      	adds	r2, r3, r2
   853a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
   853a4:	920b      	str	r2, [sp, #44]	; 0x2c
   853a6:	2b00      	cmp	r3, #0
   853a8:	f340 8185 	ble.w	856b6 <_svfprintf_r+0x19a6>
   853ac:	2667      	movs	r6, #103	; 0x67
   853ae:	e7b6      	b.n	8531e <_svfprintf_r+0x160e>
   853b0:	2330      	movs	r3, #48	; 0x30
   853b2:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   853b6:	2358      	movs	r3, #88	; 0x58
   853b8:	f88d 3085 	strb.w	r3, [sp, #133]	; 0x85
   853bc:	9b07      	ldr	r3, [sp, #28]
   853be:	f047 0402 	orr.w	r4, r7, #2
   853c2:	2b63      	cmp	r3, #99	; 0x63
   853c4:	f300 80c4 	bgt.w	85550 <_svfprintf_r+0x1840>
   853c8:	2300      	movs	r3, #0
   853ca:	ad3b      	add	r5, sp, #236	; 0xec
   853cc:	930d      	str	r3, [sp, #52]	; 0x34
   853ce:	f447 7381 	orr.w	r3, r7, #258	; 0x102
   853d2:	930f      	str	r3, [sp, #60]	; 0x3c
   853d4:	e9dd 1214 	ldrd	r1, r2, [sp, #80]	; 0x50
   853d8:	4613      	mov	r3, r2
   853da:	2b00      	cmp	r3, #0
   853dc:	4627      	mov	r7, r4
   853de:	f2c0 8084 	blt.w	854ea <_svfprintf_r+0x17da>
   853e2:	930b      	str	r3, [sp, #44]	; 0x2c
   853e4:	2300      	movs	r3, #0
   853e6:	468b      	mov	fp, r1
   853e8:	931d      	str	r3, [sp, #116]	; 0x74
   853ea:	f026 0320 	bic.w	r3, r6, #32
   853ee:	9306      	str	r3, [sp, #24]
   853f0:	2e61      	cmp	r6, #97	; 0x61
   853f2:	f000 8118 	beq.w	85626 <_svfprintf_r+0x1916>
   853f6:	2e41      	cmp	r6, #65	; 0x41
   853f8:	f47f ab67 	bne.w	84aca <_svfprintf_r+0xdba>
   853fc:	aa22      	add	r2, sp, #136	; 0x88
   853fe:	4658      	mov	r0, fp
   85400:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85402:	f004 f853 	bl	894ac <frexp>
   85406:	2200      	movs	r2, #0
   85408:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   8540c:	f004 fd84 	bl	89f18 <__aeabi_dmul>
   85410:	4602      	mov	r2, r0
   85412:	460b      	mov	r3, r1
   85414:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   85418:	2200      	movs	r2, #0
   8541a:	2300      	movs	r3, #0
   8541c:	f004 ffe4 	bl	8a3e8 <__aeabi_dcmpeq>
   85420:	b108      	cbz	r0, 85426 <_svfprintf_r+0x1716>
   85422:	2301      	movs	r3, #1
   85424:	9322      	str	r3, [sp, #136]	; 0x88
   85426:	4bad      	ldr	r3, [pc, #692]	; (856dc <_svfprintf_r+0x19cc>)
   85428:	930b      	str	r3, [sp, #44]	; 0x2c
   8542a:	9b07      	ldr	r3, [sp, #28]
   8542c:	e9cd a612 	strd	sl, r6, [sp, #72]	; 0x48
   85430:	e9cd 781e 	strd	r7, r8, [sp, #120]	; 0x78
   85434:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
   85438:	46ab      	mov	fp, r5
   8543a:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
   8543e:	f103 39ff 	add.w	r9, r3, #4294967295
   85442:	9510      	str	r5, [sp, #64]	; 0x40
   85444:	e006      	b.n	85454 <_svfprintf_r+0x1744>
   85446:	2200      	movs	r2, #0
   85448:	2300      	movs	r3, #0
   8544a:	f109 39ff 	add.w	r9, r9, #4294967295
   8544e:	f004 ffcb 	bl	8a3e8 <__aeabi_dcmpeq>
   85452:	b9e8      	cbnz	r0, 85490 <_svfprintf_r+0x1780>
   85454:	2200      	movs	r2, #0
   85456:	4ba2      	ldr	r3, [pc, #648]	; (856e0 <_svfprintf_r+0x19d0>)
   85458:	4630      	mov	r0, r6
   8545a:	4639      	mov	r1, r7
   8545c:	f004 fd5c 	bl	89f18 <__aeabi_dmul>
   85460:	460f      	mov	r7, r1
   85462:	4606      	mov	r6, r0
   85464:	f005 f808 	bl	8a478 <__aeabi_d2iz>
   85468:	4604      	mov	r4, r0
   8546a:	f004 fceb 	bl	89e44 <__aeabi_i2d>
   8546e:	460b      	mov	r3, r1
   85470:	4602      	mov	r2, r0
   85472:	4639      	mov	r1, r7
   85474:	4630      	mov	r0, r6
   85476:	f004 fb97 	bl	89ba8 <__aeabi_dsub>
   8547a:	f81a 3004 	ldrb.w	r3, [sl, r4]
   8547e:	f1b9 3fff 	cmp.w	r9, #4294967295
   85482:	46d8      	mov	r8, fp
   85484:	464d      	mov	r5, r9
   85486:	4606      	mov	r6, r0
   85488:	460f      	mov	r7, r1
   8548a:	f80b 3b01 	strb.w	r3, [fp], #1
   8548e:	d1da      	bne.n	85446 <_svfprintf_r+0x1736>
   85490:	4630      	mov	r0, r6
   85492:	4639      	mov	r1, r7
   85494:	2200      	movs	r2, #0
   85496:	4b93      	ldr	r3, [pc, #588]	; (856e4 <_svfprintf_r+0x19d4>)
   85498:	46a9      	mov	r9, r5
   8549a:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   8549e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   854a0:	f8cd 8048 	str.w	r8, [sp, #72]	; 0x48
   854a4:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   854a8:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
   854ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   854ae:	9f1e      	ldr	r7, [sp, #120]	; 0x78
   854b0:	f004 ffc2 	bl	8a438 <__aeabi_dcmpgt>
   854b4:	bb80      	cbnz	r0, 85518 <_svfprintf_r+0x1808>
   854b6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   854ba:	2200      	movs	r2, #0
   854bc:	4b89      	ldr	r3, [pc, #548]	; (856e4 <_svfprintf_r+0x19d4>)
   854be:	f004 ff93 	bl	8a3e8 <__aeabi_dcmpeq>
   854c2:	b108      	cbz	r0, 854c8 <_svfprintf_r+0x17b8>
   854c4:	07e1      	lsls	r1, r4, #31
   854c6:	d427      	bmi.n	85518 <_svfprintf_r+0x1808>
   854c8:	464b      	mov	r3, r9
   854ca:	2b00      	cmp	r3, #0
   854cc:	db06      	blt.n	854dc <_svfprintf_r+0x17cc>
   854ce:	2230      	movs	r2, #48	; 0x30
   854d0:	3301      	adds	r3, #1
   854d2:	445b      	add	r3, fp
   854d4:	f80b 2b01 	strb.w	r2, [fp], #1
   854d8:	455b      	cmp	r3, fp
   854da:	d1fb      	bne.n	854d4 <_svfprintf_r+0x17c4>
   854dc:	ebab 0305 	sub.w	r3, fp, r5
   854e0:	46b9      	mov	r9, r7
   854e2:	9312      	str	r3, [sp, #72]	; 0x48
   854e4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   854e6:	f7ff bb14 	b.w	84b12 <_svfprintf_r+0xe02>
   854ea:	f026 0320 	bic.w	r3, r6, #32
   854ee:	9306      	str	r3, [sp, #24]
   854f0:	222d      	movs	r2, #45	; 0x2d
   854f2:	e9dd 3414 	ldrd	r3, r4, [sp, #80]	; 0x50
   854f6:	469b      	mov	fp, r3
   854f8:	f104 4300 	add.w	r3, r4, #2147483648	; 0x80000000
   854fc:	921d      	str	r2, [sp, #116]	; 0x74
   854fe:	930b      	str	r3, [sp, #44]	; 0x2c
   85500:	e776      	b.n	853f0 <_svfprintf_r+0x16e0>
   85502:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85504:	f7ff b95c 	b.w	847c0 <_svfprintf_r+0xab0>
   85508:	9b07      	ldr	r3, [sp, #28]
   8550a:	18ec      	adds	r4, r5, r3
   8550c:	e6e4      	b.n	852d8 <_svfprintf_r+0x15c8>
   8550e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
   85510:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 856e8 <_svfprintf_r+0x19d8>
   85514:	f7ff b827 	b.w	84566 <_svfprintf_r+0x856>
   85518:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8551a:	9326      	str	r3, [sp, #152]	; 0x98
   8551c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8551e:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   85522:	7bd9      	ldrb	r1, [r3, #15]
   85524:	465b      	mov	r3, fp
   85526:	428a      	cmp	r2, r1
   85528:	d109      	bne.n	8553e <_svfprintf_r+0x182e>
   8552a:	2030      	movs	r0, #48	; 0x30
   8552c:	f803 0c01 	strb.w	r0, [r3, #-1]
   85530:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85532:	1e5a      	subs	r2, r3, #1
   85534:	9226      	str	r2, [sp, #152]	; 0x98
   85536:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   8553a:	4291      	cmp	r1, r2
   8553c:	d0f6      	beq.n	8552c <_svfprintf_r+0x181c>
   8553e:	2a39      	cmp	r2, #57	; 0x39
   85540:	bf0b      	itete	eq
   85542:	9a0b      	ldreq	r2, [sp, #44]	; 0x2c
   85544:	3201      	addne	r2, #1
   85546:	7a92      	ldrbeq	r2, [r2, #10]
   85548:	b2d2      	uxtbne	r2, r2
   8554a:	f803 2c01 	strb.w	r2, [r3, #-1]
   8554e:	e7c5      	b.n	854dc <_svfprintf_r+0x17cc>
   85550:	980a      	ldr	r0, [sp, #40]	; 0x28
   85552:	1c59      	adds	r1, r3, #1
   85554:	f002 fe86 	bl	88264 <_malloc_r>
   85558:	4605      	mov	r5, r0
   8555a:	2800      	cmp	r0, #0
   8555c:	f000 8117 	beq.w	8578e <_svfprintf_r+0x1a7e>
   85560:	900d      	str	r0, [sp, #52]	; 0x34
   85562:	e734      	b.n	853ce <_svfprintf_r+0x16be>
   85564:	2102      	movs	r1, #2
   85566:	9100      	str	r1, [sp, #0]
   85568:	9907      	ldr	r1, [sp, #28]
   8556a:	465a      	mov	r2, fp
   8556c:	1c4c      	adds	r4, r1, #1
   8556e:	a926      	add	r1, sp, #152	; 0x98
   85570:	9104      	str	r1, [sp, #16]
   85572:	a923      	add	r1, sp, #140	; 0x8c
   85574:	9103      	str	r1, [sp, #12]
   85576:	a922      	add	r1, sp, #136	; 0x88
   85578:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8557a:	980a      	ldr	r0, [sp, #40]	; 0x28
   8557c:	9401      	str	r4, [sp, #4]
   8557e:	9102      	str	r1, [sp, #8]
   85580:	f001 f972 	bl	86868 <_dtoa_r>
   85584:	4605      	mov	r5, r0
   85586:	46b9      	mov	r9, r7
   85588:	442c      	add	r4, r5
   8558a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
   8558c:	e6a4      	b.n	852d8 <_svfprintf_r+0x15c8>
   8558e:	2330      	movs	r3, #48	; 0x30
   85590:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
   85594:	2378      	movs	r3, #120	; 0x78
   85596:	e70f      	b.n	853b8 <_svfprintf_r+0x16a8>
   85598:	4645      	mov	r5, r8
   8559a:	4688      	mov	r8, r1
   8559c:	3301      	adds	r3, #1
   8559e:	4432      	add	r2, r6
   855a0:	2b07      	cmp	r3, #7
   855a2:	e9cd 3229 	strd	r3, r2, [sp, #164]	; 0xa4
   855a6:	f8c8 9000 	str.w	r9, [r8]
   855aa:	f8c8 6004 	str.w	r6, [r8, #4]
   855ae:	f77f acb5 	ble.w	84f1c <_svfprintf_r+0x120c>
   855b2:	990c      	ldr	r1, [sp, #48]	; 0x30
   855b4:	980a      	ldr	r0, [sp, #40]	; 0x28
   855b6:	aa28      	add	r2, sp, #160	; 0xa0
   855b8:	f004 f808 	bl	895cc <__ssprint_r>
   855bc:	2800      	cmp	r0, #0
   855be:	f47e ad0a 	bne.w	83fd6 <_svfprintf_r+0x2c6>
   855c2:	e9dd 3229 	ldrd	r3, r2, [sp, #164]	; 0xa4
   855c6:	f10d 08ac 	add.w	r8, sp, #172	; 0xac
   855ca:	e4a9      	b.n	84f20 <_svfprintf_r+0x1210>
   855cc:	9b07      	ldr	r3, [sp, #28]
   855ce:	2b00      	cmp	r3, #0
   855d0:	bf08      	it	eq
   855d2:	2301      	moveq	r3, #1
   855d4:	9307      	str	r3, [sp, #28]
   855d6:	f447 7380 	orr.w	r3, r7, #256	; 0x100
   855da:	930f      	str	r3, [sp, #60]	; 0x3c
   855dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
   855de:	2b00      	cmp	r3, #0
   855e0:	f2c0 80b6 	blt.w	85750 <_svfprintf_r+0x1a40>
   855e4:	f8dd b050 	ldr.w	fp, [sp, #80]	; 0x50
   855e8:	900d      	str	r0, [sp, #52]	; 0x34
   855ea:	930b      	str	r3, [sp, #44]	; 0x2c
   855ec:	901d      	str	r0, [sp, #116]	; 0x74
   855ee:	f7ff ba73 	b.w	84ad8 <_svfprintf_r+0xdc8>
   855f2:	9119      	str	r1, [sp, #100]	; 0x64
   855f4:	9210      	str	r2, [sp, #64]	; 0x40
   855f6:	9013      	str	r0, [sp, #76]	; 0x4c
   855f8:	940f      	str	r4, [sp, #60]	; 0x3c
   855fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   855fc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   855fe:	991c      	ldr	r1, [sp, #112]	; 0x70
   85600:	4413      	add	r3, r2
   85602:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   85604:	fb01 2303 	mla	r3, r1, r3, r2
   85608:	930b      	str	r3, [sp, #44]	; 0x2c
   8560a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8560e:	9306      	str	r3, [sp, #24]
   85610:	f7ff bae9 	b.w	84be6 <_svfprintf_r+0xed6>
   85614:	9b16      	ldr	r3, [sp, #88]	; 0x58
   85616:	2666      	movs	r6, #102	; 0x66
   85618:	18d3      	adds	r3, r2, r3
   8561a:	4419      	add	r1, r3
   8561c:	910b      	str	r1, [sp, #44]	; 0x2c
   8561e:	e67e      	b.n	8531e <_svfprintf_r+0x160e>
   85620:	2300      	movs	r3, #0
   85622:	930d      	str	r3, [sp, #52]	; 0x34
   85624:	e764      	b.n	854f0 <_svfprintf_r+0x17e0>
   85626:	aa22      	add	r2, sp, #136	; 0x88
   85628:	4658      	mov	r0, fp
   8562a:	990b      	ldr	r1, [sp, #44]	; 0x2c
   8562c:	f003 ff3e 	bl	894ac <frexp>
   85630:	2200      	movs	r2, #0
   85632:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   85636:	f004 fc6f 	bl	89f18 <__aeabi_dmul>
   8563a:	4602      	mov	r2, r0
   8563c:	460b      	mov	r3, r1
   8563e:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   85642:	2200      	movs	r2, #0
   85644:	2300      	movs	r3, #0
   85646:	f004 fecf 	bl	8a3e8 <__aeabi_dcmpeq>
   8564a:	b108      	cbz	r0, 85650 <_svfprintf_r+0x1940>
   8564c:	2301      	movs	r3, #1
   8564e:	9322      	str	r3, [sp, #136]	; 0x88
   85650:	4b26      	ldr	r3, [pc, #152]	; (856ec <_svfprintf_r+0x19dc>)
   85652:	930b      	str	r3, [sp, #44]	; 0x2c
   85654:	e6e9      	b.n	8542a <_svfprintf_r+0x171a>
   85656:	2667      	movs	r6, #103	; 0x67
   85658:	e5ed      	b.n	85236 <_svfprintf_r+0x1526>
   8565a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8565c:	930b      	str	r3, [sp, #44]	; 0x2c
   8565e:	e5e2      	b.n	85226 <_svfprintf_r+0x1516>
   85660:	9b15      	ldr	r3, [sp, #84]	; 0x54
   85662:	2003      	movs	r0, #3
   85664:	2b00      	cmp	r3, #0
   85666:	bfb8      	it	lt
   85668:	222d      	movlt	r2, #45	; 0x2d
   8566a:	f04f 0300 	mov.w	r3, #0
   8566e:	bfa8      	it	ge
   85670:	f89d 2083 	ldrbge.w	r2, [sp, #131]	; 0x83
   85674:	4619      	mov	r1, r3
   85676:	930d      	str	r3, [sp, #52]	; 0x34
   85678:	4d1d      	ldr	r5, [pc, #116]	; (856f0 <_svfprintf_r+0x19e0>)
   8567a:	4b1e      	ldr	r3, [pc, #120]	; (856f4 <_svfprintf_r+0x19e4>)
   8567c:	bfb8      	it	lt
   8567e:	f88d 2083 	strblt.w	r2, [sp, #131]	; 0x83
   85682:	f027 0780 	bic.w	r7, r7, #128	; 0x80
   85686:	9006      	str	r0, [sp, #24]
   85688:	f7fe bd7f 	b.w	8418a <_svfprintf_r+0x47a>
   8568c:	2900      	cmp	r1, #0
   8568e:	d144      	bne.n	8571a <_svfprintf_r+0x1a0a>
   85690:	2230      	movs	r2, #48	; 0x30
   85692:	f88d 2092 	strb.w	r2, [sp, #146]	; 0x92
   85696:	f10d 0293 	add.w	r2, sp, #147	; 0x93
   8569a:	3330      	adds	r3, #48	; 0x30
   8569c:	f802 3b01 	strb.w	r3, [r2], #1
   856a0:	ab24      	add	r3, sp, #144	; 0x90
   856a2:	1ad3      	subs	r3, r2, r3
   856a4:	931a      	str	r3, [sp, #104]	; 0x68
   856a6:	f7ff ba87 	b.w	84bb8 <_svfprintf_r+0xea8>
   856aa:	f106 020f 	add.w	r2, r6, #15
   856ae:	2101      	movs	r1, #1
   856b0:	b2d2      	uxtb	r2, r2
   856b2:	f7ff ba41 	b.w	84b38 <_svfprintf_r+0xe28>
   856b6:	f1c3 0301 	rsb	r3, r3, #1
   856ba:	441a      	add	r2, r3
   856bc:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   856c0:	2667      	movs	r6, #103	; 0x67
   856c2:	920b      	str	r2, [sp, #44]	; 0x2c
   856c4:	9306      	str	r3, [sp, #24]
   856c6:	e5ba      	b.n	8523e <_svfprintf_r+0x152e>
   856c8:	f019 0f01 	tst.w	r9, #1
   856cc:	f43f aa7f 	beq.w	84bce <_svfprintf_r+0xebe>
   856d0:	f7ff ba79 	b.w	84bc6 <_svfprintf_r+0xeb6>
   856d4:	9829      	ldr	r0, [sp, #164]	; 0xa4
   856d6:	f7ff bb7f 	b.w	84dd8 <_svfprintf_r+0x10c8>
   856da:	bf00      	nop
   856dc:	0008a918 	.word	0x0008a918
   856e0:	40300000 	.word	0x40300000
   856e4:	3fe00000 	.word	0x3fe00000
   856e8:	0008a948 	.word	0x0008a948
   856ec:	0008a904 	.word	0x0008a904
   856f0:	0008a8fc 	.word	0x0008a8fc
   856f4:	0008a900 	.word	0x0008a900
   856f8:	4658      	mov	r0, fp
   856fa:	2200      	movs	r2, #0
   856fc:	2300      	movs	r3, #0
   856fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
   85700:	f004 fe72 	bl	8a3e8 <__aeabi_dcmpeq>
   85704:	2800      	cmp	r0, #0
   85706:	f47f ade1 	bne.w	852cc <_svfprintf_r+0x15bc>
   8570a:	9b07      	ldr	r3, [sp, #28]
   8570c:	f1c3 0301 	rsb	r3, r3, #1
   85710:	9322      	str	r3, [sp, #136]	; 0x88
   85712:	e5dc      	b.n	852ce <_svfprintf_r+0x15be>
   85714:	f8df 9098 	ldr.w	r9, [pc, #152]	; 857b0 <_svfprintf_r+0x1aa0>
   85718:	e4ad      	b.n	85076 <_svfprintf_r+0x1366>
   8571a:	f10d 0292 	add.w	r2, sp, #146	; 0x92
   8571e:	e7bc      	b.n	8569a <_svfprintf_r+0x198a>
   85720:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   85722:	f8df 908c 	ldr.w	r9, [pc, #140]	; 857b0 <_svfprintf_r+0x1aa0>
   85726:	e428      	b.n	84f7a <_svfprintf_r+0x126a>
   85728:	9a07      	ldr	r2, [sp, #28]
   8572a:	f009 0901 	and.w	r9, r9, #1
   8572e:	ea59 0302 	orrs.w	r3, r9, r2
   85732:	d104      	bne.n	8573e <_svfprintf_r+0x1a2e>
   85734:	2301      	movs	r3, #1
   85736:	2666      	movs	r6, #102	; 0x66
   85738:	9306      	str	r3, [sp, #24]
   8573a:	930b      	str	r3, [sp, #44]	; 0x2c
   8573c:	e57f      	b.n	8523e <_svfprintf_r+0x152e>
   8573e:	9b16      	ldr	r3, [sp, #88]	; 0x58
   85740:	2666      	movs	r6, #102	; 0x66
   85742:	3301      	adds	r3, #1
   85744:	441a      	add	r2, r3
   85746:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   8574a:	920b      	str	r2, [sp, #44]	; 0x2c
   8574c:	9306      	str	r3, [sp, #24]
   8574e:	e576      	b.n	8523e <_svfprintf_r+0x152e>
   85750:	900d      	str	r0, [sp, #52]	; 0x34
   85752:	e6cd      	b.n	854f0 <_svfprintf_r+0x17e0>
   85754:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   85756:	f89a 6001 	ldrb.w	r6, [sl, #1]
   8575a:	4692      	mov	sl, r2
   8575c:	f853 2b04 	ldr.w	r2, [r3], #4
   85760:	930e      	str	r3, [sp, #56]	; 0x38
   85762:	ea42 73e2 	orr.w	r3, r2, r2, asr #31
   85766:	9307      	str	r3, [sp, #28]
   85768:	f7fe bb21 	b.w	83dae <_svfprintf_r+0x9e>
   8576c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8576e:	f8df 9040 	ldr.w	r9, [pc, #64]	; 857b0 <_svfprintf_r+0x1aa0>
   85772:	e4b1      	b.n	850d8 <_svfprintf_r+0x13c8>
   85774:	9c07      	ldr	r4, [sp, #28]
   85776:	e706      	b.n	85586 <_svfprintf_r+0x1876>
   85778:	2300      	movs	r3, #0
   8577a:	930f      	str	r3, [sp, #60]	; 0x3c
   8577c:	9313      	str	r3, [sp, #76]	; 0x4c
   8577e:	e73c      	b.n	855fa <_svfprintf_r+0x18ea>
   85780:	f8df 902c 	ldr.w	r9, [pc, #44]	; 857b0 <_svfprintf_r+0x1aa0>
   85784:	e70a      	b.n	8559c <_svfprintf_r+0x188c>
   85786:	2302      	movs	r3, #2
   85788:	931a      	str	r3, [sp, #104]	; 0x68
   8578a:	f7ff ba15 	b.w	84bb8 <_svfprintf_r+0xea8>
   8578e:	990c      	ldr	r1, [sp, #48]	; 0x30
   85790:	898b      	ldrh	r3, [r1, #12]
   85792:	f043 0240 	orr.w	r2, r3, #64	; 0x40
   85796:	4613      	mov	r3, r2
   85798:	818a      	strh	r2, [r1, #12]
   8579a:	f7fe bc24 	b.w	83fe6 <_svfprintf_r+0x2d6>
   8579e:	f04f 32ff 	mov.w	r2, #4294967295
   857a2:	230c      	movs	r3, #12
   857a4:	9208      	str	r2, [sp, #32]
   857a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   857a8:	6013      	str	r3, [r2, #0]
   857aa:	f7fe bc23 	b.w	83ff4 <_svfprintf_r+0x2e4>
   857ae:	bf00      	nop
   857b0:	0008a948 	.word	0x0008a948

000857b4 <__sprint_r.part.0>:
   857b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   857b8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   857ba:	4690      	mov	r8, r2
   857bc:	049c      	lsls	r4, r3, #18
   857be:	d52d      	bpl.n	8581c <__sprint_r.part.0+0x68>
   857c0:	6893      	ldr	r3, [r2, #8]
   857c2:	6812      	ldr	r2, [r2, #0]
   857c4:	b343      	cbz	r3, 85818 <__sprint_r.part.0+0x64>
   857c6:	468b      	mov	fp, r1
   857c8:	4606      	mov	r6, r0
   857ca:	f102 0908 	add.w	r9, r2, #8
   857ce:	e959 5a02 	ldrd	r5, sl, [r9, #-8]
   857d2:	ea5f 079a 	movs.w	r7, sl, lsr #2
   857d6:	d015      	beq.n	85804 <__sprint_r.part.0+0x50>
   857d8:	2400      	movs	r4, #0
   857da:	3d04      	subs	r5, #4
   857dc:	e001      	b.n	857e2 <__sprint_r.part.0+0x2e>
   857de:	42a7      	cmp	r7, r4
   857e0:	d00e      	beq.n	85800 <__sprint_r.part.0+0x4c>
   857e2:	465a      	mov	r2, fp
   857e4:	4630      	mov	r0, r6
   857e6:	f855 1f04 	ldr.w	r1, [r5, #4]!
   857ea:	f002 f961 	bl	87ab0 <_fputwc_r>
   857ee:	1c43      	adds	r3, r0, #1
   857f0:	f104 0401 	add.w	r4, r4, #1
   857f4:	d1f3      	bne.n	857de <__sprint_r.part.0+0x2a>
   857f6:	2300      	movs	r3, #0
   857f8:	e9c8 3301 	strd	r3, r3, [r8, #4]
   857fc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85800:	f8d8 3008 	ldr.w	r3, [r8, #8]
   85804:	f02a 0a03 	bic.w	sl, sl, #3
   85808:	eba3 030a 	sub.w	r3, r3, sl
   8580c:	f8c8 3008 	str.w	r3, [r8, #8]
   85810:	f109 0908 	add.w	r9, r9, #8
   85814:	2b00      	cmp	r3, #0
   85816:	d1da      	bne.n	857ce <__sprint_r.part.0+0x1a>
   85818:	2000      	movs	r0, #0
   8581a:	e7ec      	b.n	857f6 <__sprint_r.part.0+0x42>
   8581c:	f002 facc 	bl	87db8 <__sfvwrite_r>
   85820:	2300      	movs	r3, #0
   85822:	e9c8 3301 	strd	r3, r3, [r8, #4]
   85826:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8582a:	bf00      	nop

0008582c <_vfiprintf_r>:
   8582c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85830:	b0bd      	sub	sp, #244	; 0xf4
   85832:	461c      	mov	r4, r3
   85834:	4617      	mov	r7, r2
   85836:	e9cd 3005 	strd	r3, r0, [sp, #20]
   8583a:	9102      	str	r1, [sp, #8]
   8583c:	b118      	cbz	r0, 85846 <_vfiprintf_r+0x1a>
   8583e:	6b83      	ldr	r3, [r0, #56]	; 0x38
   85840:	2b00      	cmp	r3, #0
   85842:	f000 8277 	beq.w	85d34 <_vfiprintf_r+0x508>
   85846:	9a02      	ldr	r2, [sp, #8]
   85848:	6e53      	ldr	r3, [r2, #100]	; 0x64
   8584a:	07de      	lsls	r6, r3, #31
   8584c:	f140 8184 	bpl.w	85b58 <_vfiprintf_r+0x32c>
   85850:	f9b2 100c 	ldrsh.w	r1, [r2, #12]
   85854:	b28a      	uxth	r2, r1
   85856:	0490      	lsls	r0, r2, #18
   85858:	d408      	bmi.n	8586c <_vfiprintf_r+0x40>
   8585a:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
   8585e:	9902      	ldr	r1, [sp, #8]
   85860:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   85862:	818a      	strh	r2, [r1, #12]
   85864:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   85868:	b292      	uxth	r2, r2
   8586a:	664b      	str	r3, [r1, #100]	; 0x64
   8586c:	0711      	lsls	r1, r2, #28
   8586e:	f140 80ec 	bpl.w	85a4a <_vfiprintf_r+0x21e>
   85872:	9b02      	ldr	r3, [sp, #8]
   85874:	691b      	ldr	r3, [r3, #16]
   85876:	2b00      	cmp	r3, #0
   85878:	f000 80e7 	beq.w	85a4a <_vfiprintf_r+0x21e>
   8587c:	f002 031a 	and.w	r3, r2, #26
   85880:	2b0a      	cmp	r3, #10
   85882:	f000 80f0 	beq.w	85a66 <_vfiprintf_r+0x23a>
   85886:	ab13      	add	r3, sp, #76	; 0x4c
   85888:	9310      	str	r3, [sp, #64]	; 0x40
   8588a:	2300      	movs	r3, #0
   8588c:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
   85890:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
   85894:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
   85898:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8589c:	9304      	str	r3, [sp, #16]
   8589e:	783b      	ldrb	r3, [r7, #0]
   858a0:	2b00      	cmp	r3, #0
   858a2:	f000 8146 	beq.w	85b32 <_vfiprintf_r+0x306>
   858a6:	463c      	mov	r4, r7
   858a8:	e004      	b.n	858b4 <_vfiprintf_r+0x88>
   858aa:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   858ae:	2b00      	cmp	r3, #0
   858b0:	f000 8121 	beq.w	85af6 <_vfiprintf_r+0x2ca>
   858b4:	2b25      	cmp	r3, #37	; 0x25
   858b6:	d1f8      	bne.n	858aa <_vfiprintf_r+0x7e>
   858b8:	1be5      	subs	r5, r4, r7
   858ba:	f040 811e 	bne.w	85afa <_vfiprintf_r+0x2ce>
   858be:	7823      	ldrb	r3, [r4, #0]
   858c0:	2b00      	cmp	r3, #0
   858c2:	f000 8136 	beq.w	85b32 <_vfiprintf_r+0x306>
   858c6:	f04f 0300 	mov.w	r3, #0
   858ca:	2500      	movs	r5, #0
   858cc:	f04f 3bff 	mov.w	fp, #4294967295
   858d0:	f04f 082b 	mov.w	r8, #43	; 0x2b
   858d4:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   858d8:	7863      	ldrb	r3, [r4, #1]
   858da:	9503      	str	r5, [sp, #12]
   858dc:	1c67      	adds	r7, r4, #1
   858de:	3701      	adds	r7, #1
   858e0:	f1a3 0220 	sub.w	r2, r3, #32
   858e4:	2a5a      	cmp	r2, #90	; 0x5a
   858e6:	f200 8146 	bhi.w	85b76 <_vfiprintf_r+0x34a>
   858ea:	e8df f012 	tbh	[pc, r2, lsl #1]
   858ee:	02a1      	.short	0x02a1
   858f0:	01440144 	.word	0x01440144
   858f4:	0144029d 	.word	0x0144029d
   858f8:	01440144 	.word	0x01440144
   858fc:	0144027c 	.word	0x0144027c
   85900:	006a0144 	.word	0x006a0144
   85904:	01440253 	.word	0x01440253
   85908:	02af0229 	.word	0x02af0229
   8590c:	02ab0144 	.word	0x02ab0144
   85910:	005b005b 	.word	0x005b005b
   85914:	005b005b 	.word	0x005b005b
   85918:	005b005b 	.word	0x005b005b
   8591c:	005b005b 	.word	0x005b005b
   85920:	0144005b 	.word	0x0144005b
   85924:	01440144 	.word	0x01440144
   85928:	01440144 	.word	0x01440144
   8592c:	01440144 	.word	0x01440144
   85930:	01440144 	.word	0x01440144
   85934:	00780213 	.word	0x00780213
   85938:	01440144 	.word	0x01440144
   8593c:	01440144 	.word	0x01440144
   85940:	01440144 	.word	0x01440144
   85944:	01440144 	.word	0x01440144
   85948:	01440144 	.word	0x01440144
   8594c:	014400d1 	.word	0x014400d1
   85950:	01440144 	.word	0x01440144
   85954:	014401f7 	.word	0x014401f7
   85958:	01440241 	.word	0x01440241
   8595c:	05210144 	.word	0x05210144
   85960:	01440144 	.word	0x01440144
   85964:	01440144 	.word	0x01440144
   85968:	01440144 	.word	0x01440144
   8596c:	01440144 	.word	0x01440144
   85970:	01440144 	.word	0x01440144
   85974:	007a0213 	.word	0x007a0213
   85978:	01440144 	.word	0x01440144
   8597c:	02370144 	.word	0x02370144
   85980:	0074007a 	.word	0x0074007a
   85984:	022d0144 	.word	0x022d0144
   85988:	02690144 	.word	0x02690144
   8598c:	025700d3 	.word	0x025700d3
   85990:	01440074 	.word	0x01440074
   85994:	007201f7 	.word	0x007201f7
   85998:	01440541 	.word	0x01440541
   8599c:	05430144 	.word	0x05430144
   859a0:	00720144 	.word	0x00720144
   859a4:	2100      	movs	r1, #0
   859a6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   859aa:	f817 3b01 	ldrb.w	r3, [r7], #1
   859ae:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   859b2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
   859b6:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   859ba:	2a09      	cmp	r2, #9
   859bc:	d9f5      	bls.n	859aa <_vfiprintf_r+0x17e>
   859be:	9103      	str	r1, [sp, #12]
   859c0:	e78e      	b.n	858e0 <_vfiprintf_r+0xb4>
   859c2:	9b05      	ldr	r3, [sp, #20]
   859c4:	f853 2b04 	ldr.w	r2, [r3], #4
   859c8:	2a00      	cmp	r2, #0
   859ca:	9203      	str	r2, [sp, #12]
   859cc:	9305      	str	r3, [sp, #20]
   859ce:	f2c0 81b4 	blt.w	85d3a <_vfiprintf_r+0x50e>
   859d2:	783b      	ldrb	r3, [r7, #0]
   859d4:	e783      	b.n	858de <_vfiprintf_r+0xb2>
   859d6:	783b      	ldrb	r3, [r7, #0]
   859d8:	f045 0520 	orr.w	r5, r5, #32
   859dc:	e77f      	b.n	858de <_vfiprintf_r+0xb2>
   859de:	f045 0510 	orr.w	r5, r5, #16
   859e2:	06ac      	lsls	r4, r5, #26
   859e4:	9e05      	ldr	r6, [sp, #20]
   859e6:	f140 816b 	bpl.w	85cc0 <_vfiprintf_r+0x494>
   859ea:	3607      	adds	r6, #7
   859ec:	f026 0607 	bic.w	r6, r6, #7
   859f0:	4632      	mov	r2, r6
   859f2:	6873      	ldr	r3, [r6, #4]
   859f4:	f852 6b08 	ldr.w	r6, [r2], #8
   859f8:	4698      	mov	r8, r3
   859fa:	9205      	str	r2, [sp, #20]
   859fc:	2b00      	cmp	r3, #0
   859fe:	f2c0 8449 	blt.w	86294 <_vfiprintf_r+0xa68>
   85a02:	f1bb 3fff 	cmp.w	fp, #4294967295
   85a06:	f000 8531 	beq.w	8646c <_vfiprintf_r+0xc40>
   85a0a:	ea56 0308 	orrs.w	r3, r6, r8
   85a0e:	f025 0a80 	bic.w	sl, r5, #128	; 0x80
   85a12:	f000 8425 	beq.w	86260 <_vfiprintf_r+0xa34>
   85a16:	2e0a      	cmp	r6, #10
   85a18:	f178 0300 	sbcs.w	r3, r8, #0
   85a1c:	f080 84e1 	bcs.w	863e2 <_vfiprintf_r+0xbb6>
   85a20:	2301      	movs	r3, #1
   85a22:	4655      	mov	r5, sl
   85a24:	3630      	adds	r6, #48	; 0x30
   85a26:	f88d 60ef 	strb.w	r6, [sp, #239]	; 0xef
   85a2a:	9301      	str	r3, [sp, #4]
   85a2c:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85a30:	f8dd 8004 	ldr.w	r8, [sp, #4]
   85a34:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   85a38:	45d8      	cmp	r8, fp
   85a3a:	bfb8      	it	lt
   85a3c:	46d8      	movlt	r8, fp
   85a3e:	2b00      	cmp	r3, #0
   85a40:	f000 80a8 	beq.w	85b94 <_vfiprintf_r+0x368>
   85a44:	f108 0801 	add.w	r8, r8, #1
   85a48:	e0a4      	b.n	85b94 <_vfiprintf_r+0x368>
   85a4a:	9d02      	ldr	r5, [sp, #8]
   85a4c:	9806      	ldr	r0, [sp, #24]
   85a4e:	4629      	mov	r1, r5
   85a50:	f000 fdfa 	bl	86648 <__swsetup_r>
   85a54:	2800      	cmp	r0, #0
   85a56:	f040 8594 	bne.w	86582 <_vfiprintf_r+0xd56>
   85a5a:	89aa      	ldrh	r2, [r5, #12]
   85a5c:	f002 031a 	and.w	r3, r2, #26
   85a60:	2b0a      	cmp	r3, #10
   85a62:	f47f af10 	bne.w	85886 <_vfiprintf_r+0x5a>
   85a66:	9902      	ldr	r1, [sp, #8]
   85a68:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
   85a6c:	2b00      	cmp	r3, #0
   85a6e:	f6ff af0a 	blt.w	85886 <_vfiprintf_r+0x5a>
   85a72:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   85a74:	07de      	lsls	r6, r3, #31
   85a76:	d402      	bmi.n	85a7e <_vfiprintf_r+0x252>
   85a78:	0595      	lsls	r5, r2, #22
   85a7a:	f140 8562 	bpl.w	86542 <_vfiprintf_r+0xd16>
   85a7e:	4623      	mov	r3, r4
   85a80:	463a      	mov	r2, r7
   85a82:	9902      	ldr	r1, [sp, #8]
   85a84:	9806      	ldr	r0, [sp, #24]
   85a86:	b03d      	add	sp, #244	; 0xf4
   85a88:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85a8c:	f000 bd9a 	b.w	865c4 <__sbprintf>
   85a90:	f045 0510 	orr.w	r5, r5, #16
   85a94:	f015 0820 	ands.w	r8, r5, #32
   85a98:	f000 8103 	beq.w	85ca2 <_vfiprintf_r+0x476>
   85a9c:	9e05      	ldr	r6, [sp, #20]
   85a9e:	3607      	adds	r6, #7
   85aa0:	f026 0607 	bic.w	r6, r6, #7
   85aa4:	4633      	mov	r3, r6
   85aa6:	f8d6 8004 	ldr.w	r8, [r6, #4]
   85aaa:	f853 6b08 	ldr.w	r6, [r3], #8
   85aae:	9305      	str	r3, [sp, #20]
   85ab0:	2300      	movs	r3, #0
   85ab2:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   85ab6:	f04f 0200 	mov.w	r2, #0
   85aba:	f88d 203b 	strb.w	r2, [sp, #59]	; 0x3b
   85abe:	f1bb 3fff 	cmp.w	fp, #4294967295
   85ac2:	f000 81dd 	beq.w	85e80 <_vfiprintf_r+0x654>
   85ac6:	ea56 0208 	orrs.w	r2, r6, r8
   85aca:	f02a 0580 	bic.w	r5, sl, #128	; 0x80
   85ace:	f040 81d6 	bne.w	85e7e <_vfiprintf_r+0x652>
   85ad2:	f1bb 0f00 	cmp.w	fp, #0
   85ad6:	f040 84cc 	bne.w	86472 <_vfiprintf_r+0xc46>
   85ada:	2b00      	cmp	r3, #0
   85adc:	f040 83c5 	bne.w	8626a <_vfiprintf_r+0xa3e>
   85ae0:	f01a 0301 	ands.w	r3, sl, #1
   85ae4:	9301      	str	r3, [sp, #4]
   85ae6:	f000 83ec 	beq.w	862c2 <_vfiprintf_r+0xa96>
   85aea:	2330      	movs	r3, #48	; 0x30
   85aec:	f10d 04ef 	add.w	r4, sp, #239	; 0xef
   85af0:	f88d 30ef 	strb.w	r3, [sp, #239]	; 0xef
   85af4:	e79c      	b.n	85a30 <_vfiprintf_r+0x204>
   85af6:	1be5      	subs	r5, r4, r7
   85af8:	d01b      	beq.n	85b32 <_vfiprintf_r+0x306>
   85afa:	9b11      	ldr	r3, [sp, #68]	; 0x44
   85afc:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85afe:	3301      	adds	r3, #1
   85b00:	442a      	add	r2, r5
   85b02:	2b07      	cmp	r3, #7
   85b04:	e9c9 7500 	strd	r7, r5, [r9]
   85b08:	9212      	str	r2, [sp, #72]	; 0x48
   85b0a:	9311      	str	r3, [sp, #68]	; 0x44
   85b0c:	dc05      	bgt.n	85b1a <_vfiprintf_r+0x2ee>
   85b0e:	f109 0908 	add.w	r9, r9, #8
   85b12:	9b04      	ldr	r3, [sp, #16]
   85b14:	442b      	add	r3, r5
   85b16:	9304      	str	r3, [sp, #16]
   85b18:	e6d1      	b.n	858be <_vfiprintf_r+0x92>
   85b1a:	2a00      	cmp	r2, #0
   85b1c:	f000 839c 	beq.w	86258 <_vfiprintf_r+0xa2c>
   85b20:	9902      	ldr	r1, [sp, #8]
   85b22:	9806      	ldr	r0, [sp, #24]
   85b24:	aa10      	add	r2, sp, #64	; 0x40
   85b26:	f7ff fe45 	bl	857b4 <__sprint_r.part.0>
   85b2a:	b940      	cbnz	r0, 85b3e <_vfiprintf_r+0x312>
   85b2c:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85b30:	e7ef      	b.n	85b12 <_vfiprintf_r+0x2e6>
   85b32:	9b12      	ldr	r3, [sp, #72]	; 0x48
   85b34:	2b00      	cmp	r3, #0
   85b36:	f040 8515 	bne.w	86564 <_vfiprintf_r+0xd38>
   85b3a:	2300      	movs	r3, #0
   85b3c:	9311      	str	r3, [sp, #68]	; 0x44
   85b3e:	9a02      	ldr	r2, [sp, #8]
   85b40:	6e53      	ldr	r3, [r2, #100]	; 0x64
   85b42:	07d9      	lsls	r1, r3, #31
   85b44:	f140 80a2 	bpl.w	85c8c <_vfiprintf_r+0x460>
   85b48:	8993      	ldrh	r3, [r2, #12]
   85b4a:	065b      	lsls	r3, r3, #25
   85b4c:	f100 8525 	bmi.w	8659a <_vfiprintf_r+0xd6e>
   85b50:	9804      	ldr	r0, [sp, #16]
   85b52:	b03d      	add	sp, #244	; 0xf4
   85b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   85b58:	9b02      	ldr	r3, [sp, #8]
   85b5a:	f9b3 100c 	ldrsh.w	r1, [r3, #12]
   85b5e:	058d      	lsls	r5, r1, #22
   85b60:	b28a      	uxth	r2, r1
   85b62:	f53f ae78 	bmi.w	85856 <_vfiprintf_r+0x2a>
   85b66:	461d      	mov	r5, r3
   85b68:	6d98      	ldr	r0, [r3, #88]	; 0x58
   85b6a:	f002 facf 	bl	8810c <__retarget_lock_acquire_recursive>
   85b6e:	f9b5 100c 	ldrsh.w	r1, [r5, #12]
   85b72:	b28a      	uxth	r2, r1
   85b74:	e66f      	b.n	85856 <_vfiprintf_r+0x2a>
   85b76:	2b00      	cmp	r3, #0
   85b78:	d0db      	beq.n	85b32 <_vfiprintf_r+0x306>
   85b7a:	f04f 0801 	mov.w	r8, #1
   85b7e:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   85b82:	f04f 0300 	mov.w	r3, #0
   85b86:	ac23      	add	r4, sp, #140	; 0x8c
   85b88:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85b8c:	f8cd 8004 	str.w	r8, [sp, #4]
   85b90:	f04f 0b00 	mov.w	fp, #0
   85b94:	f015 0302 	ands.w	r3, r5, #2
   85b98:	9307      	str	r3, [sp, #28]
   85b9a:	bf18      	it	ne
   85b9c:	f108 0802 	addne.w	r8, r8, #2
   85ba0:	f015 0384 	ands.w	r3, r5, #132	; 0x84
   85ba4:	9308      	str	r3, [sp, #32]
   85ba6:	d105      	bne.n	85bb4 <_vfiprintf_r+0x388>
   85ba8:	9b03      	ldr	r3, [sp, #12]
   85baa:	eba3 0608 	sub.w	r6, r3, r8
   85bae:	2e00      	cmp	r6, #0
   85bb0:	f300 828a 	bgt.w	860c8 <_vfiprintf_r+0x89c>
   85bb4:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85bb8:	1c48      	adds	r0, r1, #1
   85bba:	f89d 603b 	ldrb.w	r6, [sp, #59]	; 0x3b
   85bbe:	b176      	cbz	r6, 85bde <_vfiprintf_r+0x3b2>
   85bc0:	2101      	movs	r1, #1
   85bc2:	3201      	adds	r2, #1
   85bc4:	f10d 063b 	add.w	r6, sp, #59	; 0x3b
   85bc8:	2807      	cmp	r0, #7
   85bca:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85bce:	e9c9 6100 	strd	r6, r1, [r9]
   85bd2:	f300 8258 	bgt.w	86086 <_vfiprintf_r+0x85a>
   85bd6:	4601      	mov	r1, r0
   85bd8:	f109 0908 	add.w	r9, r9, #8
   85bdc:	3001      	adds	r0, #1
   85bde:	9b07      	ldr	r3, [sp, #28]
   85be0:	b1d3      	cbz	r3, 85c18 <_vfiprintf_r+0x3ec>
   85be2:	2302      	movs	r3, #2
   85be4:	3202      	adds	r2, #2
   85be6:	f8c9 3004 	str.w	r3, [r9, #4]
   85bea:	2807      	cmp	r0, #7
   85bec:	ab0f      	add	r3, sp, #60	; 0x3c
   85bee:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85bf2:	f8c9 3000 	str.w	r3, [r9]
   85bf6:	f340 8262 	ble.w	860be <_vfiprintf_r+0x892>
   85bfa:	2a00      	cmp	r2, #0
   85bfc:	f000 8327 	beq.w	8624e <_vfiprintf_r+0xa22>
   85c00:	9902      	ldr	r1, [sp, #8]
   85c02:	9806      	ldr	r0, [sp, #24]
   85c04:	aa10      	add	r2, sp, #64	; 0x40
   85c06:	f7ff fdd5 	bl	857b4 <__sprint_r.part.0>
   85c0a:	2800      	cmp	r0, #0
   85c0c:	d197      	bne.n	85b3e <_vfiprintf_r+0x312>
   85c0e:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85c12:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85c16:	1c48      	adds	r0, r1, #1
   85c18:	9b08      	ldr	r3, [sp, #32]
   85c1a:	2b80      	cmp	r3, #128	; 0x80
   85c1c:	f000 8171 	beq.w	85f02 <_vfiprintf_r+0x6d6>
   85c20:	9b01      	ldr	r3, [sp, #4]
   85c22:	ebab 0603 	sub.w	r6, fp, r3
   85c26:	2e00      	cmp	r6, #0
   85c28:	f300 81cf 	bgt.w	85fca <_vfiprintf_r+0x79e>
   85c2c:	9b01      	ldr	r3, [sp, #4]
   85c2e:	2807      	cmp	r0, #7
   85c30:	441a      	add	r2, r3
   85c32:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85c36:	f8c9 4000 	str.w	r4, [r9]
   85c3a:	f8c9 3004 	str.w	r3, [r9, #4]
   85c3e:	f340 815d 	ble.w	85efc <_vfiprintf_r+0x6d0>
   85c42:	2a00      	cmp	r2, #0
   85c44:	f000 8293 	beq.w	8616e <_vfiprintf_r+0x942>
   85c48:	9902      	ldr	r1, [sp, #8]
   85c4a:	9806      	ldr	r0, [sp, #24]
   85c4c:	aa10      	add	r2, sp, #64	; 0x40
   85c4e:	f7ff fdb1 	bl	857b4 <__sprint_r.part.0>
   85c52:	2800      	cmp	r0, #0
   85c54:	f47f af73 	bne.w	85b3e <_vfiprintf_r+0x312>
   85c58:	9a12      	ldr	r2, [sp, #72]	; 0x48
   85c5a:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85c5e:	0768      	lsls	r0, r5, #29
   85c60:	d505      	bpl.n	85c6e <_vfiprintf_r+0x442>
   85c62:	9b03      	ldr	r3, [sp, #12]
   85c64:	eba3 0408 	sub.w	r4, r3, r8
   85c68:	2c00      	cmp	r4, #0
   85c6a:	f300 828a 	bgt.w	86182 <_vfiprintf_r+0x956>
   85c6e:	e9dd 1303 	ldrd	r1, r3, [sp, #12]
   85c72:	4541      	cmp	r1, r8
   85c74:	bfac      	ite	ge
   85c76:	185b      	addge	r3, r3, r1
   85c78:	4443      	addlt	r3, r8
   85c7a:	9304      	str	r3, [sp, #16]
   85c7c:	2a00      	cmp	r2, #0
   85c7e:	f040 81f3 	bne.w	86068 <_vfiprintf_r+0x83c>
   85c82:	2300      	movs	r3, #0
   85c84:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85c88:	9311      	str	r3, [sp, #68]	; 0x44
   85c8a:	e608      	b.n	8589e <_vfiprintf_r+0x72>
   85c8c:	9b02      	ldr	r3, [sp, #8]
   85c8e:	899b      	ldrh	r3, [r3, #12]
   85c90:	059a      	lsls	r2, r3, #22
   85c92:	f53f af5a 	bmi.w	85b4a <_vfiprintf_r+0x31e>
   85c96:	9c02      	ldr	r4, [sp, #8]
   85c98:	6da0      	ldr	r0, [r4, #88]	; 0x58
   85c9a:	f002 fa39 	bl	88110 <__retarget_lock_release_recursive>
   85c9e:	89a3      	ldrh	r3, [r4, #12]
   85ca0:	e753      	b.n	85b4a <_vfiprintf_r+0x31e>
   85ca2:	f015 0310 	ands.w	r3, r5, #16
   85ca6:	f040 8318 	bne.w	862da <_vfiprintf_r+0xaae>
   85caa:	f015 0240 	ands.w	r2, r5, #64	; 0x40
   85cae:	f000 8310 	beq.w	862d2 <_vfiprintf_r+0xaa6>
   85cb2:	9e05      	ldr	r6, [sp, #20]
   85cb4:	4698      	mov	r8, r3
   85cb6:	f856 3b04 	ldr.w	r3, [r6], #4
   85cba:	9605      	str	r6, [sp, #20]
   85cbc:	b29e      	uxth	r6, r3
   85cbe:	e6f7      	b.n	85ab0 <_vfiprintf_r+0x284>
   85cc0:	f856 3b04 	ldr.w	r3, [r6], #4
   85cc4:	06e8      	lsls	r0, r5, #27
   85cc6:	9605      	str	r6, [sp, #20]
   85cc8:	f100 8310 	bmi.w	862ec <_vfiprintf_r+0xac0>
   85ccc:	0669      	lsls	r1, r5, #25
   85cce:	f140 830a 	bpl.w	862e6 <_vfiprintf_r+0xaba>
   85cd2:	f343 38c0 	sbfx	r8, r3, #15, #1
   85cd6:	b21e      	sxth	r6, r3
   85cd8:	4643      	mov	r3, r8
   85cda:	e68f      	b.n	859fc <_vfiprintf_r+0x1d0>
   85cdc:	f04f 0300 	mov.w	r3, #0
   85ce0:	9e05      	ldr	r6, [sp, #20]
   85ce2:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85ce6:	f856 4b04 	ldr.w	r4, [r6], #4
   85cea:	2c00      	cmp	r4, #0
   85cec:	f000 83cf 	beq.w	8648e <_vfiprintf_r+0xc62>
   85cf0:	f1bb 3fff 	cmp.w	fp, #4294967295
   85cf4:	f000 8341 	beq.w	8637a <_vfiprintf_r+0xb4e>
   85cf8:	465a      	mov	r2, fp
   85cfa:	2100      	movs	r1, #0
   85cfc:	4620      	mov	r0, r4
   85cfe:	f002 fd73 	bl	887e8 <memchr>
   85d02:	2800      	cmp	r0, #0
   85d04:	f000 8422 	beq.w	8654c <_vfiprintf_r+0xd20>
   85d08:	1b03      	subs	r3, r0, r4
   85d0a:	f04f 0b00 	mov.w	fp, #0
   85d0e:	9605      	str	r6, [sp, #20]
   85d10:	9301      	str	r3, [sp, #4]
   85d12:	e68d      	b.n	85a30 <_vfiprintf_r+0x204>
   85d14:	f04f 0300 	mov.w	r3, #0
   85d18:	f04f 0801 	mov.w	r8, #1
   85d1c:	9e05      	ldr	r6, [sp, #20]
   85d1e:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85d22:	f856 3b04 	ldr.w	r3, [r6], #4
   85d26:	ac23      	add	r4, sp, #140	; 0x8c
   85d28:	f88d 308c 	strb.w	r3, [sp, #140]	; 0x8c
   85d2c:	9605      	str	r6, [sp, #20]
   85d2e:	f8cd 8004 	str.w	r8, [sp, #4]
   85d32:	e72d      	b.n	85b90 <_vfiprintf_r+0x364>
   85d34:	f001 fdc4 	bl	878c0 <__sinit>
   85d38:	e585      	b.n	85846 <_vfiprintf_r+0x1a>
   85d3a:	9b03      	ldr	r3, [sp, #12]
   85d3c:	425b      	negs	r3, r3
   85d3e:	9303      	str	r3, [sp, #12]
   85d40:	783b      	ldrb	r3, [r7, #0]
   85d42:	f045 0504 	orr.w	r5, r5, #4
   85d46:	e5ca      	b.n	858de <_vfiprintf_r+0xb2>
   85d48:	783b      	ldrb	r3, [r7, #0]
   85d4a:	2b6c      	cmp	r3, #108	; 0x6c
   85d4c:	bf03      	ittte	eq
   85d4e:	787b      	ldrbeq	r3, [r7, #1]
   85d50:	f045 0520 	orreq.w	r5, r5, #32
   85d54:	3701      	addeq	r7, #1
   85d56:	f045 0510 	orrne.w	r5, r5, #16
   85d5a:	e5c0      	b.n	858de <_vfiprintf_r+0xb2>
   85d5c:	783b      	ldrb	r3, [r7, #0]
   85d5e:	2b68      	cmp	r3, #104	; 0x68
   85d60:	bf03      	ittte	eq
   85d62:	787b      	ldrbeq	r3, [r7, #1]
   85d64:	f445 7500 	orreq.w	r5, r5, #512	; 0x200
   85d68:	3701      	addeq	r7, #1
   85d6a:	f045 0540 	orrne.w	r5, r5, #64	; 0x40
   85d6e:	e5b6      	b.n	858de <_vfiprintf_r+0xb2>
   85d70:	f045 0a10 	orr.w	sl, r5, #16
   85d74:	f01a 0820 	ands.w	r8, sl, #32
   85d78:	f000 827e 	beq.w	86278 <_vfiprintf_r+0xa4c>
   85d7c:	9e05      	ldr	r6, [sp, #20]
   85d7e:	2301      	movs	r3, #1
   85d80:	3607      	adds	r6, #7
   85d82:	f026 0607 	bic.w	r6, r6, #7
   85d86:	4632      	mov	r2, r6
   85d88:	f8d6 8004 	ldr.w	r8, [r6, #4]
   85d8c:	f852 6b08 	ldr.w	r6, [r2], #8
   85d90:	9205      	str	r2, [sp, #20]
   85d92:	e690      	b.n	85ab6 <_vfiprintf_r+0x28a>
   85d94:	783b      	ldrb	r3, [r7, #0]
   85d96:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
   85d9a:	e5a0      	b.n	858de <_vfiprintf_r+0xb2>
   85d9c:	2230      	movs	r2, #48	; 0x30
   85d9e:	f88d 203c 	strb.w	r2, [sp, #60]	; 0x3c
   85da2:	2278      	movs	r2, #120	; 0x78
   85da4:	9b05      	ldr	r3, [sp, #20]
   85da6:	f88d 203d 	strb.w	r2, [sp, #61]	; 0x3d
   85daa:	f853 6b04 	ldr.w	r6, [r3], #4
   85dae:	4abe      	ldr	r2, [pc, #760]	; (860a8 <_vfiprintf_r+0x87c>)
   85db0:	9305      	str	r3, [sp, #20]
   85db2:	f04f 0800 	mov.w	r8, #0
   85db6:	2302      	movs	r3, #2
   85db8:	f045 0a02 	orr.w	sl, r5, #2
   85dbc:	9209      	str	r2, [sp, #36]	; 0x24
   85dbe:	e67a      	b.n	85ab6 <_vfiprintf_r+0x28a>
   85dc0:	06ae      	lsls	r6, r5, #26
   85dc2:	f100 82a4 	bmi.w	8630e <_vfiprintf_r+0xae2>
   85dc6:	06ec      	lsls	r4, r5, #27
   85dc8:	f100 8359 	bmi.w	8647e <_vfiprintf_r+0xc52>
   85dcc:	0668      	lsls	r0, r5, #25
   85dce:	f100 83b0 	bmi.w	86532 <_vfiprintf_r+0xd06>
   85dd2:	05a9      	lsls	r1, r5, #22
   85dd4:	f140 8353 	bpl.w	8647e <_vfiprintf_r+0xc52>
   85dd8:	9e05      	ldr	r6, [sp, #20]
   85dda:	9a04      	ldr	r2, [sp, #16]
   85ddc:	f856 3b04 	ldr.w	r3, [r6], #4
   85de0:	701a      	strb	r2, [r3, #0]
   85de2:	9605      	str	r6, [sp, #20]
   85de4:	e55b      	b.n	8589e <_vfiprintf_r+0x72>
   85de6:	9c06      	ldr	r4, [sp, #24]
   85de8:	4620      	mov	r0, r4
   85dea:	f002 f987 	bl	880fc <_localeconv_r>
   85dee:	6843      	ldr	r3, [r0, #4]
   85df0:	4618      	mov	r0, r3
   85df2:	930b      	str	r3, [sp, #44]	; 0x2c
   85df4:	f7fd ff2a 	bl	83c4c <strlen>
   85df8:	4603      	mov	r3, r0
   85dfa:	4620      	mov	r0, r4
   85dfc:	930c      	str	r3, [sp, #48]	; 0x30
   85dfe:	461c      	mov	r4, r3
   85e00:	f002 f97c 	bl	880fc <_localeconv_r>
   85e04:	6883      	ldr	r3, [r0, #8]
   85e06:	930a      	str	r3, [sp, #40]	; 0x28
   85e08:	2c00      	cmp	r4, #0
   85e0a:	f43f ade2 	beq.w	859d2 <_vfiprintf_r+0x1a6>
   85e0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85e10:	2b00      	cmp	r3, #0
   85e12:	f43f adde 	beq.w	859d2 <_vfiprintf_r+0x1a6>
   85e16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   85e18:	781b      	ldrb	r3, [r3, #0]
   85e1a:	2b00      	cmp	r3, #0
   85e1c:	f43f add9 	beq.w	859d2 <_vfiprintf_r+0x1a6>
   85e20:	783b      	ldrb	r3, [r7, #0]
   85e22:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
   85e26:	e55a      	b.n	858de <_vfiprintf_r+0xb2>
   85e28:	783b      	ldrb	r3, [r7, #0]
   85e2a:	f045 0501 	orr.w	r5, r5, #1
   85e2e:	e556      	b.n	858de <_vfiprintf_r+0xb2>
   85e30:	f89d 303b 	ldrb.w	r3, [sp, #59]	; 0x3b
   85e34:	2b00      	cmp	r3, #0
   85e36:	f47f adcc 	bne.w	859d2 <_vfiprintf_r+0x1a6>
   85e3a:	2320      	movs	r3, #32
   85e3c:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   85e40:	783b      	ldrb	r3, [r7, #0]
   85e42:	e54c      	b.n	858de <_vfiprintf_r+0xb2>
   85e44:	783b      	ldrb	r3, [r7, #0]
   85e46:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   85e4a:	e548      	b.n	858de <_vfiprintf_r+0xb2>
   85e4c:	4639      	mov	r1, r7
   85e4e:	f811 3b01 	ldrb.w	r3, [r1], #1
   85e52:	2b2a      	cmp	r3, #42	; 0x2a
   85e54:	f000 83a6 	beq.w	865a4 <_vfiprintf_r+0xd78>
   85e58:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   85e5c:	2a09      	cmp	r2, #9
   85e5e:	460f      	mov	r7, r1
   85e60:	f04f 0b00 	mov.w	fp, #0
   85e64:	f63f ad3c 	bhi.w	858e0 <_vfiprintf_r+0xb4>
   85e68:	f817 3b01 	ldrb.w	r3, [r7], #1
   85e6c:	eb0b 0b8b 	add.w	fp, fp, fp, lsl #2
   85e70:	eb02 0b4b 	add.w	fp, r2, fp, lsl #1
   85e74:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   85e78:	2a09      	cmp	r2, #9
   85e7a:	d9f5      	bls.n	85e68 <_vfiprintf_r+0x63c>
   85e7c:	e530      	b.n	858e0 <_vfiprintf_r+0xb4>
   85e7e:	46aa      	mov	sl, r5
   85e80:	2b01      	cmp	r3, #1
   85e82:	f43f adc8 	beq.w	85a16 <_vfiprintf_r+0x1ea>
   85e86:	2b02      	cmp	r3, #2
   85e88:	ac3c      	add	r4, sp, #240	; 0xf0
   85e8a:	d112      	bne.n	85eb2 <_vfiprintf_r+0x686>
   85e8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   85e8e:	f006 030f 	and.w	r3, r6, #15
   85e92:	5cd3      	ldrb	r3, [r2, r3]
   85e94:	0936      	lsrs	r6, r6, #4
   85e96:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
   85e9a:	ea4f 1818 	mov.w	r8, r8, lsr #4
   85e9e:	f804 3d01 	strb.w	r3, [r4, #-1]!
   85ea2:	ea56 0308 	orrs.w	r3, r6, r8
   85ea6:	d1f2      	bne.n	85e8e <_vfiprintf_r+0x662>
   85ea8:	ab3c      	add	r3, sp, #240	; 0xf0
   85eaa:	1b1b      	subs	r3, r3, r4
   85eac:	4655      	mov	r5, sl
   85eae:	9301      	str	r3, [sp, #4]
   85eb0:	e5be      	b.n	85a30 <_vfiprintf_r+0x204>
   85eb2:	f006 0307 	and.w	r3, r6, #7
   85eb6:	08f6      	lsrs	r6, r6, #3
   85eb8:	ea46 7648 	orr.w	r6, r6, r8, lsl #29
   85ebc:	ea4f 08d8 	mov.w	r8, r8, lsr #3
   85ec0:	3330      	adds	r3, #48	; 0x30
   85ec2:	ea56 0108 	orrs.w	r1, r6, r8
   85ec6:	4622      	mov	r2, r4
   85ec8:	f804 3d01 	strb.w	r3, [r4, #-1]!
   85ecc:	d1f1      	bne.n	85eb2 <_vfiprintf_r+0x686>
   85ece:	f01a 0f01 	tst.w	sl, #1
   85ed2:	d0e9      	beq.n	85ea8 <_vfiprintf_r+0x67c>
   85ed4:	2b30      	cmp	r3, #48	; 0x30
   85ed6:	d0e7      	beq.n	85ea8 <_vfiprintf_r+0x67c>
   85ed8:	2330      	movs	r3, #48	; 0x30
   85eda:	3a02      	subs	r2, #2
   85edc:	f804 3c01 	strb.w	r3, [r4, #-1]
   85ee0:	ab3c      	add	r3, sp, #240	; 0xf0
   85ee2:	1a9b      	subs	r3, r3, r2
   85ee4:	4655      	mov	r5, sl
   85ee6:	4614      	mov	r4, r2
   85ee8:	9301      	str	r3, [sp, #4]
   85eea:	e5a1      	b.n	85a30 <_vfiprintf_r+0x204>
   85eec:	2301      	movs	r3, #1
   85eee:	9a01      	ldr	r2, [sp, #4]
   85ef0:	9413      	str	r4, [sp, #76]	; 0x4c
   85ef2:	9311      	str	r3, [sp, #68]	; 0x44
   85ef4:	9214      	str	r2, [sp, #80]	; 0x50
   85ef6:	9212      	str	r2, [sp, #72]	; 0x48
   85ef8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85efc:	f109 0908 	add.w	r9, r9, #8
   85f00:	e6ad      	b.n	85c5e <_vfiprintf_r+0x432>
   85f02:	9b03      	ldr	r3, [sp, #12]
   85f04:	eba3 0608 	sub.w	r6, r3, r8
   85f08:	2e00      	cmp	r6, #0
   85f0a:	f77f ae89 	ble.w	85c20 <_vfiprintf_r+0x3f4>
   85f0e:	2e10      	cmp	r6, #16
   85f10:	f8df a198 	ldr.w	sl, [pc, #408]	; 860ac <_vfiprintf_r+0x880>
   85f14:	dd38      	ble.n	85f88 <_vfiprintf_r+0x75c>
   85f16:	4653      	mov	r3, sl
   85f18:	46cc      	mov	ip, r9
   85f1a:	46ba      	mov	sl, r7
   85f1c:	46c1      	mov	r9, r8
   85f1e:	9407      	str	r4, [sp, #28]
   85f20:	46a8      	mov	r8, r5
   85f22:	461f      	mov	r7, r3
   85f24:	9c06      	ldr	r4, [sp, #24]
   85f26:	9d02      	ldr	r5, [sp, #8]
   85f28:	e007      	b.n	85f3a <_vfiprintf_r+0x70e>
   85f2a:	f101 0e02 	add.w	lr, r1, #2
   85f2e:	4601      	mov	r1, r0
   85f30:	f10c 0c08 	add.w	ip, ip, #8
   85f34:	3e10      	subs	r6, #16
   85f36:	2e10      	cmp	r6, #16
   85f38:	dd1e      	ble.n	85f78 <_vfiprintf_r+0x74c>
   85f3a:	2310      	movs	r3, #16
   85f3c:	1c48      	adds	r0, r1, #1
   85f3e:	3210      	adds	r2, #16
   85f40:	2807      	cmp	r0, #7
   85f42:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85f46:	f8cc 7000 	str.w	r7, [ip]
   85f4a:	f8cc 3004 	str.w	r3, [ip, #4]
   85f4e:	ddec      	ble.n	85f2a <_vfiprintf_r+0x6fe>
   85f50:	2a00      	cmp	r2, #0
   85f52:	f000 8092 	beq.w	8607a <_vfiprintf_r+0x84e>
   85f56:	4629      	mov	r1, r5
   85f58:	4620      	mov	r0, r4
   85f5a:	aa10      	add	r2, sp, #64	; 0x40
   85f5c:	f7ff fc2a 	bl	857b4 <__sprint_r.part.0>
   85f60:	2800      	cmp	r0, #0
   85f62:	f47f adec 	bne.w	85b3e <_vfiprintf_r+0x312>
   85f66:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85f6a:	3e10      	subs	r6, #16
   85f6c:	2e10      	cmp	r6, #16
   85f6e:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   85f72:	f101 0e01 	add.w	lr, r1, #1
   85f76:	dce0      	bgt.n	85f3a <_vfiprintf_r+0x70e>
   85f78:	463b      	mov	r3, r7
   85f7a:	4645      	mov	r5, r8
   85f7c:	4657      	mov	r7, sl
   85f7e:	46c8      	mov	r8, r9
   85f80:	4670      	mov	r0, lr
   85f82:	46e1      	mov	r9, ip
   85f84:	469a      	mov	sl, r3
   85f86:	9c07      	ldr	r4, [sp, #28]
   85f88:	4432      	add	r2, r6
   85f8a:	2807      	cmp	r0, #7
   85f8c:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   85f90:	f8c9 a000 	str.w	sl, [r9]
   85f94:	f8c9 6004 	str.w	r6, [r9, #4]
   85f98:	f340 8196 	ble.w	862c8 <_vfiprintf_r+0xa9c>
   85f9c:	2a00      	cmp	r2, #0
   85f9e:	f000 829a 	beq.w	864d6 <_vfiprintf_r+0xcaa>
   85fa2:	9902      	ldr	r1, [sp, #8]
   85fa4:	9806      	ldr	r0, [sp, #24]
   85fa6:	aa10      	add	r2, sp, #64	; 0x40
   85fa8:	f7ff fc04 	bl	857b4 <__sprint_r.part.0>
   85fac:	2800      	cmp	r0, #0
   85fae:	f47f adc6 	bne.w	85b3e <_vfiprintf_r+0x312>
   85fb2:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   85fb6:	9b01      	ldr	r3, [sp, #4]
   85fb8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   85fbc:	ebab 0603 	sub.w	r6, fp, r3
   85fc0:	2e00      	cmp	r6, #0
   85fc2:	f101 0001 	add.w	r0, r1, #1
   85fc6:	f77f ae31 	ble.w	85c2c <_vfiprintf_r+0x400>
   85fca:	2e10      	cmp	r6, #16
   85fcc:	f340 826b 	ble.w	864a6 <_vfiprintf_r+0xc7a>
   85fd0:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 860ac <_vfiprintf_r+0x880>
   85fd4:	46cc      	mov	ip, r9
   85fd6:	4653      	mov	r3, sl
   85fd8:	46c1      	mov	r9, r8
   85fda:	46ba      	mov	sl, r7
   85fdc:	46a8      	mov	r8, r5
   85fde:	9407      	str	r4, [sp, #28]
   85fe0:	f04f 0b10 	mov.w	fp, #16
   85fe4:	461f      	mov	r7, r3
   85fe6:	9c06      	ldr	r4, [sp, #24]
   85fe8:	9d02      	ldr	r5, [sp, #8]
   85fea:	e007      	b.n	85ffc <_vfiprintf_r+0x7d0>
   85fec:	f101 0e02 	add.w	lr, r1, #2
   85ff0:	4601      	mov	r1, r0
   85ff2:	f10c 0c08 	add.w	ip, ip, #8
   85ff6:	3e10      	subs	r6, #16
   85ff8:	2e10      	cmp	r6, #16
   85ffa:	dd19      	ble.n	86030 <_vfiprintf_r+0x804>
   85ffc:	1c48      	adds	r0, r1, #1
   85ffe:	3210      	adds	r2, #16
   86000:	2807      	cmp	r0, #7
   86002:	e9cc 7b00 	strd	r7, fp, [ip]
   86006:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   8600a:	ddef      	ble.n	85fec <_vfiprintf_r+0x7c0>
   8600c:	b332      	cbz	r2, 8605c <_vfiprintf_r+0x830>
   8600e:	4629      	mov	r1, r5
   86010:	4620      	mov	r0, r4
   86012:	aa10      	add	r2, sp, #64	; 0x40
   86014:	f7ff fbce 	bl	857b4 <__sprint_r.part.0>
   86018:	2800      	cmp	r0, #0
   8601a:	f47f ad90 	bne.w	85b3e <_vfiprintf_r+0x312>
   8601e:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   86022:	3e10      	subs	r6, #16
   86024:	2e10      	cmp	r6, #16
   86026:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   8602a:	f101 0e01 	add.w	lr, r1, #1
   8602e:	dce5      	bgt.n	85ffc <_vfiprintf_r+0x7d0>
   86030:	463b      	mov	r3, r7
   86032:	4645      	mov	r5, r8
   86034:	4657      	mov	r7, sl
   86036:	46c8      	mov	r8, r9
   86038:	4670      	mov	r0, lr
   8603a:	46e1      	mov	r9, ip
   8603c:	469a      	mov	sl, r3
   8603e:	9c07      	ldr	r4, [sp, #28]
   86040:	4432      	add	r2, r6
   86042:	2807      	cmp	r0, #7
   86044:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   86048:	f8c9 a000 	str.w	sl, [r9]
   8604c:	f8c9 6004 	str.w	r6, [r9, #4]
   86050:	f300 80e9 	bgt.w	86226 <_vfiprintf_r+0x9fa>
   86054:	f109 0908 	add.w	r9, r9, #8
   86058:	3001      	adds	r0, #1
   8605a:	e5e7      	b.n	85c2c <_vfiprintf_r+0x400>
   8605c:	f04f 0e01 	mov.w	lr, #1
   86060:	4611      	mov	r1, r2
   86062:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   86066:	e7c6      	b.n	85ff6 <_vfiprintf_r+0x7ca>
   86068:	9902      	ldr	r1, [sp, #8]
   8606a:	9806      	ldr	r0, [sp, #24]
   8606c:	aa10      	add	r2, sp, #64	; 0x40
   8606e:	f7ff fba1 	bl	857b4 <__sprint_r.part.0>
   86072:	2800      	cmp	r0, #0
   86074:	f43f ae05 	beq.w	85c82 <_vfiprintf_r+0x456>
   86078:	e561      	b.n	85b3e <_vfiprintf_r+0x312>
   8607a:	f04f 0e01 	mov.w	lr, #1
   8607e:	4611      	mov	r1, r2
   86080:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   86084:	e756      	b.n	85f34 <_vfiprintf_r+0x708>
   86086:	2a00      	cmp	r2, #0
   86088:	f000 80de 	beq.w	86248 <_vfiprintf_r+0xa1c>
   8608c:	9902      	ldr	r1, [sp, #8]
   8608e:	9806      	ldr	r0, [sp, #24]
   86090:	aa10      	add	r2, sp, #64	; 0x40
   86092:	f7ff fb8f 	bl	857b4 <__sprint_r.part.0>
   86096:	2800      	cmp	r0, #0
   86098:	f47f ad51 	bne.w	85b3e <_vfiprintf_r+0x312>
   8609c:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   860a0:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   860a4:	1c48      	adds	r0, r1, #1
   860a6:	e59a      	b.n	85bde <_vfiprintf_r+0x3b2>
   860a8:	0008a904 	.word	0x0008a904
   860ac:	0008a968 	.word	0x0008a968
   860b0:	2202      	movs	r2, #2
   860b2:	2001      	movs	r0, #1
   860b4:	ab0f      	add	r3, sp, #60	; 0x3c
   860b6:	9313      	str	r3, [sp, #76]	; 0x4c
   860b8:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   860bc:	9214      	str	r2, [sp, #80]	; 0x50
   860be:	4601      	mov	r1, r0
   860c0:	f109 0908 	add.w	r9, r9, #8
   860c4:	1c48      	adds	r0, r1, #1
   860c6:	e5a7      	b.n	85c18 <_vfiprintf_r+0x3ec>
   860c8:	2e10      	cmp	r6, #16
   860ca:	f340 8245 	ble.w	86558 <_vfiprintf_r+0xd2c>
   860ce:	e9dd 3211 	ldrd	r3, r2, [sp, #68]	; 0x44
   860d2:	f8df a2f0 	ldr.w	sl, [pc, #752]	; 863c4 <_vfiprintf_r+0xb98>
   860d6:	4619      	mov	r1, r3
   860d8:	4653      	mov	r3, sl
   860da:	46cc      	mov	ip, r9
   860dc:	46ba      	mov	sl, r7
   860de:	46c1      	mov	r9, r8
   860e0:	940d      	str	r4, [sp, #52]	; 0x34
   860e2:	46a8      	mov	r8, r5
   860e4:	461f      	mov	r7, r3
   860e6:	9c06      	ldr	r4, [sp, #24]
   860e8:	9d02      	ldr	r5, [sp, #8]
   860ea:	e007      	b.n	860fc <_vfiprintf_r+0x8d0>
   860ec:	f101 0e02 	add.w	lr, r1, #2
   860f0:	4601      	mov	r1, r0
   860f2:	f10c 0c08 	add.w	ip, ip, #8
   860f6:	3e10      	subs	r6, #16
   860f8:	2e10      	cmp	r6, #16
   860fa:	dd1c      	ble.n	86136 <_vfiprintf_r+0x90a>
   860fc:	2310      	movs	r3, #16
   860fe:	1c48      	adds	r0, r1, #1
   86100:	3210      	adds	r2, #16
   86102:	2807      	cmp	r0, #7
   86104:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   86108:	f8cc 7000 	str.w	r7, [ip]
   8610c:	f8cc 3004 	str.w	r3, [ip, #4]
   86110:	ddec      	ble.n	860ec <_vfiprintf_r+0x8c0>
   86112:	b332      	cbz	r2, 86162 <_vfiprintf_r+0x936>
   86114:	4629      	mov	r1, r5
   86116:	4620      	mov	r0, r4
   86118:	aa10      	add	r2, sp, #64	; 0x40
   8611a:	f7ff fb4b 	bl	857b4 <__sprint_r.part.0>
   8611e:	2800      	cmp	r0, #0
   86120:	f47f ad0d 	bne.w	85b3e <_vfiprintf_r+0x312>
   86124:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   86128:	3e10      	subs	r6, #16
   8612a:	2e10      	cmp	r6, #16
   8612c:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   86130:	f101 0e01 	add.w	lr, r1, #1
   86134:	dce2      	bgt.n	860fc <_vfiprintf_r+0x8d0>
   86136:	463b      	mov	r3, r7
   86138:	4645      	mov	r5, r8
   8613a:	4657      	mov	r7, sl
   8613c:	46c8      	mov	r8, r9
   8613e:	4671      	mov	r1, lr
   86140:	46e1      	mov	r9, ip
   86142:	469a      	mov	sl, r3
   86144:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   86146:	4432      	add	r2, r6
   86148:	2907      	cmp	r1, #7
   8614a:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
   8614e:	f8c9 a000 	str.w	sl, [r9]
   86152:	f8c9 6004 	str.w	r6, [r9, #4]
   86156:	f300 80a7 	bgt.w	862a8 <_vfiprintf_r+0xa7c>
   8615a:	f109 0908 	add.w	r9, r9, #8
   8615e:	1c48      	adds	r0, r1, #1
   86160:	e52b      	b.n	85bba <_vfiprintf_r+0x38e>
   86162:	4611      	mov	r1, r2
   86164:	f04f 0e01 	mov.w	lr, #1
   86168:	f10d 0c4c 	add.w	ip, sp, #76	; 0x4c
   8616c:	e7c3      	b.n	860f6 <_vfiprintf_r+0x8ca>
   8616e:	076c      	lsls	r4, r5, #29
   86170:	9211      	str	r2, [sp, #68]	; 0x44
   86172:	d550      	bpl.n	86216 <_vfiprintf_r+0x9ea>
   86174:	9b03      	ldr	r3, [sp, #12]
   86176:	eba3 0408 	sub.w	r4, r3, r8
   8617a:	2c00      	cmp	r4, #0
   8617c:	dd4b      	ble.n	86216 <_vfiprintf_r+0x9ea>
   8617e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86182:	2c10      	cmp	r4, #16
   86184:	f340 81f8 	ble.w	86578 <_vfiprintf_r+0xd4c>
   86188:	f8df a238 	ldr.w	sl, [pc, #568]	; 863c4 <_vfiprintf_r+0xb98>
   8618c:	2510      	movs	r5, #16
   8618e:	4653      	mov	r3, sl
   86190:	9911      	ldr	r1, [sp, #68]	; 0x44
   86192:	46ba      	mov	sl, r7
   86194:	9e06      	ldr	r6, [sp, #24]
   86196:	461f      	mov	r7, r3
   86198:	f8dd b008 	ldr.w	fp, [sp, #8]
   8619c:	e006      	b.n	861ac <_vfiprintf_r+0x980>
   8619e:	1c88      	adds	r0, r1, #2
   861a0:	4619      	mov	r1, r3
   861a2:	f109 0908 	add.w	r9, r9, #8
   861a6:	3c10      	subs	r4, #16
   861a8:	2c10      	cmp	r4, #16
   861aa:	dd19      	ble.n	861e0 <_vfiprintf_r+0x9b4>
   861ac:	1c4b      	adds	r3, r1, #1
   861ae:	3210      	adds	r2, #16
   861b0:	2b07      	cmp	r3, #7
   861b2:	e9c9 7500 	strd	r7, r5, [r9]
   861b6:	e9cd 3211 	strd	r3, r2, [sp, #68]	; 0x44
   861ba:	ddf0      	ble.n	8619e <_vfiprintf_r+0x972>
   861bc:	b332      	cbz	r2, 8620c <_vfiprintf_r+0x9e0>
   861be:	4659      	mov	r1, fp
   861c0:	4630      	mov	r0, r6
   861c2:	aa10      	add	r2, sp, #64	; 0x40
   861c4:	f7ff faf6 	bl	857b4 <__sprint_r.part.0>
   861c8:	2800      	cmp	r0, #0
   861ca:	f47f acb8 	bne.w	85b3e <_vfiprintf_r+0x312>
   861ce:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
   861d2:	3c10      	subs	r4, #16
   861d4:	2c10      	cmp	r4, #16
   861d6:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   861da:	f101 0001 	add.w	r0, r1, #1
   861de:	dce5      	bgt.n	861ac <_vfiprintf_r+0x980>
   861e0:	463b      	mov	r3, r7
   861e2:	4657      	mov	r7, sl
   861e4:	469a      	mov	sl, r3
   861e6:	4422      	add	r2, r4
   861e8:	2807      	cmp	r0, #7
   861ea:	e9c9 a400 	strd	sl, r4, [r9]
   861ee:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
   861f2:	f77f ad3c 	ble.w	85c6e <_vfiprintf_r+0x442>
   861f6:	b172      	cbz	r2, 86216 <_vfiprintf_r+0x9ea>
   861f8:	9902      	ldr	r1, [sp, #8]
   861fa:	9806      	ldr	r0, [sp, #24]
   861fc:	aa10      	add	r2, sp, #64	; 0x40
   861fe:	f7ff fad9 	bl	857b4 <__sprint_r.part.0>
   86202:	2800      	cmp	r0, #0
   86204:	f47f ac9b 	bne.w	85b3e <_vfiprintf_r+0x312>
   86208:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8620a:	e530      	b.n	85c6e <_vfiprintf_r+0x442>
   8620c:	2001      	movs	r0, #1
   8620e:	4611      	mov	r1, r2
   86210:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86214:	e7c7      	b.n	861a6 <_vfiprintf_r+0x97a>
   86216:	e9dd 2303 	ldrd	r2, r3, [sp, #12]
   8621a:	4542      	cmp	r2, r8
   8621c:	bfac      	ite	ge
   8621e:	189b      	addge	r3, r3, r2
   86220:	4443      	addlt	r3, r8
   86222:	9304      	str	r3, [sp, #16]
   86224:	e52d      	b.n	85c82 <_vfiprintf_r+0x456>
   86226:	2a00      	cmp	r2, #0
   86228:	f43f ae60 	beq.w	85eec <_vfiprintf_r+0x6c0>
   8622c:	9902      	ldr	r1, [sp, #8]
   8622e:	9806      	ldr	r0, [sp, #24]
   86230:	aa10      	add	r2, sp, #64	; 0x40
   86232:	f7ff fabf 	bl	857b4 <__sprint_r.part.0>
   86236:	2800      	cmp	r0, #0
   86238:	f47f ac81 	bne.w	85b3e <_vfiprintf_r+0x312>
   8623c:	9811      	ldr	r0, [sp, #68]	; 0x44
   8623e:	9a12      	ldr	r2, [sp, #72]	; 0x48
   86240:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86244:	3001      	adds	r0, #1
   86246:	e4f1      	b.n	85c2c <_vfiprintf_r+0x400>
   86248:	9b07      	ldr	r3, [sp, #28]
   8624a:	2b00      	cmp	r3, #0
   8624c:	d169      	bne.n	86322 <_vfiprintf_r+0xaf6>
   8624e:	2001      	movs	r0, #1
   86250:	4611      	mov	r1, r2
   86252:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   86256:	e4df      	b.n	85c18 <_vfiprintf_r+0x3ec>
   86258:	9211      	str	r2, [sp, #68]	; 0x44
   8625a:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8625e:	e458      	b.n	85b12 <_vfiprintf_r+0x2e6>
   86260:	f1bb 0f00 	cmp.w	fp, #0
   86264:	f47f abdc 	bne.w	85a20 <_vfiprintf_r+0x1f4>
   86268:	4655      	mov	r5, sl
   8626a:	f04f 0b00 	mov.w	fp, #0
   8626e:	ac3c      	add	r4, sp, #240	; 0xf0
   86270:	f8cd b004 	str.w	fp, [sp, #4]
   86274:	f7ff bbdc 	b.w	85a30 <_vfiprintf_r+0x204>
   86278:	f01a 0310 	ands.w	r3, sl, #16
   8627c:	d140      	bne.n	86300 <_vfiprintf_r+0xad4>
   8627e:	f01a 0240 	ands.w	r2, sl, #64	; 0x40
   86282:	d039      	beq.n	862f8 <_vfiprintf_r+0xacc>
   86284:	9e05      	ldr	r6, [sp, #20]
   86286:	4698      	mov	r8, r3
   86288:	f856 2b04 	ldr.w	r2, [r6], #4
   8628c:	2301      	movs	r3, #1
   8628e:	9605      	str	r6, [sp, #20]
   86290:	b296      	uxth	r6, r2
   86292:	e410      	b.n	85ab6 <_vfiprintf_r+0x28a>
   86294:	232d      	movs	r3, #45	; 0x2d
   86296:	4276      	negs	r6, r6
   86298:	f88d 303b 	strb.w	r3, [sp, #59]	; 0x3b
   8629c:	46aa      	mov	sl, r5
   8629e:	f04f 0301 	mov.w	r3, #1
   862a2:	eb68 0848 	sbc.w	r8, r8, r8, lsl #1
   862a6:	e40a      	b.n	85abe <_vfiprintf_r+0x292>
   862a8:	2a00      	cmp	r2, #0
   862aa:	d06f      	beq.n	8638c <_vfiprintf_r+0xb60>
   862ac:	9902      	ldr	r1, [sp, #8]
   862ae:	9806      	ldr	r0, [sp, #24]
   862b0:	aa10      	add	r2, sp, #64	; 0x40
   862b2:	f7ff fa7f 	bl	857b4 <__sprint_r.part.0>
   862b6:	2800      	cmp	r0, #0
   862b8:	f47f ac41 	bne.w	85b3e <_vfiprintf_r+0x312>
   862bc:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   862c0:	e478      	b.n	85bb4 <_vfiprintf_r+0x388>
   862c2:	ac3c      	add	r4, sp, #240	; 0xf0
   862c4:	f7ff bbb4 	b.w	85a30 <_vfiprintf_r+0x204>
   862c8:	4601      	mov	r1, r0
   862ca:	f109 0908 	add.w	r9, r9, #8
   862ce:	3001      	adds	r0, #1
   862d0:	e4a6      	b.n	85c20 <_vfiprintf_r+0x3f4>
   862d2:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   862d6:	f040 811d 	bne.w	86514 <_vfiprintf_r+0xce8>
   862da:	9b05      	ldr	r3, [sp, #20]
   862dc:	f853 6b04 	ldr.w	r6, [r3], #4
   862e0:	9305      	str	r3, [sp, #20]
   862e2:	f7ff bbe5 	b.w	85ab0 <_vfiprintf_r+0x284>
   862e6:	05aa      	lsls	r2, r5, #22
   862e8:	f100 810e 	bmi.w	86508 <_vfiprintf_r+0xcdc>
   862ec:	ea4f 78e3 	mov.w	r8, r3, asr #31
   862f0:	461e      	mov	r6, r3
   862f2:	4643      	mov	r3, r8
   862f4:	f7ff bb82 	b.w	859fc <_vfiprintf_r+0x1d0>
   862f8:	f41a 7800 	ands.w	r8, sl, #512	; 0x200
   862fc:	f040 80fb 	bne.w	864f6 <_vfiprintf_r+0xcca>
   86300:	9a05      	ldr	r2, [sp, #20]
   86302:	2301      	movs	r3, #1
   86304:	f852 6b04 	ldr.w	r6, [r2], #4
   86308:	9205      	str	r2, [sp, #20]
   8630a:	f7ff bbd4 	b.w	85ab6 <_vfiprintf_r+0x28a>
   8630e:	e9dd 1604 	ldrd	r1, r6, [sp, #16]
   86312:	f856 2b04 	ldr.w	r2, [r6], #4
   86316:	17cb      	asrs	r3, r1, #31
   86318:	e9c2 1300 	strd	r1, r3, [r2]
   8631c:	9605      	str	r6, [sp, #20]
   8631e:	f7ff babe 	b.w	8589e <_vfiprintf_r+0x72>
   86322:	2202      	movs	r2, #2
   86324:	ab0f      	add	r3, sp, #60	; 0x3c
   86326:	9313      	str	r3, [sp, #76]	; 0x4c
   86328:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   8632c:	9214      	str	r2, [sp, #80]	; 0x50
   8632e:	e6c7      	b.n	860c0 <_vfiprintf_r+0x894>
   86330:	4a25      	ldr	r2, [pc, #148]	; (863c8 <_vfiprintf_r+0xb9c>)
   86332:	9209      	str	r2, [sp, #36]	; 0x24
   86334:	f015 0820 	ands.w	r8, r5, #32
   86338:	d036      	beq.n	863a8 <_vfiprintf_r+0xb7c>
   8633a:	9e05      	ldr	r6, [sp, #20]
   8633c:	3607      	adds	r6, #7
   8633e:	f026 0607 	bic.w	r6, r6, #7
   86342:	4632      	mov	r2, r6
   86344:	f8d6 8004 	ldr.w	r8, [r6, #4]
   86348:	f852 6b08 	ldr.w	r6, [r2], #8
   8634c:	9205      	str	r2, [sp, #20]
   8634e:	07ea      	lsls	r2, r5, #31
   86350:	d509      	bpl.n	86366 <_vfiprintf_r+0xb3a>
   86352:	ea56 0208 	orrs.w	r2, r6, r8
   86356:	d006      	beq.n	86366 <_vfiprintf_r+0xb3a>
   86358:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
   8635c:	2330      	movs	r3, #48	; 0x30
   8635e:	f045 0502 	orr.w	r5, r5, #2
   86362:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
   86366:	2302      	movs	r3, #2
   86368:	f425 6a80 	bic.w	sl, r5, #1024	; 0x400
   8636c:	f7ff bba3 	b.w	85ab6 <_vfiprintf_r+0x28a>
   86370:	46aa      	mov	sl, r5
   86372:	e4ff      	b.n	85d74 <_vfiprintf_r+0x548>
   86374:	4a15      	ldr	r2, [pc, #84]	; (863cc <_vfiprintf_r+0xba0>)
   86376:	9209      	str	r2, [sp, #36]	; 0x24
   86378:	e7dc      	b.n	86334 <_vfiprintf_r+0xb08>
   8637a:	4620      	mov	r0, r4
   8637c:	9605      	str	r6, [sp, #20]
   8637e:	f7fd fc65 	bl	83c4c <strlen>
   86382:	f04f 0b00 	mov.w	fp, #0
   86386:	9001      	str	r0, [sp, #4]
   86388:	f7ff bb52 	b.w	85a30 <_vfiprintf_r+0x204>
   8638c:	f89d 103b 	ldrb.w	r1, [sp, #59]	; 0x3b
   86390:	2900      	cmp	r1, #0
   86392:	f000 80a6 	beq.w	864e2 <_vfiprintf_r+0xcb6>
   86396:	2001      	movs	r0, #1
   86398:	f10d 023b 	add.w	r2, sp, #59	; 0x3b
   8639c:	9213      	str	r2, [sp, #76]	; 0x4c
   8639e:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   863a2:	4602      	mov	r2, r0
   863a4:	9014      	str	r0, [sp, #80]	; 0x50
   863a6:	e416      	b.n	85bd6 <_vfiprintf_r+0x3aa>
   863a8:	f015 0210 	ands.w	r2, r5, #16
   863ac:	d114      	bne.n	863d8 <_vfiprintf_r+0xbac>
   863ae:	f015 0140 	ands.w	r1, r5, #64	; 0x40
   863b2:	d00d      	beq.n	863d0 <_vfiprintf_r+0xba4>
   863b4:	9e05      	ldr	r6, [sp, #20]
   863b6:	4690      	mov	r8, r2
   863b8:	f856 2b04 	ldr.w	r2, [r6], #4
   863bc:	9605      	str	r6, [sp, #20]
   863be:	b296      	uxth	r6, r2
   863c0:	e7c5      	b.n	8634e <_vfiprintf_r+0xb22>
   863c2:	bf00      	nop
   863c4:	0008a958 	.word	0x0008a958
   863c8:	0008a918 	.word	0x0008a918
   863cc:	0008a904 	.word	0x0008a904
   863d0:	f415 7800 	ands.w	r8, r5, #512	; 0x200
   863d4:	f040 80a6 	bne.w	86524 <_vfiprintf_r+0xcf8>
   863d8:	9a05      	ldr	r2, [sp, #20]
   863da:	f852 6b04 	ldr.w	r6, [r2], #4
   863de:	9205      	str	r2, [sp, #20]
   863e0:	e7b5      	b.n	8634e <_vfiprintf_r+0xb22>
   863e2:	2300      	movs	r3, #0
   863e4:	f40a 6280 	and.w	r2, sl, #1024	; 0x400
   863e8:	f8cd b004 	str.w	fp, [sp, #4]
   863ec:	f8cd a01c 	str.w	sl, [sp, #28]
   863f0:	46bb      	mov	fp, r7
   863f2:	f8cd 9020 	str.w	r9, [sp, #32]
   863f6:	469a      	mov	sl, r3
   863f8:	4617      	mov	r7, r2
   863fa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   863fe:	ad3c      	add	r5, sp, #240	; 0xf0
   86400:	e00c      	b.n	8641c <_vfiprintf_r+0xbf0>
   86402:	2300      	movs	r3, #0
   86404:	4630      	mov	r0, r6
   86406:	4641      	mov	r1, r8
   86408:	220a      	movs	r2, #10
   8640a:	f004 f85d 	bl	8a4c8 <__aeabi_uldivmod>
   8640e:	2e0a      	cmp	r6, #10
   86410:	f178 0300 	sbcs.w	r3, r8, #0
   86414:	d31b      	bcc.n	8644e <_vfiprintf_r+0xc22>
   86416:	4606      	mov	r6, r0
   86418:	4688      	mov	r8, r1
   8641a:	4625      	mov	r5, r4
   8641c:	4630      	mov	r0, r6
   8641e:	4641      	mov	r1, r8
   86420:	220a      	movs	r2, #10
   86422:	2300      	movs	r3, #0
   86424:	f004 f850 	bl	8a4c8 <__aeabi_uldivmod>
   86428:	3230      	adds	r2, #48	; 0x30
   8642a:	1e6c      	subs	r4, r5, #1
   8642c:	f10a 0a01 	add.w	sl, sl, #1
   86430:	f805 2c01 	strb.w	r2, [r5, #-1]
   86434:	2f00      	cmp	r7, #0
   86436:	d0e4      	beq.n	86402 <_vfiprintf_r+0xbd6>
   86438:	f899 3000 	ldrb.w	r3, [r9]
   8643c:	4553      	cmp	r3, sl
   8643e:	d1e0      	bne.n	86402 <_vfiprintf_r+0xbd6>
   86440:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
   86444:	d0dd      	beq.n	86402 <_vfiprintf_r+0xbd6>
   86446:	2e0a      	cmp	r6, #10
   86448:	f178 0300 	sbcs.w	r3, r8, #0
   8644c:	d22e      	bcs.n	864ac <_vfiprintf_r+0xc80>
   8644e:	f8dd a01c 	ldr.w	sl, [sp, #28]
   86452:	ab3c      	add	r3, sp, #240	; 0xf0
   86454:	1b1b      	subs	r3, r3, r4
   86456:	465f      	mov	r7, fp
   86458:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   8645c:	f8dd b004 	ldr.w	fp, [sp, #4]
   86460:	4655      	mov	r5, sl
   86462:	f8dd 9020 	ldr.w	r9, [sp, #32]
   86466:	9301      	str	r3, [sp, #4]
   86468:	f7ff bae2 	b.w	85a30 <_vfiprintf_r+0x204>
   8646c:	46aa      	mov	sl, r5
   8646e:	f7ff bad2 	b.w	85a16 <_vfiprintf_r+0x1ea>
   86472:	2b01      	cmp	r3, #1
   86474:	46aa      	mov	sl, r5
   86476:	f47f ad06 	bne.w	85e86 <_vfiprintf_r+0x65a>
   8647a:	f7ff bad1 	b.w	85a20 <_vfiprintf_r+0x1f4>
   8647e:	9e05      	ldr	r6, [sp, #20]
   86480:	9a04      	ldr	r2, [sp, #16]
   86482:	f856 3b04 	ldr.w	r3, [r6], #4
   86486:	601a      	str	r2, [r3, #0]
   86488:	9605      	str	r6, [sp, #20]
   8648a:	f7ff ba08 	b.w	8589e <_vfiprintf_r+0x72>
   8648e:	f1bb 0f06 	cmp.w	fp, #6
   86492:	46d8      	mov	r8, fp
   86494:	bf28      	it	cs
   86496:	f04f 0806 	movcs.w	r8, #6
   8649a:	4c47      	ldr	r4, [pc, #284]	; (865b8 <_vfiprintf_r+0xd8c>)
   8649c:	f8cd 8004 	str.w	r8, [sp, #4]
   864a0:	9605      	str	r6, [sp, #20]
   864a2:	f7ff bb75 	b.w	85b90 <_vfiprintf_r+0x364>
   864a6:	f8df a114 	ldr.w	sl, [pc, #276]	; 865bc <_vfiprintf_r+0xd90>
   864aa:	e5c9      	b.n	86040 <_vfiprintf_r+0x814>
   864ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   864ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
   864b0:	1ae4      	subs	r4, r4, r3
   864b2:	461a      	mov	r2, r3
   864b4:	4620      	mov	r0, r4
   864b6:	f7fd fbf7 	bl	83ca8 <strncpy>
   864ba:	f899 3001 	ldrb.w	r3, [r9, #1]
   864be:	b10b      	cbz	r3, 864c4 <_vfiprintf_r+0xc98>
   864c0:	f109 0901 	add.w	r9, r9, #1
   864c4:	4630      	mov	r0, r6
   864c6:	4641      	mov	r1, r8
   864c8:	220a      	movs	r2, #10
   864ca:	2300      	movs	r3, #0
   864cc:	f04f 0a00 	mov.w	sl, #0
   864d0:	f003 fffa 	bl	8a4c8 <__aeabi_uldivmod>
   864d4:	e79f      	b.n	86416 <_vfiprintf_r+0xbea>
   864d6:	2001      	movs	r0, #1
   864d8:	4611      	mov	r1, r2
   864da:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   864de:	f7ff bb9f 	b.w	85c20 <_vfiprintf_r+0x3f4>
   864e2:	9b07      	ldr	r3, [sp, #28]
   864e4:	2b00      	cmp	r3, #0
   864e6:	f47f ade3 	bne.w	860b0 <_vfiprintf_r+0x884>
   864ea:	4611      	mov	r1, r2
   864ec:	2001      	movs	r0, #1
   864ee:	f10d 094c 	add.w	r9, sp, #76	; 0x4c
   864f2:	f7ff bb95 	b.w	85c20 <_vfiprintf_r+0x3f4>
   864f6:	9e05      	ldr	r6, [sp, #20]
   864f8:	4690      	mov	r8, r2
   864fa:	f856 2b04 	ldr.w	r2, [r6], #4
   864fe:	2301      	movs	r3, #1
   86500:	9605      	str	r6, [sp, #20]
   86502:	b2d6      	uxtb	r6, r2
   86504:	f7ff bad7 	b.w	85ab6 <_vfiprintf_r+0x28a>
   86508:	f343 18c0 	sbfx	r8, r3, #7, #1
   8650c:	b25e      	sxtb	r6, r3
   8650e:	4643      	mov	r3, r8
   86510:	f7ff ba74 	b.w	859fc <_vfiprintf_r+0x1d0>
   86514:	9e05      	ldr	r6, [sp, #20]
   86516:	4690      	mov	r8, r2
   86518:	f856 3b04 	ldr.w	r3, [r6], #4
   8651c:	9605      	str	r6, [sp, #20]
   8651e:	b2de      	uxtb	r6, r3
   86520:	f7ff bac6 	b.w	85ab0 <_vfiprintf_r+0x284>
   86524:	9e05      	ldr	r6, [sp, #20]
   86526:	4688      	mov	r8, r1
   86528:	f856 2b04 	ldr.w	r2, [r6], #4
   8652c:	9605      	str	r6, [sp, #20]
   8652e:	b2d6      	uxtb	r6, r2
   86530:	e70d      	b.n	8634e <_vfiprintf_r+0xb22>
   86532:	9e05      	ldr	r6, [sp, #20]
   86534:	9a04      	ldr	r2, [sp, #16]
   86536:	f856 3b04 	ldr.w	r3, [r6], #4
   8653a:	801a      	strh	r2, [r3, #0]
   8653c:	9605      	str	r6, [sp, #20]
   8653e:	f7ff b9ae 	b.w	8589e <_vfiprintf_r+0x72>
   86542:	6d88      	ldr	r0, [r1, #88]	; 0x58
   86544:	f001 fde4 	bl	88110 <__retarget_lock_release_recursive>
   86548:	f7ff ba99 	b.w	85a7e <_vfiprintf_r+0x252>
   8654c:	f8cd b004 	str.w	fp, [sp, #4]
   86550:	9605      	str	r6, [sp, #20]
   86552:	4683      	mov	fp, r0
   86554:	f7ff ba6c 	b.w	85a30 <_vfiprintf_r+0x204>
   86558:	9911      	ldr	r1, [sp, #68]	; 0x44
   8655a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8655c:	f8df a060 	ldr.w	sl, [pc, #96]	; 865c0 <_vfiprintf_r+0xd94>
   86560:	3101      	adds	r1, #1
   86562:	e5f0      	b.n	86146 <_vfiprintf_r+0x91a>
   86564:	9902      	ldr	r1, [sp, #8]
   86566:	9806      	ldr	r0, [sp, #24]
   86568:	aa10      	add	r2, sp, #64	; 0x40
   8656a:	f7ff f923 	bl	857b4 <__sprint_r.part.0>
   8656e:	2800      	cmp	r0, #0
   86570:	f43f aae3 	beq.w	85b3a <_vfiprintf_r+0x30e>
   86574:	f7ff bae3 	b.w	85b3e <_vfiprintf_r+0x312>
   86578:	9811      	ldr	r0, [sp, #68]	; 0x44
   8657a:	f8df a044 	ldr.w	sl, [pc, #68]	; 865c0 <_vfiprintf_r+0xd94>
   8657e:	3001      	adds	r0, #1
   86580:	e631      	b.n	861e6 <_vfiprintf_r+0x9ba>
   86582:	9b02      	ldr	r3, [sp, #8]
   86584:	6e5b      	ldr	r3, [r3, #100]	; 0x64
   86586:	07db      	lsls	r3, r3, #31
   86588:	d407      	bmi.n	8659a <_vfiprintf_r+0xd6e>
   8658a:	9b02      	ldr	r3, [sp, #8]
   8658c:	899b      	ldrh	r3, [r3, #12]
   8658e:	059f      	lsls	r7, r3, #22
   86590:	d403      	bmi.n	8659a <_vfiprintf_r+0xd6e>
   86592:	9b02      	ldr	r3, [sp, #8]
   86594:	6d98      	ldr	r0, [r3, #88]	; 0x58
   86596:	f001 fdbb 	bl	88110 <__retarget_lock_release_recursive>
   8659a:	f04f 33ff 	mov.w	r3, #4294967295
   8659e:	9304      	str	r3, [sp, #16]
   865a0:	f7ff bad6 	b.w	85b50 <_vfiprintf_r+0x324>
   865a4:	9a05      	ldr	r2, [sp, #20]
   865a6:	787b      	ldrb	r3, [r7, #1]
   865a8:	460f      	mov	r7, r1
   865aa:	f852 1b04 	ldr.w	r1, [r2], #4
   865ae:	9205      	str	r2, [sp, #20]
   865b0:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
   865b4:	f7ff b993 	b.w	858de <_vfiprintf_r+0xb2>
   865b8:	0008a92c 	.word	0x0008a92c
   865bc:	0008a968 	.word	0x0008a968
   865c0:	0008a958 	.word	0x0008a958

000865c4 <__sbprintf>:
   865c4:	b5f0      	push	{r4, r5, r6, r7, lr}
   865c6:	f44f 6c80 	mov.w	ip, #1024	; 0x400
   865ca:	4615      	mov	r5, r2
   865cc:	2400      	movs	r4, #0
   865ce:	4606      	mov	r6, r0
   865d0:	461f      	mov	r7, r3
   865d2:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
   865d6:	ab1a      	add	r3, sp, #104	; 0x68
   865d8:	9300      	str	r3, [sp, #0]
   865da:	9304      	str	r3, [sp, #16]
   865dc:	898b      	ldrh	r3, [r1, #12]
   865de:	a816      	add	r0, sp, #88	; 0x58
   865e0:	f023 0302 	bic.w	r3, r3, #2
   865e4:	f8ad 300c 	strh.w	r3, [sp, #12]
   865e8:	6e4b      	ldr	r3, [r1, #100]	; 0x64
   865ea:	9406      	str	r4, [sp, #24]
   865ec:	9319      	str	r3, [sp, #100]	; 0x64
   865ee:	89cb      	ldrh	r3, [r1, #14]
   865f0:	460c      	mov	r4, r1
   865f2:	f8ad 300e 	strh.w	r3, [sp, #14]
   865f6:	69cb      	ldr	r3, [r1, #28]
   865f8:	f8cd c008 	str.w	ip, [sp, #8]
   865fc:	9307      	str	r3, [sp, #28]
   865fe:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   86600:	f8cd c014 	str.w	ip, [sp, #20]
   86604:	9309      	str	r3, [sp, #36]	; 0x24
   86606:	f001 fd7d 	bl	88104 <__retarget_lock_init_recursive>
   8660a:	462a      	mov	r2, r5
   8660c:	463b      	mov	r3, r7
   8660e:	4669      	mov	r1, sp
   86610:	4630      	mov	r0, r6
   86612:	f7ff f90b 	bl	8582c <_vfiprintf_r>
   86616:	1e05      	subs	r5, r0, #0
   86618:	db07      	blt.n	8662a <__sbprintf+0x66>
   8661a:	4669      	mov	r1, sp
   8661c:	4630      	mov	r0, r6
   8661e:	f001 f91b 	bl	87858 <_fflush_r>
   86622:	2800      	cmp	r0, #0
   86624:	bf18      	it	ne
   86626:	f04f 35ff 	movne.w	r5, #4294967295
   8662a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
   8662e:	065b      	lsls	r3, r3, #25
   86630:	d503      	bpl.n	8663a <__sbprintf+0x76>
   86632:	89a3      	ldrh	r3, [r4, #12]
   86634:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86638:	81a3      	strh	r3, [r4, #12]
   8663a:	9816      	ldr	r0, [sp, #88]	; 0x58
   8663c:	f001 fd64 	bl	88108 <__retarget_lock_close_recursive>
   86640:	4628      	mov	r0, r5
   86642:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
   86646:	bdf0      	pop	{r4, r5, r6, r7, pc}

00086648 <__swsetup_r>:
   86648:	b538      	push	{r3, r4, r5, lr}
   8664a:	4b33      	ldr	r3, [pc, #204]	; (86718 <__swsetup_r+0xd0>)
   8664c:	4605      	mov	r5, r0
   8664e:	681b      	ldr	r3, [r3, #0]
   86650:	460c      	mov	r4, r1
   86652:	b10b      	cbz	r3, 86658 <__swsetup_r+0x10>
   86654:	6b9a      	ldr	r2, [r3, #56]	; 0x38
   86656:	b312      	cbz	r2, 8669e <__swsetup_r+0x56>
   86658:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8665c:	0718      	lsls	r0, r3, #28
   8665e:	b29a      	uxth	r2, r3
   86660:	d525      	bpl.n	866ae <__swsetup_r+0x66>
   86662:	6921      	ldr	r1, [r4, #16]
   86664:	2900      	cmp	r1, #0
   86666:	d02d      	beq.n	866c4 <__swsetup_r+0x7c>
   86668:	f012 0001 	ands.w	r0, r2, #1
   8666c:	d007      	beq.n	8667e <__swsetup_r+0x36>
   8666e:	2500      	movs	r5, #0
   86670:	6960      	ldr	r0, [r4, #20]
   86672:	60a5      	str	r5, [r4, #8]
   86674:	4240      	negs	r0, r0
   86676:	61a0      	str	r0, [r4, #24]
   86678:	b139      	cbz	r1, 8668a <__swsetup_r+0x42>
   8667a:	2000      	movs	r0, #0
   8667c:	bd38      	pop	{r3, r4, r5, pc}
   8667e:	0795      	lsls	r5, r2, #30
   86680:	bf58      	it	pl
   86682:	6960      	ldrpl	r0, [r4, #20]
   86684:	60a0      	str	r0, [r4, #8]
   86686:	2900      	cmp	r1, #0
   86688:	d1f7      	bne.n	8667a <__swsetup_r+0x32>
   8668a:	0612      	lsls	r2, r2, #24
   8668c:	bf58      	it	pl
   8668e:	4608      	movpl	r0, r1
   86690:	d5f4      	bpl.n	8667c <__swsetup_r+0x34>
   86692:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   86696:	f04f 30ff 	mov.w	r0, #4294967295
   8669a:	81a3      	strh	r3, [r4, #12]
   8669c:	bd38      	pop	{r3, r4, r5, pc}
   8669e:	4618      	mov	r0, r3
   866a0:	f001 f90e 	bl	878c0 <__sinit>
   866a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   866a8:	0718      	lsls	r0, r3, #28
   866aa:	b29a      	uxth	r2, r3
   866ac:	d4d9      	bmi.n	86662 <__swsetup_r+0x1a>
   866ae:	06d1      	lsls	r1, r2, #27
   866b0:	d52a      	bpl.n	86708 <__swsetup_r+0xc0>
   866b2:	0752      	lsls	r2, r2, #29
   866b4:	d414      	bmi.n	866e0 <__swsetup_r+0x98>
   866b6:	6921      	ldr	r1, [r4, #16]
   866b8:	f043 0308 	orr.w	r3, r3, #8
   866bc:	81a3      	strh	r3, [r4, #12]
   866be:	b29a      	uxth	r2, r3
   866c0:	2900      	cmp	r1, #0
   866c2:	d1d1      	bne.n	86668 <__swsetup_r+0x20>
   866c4:	f402 7020 	and.w	r0, r2, #640	; 0x280
   866c8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
   866cc:	d0cc      	beq.n	86668 <__swsetup_r+0x20>
   866ce:	4621      	mov	r1, r4
   866d0:	4628      	mov	r0, r5
   866d2:	f001 fd1f 	bl	88114 <__smakebuf_r>
   866d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   866da:	6921      	ldr	r1, [r4, #16]
   866dc:	b29a      	uxth	r2, r3
   866de:	e7c3      	b.n	86668 <__swsetup_r+0x20>
   866e0:	6b21      	ldr	r1, [r4, #48]	; 0x30
   866e2:	b151      	cbz	r1, 866fa <__swsetup_r+0xb2>
   866e4:	f104 0240 	add.w	r2, r4, #64	; 0x40
   866e8:	4291      	cmp	r1, r2
   866ea:	d004      	beq.n	866f6 <__swsetup_r+0xae>
   866ec:	4628      	mov	r0, r5
   866ee:	f001 fa63 	bl	87bb8 <_free_r>
   866f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   866f6:	2200      	movs	r2, #0
   866f8:	6322      	str	r2, [r4, #48]	; 0x30
   866fa:	2200      	movs	r2, #0
   866fc:	6921      	ldr	r1, [r4, #16]
   866fe:	f023 0324 	bic.w	r3, r3, #36	; 0x24
   86702:	e9c4 1200 	strd	r1, r2, [r4]
   86706:	e7d7      	b.n	866b8 <__swsetup_r+0x70>
   86708:	2209      	movs	r2, #9
   8670a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8670e:	602a      	str	r2, [r5, #0]
   86710:	f04f 30ff 	mov.w	r0, #4294967295
   86714:	81a3      	strh	r3, [r4, #12]
   86716:	bd38      	pop	{r3, r4, r5, pc}
   86718:	200003fc 	.word	0x200003fc

0008671c <register_fini>:
   8671c:	4b02      	ldr	r3, [pc, #8]	; (86728 <register_fini+0xc>)
   8671e:	b113      	cbz	r3, 86726 <register_fini+0xa>
   86720:	4802      	ldr	r0, [pc, #8]	; (8672c <register_fini+0x10>)
   86722:	f000 b805 	b.w	86730 <atexit>
   86726:	4770      	bx	lr
   86728:	00000000 	.word	0x00000000
   8672c:	000879e5 	.word	0x000879e5

00086730 <atexit>:
   86730:	2300      	movs	r3, #0
   86732:	4601      	mov	r1, r0
   86734:	461a      	mov	r2, r3
   86736:	4618      	mov	r0, r3
   86738:	f003 b860 	b.w	897fc <__register_exitproc>

0008673c <quorem>:
   8673c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86740:	6903      	ldr	r3, [r0, #16]
   86742:	690c      	ldr	r4, [r1, #16]
   86744:	b085      	sub	sp, #20
   86746:	42a3      	cmp	r3, r4
   86748:	f2c0 8089 	blt.w	8685e <quorem+0x122>
   8674c:	3c01      	subs	r4, #1
   8674e:	f101 0514 	add.w	r5, r1, #20
   86752:	00a3      	lsls	r3, r4, #2
   86754:	f100 0814 	add.w	r8, r0, #20
   86758:	9301      	str	r3, [sp, #4]
   8675a:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
   8675e:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86762:	3301      	adds	r3, #1
   86764:	468a      	mov	sl, r1
   86766:	429a      	cmp	r2, r3
   86768:	eb08 0184 	add.w	r1, r8, r4, lsl #2
   8676c:	4681      	mov	r9, r0
   8676e:	fbb2 f6f3 	udiv	r6, r2, r3
   86772:	eb05 0784 	add.w	r7, r5, r4, lsl #2
   86776:	9102      	str	r1, [sp, #8]
   86778:	d33a      	bcc.n	867f0 <quorem+0xb4>
   8677a:	2100      	movs	r1, #0
   8677c:	46ae      	mov	lr, r5
   8677e:	4640      	mov	r0, r8
   86780:	460a      	mov	r2, r1
   86782:	46a3      	mov	fp, r4
   86784:	9503      	str	r5, [sp, #12]
   86786:	f85e 5b04 	ldr.w	r5, [lr], #4
   8678a:	6804      	ldr	r4, [r0, #0]
   8678c:	b2ab      	uxth	r3, r5
   8678e:	fb06 1303 	mla	r3, r6, r3, r1
   86792:	0c2d      	lsrs	r5, r5, #16
   86794:	0c19      	lsrs	r1, r3, #16
   86796:	fb06 1105 	mla	r1, r6, r5, r1
   8679a:	b29b      	uxth	r3, r3
   8679c:	1ad2      	subs	r2, r2, r3
   8679e:	fa1f fc84 	uxth.w	ip, r4
   867a2:	4494      	add	ip, r2
   867a4:	b28a      	uxth	r2, r1
   867a6:	ebc2 4214 	rsb	r2, r2, r4, lsr #16
   867aa:	eb02 422c 	add.w	r2, r2, ip, asr #16
   867ae:	fa1f fc8c 	uxth.w	ip, ip
   867b2:	ea4c 4302 	orr.w	r3, ip, r2, lsl #16
   867b6:	4577      	cmp	r7, lr
   867b8:	f840 3b04 	str.w	r3, [r0], #4
   867bc:	ea4f 4111 	mov.w	r1, r1, lsr #16
   867c0:	ea4f 4222 	mov.w	r2, r2, asr #16
   867c4:	d2df      	bcs.n	86786 <quorem+0x4a>
   867c6:	9b01      	ldr	r3, [sp, #4]
   867c8:	465c      	mov	r4, fp
   867ca:	f858 3003 	ldr.w	r3, [r8, r3]
   867ce:	9d03      	ldr	r5, [sp, #12]
   867d0:	b973      	cbnz	r3, 867f0 <quorem+0xb4>
   867d2:	9b02      	ldr	r3, [sp, #8]
   867d4:	3b04      	subs	r3, #4
   867d6:	4598      	cmp	r8, r3
   867d8:	d304      	bcc.n	867e4 <quorem+0xa8>
   867da:	e007      	b.n	867ec <quorem+0xb0>
   867dc:	4598      	cmp	r8, r3
   867de:	f104 34ff 	add.w	r4, r4, #4294967295
   867e2:	d203      	bcs.n	867ec <quorem+0xb0>
   867e4:	f853 2904 	ldr.w	r2, [r3], #-4
   867e8:	2a00      	cmp	r2, #0
   867ea:	d0f7      	beq.n	867dc <quorem+0xa0>
   867ec:	f8c9 4010 	str.w	r4, [r9, #16]
   867f0:	4651      	mov	r1, sl
   867f2:	4648      	mov	r0, r9
   867f4:	f002 fb44 	bl	88e80 <__mcmp>
   867f8:	2800      	cmp	r0, #0
   867fa:	db2c      	blt.n	86856 <quorem+0x11a>
   867fc:	4640      	mov	r0, r8
   867fe:	2300      	movs	r3, #0
   86800:	3601      	adds	r6, #1
   86802:	f855 1b04 	ldr.w	r1, [r5], #4
   86806:	f8d0 c000 	ldr.w	ip, [r0]
   8680a:	b28a      	uxth	r2, r1
   8680c:	1a9a      	subs	r2, r3, r2
   8680e:	fa1f fe8c 	uxth.w	lr, ip
   86812:	0c0b      	lsrs	r3, r1, #16
   86814:	4472      	add	r2, lr
   86816:	ebc3 431c 	rsb	r3, r3, ip, lsr #16
   8681a:	eb03 4322 	add.w	r3, r3, r2, asr #16
   8681e:	b292      	uxth	r2, r2
   86820:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86824:	42af      	cmp	r7, r5
   86826:	f840 2b04 	str.w	r2, [r0], #4
   8682a:	ea4f 4323 	mov.w	r3, r3, asr #16
   8682e:	d2e8      	bcs.n	86802 <quorem+0xc6>
   86830:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
   86834:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   86838:	b96a      	cbnz	r2, 86856 <quorem+0x11a>
   8683a:	3b04      	subs	r3, #4
   8683c:	4598      	cmp	r8, r3
   8683e:	d304      	bcc.n	8684a <quorem+0x10e>
   86840:	e007      	b.n	86852 <quorem+0x116>
   86842:	4598      	cmp	r8, r3
   86844:	f104 34ff 	add.w	r4, r4, #4294967295
   86848:	d203      	bcs.n	86852 <quorem+0x116>
   8684a:	f853 2904 	ldr.w	r2, [r3], #-4
   8684e:	2a00      	cmp	r2, #0
   86850:	d0f7      	beq.n	86842 <quorem+0x106>
   86852:	f8c9 4010 	str.w	r4, [r9, #16]
   86856:	4630      	mov	r0, r6
   86858:	b005      	add	sp, #20
   8685a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8685e:	2000      	movs	r0, #0
   86860:	b005      	add	sp, #20
   86862:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86866:	bf00      	nop

00086868 <_dtoa_r>:
   86868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8686c:	4690      	mov	r8, r2
   8686e:	4699      	mov	r9, r3
   86870:	6c01      	ldr	r1, [r0, #64]	; 0x40
   86872:	b099      	sub	sp, #100	; 0x64
   86874:	4604      	mov	r4, r0
   86876:	e9cd 8904 	strd	r8, r9, [sp, #16]
   8687a:	9d25      	ldr	r5, [sp, #148]	; 0x94
   8687c:	b141      	cbz	r1, 86890 <_dtoa_r+0x28>
   8687e:	2301      	movs	r3, #1
   86880:	6c42      	ldr	r2, [r0, #68]	; 0x44
   86882:	4093      	lsls	r3, r2
   86884:	608b      	str	r3, [r1, #8]
   86886:	604a      	str	r2, [r1, #4]
   86888:	f002 f8a4 	bl	889d4 <_Bfree>
   8688c:	2300      	movs	r3, #0
   8688e:	6423      	str	r3, [r4, #64]	; 0x40
   86890:	f1b9 0a00 	subs.w	sl, r9, #0
   86894:	bfb4      	ite	lt
   86896:	2301      	movlt	r3, #1
   86898:	2300      	movge	r3, #0
   8689a:	602b      	str	r3, [r5, #0]
   8689c:	4b76      	ldr	r3, [pc, #472]	; (86a78 <_dtoa_r+0x210>)
   8689e:	bfbc      	itt	lt
   868a0:	f02a 4a00 	biclt.w	sl, sl, #2147483648	; 0x80000000
   868a4:	f8cd a014 	strlt.w	sl, [sp, #20]
   868a8:	ea33 030a 	bics.w	r3, r3, sl
   868ac:	f000 80aa 	beq.w	86a04 <_dtoa_r+0x19c>
   868b0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   868b4:	4610      	mov	r0, r2
   868b6:	4619      	mov	r1, r3
   868b8:	2200      	movs	r2, #0
   868ba:	2300      	movs	r3, #0
   868bc:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
   868c0:	f003 fd92 	bl	8a3e8 <__aeabi_dcmpeq>
   868c4:	4607      	mov	r7, r0
   868c6:	b170      	cbz	r0, 868e6 <_dtoa_r+0x7e>
   868c8:	2301      	movs	r3, #1
   868ca:	9a24      	ldr	r2, [sp, #144]	; 0x90
   868cc:	6013      	str	r3, [r2, #0]
   868ce:	9b26      	ldr	r3, [sp, #152]	; 0x98
   868d0:	2b00      	cmp	r3, #0
   868d2:	f000 82e6 	beq.w	86ea2 <_dtoa_r+0x63a>
   868d6:	4869      	ldr	r0, [pc, #420]	; (86a7c <_dtoa_r+0x214>)
   868d8:	6018      	str	r0, [r3, #0]
   868da:	1e43      	subs	r3, r0, #1
   868dc:	9303      	str	r3, [sp, #12]
   868de:	9803      	ldr	r0, [sp, #12]
   868e0:	b019      	add	sp, #100	; 0x64
   868e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   868e6:	ab16      	add	r3, sp, #88	; 0x58
   868e8:	9301      	str	r3, [sp, #4]
   868ea:	ab17      	add	r3, sp, #92	; 0x5c
   868ec:	9300      	str	r3, [sp, #0]
   868ee:	4620      	mov	r0, r4
   868f0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   868f4:	f002 fb8a 	bl	8900c <__d2b>
   868f8:	ea5f 561a 	movs.w	r6, sl, lsr #20
   868fc:	4605      	mov	r5, r0
   868fe:	f040 8097 	bne.w	86a30 <_dtoa_r+0x1c8>
   86902:	e9dd 7616 	ldrd	r7, r6, [sp, #88]	; 0x58
   86906:	443e      	add	r6, r7
   86908:	f206 4032 	addw	r0, r6, #1074	; 0x432
   8690c:	2820      	cmp	r0, #32
   8690e:	f340 83b7 	ble.w	87080 <_dtoa_r+0x818>
   86912:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
   86916:	fa0a fa00 	lsl.w	sl, sl, r0
   8691a:	f206 4012 	addw	r0, r6, #1042	; 0x412
   8691e:	fa28 f000 	lsr.w	r0, r8, r0
   86922:	ea4a 0000 	orr.w	r0, sl, r0
   86926:	f003 fa7d 	bl	89e24 <__aeabi_ui2d>
   8692a:	2301      	movs	r3, #1
   8692c:	3e01      	subs	r6, #1
   8692e:	930f      	str	r3, [sp, #60]	; 0x3c
   86930:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   86934:	2200      	movs	r2, #0
   86936:	4b52      	ldr	r3, [pc, #328]	; (86a80 <_dtoa_r+0x218>)
   86938:	f003 f936 	bl	89ba8 <__aeabi_dsub>
   8693c:	a348      	add	r3, pc, #288	; (adr r3, 86a60 <_dtoa_r+0x1f8>)
   8693e:	e9d3 2300 	ldrd	r2, r3, [r3]
   86942:	f003 fae9 	bl	89f18 <__aeabi_dmul>
   86946:	a348      	add	r3, pc, #288	; (adr r3, 86a68 <_dtoa_r+0x200>)
   86948:	e9d3 2300 	ldrd	r2, r3, [r3]
   8694c:	f003 f92e 	bl	89bac <__adddf3>
   86950:	4680      	mov	r8, r0
   86952:	4630      	mov	r0, r6
   86954:	4689      	mov	r9, r1
   86956:	f003 fa75 	bl	89e44 <__aeabi_i2d>
   8695a:	a345      	add	r3, pc, #276	; (adr r3, 86a70 <_dtoa_r+0x208>)
   8695c:	e9d3 2300 	ldrd	r2, r3, [r3]
   86960:	f003 fada 	bl	89f18 <__aeabi_dmul>
   86964:	4602      	mov	r2, r0
   86966:	460b      	mov	r3, r1
   86968:	4640      	mov	r0, r8
   8696a:	4649      	mov	r1, r9
   8696c:	f003 f91e 	bl	89bac <__adddf3>
   86970:	4680      	mov	r8, r0
   86972:	4689      	mov	r9, r1
   86974:	f003 fd80 	bl	8a478 <__aeabi_d2iz>
   86978:	2200      	movs	r2, #0
   8697a:	4683      	mov	fp, r0
   8697c:	2300      	movs	r3, #0
   8697e:	4640      	mov	r0, r8
   86980:	4649      	mov	r1, r9
   86982:	f003 fd3b 	bl	8a3fc <__aeabi_dcmplt>
   86986:	2800      	cmp	r0, #0
   86988:	f040 827e 	bne.w	86e88 <_dtoa_r+0x620>
   8698c:	f1bb 0f16 	cmp.w	fp, #22
   86990:	f200 826d 	bhi.w	86e6e <_dtoa_r+0x606>
   86994:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86998:	4b3a      	ldr	r3, [pc, #232]	; (86a84 <_dtoa_r+0x21c>)
   8699a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   8699e:	e9d3 2300 	ldrd	r2, r3, [r3]
   869a2:	f003 fd2b 	bl	8a3fc <__aeabi_dcmplt>
   869a6:	2800      	cmp	r0, #0
   869a8:	d072      	beq.n	86a90 <_dtoa_r+0x228>
   869aa:	2300      	movs	r3, #0
   869ac:	1bbe      	subs	r6, r7, r6
   869ae:	930e      	str	r3, [sp, #56]	; 0x38
   869b0:	1e73      	subs	r3, r6, #1
   869b2:	f10b 3bff 	add.w	fp, fp, #4294967295
   869b6:	9306      	str	r3, [sp, #24]
   869b8:	f100 8260 	bmi.w	86e7c <_dtoa_r+0x614>
   869bc:	2300      	movs	r3, #0
   869be:	9309      	str	r3, [sp, #36]	; 0x24
   869c0:	f1bb 0f00 	cmp.w	fp, #0
   869c4:	da6b      	bge.n	86a9e <_dtoa_r+0x236>
   869c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   869c8:	f8cd b01c 	str.w	fp, [sp, #28]
   869cc:	eba3 030b 	sub.w	r3, r3, fp
   869d0:	9309      	str	r3, [sp, #36]	; 0x24
   869d2:	f1cb 0300 	rsb	r3, fp, #0
   869d6:	930d      	str	r3, [sp, #52]	; 0x34
   869d8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   869da:	f04f 0b00 	mov.w	fp, #0
   869de:	2b09      	cmp	r3, #9
   869e0:	d866      	bhi.n	86ab0 <_dtoa_r+0x248>
   869e2:	2b05      	cmp	r3, #5
   869e4:	f340 834a 	ble.w	8707c <_dtoa_r+0x814>
   869e8:	2600      	movs	r6, #0
   869ea:	3b04      	subs	r3, #4
   869ec:	9322      	str	r3, [sp, #136]	; 0x88
   869ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
   869f0:	3b02      	subs	r3, #2
   869f2:	2b03      	cmp	r3, #3
   869f4:	f200 866c 	bhi.w	876d0 <_dtoa_r+0xe68>
   869f8:	e8df f013 	tbh	[pc, r3, lsl #1]
   869fc:	045e0461 	.word	0x045e0461
   86a00:	04380455 	.word	0x04380455
   86a04:	f242 730f 	movw	r3, #9999	; 0x270f
   86a08:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86a0a:	f3ca 0a13 	ubfx	sl, sl, #0, #20
   86a0e:	6013      	str	r3, [r2, #0]
   86a10:	ea5a 0308 	orrs.w	r3, sl, r8
   86a14:	d11a      	bne.n	86a4c <_dtoa_r+0x1e4>
   86a16:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a18:	2b00      	cmp	r3, #0
   86a1a:	f000 8668 	beq.w	876ee <_dtoa_r+0xe86>
   86a1e:	4b1a      	ldr	r3, [pc, #104]	; (86a88 <_dtoa_r+0x220>)
   86a20:	9303      	str	r3, [sp, #12]
   86a22:	3308      	adds	r3, #8
   86a24:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86a26:	9803      	ldr	r0, [sp, #12]
   86a28:	6013      	str	r3, [r2, #0]
   86a2a:	b019      	add	sp, #100	; 0x64
   86a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86a30:	e9dd 120a 	ldrd	r1, r2, [sp, #40]	; 0x28
   86a34:	f3c2 0313 	ubfx	r3, r2, #0, #20
   86a38:	4608      	mov	r0, r1
   86a3a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   86a3e:	970f      	str	r7, [sp, #60]	; 0x3c
   86a40:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
   86a44:	9f16      	ldr	r7, [sp, #88]	; 0x58
   86a46:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86a4a:	e773      	b.n	86934 <_dtoa_r+0xcc>
   86a4c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86a4e:	2b00      	cmp	r3, #0
   86a50:	f040 83ef 	bne.w	87232 <_dtoa_r+0x9ca>
   86a54:	4b0d      	ldr	r3, [pc, #52]	; (86a8c <_dtoa_r+0x224>)
   86a56:	9303      	str	r3, [sp, #12]
   86a58:	e741      	b.n	868de <_dtoa_r+0x76>
   86a5a:	bf00      	nop
   86a5c:	f3af 8000 	nop.w
   86a60:	636f4361 	.word	0x636f4361
   86a64:	3fd287a7 	.word	0x3fd287a7
   86a68:	8b60c8b3 	.word	0x8b60c8b3
   86a6c:	3fc68a28 	.word	0x3fc68a28
   86a70:	509f79fb 	.word	0x509f79fb
   86a74:	3fd34413 	.word	0x3fd34413
   86a78:	7ff00000 	.word	0x7ff00000
   86a7c:	0008a935 	.word	0x0008a935
   86a80:	3ff80000 	.word	0x3ff80000
   86a84:	0008aad8 	.word	0x0008aad8
   86a88:	0008a97c 	.word	0x0008a97c
   86a8c:	0008a978 	.word	0x0008a978
   86a90:	1bbe      	subs	r6, r7, r6
   86a92:	1e73      	subs	r3, r6, #1
   86a94:	9306      	str	r3, [sp, #24]
   86a96:	f100 848a 	bmi.w	873ae <_dtoa_r+0xb46>
   86a9a:	900e      	str	r0, [sp, #56]	; 0x38
   86a9c:	9009      	str	r0, [sp, #36]	; 0x24
   86a9e:	9b06      	ldr	r3, [sp, #24]
   86aa0:	445b      	add	r3, fp
   86aa2:	e9cd 3b06 	strd	r3, fp, [sp, #24]
   86aa6:	2300      	movs	r3, #0
   86aa8:	930d      	str	r3, [sp, #52]	; 0x34
   86aaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86aac:	2b09      	cmp	r3, #9
   86aae:	d998      	bls.n	869e2 <_dtoa_r+0x17a>
   86ab0:	2300      	movs	r3, #0
   86ab2:	9322      	str	r3, [sp, #136]	; 0x88
   86ab4:	f04f 33ff 	mov.w	r3, #4294967295
   86ab8:	2601      	movs	r6, #1
   86aba:	9308      	str	r3, [sp, #32]
   86abc:	2300      	movs	r3, #0
   86abe:	960c      	str	r6, [sp, #48]	; 0x30
   86ac0:	9323      	str	r3, [sp, #140]	; 0x8c
   86ac2:	2100      	movs	r1, #0
   86ac4:	9b08      	ldr	r3, [sp, #32]
   86ac6:	6461      	str	r1, [r4, #68]	; 0x44
   86ac8:	9312      	str	r3, [sp, #72]	; 0x48
   86aca:	4620      	mov	r0, r4
   86acc:	f001 ff5c 	bl	88988 <_Balloc>
   86ad0:	9003      	str	r0, [sp, #12]
   86ad2:	2800      	cmp	r0, #0
   86ad4:	f000 8604 	beq.w	876e0 <_dtoa_r+0xe78>
   86ad8:	9b03      	ldr	r3, [sp, #12]
   86ada:	6423      	str	r3, [r4, #64]	; 0x40
   86adc:	9b08      	ldr	r3, [sp, #32]
   86ade:	2b0e      	cmp	r3, #14
   86ae0:	f200 8114 	bhi.w	86d0c <_dtoa_r+0x4a4>
   86ae4:	2e00      	cmp	r6, #0
   86ae6:	f000 8111 	beq.w	86d0c <_dtoa_r+0x4a4>
   86aea:	9907      	ldr	r1, [sp, #28]
   86aec:	2900      	cmp	r1, #0
   86aee:	f340 8460 	ble.w	873b2 <_dtoa_r+0xb4a>
   86af2:	4baf      	ldr	r3, [pc, #700]	; (86db0 <_dtoa_r+0x548>)
   86af4:	f001 020f 	and.w	r2, r1, #15
   86af8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86afc:	460a      	mov	r2, r1
   86afe:	e9d3 6700 	ldrd	r6, r7, [r3]
   86b02:	ea4f 1821 	mov.w	r8, r1, asr #4
   86b06:	05d1      	lsls	r1, r2, #23
   86b08:	f140 8417 	bpl.w	8733a <_dtoa_r+0xad2>
   86b0c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86b10:	4ba8      	ldr	r3, [pc, #672]	; (86db4 <_dtoa_r+0x54c>)
   86b12:	f04f 0a03 	mov.w	sl, #3
   86b16:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   86b1a:	f003 fb27 	bl	8a16c <__aeabi_ddiv>
   86b1e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86b22:	f008 080f 	and.w	r8, r8, #15
   86b26:	f1b8 0f00 	cmp.w	r8, #0
   86b2a:	d013      	beq.n	86b54 <_dtoa_r+0x2ec>
   86b2c:	f8df 9284 	ldr.w	r9, [pc, #644]	; 86db4 <_dtoa_r+0x54c>
   86b30:	f018 0f01 	tst.w	r8, #1
   86b34:	d009      	beq.n	86b4a <_dtoa_r+0x2e2>
   86b36:	e9d9 2300 	ldrd	r2, r3, [r9]
   86b3a:	4630      	mov	r0, r6
   86b3c:	4639      	mov	r1, r7
   86b3e:	f003 f9eb 	bl	89f18 <__aeabi_dmul>
   86b42:	4606      	mov	r6, r0
   86b44:	460f      	mov	r7, r1
   86b46:	f10a 0a01 	add.w	sl, sl, #1
   86b4a:	ea5f 0868 	movs.w	r8, r8, asr #1
   86b4e:	f109 0908 	add.w	r9, r9, #8
   86b52:	d1ed      	bne.n	86b30 <_dtoa_r+0x2c8>
   86b54:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86b58:	4632      	mov	r2, r6
   86b5a:	463b      	mov	r3, r7
   86b5c:	f003 fb06 	bl	8a16c <__aeabi_ddiv>
   86b60:	4680      	mov	r8, r0
   86b62:	4689      	mov	r9, r1
   86b64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86b66:	b143      	cbz	r3, 86b7a <_dtoa_r+0x312>
   86b68:	2200      	movs	r2, #0
   86b6a:	4640      	mov	r0, r8
   86b6c:	4649      	mov	r1, r9
   86b6e:	4b92      	ldr	r3, [pc, #584]	; (86db8 <_dtoa_r+0x550>)
   86b70:	f003 fc44 	bl	8a3fc <__aeabi_dcmplt>
   86b74:	2800      	cmp	r0, #0
   86b76:	f040 8535 	bne.w	875e4 <_dtoa_r+0xd7c>
   86b7a:	4650      	mov	r0, sl
   86b7c:	f003 f962 	bl	89e44 <__aeabi_i2d>
   86b80:	4642      	mov	r2, r8
   86b82:	464b      	mov	r3, r9
   86b84:	f003 f9c8 	bl	89f18 <__aeabi_dmul>
   86b88:	4b8c      	ldr	r3, [pc, #560]	; (86dbc <_dtoa_r+0x554>)
   86b8a:	2200      	movs	r2, #0
   86b8c:	f003 f80e 	bl	89bac <__adddf3>
   86b90:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   86b94:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86b98:	9311      	str	r3, [sp, #68]	; 0x44
   86b9a:	9b08      	ldr	r3, [sp, #32]
   86b9c:	2b00      	cmp	r3, #0
   86b9e:	f000 8097 	beq.w	86cd0 <_dtoa_r+0x468>
   86ba2:	9b07      	ldr	r3, [sp, #28]
   86ba4:	9314      	str	r3, [sp, #80]	; 0x50
   86ba6:	9b08      	ldr	r3, [sp, #32]
   86ba8:	9313      	str	r3, [sp, #76]	; 0x4c
   86baa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86bac:	2b00      	cmp	r3, #0
   86bae:	f000 84a9 	beq.w	87504 <_dtoa_r+0xc9c>
   86bb2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86bb4:	4b7e      	ldr	r3, [pc, #504]	; (86db0 <_dtoa_r+0x548>)
   86bb6:	2000      	movs	r0, #0
   86bb8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86bbc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   86bc0:	497f      	ldr	r1, [pc, #508]	; (86dc0 <_dtoa_r+0x558>)
   86bc2:	f003 fad3 	bl	8a16c <__aeabi_ddiv>
   86bc6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86bca:	f002 ffed 	bl	89ba8 <__aeabi_dsub>
   86bce:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86bd2:	4649      	mov	r1, r9
   86bd4:	4640      	mov	r0, r8
   86bd6:	f003 fc4f 	bl	8a478 <__aeabi_d2iz>
   86bda:	4607      	mov	r7, r0
   86bdc:	f003 f932 	bl	89e44 <__aeabi_i2d>
   86be0:	4602      	mov	r2, r0
   86be2:	460b      	mov	r3, r1
   86be4:	4640      	mov	r0, r8
   86be6:	4649      	mov	r1, r9
   86be8:	f002 ffde 	bl	89ba8 <__aeabi_dsub>
   86bec:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   86bf0:	9e03      	ldr	r6, [sp, #12]
   86bf2:	3730      	adds	r7, #48	; 0x30
   86bf4:	f806 7b01 	strb.w	r7, [r6], #1
   86bf8:	4680      	mov	r8, r0
   86bfa:	4689      	mov	r9, r1
   86bfc:	f003 fbfe 	bl	8a3fc <__aeabi_dcmplt>
   86c00:	2800      	cmp	r0, #0
   86c02:	f040 852e 	bne.w	87662 <_dtoa_r+0xdfa>
   86c06:	f8cd b054 	str.w	fp, [sp, #84]	; 0x54
   86c0a:	2700      	movs	r7, #0
   86c0c:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
   86c10:	9510      	str	r5, [sp, #64]	; 0x40
   86c12:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   86c14:	9413      	str	r4, [sp, #76]	; 0x4c
   86c16:	e02a      	b.n	86c6e <_dtoa_r+0x406>
   86c18:	3701      	adds	r7, #1
   86c1a:	42af      	cmp	r7, r5
   86c1c:	f280 852e 	bge.w	8767c <_dtoa_r+0xe14>
   86c20:	4650      	mov	r0, sl
   86c22:	4659      	mov	r1, fp
   86c24:	2200      	movs	r2, #0
   86c26:	4b67      	ldr	r3, [pc, #412]	; (86dc4 <_dtoa_r+0x55c>)
   86c28:	f003 f976 	bl	89f18 <__aeabi_dmul>
   86c2c:	2200      	movs	r2, #0
   86c2e:	4b65      	ldr	r3, [pc, #404]	; (86dc4 <_dtoa_r+0x55c>)
   86c30:	4682      	mov	sl, r0
   86c32:	468b      	mov	fp, r1
   86c34:	4640      	mov	r0, r8
   86c36:	4649      	mov	r1, r9
   86c38:	f003 f96e 	bl	89f18 <__aeabi_dmul>
   86c3c:	4689      	mov	r9, r1
   86c3e:	4680      	mov	r8, r0
   86c40:	f003 fc1a 	bl	8a478 <__aeabi_d2iz>
   86c44:	4604      	mov	r4, r0
   86c46:	f003 f8fd 	bl	89e44 <__aeabi_i2d>
   86c4a:	4602      	mov	r2, r0
   86c4c:	460b      	mov	r3, r1
   86c4e:	4640      	mov	r0, r8
   86c50:	4649      	mov	r1, r9
   86c52:	f002 ffa9 	bl	89ba8 <__aeabi_dsub>
   86c56:	3430      	adds	r4, #48	; 0x30
   86c58:	4652      	mov	r2, sl
   86c5a:	465b      	mov	r3, fp
   86c5c:	f806 4b01 	strb.w	r4, [r6], #1
   86c60:	4680      	mov	r8, r0
   86c62:	4689      	mov	r9, r1
   86c64:	f003 fbca 	bl	8a3fc <__aeabi_dcmplt>
   86c68:	2800      	cmp	r0, #0
   86c6a:	f040 84f8 	bne.w	8765e <_dtoa_r+0xdf6>
   86c6e:	4642      	mov	r2, r8
   86c70:	464b      	mov	r3, r9
   86c72:	2000      	movs	r0, #0
   86c74:	4950      	ldr	r1, [pc, #320]	; (86db8 <_dtoa_r+0x550>)
   86c76:	f002 ff97 	bl	89ba8 <__aeabi_dsub>
   86c7a:	4652      	mov	r2, sl
   86c7c:	465b      	mov	r3, fp
   86c7e:	f003 fbbd 	bl	8a3fc <__aeabi_dcmplt>
   86c82:	2800      	cmp	r0, #0
   86c84:	d0c8      	beq.n	86c18 <_dtoa_r+0x3b0>
   86c86:	e9dd 4313 	ldrd	r4, r3, [sp, #76]	; 0x4c
   86c8a:	9d10      	ldr	r5, [sp, #64]	; 0x40
   86c8c:	9a03      	ldr	r2, [sp, #12]
   86c8e:	9307      	str	r3, [sp, #28]
   86c90:	e002      	b.n	86c98 <_dtoa_r+0x430>
   86c92:	4296      	cmp	r6, r2
   86c94:	f000 84cd 	beq.w	87632 <_dtoa_r+0xdca>
   86c98:	46b2      	mov	sl, r6
   86c9a:	f816 3d01 	ldrb.w	r3, [r6, #-1]!
   86c9e:	2b39      	cmp	r3, #57	; 0x39
   86ca0:	d0f7      	beq.n	86c92 <_dtoa_r+0x42a>
   86ca2:	3301      	adds	r3, #1
   86ca4:	b2db      	uxtb	r3, r3
   86ca6:	7033      	strb	r3, [r6, #0]
   86ca8:	9b07      	ldr	r3, [sp, #28]
   86caa:	3301      	adds	r3, #1
   86cac:	9307      	str	r3, [sp, #28]
   86cae:	e1c8      	b.n	87042 <_dtoa_r+0x7da>
   86cb0:	4650      	mov	r0, sl
   86cb2:	f003 f8c7 	bl	89e44 <__aeabi_i2d>
   86cb6:	4642      	mov	r2, r8
   86cb8:	464b      	mov	r3, r9
   86cba:	f003 f92d 	bl	89f18 <__aeabi_dmul>
   86cbe:	4b3f      	ldr	r3, [pc, #252]	; (86dbc <_dtoa_r+0x554>)
   86cc0:	2200      	movs	r2, #0
   86cc2:	f002 ff73 	bl	89bac <__adddf3>
   86cc6:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   86cca:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   86cce:	9311      	str	r3, [sp, #68]	; 0x44
   86cd0:	4640      	mov	r0, r8
   86cd2:	4649      	mov	r1, r9
   86cd4:	2200      	movs	r2, #0
   86cd6:	4b3c      	ldr	r3, [pc, #240]	; (86dc8 <_dtoa_r+0x560>)
   86cd8:	f002 ff66 	bl	89ba8 <__aeabi_dsub>
   86cdc:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
   86ce0:	464b      	mov	r3, r9
   86ce2:	4642      	mov	r2, r8
   86ce4:	4606      	mov	r6, r0
   86ce6:	460f      	mov	r7, r1
   86ce8:	f003 fba6 	bl	8a438 <__aeabi_dcmpgt>
   86cec:	4681      	mov	r9, r0
   86cee:	2800      	cmp	r0, #0
   86cf0:	f040 84af 	bne.w	87652 <_dtoa_r+0xdea>
   86cf4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   86cf8:	4602      	mov	r2, r0
   86cfa:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
   86cfe:	4630      	mov	r0, r6
   86d00:	4639      	mov	r1, r7
   86d02:	f003 fb7b 	bl	8a3fc <__aeabi_dcmplt>
   86d06:	2800      	cmp	r0, #0
   86d08:	f040 8348 	bne.w	8739c <_dtoa_r+0xb34>
   86d0c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86d0e:	2b00      	cmp	r3, #0
   86d10:	f2c0 808c 	blt.w	86e2c <_dtoa_r+0x5c4>
   86d14:	9a07      	ldr	r2, [sp, #28]
   86d16:	2a0e      	cmp	r2, #14
   86d18:	f300 8088 	bgt.w	86e2c <_dtoa_r+0x5c4>
   86d1c:	4b24      	ldr	r3, [pc, #144]	; (86db0 <_dtoa_r+0x548>)
   86d1e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   86d22:	e9d3 ab00 	ldrd	sl, fp, [r3]
   86d26:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86d28:	2b00      	cmp	r3, #0
   86d2a:	da1b      	bge.n	86d64 <_dtoa_r+0x4fc>
   86d2c:	9b08      	ldr	r3, [sp, #32]
   86d2e:	2b00      	cmp	r3, #0
   86d30:	dc18      	bgt.n	86d64 <_dtoa_r+0x4fc>
   86d32:	f040 8331 	bne.w	87398 <_dtoa_r+0xb30>
   86d36:	2200      	movs	r2, #0
   86d38:	4b23      	ldr	r3, [pc, #140]	; (86dc8 <_dtoa_r+0x560>)
   86d3a:	4650      	mov	r0, sl
   86d3c:	4659      	mov	r1, fp
   86d3e:	f003 f8eb 	bl	89f18 <__aeabi_dmul>
   86d42:	4602      	mov	r2, r0
   86d44:	460b      	mov	r3, r1
   86d46:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   86d4a:	f003 fb61 	bl	8a410 <__aeabi_dcmple>
   86d4e:	f8dd 9020 	ldr.w	r9, [sp, #32]
   86d52:	464e      	mov	r6, r9
   86d54:	2800      	cmp	r0, #0
   86d56:	f000 82ca 	beq.w	872ee <_dtoa_r+0xa86>
   86d5a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86d5c:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86d60:	43df      	mvns	r7, r3
   86d62:	e2cc      	b.n	872fe <_dtoa_r+0xa96>
   86d64:	4652      	mov	r2, sl
   86d66:	e9dd 780a 	ldrd	r7, r8, [sp, #40]	; 0x28
   86d6a:	465b      	mov	r3, fp
   86d6c:	4638      	mov	r0, r7
   86d6e:	4641      	mov	r1, r8
   86d70:	f003 f9fc 	bl	8a16c <__aeabi_ddiv>
   86d74:	f003 fb80 	bl	8a478 <__aeabi_d2iz>
   86d78:	4681      	mov	r9, r0
   86d7a:	9009      	str	r0, [sp, #36]	; 0x24
   86d7c:	f003 f862 	bl	89e44 <__aeabi_i2d>
   86d80:	4652      	mov	r2, sl
   86d82:	465b      	mov	r3, fp
   86d84:	f003 f8c8 	bl	89f18 <__aeabi_dmul>
   86d88:	9e03      	ldr	r6, [sp, #12]
   86d8a:	460b      	mov	r3, r1
   86d8c:	4602      	mov	r2, r0
   86d8e:	4641      	mov	r1, r8
   86d90:	4638      	mov	r0, r7
   86d92:	f002 ff09 	bl	89ba8 <__aeabi_dsub>
   86d96:	f109 0330 	add.w	r3, r9, #48	; 0x30
   86d9a:	f806 3b01 	strb.w	r3, [r6], #1
   86d9e:	9b08      	ldr	r3, [sp, #32]
   86da0:	2b01      	cmp	r3, #1
   86da2:	f000 835f 	beq.w	87464 <_dtoa_r+0xbfc>
   86da6:	9406      	str	r4, [sp, #24]
   86da8:	2701      	movs	r7, #1
   86daa:	461c      	mov	r4, r3
   86dac:	9504      	str	r5, [sp, #16]
   86dae:	e02a      	b.n	86e06 <_dtoa_r+0x59e>
   86db0:	0008aad8 	.word	0x0008aad8
   86db4:	0008aab0 	.word	0x0008aab0
   86db8:	3ff00000 	.word	0x3ff00000
   86dbc:	401c0000 	.word	0x401c0000
   86dc0:	3fe00000 	.word	0x3fe00000
   86dc4:	40240000 	.word	0x40240000
   86dc8:	40140000 	.word	0x40140000
   86dcc:	4652      	mov	r2, sl
   86dce:	465b      	mov	r3, fp
   86dd0:	4640      	mov	r0, r8
   86dd2:	4649      	mov	r1, r9
   86dd4:	f003 f9ca 	bl	8a16c <__aeabi_ddiv>
   86dd8:	f003 fb4e 	bl	8a478 <__aeabi_d2iz>
   86ddc:	4605      	mov	r5, r0
   86dde:	f003 f831 	bl	89e44 <__aeabi_i2d>
   86de2:	4652      	mov	r2, sl
   86de4:	465b      	mov	r3, fp
   86de6:	f003 f897 	bl	89f18 <__aeabi_dmul>
   86dea:	3701      	adds	r7, #1
   86dec:	460b      	mov	r3, r1
   86dee:	4602      	mov	r2, r0
   86df0:	4649      	mov	r1, r9
   86df2:	4640      	mov	r0, r8
   86df4:	f002 fed8 	bl	89ba8 <__aeabi_dsub>
   86df8:	f105 0330 	add.w	r3, r5, #48	; 0x30
   86dfc:	42a7      	cmp	r7, r4
   86dfe:	f806 3b01 	strb.w	r3, [r6], #1
   86e02:	f000 832c 	beq.w	8745e <_dtoa_r+0xbf6>
   86e06:	2200      	movs	r2, #0
   86e08:	4bab      	ldr	r3, [pc, #684]	; (870b8 <_dtoa_r+0x850>)
   86e0a:	f003 f885 	bl	89f18 <__aeabi_dmul>
   86e0e:	2200      	movs	r2, #0
   86e10:	2300      	movs	r3, #0
   86e12:	4680      	mov	r8, r0
   86e14:	4689      	mov	r9, r1
   86e16:	f003 fae7 	bl	8a3e8 <__aeabi_dcmpeq>
   86e1a:	2800      	cmp	r0, #0
   86e1c:	d0d6      	beq.n	86dcc <_dtoa_r+0x564>
   86e1e:	9d04      	ldr	r5, [sp, #16]
   86e20:	9c06      	ldr	r4, [sp, #24]
   86e22:	9b07      	ldr	r3, [sp, #28]
   86e24:	46b2      	mov	sl, r6
   86e26:	3301      	adds	r3, #1
   86e28:	9307      	str	r3, [sp, #28]
   86e2a:	e10a      	b.n	87042 <_dtoa_r+0x7da>
   86e2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   86e2e:	2a00      	cmp	r2, #0
   86e30:	d03d      	beq.n	86eae <_dtoa_r+0x646>
   86e32:	9a22      	ldr	r2, [sp, #136]	; 0x88
   86e34:	2a01      	cmp	r2, #1
   86e36:	f340 829f 	ble.w	87378 <_dtoa_r+0xb10>
   86e3a:	9b08      	ldr	r3, [sp, #32]
   86e3c:	f103 38ff 	add.w	r8, r3, #4294967295
   86e40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86e42:	4543      	cmp	r3, r8
   86e44:	f2c0 8270 	blt.w	87328 <_dtoa_r+0xac0>
   86e48:	eba3 0808 	sub.w	r8, r3, r8
   86e4c:	9b08      	ldr	r3, [sp, #32]
   86e4e:	2b00      	cmp	r3, #0
   86e50:	f2c0 8340 	blt.w	874d4 <_dtoa_r+0xc6c>
   86e54:	9a06      	ldr	r2, [sp, #24]
   86e56:	441a      	add	r2, r3
   86e58:	9206      	str	r2, [sp, #24]
   86e5a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86e5c:	4617      	mov	r7, r2
   86e5e:	441a      	add	r2, r3
   86e60:	9209      	str	r2, [sp, #36]	; 0x24
   86e62:	2101      	movs	r1, #1
   86e64:	4620      	mov	r0, r4
   86e66:	f001 fe5d 	bl	88b24 <__i2b>
   86e6a:	4606      	mov	r6, r0
   86e6c:	e023      	b.n	86eb6 <_dtoa_r+0x64e>
   86e6e:	2301      	movs	r3, #1
   86e70:	1bbe      	subs	r6, r7, r6
   86e72:	930e      	str	r3, [sp, #56]	; 0x38
   86e74:	1e73      	subs	r3, r6, #1
   86e76:	9306      	str	r3, [sp, #24]
   86e78:	f57f ada0 	bpl.w	869bc <_dtoa_r+0x154>
   86e7c:	f1c6 0301 	rsb	r3, r6, #1
   86e80:	9309      	str	r3, [sp, #36]	; 0x24
   86e82:	2300      	movs	r3, #0
   86e84:	9306      	str	r3, [sp, #24]
   86e86:	e59b      	b.n	869c0 <_dtoa_r+0x158>
   86e88:	4658      	mov	r0, fp
   86e8a:	f002 ffdb 	bl	89e44 <__aeabi_i2d>
   86e8e:	4642      	mov	r2, r8
   86e90:	464b      	mov	r3, r9
   86e92:	f003 faa9 	bl	8a3e8 <__aeabi_dcmpeq>
   86e96:	2800      	cmp	r0, #0
   86e98:	f47f ad78 	bne.w	8698c <_dtoa_r+0x124>
   86e9c:	f10b 3bff 	add.w	fp, fp, #4294967295
   86ea0:	e574      	b.n	8698c <_dtoa_r+0x124>
   86ea2:	4b86      	ldr	r3, [pc, #536]	; (870bc <_dtoa_r+0x854>)
   86ea4:	9303      	str	r3, [sp, #12]
   86ea6:	9803      	ldr	r0, [sp, #12]
   86ea8:	b019      	add	sp, #100	; 0x64
   86eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86eae:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   86eb2:	9f09      	ldr	r7, [sp, #36]	; 0x24
   86eb4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   86eb6:	2f00      	cmp	r7, #0
   86eb8:	dd0c      	ble.n	86ed4 <_dtoa_r+0x66c>
   86eba:	9906      	ldr	r1, [sp, #24]
   86ebc:	2900      	cmp	r1, #0
   86ebe:	460b      	mov	r3, r1
   86ec0:	dd08      	ble.n	86ed4 <_dtoa_r+0x66c>
   86ec2:	42b9      	cmp	r1, r7
   86ec4:	bfa8      	it	ge
   86ec6:	463b      	movge	r3, r7
   86ec8:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86eca:	1aff      	subs	r7, r7, r3
   86ecc:	1ad2      	subs	r2, r2, r3
   86ece:	1acb      	subs	r3, r1, r3
   86ed0:	9209      	str	r2, [sp, #36]	; 0x24
   86ed2:	9306      	str	r3, [sp, #24]
   86ed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86ed6:	b1e3      	cbz	r3, 86f12 <_dtoa_r+0x6aa>
   86ed8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86eda:	2b00      	cmp	r3, #0
   86edc:	f000 8260 	beq.w	873a0 <_dtoa_r+0xb38>
   86ee0:	f1b8 0f00 	cmp.w	r8, #0
   86ee4:	dd10      	ble.n	86f08 <_dtoa_r+0x6a0>
   86ee6:	4631      	mov	r1, r6
   86ee8:	4642      	mov	r2, r8
   86eea:	4620      	mov	r0, r4
   86eec:	f001 fef6 	bl	88cdc <__pow5mult>
   86ef0:	4606      	mov	r6, r0
   86ef2:	462a      	mov	r2, r5
   86ef4:	4631      	mov	r1, r6
   86ef6:	4620      	mov	r0, r4
   86ef8:	f001 fe42 	bl	88b80 <__multiply>
   86efc:	4603      	mov	r3, r0
   86efe:	4629      	mov	r1, r5
   86f00:	4620      	mov	r0, r4
   86f02:	461d      	mov	r5, r3
   86f04:	f001 fd66 	bl	889d4 <_Bfree>
   86f08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   86f0a:	ebb3 0208 	subs.w	r2, r3, r8
   86f0e:	f040 82db 	bne.w	874c8 <_dtoa_r+0xc60>
   86f12:	2101      	movs	r1, #1
   86f14:	4620      	mov	r0, r4
   86f16:	f001 fe05 	bl	88b24 <__i2b>
   86f1a:	f1bb 0f00 	cmp.w	fp, #0
   86f1e:	4681      	mov	r9, r0
   86f20:	f300 80b3 	bgt.w	8708a <_dtoa_r+0x822>
   86f24:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86f26:	2b01      	cmp	r3, #1
   86f28:	f340 8188 	ble.w	8723c <_dtoa_r+0x9d4>
   86f2c:	f04f 0a00 	mov.w	sl, #0
   86f30:	2001      	movs	r0, #1
   86f32:	f1bb 0f00 	cmp.w	fp, #0
   86f36:	f040 80b4 	bne.w	870a2 <_dtoa_r+0x83a>
   86f3a:	9a06      	ldr	r2, [sp, #24]
   86f3c:	4410      	add	r0, r2
   86f3e:	f010 001f 	ands.w	r0, r0, #31
   86f42:	f000 8092 	beq.w	8706a <_dtoa_r+0x802>
   86f46:	f1c0 0320 	rsb	r3, r0, #32
   86f4a:	2b04      	cmp	r3, #4
   86f4c:	f340 83d3 	ble.w	876f6 <_dtoa_r+0xe8e>
   86f50:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86f52:	f1c0 001c 	rsb	r0, r0, #28
   86f56:	4403      	add	r3, r0
   86f58:	4402      	add	r2, r0
   86f5a:	9309      	str	r3, [sp, #36]	; 0x24
   86f5c:	4407      	add	r7, r0
   86f5e:	9206      	str	r2, [sp, #24]
   86f60:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86f62:	2b00      	cmp	r3, #0
   86f64:	dd05      	ble.n	86f72 <_dtoa_r+0x70a>
   86f66:	4629      	mov	r1, r5
   86f68:	461a      	mov	r2, r3
   86f6a:	4620      	mov	r0, r4
   86f6c:	f001 ff12 	bl	88d94 <__lshift>
   86f70:	4605      	mov	r5, r0
   86f72:	9b06      	ldr	r3, [sp, #24]
   86f74:	2b00      	cmp	r3, #0
   86f76:	dd05      	ble.n	86f84 <_dtoa_r+0x71c>
   86f78:	4649      	mov	r1, r9
   86f7a:	461a      	mov	r2, r3
   86f7c:	4620      	mov	r0, r4
   86f7e:	f001 ff09 	bl	88d94 <__lshift>
   86f82:	4681      	mov	r9, r0
   86f84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86f86:	2b00      	cmp	r3, #0
   86f88:	f040 8138 	bne.w	871fc <_dtoa_r+0x994>
   86f8c:	9b08      	ldr	r3, [sp, #32]
   86f8e:	2b00      	cmp	r3, #0
   86f90:	f340 811e 	ble.w	871d0 <_dtoa_r+0x968>
   86f94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   86f96:	2b00      	cmp	r3, #0
   86f98:	f040 809f 	bne.w	870da <_dtoa_r+0x872>
   86f9c:	9b07      	ldr	r3, [sp, #28]
   86f9e:	3301      	adds	r3, #1
   86fa0:	9307      	str	r3, [sp, #28]
   86fa2:	2701      	movs	r7, #1
   86fa4:	f8dd 800c 	ldr.w	r8, [sp, #12]
   86fa8:	f8dd a020 	ldr.w	sl, [sp, #32]
   86fac:	e007      	b.n	86fbe <_dtoa_r+0x756>
   86fae:	4629      	mov	r1, r5
   86fb0:	2300      	movs	r3, #0
   86fb2:	220a      	movs	r2, #10
   86fb4:	4620      	mov	r0, r4
   86fb6:	f001 fd17 	bl	889e8 <__multadd>
   86fba:	4605      	mov	r5, r0
   86fbc:	3701      	adds	r7, #1
   86fbe:	4649      	mov	r1, r9
   86fc0:	4628      	mov	r0, r5
   86fc2:	f7ff fbbb 	bl	8673c <quorem>
   86fc6:	4557      	cmp	r7, sl
   86fc8:	f100 0330 	add.w	r3, r0, #48	; 0x30
   86fcc:	f808 3b01 	strb.w	r3, [r8], #1
   86fd0:	dbed      	blt.n	86fae <_dtoa_r+0x746>
   86fd2:	9a08      	ldr	r2, [sp, #32]
   86fd4:	2700      	movs	r7, #0
   86fd6:	2a00      	cmp	r2, #0
   86fd8:	bfcc      	ite	gt
   86fda:	4693      	movgt	fp, r2
   86fdc:	f04f 0b01 	movle.w	fp, #1
   86fe0:	9a03      	ldr	r2, [sp, #12]
   86fe2:	4493      	add	fp, r2
   86fe4:	4629      	mov	r1, r5
   86fe6:	2201      	movs	r2, #1
   86fe8:	4620      	mov	r0, r4
   86fea:	9304      	str	r3, [sp, #16]
   86fec:	f001 fed2 	bl	88d94 <__lshift>
   86ff0:	4649      	mov	r1, r9
   86ff2:	4605      	mov	r5, r0
   86ff4:	f001 ff44 	bl	88e80 <__mcmp>
   86ff8:	2800      	cmp	r0, #0
   86ffa:	f340 81ab 	ble.w	87354 <_dtoa_r+0xaec>
   86ffe:	f81b 3c01 	ldrb.w	r3, [fp, #-1]
   87002:	9a03      	ldr	r2, [sp, #12]
   87004:	f10b 3bff 	add.w	fp, fp, #4294967295
   87008:	e004      	b.n	87014 <_dtoa_r+0x7ac>
   8700a:	455a      	cmp	r2, fp
   8700c:	f000 81ad 	beq.w	8736a <_dtoa_r+0xb02>
   87010:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   87014:	2b39      	cmp	r3, #57	; 0x39
   87016:	f10b 0a01 	add.w	sl, fp, #1
   8701a:	d0f6      	beq.n	8700a <_dtoa_r+0x7a2>
   8701c:	3301      	adds	r3, #1
   8701e:	f88b 3000 	strb.w	r3, [fp]
   87022:	4649      	mov	r1, r9
   87024:	4620      	mov	r0, r4
   87026:	f001 fcd5 	bl	889d4 <_Bfree>
   8702a:	b156      	cbz	r6, 87042 <_dtoa_r+0x7da>
   8702c:	b12f      	cbz	r7, 8703a <_dtoa_r+0x7d2>
   8702e:	42b7      	cmp	r7, r6
   87030:	d003      	beq.n	8703a <_dtoa_r+0x7d2>
   87032:	4639      	mov	r1, r7
   87034:	4620      	mov	r0, r4
   87036:	f001 fccd 	bl	889d4 <_Bfree>
   8703a:	4631      	mov	r1, r6
   8703c:	4620      	mov	r0, r4
   8703e:	f001 fcc9 	bl	889d4 <_Bfree>
   87042:	4629      	mov	r1, r5
   87044:	4620      	mov	r0, r4
   87046:	f001 fcc5 	bl	889d4 <_Bfree>
   8704a:	2300      	movs	r3, #0
   8704c:	9a07      	ldr	r2, [sp, #28]
   8704e:	f88a 3000 	strb.w	r3, [sl]
   87052:	9b24      	ldr	r3, [sp, #144]	; 0x90
   87054:	601a      	str	r2, [r3, #0]
   87056:	9b26      	ldr	r3, [sp, #152]	; 0x98
   87058:	2b00      	cmp	r3, #0
   8705a:	f43f ac40 	beq.w	868de <_dtoa_r+0x76>
   8705e:	9803      	ldr	r0, [sp, #12]
   87060:	f8c3 a000 	str.w	sl, [r3]
   87064:	b019      	add	sp, #100	; 0x64
   87066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8706a:	201c      	movs	r0, #28
   8706c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8706e:	4407      	add	r7, r0
   87070:	4403      	add	r3, r0
   87072:	9309      	str	r3, [sp, #36]	; 0x24
   87074:	9b06      	ldr	r3, [sp, #24]
   87076:	4403      	add	r3, r0
   87078:	9306      	str	r3, [sp, #24]
   8707a:	e771      	b.n	86f60 <_dtoa_r+0x6f8>
   8707c:	2601      	movs	r6, #1
   8707e:	e4b6      	b.n	869ee <_dtoa_r+0x186>
   87080:	f1c0 0020 	rsb	r0, r0, #32
   87084:	fa08 f000 	lsl.w	r0, r8, r0
   87088:	e44d      	b.n	86926 <_dtoa_r+0xbe>
   8708a:	4601      	mov	r1, r0
   8708c:	465a      	mov	r2, fp
   8708e:	4620      	mov	r0, r4
   87090:	f001 fe24 	bl	88cdc <__pow5mult>
   87094:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87096:	4681      	mov	r9, r0
   87098:	2b01      	cmp	r3, #1
   8709a:	f340 81b6 	ble.w	8740a <_dtoa_r+0xba2>
   8709e:	f04f 0a00 	mov.w	sl, #0
   870a2:	f8d9 3010 	ldr.w	r3, [r9, #16]
   870a6:	eb09 0383 	add.w	r3, r9, r3, lsl #2
   870aa:	6918      	ldr	r0, [r3, #16]
   870ac:	f001 fcee 	bl	88a8c <__hi0bits>
   870b0:	f1c0 0020 	rsb	r0, r0, #32
   870b4:	e741      	b.n	86f3a <_dtoa_r+0x6d2>
   870b6:	bf00      	nop
   870b8:	40240000 	.word	0x40240000
   870bc:	0008a934 	.word	0x0008a934
   870c0:	4631      	mov	r1, r6
   870c2:	2300      	movs	r3, #0
   870c4:	220a      	movs	r2, #10
   870c6:	4620      	mov	r0, r4
   870c8:	f001 fc8e 	bl	889e8 <__multadd>
   870cc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   870ce:	4606      	mov	r6, r0
   870d0:	2b00      	cmp	r3, #0
   870d2:	f340 82e9 	ble.w	876a8 <_dtoa_r+0xe40>
   870d6:	e9cd 8307 	strd	r8, r3, [sp, #28]
   870da:	2f00      	cmp	r7, #0
   870dc:	f300 811d 	bgt.w	8731a <_dtoa_r+0xab2>
   870e0:	f1ba 0f00 	cmp.w	sl, #0
   870e4:	f040 81d9 	bne.w	8749a <_dtoa_r+0xc32>
   870e8:	46b0      	mov	r8, r6
   870ea:	9b04      	ldr	r3, [sp, #16]
   870ec:	9908      	ldr	r1, [sp, #32]
   870ee:	f003 0201 	and.w	r2, r3, #1
   870f2:	9b03      	ldr	r3, [sp, #12]
   870f4:	920a      	str	r2, [sp, #40]	; 0x28
   870f6:	461f      	mov	r7, r3
   870f8:	3b01      	subs	r3, #1
   870fa:	4419      	add	r1, r3
   870fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
   870fe:	9108      	str	r1, [sp, #32]
   87100:	4313      	orrs	r3, r2
   87102:	9309      	str	r3, [sp, #36]	; 0x24
   87104:	4649      	mov	r1, r9
   87106:	4628      	mov	r0, r5
   87108:	f7ff fb18 	bl	8673c <quorem>
   8710c:	4631      	mov	r1, r6
   8710e:	4683      	mov	fp, r0
   87110:	4628      	mov	r0, r5
   87112:	f001 feb5 	bl	88e80 <__mcmp>
   87116:	4642      	mov	r2, r8
   87118:	4649      	mov	r1, r9
   8711a:	4682      	mov	sl, r0
   8711c:	4620      	mov	r0, r4
   8711e:	f001 fecf 	bl	88ec0 <__mdiff>
   87122:	68c2      	ldr	r2, [r0, #12]
   87124:	4601      	mov	r1, r0
   87126:	f10b 0330 	add.w	r3, fp, #48	; 0x30
   8712a:	2a00      	cmp	r2, #0
   8712c:	d143      	bne.n	871b6 <_dtoa_r+0x94e>
   8712e:	9004      	str	r0, [sp, #16]
   87130:	4628      	mov	r0, r5
   87132:	9306      	str	r3, [sp, #24]
   87134:	f001 fea4 	bl	88e80 <__mcmp>
   87138:	4602      	mov	r2, r0
   8713a:	9904      	ldr	r1, [sp, #16]
   8713c:	4620      	mov	r0, r4
   8713e:	9204      	str	r2, [sp, #16]
   87140:	f001 fc48 	bl	889d4 <_Bfree>
   87144:	9a04      	ldr	r2, [sp, #16]
   87146:	9b06      	ldr	r3, [sp, #24]
   87148:	b91a      	cbnz	r2, 87152 <_dtoa_r+0x8ea>
   8714a:	9909      	ldr	r1, [sp, #36]	; 0x24
   8714c:	2900      	cmp	r1, #0
   8714e:	f000 829b 	beq.w	87688 <_dtoa_r+0xe20>
   87152:	f1ba 0f00 	cmp.w	sl, #0
   87156:	f2c0 8164 	blt.w	87422 <_dtoa_r+0xbba>
   8715a:	9922      	ldr	r1, [sp, #136]	; 0x88
   8715c:	ea4a 0a01 	orr.w	sl, sl, r1
   87160:	990a      	ldr	r1, [sp, #40]	; 0x28
   87162:	ea51 010a 	orrs.w	r1, r1, sl
   87166:	f000 815c 	beq.w	87422 <_dtoa_r+0xbba>
   8716a:	2a00      	cmp	r2, #0
   8716c:	f300 81b6 	bgt.w	874dc <_dtoa_r+0xc74>
   87170:	9a08      	ldr	r2, [sp, #32]
   87172:	f107 0a01 	add.w	sl, r7, #1
   87176:	4297      	cmp	r7, r2
   87178:	46d3      	mov	fp, sl
   8717a:	703b      	strb	r3, [r7, #0]
   8717c:	f000 81b4 	beq.w	874e8 <_dtoa_r+0xc80>
   87180:	4629      	mov	r1, r5
   87182:	2300      	movs	r3, #0
   87184:	220a      	movs	r2, #10
   87186:	4620      	mov	r0, r4
   87188:	f001 fc2e 	bl	889e8 <__multadd>
   8718c:	4546      	cmp	r6, r8
   8718e:	4605      	mov	r5, r0
   87190:	4631      	mov	r1, r6
   87192:	f04f 0300 	mov.w	r3, #0
   87196:	f04f 020a 	mov.w	r2, #10
   8719a:	4620      	mov	r0, r4
   8719c:	d012      	beq.n	871c4 <_dtoa_r+0x95c>
   8719e:	f001 fc23 	bl	889e8 <__multadd>
   871a2:	4641      	mov	r1, r8
   871a4:	4606      	mov	r6, r0
   871a6:	2300      	movs	r3, #0
   871a8:	220a      	movs	r2, #10
   871aa:	4620      	mov	r0, r4
   871ac:	f001 fc1c 	bl	889e8 <__multadd>
   871b0:	4657      	mov	r7, sl
   871b2:	4680      	mov	r8, r0
   871b4:	e7a6      	b.n	87104 <_dtoa_r+0x89c>
   871b6:	4620      	mov	r0, r4
   871b8:	9304      	str	r3, [sp, #16]
   871ba:	f001 fc0b 	bl	889d4 <_Bfree>
   871be:	2201      	movs	r2, #1
   871c0:	9b04      	ldr	r3, [sp, #16]
   871c2:	e7c6      	b.n	87152 <_dtoa_r+0x8ea>
   871c4:	f001 fc10 	bl	889e8 <__multadd>
   871c8:	4657      	mov	r7, sl
   871ca:	4606      	mov	r6, r0
   871cc:	4680      	mov	r8, r0
   871ce:	e799      	b.n	87104 <_dtoa_r+0x89c>
   871d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
   871d2:	2b02      	cmp	r3, #2
   871d4:	dc7a      	bgt.n	872cc <_dtoa_r+0xa64>
   871d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   871d8:	2b00      	cmp	r3, #0
   871da:	f47f af7e 	bne.w	870da <_dtoa_r+0x872>
   871de:	9b07      	ldr	r3, [sp, #28]
   871e0:	4649      	mov	r1, r9
   871e2:	3301      	adds	r3, #1
   871e4:	4628      	mov	r0, r5
   871e6:	9307      	str	r3, [sp, #28]
   871e8:	f7ff faa8 	bl	8673c <quorem>
   871ec:	f8dd b00c 	ldr.w	fp, [sp, #12]
   871f0:	f100 0330 	add.w	r3, r0, #48	; 0x30
   871f4:	2700      	movs	r7, #0
   871f6:	f80b 3b01 	strb.w	r3, [fp], #1
   871fa:	e6f3      	b.n	86fe4 <_dtoa_r+0x77c>
   871fc:	4649      	mov	r1, r9
   871fe:	4628      	mov	r0, r5
   87200:	f001 fe3e 	bl	88e80 <__mcmp>
   87204:	2800      	cmp	r0, #0
   87206:	f6bf aec1 	bge.w	86f8c <_dtoa_r+0x724>
   8720a:	4629      	mov	r1, r5
   8720c:	2300      	movs	r3, #0
   8720e:	220a      	movs	r2, #10
   87210:	4620      	mov	r0, r4
   87212:	f001 fbe9 	bl	889e8 <__multadd>
   87216:	9b07      	ldr	r3, [sp, #28]
   87218:	4605      	mov	r5, r0
   8721a:	f103 38ff 	add.w	r8, r3, #4294967295
   8721e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   87220:	2b00      	cmp	r3, #0
   87222:	f47f af4d 	bne.w	870c0 <_dtoa_r+0x858>
   87226:	9b12      	ldr	r3, [sp, #72]	; 0x48
   87228:	2b00      	cmp	r3, #0
   8722a:	f340 8234 	ble.w	87696 <_dtoa_r+0xe2e>
   8722e:	9308      	str	r3, [sp, #32]
   87230:	e6b7      	b.n	86fa2 <_dtoa_r+0x73a>
   87232:	4bb0      	ldr	r3, [pc, #704]	; (874f4 <_dtoa_r+0xc8c>)
   87234:	9303      	str	r3, [sp, #12]
   87236:	3303      	adds	r3, #3
   87238:	f7ff bbf4 	b.w	86a24 <_dtoa_r+0x1bc>
   8723c:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   87240:	2900      	cmp	r1, #0
   87242:	f47f ae73 	bne.w	86f2c <_dtoa_r+0x6c4>
   87246:	f3c2 0313 	ubfx	r3, r2, #0, #20
   8724a:	2b00      	cmp	r3, #0
   8724c:	f47f ae6e 	bne.w	86f2c <_dtoa_r+0x6c4>
   87250:	4ba9      	ldr	r3, [pc, #676]	; (874f8 <_dtoa_r+0xc90>)
   87252:	4013      	ands	r3, r2
   87254:	2b00      	cmp	r3, #0
   87256:	f000 8200 	beq.w	8765a <_dtoa_r+0xdf2>
   8725a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8725c:	f04f 0a01 	mov.w	sl, #1
   87260:	3301      	adds	r3, #1
   87262:	9309      	str	r3, [sp, #36]	; 0x24
   87264:	9b06      	ldr	r3, [sp, #24]
   87266:	3301      	adds	r3, #1
   87268:	9306      	str	r3, [sp, #24]
   8726a:	e661      	b.n	86f30 <_dtoa_r+0x6c8>
   8726c:	2301      	movs	r3, #1
   8726e:	930c      	str	r3, [sp, #48]	; 0x30
   87270:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   87272:	9a07      	ldr	r2, [sp, #28]
   87274:	4413      	add	r3, r2
   87276:	9312      	str	r3, [sp, #72]	; 0x48
   87278:	3301      	adds	r3, #1
   8727a:	2b01      	cmp	r3, #1
   8727c:	461f      	mov	r7, r3
   8727e:	bfb8      	it	lt
   87280:	2701      	movlt	r7, #1
   87282:	9308      	str	r3, [sp, #32]
   87284:	2100      	movs	r1, #0
   87286:	2f17      	cmp	r7, #23
   87288:	6461      	str	r1, [r4, #68]	; 0x44
   8728a:	f77f ac1e 	ble.w	86aca <_dtoa_r+0x262>
   8728e:	2201      	movs	r2, #1
   87290:	2304      	movs	r3, #4
   87292:	005b      	lsls	r3, r3, #1
   87294:	f103 0014 	add.w	r0, r3, #20
   87298:	42b8      	cmp	r0, r7
   8729a:	4611      	mov	r1, r2
   8729c:	f102 0201 	add.w	r2, r2, #1
   872a0:	d9f7      	bls.n	87292 <_dtoa_r+0xa2a>
   872a2:	6461      	str	r1, [r4, #68]	; 0x44
   872a4:	e411      	b.n	86aca <_dtoa_r+0x262>
   872a6:	2301      	movs	r3, #1
   872a8:	930c      	str	r3, [sp, #48]	; 0x30
   872aa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   872ac:	2b00      	cmp	r3, #0
   872ae:	dd4c      	ble.n	8734a <_dtoa_r+0xae2>
   872b0:	461f      	mov	r7, r3
   872b2:	9312      	str	r3, [sp, #72]	; 0x48
   872b4:	9308      	str	r3, [sp, #32]
   872b6:	e7e5      	b.n	87284 <_dtoa_r+0xa1c>
   872b8:	2300      	movs	r3, #0
   872ba:	930c      	str	r3, [sp, #48]	; 0x30
   872bc:	e7d8      	b.n	87270 <_dtoa_r+0xa08>
   872be:	2300      	movs	r3, #0
   872c0:	930c      	str	r3, [sp, #48]	; 0x30
   872c2:	e7f2      	b.n	872aa <_dtoa_r+0xa42>
   872c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
   872c6:	f8cd 801c 	str.w	r8, [sp, #28]
   872ca:	9308      	str	r3, [sp, #32]
   872cc:	9b08      	ldr	r3, [sp, #32]
   872ce:	2b00      	cmp	r3, #0
   872d0:	f47f ad43 	bne.w	86d5a <_dtoa_r+0x4f2>
   872d4:	4649      	mov	r1, r9
   872d6:	2205      	movs	r2, #5
   872d8:	4620      	mov	r0, r4
   872da:	f001 fb85 	bl	889e8 <__multadd>
   872de:	4681      	mov	r9, r0
   872e0:	4628      	mov	r0, r5
   872e2:	4649      	mov	r1, r9
   872e4:	f001 fdcc 	bl	88e80 <__mcmp>
   872e8:	2800      	cmp	r0, #0
   872ea:	f77f ad36 	ble.w	86d5a <_dtoa_r+0x4f2>
   872ee:	2331      	movs	r3, #49	; 0x31
   872f0:	9803      	ldr	r0, [sp, #12]
   872f2:	9f07      	ldr	r7, [sp, #28]
   872f4:	4680      	mov	r8, r0
   872f6:	f800 3b01 	strb.w	r3, [r0], #1
   872fa:	3701      	adds	r7, #1
   872fc:	9003      	str	r0, [sp, #12]
   872fe:	4649      	mov	r1, r9
   87300:	4620      	mov	r0, r4
   87302:	f001 fb67 	bl	889d4 <_Bfree>
   87306:	1c7b      	adds	r3, r7, #1
   87308:	f8dd a00c 	ldr.w	sl, [sp, #12]
   8730c:	9307      	str	r3, [sp, #28]
   8730e:	f8cd 800c 	str.w	r8, [sp, #12]
   87312:	2e00      	cmp	r6, #0
   87314:	f47f ae91 	bne.w	8703a <_dtoa_r+0x7d2>
   87318:	e693      	b.n	87042 <_dtoa_r+0x7da>
   8731a:	4631      	mov	r1, r6
   8731c:	463a      	mov	r2, r7
   8731e:	4620      	mov	r0, r4
   87320:	f001 fd38 	bl	88d94 <__lshift>
   87324:	4606      	mov	r6, r0
   87326:	e6db      	b.n	870e0 <_dtoa_r+0x878>
   87328:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   8732a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
   8732e:	eba8 0303 	sub.w	r3, r8, r3
   87332:	449b      	add	fp, r3
   87334:	f04f 0800 	mov.w	r8, #0
   87338:	e588      	b.n	86e4c <_dtoa_r+0x5e4>
   8733a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
   8733e:	f04f 0a02 	mov.w	sl, #2
   87342:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   87346:	f7ff bbee 	b.w	86b26 <_dtoa_r+0x2be>
   8734a:	2301      	movs	r3, #1
   8734c:	9323      	str	r3, [sp, #140]	; 0x8c
   8734e:	9308      	str	r3, [sp, #32]
   87350:	f7ff bbb7 	b.w	86ac2 <_dtoa_r+0x25a>
   87354:	d103      	bne.n	8735e <_dtoa_r+0xaf6>
   87356:	9b04      	ldr	r3, [sp, #16]
   87358:	07d8      	lsls	r0, r3, #31
   8735a:	f53f ae50 	bmi.w	86ffe <_dtoa_r+0x796>
   8735e:	46da      	mov	sl, fp
   87360:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
   87364:	2b30      	cmp	r3, #48	; 0x30
   87366:	d0fa      	beq.n	8735e <_dtoa_r+0xaf6>
   87368:	e65b      	b.n	87022 <_dtoa_r+0x7ba>
   8736a:	9b07      	ldr	r3, [sp, #28]
   8736c:	9a03      	ldr	r2, [sp, #12]
   8736e:	3301      	adds	r3, #1
   87370:	9307      	str	r3, [sp, #28]
   87372:	2331      	movs	r3, #49	; 0x31
   87374:	7013      	strb	r3, [r2, #0]
   87376:	e654      	b.n	87022 <_dtoa_r+0x7ba>
   87378:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8737a:	2a00      	cmp	r2, #0
   8737c:	f000 8128 	beq.w	875d0 <_dtoa_r+0xd68>
   87380:	f203 4333 	addw	r3, r3, #1075	; 0x433
   87384:	9a06      	ldr	r2, [sp, #24]
   87386:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   8738a:	441a      	add	r2, r3
   8738c:	9206      	str	r2, [sp, #24]
   8738e:	9a09      	ldr	r2, [sp, #36]	; 0x24
   87390:	4617      	mov	r7, r2
   87392:	441a      	add	r2, r3
   87394:	9209      	str	r2, [sp, #36]	; 0x24
   87396:	e564      	b.n	86e62 <_dtoa_r+0x5fa>
   87398:	f04f 0900 	mov.w	r9, #0
   8739c:	464e      	mov	r6, r9
   8739e:	e4dc      	b.n	86d5a <_dtoa_r+0x4f2>
   873a0:	4629      	mov	r1, r5
   873a2:	4620      	mov	r0, r4
   873a4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   873a6:	f001 fc99 	bl	88cdc <__pow5mult>
   873aa:	4605      	mov	r5, r0
   873ac:	e5b1      	b.n	86f12 <_dtoa_r+0x6aa>
   873ae:	900e      	str	r0, [sp, #56]	; 0x38
   873b0:	e564      	b.n	86e7c <_dtoa_r+0x614>
   873b2:	f000 8111 	beq.w	875d8 <_dtoa_r+0xd70>
   873b6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
   873ba:	9a07      	ldr	r2, [sp, #28]
   873bc:	4b4f      	ldr	r3, [pc, #316]	; (874fc <_dtoa_r+0xc94>)
   873be:	4256      	negs	r6, r2
   873c0:	f006 020f 	and.w	r2, r6, #15
   873c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   873c8:	e9d3 2300 	ldrd	r2, r3, [r3]
   873cc:	f002 fda4 	bl	89f18 <__aeabi_dmul>
   873d0:	1136      	asrs	r6, r6, #4
   873d2:	4680      	mov	r8, r0
   873d4:	4689      	mov	r9, r1
   873d6:	f000 8170 	beq.w	876ba <_dtoa_r+0xe52>
   873da:	2300      	movs	r3, #0
   873dc:	f04f 0a02 	mov.w	sl, #2
   873e0:	4f47      	ldr	r7, [pc, #284]	; (87500 <_dtoa_r+0xc98>)
   873e2:	07f2      	lsls	r2, r6, #31
   873e4:	d506      	bpl.n	873f4 <_dtoa_r+0xb8c>
   873e6:	e9d7 2300 	ldrd	r2, r3, [r7]
   873ea:	f002 fd95 	bl	89f18 <__aeabi_dmul>
   873ee:	2301      	movs	r3, #1
   873f0:	f10a 0a01 	add.w	sl, sl, #1
   873f4:	1076      	asrs	r6, r6, #1
   873f6:	f107 0708 	add.w	r7, r7, #8
   873fa:	d1f2      	bne.n	873e2 <_dtoa_r+0xb7a>
   873fc:	2b00      	cmp	r3, #0
   873fe:	f43f abb1 	beq.w	86b64 <_dtoa_r+0x2fc>
   87402:	4680      	mov	r8, r0
   87404:	4689      	mov	r9, r1
   87406:	f7ff bbad 	b.w	86b64 <_dtoa_r+0x2fc>
   8740a:	9b04      	ldr	r3, [sp, #16]
   8740c:	2b00      	cmp	r3, #0
   8740e:	f47f ae46 	bne.w	8709e <_dtoa_r+0x836>
   87412:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
   87416:	f3c2 0313 	ubfx	r3, r2, #0, #20
   8741a:	2b00      	cmp	r3, #0
   8741c:	f43f af18 	beq.w	87250 <_dtoa_r+0x9e8>
   87420:	e63d      	b.n	8709e <_dtoa_r+0x836>
   87422:	2a00      	cmp	r2, #0
   87424:	dd12      	ble.n	8744c <_dtoa_r+0xbe4>
   87426:	4629      	mov	r1, r5
   87428:	2201      	movs	r2, #1
   8742a:	4620      	mov	r0, r4
   8742c:	9304      	str	r3, [sp, #16]
   8742e:	f001 fcb1 	bl	88d94 <__lshift>
   87432:	4649      	mov	r1, r9
   87434:	4605      	mov	r5, r0
   87436:	f001 fd23 	bl	88e80 <__mcmp>
   8743a:	2800      	cmp	r0, #0
   8743c:	9b04      	ldr	r3, [sp, #16]
   8743e:	f340 8117 	ble.w	87670 <_dtoa_r+0xe08>
   87442:	2b39      	cmp	r3, #57	; 0x39
   87444:	f000 80fb 	beq.w	8763e <_dtoa_r+0xdd6>
   87448:	f10b 0331 	add.w	r3, fp, #49	; 0x31
   8744c:	46ba      	mov	sl, r7
   8744e:	9a07      	ldr	r2, [sp, #28]
   87450:	4637      	mov	r7, r6
   87452:	3201      	adds	r2, #1
   87454:	4646      	mov	r6, r8
   87456:	9207      	str	r2, [sp, #28]
   87458:	f80a 3b01 	strb.w	r3, [sl], #1
   8745c:	e5e1      	b.n	87022 <_dtoa_r+0x7ba>
   8745e:	9509      	str	r5, [sp, #36]	; 0x24
   87460:	9c06      	ldr	r4, [sp, #24]
   87462:	9d04      	ldr	r5, [sp, #16]
   87464:	4602      	mov	r2, r0
   87466:	460b      	mov	r3, r1
   87468:	f002 fba0 	bl	89bac <__adddf3>
   8746c:	4652      	mov	r2, sl
   8746e:	465b      	mov	r3, fp
   87470:	4680      	mov	r8, r0
   87472:	4689      	mov	r9, r1
   87474:	f002 ffe0 	bl	8a438 <__aeabi_dcmpgt>
   87478:	b960      	cbnz	r0, 87494 <_dtoa_r+0xc2c>
   8747a:	4652      	mov	r2, sl
   8747c:	465b      	mov	r3, fp
   8747e:	4640      	mov	r0, r8
   87480:	4649      	mov	r1, r9
   87482:	f002 ffb1 	bl	8a3e8 <__aeabi_dcmpeq>
   87486:	2800      	cmp	r0, #0
   87488:	f43f accb 	beq.w	86e22 <_dtoa_r+0x5ba>
   8748c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8748e:	07d9      	lsls	r1, r3, #31
   87490:	f57f acc7 	bpl.w	86e22 <_dtoa_r+0x5ba>
   87494:	9a03      	ldr	r2, [sp, #12]
   87496:	f7ff bbff 	b.w	86c98 <_dtoa_r+0x430>
   8749a:	4620      	mov	r0, r4
   8749c:	6871      	ldr	r1, [r6, #4]
   8749e:	f001 fa73 	bl	88988 <_Balloc>
   874a2:	4607      	mov	r7, r0
   874a4:	2800      	cmp	r0, #0
   874a6:	f000 810c 	beq.w	876c2 <_dtoa_r+0xe5a>
   874aa:	6933      	ldr	r3, [r6, #16]
   874ac:	f106 010c 	add.w	r1, r6, #12
   874b0:	3302      	adds	r3, #2
   874b2:	009a      	lsls	r2, r3, #2
   874b4:	300c      	adds	r0, #12
   874b6:	f7fc f9ff 	bl	838b8 <memcpy>
   874ba:	4639      	mov	r1, r7
   874bc:	2201      	movs	r2, #1
   874be:	4620      	mov	r0, r4
   874c0:	f001 fc68 	bl	88d94 <__lshift>
   874c4:	4680      	mov	r8, r0
   874c6:	e610      	b.n	870ea <_dtoa_r+0x882>
   874c8:	4629      	mov	r1, r5
   874ca:	4620      	mov	r0, r4
   874cc:	f001 fc06 	bl	88cdc <__pow5mult>
   874d0:	4605      	mov	r5, r0
   874d2:	e51e      	b.n	86f12 <_dtoa_r+0x6aa>
   874d4:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
   874d8:	1a9f      	subs	r7, r3, r2
   874da:	e4c2      	b.n	86e62 <_dtoa_r+0x5fa>
   874dc:	2b39      	cmp	r3, #57	; 0x39
   874de:	f000 80ae 	beq.w	8763e <_dtoa_r+0xdd6>
   874e2:	46ba      	mov	sl, r7
   874e4:	3301      	adds	r3, #1
   874e6:	e7b2      	b.n	8744e <_dtoa_r+0xbe6>
   874e8:	9a07      	ldr	r2, [sp, #28]
   874ea:	4637      	mov	r7, r6
   874ec:	3201      	adds	r2, #1
   874ee:	4646      	mov	r6, r8
   874f0:	9207      	str	r2, [sp, #28]
   874f2:	e577      	b.n	86fe4 <_dtoa_r+0x77c>
   874f4:	0008a978 	.word	0x0008a978
   874f8:	7ff00000 	.word	0x7ff00000
   874fc:	0008aad8 	.word	0x0008aad8
   87500:	0008aab0 	.word	0x0008aab0
   87504:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
   87508:	4983      	ldr	r1, [pc, #524]	; (87718 <_dtoa_r+0xeb0>)
   8750a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   8750e:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
   87512:	e951 0102 	ldrd	r0, r1, [r1, #-8]
   87516:	f002 fcff 	bl	89f18 <__aeabi_dmul>
   8751a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8751e:	4649      	mov	r1, r9
   87520:	4640      	mov	r0, r8
   87522:	f002 ffa9 	bl	8a478 <__aeabi_d2iz>
   87526:	4606      	mov	r6, r0
   87528:	f002 fc8c 	bl	89e44 <__aeabi_i2d>
   8752c:	460b      	mov	r3, r1
   8752e:	4602      	mov	r2, r0
   87530:	4649      	mov	r1, r9
   87532:	4640      	mov	r0, r8
   87534:	f002 fb38 	bl	89ba8 <__aeabi_dsub>
   87538:	4653      	mov	r3, sl
   8753a:	9f03      	ldr	r7, [sp, #12]
   8753c:	3630      	adds	r6, #48	; 0x30
   8753e:	2b01      	cmp	r3, #1
   87540:	4680      	mov	r8, r0
   87542:	4689      	mov	r9, r1
   87544:	f807 6b01 	strb.w	r6, [r7], #1
   87548:	f000 80ac 	beq.w	876a4 <_dtoa_r+0xe3c>
   8754c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
   8754e:	9b03      	ldr	r3, [sp, #12]
   87550:	441e      	add	r6, r3
   87552:	2200      	movs	r2, #0
   87554:	4b71      	ldr	r3, [pc, #452]	; (8771c <_dtoa_r+0xeb4>)
   87556:	4640      	mov	r0, r8
   87558:	4649      	mov	r1, r9
   8755a:	f002 fcdd 	bl	89f18 <__aeabi_dmul>
   8755e:	4689      	mov	r9, r1
   87560:	4680      	mov	r8, r0
   87562:	f002 ff89 	bl	8a478 <__aeabi_d2iz>
   87566:	4682      	mov	sl, r0
   87568:	f002 fc6c 	bl	89e44 <__aeabi_i2d>
   8756c:	4602      	mov	r2, r0
   8756e:	460b      	mov	r3, r1
   87570:	4640      	mov	r0, r8
   87572:	4649      	mov	r1, r9
   87574:	f002 fb18 	bl	89ba8 <__aeabi_dsub>
   87578:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
   8757c:	f807 ab01 	strb.w	sl, [r7], #1
   87580:	42b7      	cmp	r7, r6
   87582:	4680      	mov	r8, r0
   87584:	4689      	mov	r9, r1
   87586:	d1e4      	bne.n	87552 <_dtoa_r+0xcea>
   87588:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   8758c:	2200      	movs	r2, #0
   8758e:	4b64      	ldr	r3, [pc, #400]	; (87720 <_dtoa_r+0xeb8>)
   87590:	f002 fb0c 	bl	89bac <__adddf3>
   87594:	4642      	mov	r2, r8
   87596:	464b      	mov	r3, r9
   87598:	f002 ff30 	bl	8a3fc <__aeabi_dcmplt>
   8759c:	2800      	cmp	r0, #0
   8759e:	d162      	bne.n	87666 <_dtoa_r+0xdfe>
   875a0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
   875a4:	2000      	movs	r0, #0
   875a6:	495e      	ldr	r1, [pc, #376]	; (87720 <_dtoa_r+0xeb8>)
   875a8:	f002 fafe 	bl	89ba8 <__aeabi_dsub>
   875ac:	4642      	mov	r2, r8
   875ae:	464b      	mov	r3, r9
   875b0:	f002 ff42 	bl	8a438 <__aeabi_dcmpgt>
   875b4:	2800      	cmp	r0, #0
   875b6:	f43f aba9 	beq.w	86d0c <_dtoa_r+0x4a4>
   875ba:	f816 3c01 	ldrb.w	r3, [r6, #-1]
   875be:	46b2      	mov	sl, r6
   875c0:	2b30      	cmp	r3, #48	; 0x30
   875c2:	f106 36ff 	add.w	r6, r6, #4294967295
   875c6:	d0f8      	beq.n	875ba <_dtoa_r+0xd52>
   875c8:	9b14      	ldr	r3, [sp, #80]	; 0x50
   875ca:	3301      	adds	r3, #1
   875cc:	9307      	str	r3, [sp, #28]
   875ce:	e538      	b.n	87042 <_dtoa_r+0x7da>
   875d0:	9b16      	ldr	r3, [sp, #88]	; 0x58
   875d2:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   875d6:	e6d5      	b.n	87384 <_dtoa_r+0xb1c>
   875d8:	f04f 0a02 	mov.w	sl, #2
   875dc:	e9dd 890a 	ldrd	r8, r9, [sp, #40]	; 0x28
   875e0:	f7ff bac0 	b.w	86b64 <_dtoa_r+0x2fc>
   875e4:	9b08      	ldr	r3, [sp, #32]
   875e6:	2b00      	cmp	r3, #0
   875e8:	f43f ab62 	beq.w	86cb0 <_dtoa_r+0x448>
   875ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
   875ee:	2b00      	cmp	r3, #0
   875f0:	f77f ab8c 	ble.w	86d0c <_dtoa_r+0x4a4>
   875f4:	9313      	str	r3, [sp, #76]	; 0x4c
   875f6:	9b07      	ldr	r3, [sp, #28]
   875f8:	2200      	movs	r2, #0
   875fa:	3b01      	subs	r3, #1
   875fc:	4640      	mov	r0, r8
   875fe:	4649      	mov	r1, r9
   87600:	9314      	str	r3, [sp, #80]	; 0x50
   87602:	4b46      	ldr	r3, [pc, #280]	; (8771c <_dtoa_r+0xeb4>)
   87604:	f002 fc88 	bl	89f18 <__aeabi_dmul>
   87608:	4680      	mov	r8, r0
   8760a:	4689      	mov	r9, r1
   8760c:	f10a 0001 	add.w	r0, sl, #1
   87610:	f002 fc18 	bl	89e44 <__aeabi_i2d>
   87614:	4642      	mov	r2, r8
   87616:	464b      	mov	r3, r9
   87618:	f002 fc7e 	bl	89f18 <__aeabi_dmul>
   8761c:	4b41      	ldr	r3, [pc, #260]	; (87724 <_dtoa_r+0xebc>)
   8761e:	2200      	movs	r2, #0
   87620:	f002 fac4 	bl	89bac <__adddf3>
   87624:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
   87628:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8762c:	9311      	str	r3, [sp, #68]	; 0x44
   8762e:	f7ff babc 	b.w	86baa <_dtoa_r+0x342>
   87632:	9b07      	ldr	r3, [sp, #28]
   87634:	3301      	adds	r3, #1
   87636:	9307      	str	r3, [sp, #28]
   87638:	2331      	movs	r3, #49	; 0x31
   8763a:	f7ff bb34 	b.w	86ca6 <_dtoa_r+0x43e>
   8763e:	9b07      	ldr	r3, [sp, #28]
   87640:	46bb      	mov	fp, r7
   87642:	3301      	adds	r3, #1
   87644:	9307      	str	r3, [sp, #28]
   87646:	2339      	movs	r3, #57	; 0x39
   87648:	4637      	mov	r7, r6
   8764a:	f80b 3b01 	strb.w	r3, [fp], #1
   8764e:	4646      	mov	r6, r8
   87650:	e4d7      	b.n	87002 <_dtoa_r+0x79a>
   87652:	f04f 0900 	mov.w	r9, #0
   87656:	464e      	mov	r6, r9
   87658:	e649      	b.n	872ee <_dtoa_r+0xa86>
   8765a:	469a      	mov	sl, r3
   8765c:	e468      	b.n	86f30 <_dtoa_r+0x6c8>
   8765e:	9d10      	ldr	r5, [sp, #64]	; 0x40
   87660:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   87662:	46b2      	mov	sl, r6
   87664:	e7b0      	b.n	875c8 <_dtoa_r+0xd60>
   87666:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87668:	9a03      	ldr	r2, [sp, #12]
   8766a:	9307      	str	r3, [sp, #28]
   8766c:	f7ff bb14 	b.w	86c98 <_dtoa_r+0x430>
   87670:	f47f aeec 	bne.w	8744c <_dtoa_r+0xbe4>
   87674:	07da      	lsls	r2, r3, #31
   87676:	f57f aee9 	bpl.w	8744c <_dtoa_r+0xbe4>
   8767a:	e6e2      	b.n	87442 <_dtoa_r+0xbda>
   8767c:	f8dd b054 	ldr.w	fp, [sp, #84]	; 0x54
   87680:	9d10      	ldr	r5, [sp, #64]	; 0x40
   87682:	9c13      	ldr	r4, [sp, #76]	; 0x4c
   87684:	f7ff bb42 	b.w	86d0c <_dtoa_r+0x4a4>
   87688:	2b39      	cmp	r3, #57	; 0x39
   8768a:	d0d8      	beq.n	8763e <_dtoa_r+0xdd6>
   8768c:	f1ba 0f00 	cmp.w	sl, #0
   87690:	f73f aeda 	bgt.w	87448 <_dtoa_r+0xbe0>
   87694:	e6da      	b.n	8744c <_dtoa_r+0xbe4>
   87696:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87698:	2b02      	cmp	r3, #2
   8769a:	f73f ae13 	bgt.w	872c4 <_dtoa_r+0xa5c>
   8769e:	f8cd 801c 	str.w	r8, [sp, #28]
   876a2:	e59c      	b.n	871de <_dtoa_r+0x976>
   876a4:	463e      	mov	r6, r7
   876a6:	e76f      	b.n	87588 <_dtoa_r+0xd20>
   876a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   876aa:	2b02      	cmp	r3, #2
   876ac:	f73f ae0a 	bgt.w	872c4 <_dtoa_r+0xa5c>
   876b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
   876b2:	f8cd 801c 	str.w	r8, [sp, #28]
   876b6:	9308      	str	r3, [sp, #32]
   876b8:	e50f      	b.n	870da <_dtoa_r+0x872>
   876ba:	f04f 0a02 	mov.w	sl, #2
   876be:	f7ff ba51 	b.w	86b64 <_dtoa_r+0x2fc>
   876c2:	4602      	mov	r2, r0
   876c4:	f240 21ea 	movw	r1, #746	; 0x2ea
   876c8:	4b17      	ldr	r3, [pc, #92]	; (87728 <_dtoa_r+0xec0>)
   876ca:	4818      	ldr	r0, [pc, #96]	; (8772c <_dtoa_r+0xec4>)
   876cc:	f002 f8dc 	bl	89888 <__assert_func>
   876d0:	2600      	movs	r6, #0
   876d2:	4620      	mov	r0, r4
   876d4:	4631      	mov	r1, r6
   876d6:	6466      	str	r6, [r4, #68]	; 0x44
   876d8:	f001 f956 	bl	88988 <_Balloc>
   876dc:	9003      	str	r0, [sp, #12]
   876de:	b978      	cbnz	r0, 87700 <_dtoa_r+0xe98>
   876e0:	2200      	movs	r2, #0
   876e2:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
   876e6:	4b10      	ldr	r3, [pc, #64]	; (87728 <_dtoa_r+0xec0>)
   876e8:	4810      	ldr	r0, [pc, #64]	; (8772c <_dtoa_r+0xec4>)
   876ea:	f002 f8cd 	bl	89888 <__assert_func>
   876ee:	4b10      	ldr	r3, [pc, #64]	; (87730 <_dtoa_r+0xec8>)
   876f0:	9303      	str	r3, [sp, #12]
   876f2:	f7ff b8f4 	b.w	868de <_dtoa_r+0x76>
   876f6:	f43f ac33 	beq.w	86f60 <_dtoa_r+0x6f8>
   876fa:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   876fe:	e4b5      	b.n	8706c <_dtoa_r+0x804>
   87700:	9b03      	ldr	r3, [sp, #12]
   87702:	2201      	movs	r2, #1
   87704:	6423      	str	r3, [r4, #64]	; 0x40
   87706:	f04f 33ff 	mov.w	r3, #4294967295
   8770a:	9623      	str	r6, [sp, #140]	; 0x8c
   8770c:	9312      	str	r3, [sp, #72]	; 0x48
   8770e:	920c      	str	r2, [sp, #48]	; 0x30
   87710:	9308      	str	r3, [sp, #32]
   87712:	f7ff bafb 	b.w	86d0c <_dtoa_r+0x4a4>
   87716:	bf00      	nop
   87718:	0008aad8 	.word	0x0008aad8
   8771c:	40240000 	.word	0x40240000
   87720:	3fe00000 	.word	0x3fe00000
   87724:	401c0000 	.word	0x401c0000
   87728:	0008a988 	.word	0x0008a988
   8772c:	0008a99c 	.word	0x0008a99c
   87730:	0008a97c 	.word	0x0008a97c

00087734 <__sflush_r>:
   87734:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
   87738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8773a:	460c      	mov	r4, r1
   8773c:	0711      	lsls	r1, r2, #28
   8773e:	4607      	mov	r7, r0
   87740:	d443      	bmi.n	877ca <__sflush_r+0x96>
   87742:	6863      	ldr	r3, [r4, #4]
   87744:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
   87748:	2b00      	cmp	r3, #0
   8774a:	81a2      	strh	r2, [r4, #12]
   8774c:	dd5b      	ble.n	87806 <__sflush_r+0xd2>
   8774e:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   87750:	2d00      	cmp	r5, #0
   87752:	d056      	beq.n	87802 <__sflush_r+0xce>
   87754:	2300      	movs	r3, #0
   87756:	683e      	ldr	r6, [r7, #0]
   87758:	603b      	str	r3, [r7, #0]
   8775a:	b293      	uxth	r3, r2
   8775c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
   87760:	d155      	bne.n	8780e <__sflush_r+0xda>
   87762:	2301      	movs	r3, #1
   87764:	4638      	mov	r0, r7
   87766:	69e1      	ldr	r1, [r4, #28]
   87768:	47a8      	blx	r5
   8776a:	1c42      	adds	r2, r0, #1
   8776c:	d065      	beq.n	8783a <__sflush_r+0x106>
   8776e:	89a3      	ldrh	r3, [r4, #12]
   87770:	6aa5      	ldr	r5, [r4, #40]	; 0x28
   87772:	075b      	lsls	r3, r3, #29
   87774:	d505      	bpl.n	87782 <__sflush_r+0x4e>
   87776:	6863      	ldr	r3, [r4, #4]
   87778:	1ac0      	subs	r0, r0, r3
   8777a:	6b23      	ldr	r3, [r4, #48]	; 0x30
   8777c:	b10b      	cbz	r3, 87782 <__sflush_r+0x4e>
   8777e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   87780:	1ac0      	subs	r0, r0, r3
   87782:	4602      	mov	r2, r0
   87784:	69e1      	ldr	r1, [r4, #28]
   87786:	2300      	movs	r3, #0
   87788:	4638      	mov	r0, r7
   8778a:	47a8      	blx	r5
   8778c:	1c41      	adds	r1, r0, #1
   8778e:	d140      	bne.n	87812 <__sflush_r+0xde>
   87790:	683b      	ldr	r3, [r7, #0]
   87792:	2b00      	cmp	r3, #0
   87794:	d03d      	beq.n	87812 <__sflush_r+0xde>
   87796:	2b1d      	cmp	r3, #29
   87798:	d001      	beq.n	8779e <__sflush_r+0x6a>
   8779a:	2b16      	cmp	r3, #22
   8779c:	d154      	bne.n	87848 <__sflush_r+0x114>
   8779e:	2200      	movs	r2, #0
   877a0:	89a3      	ldrh	r3, [r4, #12]
   877a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   877a6:	81a3      	strh	r3, [r4, #12]
   877a8:	6923      	ldr	r3, [r4, #16]
   877aa:	e9c4 3200 	strd	r3, r2, [r4]
   877ae:	6b21      	ldr	r1, [r4, #48]	; 0x30
   877b0:	603e      	str	r6, [r7, #0]
   877b2:	b331      	cbz	r1, 87802 <__sflush_r+0xce>
   877b4:	f104 0340 	add.w	r3, r4, #64	; 0x40
   877b8:	4299      	cmp	r1, r3
   877ba:	d002      	beq.n	877c2 <__sflush_r+0x8e>
   877bc:	4638      	mov	r0, r7
   877be:	f000 f9fb 	bl	87bb8 <_free_r>
   877c2:	2300      	movs	r3, #0
   877c4:	4618      	mov	r0, r3
   877c6:	6323      	str	r3, [r4, #48]	; 0x30
   877c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   877ca:	6926      	ldr	r6, [r4, #16]
   877cc:	b1ce      	cbz	r6, 87802 <__sflush_r+0xce>
   877ce:	b293      	uxth	r3, r2
   877d0:	079a      	lsls	r2, r3, #30
   877d2:	bf18      	it	ne
   877d4:	2300      	movne	r3, #0
   877d6:	6825      	ldr	r5, [r4, #0]
   877d8:	bf08      	it	eq
   877da:	6963      	ldreq	r3, [r4, #20]
   877dc:	6026      	str	r6, [r4, #0]
   877de:	1bad      	subs	r5, r5, r6
   877e0:	60a3      	str	r3, [r4, #8]
   877e2:	e00c      	b.n	877fe <__sflush_r+0xca>
   877e4:	462b      	mov	r3, r5
   877e6:	4632      	mov	r2, r6
   877e8:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   877ec:	4638      	mov	r0, r7
   877ee:	69e1      	ldr	r1, [r4, #28]
   877f0:	47e0      	blx	ip
   877f2:	f1b0 0c00 	subs.w	ip, r0, #0
   877f6:	eba5 050c 	sub.w	r5, r5, ip
   877fa:	4466      	add	r6, ip
   877fc:	dd16      	ble.n	8782c <__sflush_r+0xf8>
   877fe:	2d00      	cmp	r5, #0
   87800:	dcf0      	bgt.n	877e4 <__sflush_r+0xb0>
   87802:	2000      	movs	r0, #0
   87804:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87806:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   87808:	2b00      	cmp	r3, #0
   8780a:	dca0      	bgt.n	8774e <__sflush_r+0x1a>
   8780c:	e7f9      	b.n	87802 <__sflush_r+0xce>
   8780e:	6d20      	ldr	r0, [r4, #80]	; 0x50
   87810:	e7af      	b.n	87772 <__sflush_r+0x3e>
   87812:	2200      	movs	r2, #0
   87814:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87818:	6062      	str	r2, [r4, #4]
   8781a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   8781e:	6922      	ldr	r2, [r4, #16]
   87820:	81a3      	strh	r3, [r4, #12]
   87822:	04db      	lsls	r3, r3, #19
   87824:	6022      	str	r2, [r4, #0]
   87826:	d5c2      	bpl.n	877ae <__sflush_r+0x7a>
   87828:	6520      	str	r0, [r4, #80]	; 0x50
   8782a:	e7c0      	b.n	877ae <__sflush_r+0x7a>
   8782c:	89a3      	ldrh	r3, [r4, #12]
   8782e:	f04f 30ff 	mov.w	r0, #4294967295
   87832:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87836:	81a3      	strh	r3, [r4, #12]
   87838:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8783a:	683b      	ldr	r3, [r7, #0]
   8783c:	2b00      	cmp	r3, #0
   8783e:	d096      	beq.n	8776e <__sflush_r+0x3a>
   87840:	2b1d      	cmp	r3, #29
   87842:	d006      	beq.n	87852 <__sflush_r+0x11e>
   87844:	2b16      	cmp	r3, #22
   87846:	d004      	beq.n	87852 <__sflush_r+0x11e>
   87848:	89a3      	ldrh	r3, [r4, #12]
   8784a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   8784e:	81a3      	strh	r3, [r4, #12]
   87850:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87852:	2000      	movs	r0, #0
   87854:	603e      	str	r6, [r7, #0]
   87856:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00087858 <_fflush_r>:
   87858:	b538      	push	{r3, r4, r5, lr}
   8785a:	4605      	mov	r5, r0
   8785c:	460c      	mov	r4, r1
   8785e:	b108      	cbz	r0, 87864 <_fflush_r+0xc>
   87860:	6b83      	ldr	r3, [r0, #56]	; 0x38
   87862:	b1a3      	cbz	r3, 8788e <_fflush_r+0x36>
   87864:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87868:	b1b8      	cbz	r0, 8789a <_fflush_r+0x42>
   8786a:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8786c:	07db      	lsls	r3, r3, #31
   8786e:	d401      	bmi.n	87874 <_fflush_r+0x1c>
   87870:	0581      	lsls	r1, r0, #22
   87872:	d515      	bpl.n	878a0 <_fflush_r+0x48>
   87874:	4628      	mov	r0, r5
   87876:	4621      	mov	r1, r4
   87878:	f7ff ff5c 	bl	87734 <__sflush_r>
   8787c:	6e63      	ldr	r3, [r4, #100]	; 0x64
   8787e:	4605      	mov	r5, r0
   87880:	07da      	lsls	r2, r3, #31
   87882:	d402      	bmi.n	8788a <_fflush_r+0x32>
   87884:	89a3      	ldrh	r3, [r4, #12]
   87886:	059b      	lsls	r3, r3, #22
   87888:	d50e      	bpl.n	878a8 <_fflush_r+0x50>
   8788a:	4628      	mov	r0, r5
   8788c:	bd38      	pop	{r3, r4, r5, pc}
   8788e:	f000 f817 	bl	878c0 <__sinit>
   87892:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87896:	2800      	cmp	r0, #0
   87898:	d1e7      	bne.n	8786a <_fflush_r+0x12>
   8789a:	4605      	mov	r5, r0
   8789c:	4628      	mov	r0, r5
   8789e:	bd38      	pop	{r3, r4, r5, pc}
   878a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
   878a2:	f000 fc33 	bl	8810c <__retarget_lock_acquire_recursive>
   878a6:	e7e5      	b.n	87874 <_fflush_r+0x1c>
   878a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   878aa:	f000 fc31 	bl	88110 <__retarget_lock_release_recursive>
   878ae:	4628      	mov	r0, r5
   878b0:	bd38      	pop	{r3, r4, r5, pc}
   878b2:	bf00      	nop

000878b4 <_cleanup_r>:
   878b4:	4901      	ldr	r1, [pc, #4]	; (878bc <_cleanup_r+0x8>)
   878b6:	f000 bbf7 	b.w	880a8 <_fwalk_reent>
   878ba:	bf00      	nop
   878bc:	00089971 	.word	0x00089971

000878c0 <__sinit>:
   878c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   878c4:	4682      	mov	sl, r0
   878c6:	4839      	ldr	r0, [pc, #228]	; (879ac <__sinit+0xec>)
   878c8:	f000 fc20 	bl	8810c <__retarget_lock_acquire_recursive>
   878cc:	f8da 4038 	ldr.w	r4, [sl, #56]	; 0x38
   878d0:	2c00      	cmp	r4, #0
   878d2:	d166      	bne.n	879a2 <__sinit+0xe2>
   878d4:	2304      	movs	r3, #4
   878d6:	2203      	movs	r2, #3
   878d8:	4935      	ldr	r1, [pc, #212]	; (879b0 <__sinit+0xf0>)
   878da:	f8da 5004 	ldr.w	r5, [sl, #4]
   878de:	f8ca 103c 	str.w	r1, [sl, #60]	; 0x3c
   878e2:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 879b4 <__sinit+0xf4>
   878e6:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 879b8 <__sinit+0xf8>
   878ea:	4f34      	ldr	r7, [pc, #208]	; (879bc <__sinit+0xfc>)
   878ec:	4e34      	ldr	r6, [pc, #208]	; (879c0 <__sinit+0x100>)
   878ee:	f50a 713b 	add.w	r1, sl, #748	; 0x2ec
   878f2:	e9ca 21b9 	strd	r2, r1, [sl, #740]	; 0x2e4
   878f6:	f8ca 42e0 	str.w	r4, [sl, #736]	; 0x2e0
   878fa:	4621      	mov	r1, r4
   878fc:	60eb      	str	r3, [r5, #12]
   878fe:	2208      	movs	r2, #8
   87900:	e9c5 4400 	strd	r4, r4, [r5]
   87904:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87908:	666c      	str	r4, [r5, #100]	; 0x64
   8790a:	60ac      	str	r4, [r5, #8]
   8790c:	61ac      	str	r4, [r5, #24]
   8790e:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   87912:	f7fc f847 	bl	839a4 <memset>
   87916:	e9c5 5907 	strd	r5, r9, [r5, #28]
   8791a:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   8791e:	62ee      	str	r6, [r5, #44]	; 0x2c
   87920:	f105 0058 	add.w	r0, r5, #88	; 0x58
   87924:	f000 fbee 	bl	88104 <__retarget_lock_init_recursive>
   87928:	f8da 5008 	ldr.w	r5, [sl, #8]
   8792c:	4b25      	ldr	r3, [pc, #148]	; (879c4 <__sinit+0x104>)
   8792e:	4621      	mov	r1, r4
   87930:	60eb      	str	r3, [r5, #12]
   87932:	2208      	movs	r2, #8
   87934:	e9c5 4400 	strd	r4, r4, [r5]
   87938:	e9c5 4404 	strd	r4, r4, [r5, #16]
   8793c:	666c      	str	r4, [r5, #100]	; 0x64
   8793e:	60ac      	str	r4, [r5, #8]
   87940:	61ac      	str	r4, [r5, #24]
   87942:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   87946:	f7fc f82d 	bl	839a4 <memset>
   8794a:	e9c5 5907 	strd	r5, r9, [r5, #28]
   8794e:	e9c5 8709 	strd	r8, r7, [r5, #36]	; 0x24
   87952:	62ee      	str	r6, [r5, #44]	; 0x2c
   87954:	f105 0058 	add.w	r0, r5, #88	; 0x58
   87958:	f000 fbd4 	bl	88104 <__retarget_lock_init_recursive>
   8795c:	f8da 500c 	ldr.w	r5, [sl, #12]
   87960:	4b19      	ldr	r3, [pc, #100]	; (879c8 <__sinit+0x108>)
   87962:	4621      	mov	r1, r4
   87964:	60eb      	str	r3, [r5, #12]
   87966:	2208      	movs	r2, #8
   87968:	e9c5 4400 	strd	r4, r4, [r5]
   8796c:	e9c5 4404 	strd	r4, r4, [r5, #16]
   87970:	666c      	str	r4, [r5, #100]	; 0x64
   87972:	60ac      	str	r4, [r5, #8]
   87974:	61ac      	str	r4, [r5, #24]
   87976:	f105 005c 	add.w	r0, r5, #92	; 0x5c
   8797a:	f7fc f813 	bl	839a4 <memset>
   8797e:	f105 0058 	add.w	r0, r5, #88	; 0x58
   87982:	e9c5 5907 	strd	r5, r9, [r5, #28]
   87986:	e9c5 760a 	strd	r7, r6, [r5, #40]	; 0x28
   8798a:	f8c5 8024 	str.w	r8, [r5, #36]	; 0x24
   8798e:	f000 fbb9 	bl	88104 <__retarget_lock_init_recursive>
   87992:	2301      	movs	r3, #1
   87994:	4805      	ldr	r0, [pc, #20]	; (879ac <__sinit+0xec>)
   87996:	f8ca 3038 	str.w	r3, [sl, #56]	; 0x38
   8799a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8799e:	f000 bbb7 	b.w	88110 <__retarget_lock_release_recursive>
   879a2:	4802      	ldr	r0, [pc, #8]	; (879ac <__sinit+0xec>)
   879a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   879a8:	f000 bbb2 	b.w	88110 <__retarget_lock_release_recursive>
   879ac:	20003728 	.word	0x20003728
   879b0:	000878b5 	.word	0x000878b5
   879b4:	00089541 	.word	0x00089541
   879b8:	00089565 	.word	0x00089565
   879bc:	000895a5 	.word	0x000895a5
   879c0:	000895c5 	.word	0x000895c5
   879c4:	00010009 	.word	0x00010009
   879c8:	00020012 	.word	0x00020012

000879cc <__sfp_lock_acquire>:
   879cc:	4801      	ldr	r0, [pc, #4]	; (879d4 <__sfp_lock_acquire+0x8>)
   879ce:	f000 bb9d 	b.w	8810c <__retarget_lock_acquire_recursive>
   879d2:	bf00      	nop
   879d4:	20003724 	.word	0x20003724

000879d8 <__sfp_lock_release>:
   879d8:	4801      	ldr	r0, [pc, #4]	; (879e0 <__sfp_lock_release+0x8>)
   879da:	f000 bb99 	b.w	88110 <__retarget_lock_release_recursive>
   879de:	bf00      	nop
   879e0:	20003724 	.word	0x20003724

000879e4 <__libc_fini_array>:
   879e4:	b538      	push	{r3, r4, r5, lr}
   879e6:	4b08      	ldr	r3, [pc, #32]	; (87a08 <__libc_fini_array+0x24>)
   879e8:	4d08      	ldr	r5, [pc, #32]	; (87a0c <__libc_fini_array+0x28>)
   879ea:	1b5b      	subs	r3, r3, r5
   879ec:	109c      	asrs	r4, r3, #2
   879ee:	d007      	beq.n	87a00 <__libc_fini_array+0x1c>
   879f0:	3b04      	subs	r3, #4
   879f2:	441d      	add	r5, r3
   879f4:	3c01      	subs	r4, #1
   879f6:	f855 3904 	ldr.w	r3, [r5], #-4
   879fa:	4798      	blx	r3
   879fc:	2c00      	cmp	r4, #0
   879fe:	d1f9      	bne.n	879f4 <__libc_fini_array+0x10>
   87a00:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   87a04:	f003 b97e 	b.w	8ad04 <_fini>
   87a08:	0008ad14 	.word	0x0008ad14
   87a0c:	0008ad10 	.word	0x0008ad10

00087a10 <__fputwc>:
   87a10:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   87a14:	b083      	sub	sp, #12
   87a16:	4607      	mov	r7, r0
   87a18:	4688      	mov	r8, r1
   87a1a:	4614      	mov	r4, r2
   87a1c:	f000 fb68 	bl	880f0 <__locale_mb_cur_max>
   87a20:	2801      	cmp	r0, #1
   87a22:	d103      	bne.n	87a2c <__fputwc+0x1c>
   87a24:	f108 33ff 	add.w	r3, r8, #4294967295
   87a28:	2bfe      	cmp	r3, #254	; 0xfe
   87a2a:	d933      	bls.n	87a94 <__fputwc+0x84>
   87a2c:	4642      	mov	r2, r8
   87a2e:	4638      	mov	r0, r7
   87a30:	f104 035c 	add.w	r3, r4, #92	; 0x5c
   87a34:	a901      	add	r1, sp, #4
   87a36:	f001 fe9f 	bl	89778 <_wcrtomb_r>
   87a3a:	1c42      	adds	r2, r0, #1
   87a3c:	4606      	mov	r6, r0
   87a3e:	d02f      	beq.n	87aa0 <__fputwc+0x90>
   87a40:	b318      	cbz	r0, 87a8a <__fputwc+0x7a>
   87a42:	f89d 1004 	ldrb.w	r1, [sp, #4]
   87a46:	2500      	movs	r5, #0
   87a48:	f10d 0905 	add.w	r9, sp, #5
   87a4c:	e008      	b.n	87a60 <__fputwc+0x50>
   87a4e:	6823      	ldr	r3, [r4, #0]
   87a50:	1c5a      	adds	r2, r3, #1
   87a52:	6022      	str	r2, [r4, #0]
   87a54:	7019      	strb	r1, [r3, #0]
   87a56:	3501      	adds	r5, #1
   87a58:	42b5      	cmp	r5, r6
   87a5a:	d216      	bcs.n	87a8a <__fputwc+0x7a>
   87a5c:	f819 1b01 	ldrb.w	r1, [r9], #1
   87a60:	68a3      	ldr	r3, [r4, #8]
   87a62:	3b01      	subs	r3, #1
   87a64:	2b00      	cmp	r3, #0
   87a66:	60a3      	str	r3, [r4, #8]
   87a68:	daf1      	bge.n	87a4e <__fputwc+0x3e>
   87a6a:	69a2      	ldr	r2, [r4, #24]
   87a6c:	4293      	cmp	r3, r2
   87a6e:	db01      	blt.n	87a74 <__fputwc+0x64>
   87a70:	290a      	cmp	r1, #10
   87a72:	d1ec      	bne.n	87a4e <__fputwc+0x3e>
   87a74:	4622      	mov	r2, r4
   87a76:	4638      	mov	r0, r7
   87a78:	f001 fe26 	bl	896c8 <__swbuf_r>
   87a7c:	1c43      	adds	r3, r0, #1
   87a7e:	d1ea      	bne.n	87a56 <__fputwc+0x46>
   87a80:	4606      	mov	r6, r0
   87a82:	4630      	mov	r0, r6
   87a84:	b003      	add	sp, #12
   87a86:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   87a8a:	4646      	mov	r6, r8
   87a8c:	4630      	mov	r0, r6
   87a8e:	b003      	add	sp, #12
   87a90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   87a94:	fa5f f188 	uxtb.w	r1, r8
   87a98:	4606      	mov	r6, r0
   87a9a:	f88d 1004 	strb.w	r1, [sp, #4]
   87a9e:	e7d2      	b.n	87a46 <__fputwc+0x36>
   87aa0:	4630      	mov	r0, r6
   87aa2:	89a3      	ldrh	r3, [r4, #12]
   87aa4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87aa8:	81a3      	strh	r3, [r4, #12]
   87aaa:	b003      	add	sp, #12
   87aac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

00087ab0 <_fputwc_r>:
   87ab0:	b530      	push	{r4, r5, lr}
   87ab2:	6e53      	ldr	r3, [r2, #100]	; 0x64
   87ab4:	4614      	mov	r4, r2
   87ab6:	f013 0f01 	tst.w	r3, #1
   87aba:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
   87abe:	4605      	mov	r5, r0
   87ac0:	b083      	sub	sp, #12
   87ac2:	b29a      	uxth	r2, r3
   87ac4:	d101      	bne.n	87aca <_fputwc_r+0x1a>
   87ac6:	0598      	lsls	r0, r3, #22
   87ac8:	d51c      	bpl.n	87b04 <_fputwc_r+0x54>
   87aca:	0490      	lsls	r0, r2, #18
   87acc:	d406      	bmi.n	87adc <_fputwc_r+0x2c>
   87ace:	6e62      	ldr	r2, [r4, #100]	; 0x64
   87ad0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
   87ad4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   87ad8:	81a3      	strh	r3, [r4, #12]
   87ada:	6662      	str	r2, [r4, #100]	; 0x64
   87adc:	4622      	mov	r2, r4
   87ade:	4628      	mov	r0, r5
   87ae0:	f7ff ff96 	bl	87a10 <__fputwc>
   87ae4:	6e63      	ldr	r3, [r4, #100]	; 0x64
   87ae6:	4605      	mov	r5, r0
   87ae8:	07da      	lsls	r2, r3, #31
   87aea:	d402      	bmi.n	87af2 <_fputwc_r+0x42>
   87aec:	89a3      	ldrh	r3, [r4, #12]
   87aee:	059b      	lsls	r3, r3, #22
   87af0:	d502      	bpl.n	87af8 <_fputwc_r+0x48>
   87af2:	4628      	mov	r0, r5
   87af4:	b003      	add	sp, #12
   87af6:	bd30      	pop	{r4, r5, pc}
   87af8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   87afa:	f000 fb09 	bl	88110 <__retarget_lock_release_recursive>
   87afe:	4628      	mov	r0, r5
   87b00:	b003      	add	sp, #12
   87b02:	bd30      	pop	{r4, r5, pc}
   87b04:	6da0      	ldr	r0, [r4, #88]	; 0x58
   87b06:	9101      	str	r1, [sp, #4]
   87b08:	f000 fb00 	bl	8810c <__retarget_lock_acquire_recursive>
   87b0c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87b10:	9901      	ldr	r1, [sp, #4]
   87b12:	b29a      	uxth	r2, r3
   87b14:	e7d9      	b.n	87aca <_fputwc_r+0x1a>
   87b16:	bf00      	nop

00087b18 <_malloc_trim_r>:
   87b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87b1a:	460c      	mov	r4, r1
   87b1c:	4f23      	ldr	r7, [pc, #140]	; (87bac <_malloc_trim_r+0x94>)
   87b1e:	4606      	mov	r6, r0
   87b20:	f000 ff26 	bl	88970 <__malloc_lock>
   87b24:	68bb      	ldr	r3, [r7, #8]
   87b26:	685d      	ldr	r5, [r3, #4]
   87b28:	f5c4 637e 	rsb	r3, r4, #4064	; 0xfe0
   87b2c:	f025 0503 	bic.w	r5, r5, #3
   87b30:	330f      	adds	r3, #15
   87b32:	442b      	add	r3, r5
   87b34:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
   87b38:	f023 030f 	bic.w	r3, r3, #15
   87b3c:	f5a3 5480 	sub.w	r4, r3, #4096	; 0x1000
   87b40:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   87b44:	db07      	blt.n	87b56 <_malloc_trim_r+0x3e>
   87b46:	2100      	movs	r1, #0
   87b48:	4630      	mov	r0, r6
   87b4a:	f001 fce7 	bl	8951c <_sbrk_r>
   87b4e:	68bb      	ldr	r3, [r7, #8]
   87b50:	442b      	add	r3, r5
   87b52:	4298      	cmp	r0, r3
   87b54:	d004      	beq.n	87b60 <_malloc_trim_r+0x48>
   87b56:	4630      	mov	r0, r6
   87b58:	f000 ff10 	bl	8897c <__malloc_unlock>
   87b5c:	2000      	movs	r0, #0
   87b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87b60:	4630      	mov	r0, r6
   87b62:	4261      	negs	r1, r4
   87b64:	f001 fcda 	bl	8951c <_sbrk_r>
   87b68:	3001      	adds	r0, #1
   87b6a:	d00d      	beq.n	87b88 <_malloc_trim_r+0x70>
   87b6c:	4a10      	ldr	r2, [pc, #64]	; (87bb0 <_malloc_trim_r+0x98>)
   87b6e:	68bb      	ldr	r3, [r7, #8]
   87b70:	1b2d      	subs	r5, r5, r4
   87b72:	f045 0501 	orr.w	r5, r5, #1
   87b76:	605d      	str	r5, [r3, #4]
   87b78:	6813      	ldr	r3, [r2, #0]
   87b7a:	4630      	mov	r0, r6
   87b7c:	1b1b      	subs	r3, r3, r4
   87b7e:	6013      	str	r3, [r2, #0]
   87b80:	f000 fefc 	bl	8897c <__malloc_unlock>
   87b84:	2001      	movs	r0, #1
   87b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87b88:	2100      	movs	r1, #0
   87b8a:	4630      	mov	r0, r6
   87b8c:	f001 fcc6 	bl	8951c <_sbrk_r>
   87b90:	68ba      	ldr	r2, [r7, #8]
   87b92:	1a83      	subs	r3, r0, r2
   87b94:	2b0f      	cmp	r3, #15
   87b96:	ddde      	ble.n	87b56 <_malloc_trim_r+0x3e>
   87b98:	f043 0301 	orr.w	r3, r3, #1
   87b9c:	6053      	str	r3, [r2, #4]
   87b9e:	4b05      	ldr	r3, [pc, #20]	; (87bb4 <_malloc_trim_r+0x9c>)
   87ba0:	4903      	ldr	r1, [pc, #12]	; (87bb0 <_malloc_trim_r+0x98>)
   87ba2:	681b      	ldr	r3, [r3, #0]
   87ba4:	1ac0      	subs	r0, r0, r3
   87ba6:	6008      	str	r0, [r1, #0]
   87ba8:	e7d5      	b.n	87b56 <_malloc_trim_r+0x3e>
   87baa:	bf00      	nop
   87bac:	20000998 	.word	0x20000998
   87bb0:	2000372c 	.word	0x2000372c
   87bb4:	20000da0 	.word	0x20000da0

00087bb8 <_free_r>:
   87bb8:	2900      	cmp	r1, #0
   87bba:	d05e      	beq.n	87c7a <_free_r+0xc2>
   87bbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87bbe:	460c      	mov	r4, r1
   87bc0:	4606      	mov	r6, r0
   87bc2:	f000 fed5 	bl	88970 <__malloc_lock>
   87bc6:	f854 2c04 	ldr.w	r2, [r4, #-4]
   87bca:	4f78      	ldr	r7, [pc, #480]	; (87dac <_free_r+0x1f4>)
   87bcc:	f1a4 0508 	sub.w	r5, r4, #8
   87bd0:	f022 0101 	bic.w	r1, r2, #1
   87bd4:	1868      	adds	r0, r5, r1
   87bd6:	f8d7 c008 	ldr.w	ip, [r7, #8]
   87bda:	6843      	ldr	r3, [r0, #4]
   87bdc:	4584      	cmp	ip, r0
   87bde:	f023 0303 	bic.w	r3, r3, #3
   87be2:	f000 8087 	beq.w	87cf4 <_free_r+0x13c>
   87be6:	07d2      	lsls	r2, r2, #31
   87be8:	6043      	str	r3, [r0, #4]
   87bea:	d434      	bmi.n	87c56 <_free_r+0x9e>
   87bec:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87bf0:	f107 0408 	add.w	r4, r7, #8
   87bf4:	1aad      	subs	r5, r5, r2
   87bf6:	4411      	add	r1, r2
   87bf8:	68aa      	ldr	r2, [r5, #8]
   87bfa:	42a2      	cmp	r2, r4
   87bfc:	d068      	beq.n	87cd0 <_free_r+0x118>
   87bfe:	eb00 0c03 	add.w	ip, r0, r3
   87c02:	f8dc e004 	ldr.w	lr, [ip, #4]
   87c06:	f8d5 c00c 	ldr.w	ip, [r5, #12]
   87c0a:	f01e 0f01 	tst.w	lr, #1
   87c0e:	f8c2 c00c 	str.w	ip, [r2, #12]
   87c12:	f8cc 2008 	str.w	r2, [ip, #8]
   87c16:	f000 8091 	beq.w	87d3c <_free_r+0x184>
   87c1a:	f041 0301 	orr.w	r3, r1, #1
   87c1e:	606b      	str	r3, [r5, #4]
   87c20:	6001      	str	r1, [r0, #0]
   87c22:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   87c26:	d231      	bcs.n	87c8c <_free_r+0xd4>
   87c28:	094a      	lsrs	r2, r1, #5
   87c2a:	08cb      	lsrs	r3, r1, #3
   87c2c:	2101      	movs	r1, #1
   87c2e:	4091      	lsls	r1, r2
   87c30:	687a      	ldr	r2, [r7, #4]
   87c32:	3301      	adds	r3, #1
   87c34:	4311      	orrs	r1, r2
   87c36:	6079      	str	r1, [r7, #4]
   87c38:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
   87c3c:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
   87c40:	3a08      	subs	r2, #8
   87c42:	e9c5 1202 	strd	r1, r2, [r5, #8]
   87c46:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
   87c4a:	60cd      	str	r5, [r1, #12]
   87c4c:	4630      	mov	r0, r6
   87c4e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87c52:	f000 be93 	b.w	8897c <__malloc_unlock>
   87c56:	18c2      	adds	r2, r0, r3
   87c58:	6852      	ldr	r2, [r2, #4]
   87c5a:	07d2      	lsls	r2, r2, #31
   87c5c:	d40e      	bmi.n	87c7c <_free_r+0xc4>
   87c5e:	4419      	add	r1, r3
   87c60:	f107 0408 	add.w	r4, r7, #8
   87c64:	6883      	ldr	r3, [r0, #8]
   87c66:	42a3      	cmp	r3, r4
   87c68:	d070      	beq.n	87d4c <_free_r+0x194>
   87c6a:	68c2      	ldr	r2, [r0, #12]
   87c6c:	60da      	str	r2, [r3, #12]
   87c6e:	6093      	str	r3, [r2, #8]
   87c70:	f041 0301 	orr.w	r3, r1, #1
   87c74:	606b      	str	r3, [r5, #4]
   87c76:	5069      	str	r1, [r5, r1]
   87c78:	e7d3      	b.n	87c22 <_free_r+0x6a>
   87c7a:	4770      	bx	lr
   87c7c:	f041 0301 	orr.w	r3, r1, #1
   87c80:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   87c84:	f844 3c04 	str.w	r3, [r4, #-4]
   87c88:	6001      	str	r1, [r0, #0]
   87c8a:	d3cd      	bcc.n	87c28 <_free_r+0x70>
   87c8c:	f5b1 6f20 	cmp.w	r1, #2560	; 0xa00
   87c90:	ea4f 2351 	mov.w	r3, r1, lsr #9
   87c94:	d247      	bcs.n	87d26 <_free_r+0x16e>
   87c96:	098b      	lsrs	r3, r1, #6
   87c98:	f103 0039 	add.w	r0, r3, #57	; 0x39
   87c9c:	f103 0238 	add.w	r2, r3, #56	; 0x38
   87ca0:	00c3      	lsls	r3, r0, #3
   87ca2:	18f8      	adds	r0, r7, r3
   87ca4:	58fb      	ldr	r3, [r7, r3]
   87ca6:	3808      	subs	r0, #8
   87ca8:	4298      	cmp	r0, r3
   87caa:	d058      	beq.n	87d5e <_free_r+0x1a6>
   87cac:	685a      	ldr	r2, [r3, #4]
   87cae:	f022 0203 	bic.w	r2, r2, #3
   87cb2:	428a      	cmp	r2, r1
   87cb4:	d902      	bls.n	87cbc <_free_r+0x104>
   87cb6:	689b      	ldr	r3, [r3, #8]
   87cb8:	4298      	cmp	r0, r3
   87cba:	d1f7      	bne.n	87cac <_free_r+0xf4>
   87cbc:	68d8      	ldr	r0, [r3, #12]
   87cbe:	e9c5 3002 	strd	r3, r0, [r5, #8]
   87cc2:	6085      	str	r5, [r0, #8]
   87cc4:	4630      	mov	r0, r6
   87cc6:	60dd      	str	r5, [r3, #12]
   87cc8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87ccc:	f000 be56 	b.w	8897c <__malloc_unlock>
   87cd0:	18c2      	adds	r2, r0, r3
   87cd2:	6852      	ldr	r2, [r2, #4]
   87cd4:	07d2      	lsls	r2, r2, #31
   87cd6:	d463      	bmi.n	87da0 <_free_r+0x1e8>
   87cd8:	440b      	add	r3, r1
   87cda:	e9d0 1202 	ldrd	r1, r2, [r0, #8]
   87cde:	60ca      	str	r2, [r1, #12]
   87ce0:	6091      	str	r1, [r2, #8]
   87ce2:	f043 0201 	orr.w	r2, r3, #1
   87ce6:	606a      	str	r2, [r5, #4]
   87ce8:	4630      	mov	r0, r6
   87cea:	50eb      	str	r3, [r5, r3]
   87cec:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87cf0:	f000 be44 	b.w	8897c <__malloc_unlock>
   87cf4:	440b      	add	r3, r1
   87cf6:	07d1      	lsls	r1, r2, #31
   87cf8:	d407      	bmi.n	87d0a <_free_r+0x152>
   87cfa:	f854 2c08 	ldr.w	r2, [r4, #-8]
   87cfe:	1aad      	subs	r5, r5, r2
   87d00:	4413      	add	r3, r2
   87d02:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
   87d06:	60ca      	str	r2, [r1, #12]
   87d08:	6091      	str	r1, [r2, #8]
   87d0a:	f043 0201 	orr.w	r2, r3, #1
   87d0e:	606a      	str	r2, [r5, #4]
   87d10:	4a27      	ldr	r2, [pc, #156]	; (87db0 <_free_r+0x1f8>)
   87d12:	60bd      	str	r5, [r7, #8]
   87d14:	6812      	ldr	r2, [r2, #0]
   87d16:	429a      	cmp	r2, r3
   87d18:	d898      	bhi.n	87c4c <_free_r+0x94>
   87d1a:	4b26      	ldr	r3, [pc, #152]	; (87db4 <_free_r+0x1fc>)
   87d1c:	4630      	mov	r0, r6
   87d1e:	6819      	ldr	r1, [r3, #0]
   87d20:	f7ff fefa 	bl	87b18 <_malloc_trim_r>
   87d24:	e792      	b.n	87c4c <_free_r+0x94>
   87d26:	2b14      	cmp	r3, #20
   87d28:	d90a      	bls.n	87d40 <_free_r+0x188>
   87d2a:	2b54      	cmp	r3, #84	; 0x54
   87d2c:	d81f      	bhi.n	87d6e <_free_r+0x1b6>
   87d2e:	0b0b      	lsrs	r3, r1, #12
   87d30:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   87d34:	f103 026e 	add.w	r2, r3, #110	; 0x6e
   87d38:	00c3      	lsls	r3, r0, #3
   87d3a:	e7b2      	b.n	87ca2 <_free_r+0xea>
   87d3c:	4419      	add	r1, r3
   87d3e:	e791      	b.n	87c64 <_free_r+0xac>
   87d40:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   87d44:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   87d48:	00c3      	lsls	r3, r0, #3
   87d4a:	e7aa      	b.n	87ca2 <_free_r+0xea>
   87d4c:	f041 0301 	orr.w	r3, r1, #1
   87d50:	e9c7 5504 	strd	r5, r5, [r7, #16]
   87d54:	e9c5 4402 	strd	r4, r4, [r5, #8]
   87d58:	606b      	str	r3, [r5, #4]
   87d5a:	5069      	str	r1, [r5, r1]
   87d5c:	e776      	b.n	87c4c <_free_r+0x94>
   87d5e:	2101      	movs	r1, #1
   87d60:	1092      	asrs	r2, r2, #2
   87d62:	fa01 f202 	lsl.w	r2, r1, r2
   87d66:	6879      	ldr	r1, [r7, #4]
   87d68:	430a      	orrs	r2, r1
   87d6a:	607a      	str	r2, [r7, #4]
   87d6c:	e7a7      	b.n	87cbe <_free_r+0x106>
   87d6e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   87d72:	d806      	bhi.n	87d82 <_free_r+0x1ca>
   87d74:	0bcb      	lsrs	r3, r1, #15
   87d76:	f103 0078 	add.w	r0, r3, #120	; 0x78
   87d7a:	f103 0277 	add.w	r2, r3, #119	; 0x77
   87d7e:	00c3      	lsls	r3, r0, #3
   87d80:	e78f      	b.n	87ca2 <_free_r+0xea>
   87d82:	f240 5254 	movw	r2, #1364	; 0x554
   87d86:	4293      	cmp	r3, r2
   87d88:	d806      	bhi.n	87d98 <_free_r+0x1e0>
   87d8a:	0c8b      	lsrs	r3, r1, #18
   87d8c:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   87d90:	f103 027c 	add.w	r2, r3, #124	; 0x7c
   87d94:	00c3      	lsls	r3, r0, #3
   87d96:	e784      	b.n	87ca2 <_free_r+0xea>
   87d98:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
   87d9c:	227e      	movs	r2, #126	; 0x7e
   87d9e:	e780      	b.n	87ca2 <_free_r+0xea>
   87da0:	f041 0301 	orr.w	r3, r1, #1
   87da4:	606b      	str	r3, [r5, #4]
   87da6:	6001      	str	r1, [r0, #0]
   87da8:	e750      	b.n	87c4c <_free_r+0x94>
   87daa:	bf00      	nop
   87dac:	20000998 	.word	0x20000998
   87db0:	20000da4 	.word	0x20000da4
   87db4:	2000375c 	.word	0x2000375c

00087db8 <__sfvwrite_r>:
   87db8:	6893      	ldr	r3, [r2, #8]
   87dba:	2b00      	cmp	r3, #0
   87dbc:	f000 80b7 	beq.w	87f2e <__sfvwrite_r+0x176>
   87dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87dc4:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
   87dc8:	460c      	mov	r4, r1
   87dca:	0719      	lsls	r1, r3, #28
   87dcc:	4680      	mov	r8, r0
   87dce:	4617      	mov	r7, r2
   87dd0:	b083      	sub	sp, #12
   87dd2:	b298      	uxth	r0, r3
   87dd4:	d525      	bpl.n	87e22 <__sfvwrite_r+0x6a>
   87dd6:	6923      	ldr	r3, [r4, #16]
   87dd8:	b31b      	cbz	r3, 87e22 <__sfvwrite_r+0x6a>
   87dda:	f010 0302 	ands.w	r3, r0, #2
   87dde:	683d      	ldr	r5, [r7, #0]
   87de0:	d02d      	beq.n	87e3e <__sfvwrite_r+0x86>
   87de2:	f04f 0b00 	mov.w	fp, #0
   87de6:	465e      	mov	r6, fp
   87de8:	f8df a2b8 	ldr.w	sl, [pc, #696]	; 880a4 <__sfvwrite_r+0x2ec>
   87dec:	2e00      	cmp	r6, #0
   87dee:	f000 808b 	beq.w	87f08 <__sfvwrite_r+0x150>
   87df2:	4556      	cmp	r6, sl
   87df4:	4633      	mov	r3, r6
   87df6:	465a      	mov	r2, fp
   87df8:	bf28      	it	cs
   87dfa:	4653      	movcs	r3, sl
   87dfc:	4640      	mov	r0, r8
   87dfe:	69e1      	ldr	r1, [r4, #28]
   87e00:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87e04:	47e0      	blx	ip
   87e06:	2800      	cmp	r0, #0
   87e08:	f340 8087 	ble.w	87f1a <__sfvwrite_r+0x162>
   87e0c:	68bb      	ldr	r3, [r7, #8]
   87e0e:	4483      	add	fp, r0
   87e10:	1a1b      	subs	r3, r3, r0
   87e12:	1a36      	subs	r6, r6, r0
   87e14:	60bb      	str	r3, [r7, #8]
   87e16:	2b00      	cmp	r3, #0
   87e18:	d1e8      	bne.n	87dec <__sfvwrite_r+0x34>
   87e1a:	2000      	movs	r0, #0
   87e1c:	b003      	add	sp, #12
   87e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87e22:	4621      	mov	r1, r4
   87e24:	4640      	mov	r0, r8
   87e26:	f7fe fc0f 	bl	86648 <__swsetup_r>
   87e2a:	2800      	cmp	r0, #0
   87e2c:	f040 8136 	bne.w	8809c <__sfvwrite_r+0x2e4>
   87e30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87e34:	683d      	ldr	r5, [r7, #0]
   87e36:	b298      	uxth	r0, r3
   87e38:	f010 0302 	ands.w	r3, r0, #2
   87e3c:	d1d1      	bne.n	87de2 <__sfvwrite_r+0x2a>
   87e3e:	f010 0901 	ands.w	r9, r0, #1
   87e42:	d176      	bne.n	87f32 <__sfvwrite_r+0x17a>
   87e44:	464e      	mov	r6, r9
   87e46:	2e00      	cmp	r6, #0
   87e48:	d05a      	beq.n	87f00 <__sfvwrite_r+0x148>
   87e4a:	0582      	lsls	r2, r0, #22
   87e4c:	f8d4 b008 	ldr.w	fp, [r4, #8]
   87e50:	f140 80b5 	bpl.w	87fbe <__sfvwrite_r+0x206>
   87e54:	45b3      	cmp	fp, r6
   87e56:	465a      	mov	r2, fp
   87e58:	f200 80cd 	bhi.w	87ff6 <__sfvwrite_r+0x23e>
   87e5c:	f410 6f90 	tst.w	r0, #1152	; 0x480
   87e60:	f000 80cb 	beq.w	87ffa <__sfvwrite_r+0x242>
   87e64:	6823      	ldr	r3, [r4, #0]
   87e66:	6921      	ldr	r1, [r4, #16]
   87e68:	eba3 0b01 	sub.w	fp, r3, r1
   87e6c:	6963      	ldr	r3, [r4, #20]
   87e6e:	eb03 0a43 	add.w	sl, r3, r3, lsl #1
   87e72:	eb0a 7ada 	add.w	sl, sl, sl, lsr #31
   87e76:	f10b 0301 	add.w	r3, fp, #1
   87e7a:	ea4f 0a6a 	mov.w	sl, sl, asr #1
   87e7e:	4433      	add	r3, r6
   87e80:	4553      	cmp	r3, sl
   87e82:	4652      	mov	r2, sl
   87e84:	bf84      	itt	hi
   87e86:	469a      	movhi	sl, r3
   87e88:	4652      	movhi	r2, sl
   87e8a:	0543      	lsls	r3, r0, #21
   87e8c:	f140 80ea 	bpl.w	88064 <__sfvwrite_r+0x2ac>
   87e90:	4611      	mov	r1, r2
   87e92:	4640      	mov	r0, r8
   87e94:	f000 f9e6 	bl	88264 <_malloc_r>
   87e98:	2800      	cmp	r0, #0
   87e9a:	f000 80f9 	beq.w	88090 <__sfvwrite_r+0x2d8>
   87e9e:	465a      	mov	r2, fp
   87ea0:	6921      	ldr	r1, [r4, #16]
   87ea2:	9001      	str	r0, [sp, #4]
   87ea4:	f7fb fd08 	bl	838b8 <memcpy>
   87ea8:	89a2      	ldrh	r2, [r4, #12]
   87eaa:	9b01      	ldr	r3, [sp, #4]
   87eac:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   87eb0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   87eb4:	81a2      	strh	r2, [r4, #12]
   87eb6:	eb03 000b 	add.w	r0, r3, fp
   87eba:	6123      	str	r3, [r4, #16]
   87ebc:	4632      	mov	r2, r6
   87ebe:	ebaa 030b 	sub.w	r3, sl, fp
   87ec2:	46b3      	mov	fp, r6
   87ec4:	f8c4 a014 	str.w	sl, [r4, #20]
   87ec8:	60a3      	str	r3, [r4, #8]
   87eca:	6020      	str	r0, [r4, #0]
   87ecc:	46b2      	mov	sl, r6
   87ece:	2600      	movs	r6, #0
   87ed0:	4649      	mov	r1, r9
   87ed2:	9201      	str	r2, [sp, #4]
   87ed4:	f000 fcd0 	bl	88878 <memmove>
   87ed8:	68a3      	ldr	r3, [r4, #8]
   87eda:	6821      	ldr	r1, [r4, #0]
   87edc:	9a01      	ldr	r2, [sp, #4]
   87ede:	eba3 030b 	sub.w	r3, r3, fp
   87ee2:	440a      	add	r2, r1
   87ee4:	60a3      	str	r3, [r4, #8]
   87ee6:	6022      	str	r2, [r4, #0]
   87ee8:	68b8      	ldr	r0, [r7, #8]
   87eea:	44d1      	add	r9, sl
   87eec:	eba0 000a 	sub.w	r0, r0, sl
   87ef0:	60b8      	str	r0, [r7, #8]
   87ef2:	2800      	cmp	r0, #0
   87ef4:	d091      	beq.n	87e1a <__sfvwrite_r+0x62>
   87ef6:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
   87efa:	b280      	uxth	r0, r0
   87efc:	2e00      	cmp	r6, #0
   87efe:	d1a4      	bne.n	87e4a <__sfvwrite_r+0x92>
   87f00:	e9d5 9600 	ldrd	r9, r6, [r5]
   87f04:	3508      	adds	r5, #8
   87f06:	e79e      	b.n	87e46 <__sfvwrite_r+0x8e>
   87f08:	e9d5 b600 	ldrd	fp, r6, [r5]
   87f0c:	3508      	adds	r5, #8
   87f0e:	e76d      	b.n	87dec <__sfvwrite_r+0x34>
   87f10:	4621      	mov	r1, r4
   87f12:	4640      	mov	r0, r8
   87f14:	f7ff fca0 	bl	87858 <_fflush_r>
   87f18:	b380      	cbz	r0, 87f7c <__sfvwrite_r+0x1c4>
   87f1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   87f1e:	f04f 30ff 	mov.w	r0, #4294967295
   87f22:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   87f26:	81a3      	strh	r3, [r4, #12]
   87f28:	b003      	add	sp, #12
   87f2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87f2e:	2000      	movs	r0, #0
   87f30:	4770      	bx	lr
   87f32:	461e      	mov	r6, r3
   87f34:	46aa      	mov	sl, r5
   87f36:	4699      	mov	r9, r3
   87f38:	4618      	mov	r0, r3
   87f3a:	461d      	mov	r5, r3
   87f3c:	b356      	cbz	r6, 87f94 <__sfvwrite_r+0x1dc>
   87f3e:	2800      	cmp	r0, #0
   87f40:	d032      	beq.n	87fa8 <__sfvwrite_r+0x1f0>
   87f42:	464a      	mov	r2, r9
   87f44:	6820      	ldr	r0, [r4, #0]
   87f46:	6921      	ldr	r1, [r4, #16]
   87f48:	42b2      	cmp	r2, r6
   87f4a:	bf28      	it	cs
   87f4c:	4632      	movcs	r2, r6
   87f4e:	4288      	cmp	r0, r1
   87f50:	6963      	ldr	r3, [r4, #20]
   87f52:	d904      	bls.n	87f5e <__sfvwrite_r+0x1a6>
   87f54:	68a1      	ldr	r1, [r4, #8]
   87f56:	eb03 0b01 	add.w	fp, r3, r1
   87f5a:	455a      	cmp	r2, fp
   87f5c:	dc74      	bgt.n	88048 <__sfvwrite_r+0x290>
   87f5e:	4293      	cmp	r3, r2
   87f60:	dc65      	bgt.n	8802e <__sfvwrite_r+0x276>
   87f62:	462a      	mov	r2, r5
   87f64:	4640      	mov	r0, r8
   87f66:	69e1      	ldr	r1, [r4, #28]
   87f68:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87f6c:	47e0      	blx	ip
   87f6e:	f1b0 0b00 	subs.w	fp, r0, #0
   87f72:	ddd2      	ble.n	87f1a <__sfvwrite_r+0x162>
   87f74:	ebb9 090b 	subs.w	r9, r9, fp
   87f78:	d0ca      	beq.n	87f10 <__sfvwrite_r+0x158>
   87f7a:	2001      	movs	r0, #1
   87f7c:	68bb      	ldr	r3, [r7, #8]
   87f7e:	445d      	add	r5, fp
   87f80:	eba3 030b 	sub.w	r3, r3, fp
   87f84:	eba6 060b 	sub.w	r6, r6, fp
   87f88:	60bb      	str	r3, [r7, #8]
   87f8a:	2b00      	cmp	r3, #0
   87f8c:	f43f af45 	beq.w	87e1a <__sfvwrite_r+0x62>
   87f90:	2e00      	cmp	r6, #0
   87f92:	d1d4      	bne.n	87f3e <__sfvwrite_r+0x186>
   87f94:	f10a 0308 	add.w	r3, sl, #8
   87f98:	f853 6c04 	ldr.w	r6, [r3, #-4]
   87f9c:	469a      	mov	sl, r3
   87f9e:	f853 5c08 	ldr.w	r5, [r3, #-8]
   87fa2:	3308      	adds	r3, #8
   87fa4:	2e00      	cmp	r6, #0
   87fa6:	d0f7      	beq.n	87f98 <__sfvwrite_r+0x1e0>
   87fa8:	4632      	mov	r2, r6
   87faa:	210a      	movs	r1, #10
   87fac:	4628      	mov	r0, r5
   87fae:	f000 fc1b 	bl	887e8 <memchr>
   87fb2:	2800      	cmp	r0, #0
   87fb4:	d069      	beq.n	8808a <__sfvwrite_r+0x2d2>
   87fb6:	3001      	adds	r0, #1
   87fb8:	eba0 0905 	sub.w	r9, r0, r5
   87fbc:	e7c1      	b.n	87f42 <__sfvwrite_r+0x18a>
   87fbe:	6820      	ldr	r0, [r4, #0]
   87fc0:	6923      	ldr	r3, [r4, #16]
   87fc2:	4298      	cmp	r0, r3
   87fc4:	d81b      	bhi.n	87ffe <__sfvwrite_r+0x246>
   87fc6:	6963      	ldr	r3, [r4, #20]
   87fc8:	42b3      	cmp	r3, r6
   87fca:	d818      	bhi.n	87ffe <__sfvwrite_r+0x246>
   87fcc:	f06f 4c00 	mvn.w	ip, #2147483648	; 0x80000000
   87fd0:	45b4      	cmp	ip, r6
   87fd2:	bf28      	it	cs
   87fd4:	46b4      	movcs	ip, r6
   87fd6:	fb9c fcf3 	sdiv	ip, ip, r3
   87fda:	464a      	mov	r2, r9
   87fdc:	fb03 f30c 	mul.w	r3, r3, ip
   87fe0:	4640      	mov	r0, r8
   87fe2:	69e1      	ldr	r1, [r4, #28]
   87fe4:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
   87fe8:	47e0      	blx	ip
   87fea:	f1b0 0a00 	subs.w	sl, r0, #0
   87fee:	dd94      	ble.n	87f1a <__sfvwrite_r+0x162>
   87ff0:	eba6 060a 	sub.w	r6, r6, sl
   87ff4:	e778      	b.n	87ee8 <__sfvwrite_r+0x130>
   87ff6:	46b3      	mov	fp, r6
   87ff8:	4632      	mov	r2, r6
   87ffa:	6820      	ldr	r0, [r4, #0]
   87ffc:	e766      	b.n	87ecc <__sfvwrite_r+0x114>
   87ffe:	45b3      	cmp	fp, r6
   88000:	46da      	mov	sl, fp
   88002:	bf28      	it	cs
   88004:	46b2      	movcs	sl, r6
   88006:	4649      	mov	r1, r9
   88008:	4652      	mov	r2, sl
   8800a:	f000 fc35 	bl	88878 <memmove>
   8800e:	68a3      	ldr	r3, [r4, #8]
   88010:	6822      	ldr	r2, [r4, #0]
   88012:	eba3 030a 	sub.w	r3, r3, sl
   88016:	4452      	add	r2, sl
   88018:	60a3      	str	r3, [r4, #8]
   8801a:	6022      	str	r2, [r4, #0]
   8801c:	2b00      	cmp	r3, #0
   8801e:	d1e7      	bne.n	87ff0 <__sfvwrite_r+0x238>
   88020:	4621      	mov	r1, r4
   88022:	4640      	mov	r0, r8
   88024:	f7ff fc18 	bl	87858 <_fflush_r>
   88028:	2800      	cmp	r0, #0
   8802a:	d0e1      	beq.n	87ff0 <__sfvwrite_r+0x238>
   8802c:	e775      	b.n	87f1a <__sfvwrite_r+0x162>
   8802e:	4629      	mov	r1, r5
   88030:	4693      	mov	fp, r2
   88032:	9201      	str	r2, [sp, #4]
   88034:	f000 fc20 	bl	88878 <memmove>
   88038:	68a3      	ldr	r3, [r4, #8]
   8803a:	9a01      	ldr	r2, [sp, #4]
   8803c:	1a9b      	subs	r3, r3, r2
   8803e:	60a3      	str	r3, [r4, #8]
   88040:	6823      	ldr	r3, [r4, #0]
   88042:	441a      	add	r2, r3
   88044:	6022      	str	r2, [r4, #0]
   88046:	e795      	b.n	87f74 <__sfvwrite_r+0x1bc>
   88048:	4629      	mov	r1, r5
   8804a:	465a      	mov	r2, fp
   8804c:	f000 fc14 	bl	88878 <memmove>
   88050:	6823      	ldr	r3, [r4, #0]
   88052:	4621      	mov	r1, r4
   88054:	445b      	add	r3, fp
   88056:	4640      	mov	r0, r8
   88058:	6023      	str	r3, [r4, #0]
   8805a:	f7ff fbfd 	bl	87858 <_fflush_r>
   8805e:	2800      	cmp	r0, #0
   88060:	d088      	beq.n	87f74 <__sfvwrite_r+0x1bc>
   88062:	e75a      	b.n	87f1a <__sfvwrite_r+0x162>
   88064:	4640      	mov	r0, r8
   88066:	f001 f833 	bl	890d0 <_realloc_r>
   8806a:	4603      	mov	r3, r0
   8806c:	2800      	cmp	r0, #0
   8806e:	f47f af22 	bne.w	87eb6 <__sfvwrite_r+0xfe>
   88072:	4640      	mov	r0, r8
   88074:	6921      	ldr	r1, [r4, #16]
   88076:	f7ff fd9f 	bl	87bb8 <_free_r>
   8807a:	220c      	movs	r2, #12
   8807c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   88080:	f8c8 2000 	str.w	r2, [r8]
   88084:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   88088:	e749      	b.n	87f1e <__sfvwrite_r+0x166>
   8808a:	1c72      	adds	r2, r6, #1
   8808c:	4691      	mov	r9, r2
   8808e:	e759      	b.n	87f44 <__sfvwrite_r+0x18c>
   88090:	220c      	movs	r2, #12
   88092:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   88096:	f8c8 2000 	str.w	r2, [r8]
   8809a:	e740      	b.n	87f1e <__sfvwrite_r+0x166>
   8809c:	f04f 30ff 	mov.w	r0, #4294967295
   880a0:	e6bc      	b.n	87e1c <__sfvwrite_r+0x64>
   880a2:	bf00      	nop
   880a4:	7ffffc00 	.word	0x7ffffc00

000880a8 <_fwalk_reent>:
   880a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   880ac:	f04f 0900 	mov.w	r9, #0
   880b0:	4607      	mov	r7, r0
   880b2:	4688      	mov	r8, r1
   880b4:	f500 7638 	add.w	r6, r0, #736	; 0x2e0
   880b8:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
   880bc:	3d01      	subs	r5, #1
   880be:	d410      	bmi.n	880e2 <_fwalk_reent+0x3a>
   880c0:	89a3      	ldrh	r3, [r4, #12]
   880c2:	3d01      	subs	r5, #1
   880c4:	2b01      	cmp	r3, #1
   880c6:	d908      	bls.n	880da <_fwalk_reent+0x32>
   880c8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
   880cc:	3301      	adds	r3, #1
   880ce:	d004      	beq.n	880da <_fwalk_reent+0x32>
   880d0:	4621      	mov	r1, r4
   880d2:	4638      	mov	r0, r7
   880d4:	47c0      	blx	r8
   880d6:	ea49 0900 	orr.w	r9, r9, r0
   880da:	1c6b      	adds	r3, r5, #1
   880dc:	f104 0468 	add.w	r4, r4, #104	; 0x68
   880e0:	d1ee      	bne.n	880c0 <_fwalk_reent+0x18>
   880e2:	6836      	ldr	r6, [r6, #0]
   880e4:	2e00      	cmp	r6, #0
   880e6:	d1e7      	bne.n	880b8 <_fwalk_reent+0x10>
   880e8:	4648      	mov	r0, r9
   880ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   880ee:	bf00      	nop

000880f0 <__locale_mb_cur_max>:
   880f0:	4b01      	ldr	r3, [pc, #4]	; (880f8 <__locale_mb_cur_max+0x8>)
   880f2:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
   880f6:	4770      	bx	lr
   880f8:	2000082c 	.word	0x2000082c

000880fc <_localeconv_r>:
   880fc:	4800      	ldr	r0, [pc, #0]	; (88100 <_localeconv_r+0x4>)
   880fe:	4770      	bx	lr
   88100:	2000091c 	.word	0x2000091c

00088104 <__retarget_lock_init_recursive>:
   88104:	4770      	bx	lr
   88106:	bf00      	nop

00088108 <__retarget_lock_close_recursive>:
   88108:	4770      	bx	lr
   8810a:	bf00      	nop

0008810c <__retarget_lock_acquire_recursive>:
   8810c:	4770      	bx	lr
   8810e:	bf00      	nop

00088110 <__retarget_lock_release_recursive>:
   88110:	4770      	bx	lr
   88112:	bf00      	nop

00088114 <__smakebuf_r>:
   88114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88118:	898b      	ldrh	r3, [r1, #12]
   8811a:	460c      	mov	r4, r1
   8811c:	0799      	lsls	r1, r3, #30
   8811e:	b096      	sub	sp, #88	; 0x58
   88120:	d508      	bpl.n	88134 <__smakebuf_r+0x20>
   88122:	2201      	movs	r2, #1
   88124:	f104 0343 	add.w	r3, r4, #67	; 0x43
   88128:	e9c4 3204 	strd	r3, r2, [r4, #16]
   8812c:	6023      	str	r3, [r4, #0]
   8812e:	b016      	add	sp, #88	; 0x58
   88130:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88134:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   88138:	4606      	mov	r6, r0
   8813a:	2900      	cmp	r1, #0
   8813c:	db27      	blt.n	8818e <__smakebuf_r+0x7a>
   8813e:	466a      	mov	r2, sp
   88140:	f001 fc90 	bl	89a64 <_fstat_r>
   88144:	2800      	cmp	r0, #0
   88146:	db21      	blt.n	8818c <__smakebuf_r+0x78>
   88148:	9d01      	ldr	r5, [sp, #4]
   8814a:	f44f 6880 	mov.w	r8, #1024	; 0x400
   8814e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
   88152:	f5a5 5500 	sub.w	r5, r5, #8192	; 0x2000
   88156:	fab5 f585 	clz	r5, r5
   8815a:	f44f 6700 	mov.w	r7, #2048	; 0x800
   8815e:	096d      	lsrs	r5, r5, #5
   88160:	4641      	mov	r1, r8
   88162:	4630      	mov	r0, r6
   88164:	f000 f87e 	bl	88264 <_malloc_r>
   88168:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8816c:	b1f0      	cbz	r0, 881ac <__smakebuf_r+0x98>
   8816e:	4a20      	ldr	r2, [pc, #128]	; (881f0 <__smakebuf_r+0xdc>)
   88170:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   88174:	63f2      	str	r2, [r6, #60]	; 0x3c
   88176:	f8c4 8014 	str.w	r8, [r4, #20]
   8817a:	81a3      	strh	r3, [r4, #12]
   8817c:	6020      	str	r0, [r4, #0]
   8817e:	6120      	str	r0, [r4, #16]
   88180:	bb35      	cbnz	r5, 881d0 <__smakebuf_r+0xbc>
   88182:	433b      	orrs	r3, r7
   88184:	81a3      	strh	r3, [r4, #12]
   88186:	b016      	add	sp, #88	; 0x58
   88188:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8818c:	89a3      	ldrh	r3, [r4, #12]
   8818e:	f013 0580 	ands.w	r5, r3, #128	; 0x80
   88192:	d019      	beq.n	881c8 <__smakebuf_r+0xb4>
   88194:	f04f 0840 	mov.w	r8, #64	; 0x40
   88198:	4630      	mov	r0, r6
   8819a:	4641      	mov	r1, r8
   8819c:	2500      	movs	r5, #0
   8819e:	f000 f861 	bl	88264 <_malloc_r>
   881a2:	462f      	mov	r7, r5
   881a4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   881a8:	2800      	cmp	r0, #0
   881aa:	d1e0      	bne.n	8816e <__smakebuf_r+0x5a>
   881ac:	059a      	lsls	r2, r3, #22
   881ae:	d4be      	bmi.n	8812e <__smakebuf_r+0x1a>
   881b0:	2101      	movs	r1, #1
   881b2:	f023 0303 	bic.w	r3, r3, #3
   881b6:	f104 0243 	add.w	r2, r4, #67	; 0x43
   881ba:	f043 0302 	orr.w	r3, r3, #2
   881be:	e9c4 2104 	strd	r2, r1, [r4, #16]
   881c2:	81a3      	strh	r3, [r4, #12]
   881c4:	6022      	str	r2, [r4, #0]
   881c6:	e7b2      	b.n	8812e <__smakebuf_r+0x1a>
   881c8:	f44f 6880 	mov.w	r8, #1024	; 0x400
   881cc:	462f      	mov	r7, r5
   881ce:	e7c7      	b.n	88160 <__smakebuf_r+0x4c>
   881d0:	4630      	mov	r0, r6
   881d2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   881d6:	f001 fc59 	bl	89a8c <_isatty_r>
   881da:	b910      	cbnz	r0, 881e2 <__smakebuf_r+0xce>
   881dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   881e0:	e7cf      	b.n	88182 <__smakebuf_r+0x6e>
   881e2:	89a3      	ldrh	r3, [r4, #12]
   881e4:	f023 0303 	bic.w	r3, r3, #3
   881e8:	f043 0301 	orr.w	r3, r3, #1
   881ec:	b21b      	sxth	r3, r3
   881ee:	e7c8      	b.n	88182 <__smakebuf_r+0x6e>
   881f0:	000878b5 	.word	0x000878b5

000881f4 <__swhatbuf_r>:
   881f4:	b570      	push	{r4, r5, r6, lr}
   881f6:	460c      	mov	r4, r1
   881f8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   881fc:	4615      	mov	r5, r2
   881fe:	2900      	cmp	r1, #0
   88200:	461e      	mov	r6, r3
   88202:	b096      	sub	sp, #88	; 0x58
   88204:	db14      	blt.n	88230 <__swhatbuf_r+0x3c>
   88206:	466a      	mov	r2, sp
   88208:	f001 fc2c 	bl	89a64 <_fstat_r>
   8820c:	2800      	cmp	r0, #0
   8820e:	db0f      	blt.n	88230 <__swhatbuf_r+0x3c>
   88210:	9a01      	ldr	r2, [sp, #4]
   88212:	f44f 6380 	mov.w	r3, #1024	; 0x400
   88216:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
   8821a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
   8821e:	fab2 f282 	clz	r2, r2
   88222:	f44f 6000 	mov.w	r0, #2048	; 0x800
   88226:	0952      	lsrs	r2, r2, #5
   88228:	6032      	str	r2, [r6, #0]
   8822a:	602b      	str	r3, [r5, #0]
   8822c:	b016      	add	sp, #88	; 0x58
   8822e:	bd70      	pop	{r4, r5, r6, pc}
   88230:	2300      	movs	r3, #0
   88232:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   88236:	6033      	str	r3, [r6, #0]
   88238:	f011 0080 	ands.w	r0, r1, #128	; 0x80
   8823c:	d004      	beq.n	88248 <__swhatbuf_r+0x54>
   8823e:	2240      	movs	r2, #64	; 0x40
   88240:	4618      	mov	r0, r3
   88242:	602a      	str	r2, [r5, #0]
   88244:	b016      	add	sp, #88	; 0x58
   88246:	bd70      	pop	{r4, r5, r6, pc}
   88248:	f44f 6380 	mov.w	r3, #1024	; 0x400
   8824c:	602b      	str	r3, [r5, #0]
   8824e:	b016      	add	sp, #88	; 0x58
   88250:	bd70      	pop	{r4, r5, r6, pc}
   88252:	bf00      	nop

00088254 <malloc>:
   88254:	4b02      	ldr	r3, [pc, #8]	; (88260 <malloc+0xc>)
   88256:	4601      	mov	r1, r0
   88258:	6818      	ldr	r0, [r3, #0]
   8825a:	f000 b803 	b.w	88264 <_malloc_r>
   8825e:	bf00      	nop
   88260:	200003fc 	.word	0x200003fc

00088264 <_malloc_r>:
   88264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88268:	f101 050b 	add.w	r5, r1, #11
   8826c:	2d16      	cmp	r5, #22
   8826e:	4606      	mov	r6, r0
   88270:	b083      	sub	sp, #12
   88272:	d825      	bhi.n	882c0 <_malloc_r+0x5c>
   88274:	2910      	cmp	r1, #16
   88276:	f200 80b8 	bhi.w	883ea <_malloc_r+0x186>
   8827a:	f000 fb79 	bl	88970 <__malloc_lock>
   8827e:	2510      	movs	r5, #16
   88280:	2218      	movs	r2, #24
   88282:	f04f 0c02 	mov.w	ip, #2
   88286:	4fb5      	ldr	r7, [pc, #724]	; (8855c <_malloc_r+0x2f8>)
   88288:	443a      	add	r2, r7
   8828a:	6853      	ldr	r3, [r2, #4]
   8828c:	f1a2 0108 	sub.w	r1, r2, #8
   88290:	428b      	cmp	r3, r1
   88292:	f000 80b7 	beq.w	88404 <_malloc_r+0x1a0>
   88296:	685a      	ldr	r2, [r3, #4]
   88298:	68d9      	ldr	r1, [r3, #12]
   8829a:	f022 0203 	bic.w	r2, r2, #3
   8829e:	441a      	add	r2, r3
   882a0:	689c      	ldr	r4, [r3, #8]
   882a2:	4630      	mov	r0, r6
   882a4:	60e1      	str	r1, [r4, #12]
   882a6:	608c      	str	r4, [r1, #8]
   882a8:	6851      	ldr	r1, [r2, #4]
   882aa:	f103 0408 	add.w	r4, r3, #8
   882ae:	f041 0101 	orr.w	r1, r1, #1
   882b2:	6051      	str	r1, [r2, #4]
   882b4:	f000 fb62 	bl	8897c <__malloc_unlock>
   882b8:	4620      	mov	r0, r4
   882ba:	b003      	add	sp, #12
   882bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   882c0:	f035 0507 	bics.w	r5, r5, #7
   882c4:	f100 8091 	bmi.w	883ea <_malloc_r+0x186>
   882c8:	42a9      	cmp	r1, r5
   882ca:	f200 808e 	bhi.w	883ea <_malloc_r+0x186>
   882ce:	f000 fb4f 	bl	88970 <__malloc_lock>
   882d2:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   882d6:	f0c0 8194 	bcc.w	88602 <_malloc_r+0x39e>
   882da:	0a6b      	lsrs	r3, r5, #9
   882dc:	f000 808c 	beq.w	883f8 <_malloc_r+0x194>
   882e0:	2b04      	cmp	r3, #4
   882e2:	f200 816a 	bhi.w	885ba <_malloc_r+0x356>
   882e6:	09ab      	lsrs	r3, r5, #6
   882e8:	f103 0c39 	add.w	ip, r3, #57	; 0x39
   882ec:	f103 0438 	add.w	r4, r3, #56	; 0x38
   882f0:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   882f4:	4f99      	ldr	r7, [pc, #612]	; (8855c <_malloc_r+0x2f8>)
   882f6:	4438      	add	r0, r7
   882f8:	6843      	ldr	r3, [r0, #4]
   882fa:	3808      	subs	r0, #8
   882fc:	4298      	cmp	r0, r3
   882fe:	d106      	bne.n	8830e <_malloc_r+0xaa>
   88300:	e00c      	b.n	8831c <_malloc_r+0xb8>
   88302:	2900      	cmp	r1, #0
   88304:	f280 8126 	bge.w	88554 <_malloc_r+0x2f0>
   88308:	68db      	ldr	r3, [r3, #12]
   8830a:	4298      	cmp	r0, r3
   8830c:	d006      	beq.n	8831c <_malloc_r+0xb8>
   8830e:	685a      	ldr	r2, [r3, #4]
   88310:	f022 0203 	bic.w	r2, r2, #3
   88314:	1b51      	subs	r1, r2, r5
   88316:	290f      	cmp	r1, #15
   88318:	ddf3      	ble.n	88302 <_malloc_r+0x9e>
   8831a:	46a4      	mov	ip, r4
   8831c:	693c      	ldr	r4, [r7, #16]
   8831e:	f8df e240 	ldr.w	lr, [pc, #576]	; 88560 <_malloc_r+0x2fc>
   88322:	4574      	cmp	r4, lr
   88324:	d07a      	beq.n	8841c <_malloc_r+0x1b8>
   88326:	6862      	ldr	r2, [r4, #4]
   88328:	f022 0203 	bic.w	r2, r2, #3
   8832c:	1b53      	subs	r3, r2, r5
   8832e:	2b0f      	cmp	r3, #15
   88330:	f300 8176 	bgt.w	88620 <_malloc_r+0x3bc>
   88334:	2b00      	cmp	r3, #0
   88336:	e9c7 ee04 	strd	lr, lr, [r7, #16]
   8833a:	f280 8167 	bge.w	8860c <_malloc_r+0x3a8>
   8833e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
   88342:	f080 8119 	bcs.w	88578 <_malloc_r+0x314>
   88346:	2101      	movs	r1, #1
   88348:	08d3      	lsrs	r3, r2, #3
   8834a:	0952      	lsrs	r2, r2, #5
   8834c:	440b      	add	r3, r1
   8834e:	4091      	lsls	r1, r2
   88350:	687a      	ldr	r2, [r7, #4]
   88352:	f857 0033 	ldr.w	r0, [r7, r3, lsl #3]
   88356:	430a      	orrs	r2, r1
   88358:	eb07 01c3 	add.w	r1, r7, r3, lsl #3
   8835c:	3908      	subs	r1, #8
   8835e:	60a0      	str	r0, [r4, #8]
   88360:	60e1      	str	r1, [r4, #12]
   88362:	607a      	str	r2, [r7, #4]
   88364:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   88368:	60c4      	str	r4, [r0, #12]
   8836a:	2101      	movs	r1, #1
   8836c:	ea4f 03ac 	mov.w	r3, ip, asr #2
   88370:	4099      	lsls	r1, r3
   88372:	4291      	cmp	r1, r2
   88374:	d859      	bhi.n	8842a <_malloc_r+0x1c6>
   88376:	4211      	tst	r1, r2
   88378:	d106      	bne.n	88388 <_malloc_r+0x124>
   8837a:	f02c 0c03 	bic.w	ip, ip, #3
   8837e:	0049      	lsls	r1, r1, #1
   88380:	4211      	tst	r1, r2
   88382:	f10c 0c04 	add.w	ip, ip, #4
   88386:	d0fa      	beq.n	8837e <_malloc_r+0x11a>
   88388:	eb07 09cc 	add.w	r9, r7, ip, lsl #3
   8838c:	4648      	mov	r0, r9
   8838e:	4664      	mov	r4, ip
   88390:	f8d0 800c 	ldr.w	r8, [r0, #12]
   88394:	4540      	cmp	r0, r8
   88396:	d108      	bne.n	883aa <_malloc_r+0x146>
   88398:	e11c      	b.n	885d4 <_malloc_r+0x370>
   8839a:	2b00      	cmp	r3, #0
   8839c:	f280 8121 	bge.w	885e2 <_malloc_r+0x37e>
   883a0:	f8d8 800c 	ldr.w	r8, [r8, #12]
   883a4:	4540      	cmp	r0, r8
   883a6:	f000 8115 	beq.w	885d4 <_malloc_r+0x370>
   883aa:	f8d8 2004 	ldr.w	r2, [r8, #4]
   883ae:	f022 0203 	bic.w	r2, r2, #3
   883b2:	1b53      	subs	r3, r2, r5
   883b4:	2b0f      	cmp	r3, #15
   883b6:	ddf0      	ble.n	8839a <_malloc_r+0x136>
   883b8:	eb08 0105 	add.w	r1, r8, r5
   883bc:	f045 0501 	orr.w	r5, r5, #1
   883c0:	f8c8 5004 	str.w	r5, [r8, #4]
   883c4:	4630      	mov	r0, r6
   883c6:	e9d8 6402 	ldrd	r6, r4, [r8, #8]
   883ca:	60f4      	str	r4, [r6, #12]
   883cc:	60a6      	str	r6, [r4, #8]
   883ce:	f043 0401 	orr.w	r4, r3, #1
   883d2:	e9c7 1104 	strd	r1, r1, [r7, #16]
   883d6:	604c      	str	r4, [r1, #4]
   883d8:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   883dc:	f848 3002 	str.w	r3, [r8, r2]
   883e0:	f000 facc 	bl	8897c <__malloc_unlock>
   883e4:	f108 0408 	add.w	r4, r8, #8
   883e8:	e002      	b.n	883f0 <_malloc_r+0x18c>
   883ea:	230c      	movs	r3, #12
   883ec:	2400      	movs	r4, #0
   883ee:	6033      	str	r3, [r6, #0]
   883f0:	4620      	mov	r0, r4
   883f2:	b003      	add	sp, #12
   883f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   883f8:	f44f 7000 	mov.w	r0, #512	; 0x200
   883fc:	f04f 0c40 	mov.w	ip, #64	; 0x40
   88400:	243f      	movs	r4, #63	; 0x3f
   88402:	e777      	b.n	882f4 <_malloc_r+0x90>
   88404:	68d3      	ldr	r3, [r2, #12]
   88406:	429a      	cmp	r2, r3
   88408:	bf08      	it	eq
   8840a:	f10c 0c02 	addeq.w	ip, ip, #2
   8840e:	f47f af42 	bne.w	88296 <_malloc_r+0x32>
   88412:	693c      	ldr	r4, [r7, #16]
   88414:	f8df e148 	ldr.w	lr, [pc, #328]	; 88560 <_malloc_r+0x2fc>
   88418:	4574      	cmp	r4, lr
   8841a:	d184      	bne.n	88326 <_malloc_r+0xc2>
   8841c:	2101      	movs	r1, #1
   8841e:	687a      	ldr	r2, [r7, #4]
   88420:	ea4f 03ac 	mov.w	r3, ip, asr #2
   88424:	4099      	lsls	r1, r3
   88426:	4291      	cmp	r1, r2
   88428:	d9a5      	bls.n	88376 <_malloc_r+0x112>
   8842a:	68bc      	ldr	r4, [r7, #8]
   8842c:	6863      	ldr	r3, [r4, #4]
   8842e:	f023 0903 	bic.w	r9, r3, #3
   88432:	454d      	cmp	r5, r9
   88434:	d803      	bhi.n	8843e <_malloc_r+0x1da>
   88436:	eba9 0305 	sub.w	r3, r9, r5
   8843a:	2b0f      	cmp	r3, #15
   8843c:	dc7a      	bgt.n	88534 <_malloc_r+0x2d0>
   8843e:	f8df b124 	ldr.w	fp, [pc, #292]	; 88564 <_malloc_r+0x300>
   88442:	4b49      	ldr	r3, [pc, #292]	; (88568 <_malloc_r+0x304>)
   88444:	f8db 2000 	ldr.w	r2, [fp]
   88448:	681b      	ldr	r3, [r3, #0]
   8844a:	3201      	adds	r2, #1
   8844c:	442b      	add	r3, r5
   8844e:	eb04 0a09 	add.w	sl, r4, r9
   88452:	f000 812f 	beq.w	886b4 <_malloc_r+0x450>
   88456:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
   8845a:	330f      	adds	r3, #15
   8845c:	f423 687f 	bic.w	r8, r3, #4080	; 0xff0
   88460:	f028 080f 	bic.w	r8, r8, #15
   88464:	4641      	mov	r1, r8
   88466:	4630      	mov	r0, r6
   88468:	f001 f858 	bl	8951c <_sbrk_r>
   8846c:	1c41      	adds	r1, r0, #1
   8846e:	4602      	mov	r2, r0
   88470:	f000 80ef 	beq.w	88652 <_malloc_r+0x3ee>
   88474:	4582      	cmp	sl, r0
   88476:	f200 80ea 	bhi.w	8864e <_malloc_r+0x3ea>
   8847a:	4b3c      	ldr	r3, [pc, #240]	; (8856c <_malloc_r+0x308>)
   8847c:	6819      	ldr	r1, [r3, #0]
   8847e:	4441      	add	r1, r8
   88480:	4608      	mov	r0, r1
   88482:	6019      	str	r1, [r3, #0]
   88484:	f000 8149 	beq.w	8871a <_malloc_r+0x4b6>
   88488:	f8db 1000 	ldr.w	r1, [fp]
   8848c:	9301      	str	r3, [sp, #4]
   8848e:	3101      	adds	r1, #1
   88490:	bf1b      	ittet	ne
   88492:	eba2 0a0a 	subne.w	sl, r2, sl
   88496:	4450      	addne	r0, sl
   88498:	f8cb 2000 	streq.w	r2, [fp]
   8849c:	6018      	strne	r0, [r3, #0]
   8849e:	f012 0b07 	ands.w	fp, r2, #7
   884a2:	f000 8111 	beq.w	886c8 <_malloc_r+0x464>
   884a6:	f1cb 0108 	rsb	r1, fp, #8
   884aa:	440a      	add	r2, r1
   884ac:	f5cb 5180 	rsb	r1, fp, #4096	; 0x1000
   884b0:	4490      	add	r8, r2
   884b2:	3108      	adds	r1, #8
   884b4:	eba1 0108 	sub.w	r1, r1, r8
   884b8:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   884bc:	4651      	mov	r1, sl
   884be:	4630      	mov	r0, r6
   884c0:	9200      	str	r2, [sp, #0]
   884c2:	f001 f82b 	bl	8951c <_sbrk_r>
   884c6:	1c42      	adds	r2, r0, #1
   884c8:	e9dd 2300 	ldrd	r2, r3, [sp]
   884cc:	f000 814b 	beq.w	88766 <_malloc_r+0x502>
   884d0:	1a80      	subs	r0, r0, r2
   884d2:	eb00 080a 	add.w	r8, r0, sl
   884d6:	6819      	ldr	r1, [r3, #0]
   884d8:	f048 0001 	orr.w	r0, r8, #1
   884dc:	4451      	add	r1, sl
   884de:	42bc      	cmp	r4, r7
   884e0:	60ba      	str	r2, [r7, #8]
   884e2:	6019      	str	r1, [r3, #0]
   884e4:	6050      	str	r0, [r2, #4]
   884e6:	f000 8124 	beq.w	88732 <_malloc_r+0x4ce>
   884ea:	f1b9 0f0f 	cmp.w	r9, #15
   884ee:	f240 8122 	bls.w	88736 <_malloc_r+0x4d2>
   884f2:	f04f 0e05 	mov.w	lr, #5
   884f6:	6860      	ldr	r0, [r4, #4]
   884f8:	f1a9 0c0c 	sub.w	ip, r9, #12
   884fc:	f02c 0c07 	bic.w	ip, ip, #7
   88500:	f000 0001 	and.w	r0, r0, #1
   88504:	ea40 000c 	orr.w	r0, r0, ip
   88508:	6060      	str	r0, [r4, #4]
   8850a:	f1bc 0f0f 	cmp.w	ip, #15
   8850e:	eb04 000c 	add.w	r0, r4, ip
   88512:	e9c0 ee01 	strd	lr, lr, [r0, #4]
   88516:	f200 812e 	bhi.w	88776 <_malloc_r+0x512>
   8851a:	4614      	mov	r4, r2
   8851c:	6850      	ldr	r0, [r2, #4]
   8851e:	4b14      	ldr	r3, [pc, #80]	; (88570 <_malloc_r+0x30c>)
   88520:	681a      	ldr	r2, [r3, #0]
   88522:	428a      	cmp	r2, r1
   88524:	bf38      	it	cc
   88526:	6019      	strcc	r1, [r3, #0]
   88528:	4b12      	ldr	r3, [pc, #72]	; (88574 <_malloc_r+0x310>)
   8852a:	681a      	ldr	r2, [r3, #0]
   8852c:	428a      	cmp	r2, r1
   8852e:	bf38      	it	cc
   88530:	6019      	strcc	r1, [r3, #0]
   88532:	e090      	b.n	88656 <_malloc_r+0x3f2>
   88534:	1962      	adds	r2, r4, r5
   88536:	f043 0301 	orr.w	r3, r3, #1
   8853a:	f045 0501 	orr.w	r5, r5, #1
   8853e:	6065      	str	r5, [r4, #4]
   88540:	4630      	mov	r0, r6
   88542:	60ba      	str	r2, [r7, #8]
   88544:	3408      	adds	r4, #8
   88546:	6053      	str	r3, [r2, #4]
   88548:	f000 fa18 	bl	8897c <__malloc_unlock>
   8854c:	4620      	mov	r0, r4
   8854e:	b003      	add	sp, #12
   88550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88554:	68d9      	ldr	r1, [r3, #12]
   88556:	441a      	add	r2, r3
   88558:	e6a2      	b.n	882a0 <_malloc_r+0x3c>
   8855a:	bf00      	nop
   8855c:	20000998 	.word	0x20000998
   88560:	200009a0 	.word	0x200009a0
   88564:	20000da0 	.word	0x20000da0
   88568:	2000375c 	.word	0x2000375c
   8856c:	2000372c 	.word	0x2000372c
   88570:	20003754 	.word	0x20003754
   88574:	20003758 	.word	0x20003758
   88578:	f5b2 6f20 	cmp.w	r2, #2560	; 0xa00
   8857c:	ea4f 2352 	mov.w	r3, r2, lsr #9
   88580:	d35f      	bcc.n	88642 <_malloc_r+0x3de>
   88582:	2b14      	cmp	r3, #20
   88584:	f200 80b1 	bhi.w	886ea <_malloc_r+0x486>
   88588:	f103 015c 	add.w	r1, r3, #92	; 0x5c
   8858c:	00c9      	lsls	r1, r1, #3
   8858e:	335b      	adds	r3, #91	; 0x5b
   88590:	1878      	adds	r0, r7, r1
   88592:	5879      	ldr	r1, [r7, r1]
   88594:	3808      	subs	r0, #8
   88596:	4288      	cmp	r0, r1
   88598:	f000 808f 	beq.w	886ba <_malloc_r+0x456>
   8859c:	684b      	ldr	r3, [r1, #4]
   8859e:	f023 0303 	bic.w	r3, r3, #3
   885a2:	4293      	cmp	r3, r2
   885a4:	d902      	bls.n	885ac <_malloc_r+0x348>
   885a6:	6889      	ldr	r1, [r1, #8]
   885a8:	4288      	cmp	r0, r1
   885aa:	d1f7      	bne.n	8859c <_malloc_r+0x338>
   885ac:	68c8      	ldr	r0, [r1, #12]
   885ae:	687a      	ldr	r2, [r7, #4]
   885b0:	e9c4 1002 	strd	r1, r0, [r4, #8]
   885b4:	6084      	str	r4, [r0, #8]
   885b6:	60cc      	str	r4, [r1, #12]
   885b8:	e6d7      	b.n	8836a <_malloc_r+0x106>
   885ba:	2b14      	cmp	r3, #20
   885bc:	d959      	bls.n	88672 <_malloc_r+0x40e>
   885be:	2b54      	cmp	r3, #84	; 0x54
   885c0:	f200 809b 	bhi.w	886fa <_malloc_r+0x496>
   885c4:	0b2b      	lsrs	r3, r5, #12
   885c6:	f103 0c6f 	add.w	ip, r3, #111	; 0x6f
   885ca:	f103 046e 	add.w	r4, r3, #110	; 0x6e
   885ce:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   885d2:	e68f      	b.n	882f4 <_malloc_r+0x90>
   885d4:	3401      	adds	r4, #1
   885d6:	07a3      	lsls	r3, r4, #30
   885d8:	f100 0008 	add.w	r0, r0, #8
   885dc:	f47f aed8 	bne.w	88390 <_malloc_r+0x12c>
   885e0:	e053      	b.n	8868a <_malloc_r+0x426>
   885e2:	4644      	mov	r4, r8
   885e4:	4442      	add	r2, r8
   885e6:	6853      	ldr	r3, [r2, #4]
   885e8:	f8d8 100c 	ldr.w	r1, [r8, #12]
   885ec:	f043 0301 	orr.w	r3, r3, #1
   885f0:	6053      	str	r3, [r2, #4]
   885f2:	f854 3f08 	ldr.w	r3, [r4, #8]!
   885f6:	4630      	mov	r0, r6
   885f8:	60d9      	str	r1, [r3, #12]
   885fa:	608b      	str	r3, [r1, #8]
   885fc:	f000 f9be 	bl	8897c <__malloc_unlock>
   88600:	e6f6      	b.n	883f0 <_malloc_r+0x18c>
   88602:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   88606:	f105 0208 	add.w	r2, r5, #8
   8860a:	e63c      	b.n	88286 <_malloc_r+0x22>
   8860c:	4422      	add	r2, r4
   8860e:	6853      	ldr	r3, [r2, #4]
   88610:	4630      	mov	r0, r6
   88612:	f043 0301 	orr.w	r3, r3, #1
   88616:	6053      	str	r3, [r2, #4]
   88618:	f000 f9b0 	bl	8897c <__malloc_unlock>
   8861c:	3408      	adds	r4, #8
   8861e:	e6e7      	b.n	883f0 <_malloc_r+0x18c>
   88620:	1961      	adds	r1, r4, r5
   88622:	f045 0501 	orr.w	r5, r5, #1
   88626:	6065      	str	r5, [r4, #4]
   88628:	f043 0501 	orr.w	r5, r3, #1
   8862c:	e9c7 1104 	strd	r1, r1, [r7, #16]
   88630:	4630      	mov	r0, r6
   88632:	e9c1 ee02 	strd	lr, lr, [r1, #8]
   88636:	604d      	str	r5, [r1, #4]
   88638:	50a3      	str	r3, [r4, r2]
   8863a:	f000 f99f 	bl	8897c <__malloc_unlock>
   8863e:	3408      	adds	r4, #8
   88640:	e6d6      	b.n	883f0 <_malloc_r+0x18c>
   88642:	0993      	lsrs	r3, r2, #6
   88644:	f103 0139 	add.w	r1, r3, #57	; 0x39
   88648:	00c9      	lsls	r1, r1, #3
   8864a:	3338      	adds	r3, #56	; 0x38
   8864c:	e7a0      	b.n	88590 <_malloc_r+0x32c>
   8864e:	42bc      	cmp	r4, r7
   88650:	d05e      	beq.n	88710 <_malloc_r+0x4ac>
   88652:	68bc      	ldr	r4, [r7, #8]
   88654:	6860      	ldr	r0, [r4, #4]
   88656:	f020 0803 	bic.w	r8, r0, #3
   8865a:	4545      	cmp	r5, r8
   8865c:	eba8 0305 	sub.w	r3, r8, r5
   88660:	d802      	bhi.n	88668 <_malloc_r+0x404>
   88662:	2b0f      	cmp	r3, #15
   88664:	f73f af66 	bgt.w	88534 <_malloc_r+0x2d0>
   88668:	4630      	mov	r0, r6
   8866a:	f000 f987 	bl	8897c <__malloc_unlock>
   8866e:	2400      	movs	r4, #0
   88670:	e6be      	b.n	883f0 <_malloc_r+0x18c>
   88672:	f103 0c5c 	add.w	ip, r3, #92	; 0x5c
   88676:	f103 045b 	add.w	r4, r3, #91	; 0x5b
   8867a:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   8867e:	e639      	b.n	882f4 <_malloc_r+0x90>
   88680:	f859 3908 	ldr.w	r3, [r9], #-8
   88684:	454b      	cmp	r3, r9
   88686:	f040 8095 	bne.w	887b4 <_malloc_r+0x550>
   8868a:	f01c 0f03 	tst.w	ip, #3
   8868e:	f10c 3cff 	add.w	ip, ip, #4294967295
   88692:	d1f5      	bne.n	88680 <_malloc_r+0x41c>
   88694:	687b      	ldr	r3, [r7, #4]
   88696:	ea23 0301 	bic.w	r3, r3, r1
   8869a:	607b      	str	r3, [r7, #4]
   8869c:	0049      	lsls	r1, r1, #1
   8869e:	4299      	cmp	r1, r3
   886a0:	f63f aec3 	bhi.w	8842a <_malloc_r+0x1c6>
   886a4:	b911      	cbnz	r1, 886ac <_malloc_r+0x448>
   886a6:	e6c0      	b.n	8842a <_malloc_r+0x1c6>
   886a8:	0049      	lsls	r1, r1, #1
   886aa:	3404      	adds	r4, #4
   886ac:	4219      	tst	r1, r3
   886ae:	d0fb      	beq.n	886a8 <_malloc_r+0x444>
   886b0:	46a4      	mov	ip, r4
   886b2:	e669      	b.n	88388 <_malloc_r+0x124>
   886b4:	f103 0810 	add.w	r8, r3, #16
   886b8:	e6d4      	b.n	88464 <_malloc_r+0x200>
   886ba:	2201      	movs	r2, #1
   886bc:	109b      	asrs	r3, r3, #2
   886be:	409a      	lsls	r2, r3
   886c0:	687b      	ldr	r3, [r7, #4]
   886c2:	431a      	orrs	r2, r3
   886c4:	607a      	str	r2, [r7, #4]
   886c6:	e773      	b.n	885b0 <_malloc_r+0x34c>
   886c8:	eb02 0108 	add.w	r1, r2, r8
   886cc:	4249      	negs	r1, r1
   886ce:	f3c1 0a0b 	ubfx	sl, r1, #0, #12
   886d2:	4651      	mov	r1, sl
   886d4:	4630      	mov	r0, r6
   886d6:	9200      	str	r2, [sp, #0]
   886d8:	f000 ff20 	bl	8951c <_sbrk_r>
   886dc:	1c43      	adds	r3, r0, #1
   886de:	e9dd 2300 	ldrd	r2, r3, [sp]
   886e2:	f47f aef5 	bne.w	884d0 <_malloc_r+0x26c>
   886e6:	46da      	mov	sl, fp
   886e8:	e6f5      	b.n	884d6 <_malloc_r+0x272>
   886ea:	2b54      	cmp	r3, #84	; 0x54
   886ec:	d826      	bhi.n	8873c <_malloc_r+0x4d8>
   886ee:	0b13      	lsrs	r3, r2, #12
   886f0:	f103 016f 	add.w	r1, r3, #111	; 0x6f
   886f4:	00c9      	lsls	r1, r1, #3
   886f6:	336e      	adds	r3, #110	; 0x6e
   886f8:	e74a      	b.n	88590 <_malloc_r+0x32c>
   886fa:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   886fe:	d826      	bhi.n	8874e <_malloc_r+0x4ea>
   88700:	0beb      	lsrs	r3, r5, #15
   88702:	f103 0c78 	add.w	ip, r3, #120	; 0x78
   88706:	f103 0477 	add.w	r4, r3, #119	; 0x77
   8870a:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   8870e:	e5f1      	b.n	882f4 <_malloc_r+0x90>
   88710:	4b29      	ldr	r3, [pc, #164]	; (887b8 <_malloc_r+0x554>)
   88712:	6818      	ldr	r0, [r3, #0]
   88714:	4440      	add	r0, r8
   88716:	6018      	str	r0, [r3, #0]
   88718:	e6b6      	b.n	88488 <_malloc_r+0x224>
   8871a:	f3ca 0c0b 	ubfx	ip, sl, #0, #12
   8871e:	f1bc 0f00 	cmp.w	ip, #0
   88722:	f47f aeb1 	bne.w	88488 <_malloc_r+0x224>
   88726:	68bc      	ldr	r4, [r7, #8]
   88728:	44c8      	add	r8, r9
   8872a:	f048 0001 	orr.w	r0, r8, #1
   8872e:	6060      	str	r0, [r4, #4]
   88730:	e6f5      	b.n	8851e <_malloc_r+0x2ba>
   88732:	4614      	mov	r4, r2
   88734:	e6f3      	b.n	8851e <_malloc_r+0x2ba>
   88736:	2301      	movs	r3, #1
   88738:	6053      	str	r3, [r2, #4]
   8873a:	e795      	b.n	88668 <_malloc_r+0x404>
   8873c:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   88740:	d824      	bhi.n	8878c <_malloc_r+0x528>
   88742:	0bd3      	lsrs	r3, r2, #15
   88744:	f103 0178 	add.w	r1, r3, #120	; 0x78
   88748:	00c9      	lsls	r1, r1, #3
   8874a:	3377      	adds	r3, #119	; 0x77
   8874c:	e720      	b.n	88590 <_malloc_r+0x32c>
   8874e:	f240 5254 	movw	r2, #1364	; 0x554
   88752:	4293      	cmp	r3, r2
   88754:	d824      	bhi.n	887a0 <_malloc_r+0x53c>
   88756:	0cab      	lsrs	r3, r5, #18
   88758:	f103 0c7d 	add.w	ip, r3, #125	; 0x7d
   8875c:	f103 047c 	add.w	r4, r3, #124	; 0x7c
   88760:	ea4f 00cc 	mov.w	r0, ip, lsl #3
   88764:	e5c6      	b.n	882f4 <_malloc_r+0x90>
   88766:	f1ab 0b08 	sub.w	fp, fp, #8
   8876a:	44d8      	add	r8, fp
   8876c:	f04f 0a00 	mov.w	sl, #0
   88770:	eba8 0802 	sub.w	r8, r8, r2
   88774:	e6af      	b.n	884d6 <_malloc_r+0x272>
   88776:	f104 0108 	add.w	r1, r4, #8
   8877a:	4630      	mov	r0, r6
   8877c:	9300      	str	r3, [sp, #0]
   8877e:	f7ff fa1b 	bl	87bb8 <_free_r>
   88782:	68bc      	ldr	r4, [r7, #8]
   88784:	9b00      	ldr	r3, [sp, #0]
   88786:	6860      	ldr	r0, [r4, #4]
   88788:	6819      	ldr	r1, [r3, #0]
   8878a:	e6c8      	b.n	8851e <_malloc_r+0x2ba>
   8878c:	f240 5154 	movw	r1, #1364	; 0x554
   88790:	428b      	cmp	r3, r1
   88792:	d80b      	bhi.n	887ac <_malloc_r+0x548>
   88794:	0c93      	lsrs	r3, r2, #18
   88796:	f103 017d 	add.w	r1, r3, #125	; 0x7d
   8879a:	00c9      	lsls	r1, r1, #3
   8879c:	337c      	adds	r3, #124	; 0x7c
   8879e:	e6f7      	b.n	88590 <_malloc_r+0x32c>
   887a0:	f44f 707e 	mov.w	r0, #1016	; 0x3f8
   887a4:	f04f 0c7f 	mov.w	ip, #127	; 0x7f
   887a8:	247e      	movs	r4, #126	; 0x7e
   887aa:	e5a3      	b.n	882f4 <_malloc_r+0x90>
   887ac:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   887b0:	237e      	movs	r3, #126	; 0x7e
   887b2:	e6ed      	b.n	88590 <_malloc_r+0x32c>
   887b4:	687b      	ldr	r3, [r7, #4]
   887b6:	e771      	b.n	8869c <_malloc_r+0x438>
   887b8:	2000372c 	.word	0x2000372c

000887bc <__ascii_mbtowc>:
   887bc:	b082      	sub	sp, #8
   887be:	b149      	cbz	r1, 887d4 <__ascii_mbtowc+0x18>
   887c0:	b15a      	cbz	r2, 887da <__ascii_mbtowc+0x1e>
   887c2:	b16b      	cbz	r3, 887e0 <__ascii_mbtowc+0x24>
   887c4:	7813      	ldrb	r3, [r2, #0]
   887c6:	600b      	str	r3, [r1, #0]
   887c8:	7812      	ldrb	r2, [r2, #0]
   887ca:	1e10      	subs	r0, r2, #0
   887cc:	bf18      	it	ne
   887ce:	2001      	movne	r0, #1
   887d0:	b002      	add	sp, #8
   887d2:	4770      	bx	lr
   887d4:	a901      	add	r1, sp, #4
   887d6:	2a00      	cmp	r2, #0
   887d8:	d1f3      	bne.n	887c2 <__ascii_mbtowc+0x6>
   887da:	4610      	mov	r0, r2
   887dc:	b002      	add	sp, #8
   887de:	4770      	bx	lr
   887e0:	f06f 0001 	mvn.w	r0, #1
   887e4:	e7f4      	b.n	887d0 <__ascii_mbtowc+0x14>
   887e6:	bf00      	nop

000887e8 <memchr>:
   887e8:	fa5f fc81 	uxtb.w	ip, r1
   887ec:	0781      	lsls	r1, r0, #30
   887ee:	d010      	beq.n	88812 <memchr+0x2a>
   887f0:	4603      	mov	r3, r0
   887f2:	1e51      	subs	r1, r2, #1
   887f4:	b92a      	cbnz	r2, 88802 <memchr+0x1a>
   887f6:	e00a      	b.n	8880e <memchr+0x26>
   887f8:	079a      	lsls	r2, r3, #30
   887fa:	4618      	mov	r0, r3
   887fc:	d00a      	beq.n	88814 <memchr+0x2c>
   887fe:	3901      	subs	r1, #1
   88800:	d305      	bcc.n	8880e <memchr+0x26>
   88802:	4618      	mov	r0, r3
   88804:	f813 2b01 	ldrb.w	r2, [r3], #1
   88808:	4562      	cmp	r2, ip
   8880a:	d1f5      	bne.n	887f8 <memchr+0x10>
   8880c:	4770      	bx	lr
   8880e:	2000      	movs	r0, #0
   88810:	4770      	bx	lr
   88812:	4611      	mov	r1, r2
   88814:	2903      	cmp	r1, #3
   88816:	d80c      	bhi.n	88832 <memchr+0x4a>
   88818:	2900      	cmp	r1, #0
   8881a:	d0f8      	beq.n	8880e <memchr+0x26>
   8881c:	4603      	mov	r3, r0
   8881e:	4401      	add	r1, r0
   88820:	e001      	b.n	88826 <memchr+0x3e>
   88822:	428b      	cmp	r3, r1
   88824:	d0f3      	beq.n	8880e <memchr+0x26>
   88826:	4618      	mov	r0, r3
   88828:	f813 2b01 	ldrb.w	r2, [r3], #1
   8882c:	4562      	cmp	r2, ip
   8882e:	d1f8      	bne.n	88822 <memchr+0x3a>
   88830:	e7ec      	b.n	8880c <memchr+0x24>
   88832:	4602      	mov	r2, r0
   88834:	b510      	push	{r4, lr}
   88836:	ea4c 240c 	orr.w	r4, ip, ip, lsl #8
   8883a:	ea44 4404 	orr.w	r4, r4, r4, lsl #16
   8883e:	4610      	mov	r0, r2
   88840:	6803      	ldr	r3, [r0, #0]
   88842:	3204      	adds	r2, #4
   88844:	4063      	eors	r3, r4
   88846:	f1a3 3e01 	sub.w	lr, r3, #16843009	; 0x1010101
   8884a:	ea2e 0303 	bic.w	r3, lr, r3
   8884e:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   88852:	d104      	bne.n	8885e <memchr+0x76>
   88854:	3904      	subs	r1, #4
   88856:	2903      	cmp	r1, #3
   88858:	4610      	mov	r0, r2
   8885a:	d8f0      	bhi.n	8883e <memchr+0x56>
   8885c:	b151      	cbz	r1, 88874 <memchr+0x8c>
   8885e:	4603      	mov	r3, r0
   88860:	4401      	add	r1, r0
   88862:	e001      	b.n	88868 <memchr+0x80>
   88864:	428b      	cmp	r3, r1
   88866:	d005      	beq.n	88874 <memchr+0x8c>
   88868:	4618      	mov	r0, r3
   8886a:	f813 2b01 	ldrb.w	r2, [r3], #1
   8886e:	4562      	cmp	r2, ip
   88870:	d1f8      	bne.n	88864 <memchr+0x7c>
   88872:	bd10      	pop	{r4, pc}
   88874:	2000      	movs	r0, #0
   88876:	bd10      	pop	{r4, pc}

00088878 <memmove>:
   88878:	4288      	cmp	r0, r1
   8887a:	d90d      	bls.n	88898 <memmove+0x20>
   8887c:	188b      	adds	r3, r1, r2
   8887e:	4283      	cmp	r3, r0
   88880:	d90a      	bls.n	88898 <memmove+0x20>
   88882:	eb00 0c02 	add.w	ip, r0, r2
   88886:	b1ba      	cbz	r2, 888b8 <memmove+0x40>
   88888:	4662      	mov	r2, ip
   8888a:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
   8888e:	4299      	cmp	r1, r3
   88890:	f802 cd01 	strb.w	ip, [r2, #-1]!
   88894:	d1f9      	bne.n	8888a <memmove+0x12>
   88896:	4770      	bx	lr
   88898:	2a0f      	cmp	r2, #15
   8889a:	d80e      	bhi.n	888ba <memmove+0x42>
   8889c:	4603      	mov	r3, r0
   8889e:	f102 3cff 	add.w	ip, r2, #4294967295
   888a2:	b14a      	cbz	r2, 888b8 <memmove+0x40>
   888a4:	f10c 0c01 	add.w	ip, ip, #1
   888a8:	3b01      	subs	r3, #1
   888aa:	448c      	add	ip, r1
   888ac:	f811 2b01 	ldrb.w	r2, [r1], #1
   888b0:	4561      	cmp	r1, ip
   888b2:	f803 2f01 	strb.w	r2, [r3, #1]!
   888b6:	d1f9      	bne.n	888ac <memmove+0x34>
   888b8:	4770      	bx	lr
   888ba:	ea40 0301 	orr.w	r3, r0, r1
   888be:	079b      	lsls	r3, r3, #30
   888c0:	d14f      	bne.n	88962 <memmove+0xea>
   888c2:	f1a2 0310 	sub.w	r3, r2, #16
   888c6:	b570      	push	{r4, r5, r6, lr}
   888c8:	f101 0c20 	add.w	ip, r1, #32
   888cc:	f023 050f 	bic.w	r5, r3, #15
   888d0:	f101 0e10 	add.w	lr, r1, #16
   888d4:	f100 0410 	add.w	r4, r0, #16
   888d8:	44ac      	add	ip, r5
   888da:	091b      	lsrs	r3, r3, #4
   888dc:	f85e 5c10 	ldr.w	r5, [lr, #-16]
   888e0:	f10e 0e10 	add.w	lr, lr, #16
   888e4:	f844 5c10 	str.w	r5, [r4, #-16]
   888e8:	f85e 5c1c 	ldr.w	r5, [lr, #-28]
   888ec:	3410      	adds	r4, #16
   888ee:	f844 5c1c 	str.w	r5, [r4, #-28]
   888f2:	f85e 5c18 	ldr.w	r5, [lr, #-24]
   888f6:	f844 5c18 	str.w	r5, [r4, #-24]
   888fa:	f85e 5c14 	ldr.w	r5, [lr, #-20]
   888fe:	45e6      	cmp	lr, ip
   88900:	f844 5c14 	str.w	r5, [r4, #-20]
   88904:	d1ea      	bne.n	888dc <memmove+0x64>
   88906:	3301      	adds	r3, #1
   88908:	f012 0f0c 	tst.w	r2, #12
   8890c:	eb01 1103 	add.w	r1, r1, r3, lsl #4
   88910:	f002 040f 	and.w	r4, r2, #15
   88914:	eb00 1303 	add.w	r3, r0, r3, lsl #4
   88918:	d027      	beq.n	8896a <memmove+0xf2>
   8891a:	468e      	mov	lr, r1
   8891c:	3c04      	subs	r4, #4
   8891e:	f024 0603 	bic.w	r6, r4, #3
   88922:	ea4f 0c94 	mov.w	ip, r4, lsr #2
   88926:	441e      	add	r6, r3
   88928:	1f1c      	subs	r4, r3, #4
   8892a:	f85e 5b04 	ldr.w	r5, [lr], #4
   8892e:	f844 5f04 	str.w	r5, [r4, #4]!
   88932:	42b4      	cmp	r4, r6
   88934:	d1f9      	bne.n	8892a <memmove+0xb2>
   88936:	f10c 0401 	add.w	r4, ip, #1
   8893a:	f002 0203 	and.w	r2, r2, #3
   8893e:	eb03 0384 	add.w	r3, r3, r4, lsl #2
   88942:	eb01 0184 	add.w	r1, r1, r4, lsl #2
   88946:	f102 3cff 	add.w	ip, r2, #4294967295
   8894a:	b14a      	cbz	r2, 88960 <memmove+0xe8>
   8894c:	f10c 0c01 	add.w	ip, ip, #1
   88950:	3b01      	subs	r3, #1
   88952:	448c      	add	ip, r1
   88954:	f811 2b01 	ldrb.w	r2, [r1], #1
   88958:	4561      	cmp	r1, ip
   8895a:	f803 2f01 	strb.w	r2, [r3, #1]!
   8895e:	d1f9      	bne.n	88954 <memmove+0xdc>
   88960:	bd70      	pop	{r4, r5, r6, pc}
   88962:	4603      	mov	r3, r0
   88964:	f102 3cff 	add.w	ip, r2, #4294967295
   88968:	e79c      	b.n	888a4 <memmove+0x2c>
   8896a:	4622      	mov	r2, r4
   8896c:	e7eb      	b.n	88946 <memmove+0xce>
   8896e:	bf00      	nop

00088970 <__malloc_lock>:
   88970:	4801      	ldr	r0, [pc, #4]	; (88978 <__malloc_lock+0x8>)
   88972:	f7ff bbcb 	b.w	8810c <__retarget_lock_acquire_recursive>
   88976:	bf00      	nop
   88978:	20003720 	.word	0x20003720

0008897c <__malloc_unlock>:
   8897c:	4801      	ldr	r0, [pc, #4]	; (88984 <__malloc_unlock+0x8>)
   8897e:	f7ff bbc7 	b.w	88110 <__retarget_lock_release_recursive>
   88982:	bf00      	nop
   88984:	20003720 	.word	0x20003720

00088988 <_Balloc>:
   88988:	b538      	push	{r3, r4, r5, lr}
   8898a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8898c:	4605      	mov	r5, r0
   8898e:	460c      	mov	r4, r1
   88990:	b14b      	cbz	r3, 889a6 <_Balloc+0x1e>
   88992:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   88996:	b180      	cbz	r0, 889ba <_Balloc+0x32>
   88998:	6802      	ldr	r2, [r0, #0]
   8899a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   8899e:	2300      	movs	r3, #0
   889a0:	e9c0 3303 	strd	r3, r3, [r0, #12]
   889a4:	bd38      	pop	{r3, r4, r5, pc}
   889a6:	2221      	movs	r2, #33	; 0x21
   889a8:	2104      	movs	r1, #4
   889aa:	f000 ff8d 	bl	898c8 <_calloc_r>
   889ae:	4603      	mov	r3, r0
   889b0:	64e8      	str	r0, [r5, #76]	; 0x4c
   889b2:	2800      	cmp	r0, #0
   889b4:	d1ed      	bne.n	88992 <_Balloc+0xa>
   889b6:	2000      	movs	r0, #0
   889b8:	bd38      	pop	{r3, r4, r5, pc}
   889ba:	2101      	movs	r1, #1
   889bc:	4628      	mov	r0, r5
   889be:	fa01 f504 	lsl.w	r5, r1, r4
   889c2:	1d6a      	adds	r2, r5, #5
   889c4:	0092      	lsls	r2, r2, #2
   889c6:	f000 ff7f 	bl	898c8 <_calloc_r>
   889ca:	2800      	cmp	r0, #0
   889cc:	d0f3      	beq.n	889b6 <_Balloc+0x2e>
   889ce:	e9c0 4501 	strd	r4, r5, [r0, #4]
   889d2:	e7e4      	b.n	8899e <_Balloc+0x16>

000889d4 <_Bfree>:
   889d4:	b131      	cbz	r1, 889e4 <_Bfree+0x10>
   889d6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   889d8:	684a      	ldr	r2, [r1, #4]
   889da:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   889de:	6008      	str	r0, [r1, #0]
   889e0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   889e4:	4770      	bx	lr
   889e6:	bf00      	nop

000889e8 <__multadd>:
   889e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   889ec:	f04f 0e00 	mov.w	lr, #0
   889f0:	460e      	mov	r6, r1
   889f2:	461c      	mov	r4, r3
   889f4:	690d      	ldr	r5, [r1, #16]
   889f6:	4607      	mov	r7, r0
   889f8:	f101 0014 	add.w	r0, r1, #20
   889fc:	6801      	ldr	r1, [r0, #0]
   889fe:	f10e 0e01 	add.w	lr, lr, #1
   88a02:	b28b      	uxth	r3, r1
   88a04:	fb02 4303 	mla	r3, r2, r3, r4
   88a08:	0c09      	lsrs	r1, r1, #16
   88a0a:	ea4f 4c13 	mov.w	ip, r3, lsr #16
   88a0e:	fb02 cc01 	mla	ip, r2, r1, ip
   88a12:	b29b      	uxth	r3, r3
   88a14:	eb03 430c 	add.w	r3, r3, ip, lsl #16
   88a18:	4575      	cmp	r5, lr
   88a1a:	f840 3b04 	str.w	r3, [r0], #4
   88a1e:	ea4f 441c 	mov.w	r4, ip, lsr #16
   88a22:	dceb      	bgt.n	889fc <__multadd+0x14>
   88a24:	b13c      	cbz	r4, 88a36 <__multadd+0x4e>
   88a26:	68b3      	ldr	r3, [r6, #8]
   88a28:	42ab      	cmp	r3, r5
   88a2a:	dd07      	ble.n	88a3c <__multadd+0x54>
   88a2c:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   88a30:	3501      	adds	r5, #1
   88a32:	615c      	str	r4, [r3, #20]
   88a34:	6135      	str	r5, [r6, #16]
   88a36:	4630      	mov	r0, r6
   88a38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88a3c:	6871      	ldr	r1, [r6, #4]
   88a3e:	4638      	mov	r0, r7
   88a40:	3101      	adds	r1, #1
   88a42:	f7ff ffa1 	bl	88988 <_Balloc>
   88a46:	4680      	mov	r8, r0
   88a48:	b1a8      	cbz	r0, 88a76 <__multadd+0x8e>
   88a4a:	6932      	ldr	r2, [r6, #16]
   88a4c:	f106 010c 	add.w	r1, r6, #12
   88a50:	3202      	adds	r2, #2
   88a52:	0092      	lsls	r2, r2, #2
   88a54:	300c      	adds	r0, #12
   88a56:	f7fa ff2f 	bl	838b8 <memcpy>
   88a5a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88a5c:	6872      	ldr	r2, [r6, #4]
   88a5e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88a62:	6031      	str	r1, [r6, #0]
   88a64:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   88a68:	4646      	mov	r6, r8
   88a6a:	eb06 0385 	add.w	r3, r6, r5, lsl #2
   88a6e:	3501      	adds	r5, #1
   88a70:	615c      	str	r4, [r3, #20]
   88a72:	6135      	str	r5, [r6, #16]
   88a74:	e7df      	b.n	88a36 <__multadd+0x4e>
   88a76:	4602      	mov	r2, r0
   88a78:	21b5      	movs	r1, #181	; 0xb5
   88a7a:	4b02      	ldr	r3, [pc, #8]	; (88a84 <__multadd+0x9c>)
   88a7c:	4802      	ldr	r0, [pc, #8]	; (88a88 <__multadd+0xa0>)
   88a7e:	f000 ff03 	bl	89888 <__assert_func>
   88a82:	bf00      	nop
   88a84:	0008a988 	.word	0x0008a988
   88a88:	0008aa2c 	.word	0x0008aa2c

00088a8c <__hi0bits>:
   88a8c:	0c02      	lsrs	r2, r0, #16
   88a8e:	0412      	lsls	r2, r2, #16
   88a90:	4603      	mov	r3, r0
   88a92:	b9ca      	cbnz	r2, 88ac8 <__hi0bits+0x3c>
   88a94:	2010      	movs	r0, #16
   88a96:	4083      	lsls	r3, r0
   88a98:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   88a9c:	bf04      	itt	eq
   88a9e:	021b      	lsleq	r3, r3, #8
   88aa0:	3008      	addeq	r0, #8
   88aa2:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   88aa6:	bf04      	itt	eq
   88aa8:	011b      	lsleq	r3, r3, #4
   88aaa:	3004      	addeq	r0, #4
   88aac:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   88ab0:	bf04      	itt	eq
   88ab2:	009b      	lsleq	r3, r3, #2
   88ab4:	3002      	addeq	r0, #2
   88ab6:	2b00      	cmp	r3, #0
   88ab8:	db05      	blt.n	88ac6 <__hi0bits+0x3a>
   88aba:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
   88abe:	f100 0001 	add.w	r0, r0, #1
   88ac2:	bf08      	it	eq
   88ac4:	2020      	moveq	r0, #32
   88ac6:	4770      	bx	lr
   88ac8:	2000      	movs	r0, #0
   88aca:	e7e5      	b.n	88a98 <__hi0bits+0xc>

00088acc <__lo0bits>:
   88acc:	6803      	ldr	r3, [r0, #0]
   88ace:	4602      	mov	r2, r0
   88ad0:	f013 0007 	ands.w	r0, r3, #7
   88ad4:	d009      	beq.n	88aea <__lo0bits+0x1e>
   88ad6:	07d9      	lsls	r1, r3, #31
   88ad8:	d41f      	bmi.n	88b1a <__lo0bits+0x4e>
   88ada:	0798      	lsls	r0, r3, #30
   88adc:	bf4b      	itete	mi
   88ade:	085b      	lsrmi	r3, r3, #1
   88ae0:	089b      	lsrpl	r3, r3, #2
   88ae2:	2001      	movmi	r0, #1
   88ae4:	2002      	movpl	r0, #2
   88ae6:	6013      	str	r3, [r2, #0]
   88ae8:	4770      	bx	lr
   88aea:	b299      	uxth	r1, r3
   88aec:	b909      	cbnz	r1, 88af2 <__lo0bits+0x26>
   88aee:	2010      	movs	r0, #16
   88af0:	40c3      	lsrs	r3, r0
   88af2:	b2d9      	uxtb	r1, r3
   88af4:	b909      	cbnz	r1, 88afa <__lo0bits+0x2e>
   88af6:	3008      	adds	r0, #8
   88af8:	0a1b      	lsrs	r3, r3, #8
   88afa:	0719      	lsls	r1, r3, #28
   88afc:	bf04      	itt	eq
   88afe:	091b      	lsreq	r3, r3, #4
   88b00:	3004      	addeq	r0, #4
   88b02:	0799      	lsls	r1, r3, #30
   88b04:	bf04      	itt	eq
   88b06:	089b      	lsreq	r3, r3, #2
   88b08:	3002      	addeq	r0, #2
   88b0a:	07d9      	lsls	r1, r3, #31
   88b0c:	d403      	bmi.n	88b16 <__lo0bits+0x4a>
   88b0e:	085b      	lsrs	r3, r3, #1
   88b10:	f100 0001 	add.w	r0, r0, #1
   88b14:	d003      	beq.n	88b1e <__lo0bits+0x52>
   88b16:	6013      	str	r3, [r2, #0]
   88b18:	4770      	bx	lr
   88b1a:	2000      	movs	r0, #0
   88b1c:	4770      	bx	lr
   88b1e:	2020      	movs	r0, #32
   88b20:	4770      	bx	lr
   88b22:	bf00      	nop

00088b24 <__i2b>:
   88b24:	b538      	push	{r3, r4, r5, lr}
   88b26:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88b28:	4604      	mov	r4, r0
   88b2a:	460d      	mov	r5, r1
   88b2c:	b14b      	cbz	r3, 88b42 <__i2b+0x1e>
   88b2e:	6858      	ldr	r0, [r3, #4]
   88b30:	b1b0      	cbz	r0, 88b60 <__i2b+0x3c>
   88b32:	6802      	ldr	r2, [r0, #0]
   88b34:	605a      	str	r2, [r3, #4]
   88b36:	2200      	movs	r2, #0
   88b38:	2301      	movs	r3, #1
   88b3a:	6145      	str	r5, [r0, #20]
   88b3c:	e9c0 2303 	strd	r2, r3, [r0, #12]
   88b40:	bd38      	pop	{r3, r4, r5, pc}
   88b42:	2221      	movs	r2, #33	; 0x21
   88b44:	2104      	movs	r1, #4
   88b46:	f000 febf 	bl	898c8 <_calloc_r>
   88b4a:	4603      	mov	r3, r0
   88b4c:	64e0      	str	r0, [r4, #76]	; 0x4c
   88b4e:	2800      	cmp	r0, #0
   88b50:	d1ed      	bne.n	88b2e <__i2b+0xa>
   88b52:	2200      	movs	r2, #0
   88b54:	f44f 71a0 	mov.w	r1, #320	; 0x140
   88b58:	4b07      	ldr	r3, [pc, #28]	; (88b78 <__i2b+0x54>)
   88b5a:	4808      	ldr	r0, [pc, #32]	; (88b7c <__i2b+0x58>)
   88b5c:	f000 fe94 	bl	89888 <__assert_func>
   88b60:	221c      	movs	r2, #28
   88b62:	2101      	movs	r1, #1
   88b64:	4620      	mov	r0, r4
   88b66:	f000 feaf 	bl	898c8 <_calloc_r>
   88b6a:	2800      	cmp	r0, #0
   88b6c:	d0f1      	beq.n	88b52 <__i2b+0x2e>
   88b6e:	2201      	movs	r2, #1
   88b70:	2302      	movs	r3, #2
   88b72:	e9c0 2301 	strd	r2, r3, [r0, #4]
   88b76:	e7de      	b.n	88b36 <__i2b+0x12>
   88b78:	0008a988 	.word	0x0008a988
   88b7c:	0008aa2c 	.word	0x0008aa2c

00088b80 <__multiply>:
   88b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88b84:	690e      	ldr	r6, [r1, #16]
   88b86:	6915      	ldr	r5, [r2, #16]
   88b88:	4688      	mov	r8, r1
   88b8a:	42ae      	cmp	r6, r5
   88b8c:	4614      	mov	r4, r2
   88b8e:	b085      	sub	sp, #20
   88b90:	db05      	blt.n	88b9e <__multiply+0x1e>
   88b92:	462a      	mov	r2, r5
   88b94:	4623      	mov	r3, r4
   88b96:	4635      	mov	r5, r6
   88b98:	460c      	mov	r4, r1
   88b9a:	4616      	mov	r6, r2
   88b9c:	4698      	mov	r8, r3
   88b9e:	68a3      	ldr	r3, [r4, #8]
   88ba0:	6861      	ldr	r1, [r4, #4]
   88ba2:	19af      	adds	r7, r5, r6
   88ba4:	42bb      	cmp	r3, r7
   88ba6:	bfb8      	it	lt
   88ba8:	3101      	addlt	r1, #1
   88baa:	f7ff feed 	bl	88988 <_Balloc>
   88bae:	9001      	str	r0, [sp, #4]
   88bb0:	2800      	cmp	r0, #0
   88bb2:	f000 8087 	beq.w	88cc4 <__multiply+0x144>
   88bb6:	9b01      	ldr	r3, [sp, #4]
   88bb8:	f103 0914 	add.w	r9, r3, #20
   88bbc:	eb09 0a87 	add.w	sl, r9, r7, lsl #2
   88bc0:	45d1      	cmp	r9, sl
   88bc2:	d205      	bcs.n	88bd0 <__multiply+0x50>
   88bc4:	464b      	mov	r3, r9
   88bc6:	2200      	movs	r2, #0
   88bc8:	f843 2b04 	str.w	r2, [r3], #4
   88bcc:	459a      	cmp	sl, r3
   88bce:	d8fb      	bhi.n	88bc8 <__multiply+0x48>
   88bd0:	f108 0814 	add.w	r8, r8, #20
   88bd4:	eb08 0b86 	add.w	fp, r8, r6, lsl #2
   88bd8:	f104 0314 	add.w	r3, r4, #20
   88bdc:	45d8      	cmp	r8, fp
   88bde:	461a      	mov	r2, r3
   88be0:	eb03 0585 	add.w	r5, r3, r5, lsl #2
   88be4:	d25f      	bcs.n	88ca6 <__multiply+0x126>
   88be6:	1b2b      	subs	r3, r5, r4
   88be8:	3b15      	subs	r3, #21
   88bea:	f023 0303 	bic.w	r3, r3, #3
   88bee:	3304      	adds	r3, #4
   88bf0:	3415      	adds	r4, #21
   88bf2:	42a5      	cmp	r5, r4
   88bf4:	bf38      	it	cc
   88bf6:	2304      	movcc	r3, #4
   88bf8:	e9cd a702 	strd	sl, r7, [sp, #8]
   88bfc:	46ac      	mov	ip, r5
   88bfe:	461f      	mov	r7, r3
   88c00:	4692      	mov	sl, r2
   88c02:	e005      	b.n	88c10 <__multiply+0x90>
   88c04:	0c00      	lsrs	r0, r0, #16
   88c06:	d129      	bne.n	88c5c <__multiply+0xdc>
   88c08:	45c3      	cmp	fp, r8
   88c0a:	f109 0904 	add.w	r9, r9, #4
   88c0e:	d948      	bls.n	88ca2 <__multiply+0x122>
   88c10:	f858 0b04 	ldr.w	r0, [r8], #4
   88c14:	b285      	uxth	r5, r0
   88c16:	2d00      	cmp	r5, #0
   88c18:	d0f4      	beq.n	88c04 <__multiply+0x84>
   88c1a:	4656      	mov	r6, sl
   88c1c:	464c      	mov	r4, r9
   88c1e:	2300      	movs	r3, #0
   88c20:	f856 0b04 	ldr.w	r0, [r6], #4
   88c24:	6821      	ldr	r1, [r4, #0]
   88c26:	b282      	uxth	r2, r0
   88c28:	fa1f fe81 	uxth.w	lr, r1
   88c2c:	fb05 ee02 	mla	lr, r5, r2, lr
   88c30:	0c00      	lsrs	r0, r0, #16
   88c32:	0c0a      	lsrs	r2, r1, #16
   88c34:	fb05 2200 	mla	r2, r5, r0, r2
   88c38:	4473      	add	r3, lr
   88c3a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   88c3e:	b29b      	uxth	r3, r3
   88c40:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   88c44:	45b4      	cmp	ip, r6
   88c46:	f844 3b04 	str.w	r3, [r4], #4
   88c4a:	ea4f 4312 	mov.w	r3, r2, lsr #16
   88c4e:	d8e7      	bhi.n	88c20 <__multiply+0xa0>
   88c50:	f849 3007 	str.w	r3, [r9, r7]
   88c54:	f858 0c04 	ldr.w	r0, [r8, #-4]
   88c58:	0c00      	lsrs	r0, r0, #16
   88c5a:	d0d5      	beq.n	88c08 <__multiply+0x88>
   88c5c:	f8d9 3000 	ldr.w	r3, [r9]
   88c60:	4654      	mov	r4, sl
   88c62:	4619      	mov	r1, r3
   88c64:	464d      	mov	r5, r9
   88c66:	2200      	movs	r2, #0
   88c68:	8826      	ldrh	r6, [r4, #0]
   88c6a:	0c09      	lsrs	r1, r1, #16
   88c6c:	fb00 1106 	mla	r1, r0, r6, r1
   88c70:	b29b      	uxth	r3, r3
   88c72:	440a      	add	r2, r1
   88c74:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   88c78:	f845 3b04 	str.w	r3, [r5], #4
   88c7c:	f854 6b04 	ldr.w	r6, [r4], #4
   88c80:	6829      	ldr	r1, [r5, #0]
   88c82:	0c36      	lsrs	r6, r6, #16
   88c84:	b28b      	uxth	r3, r1
   88c86:	fb00 3306 	mla	r3, r0, r6, r3
   88c8a:	45a4      	cmp	ip, r4
   88c8c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   88c90:	ea4f 4213 	mov.w	r2, r3, lsr #16
   88c94:	d8e8      	bhi.n	88c68 <__multiply+0xe8>
   88c96:	45c3      	cmp	fp, r8
   88c98:	f849 3007 	str.w	r3, [r9, r7]
   88c9c:	f109 0904 	add.w	r9, r9, #4
   88ca0:	d8b6      	bhi.n	88c10 <__multiply+0x90>
   88ca2:	e9dd a702 	ldrd	sl, r7, [sp, #8]
   88ca6:	2f00      	cmp	r7, #0
   88ca8:	dc02      	bgt.n	88cb0 <__multiply+0x130>
   88caa:	e005      	b.n	88cb8 <__multiply+0x138>
   88cac:	3f01      	subs	r7, #1
   88cae:	d003      	beq.n	88cb8 <__multiply+0x138>
   88cb0:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   88cb4:	2b00      	cmp	r3, #0
   88cb6:	d0f9      	beq.n	88cac <__multiply+0x12c>
   88cb8:	9b01      	ldr	r3, [sp, #4]
   88cba:	4618      	mov	r0, r3
   88cbc:	611f      	str	r7, [r3, #16]
   88cbe:	b005      	add	sp, #20
   88cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88cc4:	4602      	mov	r2, r0
   88cc6:	f240 115d 	movw	r1, #349	; 0x15d
   88cca:	4b02      	ldr	r3, [pc, #8]	; (88cd4 <__multiply+0x154>)
   88ccc:	4802      	ldr	r0, [pc, #8]	; (88cd8 <__multiply+0x158>)
   88cce:	f000 fddb 	bl	89888 <__assert_func>
   88cd2:	bf00      	nop
   88cd4:	0008a988 	.word	0x0008a988
   88cd8:	0008aa2c 	.word	0x0008aa2c

00088cdc <__pow5mult>:
   88cdc:	f012 0303 	ands.w	r3, r2, #3
   88ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88ce4:	4614      	mov	r4, r2
   88ce6:	4607      	mov	r7, r0
   88ce8:	d12e      	bne.n	88d48 <__pow5mult+0x6c>
   88cea:	460e      	mov	r6, r1
   88cec:	10a4      	asrs	r4, r4, #2
   88cee:	d01c      	beq.n	88d2a <__pow5mult+0x4e>
   88cf0:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   88cf2:	b395      	cbz	r5, 88d5a <__pow5mult+0x7e>
   88cf4:	07e3      	lsls	r3, r4, #31
   88cf6:	f04f 0800 	mov.w	r8, #0
   88cfa:	d406      	bmi.n	88d0a <__pow5mult+0x2e>
   88cfc:	1064      	asrs	r4, r4, #1
   88cfe:	d014      	beq.n	88d2a <__pow5mult+0x4e>
   88d00:	6828      	ldr	r0, [r5, #0]
   88d02:	b1a8      	cbz	r0, 88d30 <__pow5mult+0x54>
   88d04:	4605      	mov	r5, r0
   88d06:	07e3      	lsls	r3, r4, #31
   88d08:	d5f8      	bpl.n	88cfc <__pow5mult+0x20>
   88d0a:	462a      	mov	r2, r5
   88d0c:	4631      	mov	r1, r6
   88d0e:	4638      	mov	r0, r7
   88d10:	f7ff ff36 	bl	88b80 <__multiply>
   88d14:	b1b6      	cbz	r6, 88d44 <__pow5mult+0x68>
   88d16:	6871      	ldr	r1, [r6, #4]
   88d18:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88d1a:	1064      	asrs	r4, r4, #1
   88d1c:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
   88d20:	6032      	str	r2, [r6, #0]
   88d22:	f843 6021 	str.w	r6, [r3, r1, lsl #2]
   88d26:	4606      	mov	r6, r0
   88d28:	d1ea      	bne.n	88d00 <__pow5mult+0x24>
   88d2a:	4630      	mov	r0, r6
   88d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88d30:	462a      	mov	r2, r5
   88d32:	4629      	mov	r1, r5
   88d34:	4638      	mov	r0, r7
   88d36:	f7ff ff23 	bl	88b80 <__multiply>
   88d3a:	6028      	str	r0, [r5, #0]
   88d3c:	4605      	mov	r5, r0
   88d3e:	f8c0 8000 	str.w	r8, [r0]
   88d42:	e7e0      	b.n	88d06 <__pow5mult+0x2a>
   88d44:	4606      	mov	r6, r0
   88d46:	e7d9      	b.n	88cfc <__pow5mult+0x20>
   88d48:	4a0f      	ldr	r2, [pc, #60]	; (88d88 <__pow5mult+0xac>)
   88d4a:	3b01      	subs	r3, #1
   88d4c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   88d50:	2300      	movs	r3, #0
   88d52:	f7ff fe49 	bl	889e8 <__multadd>
   88d56:	4606      	mov	r6, r0
   88d58:	e7c8      	b.n	88cec <__pow5mult+0x10>
   88d5a:	2101      	movs	r1, #1
   88d5c:	4638      	mov	r0, r7
   88d5e:	f7ff fe13 	bl	88988 <_Balloc>
   88d62:	4605      	mov	r5, r0
   88d64:	b140      	cbz	r0, 88d78 <__pow5mult+0x9c>
   88d66:	f240 2371 	movw	r3, #625	; 0x271
   88d6a:	2201      	movs	r2, #1
   88d6c:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88d70:	2300      	movs	r3, #0
   88d72:	64b8      	str	r0, [r7, #72]	; 0x48
   88d74:	6003      	str	r3, [r0, #0]
   88d76:	e7bd      	b.n	88cf4 <__pow5mult+0x18>
   88d78:	4602      	mov	r2, r0
   88d7a:	f44f 71a0 	mov.w	r1, #320	; 0x140
   88d7e:	4b03      	ldr	r3, [pc, #12]	; (88d8c <__pow5mult+0xb0>)
   88d80:	4803      	ldr	r0, [pc, #12]	; (88d90 <__pow5mult+0xb4>)
   88d82:	f000 fd81 	bl	89888 <__assert_func>
   88d86:	bf00      	nop
   88d88:	0008aba0 	.word	0x0008aba0
   88d8c:	0008a988 	.word	0x0008a988
   88d90:	0008aa2c 	.word	0x0008aa2c

00088d94 <__lshift>:
   88d94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   88d98:	460c      	mov	r4, r1
   88d9a:	6926      	ldr	r6, [r4, #16]
   88d9c:	68a3      	ldr	r3, [r4, #8]
   88d9e:	eb06 1662 	add.w	r6, r6, r2, asr #5
   88da2:	1c75      	adds	r5, r6, #1
   88da4:	429d      	cmp	r5, r3
   88da6:	4690      	mov	r8, r2
   88da8:	4607      	mov	r7, r0
   88daa:	6849      	ldr	r1, [r1, #4]
   88dac:	ea4f 1962 	mov.w	r9, r2, asr #5
   88db0:	dd04      	ble.n	88dbc <__lshift+0x28>
   88db2:	005b      	lsls	r3, r3, #1
   88db4:	429d      	cmp	r5, r3
   88db6:	f101 0101 	add.w	r1, r1, #1
   88dba:	dcfa      	bgt.n	88db2 <__lshift+0x1e>
   88dbc:	4638      	mov	r0, r7
   88dbe:	f7ff fde3 	bl	88988 <_Balloc>
   88dc2:	2800      	cmp	r0, #0
   88dc4:	d051      	beq.n	88e6a <__lshift+0xd6>
   88dc6:	f1b9 0f00 	cmp.w	r9, #0
   88dca:	f100 0114 	add.w	r1, r0, #20
   88dce:	dd0f      	ble.n	88df0 <__lshift+0x5c>
   88dd0:	460b      	mov	r3, r1
   88dd2:	f04f 0c00 	mov.w	ip, #0
   88dd6:	f109 0205 	add.w	r2, r9, #5
   88dda:	ea4f 0e82 	mov.w	lr, r2, lsl #2
   88dde:	eb00 0282 	add.w	r2, r0, r2, lsl #2
   88de2:	f843 cb04 	str.w	ip, [r3], #4
   88de6:	4293      	cmp	r3, r2
   88de8:	d1fb      	bne.n	88de2 <__lshift+0x4e>
   88dea:	f1ae 0314 	sub.w	r3, lr, #20
   88dee:	4419      	add	r1, r3
   88df0:	6922      	ldr	r2, [r4, #16]
   88df2:	f104 0314 	add.w	r3, r4, #20
   88df6:	f018 081f 	ands.w	r8, r8, #31
   88dfa:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   88dfe:	d02c      	beq.n	88e5a <__lshift+0xc6>
   88e00:	468e      	mov	lr, r1
   88e02:	f04f 0a00 	mov.w	sl, #0
   88e06:	f1c8 0920 	rsb	r9, r8, #32
   88e0a:	681a      	ldr	r2, [r3, #0]
   88e0c:	fa02 f208 	lsl.w	r2, r2, r8
   88e10:	ea42 020a 	orr.w	r2, r2, sl
   88e14:	f84e 2b04 	str.w	r2, [lr], #4
   88e18:	f853 2b04 	ldr.w	r2, [r3], #4
   88e1c:	459c      	cmp	ip, r3
   88e1e:	fa22 fa09 	lsr.w	sl, r2, r9
   88e22:	d8f2      	bhi.n	88e0a <__lshift+0x76>
   88e24:	ebac 0304 	sub.w	r3, ip, r4
   88e28:	3b15      	subs	r3, #21
   88e2a:	f023 0303 	bic.w	r3, r3, #3
   88e2e:	3304      	adds	r3, #4
   88e30:	f104 0215 	add.w	r2, r4, #21
   88e34:	4594      	cmp	ip, r2
   88e36:	bf38      	it	cc
   88e38:	2304      	movcc	r3, #4
   88e3a:	f1ba 0f00 	cmp.w	sl, #0
   88e3e:	bf18      	it	ne
   88e40:	462e      	movne	r6, r5
   88e42:	f841 a003 	str.w	sl, [r1, r3]
   88e46:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88e48:	6862      	ldr	r2, [r4, #4]
   88e4a:	6106      	str	r6, [r0, #16]
   88e4c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88e50:	6021      	str	r1, [r4, #0]
   88e52:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
   88e56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88e5a:	3904      	subs	r1, #4
   88e5c:	f853 2b04 	ldr.w	r2, [r3], #4
   88e60:	459c      	cmp	ip, r3
   88e62:	f841 2f04 	str.w	r2, [r1, #4]!
   88e66:	d8f9      	bhi.n	88e5c <__lshift+0xc8>
   88e68:	e7ed      	b.n	88e46 <__lshift+0xb2>
   88e6a:	4602      	mov	r2, r0
   88e6c:	f240 11d9 	movw	r1, #473	; 0x1d9
   88e70:	4b01      	ldr	r3, [pc, #4]	; (88e78 <__lshift+0xe4>)
   88e72:	4802      	ldr	r0, [pc, #8]	; (88e7c <__lshift+0xe8>)
   88e74:	f000 fd08 	bl	89888 <__assert_func>
   88e78:	0008a988 	.word	0x0008a988
   88e7c:	0008aa2c 	.word	0x0008aa2c

00088e80 <__mcmp>:
   88e80:	4684      	mov	ip, r0
   88e82:	690b      	ldr	r3, [r1, #16]
   88e84:	6900      	ldr	r0, [r0, #16]
   88e86:	1ac0      	subs	r0, r0, r3
   88e88:	d115      	bne.n	88eb6 <__mcmp+0x36>
   88e8a:	f10c 0c14 	add.w	ip, ip, #20
   88e8e:	3114      	adds	r1, #20
   88e90:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
   88e94:	b410      	push	{r4}
   88e96:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   88e9a:	e001      	b.n	88ea0 <__mcmp+0x20>
   88e9c:	4594      	cmp	ip, r2
   88e9e:	d208      	bcs.n	88eb2 <__mcmp+0x32>
   88ea0:	f852 4d04 	ldr.w	r4, [r2, #-4]!
   88ea4:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   88ea8:	428c      	cmp	r4, r1
   88eaa:	d0f7      	beq.n	88e9c <__mcmp+0x1c>
   88eac:	d204      	bcs.n	88eb8 <__mcmp+0x38>
   88eae:	f04f 30ff 	mov.w	r0, #4294967295
   88eb2:	bc10      	pop	{r4}
   88eb4:	4770      	bx	lr
   88eb6:	4770      	bx	lr
   88eb8:	2001      	movs	r0, #1
   88eba:	bc10      	pop	{r4}
   88ebc:	4770      	bx	lr
   88ebe:	bf00      	nop

00088ec0 <__mdiff>:
   88ec0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88ec4:	690c      	ldr	r4, [r1, #16]
   88ec6:	6913      	ldr	r3, [r2, #16]
   88ec8:	4689      	mov	r9, r1
   88eca:	1ae4      	subs	r4, r4, r3
   88ecc:	2c00      	cmp	r4, #0
   88ece:	4617      	mov	r7, r2
   88ed0:	d17d      	bne.n	88fce <__mdiff+0x10e>
   88ed2:	f101 0614 	add.w	r6, r1, #20
   88ed6:	3214      	adds	r2, #20
   88ed8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
   88edc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
   88ee0:	e001      	b.n	88ee6 <__mdiff+0x26>
   88ee2:	429e      	cmp	r6, r3
   88ee4:	d276      	bcs.n	88fd4 <__mdiff+0x114>
   88ee6:	f853 5d04 	ldr.w	r5, [r3, #-4]!
   88eea:	f852 1d04 	ldr.w	r1, [r2, #-4]!
   88eee:	428d      	cmp	r5, r1
   88ef0:	d0f7      	beq.n	88ee2 <__mdiff+0x22>
   88ef2:	d367      	bcc.n	88fc4 <__mdiff+0x104>
   88ef4:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88ef8:	f7ff fd46 	bl	88988 <_Balloc>
   88efc:	2800      	cmp	r0, #0
   88efe:	d073      	beq.n	88fe8 <__mdiff+0x128>
   88f00:	f8d9 5010 	ldr.w	r5, [r9, #16]
   88f04:	60c4      	str	r4, [r0, #12]
   88f06:	f100 0414 	add.w	r4, r0, #20
   88f0a:	4626      	mov	r6, r4
   88f0c:	f04f 0a00 	mov.w	sl, #0
   88f10:	693b      	ldr	r3, [r7, #16]
   88f12:	f109 0814 	add.w	r8, r9, #20
   88f16:	f107 0e14 	add.w	lr, r7, #20
   88f1a:	f109 0c10 	add.w	ip, r9, #16
   88f1e:	eb08 0285 	add.w	r2, r8, r5, lsl #2
   88f22:	eb0e 0983 	add.w	r9, lr, r3, lsl #2
   88f26:	f85c bf04 	ldr.w	fp, [ip, #4]!
   88f2a:	f85e 1b04 	ldr.w	r1, [lr], #4
   88f2e:	fa1f f38b 	uxth.w	r3, fp
   88f32:	4453      	add	r3, sl
   88f34:	fa1f fa81 	uxth.w	sl, r1
   88f38:	0c09      	lsrs	r1, r1, #16
   88f3a:	eba3 030a 	sub.w	r3, r3, sl
   88f3e:	ebc1 411b 	rsb	r1, r1, fp, lsr #16
   88f42:	eb01 4123 	add.w	r1, r1, r3, asr #16
   88f46:	b29b      	uxth	r3, r3
   88f48:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88f4c:	45f1      	cmp	r9, lr
   88f4e:	f846 3b04 	str.w	r3, [r6], #4
   88f52:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88f56:	d8e6      	bhi.n	88f26 <__mdiff+0x66>
   88f58:	eba9 0107 	sub.w	r1, r9, r7
   88f5c:	3915      	subs	r1, #21
   88f5e:	3715      	adds	r7, #21
   88f60:	45b9      	cmp	r9, r7
   88f62:	f021 0603 	bic.w	r6, r1, #3
   88f66:	f106 0604 	add.w	r6, r6, #4
   88f6a:	bf38      	it	cc
   88f6c:	2604      	movcc	r6, #4
   88f6e:	f021 0103 	bic.w	r1, r1, #3
   88f72:	bf38      	it	cc
   88f74:	2100      	movcc	r1, #0
   88f76:	44b0      	add	r8, r6
   88f78:	4542      	cmp	r2, r8
   88f7a:	4426      	add	r6, r4
   88f7c:	440c      	add	r4, r1
   88f7e:	d918      	bls.n	88fb2 <__mdiff+0xf2>
   88f80:	4637      	mov	r7, r6
   88f82:	4644      	mov	r4, r8
   88f84:	f854 1b04 	ldr.w	r1, [r4], #4
   88f88:	b28b      	uxth	r3, r1
   88f8a:	4453      	add	r3, sl
   88f8c:	ea4f 4a23 	mov.w	sl, r3, asr #16
   88f90:	eb0a 4111 	add.w	r1, sl, r1, lsr #16
   88f94:	b29b      	uxth	r3, r3
   88f96:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88f9a:	42a2      	cmp	r2, r4
   88f9c:	f847 3b04 	str.w	r3, [r7], #4
   88fa0:	ea4f 4a21 	mov.w	sl, r1, asr #16
   88fa4:	d8ee      	bhi.n	88f84 <__mdiff+0xc4>
   88fa6:	1e54      	subs	r4, r2, #1
   88fa8:	eba4 0408 	sub.w	r4, r4, r8
   88fac:	f024 0403 	bic.w	r4, r4, #3
   88fb0:	4434      	add	r4, r6
   88fb2:	b923      	cbnz	r3, 88fbe <__mdiff+0xfe>
   88fb4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88fb8:	3d01      	subs	r5, #1
   88fba:	2b00      	cmp	r3, #0
   88fbc:	d0fa      	beq.n	88fb4 <__mdiff+0xf4>
   88fbe:	6105      	str	r5, [r0, #16]
   88fc0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88fc4:	464b      	mov	r3, r9
   88fc6:	2401      	movs	r4, #1
   88fc8:	46b9      	mov	r9, r7
   88fca:	461f      	mov	r7, r3
   88fcc:	e792      	b.n	88ef4 <__mdiff+0x34>
   88fce:	dbf9      	blt.n	88fc4 <__mdiff+0x104>
   88fd0:	2400      	movs	r4, #0
   88fd2:	e78f      	b.n	88ef4 <__mdiff+0x34>
   88fd4:	2100      	movs	r1, #0
   88fd6:	f7ff fcd7 	bl	88988 <_Balloc>
   88fda:	b160      	cbz	r0, 88ff6 <__mdiff+0x136>
   88fdc:	2201      	movs	r2, #1
   88fde:	2300      	movs	r3, #0
   88fe0:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88fe4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88fe8:	4602      	mov	r2, r0
   88fea:	f44f 7110 	mov.w	r1, #576	; 0x240
   88fee:	4b05      	ldr	r3, [pc, #20]	; (89004 <__mdiff+0x144>)
   88ff0:	4805      	ldr	r0, [pc, #20]	; (89008 <__mdiff+0x148>)
   88ff2:	f000 fc49 	bl	89888 <__assert_func>
   88ff6:	4602      	mov	r2, r0
   88ff8:	f240 2132 	movw	r1, #562	; 0x232
   88ffc:	4b01      	ldr	r3, [pc, #4]	; (89004 <__mdiff+0x144>)
   88ffe:	4802      	ldr	r0, [pc, #8]	; (89008 <__mdiff+0x148>)
   89000:	f000 fc42 	bl	89888 <__assert_func>
   89004:	0008a988 	.word	0x0008a988
   89008:	0008aa2c 	.word	0x0008aa2c

0008900c <__d2b>:
   8900c:	b570      	push	{r4, r5, r6, lr}
   8900e:	2101      	movs	r1, #1
   89010:	b082      	sub	sp, #8
   89012:	4616      	mov	r6, r2
   89014:	461d      	mov	r5, r3
   89016:	f7ff fcb7 	bl	88988 <_Balloc>
   8901a:	4604      	mov	r4, r0
   8901c:	2800      	cmp	r0, #0
   8901e:	d04c      	beq.n	890ba <__d2b+0xae>
   89020:	462b      	mov	r3, r5
   89022:	f3c5 550a 	ubfx	r5, r5, #20, #11
   89026:	f3c3 0313 	ubfx	r3, r3, #0, #20
   8902a:	b10d      	cbz	r5, 89030 <__d2b+0x24>
   8902c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   89030:	2e00      	cmp	r6, #0
   89032:	9301      	str	r3, [sp, #4]
   89034:	d022      	beq.n	8907c <__d2b+0x70>
   89036:	4668      	mov	r0, sp
   89038:	9600      	str	r6, [sp, #0]
   8903a:	f7ff fd47 	bl	88acc <__lo0bits>
   8903e:	2800      	cmp	r0, #0
   89040:	d037      	beq.n	890b2 <__d2b+0xa6>
   89042:	9b01      	ldr	r3, [sp, #4]
   89044:	9900      	ldr	r1, [sp, #0]
   89046:	f1c0 0220 	rsb	r2, r0, #32
   8904a:	fa03 f202 	lsl.w	r2, r3, r2
   8904e:	430a      	orrs	r2, r1
   89050:	40c3      	lsrs	r3, r0
   89052:	9301      	str	r3, [sp, #4]
   89054:	6162      	str	r2, [r4, #20]
   89056:	2b00      	cmp	r3, #0
   89058:	bf14      	ite	ne
   8905a:	2102      	movne	r1, #2
   8905c:	2101      	moveq	r1, #1
   8905e:	61a3      	str	r3, [r4, #24]
   89060:	6121      	str	r1, [r4, #16]
   89062:	b1b5      	cbz	r5, 89092 <__d2b+0x86>
   89064:	9b06      	ldr	r3, [sp, #24]
   89066:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
   8906a:	4405      	add	r5, r0
   8906c:	601d      	str	r5, [r3, #0]
   8906e:	9b07      	ldr	r3, [sp, #28]
   89070:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   89074:	6018      	str	r0, [r3, #0]
   89076:	4620      	mov	r0, r4
   89078:	b002      	add	sp, #8
   8907a:	bd70      	pop	{r4, r5, r6, pc}
   8907c:	a801      	add	r0, sp, #4
   8907e:	f7ff fd25 	bl	88acc <__lo0bits>
   89082:	2301      	movs	r3, #1
   89084:	9a01      	ldr	r2, [sp, #4]
   89086:	4619      	mov	r1, r3
   89088:	6162      	str	r2, [r4, #20]
   8908a:	3020      	adds	r0, #32
   8908c:	6123      	str	r3, [r4, #16]
   8908e:	2d00      	cmp	r5, #0
   89090:	d1e8      	bne.n	89064 <__d2b+0x58>
   89092:	eb04 0281 	add.w	r2, r4, r1, lsl #2
   89096:	f2a0 4332 	subw	r3, r0, #1074	; 0x432
   8909a:	6910      	ldr	r0, [r2, #16]
   8909c:	9a06      	ldr	r2, [sp, #24]
   8909e:	6013      	str	r3, [r2, #0]
   890a0:	f7ff fcf4 	bl	88a8c <__hi0bits>
   890a4:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
   890a8:	4620      	mov	r0, r4
   890aa:	9b07      	ldr	r3, [sp, #28]
   890ac:	6019      	str	r1, [r3, #0]
   890ae:	b002      	add	sp, #8
   890b0:	bd70      	pop	{r4, r5, r6, pc}
   890b2:	e9dd 2300 	ldrd	r2, r3, [sp]
   890b6:	6162      	str	r2, [r4, #20]
   890b8:	e7cd      	b.n	89056 <__d2b+0x4a>
   890ba:	4602      	mov	r2, r0
   890bc:	f240 310a 	movw	r1, #778	; 0x30a
   890c0:	4b01      	ldr	r3, [pc, #4]	; (890c8 <__d2b+0xbc>)
   890c2:	4802      	ldr	r0, [pc, #8]	; (890cc <__d2b+0xc0>)
   890c4:	f000 fbe0 	bl	89888 <__assert_func>
   890c8:	0008a988 	.word	0x0008a988
   890cc:	0008aa2c 	.word	0x0008aa2c

000890d0 <_realloc_r>:
   890d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   890d4:	4616      	mov	r6, r2
   890d6:	2900      	cmp	r1, #0
   890d8:	f000 8098 	beq.w	8920c <_realloc_r+0x13c>
   890dc:	f106 050b 	add.w	r5, r6, #11
   890e0:	4680      	mov	r8, r0
   890e2:	460c      	mov	r4, r1
   890e4:	f7ff fc44 	bl	88970 <__malloc_lock>
   890e8:	2d16      	cmp	r5, #22
   890ea:	d85d      	bhi.n	891a8 <_realloc_r+0xd8>
   890ec:	2510      	movs	r5, #16
   890ee:	462a      	mov	r2, r5
   890f0:	42ae      	cmp	r6, r5
   890f2:	d85e      	bhi.n	891b2 <_realloc_r+0xe2>
   890f4:	f854 1c04 	ldr.w	r1, [r4, #-4]
   890f8:	f1a4 0908 	sub.w	r9, r4, #8
   890fc:	f021 0703 	bic.w	r7, r1, #3
   89100:	4297      	cmp	r7, r2
   89102:	da62      	bge.n	891ca <_realloc_r+0xfa>
   89104:	4bbc      	ldr	r3, [pc, #752]	; (893f8 <_realloc_r+0x328>)
   89106:	eb09 0007 	add.w	r0, r9, r7
   8910a:	f8d3 c008 	ldr.w	ip, [r3, #8]
   8910e:	4584      	cmp	ip, r0
   89110:	f000 8097 	beq.w	89242 <_realloc_r+0x172>
   89114:	f8d0 c004 	ldr.w	ip, [r0, #4]
   89118:	f02c 0301 	bic.w	r3, ip, #1
   8911c:	4403      	add	r3, r0
   8911e:	685b      	ldr	r3, [r3, #4]
   89120:	07db      	lsls	r3, r3, #31
   89122:	d468      	bmi.n	891f6 <_realloc_r+0x126>
   89124:	f02c 0c03 	bic.w	ip, ip, #3
   89128:	eb07 030c 	add.w	r3, r7, ip
   8912c:	4293      	cmp	r3, r2
   8912e:	da47      	bge.n	891c0 <_realloc_r+0xf0>
   89130:	07cb      	lsls	r3, r1, #31
   89132:	d410      	bmi.n	89156 <_realloc_r+0x86>
   89134:	f854 3c08 	ldr.w	r3, [r4, #-8]
   89138:	eba9 0a03 	sub.w	sl, r9, r3
   8913c:	f8da 3004 	ldr.w	r3, [sl, #4]
   89140:	f023 0103 	bic.w	r1, r3, #3
   89144:	448c      	add	ip, r1
   89146:	44bc      	add	ip, r7
   89148:	4594      	cmp	ip, r2
   8914a:	f280 8111 	bge.w	89370 <_realloc_r+0x2a0>
   8914e:	187b      	adds	r3, r7, r1
   89150:	4293      	cmp	r3, r2
   89152:	f280 80e8 	bge.w	89326 <_realloc_r+0x256>
   89156:	4631      	mov	r1, r6
   89158:	4640      	mov	r0, r8
   8915a:	f7ff f883 	bl	88264 <_malloc_r>
   8915e:	4606      	mov	r6, r0
   89160:	b1e0      	cbz	r0, 8919c <_realloc_r+0xcc>
   89162:	f854 3c04 	ldr.w	r3, [r4, #-4]
   89166:	f1a0 0208 	sub.w	r2, r0, #8
   8916a:	f023 0301 	bic.w	r3, r3, #1
   8916e:	444b      	add	r3, r9
   89170:	4293      	cmp	r3, r2
   89172:	f000 80d2 	beq.w	8931a <_realloc_r+0x24a>
   89176:	1f3a      	subs	r2, r7, #4
   89178:	2a24      	cmp	r2, #36	; 0x24
   8917a:	f200 80f5 	bhi.w	89368 <_realloc_r+0x298>
   8917e:	2a13      	cmp	r2, #19
   89180:	f200 80ac 	bhi.w	892dc <_realloc_r+0x20c>
   89184:	4603      	mov	r3, r0
   89186:	4622      	mov	r2, r4
   89188:	6811      	ldr	r1, [r2, #0]
   8918a:	6019      	str	r1, [r3, #0]
   8918c:	6851      	ldr	r1, [r2, #4]
   8918e:	6059      	str	r1, [r3, #4]
   89190:	6892      	ldr	r2, [r2, #8]
   89192:	609a      	str	r2, [r3, #8]
   89194:	4621      	mov	r1, r4
   89196:	4640      	mov	r0, r8
   89198:	f7fe fd0e 	bl	87bb8 <_free_r>
   8919c:	4640      	mov	r0, r8
   8919e:	f7ff fbed 	bl	8897c <__malloc_unlock>
   891a2:	4630      	mov	r0, r6
   891a4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   891a8:	f025 0507 	bic.w	r5, r5, #7
   891ac:	2d00      	cmp	r5, #0
   891ae:	462a      	mov	r2, r5
   891b0:	da9e      	bge.n	890f0 <_realloc_r+0x20>
   891b2:	230c      	movs	r3, #12
   891b4:	2600      	movs	r6, #0
   891b6:	f8c8 3000 	str.w	r3, [r8]
   891ba:	4630      	mov	r0, r6
   891bc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   891c0:	461f      	mov	r7, r3
   891c2:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
   891c6:	60d3      	str	r3, [r2, #12]
   891c8:	609a      	str	r2, [r3, #8]
   891ca:	1b7b      	subs	r3, r7, r5
   891cc:	2b0f      	cmp	r3, #15
   891ce:	d822      	bhi.n	89216 <_realloc_r+0x146>
   891d0:	f8d9 3004 	ldr.w	r3, [r9, #4]
   891d4:	f003 0301 	and.w	r3, r3, #1
   891d8:	433b      	orrs	r3, r7
   891da:	f8c9 3004 	str.w	r3, [r9, #4]
   891de:	444f      	add	r7, r9
   891e0:	687b      	ldr	r3, [r7, #4]
   891e2:	f043 0301 	orr.w	r3, r3, #1
   891e6:	607b      	str	r3, [r7, #4]
   891e8:	4626      	mov	r6, r4
   891ea:	4640      	mov	r0, r8
   891ec:	f7ff fbc6 	bl	8897c <__malloc_unlock>
   891f0:	4630      	mov	r0, r6
   891f2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   891f6:	07c9      	lsls	r1, r1, #31
   891f8:	d4ad      	bmi.n	89156 <_realloc_r+0x86>
   891fa:	f854 3c08 	ldr.w	r3, [r4, #-8]
   891fe:	eba9 0a03 	sub.w	sl, r9, r3
   89202:	f8da 1004 	ldr.w	r1, [sl, #4]
   89206:	f021 0103 	bic.w	r1, r1, #3
   8920a:	e7a0      	b.n	8914e <_realloc_r+0x7e>
   8920c:	4611      	mov	r1, r2
   8920e:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   89212:	f7ff b827 	b.w	88264 <_malloc_r>
   89216:	f8d9 1004 	ldr.w	r1, [r9, #4]
   8921a:	f043 0301 	orr.w	r3, r3, #1
   8921e:	f001 0101 	and.w	r1, r1, #1
   89222:	4329      	orrs	r1, r5
   89224:	f8c9 1004 	str.w	r1, [r9, #4]
   89228:	eb09 0105 	add.w	r1, r9, r5
   8922c:	604b      	str	r3, [r1, #4]
   8922e:	444f      	add	r7, r9
   89230:	687b      	ldr	r3, [r7, #4]
   89232:	4640      	mov	r0, r8
   89234:	f043 0301 	orr.w	r3, r3, #1
   89238:	3108      	adds	r1, #8
   8923a:	607b      	str	r3, [r7, #4]
   8923c:	f7fe fcbc 	bl	87bb8 <_free_r>
   89240:	e7d2      	b.n	891e8 <_realloc_r+0x118>
   89242:	f8dc 0004 	ldr.w	r0, [ip, #4]
   89246:	f020 0b03 	bic.w	fp, r0, #3
   8924a:	eb07 0c0b 	add.w	ip, r7, fp
   8924e:	f105 0010 	add.w	r0, r5, #16
   89252:	4584      	cmp	ip, r0
   89254:	da4d      	bge.n	892f2 <_realloc_r+0x222>
   89256:	07c9      	lsls	r1, r1, #31
   89258:	f53f af7d 	bmi.w	89156 <_realloc_r+0x86>
   8925c:	f854 1c08 	ldr.w	r1, [r4, #-8]
   89260:	eba9 0a01 	sub.w	sl, r9, r1
   89264:	f8da 1004 	ldr.w	r1, [sl, #4]
   89268:	f021 0103 	bic.w	r1, r1, #3
   8926c:	448b      	add	fp, r1
   8926e:	44bb      	add	fp, r7
   89270:	4558      	cmp	r0, fp
   89272:	f73f af6c 	bgt.w	8914e <_realloc_r+0x7e>
   89276:	4656      	mov	r6, sl
   89278:	f8da 100c 	ldr.w	r1, [sl, #12]
   8927c:	f856 0f08 	ldr.w	r0, [r6, #8]!
   89280:	1f3a      	subs	r2, r7, #4
   89282:	2a24      	cmp	r2, #36	; 0x24
   89284:	60c1      	str	r1, [r0, #12]
   89286:	6088      	str	r0, [r1, #8]
   89288:	f200 80db 	bhi.w	89442 <_realloc_r+0x372>
   8928c:	2a13      	cmp	r2, #19
   8928e:	f240 80d6 	bls.w	8943e <_realloc_r+0x36e>
   89292:	6821      	ldr	r1, [r4, #0]
   89294:	2a1b      	cmp	r2, #27
   89296:	f8ca 1008 	str.w	r1, [sl, #8]
   8929a:	6861      	ldr	r1, [r4, #4]
   8929c:	f8ca 100c 	str.w	r1, [sl, #12]
   892a0:	f200 80e0 	bhi.w	89464 <_realloc_r+0x394>
   892a4:	3408      	adds	r4, #8
   892a6:	f10a 0210 	add.w	r2, sl, #16
   892aa:	6821      	ldr	r1, [r4, #0]
   892ac:	6011      	str	r1, [r2, #0]
   892ae:	6861      	ldr	r1, [r4, #4]
   892b0:	6051      	str	r1, [r2, #4]
   892b2:	68a1      	ldr	r1, [r4, #8]
   892b4:	6091      	str	r1, [r2, #8]
   892b6:	ebab 0205 	sub.w	r2, fp, r5
   892ba:	eb0a 0105 	add.w	r1, sl, r5
   892be:	f042 0201 	orr.w	r2, r2, #1
   892c2:	6099      	str	r1, [r3, #8]
   892c4:	604a      	str	r2, [r1, #4]
   892c6:	f8da 3004 	ldr.w	r3, [sl, #4]
   892ca:	4640      	mov	r0, r8
   892cc:	f003 0301 	and.w	r3, r3, #1
   892d0:	431d      	orrs	r5, r3
   892d2:	f8ca 5004 	str.w	r5, [sl, #4]
   892d6:	f7ff fb51 	bl	8897c <__malloc_unlock>
   892da:	e76e      	b.n	891ba <_realloc_r+0xea>
   892dc:	6823      	ldr	r3, [r4, #0]
   892de:	2a1b      	cmp	r2, #27
   892e0:	6003      	str	r3, [r0, #0]
   892e2:	6863      	ldr	r3, [r4, #4]
   892e4:	6043      	str	r3, [r0, #4]
   892e6:	d868      	bhi.n	893ba <_realloc_r+0x2ea>
   892e8:	f104 0208 	add.w	r2, r4, #8
   892ec:	f100 0308 	add.w	r3, r0, #8
   892f0:	e74a      	b.n	89188 <_realloc_r+0xb8>
   892f2:	eb09 0205 	add.w	r2, r9, r5
   892f6:	ebac 0c05 	sub.w	ip, ip, r5
   892fa:	609a      	str	r2, [r3, #8]
   892fc:	f04c 0301 	orr.w	r3, ip, #1
   89300:	6053      	str	r3, [r2, #4]
   89302:	f854 3c04 	ldr.w	r3, [r4, #-4]
   89306:	4640      	mov	r0, r8
   89308:	f003 0301 	and.w	r3, r3, #1
   8930c:	431d      	orrs	r5, r3
   8930e:	f844 5c04 	str.w	r5, [r4, #-4]
   89312:	f7ff fb33 	bl	8897c <__malloc_unlock>
   89316:	4626      	mov	r6, r4
   89318:	e74f      	b.n	891ba <_realloc_r+0xea>
   8931a:	f850 3c04 	ldr.w	r3, [r0, #-4]
   8931e:	f023 0303 	bic.w	r3, r3, #3
   89322:	441f      	add	r7, r3
   89324:	e751      	b.n	891ca <_realloc_r+0xfa>
   89326:	4656      	mov	r6, sl
   89328:	f8da 100c 	ldr.w	r1, [sl, #12]
   8932c:	f856 0f08 	ldr.w	r0, [r6, #8]!
   89330:	1f3a      	subs	r2, r7, #4
   89332:	2a24      	cmp	r2, #36	; 0x24
   89334:	60c1      	str	r1, [r0, #12]
   89336:	6088      	str	r0, [r1, #8]
   89338:	d84c      	bhi.n	893d4 <_realloc_r+0x304>
   8933a:	2a13      	cmp	r2, #19
   8933c:	d948      	bls.n	893d0 <_realloc_r+0x300>
   8933e:	6821      	ldr	r1, [r4, #0]
   89340:	2a1b      	cmp	r2, #27
   89342:	f8ca 1008 	str.w	r1, [sl, #8]
   89346:	6861      	ldr	r1, [r4, #4]
   89348:	f8ca 100c 	str.w	r1, [sl, #12]
   8934c:	d856      	bhi.n	893fc <_realloc_r+0x32c>
   8934e:	3408      	adds	r4, #8
   89350:	f10a 0210 	add.w	r2, sl, #16
   89354:	461f      	mov	r7, r3
   89356:	6823      	ldr	r3, [r4, #0]
   89358:	46d1      	mov	r9, sl
   8935a:	6013      	str	r3, [r2, #0]
   8935c:	6863      	ldr	r3, [r4, #4]
   8935e:	6053      	str	r3, [r2, #4]
   89360:	68a3      	ldr	r3, [r4, #8]
   89362:	4634      	mov	r4, r6
   89364:	6093      	str	r3, [r2, #8]
   89366:	e730      	b.n	891ca <_realloc_r+0xfa>
   89368:	4621      	mov	r1, r4
   8936a:	f7ff fa85 	bl	88878 <memmove>
   8936e:	e711      	b.n	89194 <_realloc_r+0xc4>
   89370:	4656      	mov	r6, sl
   89372:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
   89376:	60cb      	str	r3, [r1, #12]
   89378:	6099      	str	r1, [r3, #8]
   8937a:	f856 1f08 	ldr.w	r1, [r6, #8]!
   8937e:	f8da 300c 	ldr.w	r3, [sl, #12]
   89382:	1f3a      	subs	r2, r7, #4
   89384:	2a24      	cmp	r2, #36	; 0x24
   89386:	60cb      	str	r3, [r1, #12]
   89388:	6099      	str	r1, [r3, #8]
   8938a:	d82d      	bhi.n	893e8 <_realloc_r+0x318>
   8938c:	2a13      	cmp	r2, #19
   8938e:	d929      	bls.n	893e4 <_realloc_r+0x314>
   89390:	6823      	ldr	r3, [r4, #0]
   89392:	2a1b      	cmp	r2, #27
   89394:	f8ca 3008 	str.w	r3, [sl, #8]
   89398:	6863      	ldr	r3, [r4, #4]
   8939a:	f8ca 300c 	str.w	r3, [sl, #12]
   8939e:	d842      	bhi.n	89426 <_realloc_r+0x356>
   893a0:	3408      	adds	r4, #8
   893a2:	f10a 0310 	add.w	r3, sl, #16
   893a6:	6822      	ldr	r2, [r4, #0]
   893a8:	4667      	mov	r7, ip
   893aa:	601a      	str	r2, [r3, #0]
   893ac:	6862      	ldr	r2, [r4, #4]
   893ae:	46d1      	mov	r9, sl
   893b0:	605a      	str	r2, [r3, #4]
   893b2:	68a2      	ldr	r2, [r4, #8]
   893b4:	4634      	mov	r4, r6
   893b6:	609a      	str	r2, [r3, #8]
   893b8:	e707      	b.n	891ca <_realloc_r+0xfa>
   893ba:	68a3      	ldr	r3, [r4, #8]
   893bc:	2a24      	cmp	r2, #36	; 0x24
   893be:	6083      	str	r3, [r0, #8]
   893c0:	68e3      	ldr	r3, [r4, #12]
   893c2:	60c3      	str	r3, [r0, #12]
   893c4:	d026      	beq.n	89414 <_realloc_r+0x344>
   893c6:	f104 0210 	add.w	r2, r4, #16
   893ca:	f100 0310 	add.w	r3, r0, #16
   893ce:	e6db      	b.n	89188 <_realloc_r+0xb8>
   893d0:	4632      	mov	r2, r6
   893d2:	e7bf      	b.n	89354 <_realloc_r+0x284>
   893d4:	4621      	mov	r1, r4
   893d6:	4630      	mov	r0, r6
   893d8:	461f      	mov	r7, r3
   893da:	46d1      	mov	r9, sl
   893dc:	f7ff fa4c 	bl	88878 <memmove>
   893e0:	4634      	mov	r4, r6
   893e2:	e6f2      	b.n	891ca <_realloc_r+0xfa>
   893e4:	4633      	mov	r3, r6
   893e6:	e7de      	b.n	893a6 <_realloc_r+0x2d6>
   893e8:	4621      	mov	r1, r4
   893ea:	4630      	mov	r0, r6
   893ec:	4667      	mov	r7, ip
   893ee:	46d1      	mov	r9, sl
   893f0:	f7ff fa42 	bl	88878 <memmove>
   893f4:	4634      	mov	r4, r6
   893f6:	e6e8      	b.n	891ca <_realloc_r+0xfa>
   893f8:	20000998 	.word	0x20000998
   893fc:	68a1      	ldr	r1, [r4, #8]
   893fe:	2a24      	cmp	r2, #36	; 0x24
   89400:	f8ca 1010 	str.w	r1, [sl, #16]
   89404:	68e1      	ldr	r1, [r4, #12]
   89406:	f8ca 1014 	str.w	r1, [sl, #20]
   8940a:	d020      	beq.n	8944e <_realloc_r+0x37e>
   8940c:	3410      	adds	r4, #16
   8940e:	f10a 0218 	add.w	r2, sl, #24
   89412:	e79f      	b.n	89354 <_realloc_r+0x284>
   89414:	6923      	ldr	r3, [r4, #16]
   89416:	f104 0218 	add.w	r2, r4, #24
   8941a:	6103      	str	r3, [r0, #16]
   8941c:	6963      	ldr	r3, [r4, #20]
   8941e:	6143      	str	r3, [r0, #20]
   89420:	f100 0318 	add.w	r3, r0, #24
   89424:	e6b0      	b.n	89188 <_realloc_r+0xb8>
   89426:	68a3      	ldr	r3, [r4, #8]
   89428:	2a24      	cmp	r2, #36	; 0x24
   8942a:	f8ca 3010 	str.w	r3, [sl, #16]
   8942e:	68e3      	ldr	r3, [r4, #12]
   89430:	f8ca 3014 	str.w	r3, [sl, #20]
   89434:	d022      	beq.n	8947c <_realloc_r+0x3ac>
   89436:	3410      	adds	r4, #16
   89438:	f10a 0318 	add.w	r3, sl, #24
   8943c:	e7b3      	b.n	893a6 <_realloc_r+0x2d6>
   8943e:	4632      	mov	r2, r6
   89440:	e733      	b.n	892aa <_realloc_r+0x1da>
   89442:	4621      	mov	r1, r4
   89444:	4630      	mov	r0, r6
   89446:	f7ff fa17 	bl	88878 <memmove>
   8944a:	4b17      	ldr	r3, [pc, #92]	; (894a8 <_realloc_r+0x3d8>)
   8944c:	e733      	b.n	892b6 <_realloc_r+0x1e6>
   8944e:	6922      	ldr	r2, [r4, #16]
   89450:	3418      	adds	r4, #24
   89452:	f8ca 2018 	str.w	r2, [sl, #24]
   89456:	f854 2c04 	ldr.w	r2, [r4, #-4]
   8945a:	f8ca 201c 	str.w	r2, [sl, #28]
   8945e:	f10a 0220 	add.w	r2, sl, #32
   89462:	e777      	b.n	89354 <_realloc_r+0x284>
   89464:	68a1      	ldr	r1, [r4, #8]
   89466:	2a24      	cmp	r2, #36	; 0x24
   89468:	f8ca 1010 	str.w	r1, [sl, #16]
   8946c:	68e1      	ldr	r1, [r4, #12]
   8946e:	f8ca 1014 	str.w	r1, [sl, #20]
   89472:	d00e      	beq.n	89492 <_realloc_r+0x3c2>
   89474:	3410      	adds	r4, #16
   89476:	f10a 0218 	add.w	r2, sl, #24
   8947a:	e716      	b.n	892aa <_realloc_r+0x1da>
   8947c:	6923      	ldr	r3, [r4, #16]
   8947e:	3418      	adds	r4, #24
   89480:	f8ca 3018 	str.w	r3, [sl, #24]
   89484:	f854 3c04 	ldr.w	r3, [r4, #-4]
   89488:	f8ca 301c 	str.w	r3, [sl, #28]
   8948c:	f10a 0320 	add.w	r3, sl, #32
   89490:	e789      	b.n	893a6 <_realloc_r+0x2d6>
   89492:	6922      	ldr	r2, [r4, #16]
   89494:	3418      	adds	r4, #24
   89496:	f8ca 2018 	str.w	r2, [sl, #24]
   8949a:	f854 2c04 	ldr.w	r2, [r4, #-4]
   8949e:	f8ca 201c 	str.w	r2, [sl, #28]
   894a2:	f10a 0220 	add.w	r2, sl, #32
   894a6:	e700      	b.n	892aa <_realloc_r+0x1da>
   894a8:	20000998 	.word	0x20000998

000894ac <frexp>:
   894ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   894ae:	2700      	movs	r7, #0
   894b0:	f8df c05c 	ldr.w	ip, [pc, #92]	; 89510 <frexp+0x64>
   894b4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   894b8:	4563      	cmp	r3, ip
   894ba:	4604      	mov	r4, r0
   894bc:	460d      	mov	r5, r1
   894be:	6017      	str	r7, [r2, #0]
   894c0:	dc23      	bgt.n	8950a <frexp+0x5e>
   894c2:	4684      	mov	ip, r0
   894c4:	ea53 0c0c 	orrs.w	ip, r3, ip
   894c8:	d01f      	beq.n	8950a <frexp+0x5e>
   894ca:	f8df c048 	ldr.w	ip, [pc, #72]	; 89514 <frexp+0x68>
   894ce:	4616      	mov	r6, r2
   894d0:	ea01 0c0c 	and.w	ip, r1, ip
   894d4:	460a      	mov	r2, r1
   894d6:	f1bc 0f00 	cmp.w	ip, #0
   894da:	d109      	bne.n	894f0 <frexp+0x44>
   894dc:	2200      	movs	r2, #0
   894de:	4b0e      	ldr	r3, [pc, #56]	; (89518 <frexp+0x6c>)
   894e0:	f000 fd1a 	bl	89f18 <__aeabi_dmul>
   894e4:	f06f 0735 	mvn.w	r7, #53	; 0x35
   894e8:	4604      	mov	r4, r0
   894ea:	460a      	mov	r2, r1
   894ec:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   894f0:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
   894f4:	151b      	asrs	r3, r3, #20
   894f6:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
   894fa:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
   894fe:	443b      	add	r3, r7
   89500:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
   89504:	6033      	str	r3, [r6, #0]
   89506:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
   8950a:	4620      	mov	r0, r4
   8950c:	4629      	mov	r1, r5
   8950e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   89510:	7fefffff 	.word	0x7fefffff
   89514:	7ff00000 	.word	0x7ff00000
   89518:	43500000 	.word	0x43500000

0008951c <_sbrk_r>:
   8951c:	2200      	movs	r2, #0
   8951e:	b538      	push	{r3, r4, r5, lr}
   89520:	4d06      	ldr	r5, [pc, #24]	; (8953c <_sbrk_r+0x20>)
   89522:	4604      	mov	r4, r0
   89524:	4608      	mov	r0, r1
   89526:	602a      	str	r2, [r5, #0]
   89528:	f7f9 ffc8 	bl	834bc <_sbrk>
   8952c:	1c43      	adds	r3, r0, #1
   8952e:	d000      	beq.n	89532 <_sbrk_r+0x16>
   89530:	bd38      	pop	{r3, r4, r5, pc}
   89532:	682b      	ldr	r3, [r5, #0]
   89534:	2b00      	cmp	r3, #0
   89536:	d0fb      	beq.n	89530 <_sbrk_r+0x14>
   89538:	6023      	str	r3, [r4, #0]
   8953a:	bd38      	pop	{r3, r4, r5, pc}
   8953c:	20003760 	.word	0x20003760

00089540 <__sread>:
   89540:	b510      	push	{r4, lr}
   89542:	460c      	mov	r4, r1
   89544:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   89548:	f000 fac8 	bl	89adc <_read_r>
   8954c:	2800      	cmp	r0, #0
   8954e:	db03      	blt.n	89558 <__sread+0x18>
   89550:	6d23      	ldr	r3, [r4, #80]	; 0x50
   89552:	4403      	add	r3, r0
   89554:	6523      	str	r3, [r4, #80]	; 0x50
   89556:	bd10      	pop	{r4, pc}
   89558:	89a3      	ldrh	r3, [r4, #12]
   8955a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   8955e:	81a3      	strh	r3, [r4, #12]
   89560:	bd10      	pop	{r4, pc}
   89562:	bf00      	nop

00089564 <__swrite>:
   89564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   89568:	460c      	mov	r4, r1
   8956a:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
   8956e:	461f      	mov	r7, r3
   89570:	05cb      	lsls	r3, r1, #23
   89572:	4605      	mov	r5, r0
   89574:	4616      	mov	r6, r2
   89576:	d40b      	bmi.n	89590 <__swrite+0x2c>
   89578:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
   8957c:	81a1      	strh	r1, [r4, #12]
   8957e:	463b      	mov	r3, r7
   89580:	4632      	mov	r2, r6
   89582:	4628      	mov	r0, r5
   89584:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   89588:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8958c:	f000 b920 	b.w	897d0 <_write_r>
   89590:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
   89594:	2302      	movs	r3, #2
   89596:	2200      	movs	r2, #0
   89598:	f000 fa8a 	bl	89ab0 <_lseek_r>
   8959c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
   895a0:	e7ea      	b.n	89578 <__swrite+0x14>
   895a2:	bf00      	nop

000895a4 <__sseek>:
   895a4:	b510      	push	{r4, lr}
   895a6:	460c      	mov	r4, r1
   895a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   895ac:	f000 fa80 	bl	89ab0 <_lseek_r>
   895b0:	89a3      	ldrh	r3, [r4, #12]
   895b2:	1c42      	adds	r2, r0, #1
   895b4:	bf0e      	itee	eq
   895b6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
   895ba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
   895be:	6520      	strne	r0, [r4, #80]	; 0x50
   895c0:	81a3      	strh	r3, [r4, #12]
   895c2:	bd10      	pop	{r4, pc}

000895c4 <__sclose>:
   895c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
   895c8:	f000 b9ba 	b.w	89940 <_close_r>

000895cc <__ssprint_r>:
   895cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   895d0:	6893      	ldr	r3, [r2, #8]
   895d2:	4691      	mov	r9, r2
   895d4:	b083      	sub	sp, #12
   895d6:	2b00      	cmp	r3, #0
   895d8:	d06e      	beq.n	896b8 <__ssprint_r+0xec>
   895da:	6817      	ldr	r7, [r2, #0]
   895dc:	4680      	mov	r8, r0
   895de:	460c      	mov	r4, r1
   895e0:	6808      	ldr	r0, [r1, #0]
   895e2:	688d      	ldr	r5, [r1, #8]
   895e4:	3708      	adds	r7, #8
   895e6:	e044      	b.n	89672 <__ssprint_r+0xa6>
   895e8:	f8b4 c00c 	ldrh.w	ip, [r4, #12]
   895ec:	f41c 6f90 	tst.w	ip, #1152	; 0x480
   895f0:	d02e      	beq.n	89650 <__ssprint_r+0x84>
   895f2:	e9d4 1304 	ldrd	r1, r3, [r4, #16]
   895f6:	1a45      	subs	r5, r0, r1
   895f8:	eb03 0343 	add.w	r3, r3, r3, lsl #1
   895fc:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
   89600:	19aa      	adds	r2, r5, r6
   89602:	ea4f 0a63 	mov.w	sl, r3, asr #1
   89606:	1c53      	adds	r3, r2, #1
   89608:	4553      	cmp	r3, sl
   8960a:	4652      	mov	r2, sl
   8960c:	bf84      	itt	hi
   8960e:	469a      	movhi	sl, r3
   89610:	4652      	movhi	r2, sl
   89612:	f41c 6f80 	tst.w	ip, #1024	; 0x400
   89616:	d036      	beq.n	89686 <__ssprint_r+0xba>
   89618:	4611      	mov	r1, r2
   8961a:	4640      	mov	r0, r8
   8961c:	f7fe fe22 	bl	88264 <_malloc_r>
   89620:	2800      	cmp	r0, #0
   89622:	d03a      	beq.n	8969a <__ssprint_r+0xce>
   89624:	462a      	mov	r2, r5
   89626:	6921      	ldr	r1, [r4, #16]
   89628:	9001      	str	r0, [sp, #4]
   8962a:	f7fa f945 	bl	838b8 <memcpy>
   8962e:	89a2      	ldrh	r2, [r4, #12]
   89630:	9b01      	ldr	r3, [sp, #4]
   89632:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   89636:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8963a:	81a2      	strh	r2, [r4, #12]
   8963c:	1958      	adds	r0, r3, r5
   8963e:	ebaa 0505 	sub.w	r5, sl, r5
   89642:	60a5      	str	r5, [r4, #8]
   89644:	f8c4 a014 	str.w	sl, [r4, #20]
   89648:	4635      	mov	r5, r6
   8964a:	46b2      	mov	sl, r6
   8964c:	6123      	str	r3, [r4, #16]
   8964e:	6020      	str	r0, [r4, #0]
   89650:	4659      	mov	r1, fp
   89652:	4652      	mov	r2, sl
   89654:	f7ff f910 	bl	88878 <memmove>
   89658:	f8d9 3008 	ldr.w	r3, [r9, #8]
   8965c:	68a1      	ldr	r1, [r4, #8]
   8965e:	6820      	ldr	r0, [r4, #0]
   89660:	1b4d      	subs	r5, r1, r5
   89662:	4450      	add	r0, sl
   89664:	1b9e      	subs	r6, r3, r6
   89666:	60a5      	str	r5, [r4, #8]
   89668:	6020      	str	r0, [r4, #0]
   8966a:	f8c9 6008 	str.w	r6, [r9, #8]
   8966e:	b31e      	cbz	r6, 896b8 <__ssprint_r+0xec>
   89670:	3708      	adds	r7, #8
   89672:	e957 b602 	ldrd	fp, r6, [r7, #-8]
   89676:	2e00      	cmp	r6, #0
   89678:	d0fa      	beq.n	89670 <__ssprint_r+0xa4>
   8967a:	42b5      	cmp	r5, r6
   8967c:	46aa      	mov	sl, r5
   8967e:	d9b3      	bls.n	895e8 <__ssprint_r+0x1c>
   89680:	4635      	mov	r5, r6
   89682:	46b2      	mov	sl, r6
   89684:	e7e4      	b.n	89650 <__ssprint_r+0x84>
   89686:	4640      	mov	r0, r8
   89688:	f7ff fd22 	bl	890d0 <_realloc_r>
   8968c:	4603      	mov	r3, r0
   8968e:	2800      	cmp	r0, #0
   89690:	d1d4      	bne.n	8963c <__ssprint_r+0x70>
   89692:	4640      	mov	r0, r8
   89694:	6921      	ldr	r1, [r4, #16]
   89696:	f7fe fa8f 	bl	87bb8 <_free_r>
   8969a:	230c      	movs	r3, #12
   8969c:	2200      	movs	r2, #0
   8969e:	f04f 30ff 	mov.w	r0, #4294967295
   896a2:	f8c8 3000 	str.w	r3, [r8]
   896a6:	89a3      	ldrh	r3, [r4, #12]
   896a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   896ac:	81a3      	strh	r3, [r4, #12]
   896ae:	e9c9 2201 	strd	r2, r2, [r9, #4]
   896b2:	b003      	add	sp, #12
   896b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   896b8:	2300      	movs	r3, #0
   896ba:	4618      	mov	r0, r3
   896bc:	f8c9 3004 	str.w	r3, [r9, #4]
   896c0:	b003      	add	sp, #12
   896c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   896c6:	bf00      	nop

000896c8 <__swbuf_r>:
   896c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   896ca:	4606      	mov	r6, r0
   896cc:	460d      	mov	r5, r1
   896ce:	4614      	mov	r4, r2
   896d0:	b110      	cbz	r0, 896d8 <__swbuf_r+0x10>
   896d2:	6b83      	ldr	r3, [r0, #56]	; 0x38
   896d4:	2b00      	cmp	r3, #0
   896d6:	d043      	beq.n	89760 <__swbuf_r+0x98>
   896d8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   896dc:	69a3      	ldr	r3, [r4, #24]
   896de:	0710      	lsls	r0, r2, #28
   896e0:	60a3      	str	r3, [r4, #8]
   896e2:	b291      	uxth	r1, r2
   896e4:	d51b      	bpl.n	8971e <__swbuf_r+0x56>
   896e6:	6923      	ldr	r3, [r4, #16]
   896e8:	b1cb      	cbz	r3, 8971e <__swbuf_r+0x56>
   896ea:	b2ed      	uxtb	r5, r5
   896ec:	0489      	lsls	r1, r1, #18
   896ee:	462f      	mov	r7, r5
   896f0:	d522      	bpl.n	89738 <__swbuf_r+0x70>
   896f2:	6822      	ldr	r2, [r4, #0]
   896f4:	6961      	ldr	r1, [r4, #20]
   896f6:	1ad3      	subs	r3, r2, r3
   896f8:	4299      	cmp	r1, r3
   896fa:	dd29      	ble.n	89750 <__swbuf_r+0x88>
   896fc:	3301      	adds	r3, #1
   896fe:	68a1      	ldr	r1, [r4, #8]
   89700:	3901      	subs	r1, #1
   89702:	60a1      	str	r1, [r4, #8]
   89704:	1c51      	adds	r1, r2, #1
   89706:	6021      	str	r1, [r4, #0]
   89708:	7015      	strb	r5, [r2, #0]
   8970a:	6962      	ldr	r2, [r4, #20]
   8970c:	429a      	cmp	r2, r3
   8970e:	d02a      	beq.n	89766 <__swbuf_r+0x9e>
   89710:	89a3      	ldrh	r3, [r4, #12]
   89712:	07db      	lsls	r3, r3, #31
   89714:	d501      	bpl.n	8971a <__swbuf_r+0x52>
   89716:	2d0a      	cmp	r5, #10
   89718:	d025      	beq.n	89766 <__swbuf_r+0x9e>
   8971a:	4638      	mov	r0, r7
   8971c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8971e:	4621      	mov	r1, r4
   89720:	4630      	mov	r0, r6
   89722:	f7fc ff91 	bl	86648 <__swsetup_r>
   89726:	bb20      	cbnz	r0, 89772 <__swbuf_r+0xaa>
   89728:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
   8972c:	b2ed      	uxtb	r5, r5
   8972e:	b291      	uxth	r1, r2
   89730:	0489      	lsls	r1, r1, #18
   89732:	462f      	mov	r7, r5
   89734:	6923      	ldr	r3, [r4, #16]
   89736:	d4dc      	bmi.n	896f2 <__swbuf_r+0x2a>
   89738:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
   8973c:	81a2      	strh	r2, [r4, #12]
   8973e:	6e62      	ldr	r2, [r4, #100]	; 0x64
   89740:	6961      	ldr	r1, [r4, #20]
   89742:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
   89746:	6662      	str	r2, [r4, #100]	; 0x64
   89748:	6822      	ldr	r2, [r4, #0]
   8974a:	1ad3      	subs	r3, r2, r3
   8974c:	4299      	cmp	r1, r3
   8974e:	dcd5      	bgt.n	896fc <__swbuf_r+0x34>
   89750:	4621      	mov	r1, r4
   89752:	4630      	mov	r0, r6
   89754:	f7fe f880 	bl	87858 <_fflush_r>
   89758:	b958      	cbnz	r0, 89772 <__swbuf_r+0xaa>
   8975a:	2301      	movs	r3, #1
   8975c:	6822      	ldr	r2, [r4, #0]
   8975e:	e7ce      	b.n	896fe <__swbuf_r+0x36>
   89760:	f7fe f8ae 	bl	878c0 <__sinit>
   89764:	e7b8      	b.n	896d8 <__swbuf_r+0x10>
   89766:	4621      	mov	r1, r4
   89768:	4630      	mov	r0, r6
   8976a:	f7fe f875 	bl	87858 <_fflush_r>
   8976e:	2800      	cmp	r0, #0
   89770:	d0d3      	beq.n	8971a <__swbuf_r+0x52>
   89772:	f04f 37ff 	mov.w	r7, #4294967295
   89776:	e7d0      	b.n	8971a <__swbuf_r+0x52>

00089778 <_wcrtomb_r>:
   89778:	b570      	push	{r4, r5, r6, lr}
   8977a:	4605      	mov	r5, r0
   8977c:	461c      	mov	r4, r3
   8977e:	b084      	sub	sp, #16
   89780:	b139      	cbz	r1, 89792 <_wcrtomb_r+0x1a>
   89782:	4e0b      	ldr	r6, [pc, #44]	; (897b0 <_wcrtomb_r+0x38>)
   89784:	f8d6 60e0 	ldr.w	r6, [r6, #224]	; 0xe0
   89788:	47b0      	blx	r6
   8978a:	1c43      	adds	r3, r0, #1
   8978c:	d009      	beq.n	897a2 <_wcrtomb_r+0x2a>
   8978e:	b004      	add	sp, #16
   89790:	bd70      	pop	{r4, r5, r6, pc}
   89792:	460a      	mov	r2, r1
   89794:	4906      	ldr	r1, [pc, #24]	; (897b0 <_wcrtomb_r+0x38>)
   89796:	f8d1 60e0 	ldr.w	r6, [r1, #224]	; 0xe0
   8979a:	a901      	add	r1, sp, #4
   8979c:	47b0      	blx	r6
   8979e:	1c43      	adds	r3, r0, #1
   897a0:	d1f5      	bne.n	8978e <_wcrtomb_r+0x16>
   897a2:	2200      	movs	r2, #0
   897a4:	238a      	movs	r3, #138	; 0x8a
   897a6:	6022      	str	r2, [r4, #0]
   897a8:	602b      	str	r3, [r5, #0]
   897aa:	b004      	add	sp, #16
   897ac:	bd70      	pop	{r4, r5, r6, pc}
   897ae:	bf00      	nop
   897b0:	2000082c 	.word	0x2000082c

000897b4 <__ascii_wctomb>:
   897b4:	4603      	mov	r3, r0
   897b6:	b149      	cbz	r1, 897cc <__ascii_wctomb+0x18>
   897b8:	2aff      	cmp	r2, #255	; 0xff
   897ba:	d802      	bhi.n	897c2 <__ascii_wctomb+0xe>
   897bc:	2001      	movs	r0, #1
   897be:	700a      	strb	r2, [r1, #0]
   897c0:	4770      	bx	lr
   897c2:	228a      	movs	r2, #138	; 0x8a
   897c4:	f04f 30ff 	mov.w	r0, #4294967295
   897c8:	601a      	str	r2, [r3, #0]
   897ca:	4770      	bx	lr
   897cc:	4608      	mov	r0, r1
   897ce:	4770      	bx	lr

000897d0 <_write_r>:
   897d0:	b538      	push	{r3, r4, r5, lr}
   897d2:	460c      	mov	r4, r1
   897d4:	4611      	mov	r1, r2
   897d6:	2200      	movs	r2, #0
   897d8:	4684      	mov	ip, r0
   897da:	4d07      	ldr	r5, [pc, #28]	; (897f8 <_write_r+0x28>)
   897dc:	4620      	mov	r0, r4
   897de:	602a      	str	r2, [r5, #0]
   897e0:	461a      	mov	r2, r3
   897e2:	4664      	mov	r4, ip
   897e4:	f7f9 fb2c 	bl	82e40 <_write>
   897e8:	1c43      	adds	r3, r0, #1
   897ea:	d000      	beq.n	897ee <_write_r+0x1e>
   897ec:	bd38      	pop	{r3, r4, r5, pc}
   897ee:	682b      	ldr	r3, [r5, #0]
   897f0:	2b00      	cmp	r3, #0
   897f2:	d0fb      	beq.n	897ec <_write_r+0x1c>
   897f4:	6023      	str	r3, [r4, #0]
   897f6:	bd38      	pop	{r3, r4, r5, pc}
   897f8:	20003760 	.word	0x20003760

000897fc <__register_exitproc>:
   897fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   89800:	f8df a07c 	ldr.w	sl, [pc, #124]	; 89880 <__register_exitproc+0x84>
   89804:	4606      	mov	r6, r0
   89806:	f8da 0000 	ldr.w	r0, [sl]
   8980a:	4698      	mov	r8, r3
   8980c:	460f      	mov	r7, r1
   8980e:	4691      	mov	r9, r2
   89810:	f7fe fc7c 	bl	8810c <__retarget_lock_acquire_recursive>
   89814:	4b1b      	ldr	r3, [pc, #108]	; (89884 <__register_exitproc+0x88>)
   89816:	681b      	ldr	r3, [r3, #0]
   89818:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
   8981c:	b324      	cbz	r4, 89868 <__register_exitproc+0x6c>
   8981e:	6865      	ldr	r5, [r4, #4]
   89820:	2d1f      	cmp	r5, #31
   89822:	dc26      	bgt.n	89872 <__register_exitproc+0x76>
   89824:	b95e      	cbnz	r6, 8983e <__register_exitproc+0x42>
   89826:	1c6b      	adds	r3, r5, #1
   89828:	3502      	adds	r5, #2
   8982a:	f8da 0000 	ldr.w	r0, [sl]
   8982e:	6063      	str	r3, [r4, #4]
   89830:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
   89834:	f7fe fc6c 	bl	88110 <__retarget_lock_release_recursive>
   89838:	2000      	movs	r0, #0
   8983a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8983e:	2301      	movs	r3, #1
   89840:	eb04 0185 	add.w	r1, r4, r5, lsl #2
   89844:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
   89848:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   8984c:	40ab      	lsls	r3, r5
   8984e:	431a      	orrs	r2, r3
   89850:	2e02      	cmp	r6, #2
   89852:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   89856:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
   8985a:	d1e4      	bne.n	89826 <__register_exitproc+0x2a>
   8985c:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
   89860:	4313      	orrs	r3, r2
   89862:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
   89866:	e7de      	b.n	89826 <__register_exitproc+0x2a>
   89868:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
   8986c:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
   89870:	e7d5      	b.n	8981e <__register_exitproc+0x22>
   89872:	f8da 0000 	ldr.w	r0, [sl]
   89876:	f7fe fc4b 	bl	88110 <__retarget_lock_release_recursive>
   8987a:	f04f 30ff 	mov.w	r0, #4294967295
   8987e:	e7dc      	b.n	8983a <__register_exitproc+0x3e>
   89880:	20000828 	.word	0x20000828
   89884:	0008a8f0 	.word	0x0008a8f0

00089888 <__assert_func>:
   89888:	4614      	mov	r4, r2
   8988a:	b500      	push	{lr}
   8988c:	461a      	mov	r2, r3
   8988e:	4b0a      	ldr	r3, [pc, #40]	; (898b8 <__assert_func+0x30>)
   89890:	460d      	mov	r5, r1
   89892:	681b      	ldr	r3, [r3, #0]
   89894:	b085      	sub	sp, #20
   89896:	68de      	ldr	r6, [r3, #12]
   89898:	4603      	mov	r3, r0
   8989a:	b14c      	cbz	r4, 898b0 <__assert_func+0x28>
   8989c:	4907      	ldr	r1, [pc, #28]	; (898bc <__assert_func+0x34>)
   8989e:	9101      	str	r1, [sp, #4]
   898a0:	4630      	mov	r0, r6
   898a2:	4907      	ldr	r1, [pc, #28]	; (898c0 <__assert_func+0x38>)
   898a4:	9402      	str	r4, [sp, #8]
   898a6:	9500      	str	r5, [sp, #0]
   898a8:	f000 f8c8 	bl	89a3c <fiprintf>
   898ac:	f000 f92c 	bl	89b08 <abort>
   898b0:	4904      	ldr	r1, [pc, #16]	; (898c4 <__assert_func+0x3c>)
   898b2:	460c      	mov	r4, r1
   898b4:	e7f3      	b.n	8989e <__assert_func+0x16>
   898b6:	bf00      	nop
   898b8:	200003fc 	.word	0x200003fc
   898bc:	0008abac 	.word	0x0008abac
   898c0:	0008abbc 	.word	0x0008abbc
   898c4:	0008a8ec 	.word	0x0008a8ec

000898c8 <_calloc_r>:
   898c8:	b538      	push	{r3, r4, r5, lr}
   898ca:	fba1 1402 	umull	r1, r4, r1, r2
   898ce:	bb84      	cbnz	r4, 89932 <_calloc_r+0x6a>
   898d0:	f7fe fcc8 	bl	88264 <_malloc_r>
   898d4:	4605      	mov	r5, r0
   898d6:	b1d8      	cbz	r0, 89910 <_calloc_r+0x48>
   898d8:	f850 2c04 	ldr.w	r2, [r0, #-4]
   898dc:	f022 0203 	bic.w	r2, r2, #3
   898e0:	3a04      	subs	r2, #4
   898e2:	2a24      	cmp	r2, #36	; 0x24
   898e4:	d816      	bhi.n	89914 <_calloc_r+0x4c>
   898e6:	2a13      	cmp	r2, #19
   898e8:	d919      	bls.n	8991e <_calloc_r+0x56>
   898ea:	2a1b      	cmp	r2, #27
   898ec:	e9c0 4400 	strd	r4, r4, [r0]
   898f0:	d91c      	bls.n	8992c <_calloc_r+0x64>
   898f2:	2300      	movs	r3, #0
   898f4:	2a24      	cmp	r2, #36	; 0x24
   898f6:	bf14      	ite	ne
   898f8:	f100 0210 	addne.w	r2, r0, #16
   898fc:	f100 0218 	addeq.w	r2, r0, #24
   89900:	e9c0 4402 	strd	r4, r4, [r0, #8]
   89904:	bf04      	itt	eq
   89906:	6104      	streq	r4, [r0, #16]
   89908:	6144      	streq	r4, [r0, #20]
   8990a:	e9c2 3300 	strd	r3, r3, [r2]
   8990e:	6093      	str	r3, [r2, #8]
   89910:	4628      	mov	r0, r5
   89912:	bd38      	pop	{r3, r4, r5, pc}
   89914:	4621      	mov	r1, r4
   89916:	f7fa f845 	bl	839a4 <memset>
   8991a:	4628      	mov	r0, r5
   8991c:	bd38      	pop	{r3, r4, r5, pc}
   8991e:	4602      	mov	r2, r0
   89920:	2300      	movs	r3, #0
   89922:	4628      	mov	r0, r5
   89924:	e9c2 3300 	strd	r3, r3, [r2]
   89928:	6093      	str	r3, [r2, #8]
   8992a:	bd38      	pop	{r3, r4, r5, pc}
   8992c:	f100 0208 	add.w	r2, r0, #8
   89930:	e7f6      	b.n	89920 <_calloc_r+0x58>
   89932:	f000 f817 	bl	89964 <__errno>
   89936:	230c      	movs	r3, #12
   89938:	2500      	movs	r5, #0
   8993a:	6003      	str	r3, [r0, #0]
   8993c:	e7e8      	b.n	89910 <_calloc_r+0x48>
   8993e:	bf00      	nop

00089940 <_close_r>:
   89940:	2200      	movs	r2, #0
   89942:	b538      	push	{r3, r4, r5, lr}
   89944:	4d06      	ldr	r5, [pc, #24]	; (89960 <_close_r+0x20>)
   89946:	4604      	mov	r4, r0
   89948:	4608      	mov	r0, r1
   8994a:	602a      	str	r2, [r5, #0]
   8994c:	f7f9 fdd6 	bl	834fc <_close>
   89950:	1c43      	adds	r3, r0, #1
   89952:	d000      	beq.n	89956 <_close_r+0x16>
   89954:	bd38      	pop	{r3, r4, r5, pc}
   89956:	682b      	ldr	r3, [r5, #0]
   89958:	2b00      	cmp	r3, #0
   8995a:	d0fb      	beq.n	89954 <_close_r+0x14>
   8995c:	6023      	str	r3, [r4, #0]
   8995e:	bd38      	pop	{r3, r4, r5, pc}
   89960:	20003760 	.word	0x20003760

00089964 <__errno>:
   89964:	4b01      	ldr	r3, [pc, #4]	; (8996c <__errno+0x8>)
   89966:	6818      	ldr	r0, [r3, #0]
   89968:	4770      	bx	lr
   8996a:	bf00      	nop
   8996c:	200003fc 	.word	0x200003fc

00089970 <_fclose_r>:
   89970:	b570      	push	{r4, r5, r6, lr}
   89972:	2900      	cmp	r1, #0
   89974:	d04b      	beq.n	89a0e <_fclose_r+0x9e>
   89976:	4606      	mov	r6, r0
   89978:	460c      	mov	r4, r1
   8997a:	b110      	cbz	r0, 89982 <_fclose_r+0x12>
   8997c:	6b83      	ldr	r3, [r0, #56]	; 0x38
   8997e:	2b00      	cmp	r3, #0
   89980:	d048      	beq.n	89a14 <_fclose_r+0xa4>
   89982:	6e63      	ldr	r3, [r4, #100]	; 0x64
   89984:	07d8      	lsls	r0, r3, #31
   89986:	d534      	bpl.n	899f2 <_fclose_r+0x82>
   89988:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   8998c:	2b00      	cmp	r3, #0
   8998e:	d03e      	beq.n	89a0e <_fclose_r+0x9e>
   89990:	4621      	mov	r1, r4
   89992:	4630      	mov	r0, r6
   89994:	f7fd fece 	bl	87734 <__sflush_r>
   89998:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
   8999a:	4605      	mov	r5, r0
   8999c:	b133      	cbz	r3, 899ac <_fclose_r+0x3c>
   8999e:	4630      	mov	r0, r6
   899a0:	69e1      	ldr	r1, [r4, #28]
   899a2:	4798      	blx	r3
   899a4:	2800      	cmp	r0, #0
   899a6:	bfb8      	it	lt
   899a8:	f04f 35ff 	movlt.w	r5, #4294967295
   899ac:	89a3      	ldrh	r3, [r4, #12]
   899ae:	061a      	lsls	r2, r3, #24
   899b0:	d43b      	bmi.n	89a2a <_fclose_r+0xba>
   899b2:	6b21      	ldr	r1, [r4, #48]	; 0x30
   899b4:	b141      	cbz	r1, 899c8 <_fclose_r+0x58>
   899b6:	f104 0340 	add.w	r3, r4, #64	; 0x40
   899ba:	4299      	cmp	r1, r3
   899bc:	d002      	beq.n	899c4 <_fclose_r+0x54>
   899be:	4630      	mov	r0, r6
   899c0:	f7fe f8fa 	bl	87bb8 <_free_r>
   899c4:	2300      	movs	r3, #0
   899c6:	6323      	str	r3, [r4, #48]	; 0x30
   899c8:	6c61      	ldr	r1, [r4, #68]	; 0x44
   899ca:	b121      	cbz	r1, 899d6 <_fclose_r+0x66>
   899cc:	4630      	mov	r0, r6
   899ce:	f7fe f8f3 	bl	87bb8 <_free_r>
   899d2:	2300      	movs	r3, #0
   899d4:	6463      	str	r3, [r4, #68]	; 0x44
   899d6:	f7fd fff9 	bl	879cc <__sfp_lock_acquire>
   899da:	2200      	movs	r2, #0
   899dc:	6e63      	ldr	r3, [r4, #100]	; 0x64
   899de:	81a2      	strh	r2, [r4, #12]
   899e0:	07db      	lsls	r3, r3, #31
   899e2:	d527      	bpl.n	89a34 <_fclose_r+0xc4>
   899e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
   899e6:	f7fe fb8f 	bl	88108 <__retarget_lock_close_recursive>
   899ea:	f7fd fff5 	bl	879d8 <__sfp_lock_release>
   899ee:	4628      	mov	r0, r5
   899f0:	bd70      	pop	{r4, r5, r6, pc}
   899f2:	89a3      	ldrh	r3, [r4, #12]
   899f4:	0599      	lsls	r1, r3, #22
   899f6:	d4cb      	bmi.n	89990 <_fclose_r+0x20>
   899f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
   899fa:	f7fe fb87 	bl	8810c <__retarget_lock_acquire_recursive>
   899fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
   89a02:	2b00      	cmp	r3, #0
   89a04:	d1c4      	bne.n	89990 <_fclose_r+0x20>
   89a06:	6e65      	ldr	r5, [r4, #100]	; 0x64
   89a08:	f015 0501 	ands.w	r5, r5, #1
   89a0c:	d008      	beq.n	89a20 <_fclose_r+0xb0>
   89a0e:	2500      	movs	r5, #0
   89a10:	4628      	mov	r0, r5
   89a12:	bd70      	pop	{r4, r5, r6, pc}
   89a14:	f7fd ff54 	bl	878c0 <__sinit>
   89a18:	6e63      	ldr	r3, [r4, #100]	; 0x64
   89a1a:	07d8      	lsls	r0, r3, #31
   89a1c:	d4b4      	bmi.n	89988 <_fclose_r+0x18>
   89a1e:	e7e8      	b.n	899f2 <_fclose_r+0x82>
   89a20:	6da0      	ldr	r0, [r4, #88]	; 0x58
   89a22:	f7fe fb75 	bl	88110 <__retarget_lock_release_recursive>
   89a26:	4628      	mov	r0, r5
   89a28:	bd70      	pop	{r4, r5, r6, pc}
   89a2a:	4630      	mov	r0, r6
   89a2c:	6921      	ldr	r1, [r4, #16]
   89a2e:	f7fe f8c3 	bl	87bb8 <_free_r>
   89a32:	e7be      	b.n	899b2 <_fclose_r+0x42>
   89a34:	6da0      	ldr	r0, [r4, #88]	; 0x58
   89a36:	f7fe fb6b 	bl	88110 <__retarget_lock_release_recursive>
   89a3a:	e7d3      	b.n	899e4 <_fclose_r+0x74>

00089a3c <fiprintf>:
   89a3c:	b40e      	push	{r1, r2, r3}
   89a3e:	b500      	push	{lr}
   89a40:	4a07      	ldr	r2, [pc, #28]	; (89a60 <fiprintf+0x24>)
   89a42:	b082      	sub	sp, #8
   89a44:	ab03      	add	r3, sp, #12
   89a46:	4601      	mov	r1, r0
   89a48:	6810      	ldr	r0, [r2, #0]
   89a4a:	f853 2b04 	ldr.w	r2, [r3], #4
   89a4e:	9301      	str	r3, [sp, #4]
   89a50:	f7fb feec 	bl	8582c <_vfiprintf_r>
   89a54:	b002      	add	sp, #8
   89a56:	f85d eb04 	ldr.w	lr, [sp], #4
   89a5a:	b003      	add	sp, #12
   89a5c:	4770      	bx	lr
   89a5e:	bf00      	nop
   89a60:	200003fc 	.word	0x200003fc

00089a64 <_fstat_r>:
   89a64:	b570      	push	{r4, r5, r6, lr}
   89a66:	2600      	movs	r6, #0
   89a68:	4d07      	ldr	r5, [pc, #28]	; (89a88 <_fstat_r+0x24>)
   89a6a:	4604      	mov	r4, r0
   89a6c:	4608      	mov	r0, r1
   89a6e:	4611      	mov	r1, r2
   89a70:	602e      	str	r6, [r5, #0]
   89a72:	f7f9 fd47 	bl	83504 <_fstat>
   89a76:	1c43      	adds	r3, r0, #1
   89a78:	d000      	beq.n	89a7c <_fstat_r+0x18>
   89a7a:	bd70      	pop	{r4, r5, r6, pc}
   89a7c:	682b      	ldr	r3, [r5, #0]
   89a7e:	2b00      	cmp	r3, #0
   89a80:	d0fb      	beq.n	89a7a <_fstat_r+0x16>
   89a82:	6023      	str	r3, [r4, #0]
   89a84:	bd70      	pop	{r4, r5, r6, pc}
   89a86:	bf00      	nop
   89a88:	20003760 	.word	0x20003760

00089a8c <_isatty_r>:
   89a8c:	2200      	movs	r2, #0
   89a8e:	b538      	push	{r3, r4, r5, lr}
   89a90:	4d06      	ldr	r5, [pc, #24]	; (89aac <_isatty_r+0x20>)
   89a92:	4604      	mov	r4, r0
   89a94:	4608      	mov	r0, r1
   89a96:	602a      	str	r2, [r5, #0]
   89a98:	f7f9 fd3a 	bl	83510 <_isatty>
   89a9c:	1c43      	adds	r3, r0, #1
   89a9e:	d000      	beq.n	89aa2 <_isatty_r+0x16>
   89aa0:	bd38      	pop	{r3, r4, r5, pc}
   89aa2:	682b      	ldr	r3, [r5, #0]
   89aa4:	2b00      	cmp	r3, #0
   89aa6:	d0fb      	beq.n	89aa0 <_isatty_r+0x14>
   89aa8:	6023      	str	r3, [r4, #0]
   89aaa:	bd38      	pop	{r3, r4, r5, pc}
   89aac:	20003760 	.word	0x20003760

00089ab0 <_lseek_r>:
   89ab0:	b538      	push	{r3, r4, r5, lr}
   89ab2:	460c      	mov	r4, r1
   89ab4:	4611      	mov	r1, r2
   89ab6:	2200      	movs	r2, #0
   89ab8:	4684      	mov	ip, r0
   89aba:	4d07      	ldr	r5, [pc, #28]	; (89ad8 <_lseek_r+0x28>)
   89abc:	4620      	mov	r0, r4
   89abe:	602a      	str	r2, [r5, #0]
   89ac0:	461a      	mov	r2, r3
   89ac2:	4664      	mov	r4, ip
   89ac4:	f7f9 fd26 	bl	83514 <_lseek>
   89ac8:	1c43      	adds	r3, r0, #1
   89aca:	d000      	beq.n	89ace <_lseek_r+0x1e>
   89acc:	bd38      	pop	{r3, r4, r5, pc}
   89ace:	682b      	ldr	r3, [r5, #0]
   89ad0:	2b00      	cmp	r3, #0
   89ad2:	d0fb      	beq.n	89acc <_lseek_r+0x1c>
   89ad4:	6023      	str	r3, [r4, #0]
   89ad6:	bd38      	pop	{r3, r4, r5, pc}
   89ad8:	20003760 	.word	0x20003760

00089adc <_read_r>:
   89adc:	b538      	push	{r3, r4, r5, lr}
   89ade:	460c      	mov	r4, r1
   89ae0:	4611      	mov	r1, r2
   89ae2:	2200      	movs	r2, #0
   89ae4:	4684      	mov	ip, r0
   89ae6:	4d07      	ldr	r5, [pc, #28]	; (89b04 <_read_r+0x28>)
   89ae8:	4620      	mov	r0, r4
   89aea:	602a      	str	r2, [r5, #0]
   89aec:	461a      	mov	r2, r3
   89aee:	4664      	mov	r4, ip
   89af0:	f7f9 fdba 	bl	83668 <_read>
   89af4:	1c43      	adds	r3, r0, #1
   89af6:	d000      	beq.n	89afa <_read_r+0x1e>
   89af8:	bd38      	pop	{r3, r4, r5, pc}
   89afa:	682b      	ldr	r3, [r5, #0]
   89afc:	2b00      	cmp	r3, #0
   89afe:	d0fb      	beq.n	89af8 <_read_r+0x1c>
   89b00:	6023      	str	r3, [r4, #0]
   89b02:	bd38      	pop	{r3, r4, r5, pc}
   89b04:	20003760 	.word	0x20003760

00089b08 <abort>:
   89b08:	2006      	movs	r0, #6
   89b0a:	b508      	push	{r3, lr}
   89b0c:	f000 f804 	bl	89b18 <raise>
   89b10:	2001      	movs	r0, #1
   89b12:	f7f9 fd01 	bl	83518 <_exit>
   89b16:	bf00      	nop

00089b18 <raise>:
   89b18:	b538      	push	{r3, r4, r5, lr}
   89b1a:	4b15      	ldr	r3, [pc, #84]	; (89b70 <raise+0x58>)
   89b1c:	281f      	cmp	r0, #31
   89b1e:	681d      	ldr	r5, [r3, #0]
   89b20:	d820      	bhi.n	89b64 <raise+0x4c>
   89b22:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
   89b26:	4604      	mov	r4, r0
   89b28:	b162      	cbz	r2, 89b44 <raise+0x2c>
   89b2a:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
   89b2e:	b14b      	cbz	r3, 89b44 <raise+0x2c>
   89b30:	2b01      	cmp	r3, #1
   89b32:	d015      	beq.n	89b60 <raise+0x48>
   89b34:	1c59      	adds	r1, r3, #1
   89b36:	d00f      	beq.n	89b58 <raise+0x40>
   89b38:	2500      	movs	r5, #0
   89b3a:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
   89b3e:	4798      	blx	r3
   89b40:	4628      	mov	r0, r5
   89b42:	bd38      	pop	{r3, r4, r5, pc}
   89b44:	4628      	mov	r0, r5
   89b46:	f000 f829 	bl	89b9c <_getpid_r>
   89b4a:	4622      	mov	r2, r4
   89b4c:	4601      	mov	r1, r0
   89b4e:	4628      	mov	r0, r5
   89b50:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   89b54:	f000 b80e 	b.w	89b74 <_kill_r>
   89b58:	2316      	movs	r3, #22
   89b5a:	2001      	movs	r0, #1
   89b5c:	602b      	str	r3, [r5, #0]
   89b5e:	bd38      	pop	{r3, r4, r5, pc}
   89b60:	2000      	movs	r0, #0
   89b62:	bd38      	pop	{r3, r4, r5, pc}
   89b64:	2316      	movs	r3, #22
   89b66:	f04f 30ff 	mov.w	r0, #4294967295
   89b6a:	602b      	str	r3, [r5, #0]
   89b6c:	bd38      	pop	{r3, r4, r5, pc}
   89b6e:	bf00      	nop
   89b70:	200003fc 	.word	0x200003fc

00089b74 <_kill_r>:
   89b74:	b570      	push	{r4, r5, r6, lr}
   89b76:	2600      	movs	r6, #0
   89b78:	4d07      	ldr	r5, [pc, #28]	; (89b98 <_kill_r+0x24>)
   89b7a:	4604      	mov	r4, r0
   89b7c:	4608      	mov	r0, r1
   89b7e:	4611      	mov	r1, r2
   89b80:	602e      	str	r6, [r5, #0]
   89b82:	f7f9 fcd3 	bl	8352c <_kill>
   89b86:	1c43      	adds	r3, r0, #1
   89b88:	d000      	beq.n	89b8c <_kill_r+0x18>
   89b8a:	bd70      	pop	{r4, r5, r6, pc}
   89b8c:	682b      	ldr	r3, [r5, #0]
   89b8e:	2b00      	cmp	r3, #0
   89b90:	d0fb      	beq.n	89b8a <_kill_r+0x16>
   89b92:	6023      	str	r3, [r4, #0]
   89b94:	bd70      	pop	{r4, r5, r6, pc}
   89b96:	bf00      	nop
   89b98:	20003760 	.word	0x20003760

00089b9c <_getpid_r>:
   89b9c:	f7f9 bcc8 	b.w	83530 <_getpid>

00089ba0 <__aeabi_drsub>:
   89ba0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   89ba4:	e002      	b.n	89bac <__adddf3>
   89ba6:	bf00      	nop

00089ba8 <__aeabi_dsub>:
   89ba8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00089bac <__adddf3>:
   89bac:	b530      	push	{r4, r5, lr}
   89bae:	ea4f 0441 	mov.w	r4, r1, lsl #1
   89bb2:	ea4f 0543 	mov.w	r5, r3, lsl #1
   89bb6:	ea94 0f05 	teq	r4, r5
   89bba:	bf08      	it	eq
   89bbc:	ea90 0f02 	teqeq	r0, r2
   89bc0:	bf1f      	itttt	ne
   89bc2:	ea54 0c00 	orrsne.w	ip, r4, r0
   89bc6:	ea55 0c02 	orrsne.w	ip, r5, r2
   89bca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   89bce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   89bd2:	f000 80e2 	beq.w	89d9a <__adddf3+0x1ee>
   89bd6:	ea4f 5454 	mov.w	r4, r4, lsr #21
   89bda:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   89bde:	bfb8      	it	lt
   89be0:	426d      	neglt	r5, r5
   89be2:	dd0c      	ble.n	89bfe <__adddf3+0x52>
   89be4:	442c      	add	r4, r5
   89be6:	ea80 0202 	eor.w	r2, r0, r2
   89bea:	ea81 0303 	eor.w	r3, r1, r3
   89bee:	ea82 0000 	eor.w	r0, r2, r0
   89bf2:	ea83 0101 	eor.w	r1, r3, r1
   89bf6:	ea80 0202 	eor.w	r2, r0, r2
   89bfa:	ea81 0303 	eor.w	r3, r1, r3
   89bfe:	2d36      	cmp	r5, #54	; 0x36
   89c00:	bf88      	it	hi
   89c02:	bd30      	pophi	{r4, r5, pc}
   89c04:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   89c08:	ea4f 3101 	mov.w	r1, r1, lsl #12
   89c0c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   89c10:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   89c14:	d002      	beq.n	89c1c <__adddf3+0x70>
   89c16:	4240      	negs	r0, r0
   89c18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   89c1c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   89c20:	ea4f 3303 	mov.w	r3, r3, lsl #12
   89c24:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   89c28:	d002      	beq.n	89c30 <__adddf3+0x84>
   89c2a:	4252      	negs	r2, r2
   89c2c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   89c30:	ea94 0f05 	teq	r4, r5
   89c34:	f000 80a7 	beq.w	89d86 <__adddf3+0x1da>
   89c38:	f1a4 0401 	sub.w	r4, r4, #1
   89c3c:	f1d5 0e20 	rsbs	lr, r5, #32
   89c40:	db0d      	blt.n	89c5e <__adddf3+0xb2>
   89c42:	fa02 fc0e 	lsl.w	ip, r2, lr
   89c46:	fa22 f205 	lsr.w	r2, r2, r5
   89c4a:	1880      	adds	r0, r0, r2
   89c4c:	f141 0100 	adc.w	r1, r1, #0
   89c50:	fa03 f20e 	lsl.w	r2, r3, lr
   89c54:	1880      	adds	r0, r0, r2
   89c56:	fa43 f305 	asr.w	r3, r3, r5
   89c5a:	4159      	adcs	r1, r3
   89c5c:	e00e      	b.n	89c7c <__adddf3+0xd0>
   89c5e:	f1a5 0520 	sub.w	r5, r5, #32
   89c62:	f10e 0e20 	add.w	lr, lr, #32
   89c66:	2a01      	cmp	r2, #1
   89c68:	fa03 fc0e 	lsl.w	ip, r3, lr
   89c6c:	bf28      	it	cs
   89c6e:	f04c 0c02 	orrcs.w	ip, ip, #2
   89c72:	fa43 f305 	asr.w	r3, r3, r5
   89c76:	18c0      	adds	r0, r0, r3
   89c78:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   89c7c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89c80:	d507      	bpl.n	89c92 <__adddf3+0xe6>
   89c82:	f04f 0e00 	mov.w	lr, #0
   89c86:	f1dc 0c00 	rsbs	ip, ip, #0
   89c8a:	eb7e 0000 	sbcs.w	r0, lr, r0
   89c8e:	eb6e 0101 	sbc.w	r1, lr, r1
   89c92:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   89c96:	d31b      	bcc.n	89cd0 <__adddf3+0x124>
   89c98:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   89c9c:	d30c      	bcc.n	89cb8 <__adddf3+0x10c>
   89c9e:	0849      	lsrs	r1, r1, #1
   89ca0:	ea5f 0030 	movs.w	r0, r0, rrx
   89ca4:	ea4f 0c3c 	mov.w	ip, ip, rrx
   89ca8:	f104 0401 	add.w	r4, r4, #1
   89cac:	ea4f 5244 	mov.w	r2, r4, lsl #21
   89cb0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   89cb4:	f080 809a 	bcs.w	89dec <__adddf3+0x240>
   89cb8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   89cbc:	bf08      	it	eq
   89cbe:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   89cc2:	f150 0000 	adcs.w	r0, r0, #0
   89cc6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89cca:	ea41 0105 	orr.w	r1, r1, r5
   89cce:	bd30      	pop	{r4, r5, pc}
   89cd0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   89cd4:	4140      	adcs	r0, r0
   89cd6:	eb41 0101 	adc.w	r1, r1, r1
   89cda:	3c01      	subs	r4, #1
   89cdc:	bf28      	it	cs
   89cde:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
   89ce2:	d2e9      	bcs.n	89cb8 <__adddf3+0x10c>
   89ce4:	f091 0f00 	teq	r1, #0
   89ce8:	bf04      	itt	eq
   89cea:	4601      	moveq	r1, r0
   89cec:	2000      	moveq	r0, #0
   89cee:	fab1 f381 	clz	r3, r1
   89cf2:	bf08      	it	eq
   89cf4:	3320      	addeq	r3, #32
   89cf6:	f1a3 030b 	sub.w	r3, r3, #11
   89cfa:	f1b3 0220 	subs.w	r2, r3, #32
   89cfe:	da0c      	bge.n	89d1a <__adddf3+0x16e>
   89d00:	320c      	adds	r2, #12
   89d02:	dd08      	ble.n	89d16 <__adddf3+0x16a>
   89d04:	f102 0c14 	add.w	ip, r2, #20
   89d08:	f1c2 020c 	rsb	r2, r2, #12
   89d0c:	fa01 f00c 	lsl.w	r0, r1, ip
   89d10:	fa21 f102 	lsr.w	r1, r1, r2
   89d14:	e00c      	b.n	89d30 <__adddf3+0x184>
   89d16:	f102 0214 	add.w	r2, r2, #20
   89d1a:	bfd8      	it	le
   89d1c:	f1c2 0c20 	rsble	ip, r2, #32
   89d20:	fa01 f102 	lsl.w	r1, r1, r2
   89d24:	fa20 fc0c 	lsr.w	ip, r0, ip
   89d28:	bfdc      	itt	le
   89d2a:	ea41 010c 	orrle.w	r1, r1, ip
   89d2e:	4090      	lslle	r0, r2
   89d30:	1ae4      	subs	r4, r4, r3
   89d32:	bfa2      	ittt	ge
   89d34:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   89d38:	4329      	orrge	r1, r5
   89d3a:	bd30      	popge	{r4, r5, pc}
   89d3c:	ea6f 0404 	mvn.w	r4, r4
   89d40:	3c1f      	subs	r4, #31
   89d42:	da1c      	bge.n	89d7e <__adddf3+0x1d2>
   89d44:	340c      	adds	r4, #12
   89d46:	dc0e      	bgt.n	89d66 <__adddf3+0x1ba>
   89d48:	f104 0414 	add.w	r4, r4, #20
   89d4c:	f1c4 0220 	rsb	r2, r4, #32
   89d50:	fa20 f004 	lsr.w	r0, r0, r4
   89d54:	fa01 f302 	lsl.w	r3, r1, r2
   89d58:	ea40 0003 	orr.w	r0, r0, r3
   89d5c:	fa21 f304 	lsr.w	r3, r1, r4
   89d60:	ea45 0103 	orr.w	r1, r5, r3
   89d64:	bd30      	pop	{r4, r5, pc}
   89d66:	f1c4 040c 	rsb	r4, r4, #12
   89d6a:	f1c4 0220 	rsb	r2, r4, #32
   89d6e:	fa20 f002 	lsr.w	r0, r0, r2
   89d72:	fa01 f304 	lsl.w	r3, r1, r4
   89d76:	ea40 0003 	orr.w	r0, r0, r3
   89d7a:	4629      	mov	r1, r5
   89d7c:	bd30      	pop	{r4, r5, pc}
   89d7e:	fa21 f004 	lsr.w	r0, r1, r4
   89d82:	4629      	mov	r1, r5
   89d84:	bd30      	pop	{r4, r5, pc}
   89d86:	f094 0f00 	teq	r4, #0
   89d8a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   89d8e:	bf06      	itte	eq
   89d90:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   89d94:	3401      	addeq	r4, #1
   89d96:	3d01      	subne	r5, #1
   89d98:	e74e      	b.n	89c38 <__adddf3+0x8c>
   89d9a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   89d9e:	bf18      	it	ne
   89da0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   89da4:	d029      	beq.n	89dfa <__adddf3+0x24e>
   89da6:	ea94 0f05 	teq	r4, r5
   89daa:	bf08      	it	eq
   89dac:	ea90 0f02 	teqeq	r0, r2
   89db0:	d005      	beq.n	89dbe <__adddf3+0x212>
   89db2:	ea54 0c00 	orrs.w	ip, r4, r0
   89db6:	bf04      	itt	eq
   89db8:	4619      	moveq	r1, r3
   89dba:	4610      	moveq	r0, r2
   89dbc:	bd30      	pop	{r4, r5, pc}
   89dbe:	ea91 0f03 	teq	r1, r3
   89dc2:	bf1e      	ittt	ne
   89dc4:	2100      	movne	r1, #0
   89dc6:	2000      	movne	r0, #0
   89dc8:	bd30      	popne	{r4, r5, pc}
   89dca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   89dce:	d105      	bne.n	89ddc <__adddf3+0x230>
   89dd0:	0040      	lsls	r0, r0, #1
   89dd2:	4149      	adcs	r1, r1
   89dd4:	bf28      	it	cs
   89dd6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   89dda:	bd30      	pop	{r4, r5, pc}
   89ddc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   89de0:	bf3c      	itt	cc
   89de2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   89de6:	bd30      	popcc	{r4, r5, pc}
   89de8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89dec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   89df0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   89df4:	f04f 0000 	mov.w	r0, #0
   89df8:	bd30      	pop	{r4, r5, pc}
   89dfa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   89dfe:	bf1a      	itte	ne
   89e00:	4619      	movne	r1, r3
   89e02:	4610      	movne	r0, r2
   89e04:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   89e08:	bf1c      	itt	ne
   89e0a:	460b      	movne	r3, r1
   89e0c:	4602      	movne	r2, r0
   89e0e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   89e12:	bf06      	itte	eq
   89e14:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   89e18:	ea91 0f03 	teqeq	r1, r3
   89e1c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   89e20:	bd30      	pop	{r4, r5, pc}
   89e22:	bf00      	nop

00089e24 <__aeabi_ui2d>:
   89e24:	f090 0f00 	teq	r0, #0
   89e28:	bf04      	itt	eq
   89e2a:	2100      	moveq	r1, #0
   89e2c:	4770      	bxeq	lr
   89e2e:	b530      	push	{r4, r5, lr}
   89e30:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89e34:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89e38:	f04f 0500 	mov.w	r5, #0
   89e3c:	f04f 0100 	mov.w	r1, #0
   89e40:	e750      	b.n	89ce4 <__adddf3+0x138>
   89e42:	bf00      	nop

00089e44 <__aeabi_i2d>:
   89e44:	f090 0f00 	teq	r0, #0
   89e48:	bf04      	itt	eq
   89e4a:	2100      	moveq	r1, #0
   89e4c:	4770      	bxeq	lr
   89e4e:	b530      	push	{r4, r5, lr}
   89e50:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89e54:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89e58:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   89e5c:	bf48      	it	mi
   89e5e:	4240      	negmi	r0, r0
   89e60:	f04f 0100 	mov.w	r1, #0
   89e64:	e73e      	b.n	89ce4 <__adddf3+0x138>
   89e66:	bf00      	nop

00089e68 <__aeabi_f2d>:
   89e68:	0042      	lsls	r2, r0, #1
   89e6a:	ea4f 01e2 	mov.w	r1, r2, asr #3
   89e6e:	ea4f 0131 	mov.w	r1, r1, rrx
   89e72:	ea4f 7002 	mov.w	r0, r2, lsl #28
   89e76:	bf1f      	itttt	ne
   89e78:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   89e7c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   89e80:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   89e84:	4770      	bxne	lr
   89e86:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   89e8a:	bf08      	it	eq
   89e8c:	4770      	bxeq	lr
   89e8e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   89e92:	bf04      	itt	eq
   89e94:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   89e98:	4770      	bxeq	lr
   89e9a:	b530      	push	{r4, r5, lr}
   89e9c:	f44f 7460 	mov.w	r4, #896	; 0x380
   89ea0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   89ea4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   89ea8:	e71c      	b.n	89ce4 <__adddf3+0x138>
   89eaa:	bf00      	nop

00089eac <__aeabi_ul2d>:
   89eac:	ea50 0201 	orrs.w	r2, r0, r1
   89eb0:	bf08      	it	eq
   89eb2:	4770      	bxeq	lr
   89eb4:	b530      	push	{r4, r5, lr}
   89eb6:	f04f 0500 	mov.w	r5, #0
   89eba:	e00a      	b.n	89ed2 <__aeabi_l2d+0x16>

00089ebc <__aeabi_l2d>:
   89ebc:	ea50 0201 	orrs.w	r2, r0, r1
   89ec0:	bf08      	it	eq
   89ec2:	4770      	bxeq	lr
   89ec4:	b530      	push	{r4, r5, lr}
   89ec6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   89eca:	d502      	bpl.n	89ed2 <__aeabi_l2d+0x16>
   89ecc:	4240      	negs	r0, r0
   89ece:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   89ed2:	f44f 6480 	mov.w	r4, #1024	; 0x400
   89ed6:	f104 0432 	add.w	r4, r4, #50	; 0x32
   89eda:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   89ede:	f43f aed8 	beq.w	89c92 <__adddf3+0xe6>
   89ee2:	f04f 0203 	mov.w	r2, #3
   89ee6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89eea:	bf18      	it	ne
   89eec:	3203      	addne	r2, #3
   89eee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   89ef2:	bf18      	it	ne
   89ef4:	3203      	addne	r2, #3
   89ef6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   89efa:	f1c2 0320 	rsb	r3, r2, #32
   89efe:	fa00 fc03 	lsl.w	ip, r0, r3
   89f02:	fa20 f002 	lsr.w	r0, r0, r2
   89f06:	fa01 fe03 	lsl.w	lr, r1, r3
   89f0a:	ea40 000e 	orr.w	r0, r0, lr
   89f0e:	fa21 f102 	lsr.w	r1, r1, r2
   89f12:	4414      	add	r4, r2
   89f14:	e6bd      	b.n	89c92 <__adddf3+0xe6>
   89f16:	bf00      	nop

00089f18 <__aeabi_dmul>:
   89f18:	b570      	push	{r4, r5, r6, lr}
   89f1a:	f04f 0cff 	mov.w	ip, #255	; 0xff
   89f1e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   89f22:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   89f26:	bf1d      	ittte	ne
   89f28:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   89f2c:	ea94 0f0c 	teqne	r4, ip
   89f30:	ea95 0f0c 	teqne	r5, ip
   89f34:	f000 f8de 	bleq	8a0f4 <__aeabi_dmul+0x1dc>
   89f38:	442c      	add	r4, r5
   89f3a:	ea81 0603 	eor.w	r6, r1, r3
   89f3e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   89f42:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   89f46:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   89f4a:	bf18      	it	ne
   89f4c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   89f50:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89f54:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   89f58:	d038      	beq.n	89fcc <__aeabi_dmul+0xb4>
   89f5a:	fba0 ce02 	umull	ip, lr, r0, r2
   89f5e:	f04f 0500 	mov.w	r5, #0
   89f62:	fbe1 e502 	umlal	lr, r5, r1, r2
   89f66:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   89f6a:	fbe0 e503 	umlal	lr, r5, r0, r3
   89f6e:	f04f 0600 	mov.w	r6, #0
   89f72:	fbe1 5603 	umlal	r5, r6, r1, r3
   89f76:	f09c 0f00 	teq	ip, #0
   89f7a:	bf18      	it	ne
   89f7c:	f04e 0e01 	orrne.w	lr, lr, #1
   89f80:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   89f84:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   89f88:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   89f8c:	d204      	bcs.n	89f98 <__aeabi_dmul+0x80>
   89f8e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   89f92:	416d      	adcs	r5, r5
   89f94:	eb46 0606 	adc.w	r6, r6, r6
   89f98:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   89f9c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   89fa0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   89fa4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   89fa8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   89fac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   89fb0:	bf88      	it	hi
   89fb2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   89fb6:	d81e      	bhi.n	89ff6 <__aeabi_dmul+0xde>
   89fb8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   89fbc:	bf08      	it	eq
   89fbe:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   89fc2:	f150 0000 	adcs.w	r0, r0, #0
   89fc6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   89fca:	bd70      	pop	{r4, r5, r6, pc}
   89fcc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   89fd0:	ea46 0101 	orr.w	r1, r6, r1
   89fd4:	ea40 0002 	orr.w	r0, r0, r2
   89fd8:	ea81 0103 	eor.w	r1, r1, r3
   89fdc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   89fe0:	bfc2      	ittt	gt
   89fe2:	ebd4 050c 	rsbsgt	r5, r4, ip
   89fe6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   89fea:	bd70      	popgt	{r4, r5, r6, pc}
   89fec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   89ff0:	f04f 0e00 	mov.w	lr, #0
   89ff4:	3c01      	subs	r4, #1
   89ff6:	f300 80ab 	bgt.w	8a150 <__aeabi_dmul+0x238>
   89ffa:	f114 0f36 	cmn.w	r4, #54	; 0x36
   89ffe:	bfde      	ittt	le
   8a000:	2000      	movle	r0, #0
   8a002:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   8a006:	bd70      	pople	{r4, r5, r6, pc}
   8a008:	f1c4 0400 	rsb	r4, r4, #0
   8a00c:	3c20      	subs	r4, #32
   8a00e:	da35      	bge.n	8a07c <__aeabi_dmul+0x164>
   8a010:	340c      	adds	r4, #12
   8a012:	dc1b      	bgt.n	8a04c <__aeabi_dmul+0x134>
   8a014:	f104 0414 	add.w	r4, r4, #20
   8a018:	f1c4 0520 	rsb	r5, r4, #32
   8a01c:	fa00 f305 	lsl.w	r3, r0, r5
   8a020:	fa20 f004 	lsr.w	r0, r0, r4
   8a024:	fa01 f205 	lsl.w	r2, r1, r5
   8a028:	ea40 0002 	orr.w	r0, r0, r2
   8a02c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   8a030:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   8a034:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8a038:	fa21 f604 	lsr.w	r6, r1, r4
   8a03c:	eb42 0106 	adc.w	r1, r2, r6
   8a040:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8a044:	bf08      	it	eq
   8a046:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8a04a:	bd70      	pop	{r4, r5, r6, pc}
   8a04c:	f1c4 040c 	rsb	r4, r4, #12
   8a050:	f1c4 0520 	rsb	r5, r4, #32
   8a054:	fa00 f304 	lsl.w	r3, r0, r4
   8a058:	fa20 f005 	lsr.w	r0, r0, r5
   8a05c:	fa01 f204 	lsl.w	r2, r1, r4
   8a060:	ea40 0002 	orr.w	r0, r0, r2
   8a064:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8a068:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   8a06c:	f141 0100 	adc.w	r1, r1, #0
   8a070:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8a074:	bf08      	it	eq
   8a076:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8a07a:	bd70      	pop	{r4, r5, r6, pc}
   8a07c:	f1c4 0520 	rsb	r5, r4, #32
   8a080:	fa00 f205 	lsl.w	r2, r0, r5
   8a084:	ea4e 0e02 	orr.w	lr, lr, r2
   8a088:	fa20 f304 	lsr.w	r3, r0, r4
   8a08c:	fa01 f205 	lsl.w	r2, r1, r5
   8a090:	ea43 0302 	orr.w	r3, r3, r2
   8a094:	fa21 f004 	lsr.w	r0, r1, r4
   8a098:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8a09c:	fa21 f204 	lsr.w	r2, r1, r4
   8a0a0:	ea20 0002 	bic.w	r0, r0, r2
   8a0a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   8a0a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8a0ac:	bf08      	it	eq
   8a0ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8a0b2:	bd70      	pop	{r4, r5, r6, pc}
   8a0b4:	f094 0f00 	teq	r4, #0
   8a0b8:	d10f      	bne.n	8a0da <__aeabi_dmul+0x1c2>
   8a0ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8a0be:	0040      	lsls	r0, r0, #1
   8a0c0:	eb41 0101 	adc.w	r1, r1, r1
   8a0c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8a0c8:	bf08      	it	eq
   8a0ca:	3c01      	subeq	r4, #1
   8a0cc:	d0f7      	beq.n	8a0be <__aeabi_dmul+0x1a6>
   8a0ce:	ea41 0106 	orr.w	r1, r1, r6
   8a0d2:	f095 0f00 	teq	r5, #0
   8a0d6:	bf18      	it	ne
   8a0d8:	4770      	bxne	lr
   8a0da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8a0de:	0052      	lsls	r2, r2, #1
   8a0e0:	eb43 0303 	adc.w	r3, r3, r3
   8a0e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   8a0e8:	bf08      	it	eq
   8a0ea:	3d01      	subeq	r5, #1
   8a0ec:	d0f7      	beq.n	8a0de <__aeabi_dmul+0x1c6>
   8a0ee:	ea43 0306 	orr.w	r3, r3, r6
   8a0f2:	4770      	bx	lr
   8a0f4:	ea94 0f0c 	teq	r4, ip
   8a0f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8a0fc:	bf18      	it	ne
   8a0fe:	ea95 0f0c 	teqne	r5, ip
   8a102:	d00c      	beq.n	8a11e <__aeabi_dmul+0x206>
   8a104:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8a108:	bf18      	it	ne
   8a10a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8a10e:	d1d1      	bne.n	8a0b4 <__aeabi_dmul+0x19c>
   8a110:	ea81 0103 	eor.w	r1, r1, r3
   8a114:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8a118:	f04f 0000 	mov.w	r0, #0
   8a11c:	bd70      	pop	{r4, r5, r6, pc}
   8a11e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8a122:	bf06      	itte	eq
   8a124:	4610      	moveq	r0, r2
   8a126:	4619      	moveq	r1, r3
   8a128:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8a12c:	d019      	beq.n	8a162 <__aeabi_dmul+0x24a>
   8a12e:	ea94 0f0c 	teq	r4, ip
   8a132:	d102      	bne.n	8a13a <__aeabi_dmul+0x222>
   8a134:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   8a138:	d113      	bne.n	8a162 <__aeabi_dmul+0x24a>
   8a13a:	ea95 0f0c 	teq	r5, ip
   8a13e:	d105      	bne.n	8a14c <__aeabi_dmul+0x234>
   8a140:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   8a144:	bf1c      	itt	ne
   8a146:	4610      	movne	r0, r2
   8a148:	4619      	movne	r1, r3
   8a14a:	d10a      	bne.n	8a162 <__aeabi_dmul+0x24a>
   8a14c:	ea81 0103 	eor.w	r1, r1, r3
   8a150:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8a154:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8a158:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   8a15c:	f04f 0000 	mov.w	r0, #0
   8a160:	bd70      	pop	{r4, r5, r6, pc}
   8a162:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   8a166:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   8a16a:	bd70      	pop	{r4, r5, r6, pc}

0008a16c <__aeabi_ddiv>:
   8a16c:	b570      	push	{r4, r5, r6, lr}
   8a16e:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8a172:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8a176:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8a17a:	bf1d      	ittte	ne
   8a17c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   8a180:	ea94 0f0c 	teqne	r4, ip
   8a184:	ea95 0f0c 	teqne	r5, ip
   8a188:	f000 f8a7 	bleq	8a2da <__aeabi_ddiv+0x16e>
   8a18c:	eba4 0405 	sub.w	r4, r4, r5
   8a190:	ea81 0e03 	eor.w	lr, r1, r3
   8a194:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8a198:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8a19c:	f000 8088 	beq.w	8a2b0 <__aeabi_ddiv+0x144>
   8a1a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
   8a1a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   8a1a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8a1ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   8a1b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
   8a1b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   8a1b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8a1bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
   8a1c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   8a1c4:	429d      	cmp	r5, r3
   8a1c6:	bf08      	it	eq
   8a1c8:	4296      	cmpeq	r6, r2
   8a1ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8a1ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
   8a1d2:	d202      	bcs.n	8a1da <__aeabi_ddiv+0x6e>
   8a1d4:	085b      	lsrs	r3, r3, #1
   8a1d6:	ea4f 0232 	mov.w	r2, r2, rrx
   8a1da:	1ab6      	subs	r6, r6, r2
   8a1dc:	eb65 0503 	sbc.w	r5, r5, r3
   8a1e0:	085b      	lsrs	r3, r3, #1
   8a1e2:	ea4f 0232 	mov.w	r2, r2, rrx
   8a1e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8a1ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8a1ee:	ebb6 0e02 	subs.w	lr, r6, r2
   8a1f2:	eb75 0e03 	sbcs.w	lr, r5, r3
   8a1f6:	bf22      	ittt	cs
   8a1f8:	1ab6      	subcs	r6, r6, r2
   8a1fa:	4675      	movcs	r5, lr
   8a1fc:	ea40 000c 	orrcs.w	r0, r0, ip
   8a200:	085b      	lsrs	r3, r3, #1
   8a202:	ea4f 0232 	mov.w	r2, r2, rrx
   8a206:	ebb6 0e02 	subs.w	lr, r6, r2
   8a20a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8a20e:	bf22      	ittt	cs
   8a210:	1ab6      	subcs	r6, r6, r2
   8a212:	4675      	movcs	r5, lr
   8a214:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8a218:	085b      	lsrs	r3, r3, #1
   8a21a:	ea4f 0232 	mov.w	r2, r2, rrx
   8a21e:	ebb6 0e02 	subs.w	lr, r6, r2
   8a222:	eb75 0e03 	sbcs.w	lr, r5, r3
   8a226:	bf22      	ittt	cs
   8a228:	1ab6      	subcs	r6, r6, r2
   8a22a:	4675      	movcs	r5, lr
   8a22c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   8a230:	085b      	lsrs	r3, r3, #1
   8a232:	ea4f 0232 	mov.w	r2, r2, rrx
   8a236:	ebb6 0e02 	subs.w	lr, r6, r2
   8a23a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8a23e:	bf22      	ittt	cs
   8a240:	1ab6      	subcs	r6, r6, r2
   8a242:	4675      	movcs	r5, lr
   8a244:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   8a248:	ea55 0e06 	orrs.w	lr, r5, r6
   8a24c:	d018      	beq.n	8a280 <__aeabi_ddiv+0x114>
   8a24e:	ea4f 1505 	mov.w	r5, r5, lsl #4
   8a252:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   8a256:	ea4f 1606 	mov.w	r6, r6, lsl #4
   8a25a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   8a25e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   8a262:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   8a266:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   8a26a:	d1c0      	bne.n	8a1ee <__aeabi_ddiv+0x82>
   8a26c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8a270:	d10b      	bne.n	8a28a <__aeabi_ddiv+0x11e>
   8a272:	ea41 0100 	orr.w	r1, r1, r0
   8a276:	f04f 0000 	mov.w	r0, #0
   8a27a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8a27e:	e7b6      	b.n	8a1ee <__aeabi_ddiv+0x82>
   8a280:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8a284:	bf04      	itt	eq
   8a286:	4301      	orreq	r1, r0
   8a288:	2000      	moveq	r0, #0
   8a28a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8a28e:	bf88      	it	hi
   8a290:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   8a294:	f63f aeaf 	bhi.w	89ff6 <__aeabi_dmul+0xde>
   8a298:	ebb5 0c03 	subs.w	ip, r5, r3
   8a29c:	bf04      	itt	eq
   8a29e:	ebb6 0c02 	subseq.w	ip, r6, r2
   8a2a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8a2a6:	f150 0000 	adcs.w	r0, r0, #0
   8a2aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8a2ae:	bd70      	pop	{r4, r5, r6, pc}
   8a2b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   8a2b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   8a2b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8a2bc:	bfc2      	ittt	gt
   8a2be:	ebd4 050c 	rsbsgt	r5, r4, ip
   8a2c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   8a2c6:	bd70      	popgt	{r4, r5, r6, pc}
   8a2c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8a2cc:	f04f 0e00 	mov.w	lr, #0
   8a2d0:	3c01      	subs	r4, #1
   8a2d2:	e690      	b.n	89ff6 <__aeabi_dmul+0xde>
   8a2d4:	ea45 0e06 	orr.w	lr, r5, r6
   8a2d8:	e68d      	b.n	89ff6 <__aeabi_dmul+0xde>
   8a2da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8a2de:	ea94 0f0c 	teq	r4, ip
   8a2e2:	bf08      	it	eq
   8a2e4:	ea95 0f0c 	teqeq	r5, ip
   8a2e8:	f43f af3b 	beq.w	8a162 <__aeabi_dmul+0x24a>
   8a2ec:	ea94 0f0c 	teq	r4, ip
   8a2f0:	d10a      	bne.n	8a308 <__aeabi_ddiv+0x19c>
   8a2f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8a2f6:	f47f af34 	bne.w	8a162 <__aeabi_dmul+0x24a>
   8a2fa:	ea95 0f0c 	teq	r5, ip
   8a2fe:	f47f af25 	bne.w	8a14c <__aeabi_dmul+0x234>
   8a302:	4610      	mov	r0, r2
   8a304:	4619      	mov	r1, r3
   8a306:	e72c      	b.n	8a162 <__aeabi_dmul+0x24a>
   8a308:	ea95 0f0c 	teq	r5, ip
   8a30c:	d106      	bne.n	8a31c <__aeabi_ddiv+0x1b0>
   8a30e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   8a312:	f43f aefd 	beq.w	8a110 <__aeabi_dmul+0x1f8>
   8a316:	4610      	mov	r0, r2
   8a318:	4619      	mov	r1, r3
   8a31a:	e722      	b.n	8a162 <__aeabi_dmul+0x24a>
   8a31c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8a320:	bf18      	it	ne
   8a322:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8a326:	f47f aec5 	bne.w	8a0b4 <__aeabi_dmul+0x19c>
   8a32a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   8a32e:	f47f af0d 	bne.w	8a14c <__aeabi_dmul+0x234>
   8a332:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   8a336:	f47f aeeb 	bne.w	8a110 <__aeabi_dmul+0x1f8>
   8a33a:	e712      	b.n	8a162 <__aeabi_dmul+0x24a>

0008a33c <__gedf2>:
   8a33c:	f04f 3cff 	mov.w	ip, #4294967295
   8a340:	e006      	b.n	8a350 <__cmpdf2+0x4>
   8a342:	bf00      	nop

0008a344 <__ledf2>:
   8a344:	f04f 0c01 	mov.w	ip, #1
   8a348:	e002      	b.n	8a350 <__cmpdf2+0x4>
   8a34a:	bf00      	nop

0008a34c <__cmpdf2>:
   8a34c:	f04f 0c01 	mov.w	ip, #1
   8a350:	f84d cd04 	str.w	ip, [sp, #-4]!
   8a354:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a358:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a35c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a360:	bf18      	it	ne
   8a362:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   8a366:	d01b      	beq.n	8a3a0 <__cmpdf2+0x54>
   8a368:	b001      	add	sp, #4
   8a36a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   8a36e:	bf0c      	ite	eq
   8a370:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   8a374:	ea91 0f03 	teqne	r1, r3
   8a378:	bf02      	ittt	eq
   8a37a:	ea90 0f02 	teqeq	r0, r2
   8a37e:	2000      	moveq	r0, #0
   8a380:	4770      	bxeq	lr
   8a382:	f110 0f00 	cmn.w	r0, #0
   8a386:	ea91 0f03 	teq	r1, r3
   8a38a:	bf58      	it	pl
   8a38c:	4299      	cmppl	r1, r3
   8a38e:	bf08      	it	eq
   8a390:	4290      	cmpeq	r0, r2
   8a392:	bf2c      	ite	cs
   8a394:	17d8      	asrcs	r0, r3, #31
   8a396:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8a39a:	f040 0001 	orr.w	r0, r0, #1
   8a39e:	4770      	bx	lr
   8a3a0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a3a4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a3a8:	d102      	bne.n	8a3b0 <__cmpdf2+0x64>
   8a3aa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8a3ae:	d107      	bne.n	8a3c0 <__cmpdf2+0x74>
   8a3b0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a3b4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a3b8:	d1d6      	bne.n	8a368 <__cmpdf2+0x1c>
   8a3ba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8a3be:	d0d3      	beq.n	8a368 <__cmpdf2+0x1c>
   8a3c0:	f85d 0b04 	ldr.w	r0, [sp], #4
   8a3c4:	4770      	bx	lr
   8a3c6:	bf00      	nop

0008a3c8 <__aeabi_cdrcmple>:
   8a3c8:	4684      	mov	ip, r0
   8a3ca:	4610      	mov	r0, r2
   8a3cc:	4662      	mov	r2, ip
   8a3ce:	468c      	mov	ip, r1
   8a3d0:	4619      	mov	r1, r3
   8a3d2:	4663      	mov	r3, ip
   8a3d4:	e000      	b.n	8a3d8 <__aeabi_cdcmpeq>
   8a3d6:	bf00      	nop

0008a3d8 <__aeabi_cdcmpeq>:
   8a3d8:	b501      	push	{r0, lr}
   8a3da:	f7ff ffb7 	bl	8a34c <__cmpdf2>
   8a3de:	2800      	cmp	r0, #0
   8a3e0:	bf48      	it	mi
   8a3e2:	f110 0f00 	cmnmi.w	r0, #0
   8a3e6:	bd01      	pop	{r0, pc}

0008a3e8 <__aeabi_dcmpeq>:
   8a3e8:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a3ec:	f7ff fff4 	bl	8a3d8 <__aeabi_cdcmpeq>
   8a3f0:	bf0c      	ite	eq
   8a3f2:	2001      	moveq	r0, #1
   8a3f4:	2000      	movne	r0, #0
   8a3f6:	f85d fb08 	ldr.w	pc, [sp], #8
   8a3fa:	bf00      	nop

0008a3fc <__aeabi_dcmplt>:
   8a3fc:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a400:	f7ff ffea 	bl	8a3d8 <__aeabi_cdcmpeq>
   8a404:	bf34      	ite	cc
   8a406:	2001      	movcc	r0, #1
   8a408:	2000      	movcs	r0, #0
   8a40a:	f85d fb08 	ldr.w	pc, [sp], #8
   8a40e:	bf00      	nop

0008a410 <__aeabi_dcmple>:
   8a410:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a414:	f7ff ffe0 	bl	8a3d8 <__aeabi_cdcmpeq>
   8a418:	bf94      	ite	ls
   8a41a:	2001      	movls	r0, #1
   8a41c:	2000      	movhi	r0, #0
   8a41e:	f85d fb08 	ldr.w	pc, [sp], #8
   8a422:	bf00      	nop

0008a424 <__aeabi_dcmpge>:
   8a424:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a428:	f7ff ffce 	bl	8a3c8 <__aeabi_cdrcmple>
   8a42c:	bf94      	ite	ls
   8a42e:	2001      	movls	r0, #1
   8a430:	2000      	movhi	r0, #0
   8a432:	f85d fb08 	ldr.w	pc, [sp], #8
   8a436:	bf00      	nop

0008a438 <__aeabi_dcmpgt>:
   8a438:	f84d ed08 	str.w	lr, [sp, #-8]!
   8a43c:	f7ff ffc4 	bl	8a3c8 <__aeabi_cdrcmple>
   8a440:	bf34      	ite	cc
   8a442:	2001      	movcc	r0, #1
   8a444:	2000      	movcs	r0, #0
   8a446:	f85d fb08 	ldr.w	pc, [sp], #8
   8a44a:	bf00      	nop

0008a44c <__aeabi_dcmpun>:
   8a44c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   8a450:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a454:	d102      	bne.n	8a45c <__aeabi_dcmpun+0x10>
   8a456:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8a45a:	d10a      	bne.n	8a472 <__aeabi_dcmpun+0x26>
   8a45c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   8a460:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   8a464:	d102      	bne.n	8a46c <__aeabi_dcmpun+0x20>
   8a466:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8a46a:	d102      	bne.n	8a472 <__aeabi_dcmpun+0x26>
   8a46c:	f04f 0000 	mov.w	r0, #0
   8a470:	4770      	bx	lr
   8a472:	f04f 0001 	mov.w	r0, #1
   8a476:	4770      	bx	lr

0008a478 <__aeabi_d2iz>:
   8a478:	ea4f 0241 	mov.w	r2, r1, lsl #1
   8a47c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   8a480:	d215      	bcs.n	8a4ae <__aeabi_d2iz+0x36>
   8a482:	d511      	bpl.n	8a4a8 <__aeabi_d2iz+0x30>
   8a484:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   8a488:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   8a48c:	d912      	bls.n	8a4b4 <__aeabi_d2iz+0x3c>
   8a48e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   8a492:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   8a496:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   8a49a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   8a49e:	fa23 f002 	lsr.w	r0, r3, r2
   8a4a2:	bf18      	it	ne
   8a4a4:	4240      	negne	r0, r0
   8a4a6:	4770      	bx	lr
   8a4a8:	f04f 0000 	mov.w	r0, #0
   8a4ac:	4770      	bx	lr
   8a4ae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   8a4b2:	d105      	bne.n	8a4c0 <__aeabi_d2iz+0x48>
   8a4b4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8a4b8:	bf08      	it	eq
   8a4ba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   8a4be:	4770      	bx	lr
   8a4c0:	f04f 0000 	mov.w	r0, #0
   8a4c4:	4770      	bx	lr
   8a4c6:	bf00      	nop

0008a4c8 <__aeabi_uldivmod>:
   8a4c8:	b953      	cbnz	r3, 8a4e0 <__aeabi_uldivmod+0x18>
   8a4ca:	b94a      	cbnz	r2, 8a4e0 <__aeabi_uldivmod+0x18>
   8a4cc:	2900      	cmp	r1, #0
   8a4ce:	bf08      	it	eq
   8a4d0:	2800      	cmpeq	r0, #0
   8a4d2:	bf1c      	itt	ne
   8a4d4:	f04f 31ff 	movne.w	r1, #4294967295
   8a4d8:	f04f 30ff 	movne.w	r0, #4294967295
   8a4dc:	f000 b976 	b.w	8a7cc <__aeabi_idiv0>
   8a4e0:	f1ad 0c08 	sub.w	ip, sp, #8
   8a4e4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   8a4e8:	f000 f806 	bl	8a4f8 <__udivmoddi4>
   8a4ec:	f8dd e004 	ldr.w	lr, [sp, #4]
   8a4f0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   8a4f4:	b004      	add	sp, #16
   8a4f6:	4770      	bx	lr

0008a4f8 <__udivmoddi4>:
   8a4f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8a4fc:	9e08      	ldr	r6, [sp, #32]
   8a4fe:	460d      	mov	r5, r1
   8a500:	4604      	mov	r4, r0
   8a502:	4688      	mov	r8, r1
   8a504:	2b00      	cmp	r3, #0
   8a506:	d14d      	bne.n	8a5a4 <__udivmoddi4+0xac>
   8a508:	428a      	cmp	r2, r1
   8a50a:	4694      	mov	ip, r2
   8a50c:	d968      	bls.n	8a5e0 <__udivmoddi4+0xe8>
   8a50e:	fab2 f282 	clz	r2, r2
   8a512:	b152      	cbz	r2, 8a52a <__udivmoddi4+0x32>
   8a514:	fa01 f302 	lsl.w	r3, r1, r2
   8a518:	f1c2 0120 	rsb	r1, r2, #32
   8a51c:	fa20 f101 	lsr.w	r1, r0, r1
   8a520:	fa0c fc02 	lsl.w	ip, ip, r2
   8a524:	ea41 0803 	orr.w	r8, r1, r3
   8a528:	4094      	lsls	r4, r2
   8a52a:	ea4f 411c 	mov.w	r1, ip, lsr #16
   8a52e:	fbb8 f7f1 	udiv	r7, r8, r1
   8a532:	fa1f fe8c 	uxth.w	lr, ip
   8a536:	fb01 8817 	mls	r8, r1, r7, r8
   8a53a:	fb07 f00e 	mul.w	r0, r7, lr
   8a53e:	0c23      	lsrs	r3, r4, #16
   8a540:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8a544:	4298      	cmp	r0, r3
   8a546:	d90a      	bls.n	8a55e <__udivmoddi4+0x66>
   8a548:	eb1c 0303 	adds.w	r3, ip, r3
   8a54c:	f107 35ff 	add.w	r5, r7, #4294967295
   8a550:	f080 811e 	bcs.w	8a790 <__udivmoddi4+0x298>
   8a554:	4298      	cmp	r0, r3
   8a556:	f240 811b 	bls.w	8a790 <__udivmoddi4+0x298>
   8a55a:	3f02      	subs	r7, #2
   8a55c:	4463      	add	r3, ip
   8a55e:	1a1b      	subs	r3, r3, r0
   8a560:	fbb3 f0f1 	udiv	r0, r3, r1
   8a564:	fb01 3310 	mls	r3, r1, r0, r3
   8a568:	fb00 fe0e 	mul.w	lr, r0, lr
   8a56c:	b2a4      	uxth	r4, r4
   8a56e:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   8a572:	45a6      	cmp	lr, r4
   8a574:	d90a      	bls.n	8a58c <__udivmoddi4+0x94>
   8a576:	eb1c 0404 	adds.w	r4, ip, r4
   8a57a:	f100 33ff 	add.w	r3, r0, #4294967295
   8a57e:	f080 8109 	bcs.w	8a794 <__udivmoddi4+0x29c>
   8a582:	45a6      	cmp	lr, r4
   8a584:	f240 8106 	bls.w	8a794 <__udivmoddi4+0x29c>
   8a588:	4464      	add	r4, ip
   8a58a:	3802      	subs	r0, #2
   8a58c:	2100      	movs	r1, #0
   8a58e:	eba4 040e 	sub.w	r4, r4, lr
   8a592:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   8a596:	b11e      	cbz	r6, 8a5a0 <__udivmoddi4+0xa8>
   8a598:	2300      	movs	r3, #0
   8a59a:	40d4      	lsrs	r4, r2
   8a59c:	e9c6 4300 	strd	r4, r3, [r6]
   8a5a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a5a4:	428b      	cmp	r3, r1
   8a5a6:	d908      	bls.n	8a5ba <__udivmoddi4+0xc2>
   8a5a8:	2e00      	cmp	r6, #0
   8a5aa:	f000 80ee 	beq.w	8a78a <__udivmoddi4+0x292>
   8a5ae:	2100      	movs	r1, #0
   8a5b0:	e9c6 0500 	strd	r0, r5, [r6]
   8a5b4:	4608      	mov	r0, r1
   8a5b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8a5ba:	fab3 f183 	clz	r1, r3
   8a5be:	2900      	cmp	r1, #0
   8a5c0:	d14a      	bne.n	8a658 <__udivmoddi4+0x160>
   8a5c2:	42ab      	cmp	r3, r5
   8a5c4:	d302      	bcc.n	8a5cc <__udivmoddi4+0xd4>
   8a5c6:	4282      	cmp	r2, r0
   8a5c8:	f200 80fc 	bhi.w	8a7c4 <__udivmoddi4+0x2cc>
   8a5cc:	1a84      	subs	r4, r0, r2
   8a5ce:	eb65 0303 	sbc.w	r3, r5, r3
   8a5d2:	2001      	movs	r0, #1
   8a5d4:	4698      	mov	r8, r3
   8a5d6:	2e00      	cmp	r6, #0
   8a5d8:	d0e2      	beq.n	8a5a0 <__udivmoddi4+0xa8>
   8a5da:	e9c6 4800 	strd	r4, r8, [r6]
   8a5de:	e7df      	b.n	8a5a0 <__udivmoddi4+0xa8>
   8a5e0:	b902      	cbnz	r2, 8a5e4 <__udivmoddi4+0xec>
   8a5e2:	deff      	udf	#255	; 0xff
   8a5e4:	fab2 f282 	clz	r2, r2
   8a5e8:	2a00      	cmp	r2, #0
   8a5ea:	f040 8091 	bne.w	8a710 <__udivmoddi4+0x218>
   8a5ee:	eba1 000c 	sub.w	r0, r1, ip
   8a5f2:	2101      	movs	r1, #1
   8a5f4:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a5f8:	fa1f fe8c 	uxth.w	lr, ip
   8a5fc:	fbb0 f3f7 	udiv	r3, r0, r7
   8a600:	fb07 0013 	mls	r0, r7, r3, r0
   8a604:	0c25      	lsrs	r5, r4, #16
   8a606:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a60a:	fb0e f003 	mul.w	r0, lr, r3
   8a60e:	42a8      	cmp	r0, r5
   8a610:	d908      	bls.n	8a624 <__udivmoddi4+0x12c>
   8a612:	eb1c 0505 	adds.w	r5, ip, r5
   8a616:	f103 38ff 	add.w	r8, r3, #4294967295
   8a61a:	d202      	bcs.n	8a622 <__udivmoddi4+0x12a>
   8a61c:	42a8      	cmp	r0, r5
   8a61e:	f200 80ce 	bhi.w	8a7be <__udivmoddi4+0x2c6>
   8a622:	4643      	mov	r3, r8
   8a624:	1a2d      	subs	r5, r5, r0
   8a626:	fbb5 f0f7 	udiv	r0, r5, r7
   8a62a:	fb07 5510 	mls	r5, r7, r0, r5
   8a62e:	fb0e fe00 	mul.w	lr, lr, r0
   8a632:	b2a4      	uxth	r4, r4
   8a634:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   8a638:	45a6      	cmp	lr, r4
   8a63a:	d908      	bls.n	8a64e <__udivmoddi4+0x156>
   8a63c:	eb1c 0404 	adds.w	r4, ip, r4
   8a640:	f100 35ff 	add.w	r5, r0, #4294967295
   8a644:	d202      	bcs.n	8a64c <__udivmoddi4+0x154>
   8a646:	45a6      	cmp	lr, r4
   8a648:	f200 80b6 	bhi.w	8a7b8 <__udivmoddi4+0x2c0>
   8a64c:	4628      	mov	r0, r5
   8a64e:	eba4 040e 	sub.w	r4, r4, lr
   8a652:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a656:	e79e      	b.n	8a596 <__udivmoddi4+0x9e>
   8a658:	f1c1 0720 	rsb	r7, r1, #32
   8a65c:	408b      	lsls	r3, r1
   8a65e:	fa22 fc07 	lsr.w	ip, r2, r7
   8a662:	ea4c 0c03 	orr.w	ip, ip, r3
   8a666:	fa25 fa07 	lsr.w	sl, r5, r7
   8a66a:	ea4f 491c 	mov.w	r9, ip, lsr #16
   8a66e:	fbba f8f9 	udiv	r8, sl, r9
   8a672:	fa20 f307 	lsr.w	r3, r0, r7
   8a676:	fb09 aa18 	mls	sl, r9, r8, sl
   8a67a:	408d      	lsls	r5, r1
   8a67c:	fa1f fe8c 	uxth.w	lr, ip
   8a680:	431d      	orrs	r5, r3
   8a682:	fa00 f301 	lsl.w	r3, r0, r1
   8a686:	fb08 f00e 	mul.w	r0, r8, lr
   8a68a:	0c2c      	lsrs	r4, r5, #16
   8a68c:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
   8a690:	42a0      	cmp	r0, r4
   8a692:	fa02 f201 	lsl.w	r2, r2, r1
   8a696:	d90b      	bls.n	8a6b0 <__udivmoddi4+0x1b8>
   8a698:	eb1c 0404 	adds.w	r4, ip, r4
   8a69c:	f108 3aff 	add.w	sl, r8, #4294967295
   8a6a0:	f080 8088 	bcs.w	8a7b4 <__udivmoddi4+0x2bc>
   8a6a4:	42a0      	cmp	r0, r4
   8a6a6:	f240 8085 	bls.w	8a7b4 <__udivmoddi4+0x2bc>
   8a6aa:	f1a8 0802 	sub.w	r8, r8, #2
   8a6ae:	4464      	add	r4, ip
   8a6b0:	1a24      	subs	r4, r4, r0
   8a6b2:	fbb4 f0f9 	udiv	r0, r4, r9
   8a6b6:	fb09 4410 	mls	r4, r9, r0, r4
   8a6ba:	fb00 fe0e 	mul.w	lr, r0, lr
   8a6be:	b2ad      	uxth	r5, r5
   8a6c0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
   8a6c4:	45a6      	cmp	lr, r4
   8a6c6:	d908      	bls.n	8a6da <__udivmoddi4+0x1e2>
   8a6c8:	eb1c 0404 	adds.w	r4, ip, r4
   8a6cc:	f100 35ff 	add.w	r5, r0, #4294967295
   8a6d0:	d26c      	bcs.n	8a7ac <__udivmoddi4+0x2b4>
   8a6d2:	45a6      	cmp	lr, r4
   8a6d4:	d96a      	bls.n	8a7ac <__udivmoddi4+0x2b4>
   8a6d6:	3802      	subs	r0, #2
   8a6d8:	4464      	add	r4, ip
   8a6da:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
   8a6de:	fba0 9502 	umull	r9, r5, r0, r2
   8a6e2:	eba4 040e 	sub.w	r4, r4, lr
   8a6e6:	42ac      	cmp	r4, r5
   8a6e8:	46c8      	mov	r8, r9
   8a6ea:	46ae      	mov	lr, r5
   8a6ec:	d356      	bcc.n	8a79c <__udivmoddi4+0x2a4>
   8a6ee:	d053      	beq.n	8a798 <__udivmoddi4+0x2a0>
   8a6f0:	2e00      	cmp	r6, #0
   8a6f2:	d069      	beq.n	8a7c8 <__udivmoddi4+0x2d0>
   8a6f4:	ebb3 0208 	subs.w	r2, r3, r8
   8a6f8:	eb64 040e 	sbc.w	r4, r4, lr
   8a6fc:	fa22 f301 	lsr.w	r3, r2, r1
   8a700:	fa04 f707 	lsl.w	r7, r4, r7
   8a704:	431f      	orrs	r7, r3
   8a706:	40cc      	lsrs	r4, r1
   8a708:	e9c6 7400 	strd	r7, r4, [r6]
   8a70c:	2100      	movs	r1, #0
   8a70e:	e747      	b.n	8a5a0 <__udivmoddi4+0xa8>
   8a710:	fa0c fc02 	lsl.w	ip, ip, r2
   8a714:	f1c2 0120 	rsb	r1, r2, #32
   8a718:	fa25 f301 	lsr.w	r3, r5, r1
   8a71c:	ea4f 471c 	mov.w	r7, ip, lsr #16
   8a720:	fa20 f101 	lsr.w	r1, r0, r1
   8a724:	4095      	lsls	r5, r2
   8a726:	430d      	orrs	r5, r1
   8a728:	fbb3 f1f7 	udiv	r1, r3, r7
   8a72c:	fb07 3311 	mls	r3, r7, r1, r3
   8a730:	fa1f fe8c 	uxth.w	lr, ip
   8a734:	0c28      	lsrs	r0, r5, #16
   8a736:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
   8a73a:	fb01 f30e 	mul.w	r3, r1, lr
   8a73e:	4283      	cmp	r3, r0
   8a740:	fa04 f402 	lsl.w	r4, r4, r2
   8a744:	d908      	bls.n	8a758 <__udivmoddi4+0x260>
   8a746:	eb1c 0000 	adds.w	r0, ip, r0
   8a74a:	f101 38ff 	add.w	r8, r1, #4294967295
   8a74e:	d22f      	bcs.n	8a7b0 <__udivmoddi4+0x2b8>
   8a750:	4283      	cmp	r3, r0
   8a752:	d92d      	bls.n	8a7b0 <__udivmoddi4+0x2b8>
   8a754:	3902      	subs	r1, #2
   8a756:	4460      	add	r0, ip
   8a758:	1ac0      	subs	r0, r0, r3
   8a75a:	fbb0 f3f7 	udiv	r3, r0, r7
   8a75e:	fb07 0013 	mls	r0, r7, r3, r0
   8a762:	b2ad      	uxth	r5, r5
   8a764:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
   8a768:	fb03 f00e 	mul.w	r0, r3, lr
   8a76c:	42a8      	cmp	r0, r5
   8a76e:	d908      	bls.n	8a782 <__udivmoddi4+0x28a>
   8a770:	eb1c 0505 	adds.w	r5, ip, r5
   8a774:	f103 38ff 	add.w	r8, r3, #4294967295
   8a778:	d216      	bcs.n	8a7a8 <__udivmoddi4+0x2b0>
   8a77a:	42a8      	cmp	r0, r5
   8a77c:	d914      	bls.n	8a7a8 <__udivmoddi4+0x2b0>
   8a77e:	3b02      	subs	r3, #2
   8a780:	4465      	add	r5, ip
   8a782:	1a28      	subs	r0, r5, r0
   8a784:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
   8a788:	e738      	b.n	8a5fc <__udivmoddi4+0x104>
   8a78a:	4631      	mov	r1, r6
   8a78c:	4630      	mov	r0, r6
   8a78e:	e707      	b.n	8a5a0 <__udivmoddi4+0xa8>
   8a790:	462f      	mov	r7, r5
   8a792:	e6e4      	b.n	8a55e <__udivmoddi4+0x66>
   8a794:	4618      	mov	r0, r3
   8a796:	e6f9      	b.n	8a58c <__udivmoddi4+0x94>
   8a798:	454b      	cmp	r3, r9
   8a79a:	d2a9      	bcs.n	8a6f0 <__udivmoddi4+0x1f8>
   8a79c:	ebb9 0802 	subs.w	r8, r9, r2
   8a7a0:	eb65 0e0c 	sbc.w	lr, r5, ip
   8a7a4:	3801      	subs	r0, #1
   8a7a6:	e7a3      	b.n	8a6f0 <__udivmoddi4+0x1f8>
   8a7a8:	4643      	mov	r3, r8
   8a7aa:	e7ea      	b.n	8a782 <__udivmoddi4+0x28a>
   8a7ac:	4628      	mov	r0, r5
   8a7ae:	e794      	b.n	8a6da <__udivmoddi4+0x1e2>
   8a7b0:	4641      	mov	r1, r8
   8a7b2:	e7d1      	b.n	8a758 <__udivmoddi4+0x260>
   8a7b4:	46d0      	mov	r8, sl
   8a7b6:	e77b      	b.n	8a6b0 <__udivmoddi4+0x1b8>
   8a7b8:	4464      	add	r4, ip
   8a7ba:	3802      	subs	r0, #2
   8a7bc:	e747      	b.n	8a64e <__udivmoddi4+0x156>
   8a7be:	3b02      	subs	r3, #2
   8a7c0:	4465      	add	r5, ip
   8a7c2:	e72f      	b.n	8a624 <__udivmoddi4+0x12c>
   8a7c4:	4608      	mov	r0, r1
   8a7c6:	e706      	b.n	8a5d6 <__udivmoddi4+0xde>
   8a7c8:	4631      	mov	r1, r6
   8a7ca:	e6e9      	b.n	8a5a0 <__udivmoddi4+0xa8>

0008a7cc <__aeabi_idiv0>:
   8a7cc:	4770      	bx	lr
   8a7ce:	bf00      	nop
   8a7d0:	78383025 	.word	0x78383025
   8a7d4:	00000000 	.word	0x00000000
   8a7d8:	2072614d 	.word	0x2072614d
   8a7dc:	32203820 	.word	0x32203820
   8a7e0:	00323230 	.word	0x00323230
   8a7e4:	303a3431 	.word	0x303a3431
   8a7e8:	33333a39 	.word	0x33333a39
   8a7ec:	00000000 	.word	0x00000000
   8a7f0:	70696843 	.word	0x70696843
   8a7f4:	554f4853 	.word	0x554f4853
   8a7f8:	20524554 	.word	0x20524554
   8a7fc:	31323543 	.word	0x31323543
   8a800:	6c614220 	.word	0x6c614220
   8a804:	7473696c 	.word	0x7473696c
   8a808:	47206369 	.word	0x47206369
   8a80c:	4f206c65 	.word	0x4f206c65
   8a810:	6e696c6e 	.word	0x6e696c6e
   8a814:	46202e65 	.word	0x46202e65
   8a818:	776d7269 	.word	0x776d7269
   8a81c:	20657261 	.word	0x20657261
   8a820:	6c697562 	.word	0x6c697562
   8a824:	25203a64 	.word	0x25203a64
   8a828:	73252f73 	.word	0x73252f73
   8a82c:	0000000a 	.word	0x0000000a
   8a830:	69726553 	.word	0x69726553
   8a834:	6e206c61 	.word	0x6e206c61
   8a838:	65626d75 	.word	0x65626d75
   8a83c:	25203a72 	.word	0x25203a72
   8a840:	00000a73 	.word	0x00000a73
   8a844:	74746553 	.word	0x74746553
   8a848:	20676e69 	.word	0x20676e69
   8a84c:	53207075 	.word	0x53207075
   8a850:	204d4152 	.word	0x204d4152
   8a854:	6d6d6f43 	.word	0x6d6d6f43
   8a858:	63696e75 	.word	0x63696e75
   8a85c:	6f697461 	.word	0x6f697461
   8a860:	00000a6e 	.word	0x00000a6e
   8a864:	6e657645 	.word	0x6e657645
   8a868:	6f4c2074 	.word	0x6f4c2074
   8a86c:	4520706f 	.word	0x4520706f
   8a870:	7265746e 	.word	0x7265746e
   8a874:	202c6465 	.word	0x202c6465
   8a878:	74696177 	.word	0x74696177
   8a87c:	2e676e69 	.word	0x2e676e69
   8a880:	000a2e2e 	.word	0x000a2e2e

0008a884 <BUILD_DATE>:
   8a884:	2072614d 32203820 00323230              Mar  8 2022.

0008a890 <BUILD_TIME>:
   8a890:	303a3431 33333a39 00000000 00000000     14:09:33........
   8a8a0:	00000000 aaaaaa00 aaaaaaaa eeeeeeaa     ................
   8a8b0:	eeeeeeee fffffeee ffffffff ffffffff     ................
   8a8c0:	dfbf7fff fdfbf7ef dfbf7efc fdfbf7ef     .........~......
   8a8d0:	0000007e 74697845 20676e69 68746977     ~...Exiting with
   8a8e0:	61747320 20737574 0a2e6425 00000000      status %d......

0008a8f0 <_global_impure_ptr>:
   8a8f0:	20000400 00464e49 00666e69 004e414e     ... INF.inf.NAN.
   8a900:	006e616e 33323130 37363534 62613938     nan.0123456789ab
   8a910:	66656463 00000000 33323130 37363534     cdef....01234567
   8a920:	42413938 46454443 00000000 6c756e28     89ABCDEF....(nul
   8a930:	0000296c 00000030                       l)..0...

0008a938 <blanks.1>:
   8a938:	20202020 20202020 20202020 20202020                     

0008a948 <zeroes.0>:
   8a948:	30303030 30303030 30303030 30303030     0000000000000000

0008a958 <blanks.1>:
   8a958:	20202020 20202020 20202020 20202020                     

0008a968 <zeroes.0>:
   8a968:	30303030 30303030 30303030 30303030     0000000000000000
   8a978:	004e614e 69666e49 7974696e 00000000     NaN.Infinity....
   8a988:	6c6c6142 7320636f 65636375 64656465     Balloc succeeded
   8a998:	00000000 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8a9a8:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8a9b8:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8a9c8:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8a9d8:	656e696c 3036322d 3230325f 32373031     line-260_2021072
   8a9e8:	36315f37 37333732 36383331 6372732f     7_1627371386/src
   8a9f8:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8aa08:	2f636269 6c647473 642f6269 2e616f74     ibc/stdlib/dtoa.
   8aa18:	00000063 00000043 49534f50 00000058     c...C...POSIX...
   8aa28:	0000002e 746e6d2f 726f772f 6170736b     ..../mnt/workspa
   8aa38:	772f6563 736b726f 65636170 4343472f     ce/workspace/GCC
   8aa48:	2d30312d 65706970 656e696c 6e656a2f     -10-pipeline/jen
   8aa58:	736e696b 4343472d 2d30312d 65706970     kins-GCC-10-pipe
   8aa68:	656e696c 3036322d 3230325f 32373031     line-260_2021072
   8aa78:	36315f37 37333732 36383331 6372732f     7_1627371386/src
   8aa88:	77656e2f 2f62696c 6c77656e 6c2f6269     /newlib/newlib/l
   8aa98:	2f636269 6c647473 6d2f6269 63657270     ibc/stdlib/mprec
   8aaa8:	0000632e 00000000                       .c......

0008aab0 <__mprec_bigtens>:
   8aab0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   8aac0:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   8aad0:	7f73bf3c 75154fdd                       <.s..O.u

0008aad8 <__mprec_tens>:
   8aad8:	00000000 3ff00000 00000000 40240000     .......?......$@
   8aae8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   8aaf8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   8ab08:	00000000 412e8480 00000000 416312d0     .......A......cA
   8ab18:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   8ab28:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   8ab38:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   8ab48:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   8ab58:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   8ab68:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   8ab78:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   8ab88:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   8ab98:	79d99db4 44ea7843                       ...yCx.D

0008aba0 <p05.0>:
   8aba0:	00000005 00000019 0000007d 7566202c     ........}..., fu
   8abb0:	6974636e 203a6e6f 00000000 65737361     nction: ....asse
   8abc0:	6f697472 2522206e 66202273 656c6961     rtion "%s" faile
   8abd0:	66203a64 20656c69 22732522 696c202c     d: file "%s", li
   8abe0:	2520656e 25732564 00000a73              ne %d%s%s...

0008abec <_ctype_>:
   8abec:	20202000 20202020 28282020 20282828     .         ((((( 
   8abfc:	20202020 20202020 20202020 20202020                     
   8ac0c:	10108820 10101010 10101010 10101010      ...............
   8ac1c:	04040410 04040404 10040404 10101010     ................
   8ac2c:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8ac3c:	01010101 01010101 01010101 10101010     ................
   8ac4c:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8ac5c:	02020202 02020202 02020202 10101010     ................
   8ac6c:	00000020 00000000 00000000 00000000      ...............
   8ac7c:	00000000 00000000 00000000 00000000     ................
   8ac8c:	00000000 00000000 00000000 00000000     ................
   8ac9c:	00000000 00000000 00000000 00000000     ................
   8acac:	00000000 00000000 00000000 00000000     ................
   8acbc:	00000000 00000000 00000000 00000000     ................
   8accc:	00000000 00000000 00000000 00000000     ................
   8acdc:	00000000 00000000 00000000 00000000     ................
   8acec:	00000000                                ....

0008acf0 <_init>:
   8acf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8acf2:	bf00      	nop
   8acf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8acf6:	bc08      	pop	{r3}
   8acf8:	469e      	mov	lr, r3
   8acfa:	4770      	bx	lr

0008acfc <__init_array_start>:
   8acfc:	0008671d 	.word	0x0008671d

0008ad00 <__frame_dummy_init_array_entry>:
   8ad00:	000800e1                                ....

0008ad04 <_fini>:
   8ad04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8ad06:	bf00      	nop
   8ad08:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8ad0a:	bc08      	pop	{r3}
   8ad0c:	469e      	mov	lr, r3
   8ad0e:	4770      	bx	lr

0008ad10 <__do_global_dtors_aux_fini_array_entry>:
   8ad10:	00bd 0008                                   ....

Disassembly of section .relocate:

20000000 <efc_perform_read_sequence>:
__no_inline
RAMFUNC
uint32_t efc_perform_read_sequence(Efc *p_efc,
		uint32_t ul_cmd_st, uint32_t ul_cmd_sp,
		uint32_t *p_ul_buf, uint32_t ul_size)
{
20000000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	volatile uint32_t ul_status;
	uint32_t ul_cnt;

#if (SAM3U4 || SAM3XA || SAM4SD16 || SAM4SD32 || SAM4C32)
	uint32_t *p_ul_data =
			(uint32_t *) ((p_efc == EFC0) ?
20000004:	4c33      	ldr	r4, [pc, #204]	; (200000d4 <efc_perform_read_sequence+0xd4>)
{
20000006:	b082      	sub	sp, #8
			(uint32_t *) ((p_efc == EFC0) ?
20000008:	42a0      	cmp	r0, r4
2000000a:	bf0c      	ite	eq
2000000c:	f44f 2e00 	moveq.w	lr, #524288	; 0x80000
20000010:	f44f 1e80 	movne.w	lr, #1048576	; 0x100000
{
20000014:	9f08      	ldr	r7, [sp, #32]
	uint32_t *p_ul_data = (uint32_t *) READ_BUFF_ADDR;
#else
	return EFC_RC_NOT_SUPPORT;
#endif

	if (p_ul_buf == NULL) {
20000016:	2b00      	cmp	r3, #0
20000018:	d057      	beq.n	200000ca <efc_perform_read_sequence+0xca>
2000001a:	4684      	mov	ip, r0
		return EFC_RC_INVALID;
	}

	p_efc->EEFC_FMR |= (0x1u << 16);
2000001c:	6800      	ldr	r0, [r0, #0]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
	p_efc->EEFC_FCR = EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
#else
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
			| EEFC_FCR_FCMD(ul_cmd_st);
2000001e:	b2c9      	uxtb	r1, r1
20000020:	f041 41b4 	orr.w	r1, r1, #1509949440	; 0x5a000000
	p_efc->EEFC_FMR |= (0x1u << 16);
20000024:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
20000028:	f8cc 0000 	str.w	r0, [ip]
	p_efc->EEFC_FCR = EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0)
2000002c:	f8cc 1004 	str.w	r1, [ip, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register
	 * (EEFC_FSR) falls.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
20000030:	f8dc 1008 	ldr.w	r1, [ip, #8]
20000034:	9101      	str	r1, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) == EEFC_FSR_FRDY);
20000036:	9801      	ldr	r0, [sp, #4]
20000038:	f010 0001 	ands.w	r0, r0, #1
2000003c:	d1f8      	bne.n	20000030 <efc_perform_read_sequence+0x30>

	/* The data is located in the first address of the Flash
	 * memory mapping.
	 */
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
2000003e:	b31f      	cbz	r7, 20000088 <efc_perform_read_sequence+0x88>
20000040:	1e79      	subs	r1, r7, #1
20000042:	290a      	cmp	r1, #10
20000044:	f3c3 0402 	ubfx	r4, r3, #0, #3
20000048:	bf94      	ite	ls
2000004a:	2100      	movls	r1, #0
2000004c:	2101      	movhi	r1, #1
2000004e:	2c00      	cmp	r4, #0
20000050:	bf18      	it	ne
20000052:	2100      	movne	r1, #0
20000054:	b361      	cbz	r1, 200000b0 <efc_perform_read_sequence+0xb0>
20000056:	f10e 0104 	add.w	r1, lr, #4
2000005a:	428b      	cmp	r3, r1
2000005c:	d028      	beq.n	200000b0 <efc_perform_read_sequence+0xb0>
2000005e:	4619      	mov	r1, r3
20000060:	ea4f 0857 	mov.w	r8, r7, lsr #1
20000064:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
20000068:	f1ae 0608 	sub.w	r6, lr, #8
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
2000006c:	e9f6 4502 	ldrd	r4, r5, [r6, #8]!
20000070:	e8e1 4502 	strd	r4, r5, [r1], #8
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
20000074:	4541      	cmp	r1, r8
20000076:	d1f9      	bne.n	2000006c <efc_perform_read_sequence+0x6c>
20000078:	07fc      	lsls	r4, r7, #31
2000007a:	f027 0101 	bic.w	r1, r7, #1
2000007e:	d503      	bpl.n	20000088 <efc_perform_read_sequence+0x88>
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
20000080:	f85e 4021 	ldr.w	r4, [lr, r1, lsl #2]
20000084:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM)
			EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
#else
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
			EEFC_FCR_FCMD(ul_cmd_sp);
20000088:	b2d2      	uxtb	r2, r2
			EEFC_FCR_FKEY(FWP_KEY) | EEFC_FCR_FARG(0) |
2000008a:	f042 42b4 	orr.w	r2, r2, #1509949440	; 0x5a000000
	p_efc->EEFC_FCR =
2000008e:	f8cc 2004 	str.w	r2, [ip, #4]
#endif
	/* Wait for the FRDY bit in the Flash Programming Status Register (EEFC_FSR)
	 * rises.
	 */
	do {
		ul_status = p_efc->EEFC_FSR;
20000092:	f8dc 3008 	ldr.w	r3, [ip, #8]
20000096:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
20000098:	9b01      	ldr	r3, [sp, #4]
2000009a:	07db      	lsls	r3, r3, #31
2000009c:	d5f9      	bpl.n	20000092 <efc_perform_read_sequence+0x92>

	p_efc->EEFC_FMR &= ~(0x1u << 16);
2000009e:	f8dc 3000 	ldr.w	r3, [ip]
200000a2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
200000a6:	f8cc 3000 	str.w	r3, [ip]

	return EFC_RC_OK;
}
200000aa:	b002      	add	sp, #8
200000ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
200000b0:	eb0e 0787 	add.w	r7, lr, r7, lsl #2
200000b4:	3b04      	subs	r3, #4
200000b6:	f1ae 0e04 	sub.w	lr, lr, #4
200000ba:	3f04      	subs	r7, #4
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
200000bc:	f85e 1f04 	ldr.w	r1, [lr, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
200000c0:	45be      	cmp	lr, r7
		p_ul_buf[ul_cnt] = p_ul_data[ul_cnt];
200000c2:	f843 1f04 	str.w	r1, [r3, #4]!
	for (ul_cnt = 0; ul_cnt < ul_size; ul_cnt++) {
200000c6:	d1f9      	bne.n	200000bc <efc_perform_read_sequence+0xbc>
200000c8:	e7de      	b.n	20000088 <efc_perform_read_sequence+0x88>
		return EFC_RC_INVALID;
200000ca:	2002      	movs	r0, #2
}
200000cc:	b002      	add	sp, #8
200000ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
200000d2:	bf00      	nop
200000d4:	400e0800 	.word	0x400e0800

200000d8 <efc_write_fmr>:
 */
__no_inline
RAMFUNC
void efc_write_fmr(Efc *p_efc, uint32_t ul_fmr)
{
	p_efc->EEFC_FMR = ul_fmr;
200000d8:	6001      	str	r1, [r0, #0]
}
200000da:	4770      	bx	lr

200000dc <efc_perform_fcr>:
 * \return The current status.
 */
__no_inline
RAMFUNC
uint32_t efc_perform_fcr(Efc *p_efc, uint32_t ul_fcr)
{
200000dc:	b082      	sub	sp, #8
	volatile uint32_t ul_status;

	p_efc->EEFC_FCR = ul_fcr;
200000de:	6041      	str	r1, [r0, #4]
	do {
		ul_status = p_efc->EEFC_FSR;
200000e0:	6883      	ldr	r3, [r0, #8]
200000e2:	9301      	str	r3, [sp, #4]
	} while ((ul_status & EEFC_FSR_FRDY) != EEFC_FSR_FRDY);
200000e4:	9b01      	ldr	r3, [sp, #4]
200000e6:	07db      	lsls	r3, r3, #31
200000e8:	d5fa      	bpl.n	200000e0 <efc_perform_fcr+0x4>

	return (ul_status & EEFC_ERROR_FLAGS);
200000ea:	9801      	ldr	r0, [sp, #4]
}
200000ec:	f000 0006 	and.w	r0, r0, #6
200000f0:	b002      	add	sp, #8
200000f2:	4770      	bx	lr

200000f4 <SystemInit>:
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200000f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
200000f8:	4819      	ldr	r0, [pc, #100]	; (20000160 <SystemInit+0x6c>)
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200000fa:	491a      	ldr	r1, [pc, #104]	; (20000164 <SystemInit+0x70>)
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
200000fc:	4a1a      	ldr	r2, [pc, #104]	; (20000168 <SystemInit+0x74>)
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200000fe:	6003      	str	r3, [r0, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20000100:	600b      	str	r3, [r1, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20000102:	6a13      	ldr	r3, [r2, #32]
20000104:	01db      	lsls	r3, r3, #7
20000106:	d404      	bmi.n	20000112 <SystemInit+0x1e>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000108:	4b18      	ldr	r3, [pc, #96]	; (2000016c <SystemInit+0x78>)
2000010a:	6213      	str	r3, [r2, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2000010c:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000010e:	07d8      	lsls	r0, r3, #31
20000110:	d5fc      	bpl.n	2000010c <SystemInit+0x18>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20000112:	4a15      	ldr	r2, [pc, #84]	; (20000168 <SystemInit+0x74>)
20000114:	4b16      	ldr	r3, [pc, #88]	; (20000170 <SystemInit+0x7c>)
20000116:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
20000118:	6e93      	ldr	r3, [r2, #104]	; 0x68
2000011a:	03d9      	lsls	r1, r3, #15
2000011c:	d5fc      	bpl.n	20000118 <SystemInit+0x24>
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
2000011e:	6b13      	ldr	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000120:	4811      	ldr	r0, [pc, #68]	; (20000168 <SystemInit+0x74>)
	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20000122:	f023 0303 	bic.w	r3, r3, #3
20000126:	f043 0301 	orr.w	r3, r3, #1
2000012a:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000012c:	6e83      	ldr	r3, [r0, #104]	; 0x68
2000012e:	071b      	lsls	r3, r3, #28
20000130:	d5fc      	bpl.n	2000012c <SystemInit+0x38>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000132:	4b10      	ldr	r3, [pc, #64]	; (20000174 <SystemInit+0x80>)
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20000134:	490c      	ldr	r1, [pc, #48]	; (20000168 <SystemInit+0x74>)
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20000136:	6283      	str	r3, [r0, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20000138:	6e8b      	ldr	r3, [r1, #104]	; 0x68
2000013a:	0798      	lsls	r0, r3, #30
2000013c:	d5fc      	bpl.n	20000138 <SystemInit+0x44>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2000013e:	2311      	movs	r3, #17
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000140:	4a09      	ldr	r2, [pc, #36]	; (20000168 <SystemInit+0x74>)
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20000142:	630b      	str	r3, [r1, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000144:	6e93      	ldr	r3, [r2, #104]	; 0x68
20000146:	0719      	lsls	r1, r3, #28
20000148:	d5fc      	bpl.n	20000144 <SystemInit+0x50>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2000014a:	2312      	movs	r3, #18
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
2000014c:	4906      	ldr	r1, [pc, #24]	; (20000168 <SystemInit+0x74>)
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2000014e:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20000150:	6e8b      	ldr	r3, [r1, #104]	; 0x68
20000152:	071b      	lsls	r3, r3, #28
20000154:	d5fc      	bpl.n	20000150 <SystemInit+0x5c>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20000156:	4b08      	ldr	r3, [pc, #32]	; (20000178 <SystemInit+0x84>)
20000158:	4a08      	ldr	r2, [pc, #32]	; (2000017c <SystemInit+0x88>)
2000015a:	601a      	str	r2, [r3, #0]
}
2000015c:	4770      	bx	lr
2000015e:	bf00      	nop
20000160:	400e0800 	.word	0x400e0800
20000164:	400e0a00 	.word	0x400e0a00
20000168:	400e0400 	.word	0x400e0400
2000016c:	00370809 	.word	0x00370809
20000170:	01370809 	.word	0x01370809
20000174:	200f3f01 	.word	0x200f3f01
20000178:	200003f8 	.word	0x200003f8
2000017c:	05b8d800 	.word	0x05b8d800

20000180 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
20000180:	4b14      	ldr	r3, [pc, #80]	; (200001d4 <system_init_flash+0x54>)
20000182:	4298      	cmp	r0, r3
20000184:	d205      	bcs.n	20000192 <system_init_flash+0x12>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
20000186:	2300      	movs	r3, #0
20000188:	4913      	ldr	r1, [pc, #76]	; (200001d8 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
2000018a:	4a14      	ldr	r2, [pc, #80]	; (200001dc <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
2000018c:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
2000018e:	6013      	str	r3, [r2, #0]
20000190:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
20000192:	4b13      	ldr	r3, [pc, #76]	; (200001e0 <system_init_flash+0x60>)
20000194:	4298      	cmp	r0, r3
20000196:	d206      	bcs.n	200001a6 <system_init_flash+0x26>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
20000198:	f44f 7380 	mov.w	r3, #256	; 0x100
2000019c:	490e      	ldr	r1, [pc, #56]	; (200001d8 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
2000019e:	4a0f      	ldr	r2, [pc, #60]	; (200001dc <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200001a0:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200001a2:	6013      	str	r3, [r2, #0]
200001a4:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200001a6:	4b0f      	ldr	r3, [pc, #60]	; (200001e4 <system_init_flash+0x64>)
200001a8:	4298      	cmp	r0, r3
200001aa:	d806      	bhi.n	200001ba <system_init_flash+0x3a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200001ac:	f44f 7300 	mov.w	r3, #512	; 0x200
200001b0:	4909      	ldr	r1, [pc, #36]	; (200001d8 <system_init_flash+0x58>)
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200001b2:	4a0a      	ldr	r2, [pc, #40]	; (200001dc <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200001b4:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200001b6:	6013      	str	r3, [r2, #0]
200001b8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200001ba:	4b0b      	ldr	r3, [pc, #44]	; (200001e8 <system_init_flash+0x68>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200001bc:	4906      	ldr	r1, [pc, #24]	; (200001d8 <system_init_flash+0x58>)
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200001be:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200001c0:	bf94      	ite	ls
200001c2:	f44f 7340 	movls.w	r3, #768	; 0x300
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200001c6:	f44f 6380 	movhi.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200001ca:	4a04      	ldr	r2, [pc, #16]	; (200001dc <system_init_flash+0x5c>)
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200001cc:	600b      	str	r3, [r1, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
200001ce:	6013      	str	r3, [r2, #0]
	}
}
200001d0:	4770      	bx	lr
200001d2:	bf00      	nop
200001d4:	016e3600 	.word	0x016e3600
200001d8:	400e0800 	.word	0x400e0800
200001dc:	400e0a00 	.word	0x400e0a00
200001e0:	02625a00 	.word	0x02625a00
200001e4:	044aa1ff 	.word	0x044aa1ff
200001e8:	0501bcff 	.word	0x0501bcff

200001ec <usb_serial_number>:
200001ec:	30303030 30303030 30303030 44414544     000000000000DEAD
200001fc:	46454542 00000000 00000000 00000000     BEEF............
2000020c:	00000000                                ....

20000210 <sram_size>:
20000210:	00400000                                ..@.

20000214 <main_b_vendor_enable>:
20000214:	00000001                                ....

20000218 <MS_BOS_PACKET>:
20000218:	00210f05 05101c01 dd60df00 c74589d8     ..!.......`...E.
20000228:	65d29c4c 8a649e9d 0300009f 01009e06     L..e..d.........
20000238:	00000000                                ....

2000023c <MS_OS_DESC>:
2000023c:	0000000a 06030000 0014009e 49570003     ..............WI
2000024c:	4253554e 00000000 00000000 00800000     NUSB............
2000025c:	00070004 00440028 00760065 00630069     ....(.D.e.v.i.c.
2000026c:	00490065 0074006e 00720065 00610066     e.I.n.t.e.r.f.a.
2000027c:	00650063 00550047 00440049 004e0000     c.e.G.U.I.D...N.
2000028c:	0030007b 00430041 00320045 00330042     {.0.A.C.E.2.B.3.
2000029c:	002d0045 00420032 00450033 0032002d     E.-.2.B.3.E.-.2.
200002ac:	00330042 002d0045 00420032 00450033     B.3.E.-.2.B.3.E.
200002bc:	0034002d 00320035 00300031 00430041     -.4.5.2.1.0.A.C.
200002cc:	00320045 00330042 007d0045 00000000     E.2.B.3.E.}.....

200002dc <udc_string_desc>:
200002dc:	00000300 00000000 00000000 00000000     ................
200002ec:	00000000 00000000 00000000 00000000     ................
200002fc:	00000000 00000000 00000000 00000000     ................
2000030c:	00000000 00000000 00000000 00000000     ................
2000031c:	00000000                                ....

20000320 <udc_string_desc_languageid>:
20000320:	04090304                                ....

20000324 <udc_string_manufacturer_name>:
20000324:	4177654e 65542045 6f6e6863 79676f6c     NewAE Technology
20000334:	636e4920 0000002e                        Inc....

2000033c <udc_string_product_name>:
2000033c:	6c6c6142 69747369 65472063 5743206c     Ballistic Gel CW
2000034c:	00313235                                521.

20000350 <xram>:
20000350:	60000000                                ...`

20000354 <udi_api_vendor>:
20000354:	000831f9 000831b5 000831c9 000831a9     .1...1...1...1..
20000364:	00000000                                ....

20000368 <g_interrupt_enabled>:
20000368:	00000001                                ....

2000036c <udc_config>:
2000036c:	200003d4 2000038c 200003d4 200003e8     ... ... ... ... 
2000037c:	20000384 00000000                       ... ....

20000384 <udc_config_hs>:
20000384:	200003b4 200003f4                       ... ... 

2000038c <udc_config_lsfs>:
2000038c:	20000394 200003f4                       ... ... 

20000394 <udc_desc_fs>:
20000394:	00200209 80000101 000409fa ffff0200     .. .............
200003a4:	050700ff 00400281 02050700 00004002     ......@......@..

200003b4 <udc_desc_hs>:
200003b4:	00200209 80000101 000409fa ffff0200     .. .............
200003c4:	050700ff 02000281 02050700 00020002     ................

200003d4 <udc_device_desc>:
200003d4:	02000112 40000000 c5212b3e 02010101     .......@>+!.....
200003e4:	00000103                                ....

200003e8 <udc_device_qual>:
200003e8:	0200060a 40000000 00000001              .......@....

200003f4 <udi_apis>:
200003f4:	20000354                                T.. 

200003f8 <SystemCoreClock>:
200003f8:	003d0900                                ..=.

200003fc <_impure_ptr>:
200003fc:	20000400                                ... 

20000400 <impure_data>:
20000400:	00000000 200006ec 20000754 200007bc     ....... T.. ... 
20000410:	00000000 00000000 00000000 00000000     ................
20000420:	00000000 00000000 00000000 00000000     ................
20000430:	00000000 00000000 00000000 00000000     ................
20000440:	00000000 00000000 00000000 00000000     ................
20000450:	00000000 00000000 00000000 00000000     ................
20000460:	00000000 00000000 00000000 00000000     ................
20000470:	00000000 00000000 00000000 00000000     ................
20000480:	00000000 00000000 00000000 00000000     ................
20000490:	00000000 00000000 00000000 00000000     ................
200004a0:	00000000 00000000 00000001 00000000     ................
200004b0:	abcd330e e66d1234 0005deec 0000000b     .3..4.m.........
200004c0:	00000000 00000000 00000000 00000000     ................
200004d0:	00000000 00000000 00000000 00000000     ................
200004e0:	00000000 00000000 00000000 00000000     ................
200004f0:	00000000 00000000 00000000 00000000     ................
20000500:	00000000 00000000 00000000 00000000     ................
20000510:	00000000 00000000 00000000 00000000     ................
20000520:	00000000 00000000 00000000 00000000     ................
20000530:	00000000 00000000 00000000 00000000     ................
20000540:	00000000 00000000 00000000 00000000     ................
20000550:	00000000 00000000 00000000 00000000     ................
20000560:	00000000 00000000 00000000 00000000     ................
20000570:	00000000 00000000 00000000 00000000     ................
20000580:	00000000 00000000 00000000 00000000     ................
20000590:	00000000 00000000 00000000 00000000     ................
200005a0:	00000000 00000000 00000000 00000000     ................
200005b0:	00000000 00000000 00000000 00000000     ................
200005c0:	00000000 00000000 00000000 00000000     ................
200005d0:	00000000 00000000 00000000 00000000     ................
200005e0:	00000000 00000000 00000000 00000000     ................
200005f0:	00000000 00000000 00000000 00000000     ................
20000600:	00000000 00000000 00000000 00000000     ................
20000610:	00000000 00000000 00000000 00000000     ................
20000620:	00000000 00000000 00000000 00000000     ................
20000630:	00000000 00000000 00000000 00000000     ................
20000640:	00000000 00000000 00000000 00000000     ................
20000650:	00000000 00000000 00000000 00000000     ................
20000660:	00000000 00000000 00000000 00000000     ................
20000670:	00000000 00000000 00000000 00000000     ................
20000680:	00000000 00000000 00000000 00000000     ................
20000690:	00000000 00000000 00000000 00000000     ................
200006a0:	00000000 00000000 00000000 00000000     ................
200006b0:	00000000 00000000 00000000 00000000     ................
200006c0:	00000000 00000000 00000000 00000000     ................
200006d0:	00000000 00000000 00000000 00000000     ................
200006e0:	00000000 00000000 00000000 00000000     ................
200006f0:	00000000 00000000 00000000 00000000     ................
20000700:	00000000 00000000 00000000 00000000     ................
20000710:	00000000 00000000 00000000 00000000     ................
20000720:	00000000 00000000 00000000 00000000     ................
20000730:	00000000 00000000 00000000 00000000     ................
20000740:	00000000 00000000 00000000 00000000     ................
20000750:	00000000 00000000 00000000 00000000     ................
20000760:	00000000 00000000 00000000 00000000     ................
20000770:	00000000 00000000 00000000 00000000     ................
20000780:	00000000 00000000 00000000 00000000     ................
20000790:	00000000 00000000 00000000 00000000     ................
200007a0:	00000000 00000000 00000000 00000000     ................
200007b0:	00000000 00000000 00000000 00000000     ................
200007c0:	00000000 00000000 00000000 00000000     ................
200007d0:	00000000 00000000 00000000 00000000     ................
200007e0:	00000000 00000000 00000000 00000000     ................
200007f0:	00000000 00000000 00000000 00000000     ................
20000800:	00000000 00000000 00000000 00000000     ................
20000810:	00000000 00000000 00000000 00000000     ................
20000820:	00000000 00000000                       ........

20000828 <__atexit_recursive_mutex>:
20000828:	2000371c                                .7. 

2000082c <__global_locale>:
2000082c:	00000043 00000000 00000000 00000000     C...............
2000083c:	00000000 00000000 00000000 00000000     ................
2000084c:	00000043 00000000 00000000 00000000     C...............
2000085c:	00000000 00000000 00000000 00000000     ................
2000086c:	00000043 00000000 00000000 00000000     C...............
2000087c:	00000000 00000000 00000000 00000000     ................
2000088c:	00000043 00000000 00000000 00000000     C...............
2000089c:	00000000 00000000 00000000 00000000     ................
200008ac:	00000043 00000000 00000000 00000000     C...............
200008bc:	00000000 00000000 00000000 00000000     ................
200008cc:	00000043 00000000 00000000 00000000     C...............
200008dc:	00000000 00000000 00000000 00000000     ................
200008ec:	00000043 00000000 00000000 00000000     C...............
200008fc:	00000000 00000000 00000000 00000000     ................
2000090c:	000897b5 000887bd 00000000 0008abec     ................
2000091c:	0008aa28 0008a8ec 0008a8ec 0008a8ec     (...............
2000092c:	0008a8ec 0008a8ec 0008a8ec 0008a8ec     ................
2000093c:	0008a8ec 0008a8ec ffffffff ffffffff     ................
2000094c:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
2000095c:	00000000 00000000 00000000 00000000     ................
2000096c:	00000000 00000000 53410000 00494943     ..........ASCII.
2000097c:	00000000 00000000 00000000 00000000     ................
2000098c:	00000000 00000000 00000000              ............

20000998 <__malloc_av_>:
20000998:	00000000 00000000 20000998 20000998     ........... ... 
200009a8:	200009a0 200009a0 200009a8 200009a8     ... ... ... ... 
200009b8:	200009b0 200009b0 200009b8 200009b8     ... ... ... ... 
200009c8:	200009c0 200009c0 200009c8 200009c8     ... ... ... ... 
200009d8:	200009d0 200009d0 200009d8 200009d8     ... ... ... ... 
200009e8:	200009e0 200009e0 200009e8 200009e8     ... ... ... ... 
200009f8:	200009f0 200009f0 200009f8 200009f8     ... ... ... ... 
20000a08:	20000a00 20000a00 20000a08 20000a08     ... ... ... ... 
20000a18:	20000a10 20000a10 20000a18 20000a18     ... ... ... ... 
20000a28:	20000a20 20000a20 20000a28 20000a28      ..  .. (.. (.. 
20000a38:	20000a30 20000a30 20000a38 20000a38     0.. 0.. 8.. 8.. 
20000a48:	20000a40 20000a40 20000a48 20000a48     @.. @.. H.. H.. 
20000a58:	20000a50 20000a50 20000a58 20000a58     P.. P.. X.. X.. 
20000a68:	20000a60 20000a60 20000a68 20000a68     `.. `.. h.. h.. 
20000a78:	20000a70 20000a70 20000a78 20000a78     p.. p.. x.. x.. 
20000a88:	20000a80 20000a80 20000a88 20000a88     ... ... ... ... 
20000a98:	20000a90 20000a90 20000a98 20000a98     ... ... ... ... 
20000aa8:	20000aa0 20000aa0 20000aa8 20000aa8     ... ... ... ... 
20000ab8:	20000ab0 20000ab0 20000ab8 20000ab8     ... ... ... ... 
20000ac8:	20000ac0 20000ac0 20000ac8 20000ac8     ... ... ... ... 
20000ad8:	20000ad0 20000ad0 20000ad8 20000ad8     ... ... ... ... 
20000ae8:	20000ae0 20000ae0 20000ae8 20000ae8     ... ... ... ... 
20000af8:	20000af0 20000af0 20000af8 20000af8     ... ... ... ... 
20000b08:	20000b00 20000b00 20000b08 20000b08     ... ... ... ... 
20000b18:	20000b10 20000b10 20000b18 20000b18     ... ... ... ... 
20000b28:	20000b20 20000b20 20000b28 20000b28      ..  .. (.. (.. 
20000b38:	20000b30 20000b30 20000b38 20000b38     0.. 0.. 8.. 8.. 
20000b48:	20000b40 20000b40 20000b48 20000b48     @.. @.. H.. H.. 
20000b58:	20000b50 20000b50 20000b58 20000b58     P.. P.. X.. X.. 
20000b68:	20000b60 20000b60 20000b68 20000b68     `.. `.. h.. h.. 
20000b78:	20000b70 20000b70 20000b78 20000b78     p.. p.. x.. x.. 
20000b88:	20000b80 20000b80 20000b88 20000b88     ... ... ... ... 
20000b98:	20000b90 20000b90 20000b98 20000b98     ... ... ... ... 
20000ba8:	20000ba0 20000ba0 20000ba8 20000ba8     ... ... ... ... 
20000bb8:	20000bb0 20000bb0 20000bb8 20000bb8     ... ... ... ... 
20000bc8:	20000bc0 20000bc0 20000bc8 20000bc8     ... ... ... ... 
20000bd8:	20000bd0 20000bd0 20000bd8 20000bd8     ... ... ... ... 
20000be8:	20000be0 20000be0 20000be8 20000be8     ... ... ... ... 
20000bf8:	20000bf0 20000bf0 20000bf8 20000bf8     ... ... ... ... 
20000c08:	20000c00 20000c00 20000c08 20000c08     ... ... ... ... 
20000c18:	20000c10 20000c10 20000c18 20000c18     ... ... ... ... 
20000c28:	20000c20 20000c20 20000c28 20000c28      ..  .. (.. (.. 
20000c38:	20000c30 20000c30 20000c38 20000c38     0.. 0.. 8.. 8.. 
20000c48:	20000c40 20000c40 20000c48 20000c48     @.. @.. H.. H.. 
20000c58:	20000c50 20000c50 20000c58 20000c58     P.. P.. X.. X.. 
20000c68:	20000c60 20000c60 20000c68 20000c68     `.. `.. h.. h.. 
20000c78:	20000c70 20000c70 20000c78 20000c78     p.. p.. x.. x.. 
20000c88:	20000c80 20000c80 20000c88 20000c88     ... ... ... ... 
20000c98:	20000c90 20000c90 20000c98 20000c98     ... ... ... ... 
20000ca8:	20000ca0 20000ca0 20000ca8 20000ca8     ... ... ... ... 
20000cb8:	20000cb0 20000cb0 20000cb8 20000cb8     ... ... ... ... 
20000cc8:	20000cc0 20000cc0 20000cc8 20000cc8     ... ... ... ... 
20000cd8:	20000cd0 20000cd0 20000cd8 20000cd8     ... ... ... ... 
20000ce8:	20000ce0 20000ce0 20000ce8 20000ce8     ... ... ... ... 
20000cf8:	20000cf0 20000cf0 20000cf8 20000cf8     ... ... ... ... 
20000d08:	20000d00 20000d00 20000d08 20000d08     ... ... ... ... 
20000d18:	20000d10 20000d10 20000d18 20000d18     ... ... ... ... 
20000d28:	20000d20 20000d20 20000d28 20000d28      ..  .. (.. (.. 
20000d38:	20000d30 20000d30 20000d38 20000d38     0.. 0.. 8.. 8.. 
20000d48:	20000d40 20000d40 20000d48 20000d48     @.. @.. H.. H.. 
20000d58:	20000d50 20000d50 20000d58 20000d58     P.. P.. X.. X.. 
20000d68:	20000d60 20000d60 20000d68 20000d68     `.. `.. h.. h.. 
20000d78:	20000d70 20000d70 20000d78 20000d78     p.. p.. x.. x.. 
20000d88:	20000d80 20000d80 20000d88 20000d88     ... ... ... ... 
20000d98:	20000d90 20000d90                       ... ... 

20000da0 <__malloc_sbrk_base>:
20000da0:	ffffffff                                ....

20000da4 <__malloc_trim_threshold>:
20000da4:	00020000                                ....
